/* src/styles/CfgViewer.css */

/* General container for the entire CFG viewer */
.cfg-comparison-container {
    display: flex; /* Arranges the 'before' and 'after' graphs side-by-side */
    justify-content: space-around; /* Distributes space evenly */
    gap: 20px; /* Space between the two graph wrappers */
    width: 100%;
    padding: 10px;
    /*box-sizing: border-box; !* Include padding in the element's total width and height *!*/
}

/* Individual graph wrapper (for "Before" and "After" sections) */
.graph-wrapper {
    flex: 1; /* Allows each graph to grow and shrink to fill available space */
    display: flex;
    flex-direction: column; /* Stack heading and React Flow instance vertically */
    border: 1px solid #ddd;
    border-radius: 8px;
    overflow: hidden; /* Ensures nothing spills out */
    background-color: #f9f9f9;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.graph-wrapper h3 {
    text-align: center;
    padding: 10px 0;
    margin: 0; /* Remove default margin from h3 */
    background-color: #e0e0e0;
    border-bottom: 1px solid #ccc;
    color: #333;
    font-size: 1.2em;
}

/* React Flow instance container */
.react-flow-instance {
    flex-grow: 1; /* Makes the ReactFlow component fill the remaining space in its wrapper */
    height: 100%; /* Important: React Flow needs a defined height from its parent */
    width: 100%;
}

/* Messages when loading or no data */
.cfg-viewer-message,
.cfg-viewer-error {
    text-align: center;
    padding: 20px;
    font-size: 1.1em;
    color: #555;
    margin-top: 50px;
}

.cfg-viewer-error {
    color: #d9534f; /* Red for errors */
    font-weight: bold;
}

/* --- React Flow Node Styling (Default) --- */
/*
  These styles will apply to your 'default' type nodes.
  React Flow automatically applies a .react-flow__node class.
  You can also create custom node types and style them separately.
*/
.react-flow__node {
    padding: 10px 15px;
    border: 2px solid #5a5a5a;
    border-radius: 5px;
    background-color: #ffffff;
    font-family: 'Mono', monospace;
    font-size: 0.8em;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: left;
    white-space: pre-wrap;
    word-break: break-all;
    color: black;
    box-sizing: border-box; /* Keep this, it's crucial */

}

/* Specific styling for selected nodes */
.react-flow__node.selected {
    border: 2px solid #007bff; /* This border change is often the trigger */
}

/* --- IMPORTANT: Add rules for React Flow's internal pan/zoom elements --- */
/* These are the elements React Flow transforms for panning/zooming. */
/* Ensure no other CSS is interfering with them. */
/*.react-flow__pane,*/
/*.react-flow__viewport {*/
/*    transform: unset !important; !* Extremely important: React Flow sets this inline *!*/
/*    left: auto !important;       !* Prevent absolute positioning conflicts *!*/
/*    top: auto !important;        !* Prevent absolute positioning conflicts *!*/
/*    margin: 0 !important;        !* Prevent margin pushing the content *!*/
/*    width: auto !important;      !* Prevent fixed widths from conflicting with scaling *!*/
/*    height: auto !important;     !* Prevent fixed heights from conflicting with scaling *!*/
/*}*/
/* Specific styling for the 'box' shape if you use a custom node type for it */
/* If you use 'default' type for all, then the general .react-flow__node will apply.
   You could add a class to the node's data if you wanted different styles for 'box'
   without a custom node type.
.react-flow__node.box-shape {
  border-color: #007bff;
  background-color: #e6f2ff;
}
*/

/*!* --- React Flow Edge Styling --- *!*/
/*!* You can style different edge types if you have them *!*/
/*.react-flow__edge {*/
/*    stroke-width: 1.5px;*/
/*    stroke: #5a5a5a;*/
/*}*/

/*!* --- Diffing Styles (Future Use) --- *!*/
/*!**/
/*  These are placeholder styles for when you implement the diffing logic.*/
/*  You would add classes like 'node-added', 'node-removed', 'node-changed'*/
/*  directly to your React Flow Node objects based on your comparison.*/
/**!*/
/*.react-flow__node.node-added {*/
/*    background-color: #e6ffe6; !* Light green *!*/
/*    border-color: #4CAF50; !* Green border *!*/
/*    box-shadow: 0 0 8px rgba(76, 175, 80, 0.5);*/
/*}*/

/*.react-flow__node.node-removed {*/
/*    background-color: #ffe6e6; !* Light red *!*/
/*    border-color: #f44336; !* Red border *!*/
/*    box-shadow: 0 0 8px rgba(244, 67, 54, 0.5);*/
/*}*/

/*.react-flow__node.node-changed {*/
/*    background-color: #fffbe6; !* Light yellow *!*/
/*    border-color: #ffc107; !* Yellow border *!*/
/*    box-shadow: 0 0 8px rgba(255, 193, 7, 0.5);*/
/*}*/

/*.react-flow__edge.edge-added {*/
/*    stroke: #4CAF50;*/
/*    stroke-dasharray: 5 5; !* Dashed line for added edges *!*/
/*}*/

/*.react-flow__edge.edge-removed {*/
/*    stroke: #f44336;*/
/*    stroke-dasharray: 2 2; !* Dotted line for removed edges *!*/
/*}*/

/*.react-flow__edge.edge-changed {*/
/*    stroke: #ffc107;*/
/*    stroke-dasharray: 8 2; !* Custom dash for changed edges *!*/
/*}*/

/*!* Additional styling for controls, minimap etc. (optional) *!*/
/*.react-flow__controls {*/
/*    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);*/
/*}*/

/*.react-flow__minimap {*/
/*    background-color: #f0f0f0;*/
/*}*/

/*!* Ensure body and html are full height for the viewport height calculation to work *!*/
/*html, body, #root {*/
/*    margin: 0;*/
/*    padding: 0;*/
/*    height: 100%;*/
/*    font-family: Arial, sans-serif;*/
/*    overflow: hidden; !* Hide scrollbars on main body if React Flow handles them *!*/
/*}*/