00000807: program
000007ea: sub __cxa_finalize(__cxa_finalize_result)
00000808: __cxa_finalize_result :: out u32 = low:32[R0]

00000564:
00000645: R16 := 0x10000
0000064c: R17 := mem[R16 + 0xFA0, el]:u64
00000652: R16 := R16 + 0xFA0
00000657: call R17 with noreturn

000007eb: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
00000809: __do_global_dtors_aux_result :: out u32 = low:32[R0]

0000032c:
00000330: #5 := R31 - 0x20
00000336: mem := mem with [#5, el]:u64 <- R29
0000033c: mem := mem with [#5 + 8, el]:u64 <- R30
00000340: R31 := #5
00000346: R29 := R31
0000034e: mem := mem with [R31 + 0x10, el]:u64 <- R19
00000353: R19 := 0x11000
0000035a: R0 := pad:64[mem[R19 + 0x10]]
00000361: when 31:0[R0] <> 0 goto %0000035f
000007ec: goto %0000052d

0000052d:
00000530: R0 := 0x10000
00000537: R0 := mem[R0 + 0xFD8, el]:u64
0000053d: when R0 = 0 goto %0000053b
000007ed: goto %00000554

00000554:
00000557: R0 := 0x11000
0000055e: R0 := mem[R0 + 8, el]:u64
00000563: R30 := 0x700
00000566: call @__cxa_finalize with return %0000053b

0000053b:
00000543: R30 := 0x704
00000545: call @deregister_tm_clones with return %00000547

00000547:
0000054a: R0 := 1
00000552: mem := mem with [R19 + 0x10] <- 7:0[R0]
000007ee: goto %0000035f

0000035f:
00000369: R19 := mem[R31 + 0x10, el]:u64
00000370: R29 := mem[R31, el]:u64
00000375: R30 := mem[R31 + 8, el]:u64
00000379: R31 := R31 + 0x20
0000037e: call R30 with noreturn

000007ef: sub __libc_csu_fini(__libc_csu_fini_result)
0000080a: __libc_csu_fini_result :: out u32 = low:32[R0]

000004c0:
000004c3: call R30 with noreturn

000007f0: sub __libc_csu_init(__libc_csu_init_result)
0000080b: __libc_csu_init_result :: out u32 = low:32[R0]

000003cd:
000003d1: #7 := R31 - 0x40
000003d7: mem := mem with [#7, el]:u64 <- R29
000003dd: mem := mem with [#7 + 8, el]:u64 <- R30
000003e1: R31 := #7
000003e7: R29 := R31
000003ed: #8 := R31 + 0x10
000003f3: mem := mem with [#8, el]:u64 <- R19
000003f9: mem := mem with [#8 + 8, el]:u64 <- R20
000003fe: R20 := 0x10000
00000404: R20 := R20 + 0xD90
0000040a: #9 := R31 + 0x20
00000410: mem := mem with [#9, el]:u64 <- R21
00000416: mem := mem with [#9 + 8, el]:u64 <- R22
0000041b: R21 := 0x10000
00000421: R21 := R21 + 0xD88
00000428: R20 := R20 + ~R21 + 1
0000042e: R22 := pad:64[31:0[R0]]
00000434: #10 := R31 + 0x30
0000043a: mem := mem with [#10, el]:u64 <- R23
00000440: mem := mem with [#10 + 8, el]:u64 <- R24
00000446: R23 := R1
0000044c: R24 := R2
00000451: R30 := 0x780
00000454: call @_init with return %00000456

00000456:
0000045a: #11 := ~(R20 ~>> 3)
0000045e: #12 := ~(R20 ~>> 3) + 1
00000463: VF := extend:65[#12] <> extend:65[#11] + 1
00000468: CF := pad:65[#12] <> pad:65[#11] + 1
0000046c: ZF := #12 = 0
00000470: NF := 63:63[#12]
00000476: when ZF goto %00000474
000007f1: goto %000004c5

000004c5:
000004cb: R20 :=
          63:61[63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20]].60:0[R20
          >> 3 | R20 << 0x3D]
000004d0: R19 := 0
000007f2: goto %000004d2

000004d2:
000004d8: R3 := mem[R21 + (60:0[R19].0), el]:u64
000004de: R2 := R24
000004e4: R19 := R19 + 1
000004ea: R1 := R23
000004f0: R0 := pad:64[31:0[R22]]
000004f5: R30 := 0x7A8
000004f8: call R3 with return %000004fa

000004fa:
000004fe: #16 := ~R19
00000503: #17 := R20 + ~R19 + 1
00000509: VF := extend:65[#17] <> extend:65[R20] + extend:65[#16] + 1
0000050f: CF := pad:65[#17] <> pad:65[R20] + pad:65[#16] + 1
00000513: ZF := #17 = 0
00000517: NF := 63:63[#17]
0000051c: when ZF <> 1 goto %000004d2
000007f3: goto %00000474

00000474:
0000047d: #13 := R31 + 0x10
00000482: R19 := mem[#13, el]:u64
00000487: R20 := mem[#13 + 8, el]:u64
0000048d: #14 := R31 + 0x20
00000492: R21 := mem[#14, el]:u64
00000497: R22 := mem[#14 + 8, el]:u64
0000049d: #15 := R31 + 0x30
000004a2: R23 := mem[#15, el]:u64
000004a7: R24 := mem[#15 + 8, el]:u64
000004ae: R29 := mem[R31, el]:u64
000004b3: R30 := mem[R31 + 8, el]:u64
000004b7: R31 := R31 + 0x40
000004bc: call R30 with noreturn

000007f4: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
0000080c: __libc_start_main_main :: in u64 = R0
0000080d: __libc_start_main_arg2 :: in u32 = low:32[R1]
0000080e: __libc_start_main_arg3 :: in out u64 = R2
0000080f: __libc_start_main_auxv :: in out u64 = R3
00000810: __libc_start_main_result :: out u32 = low:32[R0]

0000026a:
0000065b: R16 := 0x10000
00000662: R17 := mem[R16 + 0xFA8, el]:u64
00000668: R16 := R16 + 0xFA8
0000066d: call R17 with noreturn

000007f5: sub _fini(_fini_result)
00000811: _fini_result :: out u32 = low:32[R0]

00000030:
00000034: #0 := R31 - 0x10
0000003a: mem := mem with [#0, el]:u64 <- R29
00000040: mem := mem with [#0 + 8, el]:u64 <- R30
00000044: R31 := #0
0000004a: R29 := R31
00000051: R29 := mem[R31, el]:u64
00000056: R30 := mem[R31 + 8, el]:u64
0000005a: R31 := R31 + 0x10
0000005f: call R30 with noreturn

000007f6: sub _init(_init_result)
00000812: _init_result :: out u32 = low:32[R0]

00000452:
00000729: #19 := R31 - 0x10
0000072f: mem := mem with [#19, el]:u64 <- R29
00000735: mem := mem with [#19 + 8, el]:u64 <- R30
00000739: R31 := #19
0000073f: R29 := R31
00000744: R30 := 0x5A4
00000746: call @call_weak_fn with return %00000748

00000748:
0000074d: R29 := mem[R31, el]:u64
00000752: R30 := mem[R31 + 8, el]:u64
00000756: R31 := R31 + 0x10
0000075b: call R30 with noreturn

000007f7: sub _start(_start_result)
00000813: _start_result :: out u32 = low:32[R0]

0000021f:
00000222: R29 := 0
00000227: R30 := 0
0000022d: R5 := R0
00000234: R1 := mem[R31, el]:u64
0000023a: R2 := R31 + 8
00000240: R6 := R31
00000245: R0 := 0x10000
0000024c: R0 := mem[R0 + 0xFF0, el]:u64
00000251: R3 := 0x10000
00000258: R3 := mem[R3 + 0xFE8, el]:u64
0000025d: R4 := 0x10000
00000264: R4 := mem[R4 + 0xFC8, el]:u64
00000269: R30 := 0x644
0000026c: call @__libc_start_main with return %0000026e

0000026e:
00000271: R30 := 0x648
00000274: call @abort with return %000007f8

000007f8:
000007f9: call @call_weak_fn with noreturn

000007fa: sub abort()


00000272:
00000687: R16 := 0x10000
0000068e: R17 := mem[R16 + 0xFB8, el]:u64
00000694: R16 := R16 + 0xFB8
00000699: call R17 with noreturn

000007fb: sub call_weak_fn(call_weak_fn_result)
00000814: call_weak_fn_result :: out u32 = low:32[R0]

00000276:
00000279: R0 := 0x10000
00000280: R0 := mem[R0 + 0xFE0, el]:u64
00000286: when R0 = 0 goto %00000284
000007fc: goto %000005a4

00000284:
0000028c: call R30 with noreturn

000005a4:
000005a7: goto @__gmon_start__

000005a5:
00000671: R16 := 0x10000
00000678: R17 := mem[R16 + 0xFB0, el]:u64
0000067e: R16 := R16 + 0xFB0
00000683: call R17 with noreturn

000007fd: sub deregister_tm_clones(deregister_tm_clones_result)
00000815: deregister_tm_clones_result :: out u32 = low:32[R0]

00000290:
00000293: R0 := 0x11000
00000299: R0 := R0 + 0x10
0000029e: R1 := 0x11000
000002a4: R1 := R1 + 0x10
000002aa: #1 := ~R0
000002af: #2 := R1 + ~R0 + 1
000002b5: VF := extend:65[#2] <> extend:65[R1] + extend:65[#1] + 1
000002bb: CF := pad:65[#2] <> pad:65[R1] + pad:65[#1] + 1
000002bf: ZF := #2 = 0
000002c3: NF := 63:63[#2]
000002c9: when ZF goto %000002c7
000007fe: goto %00000586

00000586:
00000589: R1 := 0x10000
00000590: R1 := mem[R1 + 0xFD0, el]:u64
00000595: when R1 = 0 goto %000002c7
000007ff: goto %00000599

000002c7:
000002cf: call R30 with noreturn

00000599:
0000059d: R16 := R1
000005a2: call R16 with noreturn

00000800: sub frame_dummy(frame_dummy_result)
00000816: frame_dummy_result :: out u32 = low:32[R0]

00000380:
00000382: call @register_tm_clones with noreturn

00000801: sub main(main_argc, main_argv, main_result)
00000817: main_argc :: in u32 = low:32[R0]
00000818: main_argv :: in out u64 = R1
00000819: main_result :: out u32 = low:32[R0]

00000384:
00000388: R31 := R31 - 0x10
0000038d: R0 := 5
00000395: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R0]
0000039c: R0 := pad:64[mem[R31 + 0xC, el]:u32]
000003a2: #6 := 31:0[R0] - 5
000003a7: VF := extend:33[#6] <> extend:33[31:0[R0]] - 5
000003ac: CF := pad:33[#6] <> pad:33[31:0[R0]] + 0xFFFFFFFB
000003b0: ZF := #6 = 0
000003b4: NF := 31:31[#6]
000003ba: when ZF <> 1 goto %000003b8
00000802: goto %00000520

00000520:
00000523: R0 := 6
0000052b: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R0]
00000803: goto %000003b8

000003b8:
000003c0: R0 := 0
000003c6: R31 := R31 + 0x10
000003cb: call R30 with noreturn

00000804: sub register_tm_clones(register_tm_clones_result)
0000081a: register_tm_clones_result :: out u32 = low:32[R0]

000002d1:
000002d4: R0 := 0x11000
000002da: R0 := R0 + 0x10
000002df: R1 := 0x11000
000002e5: R1 := R1 + 0x10
000002ec: R1 := R1 + ~R0 + 1
000002f3: R2 := 0.0:0[R1 >> 0x3F | R1 << 1]
000002fa: R1 := R2 + (R1 ~>> 3)
00000300: #3 := ~(R1 ~>> 1)
00000304: #4 := ~(R1 ~>> 1) + 1
00000309: VF := extend:65[#4] <> extend:65[#3] + 1
0000030e: CF := pad:65[#4] <> pad:65[#3] + 1
00000312: ZF := #4 = 0
00000316: NF := 63:63[#4]
0000031e: R1 :=

          >> 1 | R1 << 0x3F]
00000324: when ZF goto %00000322
00000805: goto %00000568

00000568:
0000056b: R2 := 0x10000
00000572: R2 := mem[R2 + 0xFF8, el]:u64
00000577: when R2 = 0 goto %00000322
00000806: goto %0000057b

00000322:
0000032a: call R30 with noreturn

0000057b:
0000057f: R16 := R2
00000584: call R16 with noreturn
