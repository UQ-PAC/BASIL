00000844: program
00000808: sub __cxa_finalize(__cxa_finalize_result)
00000845: __cxa_finalize_result :: out u32 = low:32[R0]

0000057a:
0000065b: R16 := 0x11000
00000662: R17 := mem[R16, el]:u64
00000668: R16 := R16
0000066d: call R17 with noreturn

00000809: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
00000846: __do_global_dtors_aux_result :: out u32 = low:32[R0]

0000033a:
0000033e: #5 := R31 - 0x20
00000344: mem := mem with [#5, el]:u64 <- R29
0000034a: mem := mem with [#5 + 8, el]:u64 <- R30
0000034e: R31 := #5
00000354: R29 := R31
0000035c: mem := mem with [R31 + 0x10, el]:u64 <- R19
00000361: R19 := 0x11000
00000368: R0 := pad:64[mem[R19 + 0x30]]
0000036f: when 31:0[R0] <> 0 goto %0000036d
00000837: goto %00000543

00000543:
00000546: R0 := 0x10000
0000054d: R0 := mem[R0 + 0xFC0, el]:u64
00000553: when R0 = 0 goto %00000551
00000838: goto %0000056a

0000056a:
0000056d: R0 := 0x11000
00000574: R0 := mem[R0 + 0x28, el]:u64
00000579: R30 := 0x700
0000057c: call @__cxa_finalize with return %00000551

00000551:
00000559: R30 := 0x704
0000055b: call @deregister_tm_clones with return %0000055d

0000055d:
00000560: R0 := 1
00000568: mem := mem with [R19 + 0x30] <- 7:0[R0]
00000839: goto %0000036d

0000036d:
00000377: R19 := mem[R31 + 0x10, el]:u64
0000037e: R29 := mem[R31, el]:u64
00000383: R30 := mem[R31 + 8, el]:u64
00000387: R31 := R31 + 0x20
0000038c: call R30 with noreturn

0000080d: sub __libc_csu_fini(__libc_csu_fini_result)
00000847: __libc_csu_fini_result :: out u32 = low:32[R0]

000004e3:
000004e6: call R30 with noreturn

0000080e: sub __libc_csu_init(__libc_csu_init_result)
00000848: __libc_csu_init_result :: out u32 = low:32[R0]

000003f0:
000003f4: #6 := R31 - 0x40
000003fa: mem := mem with [#6, el]:u64 <- R29
00000400: mem := mem with [#6 + 8, el]:u64 <- R30
00000404: R31 := #6
0000040a: R29 := R31
00000410: #7 := R31 + 0x10
00000416: mem := mem with [#7, el]:u64 <- R19
0000041c: mem := mem with [#7 + 8, el]:u64 <- R20
00000421: R20 := 0x10000
00000427: R20 := R20 + 0xDC0
0000042d: #8 := R31 + 0x20
00000433: mem := mem with [#8, el]:u64 <- R21
00000439: mem := mem with [#8 + 8, el]:u64 <- R22
0000043e: R21 := 0x10000
00000444: R21 := R21 + 0xDB8
0000044b: R20 := R20 + ~R21 + 1
00000451: R22 := pad:64[31:0[R0]]
00000457: #9 := R31 + 0x30
0000045d: mem := mem with [#9, el]:u64 <- R23
00000463: mem := mem with [#9 + 8, el]:u64 <- R24
00000469: R23 := R1
0000046f: R24 := R2
00000474: R30 := 0x790
00000477: call @_init with return %00000479

00000479:
0000047d: #10 := ~(R20 ~>> 3)
00000481: #11 := ~(R20 ~>> 3) + 1
00000486: VF := extend:65[#11] <> extend:65[#10] + 1
0000048b: CF := pad:65[#11] <> pad:65[#10] + 1
0000048f: ZF := #11 = 0
00000493: NF := 63:63[#11]
00000499: when ZF goto %00000497
0000083a: goto %000004e8

000004e8:
000004ee: R20 :=

          >> 3 | R20 << 0x3D]
000004f3: R19 := 0
0000083b: goto %000004f5

000004f5:
000004fb: R3 := mem[R21 + (60:0[R19].0), el]:u64
00000501: R2 := R24
00000507: R19 := R19 + 1
0000050d: R1 := R23
00000513: R0 := pad:64[31:0[R22]]
00000518: R30 := 0x7B8
0000051b: call R3 with return %0000051d

0000051d:
00000521: #15 := ~R19
00000526: #16 := R20 + ~R19 + 1
0000052c: VF := extend:65[#16] <> extend:65[R20] + extend:65[#15] + 1
00000532: CF := pad:65[#16] <> pad:65[R20] + pad:65[#15] + 1
00000536: ZF := #16 = 0
0000053a: NF := 63:63[#16]
0000053f: when ZF <> 1 goto %000004f5
0000083c: goto %00000497

00000497:
000004a0: #12 := R31 + 0x10
000004a5: R19 := mem[#12, el]:u64
000004aa: R20 := mem[#12 + 8, el]:u64
000004b0: #13 := R31 + 0x20
000004b5: R21 := mem[#13, el]:u64
000004ba: R22 := mem[#13 + 8, el]:u64
000004c0: #14 := R31 + 0x30
000004c5: R23 := mem[#14, el]:u64
000004ca: R24 := mem[#14 + 8, el]:u64
000004d1: R29 := mem[R31, el]:u64
000004d6: R30 := mem[R31 + 8, el]:u64
000004da: R31 := R31 + 0x40
000004df: call R30 with noreturn

00000812: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
00000849: __libc_start_main_main :: in u64 = R0
0000084a: __libc_start_main_arg2 :: in u32 = low:32[R1]
0000084b: __libc_start_main_arg3 :: in out u64 = R2
0000084c: __libc_start_main_auxv :: in out u64 = R3
0000084d: __libc_start_main_result :: out u32 = low:32[R0]

00000278:
00000671: R16 := 0x11000
00000678: R17 := mem[R16 + 8, el]:u64
0000067e: R16 := R16 + 8
00000683: call R17 with noreturn

00000813: sub _fini(_fini_result)
0000084e: _fini_result :: out u32 = low:32[R0]

0000002e:
00000032: #0 := R31 - 0x10
00000038: mem := mem with [#0, el]:u64 <- R29
0000003e: mem := mem with [#0 + 8, el]:u64 <- R30
00000042: R31 := #0
00000048: R29 := R31
0000004f: R29 := mem[R31, el]:u64
00000054: R30 := mem[R31 + 8, el]:u64
00000058: R31 := R31 + 0x10
0000005d: call R30 with noreturn

00000814: sub _init(_init_result)
0000084f: _init_result :: out u32 = low:32[R0]

00000475:
00000743: #18 := R31 - 0x10
00000749: mem := mem with [#18, el]:u64 <- R29
0000074f: mem := mem with [#18 + 8, el]:u64 <- R30
00000753: R31 := #18
00000759: R29 := R31
0000075e: R30 := 0x5A4
00000760: call @call_weak_fn with return %00000762

00000762:
00000767: R29 := mem[R31, el]:u64
0000076c: R30 := mem[R31 + 8, el]:u64
00000770: R31 := R31 + 0x10
00000775: call R30 with noreturn

00000815: sub _start(_start_result)
00000850: _start_result :: out u32 = low:32[R0]

0000022d:
00000230: R29 := 0
00000235: R30 := 0
0000023b: R5 := R0
00000242: R1 := mem[R31, el]:u64
00000248: R2 := R31 + 8
0000024e: R6 := R31
00000253: R0 := 0x10000
0000025a: R0 := mem[R0 + 0xFD8, el]:u64
0000025f: R3 := 0x10000
00000266: R3 := mem[R3 + 0xFD0, el]:u64
0000026b: R4 := 0x10000
00000272: R4 := mem[R4 + 0xFB0, el]:u64
00000277: R30 := 0x644
0000027a: call @__libc_start_main with return %0000027c

0000027c:
0000027f: R30 := 0x648
00000282: call @abort with return %0000083d

0000083d:
0000083e: call @call_weak_fn with noreturn

00000818: sub abort()


00000280:
0000069d: R16 := 0x11000
000006a4: R17 := mem[R16 + 0x18, el]:u64
000006aa: R16 := R16 + 0x18
000006af: call R17 with noreturn

00000819: sub call_weak_fn(call_weak_fn_result)
00000851: call_weak_fn_result :: out u32 = low:32[R0]

00000284:
00000287: R0 := 0x10000
0000028e: R0 := mem[R0 + 0xFC8, el]:u64
00000294: when R0 = 0 goto %00000292
0000083f: goto %000005ba

00000292:
0000029a: call R30 with noreturn

000005ba:
000005bd: goto @__gmon_start__

000005bb:
00000687: R16 := 0x11000
0000068e: R17 := mem[R16 + 0x10, el]:u64
00000694: R16 := R16 + 0x10
00000699: call R17 with noreturn

0000081b: sub deregister_tm_clones(deregister_tm_clones_result)
00000852: deregister_tm_clones_result :: out u32 = low:32[R0]

0000029e:
000002a1: R0 := 0x11000
000002a7: R0 := R0 + 0x30
000002ac: R1 := 0x11000
000002b2: R1 := R1 + 0x30
000002b8: #1 := ~R0
000002bd: #2 := R1 + ~R0 + 1
000002c3: VF := extend:65[#2] <> extend:65[R1] + extend:65[#1] + 1
000002c9: CF := pad:65[#2] <> pad:65[R1] + pad:65[#1] + 1
000002cd: ZF := #2 = 0
000002d1: NF := 63:63[#2]
000002d7: when ZF goto %000002d5
00000840: goto %0000059c

0000059c:
0000059f: R1 := 0x10000
000005a6: R1 := mem[R1 + 0xFB8, el]:u64
000005ab: when R1 = 0 goto %000002d5
00000841: goto %000005af

000002d5:
000002dd: call R30 with noreturn

000005af:
000005b3: R16 := R1
000005b8: call R16 with noreturn

0000081e: sub frame_dummy(frame_dummy_result)
00000853: frame_dummy_result :: out u32 = low:32[R0]

0000038e:
00000390: call @register_tm_clones with noreturn

0000081f: sub main(main_argc, main_argv, main_result)
00000854: main_argc :: in u32 = low:32[R0]
00000855: main_argv :: in out u64 = R1
00000856: main_result :: out u32 = low:32[R0]

00000392:
00000395: R10 := 0x11000
0000039c: R9 := pad:64[mem[R10 + 0x34, el]:u32]
000003a1: R8 := 0x11000
000003a9: mem := mem with [R8 + 0x38, el]:u32 <- 31:0[R9]
000003ae: R0 := 0
000003b5: mem := mem with [R8 + 0x38, el]:u32 <- 0
000003bc: R11 := pad:64[mem[R8 + 0x38, el]:u32]
000003c1: R9 := 0x11000
000003c9: mem := mem with [R9 + 0x3C, el]:u32 <- 31:0[R11]
000003d0: R10 := pad:64[mem[R10 + 0x34, el]:u32]
000003d8: mem := mem with [R8 + 0x38, el]:u32 <- 31:0[R10]
000003df: R8 := pad:64[mem[R8 + 0x38, el]:u32]
000003e7: mem := mem with [R9 + 0x3C, el]:u32 <- 31:0[R8]
000003ec: call R30 with noreturn

00000820: sub register_tm_clones(register_tm_clones_result)
00000857: register_tm_clones_result :: out u32 = low:32[R0]

000002df:
000002e2: R0 := 0x11000
000002e8: R0 := R0 + 0x30
000002ed: R1 := 0x11000
000002f3: R1 := R1 + 0x30
000002fa: R1 := R1 + ~R0 + 1
00000301: R2 := 0.0:0[R1 >> 0x3F | R1 << 1]
00000308: R1 := R2 + (R1 ~>> 3)
0000030e: #3 := ~(R1 ~>> 1)
00000312: #4 := ~(R1 ~>> 1) + 1
00000317: VF := extend:65[#4] <> extend:65[#3] + 1
0000031c: CF := pad:65[#4] <> pad:65[#3] + 1
00000320: ZF := #4 = 0
00000324: NF := 63:63[#4]
0000032c: R1 :=
          63:63[63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1]].62:0[R1
          >> 1 | R1 << 0x3F]
00000332: when ZF goto %00000330
00000842: goto %0000057e

0000057e:
00000581: R2 := 0x10000
00000588: R2 := mem[R2 + 0xFE0, el]:u64
0000058d: when R2 = 0 goto %00000330
00000843: goto %00000591

00000330:
00000338: call R30 with noreturn

00000591:
00000595: R16 := R2
0000059a: call R16 with noreturn
