000007d8: program
000007bd: sub __cxa_finalize(__cxa_finalize_result)
000007d9: __cxa_finalize_result :: out u32 = low:32[R0]

0000053b:
0000061c: R16 := 0x10000
00000623: R17 := mem[R16 + 0xFA0, el]:u64
00000629: R16 := R16 + 0xFA0
0000062e: call R17 with noreturn

000007be: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
000007da: __do_global_dtors_aux_result :: out u32 = low:32[R0]

00000324:
00000328: #5 := R31 - 0x20
0000032e: mem := mem with [#5, el]:u64 <- R29
00000334: mem := mem with [#5 + 8, el]:u64 <- R30
00000338: R31 := #5
0000033e: R29 := R31
00000346: mem := mem with [R31 + 0x10, el]:u64 <- R19
0000034b: R19 := 0x11000
00000352: R0 := pad:64[mem[R19 + 0x10]]
00000359: when 31:0[R0] <> 0 goto %00000357
000007bf: goto %00000504

00000504:
00000507: R0 := 0x10000
0000050e: R0 := mem[R0 + 0xFD8, el]:u64
00000514: when R0 = 0 goto %00000512
000007c0: goto %0000052b

0000052b:
0000052e: R0 := 0x11000
00000535: R0 := mem[R0 + 8, el]:u64
0000053a: R30 := 0x700
0000053d: call @__cxa_finalize with return %00000512

00000512:
0000051a: R30 := 0x704
0000051c: call @deregister_tm_clones with return %0000051e

0000051e:
00000521: R0 := 1
00000529: mem := mem with [R19 + 0x10] <- 7:0[R0]
000007c1: goto %00000357

00000357:
00000361: R19 := mem[R31 + 0x10, el]:u64
00000368: R29 := mem[R31, el]:u64
0000036d: R30 := mem[R31 + 8, el]:u64
00000371: R31 := R31 + 0x20
00000376: call R30 with noreturn

000007c2: sub __libc_csu_fini(__libc_csu_fini_result)
000007db: __libc_csu_fini_result :: out u32 = low:32[R0]

000004a4:
000004a7: call R30 with noreturn

000007c3: sub __libc_csu_init(__libc_csu_init_result)
000007dc: __libc_csu_init_result :: out u32 = low:32[R0]

000003b1:
000003b5: #6 := R31 - 0x40
000003bb: mem := mem with [#6, el]:u64 <- R29
000003c1: mem := mem with [#6 + 8, el]:u64 <- R30
000003c5: R31 := #6
000003cb: R29 := R31
000003d1: #7 := R31 + 0x10
000003d7: mem := mem with [#7, el]:u64 <- R19
000003dd: mem := mem with [#7 + 8, el]:u64 <- R20
000003e2: R20 := 0x10000
000003e8: R20 := R20 + 0xD90
000003ee: #8 := R31 + 0x20
000003f4: mem := mem with [#8, el]:u64 <- R21
000003fa: mem := mem with [#8 + 8, el]:u64 <- R22
000003ff: R21 := 0x10000
00000405: R21 := R21 + 0xD88
0000040c: R20 := R20 + ~R21 + 1
00000412: R22 := pad:64[31:0[R0]]
00000418: #9 := R31 + 0x30
0000041e: mem := mem with [#9, el]:u64 <- R23
00000424: mem := mem with [#9 + 8, el]:u64 <- R24
0000042a: R23 := R1
00000430: R24 := R2
00000435: R30 := 0x778
00000438: call @_init with return %0000043a

0000043a:
0000043e: #10 := ~(R20 ~>> 3)
00000442: #11 := ~(R20 ~>> 3) + 1
00000447: VF := extend:65[#11] <> extend:65[#10] + 1
0000044c: CF := pad:65[#11] <> pad:65[#10] + 1
00000450: ZF := #11 = 0
00000454: NF := 63:63[#11]
0000045a: when ZF goto %00000458
000007c4: goto %000004a9

000004a9:
000004af: R20 :=

          >> 3 | R20 << 0x3D]
000004b4: R19 := 0
000007c5: goto %000004b6

000004b6:
000004bc: R3 := mem[R21 + (60:0[R19].0), el]:u64
000004c2: R2 := R24
000004c8: R19 := R19 + 1
000004ce: R1 := R23
000004d4: R0 := pad:64[31:0[R22]]
000004d9: R30 := 0x7A0
000004dc: call R3 with return %000004de

000004de:
000004e2: #15 := ~R19
000004e7: #16 := R20 + ~R19 + 1
000004ed: VF := extend:65[#16] <> extend:65[R20] + extend:65[#15] + 1
000004f3: CF := pad:65[#16] <> pad:65[R20] + pad:65[#15] + 1
000004f7: ZF := #16 = 0
000004fb: NF := 63:63[#16]
00000500: when ZF <> 1 goto %000004b6
000007c6: goto %00000458

00000458:
00000461: #12 := R31 + 0x10
00000466: R19 := mem[#12, el]:u64
0000046b: R20 := mem[#12 + 8, el]:u64
00000471: #13 := R31 + 0x20
00000476: R21 := mem[#13, el]:u64
0000047b: R22 := mem[#13 + 8, el]:u64
00000481: #14 := R31 + 0x30
00000486: R23 := mem[#14, el]:u64
0000048b: R24 := mem[#14 + 8, el]:u64
00000492: R29 := mem[R31, el]:u64
00000497: R30 := mem[R31 + 8, el]:u64
0000049b: R31 := R31 + 0x40
000004a0: call R30 with noreturn

000007c7: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
000007dd: __libc_start_main_main :: in u64 = R0
000007de: __libc_start_main_arg2 :: in u32 = low:32[R1]
000007df: __libc_start_main_arg3 :: in out u64 = R2
000007e0: __libc_start_main_auxv :: in out u64 = R3
000007e1: __libc_start_main_result :: out u32 = low:32[R0]

00000262:
00000632: R16 := 0x10000
00000639: R17 := mem[R16 + 0xFA8, el]:u64
0000063f: R16 := R16 + 0xFA8
00000644: call R17 with noreturn

000007c8: sub _fini(_fini_result)
000007e2: _fini_result :: out u32 = low:32[R0]

00000030:
00000034: #0 := R31 - 0x10
0000003a: mem := mem with [#0, el]:u64 <- R29
00000040: mem := mem with [#0 + 8, el]:u64 <- R30
00000044: R31 := #0
0000004a: R29 := R31
00000051: R29 := mem[R31, el]:u64
00000056: R30 := mem[R31 + 8, el]:u64
0000005a: R31 := R31 + 0x10
0000005f: call R30 with noreturn

000007c9: sub _init(_init_result)
000007e3: _init_result :: out u32 = low:32[R0]

00000436:
000006fe: #18 := R31 - 0x10
00000704: mem := mem with [#18, el]:u64 <- R29
0000070a: mem := mem with [#18 + 8, el]:u64 <- R30
0000070e: R31 := #18
00000714: R29 := R31
00000719: R30 := 0x5A4
0000071b: call @call_weak_fn with return %0000071d

0000071d:
00000722: R29 := mem[R31, el]:u64
00000727: R30 := mem[R31 + 8, el]:u64
0000072b: R31 := R31 + 0x10
00000730: call R30 with noreturn

000007ca: sub _start(_start_result)
000007e4: _start_result :: out u32 = low:32[R0]

00000217:
0000021a: R29 := 0
0000021f: R30 := 0
00000225: R5 := R0
0000022c: R1 := mem[R31, el]:u64
00000232: R2 := R31 + 8
00000238: R6 := R31
0000023d: R0 := 0x10000
00000244: R0 := mem[R0 + 0xFF0, el]:u64
00000249: R3 := 0x10000
00000250: R3 := mem[R3 + 0xFE8, el]:u64
00000255: R4 := 0x10000
0000025c: R4 := mem[R4 + 0xFC8, el]:u64
00000261: R30 := 0x644
00000264: call @__libc_start_main with return %00000266

00000266:
00000269: R30 := 0x648
0000026c: call @abort with return %000007cb

000007cb:
000007cc: call @call_weak_fn with noreturn

000007cd: sub abort()


0000026a:
0000065e: R16 := 0x10000
00000665: R17 := mem[R16 + 0xFB8, el]:u64
0000066b: R16 := R16 + 0xFB8
00000670: call R17 with noreturn

000007ce: sub call_weak_fn(call_weak_fn_result)
000007e5: call_weak_fn_result :: out u32 = low:32[R0]

0000026e:
00000271: R0 := 0x10000
00000278: R0 := mem[R0 + 0xFE0, el]:u64
0000027e: when R0 = 0 goto %0000027c
000007cf: goto %0000057b

0000027c:
00000284: call R30 with noreturn

0000057b:
0000057e: goto @__gmon_start__

0000057c:
00000648: R16 := 0x10000
0000064f: R17 := mem[R16 + 0xFB0, el]:u64
00000655: R16 := R16 + 0xFB0
0000065a: call R17 with noreturn

000007d0: sub deregister_tm_clones(deregister_tm_clones_result)
000007e6: deregister_tm_clones_result :: out u32 = low:32[R0]

00000288:
0000028b: R0 := 0x11000
00000291: R0 := R0 + 0x10
00000296: R1 := 0x11000
0000029c: R1 := R1 + 0x10
000002a2: #1 := ~R0
000002a7: #2 := R1 + ~R0 + 1
000002ad: VF := extend:65[#2] <> extend:65[R1] + extend:65[#1] + 1
000002b3: CF := pad:65[#2] <> pad:65[R1] + pad:65[#1] + 1
000002b7: ZF := #2 = 0
000002bb: NF := 63:63[#2]
000002c1: when ZF goto %000002bf
000007d1: goto %0000055d

0000055d:
00000560: R1 := 0x10000
00000567: R1 := mem[R1 + 0xFD0, el]:u64
0000056c: when R1 = 0 goto %000002bf
000007d2: goto %00000570

000002bf:
000002c7: call R30 with noreturn

00000570:
00000574: R16 := R1
00000579: call R16 with noreturn

000007d3: sub frame_dummy(frame_dummy_result)
000007e7: frame_dummy_result :: out u32 = low:32[R0]

00000378:
0000037a: call @register_tm_clones with noreturn

000007d4: sub main(main_argc, main_argv, main_result)
000007e8: main_argc :: in u32 = low:32[R0]
000007e9: main_argv :: in out u64 = R1
000007ea: main_result :: out u32 = low:32[R0]

0000037c:
0000037f: R0 := 0x11000
00000385: R0 := R0 + 0x14
0000038c: R0 := pad:64[mem[R0, el]:u32]
00000392: R1 := pad:64[31:0[R0] + 1]
00000397: R0 := 0x11000
0000039d: R0 := R0 + 0x14
000003a5: mem := mem with [R0, el]:u32 <- 31:0[R1]
000003aa: R0 := 0
000003af: call R30 with noreturn

000007d5: sub register_tm_clones(register_tm_clones_result)
000007eb: register_tm_clones_result :: out u32 = low:32[R0]

000002c9:
000002cc: R0 := 0x11000
000002d2: R0 := R0 + 0x10
000002d7: R1 := 0x11000
000002dd: R1 := R1 + 0x10
000002e4: R1 := R1 + ~R0 + 1
000002eb: R2 := 0.0:0[R1 >> 0x3F | R1 << 1]
000002f2: R1 := R2 + (R1 ~>> 3)
000002f8: #3 := ~(R1 ~>> 1)
000002fc: #4 := ~(R1 ~>> 1) + 1
00000301: VF := extend:65[#4] <> extend:65[#3] + 1
00000306: CF := pad:65[#4] <> pad:65[#3] + 1
0000030a: ZF := #4 = 0
0000030e: NF := 63:63[#4]
00000316: R1 :=

          >> 1 | R1 << 0x3F]
0000031c: when ZF goto %0000031a
000007d6: goto %0000053f

0000053f:
00000542: R2 := 0x10000
00000549: R2 := mem[R2 + 0xFF8, el]:u64
0000054e: when R2 = 0 goto %0000031a
000007d7: goto %00000552

0000031a:
00000322: call R30 with noreturn

00000552:
00000556: R16 := R2
0000055b: call R16 with noreturn
