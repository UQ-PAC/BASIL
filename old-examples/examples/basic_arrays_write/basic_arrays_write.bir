000007db: program
000007c0: sub __cxa_finalize(__cxa_finalize_result)
000007dc: __cxa_finalize_result :: out u32 = low:32[R0]

0000053e:
0000061f: R16 := 0x10000
00000626: R17 := mem[R16 + 0xFA0, el]:u64
0000062c: R16 := R16 + 0xFA0
00000631: call R17 with noreturn

000007c1: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
000007dd: __do_global_dtors_aux_result :: out u32 = low:32[R0]

00000324:
00000328: #5 := R31 - 0x20
0000032e: mem := mem with [#5, el]:u64 <- R29
00000334: mem := mem with [#5 + 8, el]:u64 <- R30
00000338: R31 := #5
0000033e: R29 := R31
00000346: mem := mem with [R31 + 0x10, el]:u64 <- R19
0000034b: R19 := 0x11000
00000352: R0 := pad:64[mem[R19 + 0x10]]
00000359: when 31:0[R0] <> 0 goto %00000357
000007c2: goto %00000507

00000507:
0000050a: R0 := 0x10000
00000511: R0 := mem[R0 + 0xFD8, el]:u64
00000517: when R0 = 0 goto %00000515
000007c3: goto %0000052e

0000052e:
00000531: R0 := 0x11000
00000538: R0 := mem[R0 + 8, el]:u64
0000053d: R30 := 0x700
00000540: call @__cxa_finalize with return %00000515

00000515:
0000051d: R30 := 0x704
0000051f: call @deregister_tm_clones with return %00000521

00000521:
00000524: R0 := 1
0000052c: mem := mem with [R19 + 0x10] <- 7:0[R0]
000007c4: goto %00000357

00000357:
00000361: R19 := mem[R31 + 0x10, el]:u64
00000368: R29 := mem[R31, el]:u64
0000036d: R30 := mem[R31 + 8, el]:u64
00000371: R31 := R31 + 0x20
00000376: call R30 with noreturn

000007c5: sub __libc_csu_fini(__libc_csu_fini_result)
000007de: __libc_csu_fini_result :: out u32 = low:32[R0]

000004a7:
000004aa: call R30 with noreturn

000007c6: sub __libc_csu_init(__libc_csu_init_result)
000007df: __libc_csu_init_result :: out u32 = low:32[R0]

000003b4:
000003b8: #6 := R31 - 0x40
000003be: mem := mem with [#6, el]:u64 <- R29
000003c4: mem := mem with [#6 + 8, el]:u64 <- R30
000003c8: R31 := #6
000003ce: R29 := R31
000003d4: #7 := R31 + 0x10
000003da: mem := mem with [#7, el]:u64 <- R19
000003e0: mem := mem with [#7 + 8, el]:u64 <- R20
000003e5: R20 := 0x10000
000003eb: R20 := R20 + 0xD90
000003f1: #8 := R31 + 0x20
000003f7: mem := mem with [#8, el]:u64 <- R21
000003fd: mem := mem with [#8 + 8, el]:u64 <- R22
00000402: R21 := 0x10000
00000408: R21 := R21 + 0xD88
0000040f: R20 := R20 + ~R21 + 1
00000415: R22 := pad:64[31:0[R0]]
0000041b: #9 := R31 + 0x30
00000421: mem := mem with [#9, el]:u64 <- R23
00000427: mem := mem with [#9 + 8, el]:u64 <- R24
0000042d: R23 := R1
00000433: R24 := R2
00000438: R30 := 0x778
0000043b: call @_init with return %0000043d

0000043d:
00000441: #10 := ~(R20 ~>> 3)
00000445: #11 := ~(R20 ~>> 3) + 1
0000044a: VF := extend:65[#11] <> extend:65[#10] + 1
0000044f: CF := pad:65[#11] <> pad:65[#10] + 1
00000453: ZF := #11 = 0
00000457: NF := 63:63[#11]
0000045d: when ZF goto %0000045b
000007c7: goto %000004ac

000004ac:
000004b2: R20 :=

          >> 3 | R20 << 0x3D]
000004b7: R19 := 0
000007c8: goto %000004b9

000004b9:
000004bf: R3 := mem[R21 + (60:0[R19].0), el]:u64
000004c5: R2 := R24
000004cb: R19 := R19 + 1
000004d1: R1 := R23
000004d7: R0 := pad:64[31:0[R22]]
000004dc: R30 := 0x7A0
000004df: call R3 with return %000004e1

000004e1:
000004e5: #15 := ~R19
000004ea: #16 := R20 + ~R19 + 1
000004f0: VF := extend:65[#16] <> extend:65[R20] + extend:65[#15] + 1
000004f6: CF := pad:65[#16] <> pad:65[R20] + pad:65[#15] + 1
000004fa: ZF := #16 = 0
000004fe: NF := 63:63[#16]
00000503: when ZF <> 1 goto %000004b9
000007c9: goto %0000045b

0000045b:
00000464: #12 := R31 + 0x10
00000469: R19 := mem[#12, el]:u64
0000046e: R20 := mem[#12 + 8, el]:u64
00000474: #13 := R31 + 0x20
00000479: R21 := mem[#13, el]:u64
0000047e: R22 := mem[#13 + 8, el]:u64
00000484: #14 := R31 + 0x30
00000489: R23 := mem[#14, el]:u64
0000048e: R24 := mem[#14 + 8, el]:u64
00000495: R29 := mem[R31, el]:u64
0000049a: R30 := mem[R31 + 8, el]:u64
0000049e: R31 := R31 + 0x40
000004a3: call R30 with noreturn

000007ca: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
000007e0: __libc_start_main_main :: in u64 = R0
000007e1: __libc_start_main_arg2 :: in u32 = low:32[R1]
000007e2: __libc_start_main_arg3 :: in out u64 = R2
000007e3: __libc_start_main_auxv :: in out u64 = R3
000007e4: __libc_start_main_result :: out u32 = low:32[R0]

00000262:
00000635: R16 := 0x10000
0000063c: R17 := mem[R16 + 0xFA8, el]:u64
00000642: R16 := R16 + 0xFA8
00000647: call R17 with noreturn

000007cb: sub _fini(_fini_result)
000007e5: _fini_result :: out u32 = low:32[R0]

00000030:
00000034: #0 := R31 - 0x10
0000003a: mem := mem with [#0, el]:u64 <- R29
00000040: mem := mem with [#0 + 8, el]:u64 <- R30
00000044: R31 := #0
0000004a: R29 := R31
00000051: R29 := mem[R31, el]:u64
00000056: R30 := mem[R31 + 8, el]:u64
0000005a: R31 := R31 + 0x10
0000005f: call R30 with noreturn

000007cc: sub _init(_init_result)
000007e6: _init_result :: out u32 = low:32[R0]

00000439:
00000701: #18 := R31 - 0x10
00000707: mem := mem with [#18, el]:u64 <- R29
0000070d: mem := mem with [#18 + 8, el]:u64 <- R30
00000711: R31 := #18
00000717: R29 := R31
0000071c: R30 := 0x5A4
0000071e: call @call_weak_fn with return %00000720

00000720:
00000725: R29 := mem[R31, el]:u64
0000072a: R30 := mem[R31 + 8, el]:u64
0000072e: R31 := R31 + 0x10
00000733: call R30 with noreturn

000007cd: sub _start(_start_result)
000007e7: _start_result :: out u32 = low:32[R0]

00000217:
0000021a: R29 := 0
0000021f: R30 := 0
00000225: R5 := R0
0000022c: R1 := mem[R31, el]:u64
00000232: R2 := R31 + 8
00000238: R6 := R31
0000023d: R0 := 0x10000
00000244: R0 := mem[R0 + 0xFF0, el]:u64
00000249: R3 := 0x10000
00000250: R3 := mem[R3 + 0xFE8, el]:u64
00000255: R4 := 0x10000
0000025c: R4 := mem[R4 + 0xFC8, el]:u64
00000261: R30 := 0x644
00000264: call @__libc_start_main with return %00000266

00000266:
00000269: R30 := 0x648
0000026c: call @abort with return %000007ce

000007ce:
000007cf: call @call_weak_fn with noreturn

000007d0: sub abort()


0000026a:
00000661: R16 := 0x10000
00000668: R17 := mem[R16 + 0xFB8, el]:u64
0000066e: R16 := R16 + 0xFB8
00000673: call R17 with noreturn

000007d1: sub call_weak_fn(call_weak_fn_result)
000007e8: call_weak_fn_result :: out u32 = low:32[R0]

0000026e:
00000271: R0 := 0x10000
00000278: R0 := mem[R0 + 0xFE0, el]:u64
0000027e: when R0 = 0 goto %0000027c
000007d2: goto %0000057e

0000027c:
00000284: call R30 with noreturn

0000057e:
00000581: goto @__gmon_start__

0000057f:
0000064b: R16 := 0x10000
00000652: R17 := mem[R16 + 0xFB0, el]:u64
00000658: R16 := R16 + 0xFB0
0000065d: call R17 with noreturn

000007d3: sub deregister_tm_clones(deregister_tm_clones_result)
000007e9: deregister_tm_clones_result :: out u32 = low:32[R0]

00000288:
0000028b: R0 := 0x11000
00000291: R0 := R0 + 0x10
00000296: R1 := 0x11000
0000029c: R1 := R1 + 0x10
000002a2: #1 := ~R0
000002a7: #2 := R1 + ~R0 + 1
000002ad: VF := extend:65[#2] <> extend:65[R1] + extend:65[#1] + 1
000002b3: CF := pad:65[#2] <> pad:65[R1] + pad:65[#1] + 1
000002b7: ZF := #2 = 0
000002bb: NF := 63:63[#2]
000002c1: when ZF goto %000002bf
000007d4: goto %00000560

00000560:
00000563: R1 := 0x10000
0000056a: R1 := mem[R1 + 0xFD0, el]:u64
0000056f: when R1 = 0 goto %000002bf
000007d5: goto %00000573

000002bf:
000002c7: call R30 with noreturn

00000573:
00000577: R16 := R1
0000057c: call R16 with noreturn

000007d6: sub frame_dummy(frame_dummy_result)
000007ea: frame_dummy_result :: out u32 = low:32[R0]

00000378:
0000037a: call @register_tm_clones with noreturn

000007d7: sub main(main_argc, main_argv, main_result)
000007eb: main_argc :: in u32 = low:32[R0]
000007ec: main_argv :: in out u64 = R1
000007ed: main_result :: out u32 = low:32[R0]

0000037c:
00000380: R31 := R31 - 0x10
00000388: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R0]
0000038d: R0 := 0x11000
00000393: R0 := R0 + 0x18
0000039a: R1 := pad:64[mem[R31 + 0xC, el]:u32]
000003a2: mem := mem with [R0 + 4, el]:u32 <- 31:0[R1]
000003a7: R0 := 0
000003ad: R31 := R31 + 0x10
000003b2: call R30 with noreturn

000007d8: sub register_tm_clones(register_tm_clones_result)
000007ee: register_tm_clones_result :: out u32 = low:32[R0]

000002c9:
000002cc: R0 := 0x11000
000002d2: R0 := R0 + 0x10
000002d7: R1 := 0x11000
000002dd: R1 := R1 + 0x10
000002e4: R1 := R1 + ~R0 + 1
000002eb: R2 := 0.0:0[R1 >> 0x3F | R1 << 1]
000002f2: R1 := R2 + (R1 ~>> 3)
000002f8: #3 := ~(R1 ~>> 1)
000002fc: #4 := ~(R1 ~>> 1) + 1
00000301: VF := extend:65[#4] <> extend:65[#3] + 1
00000306: CF := pad:65[#4] <> pad:65[#3] + 1
0000030a: ZF := #4 = 0
0000030e: NF := 63:63[#4]
00000316: R1 :=

          >> 1 | R1 << 0x3F]
0000031c: when ZF goto %0000031a
000007d9: goto %00000542

00000542:
00000545: R2 := 0x10000
0000054c: R2 := mem[R2 + 0xFF8, el]:u64
00000551: when R2 = 0 goto %0000031a
000007da: goto %00000555

0000031a:
00000322: call R30 with noreturn

00000555:
00000559: R16 := R2
0000055e: call R16 with noreturn
