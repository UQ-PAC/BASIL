00000886: program
0000086a: sub __cxa_finalize(__cxa_finalize_result)
00000887: __cxa_finalize_result :: out u32 = low:32[R0]

000005d0:
000006b1: R16 := 0x11000
000006b8: R17 := mem[R16, el]:u64
000006be: R16 := R16
000006c3: call R17 with noreturn

0000086b: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
00000888: __do_global_dtors_aux_result :: out u32 = low:32[R0]

00000354:
00000358: #5 := R31 - 0x20
0000035e: mem := mem with [#5, el]:u64 <- R29
00000364: mem := mem with [#5 + 8, el]:u64 <- R30
00000368: R31 := #5
0000036e: R29 := R31
00000376: mem := mem with [R31 + 0x10, el]:u64 <- R19
0000037b: R19 := 0x11000
00000382: R0 := pad:64[mem[R19 + 0x30]]
00000389: when 31:0[R0] <> 0 goto %00000387
0000086c: goto %00000599

00000599:
0000059c: R0 := 0x10000
000005a3: R0 := mem[R0 + 0xFC0, el]:u64
000005a9: when R0 = 0 goto %000005a7
0000086d: goto %000005c0

000005c0:
000005c3: R0 := 0x11000
000005ca: R0 := mem[R0 + 0x28, el]:u64
000005cf: R30 := 0x700
000005d2: call @__cxa_finalize with return %000005a7

000005a7:
000005af: R30 := 0x704
000005b1: call @deregister_tm_clones with return %000005b3

000005b3:
000005b6: R0 := 1
000005be: mem := mem with [R19 + 0x30] <- 7:0[R0]
0000086e: goto %00000387

00000387:
00000391: R19 := mem[R31 + 0x10, el]:u64
00000398: R29 := mem[R31, el]:u64
0000039d: R30 := mem[R31 + 8, el]:u64
000003a1: R31 := R31 + 0x20
000003a6: call R30 with noreturn

0000086f: sub __libc_csu_fini(__libc_csu_fini_result)
00000889: __libc_csu_fini_result :: out u32 = low:32[R0]

0000051f:
00000522: call R30 with noreturn

00000870: sub __libc_csu_init(__libc_csu_init_result)
0000088a: __libc_csu_init_result :: out u32 = low:32[R0]

0000042c:
00000430: #7 := R31 - 0x40
00000436: mem := mem with [#7, el]:u64 <- R29
0000043c: mem := mem with [#7 + 8, el]:u64 <- R30
00000440: R31 := #7
00000446: R29 := R31
0000044c: #8 := R31 + 0x10
00000452: mem := mem with [#8, el]:u64 <- R19
00000458: mem := mem with [#8 + 8, el]:u64 <- R20
0000045d: R20 := 0x10000
00000463: R20 := R20 + 0xDC0
00000469: #9 := R31 + 0x20
0000046f: mem := mem with [#9, el]:u64 <- R21
00000475: mem := mem with [#9 + 8, el]:u64 <- R22
0000047a: R21 := 0x10000
00000480: R21 := R21 + 0xDB8
00000487: R20 := R20 + ~R21 + 1
0000048d: R22 := pad:64[31:0[R0]]
00000493: #10 := R31 + 0x30
00000499: mem := mem with [#10, el]:u64 <- R23
0000049f: mem := mem with [#10 + 8, el]:u64 <- R24
000004a5: R23 := R1
000004ab: R24 := R2
000004b0: R30 := 0x7A8
000004b3: call @_init with return %000004b5

000004b5:
000004b9: #11 := ~(R20 ~>> 3)
000004bd: #12 := ~(R20 ~>> 3) + 1
000004c2: VF := extend:65[#12] <> extend:65[#11] + 1
000004c7: CF := pad:65[#12] <> pad:65[#11] + 1
000004cb: ZF := #12 = 0
000004cf: NF := 63:63[#12]
000004d5: when ZF goto %000004d3
00000871: goto %00000524

00000524:
0000052a: R20 :=

          >> 3 | R20 << 0x3D]
0000052f: R19 := 0
00000872: goto %00000531

00000531:
00000537: R3 := mem[R21 + (60:0[R19].0), el]:u64
0000053d: R2 := R24
00000543: R19 := R19 + 1
00000549: R1 := R23
0000054f: R0 := pad:64[31:0[R22]]
00000554: R30 := 0x7D0
00000557: call R3 with return %00000559

00000559:
0000055d: #16 := ~R19
00000562: #17 := R20 + ~R19 + 1
00000568: VF := extend:65[#17] <> extend:65[R20] + extend:65[#16] + 1
0000056e: CF := pad:65[#17] <> pad:65[R20] + pad:65[#16] + 1
00000572: ZF := #17 = 0
00000576: NF := 63:63[#17]
0000057b: when ZF <> 1 goto %00000531
00000873: goto %000004d3

000004d3:
000004dc: #13 := R31 + 0x10
000004e1: R19 := mem[#13, el]:u64
000004e6: R20 := mem[#13 + 8, el]:u64
000004ec: #14 := R31 + 0x20
000004f1: R21 := mem[#14, el]:u64
000004f6: R22 := mem[#14 + 8, el]:u64
000004fc: #15 := R31 + 0x30
00000501: R23 := mem[#15, el]:u64
00000506: R24 := mem[#15 + 8, el]:u64
0000050d: R29 := mem[R31, el]:u64
00000512: R30 := mem[R31 + 8, el]:u64
00000516: R31 := R31 + 0x40
0000051b: call R30 with noreturn

00000874: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
0000088b: __libc_start_main_main :: in u64 = R0
0000088c: __libc_start_main_arg2 :: in u32 = low:32[R1]
0000088d: __libc_start_main_arg3 :: in out u64 = R2
0000088e: __libc_start_main_auxv :: in out u64 = R3
0000088f: __libc_start_main_result :: out u32 = low:32[R0]

00000292:
000006c7: R16 := 0x11000
000006ce: R17 := mem[R16 + 8, el]:u64
000006d4: R16 := R16 + 8
000006d9: call R17 with noreturn

00000875: sub _fini(_fini_result)
00000890: _fini_result :: out u32 = low:32[R0]

00000030:
00000034: #0 := R31 - 0x10
0000003a: mem := mem with [#0, el]:u64 <- R29
00000040: mem := mem with [#0 + 8, el]:u64 <- R30
00000044: R31 := #0
0000004a: R29 := R31
00000051: R29 := mem[R31, el]:u64
00000056: R30 := mem[R31 + 8, el]:u64
0000005a: R31 := R31 + 0x10
0000005f: call R30 with noreturn

00000876: sub _init(_init_result)
00000891: _init_result :: out u32 = low:32[R0]

000004b1:
0000079f: #19 := R31 - 0x10
000007a5: mem := mem with [#19, el]:u64 <- R29
000007ab: mem := mem with [#19 + 8, el]:u64 <- R30
000007af: R31 := #19
000007b5: R29 := R31
000007ba: R30 := 0x5A4
000007bc: call @call_weak_fn with return %000007be

000007be:
000007c3: R29 := mem[R31, el]:u64
000007c8: R30 := mem[R31 + 8, el]:u64
000007cc: R31 := R31 + 0x10
000007d1: call R30 with noreturn

00000877: sub _start(_start_result)
00000892: _start_result :: out u32 = low:32[R0]

00000247:
0000024a: R29 := 0
0000024f: R30 := 0
00000255: R5 := R0
0000025c: R1 := mem[R31, el]:u64
00000262: R2 := R31 + 8
00000268: R6 := R31
0000026d: R0 := 0x10000
00000274: R0 := mem[R0 + 0xFD8, el]:u64
00000279: R3 := 0x10000
00000280: R3 := mem[R3 + 0xFD0, el]:u64
00000285: R4 := 0x10000
0000028c: R4 := mem[R4 + 0xFB0, el]:u64
00000291: R30 := 0x644
00000294: call @__libc_start_main with return %00000296

00000296:
00000299: R30 := 0x648
0000029c: call @abort with return %00000878

00000878:
00000879: call @call_weak_fn with noreturn

0000087a: sub abort()


0000029a:
000006f3: R16 := 0x11000
000006fa: R17 := mem[R16 + 0x18, el]:u64
00000700: R16 := R16 + 0x18
00000705: call R17 with noreturn

0000087b: sub call_weak_fn(call_weak_fn_result)
00000893: call_weak_fn_result :: out u32 = low:32[R0]

0000029e:
000002a1: R0 := 0x10000
000002a8: R0 := mem[R0 + 0xFC8, el]:u64
000002ae: when R0 = 0 goto %000002ac
0000087c: goto %00000610

000002ac:
000002b4: call R30 with noreturn

00000610:
00000613: goto @__gmon_start__

00000611:
000006dd: R16 := 0x11000
000006e4: R17 := mem[R16 + 0x10, el]:u64
000006ea: R16 := R16 + 0x10
000006ef: call R17 with noreturn

0000087d: sub deregister_tm_clones(deregister_tm_clones_result)
00000894: deregister_tm_clones_result :: out u32 = low:32[R0]

000002b8:
000002bb: R0 := 0x11000
000002c1: R0 := R0 + 0x30
000002c6: R1 := 0x11000
000002cc: R1 := R1 + 0x30
000002d2: #1 := ~R0
000002d7: #2 := R1 + ~R0 + 1
000002dd: VF := extend:65[#2] <> extend:65[R1] + extend:65[#1] + 1
000002e3: CF := pad:65[#2] <> pad:65[R1] + pad:65[#1] + 1
000002e7: ZF := #2 = 0
000002eb: NF := 63:63[#2]
000002f1: when ZF goto %000002ef
0000087e: goto %000005f2

000005f2:
000005f5: R1 := 0x10000
000005fc: R1 := mem[R1 + 0xFB8, el]:u64
00000601: when R1 = 0 goto %000002ef
0000087f: goto %00000605

000002ef:
000002f7: call R30 with noreturn

00000605:
00000609: R16 := R1
0000060e: call R16 with noreturn

00000880: sub frame_dummy(frame_dummy_result)
00000895: frame_dummy_result :: out u32 = low:32[R0]

000003a8:
000003aa: call @register_tm_clones with noreturn

00000881: sub main(main_argc, main_argv, main_result)
00000896: main_argc :: in u32 = low:32[R0]
00000897: main_argv :: in out u64 = R1
00000898: main_result :: out u32 = low:32[R0]

000003ac:
000003b0: R31 := R31 - 0x10
000003b7: mem := mem with [R31 + 0xC, el]:u32 <- 0
000003bc: R8 := 0x11000
000003c1: R9 := 1
000003c9: mem := mem with [R8 + 0x34, el]:u32 <- 31:0[R9]
000003d0: R8 := pad:64[mem[R8 + 0x34, el]:u32]
000003d6: #6 := 31:0[R8] + 0
000003db: VF := extend:33[#6] <> extend:33[31:0[R8]] + 0
000003e0: CF := pad:33[#6] <> pad:33[31:0[R8]] - 0x100000000
000003e4: ZF := #6 = 0
000003e8: NF := 31:31[#6]
000003ec: R8 := pad:64[#6]
000003f8: when ZF <> 1 goto %000003f1
000003f9: goto %000003f4

000003f4:
000003f5: R8 := 1
000003fb: goto %000003f7

000003f1:
000003f2: R8 := 0
000003fa: goto %000003f7

000003f7:
00000401: when 0:0[R8] goto %000003ff
00000882: goto %0000057f

000003ff:
00000407: R9 := 0x11000
0000040c: R8 := 2
00000414: mem := mem with [R9 + 0x38, el]:u32 <- 31:0[R8]
00000419: goto %00000417

0000057f:
00000582: goto %00000580

00000580:
00000586: R8 := 3
0000058b: R9 := 0x11000
00000593: mem := mem with [R9 + 0x38, el]:u32 <- 31:0[R8]
00000597: goto %00000417

00000417:
0000041f: R0 := pad:64[mem[R31 + 0xC, el]:u32]
00000425: R31 := R31 + 0x10
0000042a: call R30 with noreturn

00000883: sub register_tm_clones(register_tm_clones_result)
00000899: register_tm_clones_result :: out u32 = low:32[R0]

000002f9:
000002fc: R0 := 0x11000
00000302: R0 := R0 + 0x30
00000307: R1 := 0x11000
0000030d: R1 := R1 + 0x30
00000314: R1 := R1 + ~R0 + 1
0000031b: R2 := 0.0:0[R1 >> 0x3F | R1 << 1]
00000322: R1 := R2 + (R1 ~>> 3)
00000328: #3 := ~(R1 ~>> 1)
0000032c: #4 := ~(R1 ~>> 1) + 1
00000331: VF := extend:65[#4] <> extend:65[#3] + 1
00000336: CF := pad:65[#4] <> pad:65[#3] + 1
0000033a: ZF := #4 = 0
0000033e: NF := 63:63[#4]
00000346: R1 :=

          >> 1 | R1 << 0x3F]
0000034c: when ZF goto %0000034a
00000884: goto %000005d4

000005d4:
000005d7: R2 := 0x10000
000005de: R2 := mem[R2 + 0xFE0, el]:u64
000005e3: when R2 = 0 goto %0000034a
00000885: goto %000005e7

0000034a:
00000352: call R30 with noreturn

000005e7:
000005eb: R16 := R2
000005f0: call R16 with noreturn
