const registers: [int] int;
const memory: [int] int;
var SP: int, FP: int, LR: int;
SP = 0;
FP = ?;
LR = ?;

procedure main()
    modifies mem
    modifies registers
    @param argc: from registers[0]
    @param argv: from registers[1]
    @result: to registers[0]
{
    label000001b9: skip;
    label000001be: registers[0] := 0x11000;
    label000001c5: registers[0] := (registers[0]) + (0x34);
    label000001cc: mem[registers[0]] := 0;
    label000001d3: goto label000001d1;
    label000001d1: skip;
    label000001d9: registers[0] := 0x11000;
    label000001e0: registers[0] := (registers[0]) + (0x34);
    label000001e7: skip;
    label000001ed: #33 := (0xFFFFFFFFFFFFFFFC) + (registers[0]);
    label000001f1: NF := #33[1:0];
    label000001f5: VF := (registers[0][1:0]) & (~ (#33[1:0]));
    label000001f9: ZF := (#33) == (0);
    label000001fd: CF := (registers[0][1:0]) | (~ (((#33[1:0]) | (registers[0][1:0])) & (~ (#33[1:0]))));
    label0000020c: #35 := () <> (0);
    label00000206: if (#35) {goto label00000204};
    label000004da: goto label0000023e;
    label0000023e: skip;
    label00000243: registers[0] := 0;
    label00000249: ;
    label00000204: skip;
    label00000212: registers[0] := 0x11000;
    label00000219: registers[0] := (registers[0]) + (0x34);
    label00000220: skip;
    label00000227: registers[1] := (registers[0]) + (1);
    label0000022e: registers[0] := 0x11000;
    label00000235: registers[0] := (registers[0]) + (0x34);
    label0000023c: mem[registers[0]] := registers[1];
    label000004db: goto label000001d1;
