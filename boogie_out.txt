const registers: [int] int;
const memory: [int] int;
var SP: int, FP: int, LR: int;
SP = 0;
FP = ?;
LR = ?;

procedure main()
    modifies mem
    modifies registers
    @param argc: from registers[0]
    @param argv: from registers[1]
    @result: to registers[0]
{
    label000001bf: skip;
    label000001c4: registers[0] := 0x11000;
    label000001cb: registers[0] := (registers[0]) + (0x14);
    label000001d2: registers[1] := 1;
    label000001d9: mem[registers[0]] := registers[1];
    label000001e0: registers[0] := 0x11000;
    label000001e7: registers[0] := (registers[0]) + (0x14);
    label000001ee: skip;
    label000001f4: #34 := registers[0];
    label000001f8: NF := #34[1:0];
    label000001fc: VF := (registers[0][1:0]) & (~ (#34[1:0]));
    label00000200: ZF := (#34) == (0);
    label00000204: CF := (registers[0][1:0]) | (~ (((#34[1:0]) | (registers[0][1:0])) & (~ (#34[1:0]))));
    label00000213: #36 := ZF;
    label0000020d: if (#36) {goto label0000020b};
    label00000501: goto label00000358;
    label0000020b: skip;
    label00000219: registers[0] := 0x11000;
    label00000220: registers[0] := (registers[0]) + (0x18);
    label00000227: registers[1] := 2;
    label0000022e: mem[registers[0]] := registers[1];
    label00000502: goto label00000230;
    label00000358: skip;
    label0000035d: registers[0] := 0x11000;
    label00000364: registers[0] := (registers[0]) + (0x18);
    label0000036b: registers[1] := 3;
    label00000372: mem[registers[0]] := registers[1];
    label00000378: goto label00000230;
    label00000230: skip;
    label00000235: registers[0] := 0;
}

