const registers: [int] int;
const memory: [int] int;
var SP: int, FP: int, LR: int;
SP = 0;
FP = ?;
LR = ?;

procedure main()
    modifies mem
    modifies registers
    @param argc: from registers[0]
    @param argv: from registers[1]
    @result: to registers[0]
{
    skip;
    registers[0] := 0x11000;
    registers[0] := (registers[0]) + (0x14);
    registers[1] := 1;
    mem[registers[0]] := registers[1];
    registers[0] := 0x11000;
    registers[0] := (registers[0]) + (0x14);
    skip;
    #34 := registers[0];
    NF := #34[1:0];
    VF := (registers[0][1:0]) & (~ (#34[1:0]));
    ZF := (#34) == (0);
    CF := (registers[0][1:0]) | (~ (((#34[1:0]) | (registers[0][1:0])) & (~ (#34[1:0]))));
    #36 := ZF;
    if (#36) {goto label0};
    goto label1;
    label0: skip;
    registers[0] := 0x11000;
    registers[0] := (registers[0]) + (0x18);
    registers[1] := 2;
    mem[registers[0]] := registers[1];
    goto label3;
    label1: skip;
    registers[0] := 0x11000;
    registers[0] := (registers[0]) + (0x18);
    registers[1] := 3;
    mem[registers[0]] := registers[1];
    goto label3;
    label3: skip;
    registers[0] := 0;
}

