0000050f: program
000004f6: sub __cxa_finalize(__cxa_finalize_result)
00000510: __cxa_finalize_result :: out u32 = X0

000003b5:
00000439: X16 := 0x11000
00000440: X17 := mem[X16, el]:u64
00000447: X16 := X16
0000044d: call X17 with noreturn

000004f7: sub __libc_csu_fini(__libc_csu_fini_result)
00000511: __libc_csu_fini_result :: out u32 = X0

0000030c:
00000310: call LR with noreturn

000004f8: sub __libc_csu_init(__libc_csu_init_result)
00000512: __libc_csu_init_result :: out u32 = X0

0000025a:
0000025f: mem := mem with [SP - 0x40, el]:u64 <- FP
00000264: mem := mem with [SP - 0x38, el]:u64 <- LR
00000269: SP := SP - 0x40
00000270: FP := SP
00000279: X20 := 0x10000
00000280: X20 := X20 + 0xDC0
00000289: X21 := 0x10000
00000290: X21 := X21 + 0xDB8
00000297: X20 := X20 - X21
0000029e: X22 := X0
000002a7: X23 := X1
000002ae: X24 := X2
000002b5: X20 := X20 >> 3
000002bb: LR := 0x7F4
000002c0: call @sub_5d0 with return %000002c2

000002c2:
000002cd: #61 := X20 = 0
000002c7: when #61 goto %000002c5
00000507: goto %00000313

00000313:
00000318: X19 := 0
00000508: goto %0000031c

0000031c:
00000321: X3 := mem[X21 + (X19 << 3), el]:u64
00000328: X2 := X24
0000032f: X19 := X19 + 1
00000336: X1 := X23
0000033d: X0 := X22
00000343: LR := 0x818
00000347: call X3 with return %0000034a

0000034a:
0000034e: #81 := 1 + ~X19 + X20
00000352: NF := extract:63:63[#81]
00000356: VF := extract:63:63[X20] & extract:63:63[~X19] &
          ~extract:63:63[#81] | ~extract:63:63[X20] & ~extract:63:63[~X19] &
          extract:63:63[#81]
0000035a: ZF := #81 = 0
0000035e: CF := extract:63:63[X20] & extract:63:63[~X19] |
          extract:63:63[~X19] & ~extract:63:63[#81] | extract:63:63[X20] &
          ~extract:63:63[#81]
0000036c: #83 := ~ZF <> 0
00000366: when #83 goto %0000031c
00000509: goto %000002c5

000002c5:
000002d3: X19 := mem[SP + 0x10, el]:u64
000002d8: X20 := mem[SP + 0x18, el]:u64
000002df: X21 := mem[SP + 0x20, el]:u64
000002e4: X22 := mem[SP + 0x28, el]:u64
000002eb: X23 := mem[SP + 0x30, el]:u64
000002f0: X24 := mem[SP + 0x38, el]:u64
000002f7: FP := mem[SP, el]:u64
000002fc: LR := mem[SP + 8, el]:u64
00000301: SP := SP + 0x40
00000307: call LR with noreturn

000004fc: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
00000513: __libc_start_main_main :: in u64 = X0
00000514: __libc_start_main_arg2 :: in u32 = X1
00000515: __libc_start_main_arg3 :: in out u64 = X2
00000516: __libc_start_main_auxv :: in out u64 = X3
00000517: __libc_start_main_result :: out u32 = X0

00000095:
0000046f: X16 := 0x11000
00000476: X17 := mem[X16 + 0x10, el]:u64
0000047d: X16 := X16 + 0x10
00000483: call X17 with noreturn

000004fd: sub abort()


000000a0:
000004a5: X16 := 0x11000
000004ac: X17 := mem[X16 + 0x20, el]:u64
000004b3: X16 := X16 + 0x20
000004b9: call X17 with noreturn

000004fe: sub call_weak_fn(call_weak_fn_result)
00000518: call_weak_fn_result :: out u32 = X0

000000a4:
000000a9: X0 := 0x10000
000000b0: X0 := mem[X0 + 0xFC8, el]:u64
000000bd: #6 := X0 = 0
000000b7: when #6 goto %000000b5
0000050a: goto %000003fb

000000b5:
000000c2: call LR with noreturn

000003fb:
00000400: goto @__gmon_start__

000003fe:
0000048a: X16 := 0x11000
00000491: X17 := mem[X16 + 0x18, el]:u64
00000498: X16 := X16 + 0x18
0000049e: call X17 with noreturn

00000500: sub main(main_argc, main_argv, main_result)
00000519: main_argc :: in u32 = X0
0000051a: main_argv :: in out u64 = X1
0000051b: main_result :: out u32 = X0

000001b9:
000001be: mem := mem with [SP - 0x20, el]:u64 <- FP
000001c3: mem := mem with [SP - 0x18, el]:u64 <- LR
000001c8: SP := SP - 0x20
000001cf: FP := SP
000001d6: X0 := 4
000001dc: LR := 0x774
000001e1: call @malloc with return %000001e3

000001e3:
000001e8: mem := mem with [SP + 0x10, el]:u64 <- X0
000001ef: X0 := SP + 0x10
000001f6: mem := mem with [SP + 0x18, el]:u64 <- X0
000001fd: X0 := mem[SP + 0x10, el]:u64
00000204: mem := mem with [SP + 0x18, el]:u64 <- X0
0000020b: X0 := mem[SP + 0x10, el]:u64
00000212: X1 := X0
00000219: X0 := mem[SP + 0x18, el]:u64
00000220: mem := mem with [X0, el]:u32 <- low:32[X1]
00000227: X0 := mem[SP + 0x18, el]:u64
0000022e: X0 := pad:64[mem[X0, el]:u32]
00000235: X0 := extend:64[extract:31:0[X0]]
0000023c: mem := mem with [SP + 0x10, el]:u64 <- X0
00000245: FP := mem[SP, el]:u64
0000024a: LR := mem[SP + 8, el]:u64
0000024f: SP := SP + 0x20
00000255: call LR with noreturn

00000501: sub malloc(malloc_size, malloc_result)
0000051c: malloc_size :: in u64 = X0
0000051d: malloc_result :: out u64 = X0

000001df:
00000454: X16 := 0x11000
0000045b: X17 := mem[X16 + 8, el]:u64
00000462: X16 := X16 + 8
00000468: call X17 with noreturn

00000502: sub sub_5d0(sub_5d0_result)
0000051e: sub_5d0_result :: out u32 = X0

000002be:
000004c0: mem := mem with [SP - 0x10, el]:u64 <- FP
000004c5: mem := mem with [SP - 8, el]:u64 <- LR
000004ca: SP := SP - 0x10
000004d1: FP := SP
000004d7: LR := 0x5DC
000004db: call @call_weak_fn with return %000004dd

000004dd:
000004e2: FP := mem[SP, el]:u64
000004e7: LR := mem[SP + 8, el]:u64
000004ec: SP := SP + 0x10
000004f2: call LR with noreturn

00000503: sub sub_660(sub_660_result)
0000051f: sub_660_result :: out u32 = X0

0000003a:
0000003f: FP := 0
00000046: LR := 0
0000004d: X5 := X0
00000054: X1 := mem[SP, el]:u64
0000005b: X2 := SP + 8
00000062: X6 := SP
00000069: X0 := 0x10000
00000070: X0 := mem[X0 + 0xFD8, el]:u64
00000077: X3 := 0x10000
0000007e: X3 := mem[X3 + 0xFD0, el]:u64
00000085: X4 := 0x10000
0000008c: X4 := mem[X4 + 0xFB0, el]:u64
00000092: LR := 0x694
00000097: call @__libc_start_main with return %00000099

00000099:
0000009d: LR := 0x698
000000a2: call @abort with return %0000050b

0000050b:
0000050c: call @call_weak_fn with noreturn

00000506: sub sub_6b0(sub_6b0_result)
00000520: sub_6b0_result :: out u32 = X0

000000c7:
000000cc: X0 := 0x11000
000000d3: X0 := X0 + 0x38
000000da: X1 := 0x11000
000000e1: X1 := X1 + 0x38
000000e7: #10 := 1 + ~X0 + X1
000000eb: NF := extract:63:63[#10]
000000ef: VF := extract:63:63[X1] & extract:63:63[~X0] & ~extract:63:63[#10]
          | ~extract:63:63[X1] & ~extract:63:63[~X0] & extract:63:63[#10]
000000f3: ZF := #10 = 0
000000f7: CF := extract:63:63[X1] & extract:63:63[~X0] | extract:63:63[~X0] &
          ~extract:63:63[#10] | extract:63:63[X1] & ~extract:63:63[#10]
00000106: #12 := ZF
00000100: when #12 goto %000000fe
0000050d: goto %000003da

000003da:
000003df: X1 := 0x10000
000003e6: X1 := mem[X1 + 0xFB8, el]:u64
000003f2: #88 := X1 = 0
000003ec: when #88 goto %000000fe
0000050e: goto %000003f4

000000fe:
0000010b: call LR with noreturn

000003f4:
000003f8: call X1 with noreturn
