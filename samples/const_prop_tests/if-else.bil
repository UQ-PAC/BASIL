00000274: program
0000026e: sub main(main_argc, main_argv, main_result)
00000284: main_argc :: in u32 = R0
00000285: main_argv :: in out u64 = R1
00000286: main_result :: out u32 = R0

0000010a:
0000010c: R31 := R31 - 0x10
00000110: mem := mem with [R31 + 0xC, el]:u32 <- 0
00000114: #28 := pad:64[mem[R31 + 0xC, el]:u32]
00000116: R0 := 0
00000118: R0 := R0 & 0xFFFFFFFF00000000 | pad:64[#28]
0000011c: #29 := extend:64[extract:31:0[R0]] + 1
0000011e: R0 := 0
00000120: R0 := R0 & 0xFFFFFFFF00000000 | pad:64[#29]
00000124: mem := mem with [R31 + 8, el]:u32 <- low:32[extract:31:0[R0]]
00000128: #31 := pad:64[mem[R31 + 0xC, el]:u32]
0000012a: R0 := 0
0000012c: R0 := R0 & 0xFFFFFFFF00000000 | pad:64[#31]
00000130: #32 := 0xFFFFFFFFFFFFFFFF + extend:64[extract:31:0[R0]]
00000132: NF := extract:63:63[#32]
00000134: VF := extract:31:31[extract:31:0[R0]] & ~extract:63:63[#32]
00000136: ZF := #32 = 0
00000138: CF := extract:31:31[extract:31:0[R0]] |
          extract:31:31[extract:31:0[R0]] & ~extract:63:63[#32] |
          ~extract:63:63[#32]
00000141: #34 := ZF
0000013d: when #34 goto %0000013b
0000026f: goto %0000015b

0000013b:
00000144: R0 := 0
00000146: R0 := R0 & 0xFFFFFFFF00000000 | 5
0000014a: mem := mem with [R31 + 0xC, el]:u32 <- low:32[extract:31:0[R0]]
00000270: goto %0000014c

0000015b:
0000015d: #38 := pad:64[mem[R31 + 8, el]:u32]
0000015f: R0 := 0
00000161: R0 := R0 & 0xFFFFFFFF00000000 | pad:64[#38]
00000165: #39 := extend:64[extract:31:0[R0]] + 2
00000167: R0 := 0
00000169: R0 := R0 & 0xFFFFFFFF00000000 | pad:64[#39]
0000016d: mem := mem with [R31 + 8, el]:u32 <- low:32[extract:31:0[R0]]
00000171: goto %0000014c

0000014c:
0000014e: R0 := 0
00000150: R0 := R0 & 0xFFFFFFFF00000000
00000154: R31 := R31 + 0x10
00000158: call R30 with noreturn