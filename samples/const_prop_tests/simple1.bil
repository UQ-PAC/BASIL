00000252: program
0000024e: sub main(main_argc, main_argv, main_result)
00000262: main_argc :: in u32 = R0
00000263: main_argv :: in out u64 = R1
00000264: main_result :: out u32 = R0

0000010a:
0000010c: R31 := R31 - 0x10
00000110: mem := mem with [R31 + 0xC, el]:u32 <- 0
00000114: #28 := pad:64[mem[R31 + 0xC, el]:u32]
00000116: R0 := 0
00000118: R0 := R0 & 0xFFFFFFFF00000000 | pad:64[#28]
0000011c: #29 := extend:64[extract:31:0[R0]] + 1
0000011e: R0 := 0
00000120: R0 := R0 & 0xFFFFFFFF00000000 | pad:64[#29]
00000124: mem := mem with [R31 + 8, el]:u32 <- low:32[extract:31:0[R0]]
00000128: #31 := pad:64[mem[R31 + 8, el]:u32]
0000012a: R0 := 0
0000012c: R0 := R0 & 0xFFFFFFFF00000000 | pad:64[#31]
00000130: #32 := extend:64[extract:31:0[R0]] + 2
00000132: R0 := 0
00000134: R0 := R0 & 0xFFFFFFFF00000000 | pad:64[#32]
00000138: mem := mem with [R31 + 8, el]:u32 <- low:32[extract:31:0[R0]]
0000013c: R0 := 0
0000013e: R0 := R0 & 0xFFFFFFFF00000000 | 5
00000142: mem := mem with [R31 + 0xC, el]:u32 <- low:32[extract:31:0[R0]]
00000146: R0 := 0
00000148: R0 := R0 & 0xFFFFFFFF00000000
0000014c: R31 := R31 + 0x10
00000150: call R30 with noreturn