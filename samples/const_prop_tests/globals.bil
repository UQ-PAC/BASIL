00000290: program
0000028c: sub main(main_argc, main_argv, main_result)
000002a0: main_argc :: in u32 = R0
000002a1: main_argv :: in out u64 = R1
000002a2: main_result :: out u32 = R0

0000010a:
0000010c: R31 := R31 - 0x10
00000110: R0 := 0x11000
00000114: R0 := R0 + 0x38
00000118: #27 := pad:64[mem[R0, el]:u32]
0000011a: R0 := 0
0000011c: R0 := R0 & 0xFFFFFFFF00000000 | pad:64[#27]
00000120: #28 := extend:64[extract:31:0[R0]] + 2
00000122: R1 := 0
00000124: R1 := R1 & 0xFFFFFFFF00000000 | pad:64[#28]
00000128: R0 := 0x11000
0000012c: R0 := R0 + 0x38
00000130: mem := mem with [R0, el]:u32 <- low:32[extract:31:0[R1]]
00000134: R0 := 0x11000
00000138: R0 := R0 + 0x30
0000013c: #30 := pad:64[mem[R0, el]:u32]
0000013e: R0 := 0
00000140: R0 := R0 & 0xFFFFFFFF00000000 | pad:64[#30]
00000144: #31 := extend:64[extract:31:0[R0]] + 1
00000146: R1 := 0
00000148: R1 := R1 & 0xFFFFFFFF00000000 | pad:64[#31]
0000014c: R0 := 0x11000
00000150: R0 := R0 + 0x30
00000154: mem := mem with [R0, el]:u32 <- low:32[extract:31:0[R1]]
00000158: R0 := 0x11000
0000015c: R0 := R0 + 0x38
00000160: #33 := pad:64[mem[R0, el]:u32]
00000162: R1 := 0
00000164: R1 := R1 & 0xFFFFFFFF00000000 | pad:64[#33]
00000168: R0 := 0x11000
0000016c: R0 := R0 + 0x30
00000170: #34 := pad:64[mem[R0, el]:u32]
00000172: R0 := 0
00000174: R0 := R0 & 0xFFFFFFFF00000000 | pad:64[#34]
00000178: #35 := extend:64[extract:31:0[R1]] + extend:64[extract:31:0[R0]]
0000017a: R0 := 0
0000017c: R0 := R0 & 0xFFFFFFFF00000000 | pad:64[#35]
00000180: mem := mem with [R31 + 0xC, el]:u32 <- low:32[extract:31:0[R0]]
00000184: R0 := 0
00000186: R0 := R0 & 0xFFFFFFFF00000000
0000018a: R31 := R31 + 0x10
0000018e: call R30 with noreturn