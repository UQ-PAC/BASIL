000004d5: program
000004c1: sub __cxa_finalize(__cxa_finalize_result)
000004d6: __cxa_finalize_result :: out u32 = X0

0000039b:
0000041f: X16 := 0x11000
00000426: X17 := mem[X16, el]:u64
0000042d: X16 := X16
00000433: call X17 with noreturn

000004c2: sub __libc_csu_fini(__libc_csu_fini_result)
000004d7: __libc_csu_fini_result :: out u32 = X0

000002f2:
000002f6: call LR with noreturn

000004c3: sub __libc_csu_init(__libc_csu_init_result)
000004d8: __libc_csu_init_result :: out u32 = X0

00000240:
00000245: mem := mem with [SP - 0x40, el]:u64 <- FP
0000024a: mem := mem with [SP - 0x38, el]:u64 <- LR
0000024f: SP := SP - 0x40
00000256: FP := SP
0000025f: X20 := 0x10000
00000266: X20 := X20 + 0xDC0
0000026f: X21 := 0x10000
00000276: X21 := X21 + 0xDB8
0000027d: X20 := X20 - X21
00000284: X22 := X0
0000028d: X23 := X1
00000294: X24 := X2
0000029b: X20 := X20 >> 3
000002a1: LR := 0x794
000002a6: call @sub_598 with return %000002a8

000002a8:
000002b3: #62 := X20 = 0
000002ad: when #62 goto %000002ab
000004c4: goto %000002f9

000002f9:
000002fe: X19 := 0
000004c5: goto %00000302

00000302:
00000307: X3 := mem[X21 + (X19 << 3), el]:u64
0000030e: X2 := X24
00000315: X19 := X19 + 1
0000031c: X1 := X23
00000323: X0 := X22
00000329: LR := 0x7B8
0000032d: call X3 with return %00000330

00000330:
00000334: #82 := 1 + ~X19 + X20
00000338: NF := extract:63:63[#82]
0000033c: VF := extract:63:63[X20] & extract:63:63[~X19] &
          ~extract:63:63[#82] | ~extract:63:63[X20] & ~extract:63:63[~X19] &
          extract:63:63[#82]
00000340: ZF := #82 = 0
00000344: CF := extract:63:63[X20] & extract:63:63[~X19] |
          extract:63:63[~X19] & ~extract:63:63[#82] | extract:63:63[X20] &
          ~extract:63:63[#82]
00000352: #84 := ~ZF <> 0
0000034c: when #84 goto %00000302
000004c6: goto %000002ab

000002ab:
000002b9: X19 := mem[SP + 0x10, el]:u64
000002be: X20 := mem[SP + 0x18, el]:u64
000002c5: X21 := mem[SP + 0x20, el]:u64
000002ca: X22 := mem[SP + 0x28, el]:u64
000002d1: X23 := mem[SP + 0x30, el]:u64
000002d6: X24 := mem[SP + 0x38, el]:u64
000002dd: FP := mem[SP, el]:u64
000002e2: LR := mem[SP + 8, el]:u64
000002e7: SP := SP + 0x40
000002ed: call LR with noreturn

000004c7: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
000004d9: __libc_start_main_main :: in u64 = X0
000004da: __libc_start_main_arg2 :: in u32 = X1
000004db: __libc_start_main_arg3 :: in out u64 = X2
000004dc: __libc_start_main_auxv :: in out u64 = X3
000004dd: __libc_start_main_result :: out u32 = X0

00000095:
0000043a: X16 := 0x11000
00000441: X17 := mem[X16 + 8, el]:u64
00000448: X16 := X16 + 8
0000044e: call X17 with noreturn

000004c8: sub abort()


000000a0:
00000470: X16 := 0x11000
00000477: X17 := mem[X16 + 0x18, el]:u64
0000047e: X16 := X16 + 0x18
00000484: call X17 with noreturn

000004c9: sub call_weak_fn(call_weak_fn_result)
000004de: call_weak_fn_result :: out u32 = X0

000000a4:
000000a9: X0 := 0x10000
000000b0: X0 := mem[X0 + 0xFC8, el]:u64
000000bd: #6 := X0 = 0
000000b7: when #6 goto %000000b5
000004ca: goto %000003e1

000000b5:
000000c2: call LR with noreturn

000003e1:
000003e6: goto @__gmon_start__

000003e4:
00000455: X16 := 0x11000
0000045c: X17 := mem[X16 + 0x10, el]:u64
00000463: X16 := X16 + 0x10
00000469: call X17 with noreturn

000004cb: sub main(main_argc, main_argv, main_result)
000004df: main_argc :: in u32 = X0
000004e0: main_argv :: in out u64 = X1
000004e1: main_result :: out u32 = X0

000001b9:
000001be: SP := SP - 0x20
000001c5: mem := mem with [SP + 0x1C, el]:u32 <- 0
000001cc: goto %000001ca

000001ca:
000001d2: X0 := pad:64[mem[SP + 0x1C, el]:u32]
000001d8: #33 := 0xFFFFFFFFFFFFFFFC + X0
000001dc: NF := extract:63:63[#33]
000001e0: VF := extract:63:63[X0] & ~extract:63:63[#33]
000001e4: ZF := #33 = 0
000001e8: CF := extract:63:63[X0] | ~extract:63:63[#33] | extract:63:63[X0] &
          ~extract:63:63[#33]
000001f7: #35 := (NF <> VF | ZF <> 0) <> 0
000001f1: when #35 goto %000001ef
000004cc: goto %0000022b

0000022b:
00000230: X0 := 0
00000237: SP := SP + 0x20
0000023d: call LR with noreturn

000001ef:
000001fd: X0 := extend:64[mem[SP + 0x1C, el]:u32]
00000204: X0 := X0 << 2
0000020b: X1 := SP + 8
00000212: X2 := pad:64[mem[SP + 0x1C, el]:u32]
0000021b: X0 := pad:64[mem[SP + 0x1C, el]:u32]
00000222: X0 := X0 + 1
00000229: mem := mem with [SP + 0x1C, el]:u32 <- low:32[X0]
000004cd: goto %000001ca

000004ce: sub sub_598(sub_598_result)
000004e2: sub_598_result :: out u32 = X0

000002a4:
0000048b: mem := mem with [SP - 0x10, el]:u64 <- FP
00000490: mem := mem with [SP - 8, el]:u64 <- LR
00000495: SP := SP - 0x10
0000049c: FP := SP
000004a2: LR := 0x5A4
000004a6: call @call_weak_fn with return %000004a8

000004a8:
000004ad: FP := mem[SP, el]:u64
000004b2: LR := mem[SP + 8, el]:u64
000004b7: SP := SP + 0x10
000004bd: call LR with noreturn

000004cf: sub sub_610(sub_610_result)
000004e3: sub_610_result :: out u32 = X0

0000003a:
0000003f: FP := 0
00000046: LR := 0
0000004d: X5 := X0
00000054: X1 := mem[SP, el]:u64
0000005b: X2 := SP + 8
00000062: X6 := SP
00000069: X0 := 0x10000
00000070: X0 := mem[X0 + 0xFD8, el]:u64
00000077: X3 := 0x10000
0000007e: X3 := mem[X3 + 0xFD0, el]:u64
00000085: X4 := 0x10000
0000008c: X4 := mem[X4 + 0xFB0, el]:u64
00000092: LR := 0x644
00000097: call @__libc_start_main with return %00000099

00000099:
0000009d: LR := 0x648
000000a2: call @abort with return %000004d0

000004d0:
000004d1: call @call_weak_fn with noreturn

000004d2: sub sub_660(sub_660_result)
000004e4: sub_660_result :: out u32 = X0

000000c7:
000000cc: X0 := 0x11000
000000d3: X0 := X0 + 0x30
000000da: X1 := 0x11000
000000e1: X1 := X1 + 0x30
000000e7: #10 := 1 + ~X0 + X1
000000eb: NF := extract:63:63[#10]
000000ef: VF := extract:63:63[X1] & extract:63:63[~X0] & ~extract:63:63[#10]
          | ~extract:63:63[X1] & ~extract:63:63[~X0] & extract:63:63[#10]
000000f3: ZF := #10 = 0
000000f7: CF := extract:63:63[X1] & extract:63:63[~X0] | extract:63:63[~X0] &
          ~extract:63:63[#10] | extract:63:63[X1] & ~extract:63:63[#10]
00000106: #12 := ZF
00000100: when #12 goto %000000fe
000004d3: goto %000003c0

000003c0:
000003c5: X1 := 0x10000
000003cc: X1 := mem[X1 + 0xFB8, el]:u64
000003d8: #89 := X1 = 0
000003d2: when #89 goto %000000fe
000004d4: goto %000003da

000000fe:
0000010b: call LR with noreturn

000003da:
000003de: call X1 with noreturn
