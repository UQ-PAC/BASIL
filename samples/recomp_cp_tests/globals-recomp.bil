00000554: program
0000052c: sub .plt(\.plt_result)
00000555: \.plt_result :: out u32 = X0

00000453:
00000458: mem := mem with [SP - 0x10, el]:u64 <- X16
0000045d: mem := mem with [SP - 8, el]:u64 <- LR
00000462: SP := SP - 0x10
00000469: X16 := 0x10000
00000470: X17 := mem[X16 + 0xF98, el]:u64
00000477: X16 := X16 + 0xF98
0000047d: call X17 with noreturn

0000052d: sub __cxa_finalize(__cxa_finalize_result)
00000556: __cxa_finalize_result :: out u32 = X0

000003f8:
0000048a: X16 := 0x10000
00000491: X17 := mem[X16 + 0xFA0, el]:u64
00000498: X16 := X16 + 0xFA0
0000049e: call X17 with noreturn

0000052e: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
00000557: __do_global_dtors_aux_result :: out u32 = X0

00000171:
00000176: mem := mem with [SP - 0x20, el]:u64 <- FP
0000017b: mem := mem with [SP - 0x18, el]:u64 <- LR
00000180: SP := SP - 0x20
00000187: FP := SP
0000018e: mem := mem with [SP + 0x10, el]:u64 <- X19
00000195: X19 := 0x11000
0000019c: X0 := pad:64[mem[X19 + 0x14]]
000001a9: #31 := X0 <> 0
000001a3: when #31 goto %000001a1
00000547: goto %000003b1

000003b1:
000003b6: X0 := 0x10000
000003bd: X0 := mem[X0 + 0xFD8, el]:u64
000003ca: #96 := X0 = 0
000003c4: when #96 goto %000003c2
00000548: goto %000003e3

000003e3:
000003e8: X0 := 0x11000
000003ef: X0 := mem[X0 + 8, el]:u64
000003f5: LR := 0x700
000003fa: call @__cxa_finalize with return %000003c2

000003c2:
000003cf: LR := 0x704
000003d3: call @deregister_tm_clones with return %000003d5

000003d5:
000003da: X0 := 1
000003e1: mem := mem with [X19 + 0x14] <- low:8[X0]
00000549: goto %000001a1

000001a1:
000001af: X19 := mem[SP + 0x10, el]:u64
000001b6: FP := mem[SP, el]:u64
000001bb: LR := mem[SP + 8, el]:u64
000001c0: SP := SP + 0x20
000001c6: call LR with noreturn

00000532: sub __gmon_start__(__gmon_start___result)
00000558: __gmon_start___result :: out u32 = X0

0000044f:
000004c0: X16 := 0x10000
000004c7: X17 := mem[X16 + 0xFB0, el]:u64
000004ce: X16 := X16 + 0xFB0
000004d4: call X17 with noreturn

00000533: sub __libc_csu_fini(__libc_csu_fini_result)
00000559: __libc_csu_fini_result :: out u32 = X0

0000034a:
0000034e: call LR with noreturn

00000534: sub __libc_csu_init(__libc_csu_init_result)
0000055a: __libc_csu_init_result :: out u32 = X0

00000287:
0000028c: mem := mem with [SP - 0x40, el]:u64 <- FP
00000291: mem := mem with [SP - 0x38, el]:u64 <- LR
00000296: SP := SP - 0x40
0000029d: FP := SP
000002a6: X20 := 0x10000
000002ad: X20 := X20 + 0xD90
000002b6: X21 := 0x10000
000002bd: X21 := X21 + 0xD88
000002c4: X20 := X20 - X21
000002cb: X22 := X0
000002d4: X23 := X1
000002db: X24 := X2
000002e1: LR := 0x7C0
000002e6: call @_init with return %000002e8

000002e8:
000002ec: #70 := ~(X20 ~>> 3) + 1
000002f0: NF := extract:63:63[#70]
000002f4: VF := ~extract:63:63[~(X20 ~>> 3)] & extract:63:63[#70]
000002f8: ZF := #70 = 0
000002fc: CF := extract:63:63[~(X20 ~>> 3)] & ~extract:63:63[#70]
0000030b: #72 := ZF
00000305: when #72 goto %00000303
0000054a: goto %00000351

00000351:
00000356: X20 := X20 >> 3
0000035d: X19 := 0
0000054b: goto %0000035f

0000035f:
00000364: X3 := mem[X21 + (X19 << 3), el]:u64
0000036b: X2 := X24
00000372: X19 := X19 + 1
00000379: X1 := X23
00000380: X0 := X22
00000386: LR := 0x7E8
0000038a: call X3 with return %0000038d

0000038d:
00000391: #93 := 1 + ~X19 + X20
00000395: NF := extract:63:63[#93]
00000399: VF := extract:63:63[X20] & extract:63:63[~X19] &
          ~extract:63:63[#93] | ~extract:63:63[X20] & ~extract:63:63[~X19] &
          extract:63:63[#93]
0000039d: ZF := #93 = 0
000003a1: CF := extract:63:63[X20] & extract:63:63[~X19] |
          extract:63:63[~X19] & ~extract:63:63[#93] | extract:63:63[X20] &
          ~extract:63:63[#93]
000003af: #95 := ~ZF <> 0
000003a9: when #95 goto %0000035f
0000054c: goto %00000303

00000303:
00000311: X19 := mem[SP + 0x10, el]:u64
00000316: X20 := mem[SP + 0x18, el]:u64
0000031d: X21 := mem[SP + 0x20, el]:u64
00000322: X22 := mem[SP + 0x28, el]:u64
00000329: X23 := mem[SP + 0x30, el]:u64
0000032e: X24 := mem[SP + 0x38, el]:u64
00000335: FP := mem[SP, el]:u64
0000033a: LR := mem[SP + 8, el]:u64
0000033f: SP := SP + 0x40
00000345: call LR with noreturn

00000538: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
0000055b: __libc_start_main_main :: in u64 = X0
0000055c: __libc_start_main_arg2 :: in u32 = X1
0000055d: __libc_start_main_arg3 :: in out u64 = X2
0000055e: __libc_start_main_auxv :: in out u64 = X3
0000055f: __libc_start_main_result :: out u32 = X0

00000095:
000004a5: X16 := 0x10000
000004ac: X17 := mem[X16 + 0xFA8, el]:u64
000004b3: X16 := X16 + 0xFA8
000004b9: call X17 with noreturn

00000539: sub _fini(_fini_result)
00000560: _fini_result :: out u32 = X0

00000009:
0000000f: mem := mem with [SP - 0x10, el]:u64 <- FP
00000014: mem := mem with [SP - 8, el]:u64 <- LR
00000019: SP := SP - 0x10
00000020: FP := SP
00000027: FP := mem[SP, el]:u64
0000002c: LR := mem[SP + 8, el]:u64
00000031: SP := SP + 0x10
00000037: call LR with noreturn

0000053a: sub _init(_init_result)
00000561: _init_result :: out u32 = X0

000002e4:
000004f6: mem := mem with [SP - 0x10, el]:u64 <- FP
000004fb: mem := mem with [SP - 8, el]:u64 <- LR
00000500: SP := SP - 0x10
00000507: FP := SP
0000050d: LR := 0x5A4
00000511: call @call_weak_fn with return %00000513

00000513:
00000518: FP := mem[SP, el]:u64
0000051d: LR := mem[SP + 8, el]:u64
00000522: SP := SP + 0x10
00000528: call LR with noreturn

0000053b: sub _start(_start_result)
00000562: _start_result :: out u32 = X0

0000003a:
0000003f: FP := 0
00000046: LR := 0
0000004d: X5 := X0
00000054: X1 := mem[SP, el]:u64
0000005b: X2 := SP + 8
00000062: X6 := SP
00000069: X0 := 0x10000
00000070: X0 := mem[X0 + 0xFF0, el]:u64
00000077: X3 := 0x10000
0000007e: X3 := mem[X3 + 0xFE8, el]:u64
00000085: X4 := 0x10000
0000008c: X4 := mem[X4 + 0xFC8, el]:u64
00000092: LR := 0x644
00000097: call @__libc_start_main with return %00000099

00000099:
0000009d: LR := 0x648
000000a2: call @abort with return %0000054d

0000054d:
0000054e: call @call_weak_fn with noreturn

0000053e: sub abort()


000000a0:
000004db: X16 := 0x10000
000004e2: X17 := mem[X16 + 0xFB8, el]:u64
000004e9: X16 := X16 + 0xFB8
000004ef: call X17 with noreturn

0000053f: sub call_weak_fn(call_weak_fn_result)
00000563: call_weak_fn_result :: out u32 = X0

000000a4:
000000a9: X0 := 0x10000
000000b0: X0 := mem[X0 + 0xFE0, el]:u64
000000bd: #6 := X0 = 0
000000b7: when #6 goto %000000b5
0000054f: goto %0000044c

000000b5:
000000c2: call LR with noreturn

0000044c:
00000451: call @__gmon_start__ with noreturn

00000541: sub deregister_tm_clones(deregister_tm_clones_result)
00000564: deregister_tm_clones_result :: out u32 = X0

000000c7:
000000cc: X0 := 0x11000
000000d3: X0 := X0 + 0x18
000000da: X1 := 0x11000
000000e1: X1 := X1 + 0x18
000000e7: #10 := 1 + ~X0 + X1
000000eb: NF := extract:63:63[#10]
000000ef: VF := extract:63:63[X1] & extract:63:63[~X0] & ~extract:63:63[#10]
          | ~extract:63:63[X1] & ~extract:63:63[~X0] & extract:63:63[#10]
000000f3: ZF := #10 = 0
000000f7: CF := extract:63:63[X1] & extract:63:63[~X0] | extract:63:63[~X0] &
          ~extract:63:63[#10] | extract:63:63[X1] & ~extract:63:63[#10]
00000106: #12 := ZF
00000100: when #12 goto %000000fe
00000550: goto %00000424

00000424:
00000429: X1 := 0x10000
00000430: X1 := mem[X1 + 0xFD0, el]:u64
0000043c: #103 := X1 = 0
00000436: when #103 goto %000000fe
00000551: goto %0000043e

000000fe:
0000010b: call LR with noreturn

0000043e:
00000443: X16 := X1
00000449: call X16 with noreturn

00000544: sub frame_dummy(frame_dummy_result)
00000565: frame_dummy_result :: out u32 = X0

000001c9:
000001cd: call @register_tm_clones with noreturn

00000545: sub main(main_argc, main_argv, main_result)
00000566: main_argc :: in u32 = X0
00000567: main_argv :: in out u64 = X1
00000568: main_result :: out u32 = X0

000001cf:
000001d4: SP := SP - 0x10
000001db: X0 := 0x11000
000001e2: X0 := X0 + 0x18
000001e9: X0 := pad:64[mem[X0, el]:u32]
000001f0: X1 := X0 + 2
000001f7: X0 := 0x11000
000001fe: X0 := X0 + 0x18
00000205: mem := mem with [X0, el]:u32 <- low:32[X1]
0000020c: X0 := 0x11000
00000213: X0 := X0 + 0x10
0000021a: X0 := pad:64[mem[X0, el]:u32]
00000221: X1 := X0 + 1
00000228: X0 := 0x11000
0000022f: X0 := X0 + 0x10
00000236: mem := mem with [X0, el]:u32 <- low:32[X1]
0000023d: X0 := 0x11000
00000244: X0 := X0 + 0x18
0000024b: X1 := pad:64[mem[X0, el]:u32]
00000252: X0 := 0x11000
00000259: X0 := X0 + 0x10
00000260: X0 := pad:64[mem[X0, el]:u32]
00000267: X0 := X1 + X0
0000026e: mem := mem with [SP + 0xC, el]:u32 <- low:32[X0]
00000275: X0 := 0
0000027c: SP := SP + 0x10
00000282: call LR with noreturn

00000546: sub register_tm_clones(register_tm_clones_result)
00000569: register_tm_clones_result :: out u32 = X0

0000010e:
00000113: X0 := 0x11000
0000011a: X0 := X0 + 0x18
00000121: X1 := 0x11000
00000128: X1 := X1 + 0x18
0000012f: X1 := X1 - X0
00000136: X2 := X1 >> 0x3F
0000013d: X1 := X2 + (X1 ~>> 3)
00000143: #23 := ~(X1 ~>> 1) + 1
00000147: NF := extract:63:63[#23]
0000014b: VF := ~extract:63:63[~(X1 ~>> 1)] & extract:63:63[#23]
0000014f: ZF := #23 = 0
00000153: CF := extract:63:63[~(X1 ~>> 1)] & ~extract:63:63[#23]
0000015c: X1 := X1 >> 1
00000169: #26 := ZF
00000163: when #26 goto %00000161
00000552: goto %000003fc

000003fc:
00000401: X2 := 0x10000
00000408: X2 := mem[X2 + 0xFF8, el]:u64
00000414: #99 := X2 = 0
0000040e: when #99 goto %00000161
00000553: goto %00000416

00000161:
0000016e: call LR with noreturn

00000416:
0000041b: X16 := X2
00000421: call X16 with noreturn
