000004cb: sub main(main_argc, main_argv, main_result)
000004df: main_argc :: in u32 = X0
000004e0: main_argv :: in out u64 = X1
000004e1: main_result :: out u32 = X0

000001b9:
000001be: SP := SP - 0x20
000001c5: mem := mem with [SP + 0x1C, el]:u32 <- 0
000001cc: goto %000001ca

000001ca:
000001d2: X0 := pad:64[mem[SP + 0x1C, el]:u32]
000001d8: #33 := 0xFFFFFFFFFFFFFFFC + X0
000001dc: NF := extract:63:63[#33]
000001e0: VF := extract:63:63[X0] & ~extract:63:63[#33]
000001e4: ZF := #33 = 0
000001e8: CF := extract:63:63[X0] | ~extract:63:63[#33] | extract:63:63[X0] &
          ~extract:63:63[#33]
000001f7: #35 := (NF <> VF | ZF <> 0) <> 0
000001f1: when #35 goto %000001ef
000004cc: goto %0000022b

0000022b:
00000230: X0 := 0
00000237: SP := SP + 0x20
0000023d: call LR with noreturn

000001ef:
000001fd: X0 := extend:64[mem[SP + 0x1C, el]:u32]
00000204: X0 := X0 << 2
0000020b: X1 := SP + 8
00000212: X2 := pad:64[mem[SP + 0x1C, el]:u32]
0000021b: X0 := pad:64[mem[SP + 0x1C, el]:u32]
00000222: X0 := X0 + 1
00000229: mem := mem with [SP + 0x1C, el]:u32 <- low:32[X0]
000004cd: goto %000001ca
