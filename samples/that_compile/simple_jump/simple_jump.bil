0000024e: program
00000234: sub .plt(\.plt_result)
0000024f: \.plt_result :: out u32 = R0

000001b3:
000001b5: mem := mem with [R31 - 0x10, el]:u64 <- R16
000001b7: mem := mem with [R31 - 8, el]:u64 <- R30
000001b9: R31 := R31 - 0x10
000001bd: R16 := 0x10000
000001c1: R17 := mem[R16 + 0xFF8, el]:u64
000001c5: R16 := R16 + 0xFF8
000001c9: call R17 with noreturn

00000235: sub __cxa_finalize(__cxa_finalize_result)
00000250: __cxa_finalize_result :: out u32 = R0

00000178:
000001e3: R16 := 0x11000
000001e7: R17 := mem[R16 + 8, el]:u64
000001eb: R16 := R16 + 8
000001ef: call R17 with noreturn

00000236: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
00000251: __do_global_dtors_aux_result :: out u32 = R0

000000cd:
000000cf: mem := mem with [R31 - 0x20, el]:u64 <- R29
000000d1: mem := mem with [R31 - 0x18, el]:u64 <- R30
000000d3: R31 := R31 - 0x20
000000d7: R29 := R31
000000db: mem := mem with [R31 + 0x10, el]:u64 <- R19
000000df: R19 := 0x11000
000000e3: #24 := pad:64[mem[R19 + 0x30]]
000000e5: R0 := 0
000000e7: R0 := R0 & 0xFFFFFFFF00000000 | pad:64[#24]
000000f0: #25 := extract:31:0[R0] <> 0
000000ec: when #25 goto %000000ea
00000237: goto %0000014d

0000014d:
0000014f: R0 := 0x10000
00000153: R0 := mem[R0 + 0xFC8, el]:u64
0000015c: #36 := R0 = 0
00000158: when #36 goto %00000156
00000238: goto %0000016d

0000016d:
0000016f: R0 := 0x11000
00000173: R0 := mem[R0 + 0x28, el]:u64
00000177: R30 := 0x6F0
0000017a: call @__cxa_finalize with return %00000156

00000156:
0000015f: R30 := 0x6F4
00000161: call @deregister_tm_clones with return %00000163

00000163:
00000165: R0 := 0
00000167: R0 := R0 & 0xFFFFFFFF00000000 | 1
0000016b: mem := mem with [R19 + 0x30] <- low:8[extract:31:0[R0]]
00000239: goto %000000ea

000000ea:
000000f3: R19 := mem[R31 + 0x10, el]:u64
000000f7: R29 := mem[R31, el]:u64
000000f9: R30 := mem[R31 + 8, el]:u64
000000fb: R31 := R31 + 0x20
000000ff: call R30 with noreturn

0000023a: sub __gmon_start__(__gmon_start___result)
00000252: __gmon_start___result :: out u32 = R0

000001af:
000001f3: R16 := 0x11000
000001f7: R17 := mem[R16 + 0x10, el]:u64
000001fb: R16 := R16 + 0x10
000001ff: call R17 with noreturn

0000023b: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
00000253: __libc_start_main_main :: in u64 = R0
00000254: __libc_start_main_arg2 :: in u32 = R1
00000255: __libc_start_main_arg3 :: in out u64 = R2
00000256: __libc_start_main_auxv :: in out u64 = R3
00000257: __libc_start_main_result :: out u32 = R0

00000051:
000001d3: R16 := 0x11000
000001d7: R17 := mem[R16, el]:u64
000001db: R16 := R16
000001df: call R17 with noreturn

0000023c: sub _fini(_fini_result)
00000258: _fini_result :: out u32 = R0

00000009:
0000000d: mem := mem with [R31 - 0x10, el]:u64 <- R29
0000000f: mem := mem with [R31 - 8, el]:u64 <- R30
00000011: R31 := R31 - 0x10
00000015: R29 := R31
00000019: R29 := mem[R31, el]:u64
0000001b: R30 := mem[R31 + 8, el]:u64
0000001d: R31 := R31 + 0x10
00000021: call R30 with noreturn

0000023d: sub _init(_init_result)
00000259: _init_result :: out u32 = R0

00000212:
00000216: mem := mem with [R31 - 0x10, el]:u64 <- R29
00000218: mem := mem with [R31 - 8, el]:u64 <- R30
0000021a: R31 := R31 - 0x10
0000021e: R29 := R31
00000222: R30 := 0x590
00000224: call @call_weak_fn with return %00000226

00000226:
00000228: R29 := mem[R31, el]:u64
0000022a: R30 := mem[R31 + 8, el]:u64
0000022c: R31 := R31 + 0x10
00000230: call R30 with noreturn

0000023e: sub _start(_start_result)
0000025a: _start_result :: out u32 = R0

00000024:
00000028: R29 := 0
0000002c: R30 := 0
00000030: R5 := R0
00000034: R1 := mem[R31, el]:u64
00000038: R2 := R31 + 8
0000003c: R6 := R31
00000040: R0 := 0x10000
00000044: R0 := mem[R0 + 0xFD8, el]:u64
00000048: R3 := 0
0000004c: R4 := 0
00000050: R30 := 0x630
00000053: call @__libc_start_main with return %00000055

00000055:
00000057: R30 := 0x634
0000005a: call @abort with return %0000023f

0000023f:
00000240: call @call_weak_fn with noreturn

00000241: sub abort()


00000058:
00000203: R16 := 0x11000
00000207: R17 := mem[R16 + 0x18, el]:u64
0000020b: R16 := R16 + 0x18
0000020f: call R17 with noreturn

00000242: sub call_weak_fn(call_weak_fn_result)
0000025b: call_weak_fn_result :: out u32 = R0

0000005c:
0000005e: R0 := 0x10000
00000062: R0 := mem[R0 + 0xFD0, el]:u64
0000006b: #6 := R0 = 0
00000067: when #6 goto %00000065
00000243: goto %000001ae

00000065:
0000006e: call R30 with noreturn

000001ae:
000001b1: call @__gmon_start__ with noreturn

00000244: sub deregister_tm_clones(deregister_tm_clones_result)
0000025c: deregister_tm_clones_result :: out u32 = R0

00000075:
00000077: R0 := 0x11000
0000007b: R0 := R0 + 0x30
0000007f: R1 := 0x11000
00000083: R1 := R1 + 0x30
00000087: #10 := 1 + ~R0 + R1
00000089: NF := extract:63:63[#10]
0000008b: VF := extract:63:63[R1] & extract:63:63[~R0] & ~extract:63:63[#10]
          | ~extract:63:63[R1] & ~extract:63:63[~R0] & extract:63:63[#10]
0000008d: ZF := #10 = 0
0000008f: CF := extract:63:63[R1] & extract:63:63[~R0] | extract:63:63[~R0] &
          ~extract:63:63[#10] | extract:63:63[R1] & ~extract:63:63[#10]
00000098: #12 := ZF
00000094: when #12 goto %00000092
00000245: goto %00000195

00000195:
00000197: R1 := 0x10000
0000019b: R1 := mem[R1 + 0xFC0, el]:u64
000001a3: #42 := R1 = 0
0000019f: when #42 goto %00000092
00000246: goto %000001a5

00000092:
0000009b: call R30 with noreturn

000001a5:
000001a7: R16 := R1
000001ab: call R16 with noreturn

00000247: sub frame_dummy(frame_dummy_result)
0000025d: frame_dummy_result :: out u32 = R0

00000106:
00000108: call @register_tm_clones with noreturn

00000248: sub main(main_argc, main_argv, main_result)
0000025e: main_argc :: in u32 = R0
0000025f: main_argv :: in out u64 = R1
00000260: main_result :: out u32 = R0

0000010a:
0000010c: R31 := R31 - 0x10
00000110: R0 := 0
00000112: R0 := R0 & 0xFFFFFFFF00000000 | 5
00000116: mem := mem with [R31 + 0xC, el]:u32 <- low:32[extract:31:0[R0]]
0000011a: #29 := pad:64[mem[R31 + 0xC, el]:u32]
0000011c: R0 := 0
0000011e: R0 := R0 & 0xFFFFFFFF00000000 | pad:64[#29]
00000122: #30 := 0xFFFFFFFFFFFFFFFB + extend:64[extract:31:0[R0]]
00000124: NF := extract:63:63[#30]
00000126: VF := extract:31:31[extract:31:0[R0]] & ~extract:63:63[#30]
00000128: ZF := #30 = 0
0000012a: CF := extract:31:31[extract:31:0[R0]] |
          extract:31:31[extract:31:0[R0]] & ~extract:63:63[#30] |
          ~extract:63:63[#30]
00000133: #32 := ~ZF <> 0
0000012f: when #32 goto %0000012d
00000249: goto %00000143

00000143:
00000145: R0 := 0
00000147: R0 := R0 & 0xFFFFFFFF00000000 | 6
0000014b: mem := mem with [R31 + 0xC, el]:u32 <- low:32[extract:31:0[R0]]
0000024a: goto %0000012d

0000012d:
00000136: R0 := 0
00000138: R0 := R0 & 0xFFFFFFFF00000000
0000013c: R31 := R31 + 0x10
00000140: call R30 with noreturn

0000024b: sub register_tm_clones(register_tm_clones_result)
00000261: register_tm_clones_result :: out u32 = R0

0000009e:
000000a0: R0 := 0x11000
000000a4: R0 := R0 + 0x30
000000a8: R1 := 0x11000
000000ac: R1 := R1 + 0x30
000000b0: R1 := R1 - R0
000000b4: R2 := R1 >> 0x3F
000000b8: R1 := R2 + (R1 ~>> 3)
000000bc: R1 := R1 >> 1
000000c5: #21 := R1 = 0
000000c1: when #21 goto %000000bf
0000024c: goto %0000017c

0000017c:
0000017e: R2 := 0x10000
00000182: R2 := mem[R2 + 0xFE0, el]:u64
0000018a: #38 := R2 = 0
00000186: when #38 goto %000000bf
0000024d: goto %0000018c

000000bf:
000000c8: call R30 with noreturn

0000018c:
0000018e: R16 := R2
00000192: call R16 with noreturn
