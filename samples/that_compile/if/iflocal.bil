00000244: program
0000022a: sub .plt(\.plt_result)
00000245: \.plt_result :: out u32 = R0

000001a9:
000001ab: mem := mem with [R31 - 0x10, el]:u64 <- R16
000001ad: mem := mem with [R31 - 8, el]:u64 <- R30
000001af: R31 := R31 - 0x10
000001b3: R16 := 0x10000
000001b7: R17 := mem[R16 + 0xFF8, el]:u64
000001bb: R16 := R16 + 0xFF8
000001bf: call R17 with noreturn

0000022b: sub __cxa_finalize(__cxa_finalize_result)
00000246: __cxa_finalize_result :: out u32 = R0

0000016e:
000001d9: R16 := 0x11000
000001dd: R17 := mem[R16 + 8, el]:u64
000001e1: R16 := R16 + 8
000001e5: call R17 with noreturn

0000022c: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
00000247: __do_global_dtors_aux_result :: out u32 = R0

000000cd:
000000cf: mem := mem with [R31 - 0x20, el]:u64 <- R29
000000d1: mem := mem with [R31 - 0x18, el]:u64 <- R30
000000d3: R31 := R31 - 0x20
000000d7: R29 := R31
000000db: mem := mem with [R31 + 0x10, el]:u64 <- R19
000000df: R19 := 0x11000
000000e3: #24 := pad:64[mem[R19 + 0x30]]
000000e5: R0 := 0
000000e7: R0 := R0 & 0xFFFFFFFF00000000 | pad:64[#24]
000000f0: #25 := extract:31:0[R0] <> 0
000000ec: when #25 goto %000000ea
0000022d: goto %00000143

00000143:
00000145: R0 := 0x10000
00000149: R0 := mem[R0 + 0xFC8, el]:u64
00000152: #34 := R0 = 0
0000014e: when #34 goto %0000014c
0000022e: goto %00000163

00000163:
00000165: R0 := 0x11000
00000169: R0 := mem[R0 + 0x28, el]:u64
0000016d: R30 := 0x6F0
00000170: call @__cxa_finalize with return %0000014c

0000014c:
00000155: R30 := 0x6F4
00000157: call @deregister_tm_clones with return %00000159

00000159:
0000015b: R0 := 0
0000015d: R0 := R0 & 0xFFFFFFFF00000000 | 1
00000161: mem := mem with [R19 + 0x30] <- low:8[extract:31:0[R0]]
0000022f: goto %000000ea

000000ea:
000000f3: R19 := mem[R31 + 0x10, el]:u64
000000f7: R29 := mem[R31, el]:u64
000000f9: R30 := mem[R31 + 8, el]:u64
000000fb: R31 := R31 + 0x20
000000ff: call R30 with noreturn

00000230: sub __gmon_start__(__gmon_start___result)
00000248: __gmon_start___result :: out u32 = R0

000001a5:
000001e9: R16 := 0x11000
000001ed: R17 := mem[R16 + 0x10, el]:u64
000001f1: R16 := R16 + 0x10
000001f5: call R17 with noreturn

00000231: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
00000249: __libc_start_main_main :: in u64 = R0
0000024a: __libc_start_main_arg2 :: in u32 = R1
0000024b: __libc_start_main_arg3 :: in out u64 = R2
0000024c: __libc_start_main_auxv :: in out u64 = R3
0000024d: __libc_start_main_result :: out u32 = R0

00000051:
000001c9: R16 := 0x11000
000001cd: R17 := mem[R16, el]:u64
000001d1: R16 := R16
000001d5: call R17 with noreturn

00000232: sub _fini(_fini_result)
0000024e: _fini_result :: out u32 = R0

00000009:
0000000d: mem := mem with [R31 - 0x10, el]:u64 <- R29
0000000f: mem := mem with [R31 - 8, el]:u64 <- R30
00000011: R31 := R31 - 0x10
00000015: R29 := R31
00000019: R29 := mem[R31, el]:u64
0000001b: R30 := mem[R31 + 8, el]:u64
0000001d: R31 := R31 + 0x10
00000021: call R30 with noreturn

00000233: sub _init(_init_result)
0000024f: _init_result :: out u32 = R0

00000208:
0000020c: mem := mem with [R31 - 0x10, el]:u64 <- R29
0000020e: mem := mem with [R31 - 8, el]:u64 <- R30
00000210: R31 := R31 - 0x10
00000214: R29 := R31
00000218: R30 := 0x590
0000021a: call @call_weak_fn with return %0000021c

0000021c:
0000021e: R29 := mem[R31, el]:u64
00000220: R30 := mem[R31 + 8, el]:u64
00000222: R31 := R31 + 0x10
00000226: call R30 with noreturn

00000234: sub _start(_start_result)
00000250: _start_result :: out u32 = R0

00000024:
00000028: R29 := 0
0000002c: R30 := 0
00000030: R5 := R0
00000034: R1 := mem[R31, el]:u64
00000038: R2 := R31 + 8
0000003c: R6 := R31
00000040: R0 := 0x10000
00000044: R0 := mem[R0 + 0xFD8, el]:u64
00000048: R3 := 0
0000004c: R4 := 0
00000050: R30 := 0x630
00000053: call @__libc_start_main with return %00000055

00000055:
00000057: R30 := 0x634
0000005a: call @abort with return %00000235

00000235:
00000236: call @call_weak_fn with noreturn

00000237: sub abort()


00000058:
000001f9: R16 := 0x11000
000001fd: R17 := mem[R16 + 0x18, el]:u64
00000201: R16 := R16 + 0x18
00000205: call R17 with noreturn

00000238: sub call_weak_fn(call_weak_fn_result)
00000251: call_weak_fn_result :: out u32 = R0

0000005c:
0000005e: R0 := 0x10000
00000062: R0 := mem[R0 + 0xFD0, el]:u64
0000006b: #6 := R0 = 0
00000067: when #6 goto %00000065
00000239: goto %000001a4

00000065:
0000006e: call R30 with noreturn

000001a4:
000001a7: call @__gmon_start__ with noreturn

0000023a: sub deregister_tm_clones(deregister_tm_clones_result)
00000252: deregister_tm_clones_result :: out u32 = R0

00000075:
00000077: R0 := 0x11000
0000007b: R0 := R0 + 0x30
0000007f: R1 := 0x11000
00000083: R1 := R1 + 0x30
00000087: #10 := 1 + ~R0 + R1
00000089: NF := extract:63:63[#10]
0000008b: VF := extract:63:63[R1] & extract:63:63[~R0] & ~extract:63:63[#10]
          | ~extract:63:63[R1] & ~extract:63:63[~R0] & extract:63:63[#10]
0000008d: ZF := #10 = 0
0000008f: CF := extract:63:63[R1] & extract:63:63[~R0] | extract:63:63[~R0] &
          ~extract:63:63[#10] | extract:63:63[R1] & ~extract:63:63[#10]
00000098: #12 := ZF
00000094: when #12 goto %00000092
0000023b: goto %0000018b

0000018b:
0000018d: R1 := 0x10000
00000191: R1 := mem[R1 + 0xFC0, el]:u64
00000199: #40 := R1 = 0
00000195: when #40 goto %00000092
0000023c: goto %0000019b

00000092:
0000009b: call R30 with noreturn

0000019b:
0000019d: R16 := R1
000001a1: call R16 with noreturn

0000023d: sub frame_dummy(frame_dummy_result)
00000253: frame_dummy_result :: out u32 = R0

00000106:
00000108: call @register_tm_clones with noreturn

0000023e: sub main(main_argc, main_argv, main_result)
00000254: main_argc :: in u32 = R0
00000255: main_argv :: in out u64 = R1
00000256: main_result :: out u32 = R0

0000010a:
0000010c: R31 := R31 - 0x10
00000110: #27 := pad:64[mem[R31 + 0xC, el]:u32]
00000112: R0 := 0
00000114: R0 := R0 & 0xFFFFFFFF00000000 | pad:64[#27]
00000118: #28 := extend:64[extract:31:0[R0]]
0000011a: NF := extract:63:63[#28]
0000011c: VF := extract:31:31[extract:31:0[R0]] & ~extract:63:63[#28]
0000011e: ZF := #28 = 0
00000120: CF := extract:31:31[extract:31:0[R0]] |
          extract:31:31[extract:31:0[R0]] & ~extract:63:63[#28] |
          ~extract:63:63[#28]
00000129: #30 := ~ZF <> 0
00000125: when #30 goto %00000123
0000023f: goto %00000139

00000139:
0000013b: R0 := 0
0000013d: R0 := R0 & 0xFFFFFFFF00000000 | 1
00000141: mem := mem with [R31 + 0xC, el]:u32 <- low:32[extract:31:0[R0]]
00000240: goto %00000123

00000123:
0000012c: R0 := 0
0000012e: R0 := R0 & 0xFFFFFFFF00000000
00000132: R31 := R31 + 0x10
00000136: call R30 with noreturn

00000241: sub register_tm_clones(register_tm_clones_result)
00000257: register_tm_clones_result :: out u32 = R0

0000009e:
000000a0: R0 := 0x11000
000000a4: R0 := R0 + 0x30
000000a8: R1 := 0x11000
000000ac: R1 := R1 + 0x30
000000b0: R1 := R1 - R0
000000b4: R2 := R1 >> 0x3F
000000b8: R1 := R2 + (R1 ~>> 3)
000000bc: R1 := R1 >> 1
000000c5: #21 := R1 = 0
000000c1: when #21 goto %000000bf
00000242: goto %00000172

00000172:
00000174: R2 := 0x10000
00000178: R2 := mem[R2 + 0xFE0, el]:u64
00000180: #36 := R2 = 0
0000017c: when #36 goto %000000bf
00000243: goto %00000182

000000bf:
000000c8: call R30 with noreturn

00000182:
00000184: R16 := R2
00000188: call R16 with noreturn
