0000023c: program
00000224: sub .plt(\.plt_result)
0000023d: \.plt_result :: out u32 = R0

000001a3:
000001a5: mem := mem with [R31 - 0x10, el]:u64 <- R16
000001a7: mem := mem with [R31 - 8, el]:u64 <- R30
000001a9: R31 := R31 - 0x10
000001ad: R16 := 0x10000
000001b1: R17 := mem[R16 + 0xFF8, el]:u64
000001b5: R16 := R16 + 0xFF8
000001b9: call R17 with noreturn

00000225: sub __cxa_finalize(__cxa_finalize_result)
0000023e: __cxa_finalize_result :: out u32 = R0

00000168:
000001d3: R16 := 0x11000
000001d7: R17 := mem[R16 + 8, el]:u64
000001db: R16 := R16 + 8
000001df: call R17 with noreturn

00000226: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
0000023f: __do_global_dtors_aux_result :: out u32 = R0

000000cd:
000000cf: mem := mem with [R31 - 0x20, el]:u64 <- R29
000000d1: mem := mem with [R31 - 0x18, el]:u64 <- R30
000000d3: R31 := R31 - 0x20
000000d7: R29 := R31
000000db: mem := mem with [R31 + 0x10, el]:u64 <- R19
000000df: R19 := 0x11000
000000e3: #23 := pad:64[mem[R19 + 0x30]]
000000e5: R0 := 0
000000e7: R0 := R0 & 0xFFFFFFFF00000000 | pad:64[#23]
000000f0: #24 := extract:31:0[R0] <> 0
000000ec: when #24 goto %000000ea
00000227: goto %0000013d

0000013d:
0000013f: R0 := 0x10000
00000143: R0 := mem[R0 + 0xFC8, el]:u64
0000014c: #33 := R0 = 0
00000148: when #33 goto %00000146
00000228: goto %0000015d

0000015d:
0000015f: R0 := 0x11000
00000163: R0 := mem[R0 + 0x28, el]:u64
00000167: R30 := 0x6F0
0000016a: call @__cxa_finalize with return %00000146

00000146:
0000014f: R30 := 0x6F4
00000151: call @deregister_tm_clones with return %00000153

00000153:
00000155: R0 := 0
00000157: R0 := R0 & 0xFFFFFFFF00000000 | 1
0000015b: mem := mem with [R19 + 0x30] <- low:8[extract:31:0[R0]]
00000229: goto %000000ea

000000ea:
000000f3: R19 := mem[R31 + 0x10, el]:u64
000000f7: R29 := mem[R31, el]:u64
000000f9: R30 := mem[R31 + 8, el]:u64
000000fb: R31 := R31 + 0x20
000000ff: call R30 with noreturn

0000022a: sub __gmon_start__(__gmon_start___result)
00000240: __gmon_start___result :: out u32 = R0

0000019f:
000001e3: R16 := 0x11000
000001e7: R17 := mem[R16 + 0x10, el]:u64
000001eb: R16 := R16 + 0x10
000001ef: call R17 with noreturn

0000022b: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
00000241: __libc_start_main_main :: in u64 = R0
00000242: __libc_start_main_arg2 :: in u32 = R1
00000243: __libc_start_main_arg3 :: in out u64 = R2
00000244: __libc_start_main_auxv :: in out u64 = R3
00000245: __libc_start_main_result :: out u32 = R0

00000051:
000001c3: R16 := 0x11000
000001c7: R17 := mem[R16, el]:u64
000001cb: R16 := R16
000001cf: call R17 with noreturn

0000022c: sub _fini(_fini_result)
00000246: _fini_result :: out u32 = R0

00000009:
0000000d: mem := mem with [R31 - 0x10, el]:u64 <- R29
0000000f: mem := mem with [R31 - 8, el]:u64 <- R30
00000011: R31 := R31 - 0x10
00000015: R29 := R31
00000019: R29 := mem[R31, el]:u64
0000001b: R30 := mem[R31 + 8, el]:u64
0000001d: R31 := R31 + 0x10
00000021: call R30 with noreturn

0000022d: sub _init(_init_result)
00000247: _init_result :: out u32 = R0

00000202:
00000206: mem := mem with [R31 - 0x10, el]:u64 <- R29
00000208: mem := mem with [R31 - 8, el]:u64 <- R30
0000020a: R31 := R31 - 0x10
0000020e: R29 := R31
00000212: R30 := 0x590
00000214: call @call_weak_fn with return %00000216

00000216:
00000218: R29 := mem[R31, el]:u64
0000021a: R30 := mem[R31 + 8, el]:u64
0000021c: R31 := R31 + 0x10
00000220: call R30 with noreturn

0000022e: sub _start(_start_result)
00000248: _start_result :: out u32 = R0

00000024:
00000028: R29 := 0
0000002c: R30 := 0
00000030: R5 := R0
00000034: R1 := mem[R31, el]:u64
00000038: R2 := R31 + 8
0000003c: R6 := R31
00000040: R0 := 0x10000
00000044: R0 := mem[R0 + 0xFD8, el]:u64
00000048: R3 := 0
0000004c: R4 := 0
00000050: R30 := 0x630
00000053: call @__libc_start_main with return %00000055

00000055:
00000057: R30 := 0x634
0000005a: call @abort with return %0000022f

0000022f:
00000230: call @call_weak_fn with noreturn

00000231: sub abort()


00000058:
000001f3: R16 := 0x11000
000001f7: R17 := mem[R16 + 0x18, el]:u64
000001fb: R16 := R16 + 0x18
000001ff: call R17 with noreturn

00000232: sub call_weak_fn(call_weak_fn_result)
00000249: call_weak_fn_result :: out u32 = R0

0000005c:
0000005e: R0 := 0x10000
00000062: R0 := mem[R0 + 0xFD0, el]:u64
0000006b: #5 := R0 = 0
00000067: when #5 goto %00000065
00000233: goto %0000019e

00000065:
0000006e: call R30 with noreturn

0000019e:
000001a1: call @__gmon_start__ with noreturn

00000234: sub deregister_tm_clones(deregister_tm_clones_result)
0000024a: deregister_tm_clones_result :: out u32 = R0

00000075:
00000077: R0 := 0x11000
0000007b: R0 := R0 + 0x30
0000007f: R1 := 0x11000
00000083: R1 := R1 + 0x30
00000087: #9 := 1 + ~R0 + R1
00000089: NF := extract:63:63[#9]
0000008b: VF := extract:63:63[R1] & extract:63:63[~R0] & ~extract:63:63[#9] |
          ~extract:63:63[R1] & ~extract:63:63[~R0] & extract:63:63[#9]
0000008d: ZF := #9 = 0
0000008f: CF := extract:63:63[R1] & extract:63:63[~R0] | extract:63:63[~R0] &
          ~extract:63:63[#9] | extract:63:63[R1] & ~extract:63:63[#9]
00000098: #11 := ZF
00000094: when #11 goto %00000092
00000235: goto %00000185

00000185:
00000187: R1 := 0x10000
0000018b: R1 := mem[R1 + 0xFC0, el]:u64
00000193: #39 := R1 = 0
0000018f: when #39 goto %00000092
00000236: goto %00000195

00000092:
0000009b: call R30 with noreturn

00000195:
00000197: R16 := R1
0000019b: call R16 with noreturn

00000237: sub frame_dummy(frame_dummy_result)
0000024b: frame_dummy_result :: out u32 = R0

00000106:
00000108: call @register_tm_clones with noreturn

00000238: sub main(main_argc, main_argv, main_result)
0000024c: main_argc :: in u32 = R0
0000024d: main_argv :: in out u64 = R1
0000024e: main_result :: out u32 = R0

0000010a:
0000010c: R31 := R31 - 0x20
00000110: R0 := 0
00000112: R0 := R0 & 0xFFFFFFFF00000000 | 3
00000116: mem := mem with [R31 + 0x10, el]:u32 <- low:32[extract:31:0[R0]]
0000011a: R0 := 0
0000011c: R0 := R0 & 0xFFFFFFFF00000000 | 7
00000120: mem := mem with [R31 + 0x18, el]:u32 <- low:32[extract:31:0[R0]]
00000124: #30 := pad:64[mem[R31 + 0x10, el]:u32]
00000126: R0 := 0
00000128: R0 := R0 & 0xFFFFFFFF00000000 | pad:64[#30]
0000012c: mem := mem with [R31 + 0x1C, el]:u32 <- low:32[extract:31:0[R0]]
00000130: R0 := 0
00000132: R0 := R0 & 0xFFFFFFFF00000000
00000136: R31 := R31 + 0x20
0000013a: call R30 with noreturn

00000239: sub register_tm_clones(register_tm_clones_result)
0000024f: register_tm_clones_result :: out u32 = R0

0000009e:
000000a0: R0 := 0x11000
000000a4: R0 := R0 + 0x30
000000a8: R1 := 0x11000
000000ac: R1 := R1 + 0x30
000000b0: R1 := R1 - R0
000000b4: R2 := R1 >> 0x3F
000000b8: R1 := R2 + (R1 ~>> 3)
000000bc: R1 := R1 >> 1
000000c5: #20 := R1 = 0
000000c1: when #20 goto %000000bf
0000023a: goto %0000016c

0000016c:
0000016e: R2 := 0x10000
00000172: R2 := mem[R2 + 0xFE0, el]:u64
0000017a: #35 := R2 = 0
00000176: when #35 goto %000000bf
0000023b: goto %0000017c

000000bf:
000000c8: call R30 with noreturn

0000017c:
0000017e: R16 := R2
00000182: call R16 with noreturn
