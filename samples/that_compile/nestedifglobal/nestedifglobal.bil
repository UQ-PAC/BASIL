000002b2: program
00000294: sub .plt(\.plt_result)
000002b3: \.plt_result :: out u32 = R0

00000213:
00000215: mem := mem with [R31 - 0x10, el]:u64 <- R16
00000217: mem := mem with [R31 - 8, el]:u64 <- R30
00000219: R31 := R31 - 0x10
0000021d: R16 := 0x10000
00000221: R17 := mem[R16 + 0xFF8, el]:u64
00000225: R16 := R16 + 0xFF8
00000229: call R17 with noreturn

00000295: sub __cxa_finalize(__cxa_finalize_result)
000002b4: __cxa_finalize_result :: out u32 = R0

000001d8:
00000243: R16 := 0x11000
00000247: R17 := mem[R16 + 8, el]:u64
0000024b: R16 := R16 + 8
0000024f: call R17 with noreturn

00000296: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
000002b5: __do_global_dtors_aux_result :: out u32 = R0

000000cd:
000000cf: mem := mem with [R31 - 0x20, el]:u64 <- R29
000000d1: mem := mem with [R31 - 0x18, el]:u64 <- R30
000000d3: R31 := R31 - 0x20
000000d7: R29 := R31
000000db: mem := mem with [R31 + 0x10, el]:u64 <- R19
000000df: R19 := 0x11000
000000e3: #24 := pad:64[mem[R19 + 0x30]]
000000e5: R0 := 0
000000e7: R0 := R0 & 0xFFFFFFFF00000000 | pad:64[#24]
000000f0: #25 := extract:31:0[R0] <> 0
000000ec: when #25 goto %000000ea
00000297: goto %000001ad

000001ad:
000001af: R0 := 0x10000
000001b3: R0 := mem[R0 + 0xFC8, el]:u64
000001bc: #47 := R0 = 0
000001b8: when #47 goto %000001b6
00000298: goto %000001cd

000001cd:
000001cf: R0 := 0x11000
000001d3: R0 := mem[R0 + 0x28, el]:u64
000001d7: R30 := 0x6F0
000001da: call @__cxa_finalize with return %000001b6

000001b6:
000001bf: R30 := 0x6F4
000001c1: call @deregister_tm_clones with return %000001c3

000001c3:
000001c5: R0 := 0
000001c7: R0 := R0 & 0xFFFFFFFF00000000 | 1
000001cb: mem := mem with [R19 + 0x30] <- low:8[extract:31:0[R0]]
00000299: goto %000000ea

000000ea:
000000f3: R19 := mem[R31 + 0x10, el]:u64
000000f7: R29 := mem[R31, el]:u64
000000f9: R30 := mem[R31 + 8, el]:u64
000000fb: R31 := R31 + 0x20
000000ff: call R30 with noreturn

0000029a: sub __gmon_start__(__gmon_start___result)
000002b6: __gmon_start___result :: out u32 = R0

0000020f:
00000253: R16 := 0x11000
00000257: R17 := mem[R16 + 0x10, el]:u64
0000025b: R16 := R16 + 0x10
0000025f: call R17 with noreturn

0000029b: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
000002b7: __libc_start_main_main :: in u64 = R0
000002b8: __libc_start_main_arg2 :: in u32 = R1
000002b9: __libc_start_main_arg3 :: in out u64 = R2
000002ba: __libc_start_main_auxv :: in out u64 = R3
000002bb: __libc_start_main_result :: out u32 = R0

00000051:
00000233: R16 := 0x11000
00000237: R17 := mem[R16, el]:u64
0000023b: R16 := R16
0000023f: call R17 with noreturn

0000029c: sub _fini(_fini_result)
000002bc: _fini_result :: out u32 = R0

00000009:
0000000d: mem := mem with [R31 - 0x10, el]:u64 <- R29
0000000f: mem := mem with [R31 - 8, el]:u64 <- R30
00000011: R31 := R31 - 0x10
00000015: R29 := R31
00000019: R29 := mem[R31, el]:u64
0000001b: R30 := mem[R31 + 8, el]:u64
0000001d: R31 := R31 + 0x10
00000021: call R30 with noreturn

0000029d: sub _init(_init_result)
000002bd: _init_result :: out u32 = R0

00000272:
00000276: mem := mem with [R31 - 0x10, el]:u64 <- R29
00000278: mem := mem with [R31 - 8, el]:u64 <- R30
0000027a: R31 := R31 - 0x10
0000027e: R29 := R31
00000282: R30 := 0x590
00000284: call @call_weak_fn with return %00000286

00000286:
00000288: R29 := mem[R31, el]:u64
0000028a: R30 := mem[R31 + 8, el]:u64
0000028c: R31 := R31 + 0x10
00000290: call R30 with noreturn

0000029e: sub _start(_start_result)
000002be: _start_result :: out u32 = R0

00000024:
00000028: R29 := 0
0000002c: R30 := 0
00000030: R5 := R0
00000034: R1 := mem[R31, el]:u64
00000038: R2 := R31 + 8
0000003c: R6 := R31
00000040: R0 := 0x10000
00000044: R0 := mem[R0 + 0xFD8, el]:u64
00000048: R3 := 0
0000004c: R4 := 0
00000050: R30 := 0x630
00000053: call @__libc_start_main with return %00000055

00000055:
00000057: R30 := 0x634
0000005a: call @abort with return %0000029f

0000029f:
000002a0: call @call_weak_fn with noreturn

000002a1: sub abort()


00000058:
00000263: R16 := 0x11000
00000267: R17 := mem[R16 + 0x18, el]:u64
0000026b: R16 := R16 + 0x18
0000026f: call R17 with noreturn

000002a2: sub call_weak_fn(call_weak_fn_result)
000002bf: call_weak_fn_result :: out u32 = R0

0000005c:
0000005e: R0 := 0x10000
00000062: R0 := mem[R0 + 0xFD0, el]:u64
0000006b: #6 := R0 = 0
00000067: when #6 goto %00000065
000002a3: goto %0000020e

00000065:
0000006e: call R30 with noreturn

0000020e:
00000211: call @__gmon_start__ with noreturn

000002a4: sub deregister_tm_clones(deregister_tm_clones_result)
000002c0: deregister_tm_clones_result :: out u32 = R0

00000075:
00000077: R0 := 0x11000
0000007b: R0 := R0 + 0x30
0000007f: R1 := 0x11000
00000083: R1 := R1 + 0x30
00000087: #10 := 1 + ~R0 + R1
00000089: NF := extract:63:63[#10]
0000008b: VF := extract:63:63[R1] & extract:63:63[~R0] & ~extract:63:63[#10]
          | ~extract:63:63[R1] & ~extract:63:63[~R0] & extract:63:63[#10]
0000008d: ZF := #10 = 0
0000008f: CF := extract:63:63[R1] & extract:63:63[~R0] | extract:63:63[~R0] &
          ~extract:63:63[#10] | extract:63:63[R1] & ~extract:63:63[#10]
00000098: #12 := ZF
00000094: when #12 goto %00000092
000002a5: goto %000001f5

000001f5:
000001f7: R1 := 0x10000
000001fb: R1 := mem[R1 + 0xFC0, el]:u64
00000203: #53 := R1 = 0
000001ff: when #53 goto %00000092
000002a6: goto %00000205

00000092:
0000009b: call R30 with noreturn

00000205:
00000207: R16 := R1
0000020b: call R16 with noreturn

000002a7: sub frame_dummy(frame_dummy_result)
000002c1: frame_dummy_result :: out u32 = R0

00000106:
00000108: call @register_tm_clones with noreturn

000002a8: sub main(main_argc, main_argv, main_result)
000002c2: main_argc :: in u32 = R0
000002c3: main_argv :: in out u64 = R1
000002c4: main_result :: out u32 = R0

0000010a:
0000010c: R31 := R31 - 0x10
00000110: mem := mem with [R31 + 0xC, el]:u32 <- 0
00000114: R0 := 0x11000
00000118: R0 := R0 + 0x34
0000011c: #28 := pad:64[mem[R0, el]:u32]
0000011e: R0 := 0
00000120: R0 := R0 & 0xFFFFFFFF00000000 | pad:64[#28]
00000124: #29 := extend:64[extract:31:0[R0]]
00000126: NF := extract:63:63[#29]
00000128: VF := extract:31:31[extract:31:0[R0]] & ~extract:63:63[#29]
0000012a: ZF := #29 = 0
0000012c: CF := extract:31:31[extract:31:0[R0]] |
          extract:31:31[extract:31:0[R0]] & ~extract:63:63[#29] |
          ~extract:63:63[#29]
00000135: #31 := ~ZF <> 0
00000131: when #31 goto %0000012f
000002a9: goto %000001a3

000001a3:
000001a5: R0 := 0
000001a7: R0 := R0 & 0xFFFFFFFF00000000 | 3
000001ab: mem := mem with [R31 + 0xC, el]:u32 <- low:32[extract:31:0[R0]]
000002aa: goto %0000012f

0000012f:
00000138: R0 := 0x11000
0000013c: R0 := R0 + 0x34
00000140: #32 := pad:64[mem[R0, el]:u32]
00000142: R0 := 0
00000144: R0 := R0 & 0xFFFFFFFF00000000 | pad:64[#32]
00000148: #33 := 0xFFFFFFFFFFFFFFFF + extend:64[extract:31:0[R0]]
0000014a: NF := extract:63:63[#33]
0000014c: VF := extract:31:31[extract:31:0[R0]] & ~extract:63:63[#33]
0000014e: ZF := #33 = 0
00000150: CF := extract:31:31[extract:31:0[R0]] |
          extract:31:31[extract:31:0[R0]] & ~extract:63:63[#33] |
          ~extract:63:63[#33]
00000159: #35 := ~ZF <> 0
00000155: when #35 goto %00000153
000002ab: goto %00000199

00000199:
0000019b: R0 := 0
0000019d: R0 := R0 & 0xFFFFFFFF00000000 | 5
000001a1: mem := mem with [R31 + 0xC, el]:u32 <- low:32[extract:31:0[R0]]
000002ac: goto %00000153

00000153:
0000015c: #36 := pad:64[mem[R31 + 0xC, el]:u32]
0000015e: R0 := 0
00000160: R0 := R0 & 0xFFFFFFFF00000000 | pad:64[#36]
00000164: #37 := 0xFFFFFFFFFFFFFFFD + extend:64[extract:31:0[R0]]
00000166: NF := extract:63:63[#37]
00000168: VF := extract:31:31[extract:31:0[R0]] & ~extract:63:63[#37]
0000016a: ZF := #37 = 0
0000016c: CF := extract:31:31[extract:31:0[R0]] |
          extract:31:31[extract:31:0[R0]] & ~extract:63:63[#37] |
          ~extract:63:63[#37]
00000175: #39 := ~ZF <> 0
00000171: when #39 goto %0000016f
000002ad: goto %00000185

00000185:
00000187: R0 := 0x11000
0000018b: R0 := R0 + 0x38
0000018f: #41 := pad:64[mem[R0, el]:u32]
00000191: R0 := 0
00000193: R0 := R0 & 0xFFFFFFFF00000000 | pad:64[#41]
00000197: mem := mem with [R31 + 0xC, el]:u32 <- low:32[extract:31:0[R0]]
000002ae: goto %0000016f

0000016f:
00000178: R0 := 0
0000017a: R0 := R0 & 0xFFFFFFFF00000000
0000017e: R31 := R31 + 0x10
00000182: call R30 with noreturn

000002af: sub register_tm_clones(register_tm_clones_result)
000002c5: register_tm_clones_result :: out u32 = R0

0000009e:
000000a0: R0 := 0x11000
000000a4: R0 := R0 + 0x30
000000a8: R1 := 0x11000
000000ac: R1 := R1 + 0x30
000000b0: R1 := R1 - R0
000000b4: R2 := R1 >> 0x3F
000000b8: R1 := R2 + (R1 ~>> 3)
000000bc: R1 := R1 >> 1
000000c5: #21 := R1 = 0
000000c1: when #21 goto %000000bf
000002b0: goto %000001dc

000001dc:
000001de: R2 := 0x10000
000001e2: R2 := mem[R2 + 0xFE0, el]:u64
000001ea: #49 := R2 = 0
000001e6: when #49 goto %000000bf
000002b1: goto %000001ec

000000bf:
000000c8: call R30 with noreturn

000001ec:
000001ee: R16 := R2
000001f2: call R16 with noreturn
