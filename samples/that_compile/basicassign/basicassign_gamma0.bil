L: secret -> FALSE, x -> TRUE
GAMMA: secret -> LOW
00000230: program
00000218: sub .plt(\.plt_result)
00000231: \.plt_result :: out u32 = R0

00000197:
00000199: mem := mem with [R31 - 0x10, el]:u64 <- R16
0000019b: mem := mem with [R31 - 8, el]:u64 <- R30
0000019d: R31 := R31 - 0x10
000001a1: R16 := 0x10000
000001a5: R17 := mem[R16 + 0xFF8, el]:u64
000001a9: R16 := R16 + 0xFF8
000001ad: call R17 with noreturn

00000219: sub __cxa_finalize(__cxa_finalize_result)
00000232: __cxa_finalize_result :: out u32 = R0

0000015c:
000001c7: R16 := 0x11000
000001cb: R17 := mem[R16 + 8, el]:u64
000001cf: R16 := R16 + 8
000001d3: call R17 with noreturn

0000021a: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
00000233: __do_global_dtors_aux_result :: out u32 = R0

000000cd:
000000cf: mem := mem with [R31 - 0x20, el]:u64 <- R29
000000d1: mem := mem with [R31 - 0x18, el]:u64 <- R30
000000d3: R31 := R31 - 0x20
000000d7: R29 := R31
000000db: mem := mem with [R31 + 0x10, el]:u64 <- R19
000000df: R19 := 0x11000
000000e3: #24 := pad:64[mem[R19 + 0x30]]
000000e5: R0 := 0
000000e7: R0 := R0 & 0xFFFFFFFF00000000 | pad:64[#24]
000000f0: #25 := extract:31:0[R0] <> 0
000000ec: when #25 goto %000000ea
0000021b: goto %00000131

00000131:
00000133: R0 := 0x10000
00000137: R0 := mem[R0 + 0xFC8, el]:u64
00000140: #30 := R0 = 0
0000013c: when #30 goto %0000013a
0000021c: goto %00000151

00000151:
00000153: R0 := 0x11000
00000157: R0 := mem[R0 + 0x28, el]:u64
0000015b: R30 := 0x6F0
0000015e: call @__cxa_finalize with return %0000013a

0000013a:
00000143: R30 := 0x6F4
00000145: call @deregister_tm_clones with return %00000147

00000147:
00000149: R0 := 0
0000014b: R0 := R0 & 0xFFFFFFFF00000000 | 1
0000014f: mem := mem with [R19 + 0x30] <- low:8[extract:31:0[R0]]
0000021d: goto %000000ea

000000ea:
000000f3: R19 := mem[R31 + 0x10, el]:u64
000000f7: R29 := mem[R31, el]:u64
000000f9: R30 := mem[R31 + 8, el]:u64
000000fb: R31 := R31 + 0x20
000000ff: call R30 with noreturn

0000021e: sub __gmon_start__(__gmon_start___result)
00000234: __gmon_start___result :: out u32 = R0

00000193:
000001d7: R16 := 0x11000
000001db: R17 := mem[R16 + 0x10, el]:u64
000001df: R16 := R16 + 0x10
000001e3: call R17 with noreturn

0000021f: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
00000235: __libc_start_main_main :: in u64 = R0
00000236: __libc_start_main_arg2 :: in u32 = R1
00000237: __libc_start_main_arg3 :: in out u64 = R2
00000238: __libc_start_main_auxv :: in out u64 = R3
00000239: __libc_start_main_result :: out u32 = R0

00000051:
000001b7: R16 := 0x11000
000001bb: R17 := mem[R16, el]:u64
000001bf: R16 := R16
000001c3: call R17 with noreturn

00000220: sub _fini(_fini_result)
0000023a: _fini_result :: out u32 = R0

00000009:
0000000d: mem := mem with [R31 - 0x10, el]:u64 <- R29
0000000f: mem := mem with [R31 - 8, el]:u64 <- R30
00000011: R31 := R31 - 0x10
00000015: R29 := R31
00000019: R29 := mem[R31, el]:u64
0000001b: R30 := mem[R31 + 8, el]:u64
0000001d: R31 := R31 + 0x10
00000021: call R30 with noreturn

00000221: sub _init(_init_result)
0000023b: _init_result :: out u32 = R0

000001f6:
000001fa: mem := mem with [R31 - 0x10, el]:u64 <- R29
000001fc: mem := mem with [R31 - 8, el]:u64 <- R30
000001fe: R31 := R31 - 0x10
00000202: R29 := R31
00000206: R30 := 0x590
00000208: call @call_weak_fn with return %0000020a

0000020a:
0000020c: R29 := mem[R31, el]:u64
0000020e: R30 := mem[R31 + 8, el]:u64
00000210: R31 := R31 + 0x10
00000214: call R30 with noreturn

00000222: sub _start(_start_result)
0000023c: _start_result :: out u32 = R0

00000024:
00000028: R29 := 0
0000002c: R30 := 0
00000030: R5 := R0
00000034: R1 := mem[R31, el]:u64
00000038: R2 := R31 + 8
0000003c: R6 := R31
00000040: R0 := 0x10000
00000044: R0 := mem[R0 + 0xFD8, el]:u64
00000048: R3 := 0
0000004c: R4 := 0
00000050: R30 := 0x630
00000053: call @__libc_start_main with return %00000055

00000055:
00000057: R30 := 0x634
0000005a: call @abort with return %00000223

00000223:
00000224: call @call_weak_fn with noreturn

00000225: sub abort()


00000058:
000001e7: R16 := 0x11000
000001eb: R17 := mem[R16 + 0x18, el]:u64
000001ef: R16 := R16 + 0x18
000001f3: call R17 with noreturn

00000226: sub call_weak_fn(call_weak_fn_result)
0000023d: call_weak_fn_result :: out u32 = R0

0000005c:
0000005e: R0 := 0x10000
00000062: R0 := mem[R0 + 0xFD0, el]:u64
0000006b: #6 := R0 = 0
00000067: when #6 goto %00000065
00000227: goto %00000192

00000065:
0000006e: call R30 with noreturn

00000192:
00000195: call @__gmon_start__ with noreturn

00000228: sub deregister_tm_clones(deregister_tm_clones_result)
0000023e: deregister_tm_clones_result :: out u32 = R0

00000075:
00000077: R0 := 0x11000
0000007b: R0 := R0 + 0x30
0000007f: R1 := 0x11000
00000083: R1 := R1 + 0x30
00000087: #10 := 1 + ~R0 + R1
00000089: NF := extract:63:63[#10]
0000008b: VF := extract:63:63[R1] & extract:63:63[~R0] & ~extract:63:63[#10]
          | ~extract:63:63[R1] & ~extract:63:63[~R0] & extract:63:63[#10]
0000008d: ZF := #10 = 0
0000008f: CF := extract:63:63[R1] & extract:63:63[~R0] | extract:63:63[~R0] &
          ~extract:63:63[#10] | extract:63:63[R1] & ~extract:63:63[#10]
00000098: #12 := ZF
00000094: when #12 goto %00000092
00000229: goto %00000179

00000179:
0000017b: R1 := 0x10000
0000017f: R1 := mem[R1 + 0xFC0, el]:u64
00000187: #36 := R1 = 0
00000183: when #36 goto %00000092
0000022a: goto %00000189

00000092:
0000009b: call R30 with noreturn

00000189:
0000018b: R16 := R1
0000018f: call R16 with noreturn

0000022b: sub frame_dummy(frame_dummy_result)
0000023f: frame_dummy_result :: out u32 = R0

00000106:
00000108: call @register_tm_clones with noreturn

0000022c: sub main(main_argc, main_argv, main_result)
00000240: main_argc :: in u32 = R0
00000241: main_argv :: in out u64 = R1
00000242: main_result :: out u32 = R0

0000010a:
0000010c: R0 := 0x11000
00000110: R0 := R0 + 0x38
00000114: #27 := pad:64[mem[R0, el]:u32]
00000116: R1 := 0
00000118: R1 := R1 & 0xFFFFFFFF00000000 | pad:64[#27]
0000011c: R0 := 0x11000
00000120: R0 := R0 + 0x34
00000124: mem := mem with [R0, el]:u32 <- low:32[extract:31:0[R1]]  // x = secret
00000128: R0 := 0
0000012a: R0 := R0 & 0xFFFFFFFF00000000
0000012e: call R30 with noreturn

0000022d: sub register_tm_clones(register_tm_clones_result)
00000243: register_tm_clones_result :: out u32 = R0

0000009e:
000000a0: R0 := 0x11000
000000a4: R0 := R0 + 0x30
000000a8: R1 := 0x11000
000000ac: R1 := R1 + 0x30
000000b0: R1 := R1 - R0
000000b4: R2 := R1 >> 0x3F
000000b8: R1 := R2 + (R1 ~>> 3)
000000bc: R1 := R1 >> 1
000000c5: #21 := R1 = 0
000000c1: when #21 goto %000000bf
0000022e: goto %00000160

00000160:
00000162: R2 := 0x10000
00000166: R2 := mem[R2 + 0xFE0, el]:u64
0000016e: #32 := R2 = 0
0000016a: when #32 goto %000000bf
0000022f: goto %00000170

000000bf:
000000c8: call R30 with noreturn

00000170:
00000172: R16 := R2
00000176: call R16 with noreturn
