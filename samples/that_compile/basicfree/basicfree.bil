00000000: program
000004e2: sub __cxa_finalize(__cxa_finalize_result)
000004f7: __cxa_finalize_result :: out u32 = X0

00000386:
0000040a: X16 := 0x11000
00000411: X17 := mem[X16, el]:u64
00000418: X16 := X16
0000041e: call X17 with noreturn

000004e3: sub __libc_csu_fini(__libc_csu_fini_result)
000004f8: __libc_csu_fini_result :: out u32 = X0

000002dd:
000002e1: call LR with noreturn

000004e4: sub __libc_csu_init(__libc_csu_init_result)
000004f9: __libc_csu_init_result :: out u32 = X0

0000022b:
00000230: mem := mem with [SP - 0x40, el]:u64 <- FP
00000235: mem := mem with [SP - 0x38, el]:u64 <- LR
0000023a: SP := SP - 0x40
00000241: FP := SP
0000024a: X20 := 0x10000
00000251: X20 := X20 + 0xDC0
0000025a: X21 := 0x10000
00000261: X21 := X21 + 0xDB8
00000268: X20 := X20 - X21
0000026f: X22 := X0
00000278: X23 := X1
0000027f: X24 := X2
00000286: X20 := X20 >> 3
0000028c: LR := 0x814
00000291: call @sub_608 with return %00000293

00000293:
0000029e: #51 := X20 = 0
00000298: when #51 goto %00000296
000004e5: goto %000002e4

000002e4:
000002e9: X19 := 0
000004e6: goto %000002ed

000002ed:
000002f2: X3 := mem[X21 + (X19 << 3), el]:u64
000002f9: X2 := X24
00000300: X19 := X19 + 1
00000307: X1 := X23
0000030e: X0 := X22
00000314: LR := 0x838
00000318: call X3 with return %0000031b

0000031b:
0000031f: #71 := 1 + ~X19 + X20
00000323: NF := extract:63:63[#71]
00000327: VF := extract:63:63[X20] & extract:63:63[~X19] &
          ~extract:63:63[#71] | ~extract:63:63[X20] & ~extract:63:63[~X19] &
          extract:63:63[#71]
0000032b: ZF := #71 = 0
0000032f: CF := extract:63:63[X20] & extract:63:63[~X19] |
          extract:63:63[~X19] & ~extract:63:63[#71] | extract:63:63[X20] &
          ~extract:63:63[#71]
0000033d: #73 := ~ZF <> 0
00000337: when #73 goto %000002ed
000004e7: goto %00000296

00000296:
000002a4: X19 := mem[SP + 0x10, el]:u64
000002a9: X20 := mem[SP + 0x18, el]:u64
000002b0: X21 := mem[SP + 0x20, el]:u64
000002b5: X22 := mem[SP + 0x28, el]:u64
000002bc: X23 := mem[SP + 0x30, el]:u64
000002c1: X24 := mem[SP + 0x38, el]:u64
000002c8: FP := mem[SP, el]:u64
000002cd: LR := mem[SP + 8, el]:u64
000002d2: SP := SP + 0x40
000002d8: call LR with noreturn

000004e8: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
000004fa: __libc_start_main_main :: in u64 = X0
000004fb: __libc_start_main_arg2 :: in u32 = X1
000004fc: __libc_start_main_arg3 :: in out u64 = X2
000004fd: __libc_start_main_auxv :: in out u64 = X3
000004fe: __libc_start_main_result :: out u32 = X0

00000095:
00000440: X16 := 0x11000
00000447: X17 := mem[X16 + 0x10, el]:u64
0000044e: X16 := X16 + 0x10
00000454: call X17 with noreturn

000004e9: sub abort()


000000a0:
00000476: X16 := 0x11000
0000047d: X17 := mem[X16 + 0x20, el]:u64
00000484: X16 := X16 + 0x20
0000048a: call X17 with noreturn

000004ea: sub call_weak_fn(call_weak_fn_result)
000004ff: call_weak_fn_result :: out u32 = X0

000000a4:
000000a9: X0 := 0x10000
000000b0: X0 := mem[X0 + 0xFC8, el]:u64
000000bd: #6 := X0 = 0
000000b7: when #6 goto %000000b5
000004eb: goto %000003cc

000000b5:
000000c2: call LR with noreturn

000003cc:
000003d1: goto @__gmon_start__

000003cf:
0000045b: X16 := 0x11000
00000462: X17 := mem[X16 + 0x18, el]:u64
00000469: X16 := X16 + 0x18
0000046f: call X17 with noreturn

000004ec: sub free(free_ptr)
00000500: free_ptr :: in out u64 = X0

0000020d:
00000491: X16 := 0x11000
00000498: X17 := mem[X16 + 0x28, el]:u64
0000049f: X16 := X16 + 0x28
000004a5: call X17 with noreturn

000004ed: sub main(main_argc, main_argv, main_result)
00000501: main_argc :: in u32 = X0
00000502: main_argv :: in out u64 = X1
00000503: main_result :: out u32 = X0

000001b9:
000001be: mem := mem with [SP - 0x20, el]:u64 <- FP
000001c3: mem := mem with [SP - 0x18, el]:u64 <- LR
000001c8: SP := SP - 0x20
000001cf: FP := SP
000001d6: X0 := 4
000001dc: LR := 0x7B4
000001e1: call @malloc with return %000001e3

000001e3:
000001e8: mem := mem with [SP + 0x18, el]:u64 <- X0
000001ef: X0 := mem[SP + 0x18, el]:u64
000001f6: X1 := 1
000001fd: mem := mem with [X0, el]:u32 <- low:32[X1]
00000204: X0 := mem[SP + 0x18, el]:u64
0000020a: LR := 0x7CC
0000020f: call @free with return %00000211

00000211:
00000218: FP := mem[SP, el]:u64
0000021d: LR := mem[SP + 8, el]:u64
00000222: SP := SP + 0x20
00000228: call LR with noreturn

000004ee: sub malloc(malloc_size, malloc_result)
00000504: malloc_size :: in u64 = X0
00000505: malloc_result :: out u64 = X0

000001df:
00000425: X16 := 0x11000
0000042c: X17 := mem[X16 + 8, el]:u64
00000433: X16 := X16 + 8
00000439: call X17 with noreturn

000004ef: sub sub_608(sub_608_result)
00000506: sub_608_result :: out u32 = X0

0000028f:
000004ac: mem := mem with [SP - 0x10, el]:u64 <- FP
000004b1: mem := mem with [SP - 8, el]:u64 <- LR
000004b6: SP := SP - 0x10
000004bd: FP := SP
000004c3: LR := 0x614
000004c7: call @call_weak_fn with return %000004c9

000004c9:
000004ce: FP := mem[SP, el]:u64
000004d3: LR := mem[SP + 8, el]:u64
000004d8: SP := SP + 0x10
000004de: call LR with noreturn

000004f0: sub sub_6a0(sub_6a0_result)
00000507: sub_6a0_result :: out u32 = X0

0000003a:
0000003f: FP := 0
00000046: LR := 0
0000004d: X5 := X0
00000054: X1 := mem[SP, el]:u64
0000005b: X2 := SP + 8
00000062: X6 := SP
00000069: X0 := 0x10000
00000070: X0 := mem[X0 + 0xFD8, el]:u64
00000077: X3 := 0x10000
0000007e: X3 := mem[X3 + 0xFD0, el]:u64
00000085: X4 := 0x10000
0000008c: X4 := mem[X4 + 0xFB0, el]:u64
00000092: LR := 0x6D4
00000097: call @__libc_start_main with return %00000099

00000099:
0000009d: LR := 0x6D8
000000a2: call @abort with return %000004f1

000004f1:
000004f2: call @call_weak_fn with noreturn

000004f3: sub sub_6f0(sub_6f0_result)
00000508: sub_6f0_result :: out u32 = X0

000000c7:
000000cc: X0 := 0x11000
000000d3: X0 := X0 + 0x40
000000da: X1 := 0x11000
000000e1: X1 := X1 + 0x40
000000e7: #10 := 1 + ~X0 + X1
000000eb: NF := extract:63:63[#10]
000000ef: VF := extract:63:63[X1] & extract:63:63[~X0] & ~extract:63:63[#10]
          | ~extract:63:63[X1] & ~extract:63:63[~X0] & extract:63:63[#10]
000000f3: ZF := #10 = 0
000000f7: CF := extract:63:63[X1] & extract:63:63[~X0] | extract:63:63[~X0] &
          ~extract:63:63[#10] | extract:63:63[X1] & ~extract:63:63[#10]
00000106: #12 := ZF
00000100: when #12 goto %000000fe
000004f4: goto %000003ab

000003ab:
000003b0: X1 := 0x10000
000003b7: X1 := mem[X1 + 0xFB8, el]:u64
000003c3: #78 := X1 = 0
000003bd: when #78 goto %000000fe
000004f5: goto %000003c5

000000fe:
0000010b: call LR with noreturn

000003c5:
000003c9: call X1 with noreturn
