0000062f: program
000005f8: sub __cxa_finalize(__cxa_finalize_result)
00000630: __cxa_finalize_result :: out u32 = low:32[R0]

000003e6:
000004ee: R16 := 0x10000
000004f5: R17 := mem[R16 + 0xFA8, el]:u64
000004fb: R16 := R16 + 0xFA8
00000500: call R17 with noreturn

000005f9: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
00000631: __do_global_dtors_aux_result :: out u32 = low:32[R0]

000002a2:
000002a6: #3 := R31 - 0x20
000002ac: mem := mem with [#3, el]:u64 <- R29
000002b2: mem := mem with [#3 + 8, el]:u64 <- R30
000002b6: R31 := #3
000002bc: R29 := R31
000002c4: mem := mem with [R31 + 0x10, el]:u64 <- R19
000002c9: R19 := 0x11000
000002d0: R0 := pad:64[mem[R19 + 0x10]]
000002d7: when 31:0[R0] <> 0 goto %000002d5
00000625: goto %000003af

000003af:
000003b2: R0 := 0x10000
000003b9: R0 := mem[R0 + 0xFD8, el]:u64
000003bf: when R0 = 0 goto %000003bd
00000626: goto %000003d6

000003d6:
000003d9: R0 := 0x11000
000003e0: R0 := mem[R0 + 8, el]:u64
000003e5: R30 := 0x770
000003e8: call @__cxa_finalize with return %000003bd

000003bd:
000003c5: R30 := 0x774
000003c7: call @deregister_tm_clones with return %000003c9

000003c9:
000003cc: R0 := 1
000003d4: mem := mem with [R19 + 0x10] <- 7:0[R0]
00000627: goto %000002d5

000002d5:
000002df: R19 := mem[R31 + 0x10, el]:u64
000002e6: R29 := mem[R31, el]:u64
000002eb: R30 := mem[R31 + 8, el]:u64
000002ef: R31 := R31 + 0x20
000002f4: call R30 with noreturn

000005fd: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
00000632: __libc_start_main_main :: in u64 = R0
00000633: __libc_start_main_arg2 :: in u32 = low:32[R1]
00000634: __libc_start_main_arg3 :: in out u64 = R2
00000635: __libc_start_main_auxv :: in out u64 = R3
00000636: __libc_start_main_result :: out u32 = low:32[R0]

000001fb:
000004d8: R16 := 0x10000
000004df: R17 := mem[R16 + 0xFA0, el]:u64
000004e5: R16 := R16 + 0xFA0
000004ea: call R17 with noreturn

000005fe: sub _fini(_fini_result)
00000637: _fini_result :: out u32 = low:32[R0]

0000001f:
00000025: #0 := R31 - 0x10
0000002b: mem := mem with [#0, el]:u64 <- R29
00000031: mem := mem with [#0 + 8, el]:u64 <- R30
00000035: R31 := #0
0000003b: R29 := R31
00000042: R29 := mem[R31, el]:u64
00000047: R30 := mem[R31 + 8, el]:u64
0000004b: R31 := R31 + 0x10
00000050: call R30 with noreturn

000005ff: sub _init(_init_result)
00000638: _init_result :: out u32 = low:32[R0]

0000055e:
00000564: #7 := R31 - 0x10
0000056a: mem := mem with [#7, el]:u64 <- R29
00000570: mem := mem with [#7 + 8, el]:u64 <- R30
00000574: R31 := #7
0000057a: R29 := R31
0000057f: R30 := 0x5E0
00000581: call @call_weak_fn with return %00000583

00000583:
00000588: R29 := mem[R31, el]:u64
0000058d: R30 := mem[R31 + 8, el]:u64
00000591: R31 := R31 + 0x10
00000596: call R30 with noreturn

00000600: sub _start(_start_result)
00000639: _start_result :: out u32 = low:32[R0]

000001bc:
000001c1: R29 := 0
000001c6: R30 := 0
000001cc: R5 := R0
000001d3: R1 := mem[R31, el]:u64
000001d9: R2 := R31 + 8
000001df: R6 := R31
000001e4: R0 := 0x10000
000001eb: R0 := mem[R0 + 0xFF0, el]:u64
000001f0: R3 := 0
000001f5: R4 := 0
000001fa: R30 := 0x6B0
000001fd: call @__libc_start_main with return %000001ff

000001ff:
00000202: R30 := 0x6B4
00000205: call @abort with return %00000628

00000628:
00000629: call @call_weak_fn with noreturn

00000603: sub abort()


00000203:
0000051a: R16 := 0x10000
00000521: R17 := mem[R16 + 0xFB8, el]:u64
00000527: R16 := R16 + 0xFB8
0000052c: call R17 with noreturn

00000604: sub call_weak_fn(call_weak_fn_result)
0000063a: call_weak_fn_result :: out u32 = low:32[R0]

00000207:
0000020a: R0 := 0x10000
00000211: R0 := mem[R0 + 0xFE8, el]:u64
00000217: when R0 = 0 goto %00000215
0000062a: goto %00000426

00000215:
0000021d: call R30 with noreturn

00000426:
00000429: goto @__gmon_start__

00000427:
00000504: R16 := 0x10000
0000050b: R17 := mem[R16 + 0xFB0, el]:u64
00000511: R16 := R16 + 0xFB0
00000516: call R17 with noreturn

00000606: sub deregister_tm_clones(deregister_tm_clones_result)
0000063b: deregister_tm_clones_result :: out u32 = low:32[R0]

00000223:
00000226: R0 := 0x11000
0000022c: R0 := R0 + 0x10
00000231: R1 := 0x11000
00000237: R1 := R1 + 0x10
0000023d: #1 := ~R0
00000242: #2 := R1 + ~R0
00000248: VF := extend:65[#2 + 1] <> extend:65[R1] + extend:65[#1] + 1
0000024e: CF := pad:65[#2 + 1] <> pad:65[R1] + pad:65[#1] + 1
00000252: ZF := #2 + 1 = 0
00000256: NF := 63:63[#2 + 1]
0000025c: when ZF goto %0000025a
0000062b: goto %00000408

00000408:
0000040b: R1 := 0x10000
00000412: R1 := mem[R1 + 0xFD0, el]:u64
00000417: when R1 = 0 goto %0000025a
0000062c: goto %0000041b

0000025a:
00000262: call R30 with noreturn

0000041b:
0000041f: R16 := R1
00000424: call R16 with noreturn

00000609: sub frame_dummy(frame_dummy_result)
0000063c: frame_dummy_result :: out u32 = low:32[R0]

000002fa:
000002fc: call @register_tm_clones with noreturn

0000060a: sub greet(greet_result)
0000063d: greet_result :: out u32 = low:32[R0]

000002fe:
00000302: #4 := R31 - 0x10
00000308: mem := mem with [#4, el]:u64 <- R29
0000030e: mem := mem with [#4 + 8, el]:u64 <- R30
00000312: R31 := #4
00000318: R29 := R31
0000031d: R0 := 0
00000323: R0 := R0 + 0x808
00000328: R30 := 0x7A8
0000032b: call @puts with return %0000032d

0000032d:
00000334: R29 := mem[R31, el]:u64
00000339: R30 := mem[R31 + 8, el]:u64
0000033d: R31 := R31 + 0x10
00000342: call R30 with noreturn

0000060b: sub main(main_argc, main_argv, main_result)
0000063e: main_argc :: in u32 = low:32[R0]
0000063f: main_argv :: in out u64 = R1
00000640: main_result :: out u32 = low:32[R0]

00000344:
00000348: #5 := R31 - 0x20
0000034e: mem := mem with [#5, el]:u64 <- R29
00000354: mem := mem with [#5 + 8, el]:u64 <- R30
00000358: R31 := #5
0000035e: R29 := R31
00000363: R0 := 0x10000
0000036a: R0 := mem[R0 + 0xFE0, el]:u64
00000372: mem := mem with [R31 + 0x18, el]:u64 <- R0
00000377: R0 := 0
0000037d: R0 := R0 + 0x818
00000382: R30 := 0x7D4
00000384: call @puts with return %00000386

00000386:
0000038b: R0 := mem[R31 + 0x18, el]:u64
00000390: R30 := 0x7DC
00000393: call R0 with return %00000395

00000395:
00000398: R0 := 0
0000039f: R29 := mem[R31, el]:u64
000003a4: R30 := mem[R31 + 8, el]:u64
000003a8: R31 := R31 + 0x20
000003ad: call R30 with noreturn

0000060c: sub puts(puts_s, puts_result)
00000641: puts_s :: in u64 = R0
00000642: puts_result :: out u32 = low:32[R0]

00000329:
00000530: R16 := 0x10000
00000537: R17 := mem[R16 + 0xFC0, el]:u64
0000053d: R16 := R16 + 0xFC0
00000542: call R17 with noreturn

0000060d: sub register_tm_clones(register_tm_clones_result)
00000643: register_tm_clones_result :: out u32 = low:32[R0]

00000264:
00000267: R0 := 0x11000
0000026d: R0 := R0 + 0x10
00000272: R1 := 0x11000
00000278: R1 := R1 + 0x10
0000027f: R1 := R1 + ~R0 + 1
00000285: R2 := 0.63:63[R1]
0000028c: R1 := R2 + (R1 ~>> 3)
00000292: R1 := extend:64[63:1[R1]]
00000298: when R1 = 0 goto %00000296
0000062d: goto %000003ea

000003ea:
000003ed: R2 := 0x10000
000003f4: R2 := mem[R2 + 0xFF8, el]:u64
000003f9: when R2 = 0 goto %00000296
0000062e: goto %000003fd

00000296:
0000029e: call R30 with noreturn

000003fd:
00000401: R16 := R2
00000406: call R16 with noreturn
