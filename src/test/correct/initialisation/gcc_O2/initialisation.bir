00000618: program
000005e6: sub __cxa_finalize(__cxa_finalize_result)
00000619: __cxa_finalize_result :: out u32 = low:32[R0]

0000038a:
00000482: R16 := 0x10000
00000489: R17 := mem[R16 + 0xFB8, el]:u64
0000048f: R16 := R16 + 0xFB8
00000494: call R17 with noreturn

000005e7: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
0000061a: __do_global_dtors_aux_result :: out u32 = low:32[R0]

000002f7:
000002fb: #3 := R31 - 0x20
00000301: mem := mem with [#3, el]:u64 <- R29
00000307: mem := mem with [#3 + 8, el]:u64 <- R30
0000030b: R31 := #3
00000311: R29 := R31
00000319: mem := mem with [R31 + 0x10, el]:u64 <- R19
0000031e: R19 := 0x11000
00000325: R0 := pad:64[mem[R19 + 0x29]]
0000032c: when 31:0[R0] <> 0 goto %0000032a
0000060e: goto %00000353

00000353:
00000356: R0 := 0x10000
0000035d: R0 := mem[R0 + 0xFE0, el]:u64
00000363: when R0 = 0 goto %00000361
0000060f: goto %0000037a

0000037a:
0000037d: R0 := 0x11000
00000384: R0 := mem[R0 + 8, el]:u64
00000389: R30 := 0x730
0000038c: call @__cxa_finalize with return %00000361

00000361:
00000369: R30 := 0x734
0000036b: call @deregister_tm_clones with return %0000036d

0000036d:
00000370: R0 := 1
00000378: mem := mem with [R19 + 0x29] <- 7:0[R0]
00000610: goto %0000032a

0000032a:
00000334: R19 := mem[R31 + 0x10, el]:u64
0000033b: R29 := mem[R31, el]:u64
00000340: R30 := mem[R31 + 8, el]:u64
00000344: R31 := R31 + 0x20
00000349: call R30 with noreturn

000005eb: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
0000061b: __libc_start_main_main :: in u64 = R0
0000061c: __libc_start_main_arg2 :: in u32 = low:32[R1]
0000061d: __libc_start_main_arg3 :: in out u64 = R2
0000061e: __libc_start_main_auxv :: in out u64 = R3
0000061f: __libc_start_main_result :: out u32 = low:32[R0]

00000250:
0000046c: R16 := 0x10000
00000473: R17 := mem[R16 + 0xFB0, el]:u64
00000479: R16 := R16 + 0xFB0
0000047e: call R17 with noreturn

000005ec: sub _fini(_fini_result)
00000620: _fini_result :: out u32 = low:32[R0]

0000001f:
00000025: #0 := R31 - 0x10
0000002b: mem := mem with [#0, el]:u64 <- R29
00000031: mem := mem with [#0 + 8, el]:u64 <- R30
00000035: R31 := #0
0000003b: R29 := R31
00000042: R29 := mem[R31, el]:u64
00000047: R30 := mem[R31 + 8, el]:u64
0000004b: R31 := R31 + 0x10
00000050: call R30 with noreturn

000005ed: sub _init(_init_result)
00000621: _init_result :: out u32 = low:32[R0]

00000538:
0000053e: #5 := R31 - 0x10
00000544: mem := mem with [#5, el]:u64 <- R29
0000054a: mem := mem with [#5 + 8, el]:u64 <- R30
0000054e: R31 := #5
00000554: R29 := R31
00000559: R30 := 0x590
0000055b: call @call_weak_fn with return %0000055d

0000055d:
00000562: R29 := mem[R31, el]:u64
00000567: R30 := mem[R31 + 8, el]:u64
0000056b: R31 := R31 + 0x10
00000570: call R30 with noreturn

000005ee: sub _start(_start_result)
00000622: _start_result :: out u32 = low:32[R0]

00000211:
00000216: R29 := 0
0000021b: R30 := 0
00000221: R5 := R0
00000228: R1 := mem[R31, el]:u64
0000022e: R2 := R31 + 8
00000234: R6 := R31
00000239: R0 := 0x10000
00000240: R0 := mem[R0 + 0xFF0, el]:u64
00000245: R3 := 0
0000024a: R4 := 0
0000024f: R30 := 0x670
00000252: call @__libc_start_main with return %00000254

00000254:
00000257: R30 := 0x674
0000025a: call @abort with return %00000611

00000611:
00000612: call @call_weak_fn with noreturn

000005f1: sub abort()


00000258:
000004ae: R16 := 0x10000
000004b5: R17 := mem[R16 + 0xFC8, el]:u64
000004bb: R16 := R16 + 0xFC8
000004c0: call R17 with noreturn

000005f2: sub call_weak_fn(call_weak_fn_result)
00000623: call_weak_fn_result :: out u32 = low:32[R0]

0000025c:
0000025f: R0 := 0x10000
00000266: R0 := mem[R0 + 0xFE8, el]:u64
0000026c: when R0 = 0 goto %0000026a
00000613: goto %000003ca

0000026a:
00000272: call R30 with noreturn

000003ca:
000003cd: goto @__gmon_start__

000003cb:
00000498: R16 := 0x10000
0000049f: R17 := mem[R16 + 0xFC0, el]:u64
000004a5: R16 := R16 + 0xFC0
000004aa: call R17 with noreturn

000005f4: sub deregister_tm_clones(deregister_tm_clones_result)
00000624: deregister_tm_clones_result :: out u32 = low:32[R0]

00000278:
0000027b: R0 := 0x11000
00000281: R0 := R0 + 0x30
00000286: R1 := 0x11000
0000028c: R1 := R1 + 0x30
00000292: #1 := ~R0
00000297: #2 := R1 + ~R0
0000029d: VF := extend:65[#2 + 1] <> extend:65[R1] + extend:65[#1] + 1
000002a3: CF := pad:65[#2 + 1] <> pad:65[R1] + pad:65[#1] + 1
000002a7: ZF := #2 + 1 = 0
000002ab: NF := 63:63[#2 + 1]
000002b1: when ZF goto %000002af
00000614: goto %000003ac

000003ac:
000003af: R1 := 0x10000
000003b6: R1 := mem[R1 + 0xFD8, el]:u64
000003bb: when R1 = 0 goto %000002af
00000615: goto %000003bf

000002af:
000002b7: call R30 with noreturn

000003bf:
000003c3: R16 := R1
000003c8: call R16 with noreturn

000005f7: sub frame_dummy(frame_dummy_result)
00000625: frame_dummy_result :: out u32 = low:32[R0]

0000034f:
00000351: call @register_tm_clones with noreturn

000005f8: sub main(main_argc, main_argv, main_result)
00000626: main_argc :: in u32 = low:32[R0]
00000627: main_argv :: in out u64 = R1
00000628: main_result :: out u32 = low:32[R0]

000001a8:
000001ab: R5 := 0x11000
000001b1: R1 := R5 + 0x10
000001b6: R0 := 0
000001bd: R6 := pad:64[mem[R5 + 0x10, el]:u32]
000001c4: R4 := mem[R1 + 8, el]:u64
000001ca: R6 := pad:64[31:0[R6] + 1]
000001d1: R2 := pad:64[mem[R1 + 0x18]]
000001d8: R3 := pad:64[mem[R1 + 0x10, el]:u32]
000001de: R4 := R4 - 1
000001e4: R2 := pad:64[31:0[R2] + 1]
000001ec: mem := mem with [R5 + 0x10, el]:u32 <- 31:0[R6]
000001f2: R3 := pad:64[31:0[R3] + 3]
000001fa: mem := mem with [R1 + 8, el]:u64 <- R4
00000202: mem := mem with [R1 + 0x14, el]:u32 <- 31:0[R3]
0000020a: mem := mem with [R1 + 0x18] <- 7:0[R2]
0000020f: call R30 with noreturn

000005f9: sub register_tm_clones(register_tm_clones_result)
00000629: register_tm_clones_result :: out u32 = low:32[R0]

000002b9:
000002bc: R0 := 0x11000
000002c2: R0 := R0 + 0x30
000002c7: R1 := 0x11000
000002cd: R1 := R1 + 0x30
000002d4: R1 := R1 + ~R0 + 1
000002da: R2 := 0.63:63[R1]
000002e1: R1 := R2 + (R1 ~>> 3)
000002e7: R1 := extend:64[63:1[R1]]
000002ed: when R1 = 0 goto %000002eb
00000616: goto %0000038e

0000038e:
00000391: R2 := 0x10000
00000398: R2 := mem[R2 + 0xFF8, el]:u64
0000039d: when R2 = 0 goto %000002eb
00000617: goto %000003a1

000002eb:
000002f3: call R30 with noreturn

000003a1:
000003a5: R16 := R2
000003aa: call R16 with noreturn
