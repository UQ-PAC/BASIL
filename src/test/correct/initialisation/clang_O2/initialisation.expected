var Gamma_R0: bool;
var Gamma_R10: bool;
var Gamma_R11: bool;
var Gamma_R12: bool;
var Gamma_R13: bool;
var Gamma_R14: bool;
var Gamma_R15: bool;
var Gamma_R8: bool;
var Gamma_R9: bool;
var Gamma_mem: [bv64]bool;
var R0: bv64;
var R10: bv64;
var R11: bv64;
var R12: bv64;
var R13: bv64;
var R14: bv64;
var R15: bv64;
var R8: bv64;
var R9: bv64;
var mem: [bv64]bv8;
const $a_addr: bv64;
axiom ($a_addr == 69696bv64);
const $x_addr: bv64;
axiom ($x_addr == 69680bv64);
const $y_addr: bv64;
axiom ($y_addr == 69684bv64);
const $z_addr: bv64;
axiom ($z_addr == 69688bv64);
function L(memory: [bv64]bv8, index: bv64) returns (bool) {
  false
}

function {:bvbuiltin "bvadd"} bvadd32(bv32, bv32) returns (bv32);
function {:bvbuiltin "bvadd"} bvadd64(bv64, bv64) returns (bv64);
function gamma_load32(gammaMap: [bv64]bool, index: bv64) returns (bool) {
  (gammaMap[bvadd64(index, 3bv64)] && (gammaMap[bvadd64(index, 2bv64)] && (gammaMap[bvadd64(index, 1bv64)] && gammaMap[index])))
}

function gamma_load64(gammaMap: [bv64]bool, index: bv64) returns (bool) {
  (gammaMap[bvadd64(index, 7bv64)] && (gammaMap[bvadd64(index, 6bv64)] && (gammaMap[bvadd64(index, 5bv64)] && (gammaMap[bvadd64(index, 4bv64)] && (gammaMap[bvadd64(index, 3bv64)] && (gammaMap[bvadd64(index, 2bv64)] && (gammaMap[bvadd64(index, 1bv64)] && gammaMap[index])))))))
}

function gamma_load8(gammaMap: [bv64]bool, index: bv64) returns (bool) {
  gammaMap[index]
}

function gamma_store32(gammaMap: [bv64]bool, index: bv64, value: bool) returns ([bv64]bool) {
  gammaMap[index := value][bvadd64(index, 1bv64) := value][bvadd64(index, 2bv64) := value][bvadd64(index, 3bv64) := value]
}

function gamma_store64(gammaMap: [bv64]bool, index: bv64, value: bool) returns ([bv64]bool) {
  gammaMap[index := value][bvadd64(index, 1bv64) := value][bvadd64(index, 2bv64) := value][bvadd64(index, 3bv64) := value][bvadd64(index, 4bv64) := value][bvadd64(index, 5bv64) := value][bvadd64(index, 6bv64) := value][bvadd64(index, 7bv64) := value]
}

function gamma_store8(gammaMap: [bv64]bool, index: bv64, value: bool) returns ([bv64]bool) {
  gammaMap[index := value]
}

function memory_load32_le(memory: [bv64]bv8, index: bv64) returns (bv32) {
  (memory[bvadd64(index, 3bv64)] ++ (memory[bvadd64(index, 2bv64)] ++ (memory[bvadd64(index, 1bv64)] ++ memory[index])))
}

function memory_load64_le(memory: [bv64]bv8, index: bv64) returns (bv64) {
  (memory[bvadd64(index, 7bv64)] ++ (memory[bvadd64(index, 6bv64)] ++ (memory[bvadd64(index, 5bv64)] ++ (memory[bvadd64(index, 4bv64)] ++ (memory[bvadd64(index, 3bv64)] ++ (memory[bvadd64(index, 2bv64)] ++ (memory[bvadd64(index, 1bv64)] ++ memory[index])))))))
}

function memory_load8_le(memory: [bv64]bv8, index: bv64) returns (bv8) {
  memory[index]
}

function memory_store32_le(memory: [bv64]bv8, index: bv64, value: bv32) returns ([bv64]bv8) {
  memory[index := value[8:0]][bvadd64(index, 1bv64) := value[16:8]][bvadd64(index, 2bv64) := value[24:16]][bvadd64(index, 3bv64) := value[32:24]]
}

function memory_store64_le(memory: [bv64]bv8, index: bv64, value: bv64) returns ([bv64]bv8) {
  memory[index := value[8:0]][bvadd64(index, 1bv64) := value[16:8]][bvadd64(index, 2bv64) := value[24:16]][bvadd64(index, 3bv64) := value[32:24]][bvadd64(index, 4bv64) := value[40:32]][bvadd64(index, 5bv64) := value[48:40]][bvadd64(index, 6bv64) := value[56:48]][bvadd64(index, 7bv64) := value[64:56]]
}

function memory_store8_le(memory: [bv64]bv8, index: bv64, value: bv8) returns ([bv64]bv8) {
  memory[index := value[8:0]]
}

function {:bvbuiltin "zero_extend 32"} zero_extend32_32(bv32) returns (bv64);
function {:bvbuiltin "zero_extend 56"} zero_extend56_8(bv8) returns (bv64);
procedure rely();
  modifies mem, Gamma_mem;
  ensures (mem == old(mem));
  ensures (Gamma_mem == old(Gamma_mem));
  free ensures (memory_load8_le(mem, 1908bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 1909bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 1910bv64) == 2bv8);
  free ensures (memory_load8_le(mem, 1911bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69064bv64) == 16bv8);
  free ensures (memory_load8_le(mem, 69065bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69066bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69067bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69068bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69069bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69070bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69071bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69072bv64) == 192bv8);
  free ensures (memory_load8_le(mem, 69073bv64) == 6bv8);
  free ensures (memory_load8_le(mem, 69074bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69075bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69076bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69077bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69078bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69079bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69592bv64) == 20bv8);
  free ensures (memory_load8_le(mem, 69593bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69594bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69595bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69596bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69597bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69598bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69599bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69672bv64) == 40bv8);
  free ensures (memory_load8_le(mem, 69673bv64) == 16bv8);
  free ensures (memory_load8_le(mem, 69674bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 69675bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69676bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69677bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69678bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69679bv64) == 0bv8);

procedure rely_transitive()
  modifies mem, Gamma_mem;
  ensures (mem == old(mem));
  ensures (Gamma_mem == old(Gamma_mem));
{
  call rely();
  call rely();
}

procedure rely_reflexive();

procedure guarantee_reflexive();
  modifies mem, Gamma_mem;

procedure main()
  modifies Gamma_R0, Gamma_R10, Gamma_R11, Gamma_R12, Gamma_R13, Gamma_R14, Gamma_R15, Gamma_R8, Gamma_R9, Gamma_mem, R0, R10, R11, R12, R13, R14, R15, R8, R9, mem;
  free requires (memory_load8_le(mem, 69664bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69665bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69666bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69667bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69668bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69669bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69670bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69671bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69672bv64) == 40bv8);
  free requires (memory_load8_le(mem, 69673bv64) == 16bv8);
  free requires (memory_load8_le(mem, 69674bv64) == 1bv8);
  free requires (memory_load8_le(mem, 69675bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69676bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69677bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69678bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69679bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69680bv64) == 5bv8);
  free requires (memory_load8_le(mem, 69681bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69682bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69683bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69684bv64) == 97bv8);
  free requires (memory_load8_le(mem, 69685bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69686bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69687bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69688bv64) == 255bv8);
  free requires (memory_load8_le(mem, 69689bv64) == 255bv8);
  free requires (memory_load8_le(mem, 69690bv64) == 255bv8);
  free requires (memory_load8_le(mem, 69691bv64) == 255bv8);
  free requires (memory_load8_le(mem, 69692bv64) == 15bv8);
  free requires (memory_load8_le(mem, 69693bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69694bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69695bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69696bv64) == 1bv8);
  free requires (memory_load8_le(mem, 69697bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69698bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69699bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69700bv64) == 2bv8);
  free requires (memory_load8_le(mem, 69701bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69702bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69703bv64) == 0bv8);
  free requires (memory_load8_le(mem, 1908bv64) == 1bv8);
  free requires (memory_load8_le(mem, 1909bv64) == 0bv8);
  free requires (memory_load8_le(mem, 1910bv64) == 2bv8);
  free requires (memory_load8_le(mem, 1911bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69064bv64) == 16bv8);
  free requires (memory_load8_le(mem, 69065bv64) == 7bv8);
  free requires (memory_load8_le(mem, 69066bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69067bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69068bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69069bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69070bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69071bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69072bv64) == 192bv8);
  free requires (memory_load8_le(mem, 69073bv64) == 6bv8);
  free requires (memory_load8_le(mem, 69074bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69075bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69076bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69077bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69078bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69079bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69592bv64) == 20bv8);
  free requires (memory_load8_le(mem, 69593bv64) == 7bv8);
  free requires (memory_load8_le(mem, 69594bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69595bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69596bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69597bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69598bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69599bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69672bv64) == 40bv8);
  free requires (memory_load8_le(mem, 69673bv64) == 16bv8);
  free requires (memory_load8_le(mem, 69674bv64) == 1bv8);
  free requires (memory_load8_le(mem, 69675bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69676bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69677bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69678bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69679bv64) == 0bv8);
  ensures (memory_load32_le(mem, $x_addr) == 6bv32);
  ensures (memory_load32_le(mem, bvadd64($a_addr, 4bv64)) == 4bv32);
  ensures (memory_load32_le(mem, bvadd64($a_addr, 0bv64)) == 1bv32);
  free ensures (memory_load8_le(mem, 1908bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 1909bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 1910bv64) == 2bv8);
  free ensures (memory_load8_le(mem, 1911bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69064bv64) == 16bv8);
  free ensures (memory_load8_le(mem, 69065bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69066bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69067bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69068bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69069bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69070bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69071bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69072bv64) == 192bv8);
  free ensures (memory_load8_le(mem, 69073bv64) == 6bv8);
  free ensures (memory_load8_le(mem, 69074bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69075bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69076bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69077bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69078bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69079bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69592bv64) == 20bv8);
  free ensures (memory_load8_le(mem, 69593bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69594bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69595bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69596bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69597bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69598bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69599bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69672bv64) == 40bv8);
  free ensures (memory_load8_le(mem, 69673bv64) == 16bv8);
  free ensures (memory_load8_le(mem, 69674bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 69675bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69676bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69677bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69678bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69679bv64) == 0bv8);
{
  lmain:
    R10, Gamma_R10 := 69632bv64, true;
    R10, Gamma_R10 := bvadd64(R10, 64bv64), Gamma_R10;
    R8, Gamma_R8 := 69632bv64, true;
    R9, Gamma_R9 := 69632bv64, true;
    R12, Gamma_R12 := 69632bv64, true;
    R0, Gamma_R0 := 0bv64, true;
    R11, Gamma_R11 := zero_extend32_32(memory_load32_le(mem, R10)), (gamma_load32(Gamma_mem, R10) || L(mem, R10));
    R13, Gamma_R13 := zero_extend32_32(memory_load32_le(mem, bvadd64(R8, 48bv64))), (gamma_load32(Gamma_mem, bvadd64(R8, 48bv64)) || L(mem, bvadd64(R8, 48bv64)));
    R14, Gamma_R14 := memory_load64_le(mem, bvadd64(R9, 56bv64)), (gamma_load64(Gamma_mem, bvadd64(R9, 56bv64)) || L(mem, bvadd64(R9, 56bv64)));
    R11, Gamma_R11 := zero_extend32_32(bvadd32(R11[32:0], 3bv32)), Gamma_R11;
    R15, Gamma_R15 := zero_extend56_8(memory_load8_le(mem, bvadd64(R12, 52bv64))), (gamma_load8(Gamma_mem, bvadd64(R12, 52bv64)) || L(mem, bvadd64(R12, 52bv64)));
    R13, Gamma_R13 := zero_extend32_32(bvadd32(R13[32:0], 1bv32)), Gamma_R13;
    R14, Gamma_R14 := bvadd64(R14, 18446744073709551615bv64), Gamma_R14;
    call rely();
    assert (L(mem, bvadd64(R10, 4bv64)) ==> Gamma_R11);
    mem, Gamma_mem := memory_store32_le(mem, bvadd64(R10, 4bv64), R11[32:0]), gamma_store32(Gamma_mem, bvadd64(R10, 4bv64), Gamma_R11);
    R10, Gamma_R10 := zero_extend32_32(bvadd32(R15[32:0], 1bv32)), Gamma_R15;
    call rely();
    assert (L(mem, bvadd64(R8, 48bv64)) ==> Gamma_R13);
    mem, Gamma_mem := memory_store32_le(mem, bvadd64(R8, 48bv64), R13[32:0]), gamma_store32(Gamma_mem, bvadd64(R8, 48bv64), Gamma_R13);
    call rely();
    assert (L(mem, bvadd64(R9, 56bv64)) ==> Gamma_R14);
    mem, Gamma_mem := memory_store64_le(mem, bvadd64(R9, 56bv64), R14), gamma_store64(Gamma_mem, bvadd64(R9, 56bv64), Gamma_R14);
    call rely();
    assert (L(mem, bvadd64(R12, 52bv64)) ==> Gamma_R10);
    mem, Gamma_mem := memory_store8_le(mem, bvadd64(R12, 52bv64), R10[8:0]), gamma_store8(Gamma_mem, bvadd64(R12, 52bv64), Gamma_R10);
    return;
}
