var {:extern} Gamma_R0: bool;
var {:extern} Gamma_R1: bool;
var {:extern} Gamma_mem: [bv64]bool;
var {:extern} R0: bv64;
var {:extern} R1: bv64;
var {:extern} mem: [bv64]bv8;
const {:extern} $a_addr: bv64;
axiom ($a_addr == 69664bv64);
const {:extern} $x_addr: bv64;
axiom ($x_addr == 69648bv64);
const {:extern} $y_addr: bv64;
axiom ($y_addr == 69652bv64);
const {:extern} $z_addr: bv64;
axiom ($z_addr == 69656bv64);
function {:extern} L(memory: [bv64]bv8, index: bv64) returns (bool) {
  false
}

function {:extern} {:bvbuiltin "bvadd"} bvadd32(bv32, bv32) returns (bv32);
function {:extern} {:bvbuiltin "bvadd"} bvadd64(bv64, bv64) returns (bv64);
function {:extern} gamma_load32(gammaMap: [bv64]bool, index: bv64) returns (bool) {
  (gammaMap[bvadd64(index, 3bv64)] && (gammaMap[bvadd64(index, 2bv64)] && (gammaMap[bvadd64(index, 1bv64)] && gammaMap[index])))
}

function {:extern} gamma_load64(gammaMap: [bv64]bool, index: bv64) returns (bool) {
  (gammaMap[bvadd64(index, 7bv64)] && (gammaMap[bvadd64(index, 6bv64)] && (gammaMap[bvadd64(index, 5bv64)] && (gammaMap[bvadd64(index, 4bv64)] && (gammaMap[bvadd64(index, 3bv64)] && (gammaMap[bvadd64(index, 2bv64)] && (gammaMap[bvadd64(index, 1bv64)] && gammaMap[index])))))))
}

function {:extern} gamma_load8(gammaMap: [bv64]bool, index: bv64) returns (bool) {
  gammaMap[index]
}

function {:extern} gamma_store32(gammaMap: [bv64]bool, index: bv64, value: bool) returns ([bv64]bool) {
  gammaMap[index := value][bvadd64(index, 1bv64) := value][bvadd64(index, 2bv64) := value][bvadd64(index, 3bv64) := value]
}

function {:extern} gamma_store64(gammaMap: [bv64]bool, index: bv64, value: bool) returns ([bv64]bool) {
  gammaMap[index := value][bvadd64(index, 1bv64) := value][bvadd64(index, 2bv64) := value][bvadd64(index, 3bv64) := value][bvadd64(index, 4bv64) := value][bvadd64(index, 5bv64) := value][bvadd64(index, 6bv64) := value][bvadd64(index, 7bv64) := value]
}

function {:extern} gamma_store8(gammaMap: [bv64]bool, index: bv64, value: bool) returns ([bv64]bool) {
  gammaMap[index := value]
}

function {:extern} memory_load32_le(memory: [bv64]bv8, index: bv64) returns (bv32) {
  (memory[bvadd64(index, 3bv64)] ++ (memory[bvadd64(index, 2bv64)] ++ (memory[bvadd64(index, 1bv64)] ++ memory[index])))
}

function {:extern} memory_load64_le(memory: [bv64]bv8, index: bv64) returns (bv64) {
  (memory[bvadd64(index, 7bv64)] ++ (memory[bvadd64(index, 6bv64)] ++ (memory[bvadd64(index, 5bv64)] ++ (memory[bvadd64(index, 4bv64)] ++ (memory[bvadd64(index, 3bv64)] ++ (memory[bvadd64(index, 2bv64)] ++ (memory[bvadd64(index, 1bv64)] ++ memory[index])))))))
}

function {:extern} memory_load8_le(memory: [bv64]bv8, index: bv64) returns (bv8) {
  memory[index]
}

function {:extern} memory_store32_le(memory: [bv64]bv8, index: bv64, value: bv32) returns ([bv64]bv8) {
  memory[index := value[8:0]][bvadd64(index, 1bv64) := value[16:8]][bvadd64(index, 2bv64) := value[24:16]][bvadd64(index, 3bv64) := value[32:24]]
}

function {:extern} memory_store64_le(memory: [bv64]bv8, index: bv64, value: bv64) returns ([bv64]bv8) {
  memory[index := value[8:0]][bvadd64(index, 1bv64) := value[16:8]][bvadd64(index, 2bv64) := value[24:16]][bvadd64(index, 3bv64) := value[32:24]][bvadd64(index, 4bv64) := value[40:32]][bvadd64(index, 5bv64) := value[48:40]][bvadd64(index, 6bv64) := value[56:48]][bvadd64(index, 7bv64) := value[64:56]]
}

function {:extern} memory_store8_le(memory: [bv64]bv8, index: bv64, value: bv8) returns ([bv64]bv8) {
  memory[index := value[8:0]]
}

function {:extern} {:bvbuiltin "zero_extend 32"} zero_extend32_32(bv32) returns (bv64);
function {:extern} {:bvbuiltin "zero_extend 56"} zero_extend56_8(bv8) returns (bv64);
procedure {:extern} rely();
  modifies Gamma_mem, mem;
  ensures (mem == old(mem));
  ensures (Gamma_mem == old(Gamma_mem));
  free ensures (memory_load8_le(mem, 2084bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 2085bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 2086bv64) == 2bv8);
  free ensures (memory_load8_le(mem, 2087bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69608bv64) == 20bv8);
  free ensures (memory_load8_le(mem, 69609bv64) == 16bv8);
  free ensures (memory_load8_le(mem, 69610bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 69611bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69612bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69613bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69614bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69615bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69576bv64) == 24bv8);
  free ensures (memory_load8_le(mem, 69577bv64) == 16bv8);
  free ensures (memory_load8_le(mem, 69578bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 69579bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69580bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69581bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69582bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69583bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69640bv64) == 8bv8);
  free ensures (memory_load8_le(mem, 69641bv64) == 16bv8);
  free ensures (memory_load8_le(mem, 69642bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 69643bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69644bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69645bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69646bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69647bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69616bv64) == 148bv8);
  free ensures (memory_load8_le(mem, 69617bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69618bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69619bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69620bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69621bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69622bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69623bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69584bv64) == 16bv8);
  free ensures (memory_load8_le(mem, 69585bv64) == 16bv8);
  free ensures (memory_load8_le(mem, 69586bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 69587bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69588bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69589bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69590bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69591bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69600bv64) == 32bv8);
  free ensures (memory_load8_le(mem, 69601bv64) == 16bv8);
  free ensures (memory_load8_le(mem, 69602bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 69603bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69604bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69605bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69606bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69607bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 68984bv64) == 144bv8);
  free ensures (memory_load8_le(mem, 68985bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 68986bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 68987bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 68988bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 68989bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 68990bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 68991bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 68992bv64) == 64bv8);
  free ensures (memory_load8_le(mem, 68993bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 68994bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 68995bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 68996bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 68997bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 68998bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 68999bv64) == 0bv8);

procedure {:extern} rely_transitive()
  modifies Gamma_mem, mem;
  ensures (mem == old(mem));
  ensures (Gamma_mem == old(Gamma_mem));
{
  call rely();
  call rely();
}

procedure {:extern} rely_reflexive();

procedure {:extern} guarantee_reflexive();
  modifies Gamma_mem, mem;

procedure main()
  modifies Gamma_R0, Gamma_R1, Gamma_mem, R0, R1, mem;
  free requires (memory_load8_le(mem, 69632bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69633bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69634bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69635bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69636bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69637bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69638bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69639bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69640bv64) == 8bv8);
  free requires (memory_load8_le(mem, 69641bv64) == 16bv8);
  free requires (memory_load8_le(mem, 69642bv64) == 1bv8);
  free requires (memory_load8_le(mem, 69643bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69644bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69645bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69646bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69647bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69648bv64) == 5bv8);
  free requires (memory_load8_le(mem, 69649bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69650bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69651bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69652bv64) == 97bv8);
  free requires (memory_load8_le(mem, 69653bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69654bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69655bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69656bv64) == 255bv8);
  free requires (memory_load8_le(mem, 69657bv64) == 255bv8);
  free requires (memory_load8_le(mem, 69658bv64) == 255bv8);
  free requires (memory_load8_le(mem, 69659bv64) == 255bv8);
  free requires (memory_load8_le(mem, 69660bv64) == 15bv8);
  free requires (memory_load8_le(mem, 69661bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69662bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69663bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69664bv64) == 1bv8);
  free requires (memory_load8_le(mem, 69665bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69666bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69667bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69668bv64) == 2bv8);
  free requires (memory_load8_le(mem, 69669bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69670bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69671bv64) == 0bv8);
  free requires (memory_load8_le(mem, 2084bv64) == 1bv8);
  free requires (memory_load8_le(mem, 2085bv64) == 0bv8);
  free requires (memory_load8_le(mem, 2086bv64) == 2bv8);
  free requires (memory_load8_le(mem, 2087bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69608bv64) == 20bv8);
  free requires (memory_load8_le(mem, 69609bv64) == 16bv8);
  free requires (memory_load8_le(mem, 69610bv64) == 1bv8);
  free requires (memory_load8_le(mem, 69611bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69612bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69613bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69614bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69615bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69576bv64) == 24bv8);
  free requires (memory_load8_le(mem, 69577bv64) == 16bv8);
  free requires (memory_load8_le(mem, 69578bv64) == 1bv8);
  free requires (memory_load8_le(mem, 69579bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69580bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69581bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69582bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69583bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69640bv64) == 8bv8);
  free requires (memory_load8_le(mem, 69641bv64) == 16bv8);
  free requires (memory_load8_le(mem, 69642bv64) == 1bv8);
  free requires (memory_load8_le(mem, 69643bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69644bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69645bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69646bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69647bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69616bv64) == 148bv8);
  free requires (memory_load8_le(mem, 69617bv64) == 7bv8);
  free requires (memory_load8_le(mem, 69618bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69619bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69620bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69621bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69622bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69623bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69584bv64) == 16bv8);
  free requires (memory_load8_le(mem, 69585bv64) == 16bv8);
  free requires (memory_load8_le(mem, 69586bv64) == 1bv8);
  free requires (memory_load8_le(mem, 69587bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69588bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69589bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69590bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69591bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69600bv64) == 32bv8);
  free requires (memory_load8_le(mem, 69601bv64) == 16bv8);
  free requires (memory_load8_le(mem, 69602bv64) == 1bv8);
  free requires (memory_load8_le(mem, 69603bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69604bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69605bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69606bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69607bv64) == 0bv8);
  free requires (memory_load8_le(mem, 68984bv64) == 144bv8);
  free requires (memory_load8_le(mem, 68985bv64) == 7bv8);
  free requires (memory_load8_le(mem, 68986bv64) == 0bv8);
  free requires (memory_load8_le(mem, 68987bv64) == 0bv8);
  free requires (memory_load8_le(mem, 68988bv64) == 0bv8);
  free requires (memory_load8_le(mem, 68989bv64) == 0bv8);
  free requires (memory_load8_le(mem, 68990bv64) == 0bv8);
  free requires (memory_load8_le(mem, 68991bv64) == 0bv8);
  free requires (memory_load8_le(mem, 68992bv64) == 64bv8);
  free requires (memory_load8_le(mem, 68993bv64) == 7bv8);
  free requires (memory_load8_le(mem, 68994bv64) == 0bv8);
  free requires (memory_load8_le(mem, 68995bv64) == 0bv8);
  free requires (memory_load8_le(mem, 68996bv64) == 0bv8);
  free requires (memory_load8_le(mem, 68997bv64) == 0bv8);
  free requires (memory_load8_le(mem, 68998bv64) == 0bv8);
  free requires (memory_load8_le(mem, 68999bv64) == 0bv8);
  ensures (memory_load32_le(mem, $x_addr) == 6bv32);
  ensures (memory_load32_le(mem, bvadd64($a_addr, 4bv64)) == 4bv32);
  ensures (memory_load32_le(mem, bvadd64($a_addr, 0bv64)) == 1bv32);
  free ensures (memory_load8_le(mem, 2084bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 2085bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 2086bv64) == 2bv8);
  free ensures (memory_load8_le(mem, 2087bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69608bv64) == 20bv8);
  free ensures (memory_load8_le(mem, 69609bv64) == 16bv8);
  free ensures (memory_load8_le(mem, 69610bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 69611bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69612bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69613bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69614bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69615bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69576bv64) == 24bv8);
  free ensures (memory_load8_le(mem, 69577bv64) == 16bv8);
  free ensures (memory_load8_le(mem, 69578bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 69579bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69580bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69581bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69582bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69583bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69640bv64) == 8bv8);
  free ensures (memory_load8_le(mem, 69641bv64) == 16bv8);
  free ensures (memory_load8_le(mem, 69642bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 69643bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69644bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69645bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69646bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69647bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69616bv64) == 148bv8);
  free ensures (memory_load8_le(mem, 69617bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69618bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69619bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69620bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69621bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69622bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69623bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69584bv64) == 16bv8);
  free ensures (memory_load8_le(mem, 69585bv64) == 16bv8);
  free ensures (memory_load8_le(mem, 69586bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 69587bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69588bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69589bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69590bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69591bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69600bv64) == 32bv8);
  free ensures (memory_load8_le(mem, 69601bv64) == 16bv8);
  free ensures (memory_load8_le(mem, 69602bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 69603bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69604bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69605bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69606bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69607bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 68984bv64) == 144bv8);
  free ensures (memory_load8_le(mem, 68985bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 68986bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 68987bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 68988bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 68989bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 68990bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 68991bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 68992bv64) == 64bv8);
  free ensures (memory_load8_le(mem, 68993bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 68994bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 68995bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 68996bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 68997bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 68998bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 68999bv64) == 0bv8);
{
  lmain:
    assume {:captureState "lmain"} true;
    R0, Gamma_R0 := 65536bv64, true;
    call rely();
    R0, Gamma_R0 := memory_load64_le(mem, bvadd64(R0, 4048bv64)), (gamma_load64(Gamma_mem, bvadd64(R0, 4048bv64)) || L(mem, bvadd64(R0, 4048bv64)));
    call rely();
    R0, Gamma_R0 := zero_extend32_32(memory_load32_le(mem, R0)), (gamma_load32(Gamma_mem, R0) || L(mem, R0));
    R1, Gamma_R1 := zero_extend32_32(bvadd32(R0[32:0], 1bv32)), Gamma_R0;
    R0, Gamma_R0 := 65536bv64, true;
    call rely();
    R0, Gamma_R0 := memory_load64_le(mem, bvadd64(R0, 4048bv64)), (gamma_load64(Gamma_mem, bvadd64(R0, 4048bv64)) || L(mem, bvadd64(R0, 4048bv64)));
    call rely();
    assert (L(mem, R0) ==> Gamma_R1);
    mem, Gamma_mem := memory_store32_le(mem, R0, R1[32:0]), gamma_store32(Gamma_mem, R0, Gamma_R1);
    assume {:captureState "%00000351"} true;
    R0, Gamma_R0 := 65536bv64, true;
    call rely();
    R0, Gamma_R0 := memory_load64_le(mem, bvadd64(R0, 4040bv64)), (gamma_load64(Gamma_mem, bvadd64(R0, 4040bv64)) || L(mem, bvadd64(R0, 4040bv64)));
    call rely();
    R0, Gamma_R0 := memory_load64_le(mem, R0), (gamma_load64(Gamma_mem, R0) || L(mem, R0));
    R1, Gamma_R1 := bvadd64(R0, 18446744073709551615bv64), Gamma_R0;
    R0, Gamma_R0 := 65536bv64, true;
    call rely();
    R0, Gamma_R0 := memory_load64_le(mem, bvadd64(R0, 4040bv64)), (gamma_load64(Gamma_mem, bvadd64(R0, 4040bv64)) || L(mem, bvadd64(R0, 4040bv64)));
    call rely();
    assert (L(mem, R0) ==> Gamma_R1);
    mem, Gamma_mem := memory_store64_le(mem, R0, R1), gamma_store64(Gamma_mem, R0, Gamma_R1);
    assume {:captureState "%0000037e"} true;
    R0, Gamma_R0 := 65536bv64, true;
    call rely();
    R0, Gamma_R0 := memory_load64_le(mem, bvadd64(R0, 4064bv64)), (gamma_load64(Gamma_mem, bvadd64(R0, 4064bv64)) || L(mem, bvadd64(R0, 4064bv64)));
    call rely();
    R0, Gamma_R0 := zero_extend32_32(memory_load32_le(mem, R0)), (gamma_load32(Gamma_mem, R0) || L(mem, R0));
    R1, Gamma_R1 := zero_extend32_32(bvadd32(R0[32:0], 3bv32)), Gamma_R0;
    R0, Gamma_R0 := 65536bv64, true;
    call rely();
    R0, Gamma_R0 := memory_load64_le(mem, bvadd64(R0, 4064bv64)), (gamma_load64(Gamma_mem, bvadd64(R0, 4064bv64)) || L(mem, bvadd64(R0, 4064bv64)));
    call rely();
    assert (L(mem, bvadd64(R0, 4bv64)) ==> Gamma_R1);
    mem, Gamma_mem := memory_store32_le(mem, bvadd64(R0, 4bv64), R1[32:0]), gamma_store32(Gamma_mem, bvadd64(R0, 4bv64), Gamma_R1);
    assume {:captureState "%000003ab"} true;
    R0, Gamma_R0 := 65536bv64, true;
    call rely();
    R0, Gamma_R0 := memory_load64_le(mem, bvadd64(R0, 4072bv64)), (gamma_load64(Gamma_mem, bvadd64(R0, 4072bv64)) || L(mem, bvadd64(R0, 4072bv64)));
    call rely();
    R0, Gamma_R0 := zero_extend56_8(memory_load8_le(mem, R0)), (gamma_load8(Gamma_mem, R0) || L(mem, R0));
    R0, Gamma_R0 := zero_extend32_32(bvadd32(R0[32:0], 1bv32)), Gamma_R0;
    R1, Gamma_R1 := zero_extend32_32((0bv24 ++ R0[8:0])), Gamma_R0;
    R0, Gamma_R0 := 65536bv64, true;
    call rely();
    R0, Gamma_R0 := memory_load64_le(mem, bvadd64(R0, 4072bv64)), (gamma_load64(Gamma_mem, bvadd64(R0, 4072bv64)) || L(mem, bvadd64(R0, 4072bv64)));
    call rely();
    assert (L(mem, R0) ==> Gamma_R1);
    mem, Gamma_mem := memory_store8_le(mem, R0, R1[8:0]), gamma_store8(Gamma_mem, R0, Gamma_R1);
    assume {:captureState "%000003de"} true;
    R0, Gamma_R0 := 0bv64, true;
    return;
}
