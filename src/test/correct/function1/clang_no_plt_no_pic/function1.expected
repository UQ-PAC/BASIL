var {:extern }Gamma_R0: bool;
var {:extern }Gamma_R1: bool;
var {:extern }Gamma_R16: bool;
var {:extern }Gamma_R17: bool;
var {:extern }Gamma_R2: bool;
var {:extern }Gamma_R29: bool;
var {:extern }Gamma_R30: bool;
var {:extern }Gamma_R31: bool;
var {:extern }Gamma_R8: bool;
var {:extern }Gamma_R9: bool;
var {:extern }Gamma_mem: [bv64]bool;
var {:extern }Gamma_stack: [bv64]bool;
var {:extern }R0: bv64;
var {:extern }R1: bv64;
var {:extern }R16: bv64;
var {:extern }R17: bv64;
var {:extern }R2: bv64;
var {:extern }R29: bv64;
var {:extern }R30: bv64;
var {:extern }R31: bv64;
var {:extern }R8: bv64;
var {:extern }R9: bv64;
var {:extern }mem: [bv64]bv8;
var {:extern }stack: [bv64]bv8;
const {:extern }$_IO_stdin_used_addr: bv64;
axiom {:extern }($_IO_stdin_used_addr == 2024bv64);
const {:extern }$x_addr: bv64;
axiom {:extern }($x_addr == 69692bv64);
const {:extern }$y_addr: bv64;
axiom {:extern }($y_addr == 69696bv64);
function {:extern }L(memory: [bv64]bv8, index: bv64) returns (bool) {
  false
}

function {:extern } {:bvbuiltin "bvadd"}bvadd32(bv32, bv32) returns (bv32);
function {:extern } {:bvbuiltin "bvadd"}bvadd64(bv64, bv64) returns (bv64);
function {:extern }gamma_load32(gammaMap: [bv64]bool, index: bv64) returns (bool) {
  (gammaMap[bvadd64(index, 3bv64)] && (gammaMap[bvadd64(index, 2bv64)] && (gammaMap[bvadd64(index, 1bv64)] && gammaMap[index])))
}

function {:extern }gamma_load64(gammaMap: [bv64]bool, index: bv64) returns (bool) {
  (gammaMap[bvadd64(index, 7bv64)] && (gammaMap[bvadd64(index, 6bv64)] && (gammaMap[bvadd64(index, 5bv64)] && (gammaMap[bvadd64(index, 4bv64)] && (gammaMap[bvadd64(index, 3bv64)] && (gammaMap[bvadd64(index, 2bv64)] && (gammaMap[bvadd64(index, 1bv64)] && gammaMap[index])))))))
}

function {:extern }gamma_load8(gammaMap: [bv64]bool, index: bv64) returns (bool) {
  gammaMap[index]
}

function {:extern }gamma_store32(gammaMap: [bv64]bool, index: bv64, value: bool) returns ([bv64]bool) {
  gammaMap[index := value][bvadd64(index, 1bv64) := value][bvadd64(index, 2bv64) := value][bvadd64(index, 3bv64) := value]
}

function {:extern }gamma_store64(gammaMap: [bv64]bool, index: bv64, value: bool) returns ([bv64]bool) {
  gammaMap[index := value][bvadd64(index, 1bv64) := value][bvadd64(index, 2bv64) := value][bvadd64(index, 3bv64) := value][bvadd64(index, 4bv64) := value][bvadd64(index, 5bv64) := value][bvadd64(index, 6bv64) := value][bvadd64(index, 7bv64) := value]
}

function {:extern }gamma_store8(gammaMap: [bv64]bool, index: bv64, value: bool) returns ([bv64]bool) {
  gammaMap[index := value]
}

function {:extern }memory_load32_le(memory: [bv64]bv8, index: bv64) returns (bv32) {
  (memory[bvadd64(index, 3bv64)] ++ (memory[bvadd64(index, 2bv64)] ++ (memory[bvadd64(index, 1bv64)] ++ memory[index])))
}

function {:extern }memory_load64_le(memory: [bv64]bv8, index: bv64) returns (bv64) {
  (memory[bvadd64(index, 7bv64)] ++ (memory[bvadd64(index, 6bv64)] ++ (memory[bvadd64(index, 5bv64)] ++ (memory[bvadd64(index, 4bv64)] ++ (memory[bvadd64(index, 3bv64)] ++ (memory[bvadd64(index, 2bv64)] ++ (memory[bvadd64(index, 1bv64)] ++ memory[index])))))))
}

function {:extern }memory_load8_le(memory: [bv64]bv8, index: bv64) returns (bv8) {
  memory[index]
}

function {:extern }memory_store32_le(memory: [bv64]bv8, index: bv64, value: bv32) returns ([bv64]bv8) {
  memory[index := value[8:0]][bvadd64(index, 1bv64) := value[16:8]][bvadd64(index, 2bv64) := value[24:16]][bvadd64(index, 3bv64) := value[32:24]]
}

function {:extern }memory_store64_le(memory: [bv64]bv8, index: bv64, value: bv64) returns ([bv64]bv8) {
  memory[index := value[8:0]][bvadd64(index, 1bv64) := value[16:8]][bvadd64(index, 2bv64) := value[24:16]][bvadd64(index, 3bv64) := value[32:24]][bvadd64(index, 4bv64) := value[40:32]][bvadd64(index, 5bv64) := value[48:40]][bvadd64(index, 6bv64) := value[56:48]][bvadd64(index, 7bv64) := value[64:56]]
}

function {:extern }memory_store8_le(memory: [bv64]bv8, index: bv64, value: bv8) returns ([bv64]bv8) {
  memory[index := value[8:0]]
}

function {:extern } {:bvbuiltin "sign_extend 32"}sign_extend32_32(bv32) returns (bv64);
function {:extern } {:bvbuiltin "zero_extend 32"}zero_extend32_32(bv32) returns (bv64);
function {:extern } {:bvbuiltin "zero_extend 56"}zero_extend56_8(bv8) returns (bv64);
procedure {:extern }rely();
  modifies Gamma_mem, mem;
  ensures (mem == old(mem));
  ensures (Gamma_mem == old(Gamma_mem));
  free ensures (memory_load8_le(mem, 2024bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 2025bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 2026bv64) == 2bv8);
  free ensures (memory_load8_le(mem, 2027bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 2028bv64) == 37bv8);
  free ensures (memory_load8_le(mem, 2029bv64) == 100bv8);
  free ensures (memory_load8_le(mem, 2030bv64) == 10bv8);
  free ensures (memory_load8_le(mem, 2031bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69064bv64) == 80bv8);
  free ensures (memory_load8_le(mem, 69065bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69066bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69067bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69068bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69069bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69070bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69071bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69072bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69073bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69074bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69075bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69076bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69077bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69078bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69079bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69592bv64) == 132bv8);
  free ensures (memory_load8_le(mem, 69593bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69594bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69595bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69596bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69597bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69598bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69599bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69680bv64) == 48bv8);
  free ensures (memory_load8_le(mem, 69681bv64) == 16bv8);
  free ensures (memory_load8_le(mem, 69682bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 69683bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69684bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69685bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69686bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69687bv64) == 0bv8);

procedure {:extern }rely_transitive()
  modifies Gamma_mem, mem;
  ensures (mem == old(mem));
  ensures (Gamma_mem == old(Gamma_mem));
{
  call rely();
  call rely();
}

procedure {:extern }rely_reflexive();

procedure {:extern }guarantee_reflexive();
  modifies Gamma_mem, mem;

procedure get_two()
  modifies Gamma_R0, Gamma_R31, Gamma_R8, Gamma_R9, Gamma_stack, R0, R31, R8, R9, stack;
  free requires (memory_load8_le(mem, 2024bv64) == 1bv8);
  free requires (memory_load8_le(mem, 2025bv64) == 0bv8);
  free requires (memory_load8_le(mem, 2026bv64) == 2bv8);
  free requires (memory_load8_le(mem, 2027bv64) == 0bv8);
  free requires (memory_load8_le(mem, 2028bv64) == 37bv8);
  free requires (memory_load8_le(mem, 2029bv64) == 100bv8);
  free requires (memory_load8_le(mem, 2030bv64) == 10bv8);
  free requires (memory_load8_le(mem, 2031bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69064bv64) == 80bv8);
  free requires (memory_load8_le(mem, 69065bv64) == 7bv8);
  free requires (memory_load8_le(mem, 69066bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69067bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69068bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69069bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69070bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69071bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69072bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69073bv64) == 7bv8);
  free requires (memory_load8_le(mem, 69074bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69075bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69076bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69077bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69078bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69079bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69592bv64) == 132bv8);
  free requires (memory_load8_le(mem, 69593bv64) == 7bv8);
  free requires (memory_load8_le(mem, 69594bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69595bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69596bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69597bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69598bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69599bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69680bv64) == 48bv8);
  free requires (memory_load8_le(mem, 69681bv64) == 16bv8);
  free requires (memory_load8_le(mem, 69682bv64) == 1bv8);
  free requires (memory_load8_le(mem, 69683bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69684bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69685bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69686bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69687bv64) == 0bv8);
  free ensures (Gamma_R31 == old(Gamma_R31));
  free ensures (R31 == old(R31));
  free ensures (memory_load8_le(mem, 2024bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 2025bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 2026bv64) == 2bv8);
  free ensures (memory_load8_le(mem, 2027bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 2028bv64) == 37bv8);
  free ensures (memory_load8_le(mem, 2029bv64) == 100bv8);
  free ensures (memory_load8_le(mem, 2030bv64) == 10bv8);
  free ensures (memory_load8_le(mem, 2031bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69064bv64) == 80bv8);
  free ensures (memory_load8_le(mem, 69065bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69066bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69067bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69068bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69069bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69070bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69071bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69072bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69073bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69074bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69075bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69076bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69077bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69078bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69079bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69592bv64) == 132bv8);
  free ensures (memory_load8_le(mem, 69593bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69594bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69595bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69596bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69597bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69598bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69599bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69680bv64) == 48bv8);
  free ensures (memory_load8_le(mem, 69681bv64) == 16bv8);
  free ensures (memory_load8_le(mem, 69682bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 69683bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69684bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69685bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69686bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69687bv64) == 0bv8);
{
  lget_two:
    assume {:captureState "addr:0x754"}true;
    R31, Gamma_R31 := bvadd64(R31, 18446744073709551600bv64), Gamma_R31;
    stack, Gamma_stack := memory_store8_le(stack, bvadd64(R31, 15bv64), R0[8:0]), gamma_store8(Gamma_stack, bvadd64(R31, 15bv64), Gamma_R0);
    assume {:captureState "addr:0x758"}true;
    stack, Gamma_stack := memory_store32_le(stack, bvadd64(R31, 8bv64), R1[32:0]), gamma_store32(Gamma_stack, bvadd64(R31, 8bv64), Gamma_R1);
    assume {:captureState "addr:0x75c"}true;
    stack, Gamma_stack := memory_store64_le(stack, R31, R2), gamma_store64(Gamma_stack, R31, Gamma_R2);
    assume {:captureState "addr:0x760"}true;
    R8, Gamma_R8 := zero_extend56_8(memory_load8_le(stack, bvadd64(R31, 15bv64))), gamma_load8(Gamma_stack, bvadd64(R31, 15bv64));
    R9, Gamma_R9 := zero_extend32_32(memory_load32_le(stack, bvadd64(R31, 8bv64))), gamma_load32(Gamma_stack, bvadd64(R31, 8bv64));
    R9, Gamma_R9 := zero_extend32_32(bvadd32(R8[32:0], R9[32:0])), (Gamma_R9 && Gamma_R8);
    R8, Gamma_R8 := memory_load64_le(stack, R31), gamma_load64(Gamma_stack, R31);
    R8, Gamma_R8 := bvadd64(R8, sign_extend32_32(R9[32:0])), (Gamma_R9 && Gamma_R8);
    R0, Gamma_R0 := zero_extend32_32(R8[32:0]), Gamma_R8;
    R31, Gamma_R31 := bvadd64(R31, 16bv64), Gamma_R31;
    return;
}

procedure main()
  modifies Gamma_R0, Gamma_R1, Gamma_R16, Gamma_R17, Gamma_R2, Gamma_R29, Gamma_R30, Gamma_R31, Gamma_R8, Gamma_R9, Gamma_mem, Gamma_stack, R0, R1, R16, R17, R2, R29, R30, R31, R8, R9, mem, stack;
  free requires (memory_load8_le(mem, 69672bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69673bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69674bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69675bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69676bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69677bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69678bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69679bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69680bv64) == 48bv8);
  free requires (memory_load8_le(mem, 69681bv64) == 16bv8);
  free requires (memory_load8_le(mem, 69682bv64) == 1bv8);
  free requires (memory_load8_le(mem, 69683bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69684bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69685bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69686bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69687bv64) == 0bv8);
  free requires (memory_load8_le(mem, 2024bv64) == 1bv8);
  free requires (memory_load8_le(mem, 2025bv64) == 0bv8);
  free requires (memory_load8_le(mem, 2026bv64) == 2bv8);
  free requires (memory_load8_le(mem, 2027bv64) == 0bv8);
  free requires (memory_load8_le(mem, 2028bv64) == 37bv8);
  free requires (memory_load8_le(mem, 2029bv64) == 100bv8);
  free requires (memory_load8_le(mem, 2030bv64) == 10bv8);
  free requires (memory_load8_le(mem, 2031bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69064bv64) == 80bv8);
  free requires (memory_load8_le(mem, 69065bv64) == 7bv8);
  free requires (memory_load8_le(mem, 69066bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69067bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69068bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69069bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69070bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69071bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69072bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69073bv64) == 7bv8);
  free requires (memory_load8_le(mem, 69074bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69075bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69076bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69077bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69078bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69079bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69592bv64) == 132bv8);
  free requires (memory_load8_le(mem, 69593bv64) == 7bv8);
  free requires (memory_load8_le(mem, 69594bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69595bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69596bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69597bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69598bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69599bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69680bv64) == 48bv8);
  free requires (memory_load8_le(mem, 69681bv64) == 16bv8);
  free requires (memory_load8_le(mem, 69682bv64) == 1bv8);
  free requires (memory_load8_le(mem, 69683bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69684bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69685bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69686bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69687bv64) == 0bv8);
  free ensures (Gamma_R29 == old(Gamma_R29));
  free ensures (Gamma_R31 == old(Gamma_R31));
  free ensures (R29 == old(R29));
  free ensures (R31 == old(R31));
  free ensures (memory_load8_le(mem, 2024bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 2025bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 2026bv64) == 2bv8);
  free ensures (memory_load8_le(mem, 2027bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 2028bv64) == 37bv8);
  free ensures (memory_load8_le(mem, 2029bv64) == 100bv8);
  free ensures (memory_load8_le(mem, 2030bv64) == 10bv8);
  free ensures (memory_load8_le(mem, 2031bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69064bv64) == 80bv8);
  free ensures (memory_load8_le(mem, 69065bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69066bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69067bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69068bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69069bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69070bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69071bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69072bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69073bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69074bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69075bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69076bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69077bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69078bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69079bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69592bv64) == 132bv8);
  free ensures (memory_load8_le(mem, 69593bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69594bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69595bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69596bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69597bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69598bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69599bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69680bv64) == 48bv8);
  free ensures (memory_load8_le(mem, 69681bv64) == 16bv8);
  free ensures (memory_load8_le(mem, 69682bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 69683bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69684bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69685bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69686bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69687bv64) == 0bv8);
{
  var #4: bv64;
  var Gamma_#4: bool;
  lmain:
    assume {:captureState "addr:0x784"}true;
    #4, Gamma_#4 := bvadd64(R31, 18446744073709551600bv64), Gamma_R31;
    stack, Gamma_stack := memory_store64_le(stack, #4, R29), gamma_store64(Gamma_stack, #4, Gamma_R29);
    assume {:captureState "addr:0x784"}true;
    stack, Gamma_stack := memory_store64_le(stack, bvadd64(#4, 8bv64), R30), gamma_store64(Gamma_stack, bvadd64(#4, 8bv64), Gamma_R30);
    assume {:captureState "addr:0x784"}true;
    R31, Gamma_R31 := #4, Gamma_#4;
    R29, Gamma_R29 := R31, Gamma_R31;
    R9, Gamma_R9 := 69632bv64, true;
    R8, Gamma_R8 := 1bv64, true;
    call rely();
    assert (L(mem, bvadd64(R9, 60bv64)) ==> Gamma_R8);
    mem, Gamma_mem := memory_store32_le(mem, bvadd64(R9, 60bv64), R8[32:0]), gamma_store32(Gamma_mem, bvadd64(R9, 60bv64), Gamma_R8);
    assume {:captureState "addr:0x794"}true;
    R0, Gamma_R0 := 97bv64, true;
    R1, Gamma_R1 := 10bv64, true;
    R2, Gamma_R2 := 58368bv64, true;
    R2, Gamma_R2 := (R2[64:32] ++ (21515bv16 ++ R2[16:0])), Gamma_R2;
    R2, Gamma_R2 := (R2[64:48] ++ (2bv16 ++ R2[32:0])), Gamma_R2;
    R30, Gamma_R30 := 1968bv64, true;
    call get_two();
    goto l00000adf;
  l00000adf:
    assume {:captureState "addr:0x7b0"}true;
    R8, Gamma_R8 := 69632bv64, true;
    call rely();
    assert (L(mem, bvadd64(R8, 64bv64)) ==> Gamma_R0);
    mem, Gamma_mem := memory_store32_le(mem, bvadd64(R8, 64bv64), R0[32:0]), gamma_store32(Gamma_mem, bvadd64(R8, 64bv64), Gamma_R0);
    assume {:captureState "addr:0x7b4"}true;
    call rely();
    R1, Gamma_R1 := zero_extend32_32(memory_load32_le(mem, bvadd64(R8, 64bv64))), (gamma_load32(Gamma_mem, bvadd64(R8, 64bv64)) || L(mem, bvadd64(R8, 64bv64)));
    R0, Gamma_R0 := 0bv64, true;
    R0, Gamma_R0 := bvadd64(R0, 2028bv64), Gamma_R0;
    R30, Gamma_R30 := 1992bv64, true;
    call printf();
    goto l00000b06;
  l00000b06:
    assume {:captureState "addr:0x7c8"}true;
    R0, Gamma_R0 := 0bv64, true;
    R29, Gamma_R29 := memory_load64_le(stack, R31), gamma_load64(Gamma_stack, R31);
    R30, Gamma_R30 := memory_load64_le(stack, bvadd64(R31, 8bv64)), gamma_load64(Gamma_stack, bvadd64(R31, 8bv64));
    R31, Gamma_R31 := bvadd64(R31, 16bv64), Gamma_R31;
    return;
}

procedure printf();
  modifies Gamma_R16, Gamma_R17, R16, R17;
  free requires (memory_load8_le(mem, 2024bv64) == 1bv8);
  free requires (memory_load8_le(mem, 2025bv64) == 0bv8);
  free requires (memory_load8_le(mem, 2026bv64) == 2bv8);
  free requires (memory_load8_le(mem, 2027bv64) == 0bv8);
  free requires (memory_load8_le(mem, 2028bv64) == 37bv8);
  free requires (memory_load8_le(mem, 2029bv64) == 100bv8);
  free requires (memory_load8_le(mem, 2030bv64) == 10bv8);
  free requires (memory_load8_le(mem, 2031bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69064bv64) == 80bv8);
  free requires (memory_load8_le(mem, 69065bv64) == 7bv8);
  free requires (memory_load8_le(mem, 69066bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69067bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69068bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69069bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69070bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69071bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69072bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69073bv64) == 7bv8);
  free requires (memory_load8_le(mem, 69074bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69075bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69076bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69077bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69078bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69079bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69592bv64) == 132bv8);
  free requires (memory_load8_le(mem, 69593bv64) == 7bv8);
  free requires (memory_load8_le(mem, 69594bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69595bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69596bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69597bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69598bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69599bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69680bv64) == 48bv8);
  free requires (memory_load8_le(mem, 69681bv64) == 16bv8);
  free requires (memory_load8_le(mem, 69682bv64) == 1bv8);
  free requires (memory_load8_le(mem, 69683bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69684bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69685bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69686bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69687bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 2024bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 2025bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 2026bv64) == 2bv8);
  free ensures (memory_load8_le(mem, 2027bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 2028bv64) == 37bv8);
  free ensures (memory_load8_le(mem, 2029bv64) == 100bv8);
  free ensures (memory_load8_le(mem, 2030bv64) == 10bv8);
  free ensures (memory_load8_le(mem, 2031bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69064bv64) == 80bv8);
  free ensures (memory_load8_le(mem, 69065bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69066bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69067bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69068bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69069bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69070bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69071bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69072bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69073bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69074bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69075bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69076bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69077bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69078bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69079bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69592bv64) == 132bv8);
  free ensures (memory_load8_le(mem, 69593bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69594bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69595bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69596bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69597bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69598bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69599bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69680bv64) == 48bv8);
  free ensures (memory_load8_le(mem, 69681bv64) == 16bv8);
  free ensures (memory_load8_le(mem, 69682bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 69683bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69684bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69685bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69686bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69687bv64) == 0bv8);
