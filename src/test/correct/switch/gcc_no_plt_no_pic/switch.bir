00000cb4: program
00000c9a: sub __cxa_finalize(__cxa_finalize_result)
00000cb5: __cxa_finalize_result :: out u32 = low:32[R0]

00000a34:
00000b2c: R16 := 0x10000
00000b33: R17 := mem[R16 + 0xFB8, el]:u64
00000b39: R16 := R16 + 0xFB8
00000b3e: call R17 with noreturn

00000c9b: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
00000cb6: __do_global_dtors_aux_result :: out u32 = low:32[R0]

00000901:
00000905: #3 := R31 - 0x20
0000090b: mem := mem with [#3, el]:u64 <- R29
00000911: mem := mem with [#3 + 8, el]:u64 <- R30
00000915: R31 := #3
0000091b: R29 := R31
00000923: mem := mem with [R31 + 0x10, el]:u64 <- R19
00000928: R19 := 0x11000
0000092f: R0 := pad:64[mem[R19 + 0x10]]
00000936: when 31:0[R0] <> 0 goto %00000934
00000c9c: goto %000009fd

000009fd:
00000a00: R0 := 0x10000
00000a07: R0 := mem[R0 + 0xFE0, el]:u64
00000a0d: when R0 = 0 goto %00000a0b
00000c9d: goto %00000a24

00000a24:
00000a27: R0 := 0x11000
00000a2e: R0 := mem[R0 + 8, el]:u64
00000a33: R30 := 0x6F0
00000a36: call @__cxa_finalize with return %00000a0b

00000a0b:
00000a13: R30 := 0x6F4
00000a15: call @deregister_tm_clones with return %00000a17

00000a17:
00000a1a: R0 := 1
00000a22: mem := mem with [R19 + 0x10] <- 7:0[R0]
00000c9e: goto %00000934

00000934:
0000093e: R19 := mem[R31 + 0x10, el]:u64
00000945: R29 := mem[R31, el]:u64
0000094a: R30 := mem[R31 + 8, el]:u64
0000094e: R31 := R31 + 0x20
00000953: call R30 with noreturn

00000c9f: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
00000cb7: __libc_start_main_main :: in u64 = R0
00000cb8: __libc_start_main_arg2 :: in u32 = low:32[R1]
00000cb9: __libc_start_main_arg3 :: in out u64 = R2
00000cba: __libc_start_main_auxv :: in out u64 = R3
00000cbb: __libc_start_main_result :: out u32 = low:32[R0]

0000085a:
00000b16: R16 := 0x10000
00000b1d: R17 := mem[R16 + 0xFB0, el]:u64
00000b23: R16 := R16 + 0xFB0
00000b28: call R17 with noreturn

00000ca0: sub _fini(_fini_result)
00000cbc: _fini_result :: out u32 = low:32[R0]

0000067e:
00000684: #0 := R31 - 0x10
0000068a: mem := mem with [#0, el]:u64 <- R29
00000690: mem := mem with [#0 + 8, el]:u64 <- R30
00000694: R31 := #0
0000069a: R29 := R31
000006a1: R29 := mem[R31, el]:u64
000006a6: R30 := mem[R31 + 8, el]:u64
000006aa: R31 := R31 + 0x10
000006af: call R30 with noreturn

00000ca1: sub _init(_init_result)
00000cbd: _init_result :: out u32 = low:32[R0]

00000be7:
00000bed: #7 := R31 - 0x10
00000bf3: mem := mem with [#7, el]:u64 <- R29
00000bf9: mem := mem with [#7 + 8, el]:u64 <- R30
00000bfd: R31 := #7
00000c03: R29 := R31
00000c08: R30 := 0x590
00000c0a: call @call_weak_fn with return %00000c0c

00000c0c:
00000c11: R29 := mem[R31, el]:u64
00000c16: R30 := mem[R31 + 8, el]:u64
00000c1a: R31 := R31 + 0x10
00000c1f: call R30 with noreturn

00000ca2: sub _start(_start_result)
00000cbe: _start_result :: out u32 = low:32[R0]

0000081b:
00000820: R29 := 0
00000825: R30 := 0
0000082b: R5 := R0
00000832: R1 := mem[R31, el]:u64
00000838: R2 := R31 + 8
0000083e: R6 := R31
00000843: R0 := 0x10000
0000084a: R0 := mem[R0 + 0xFF0, el]:u64
0000084f: R3 := 0
00000854: R4 := 0
00000859: R30 := 0x630
0000085c: call @__libc_start_main with return %0000085e

0000085e:
00000861: R30 := 0x634
00000864: call @abort with return %00000ca3

00000ca3:
00000ca4: call @call_weak_fn with noreturn

00000ca5: sub abort()


00000862:
00000b58: R16 := 0x10000
00000b5f: R17 := mem[R16 + 0xFC8, el]:u64
00000b65: R16 := R16 + 0xFC8
00000b6a: call R17 with noreturn

00000ca6: sub call_weak_fn(call_weak_fn_result)
00000cbf: call_weak_fn_result :: out u32 = low:32[R0]

00000866:
00000869: R0 := 0x10000
00000870: R0 := mem[R0 + 0xFE8, el]:u64
00000876: when R0 = 0 goto %00000874
00000ca7: goto %00000a74

00000874:
0000087c: call R30 with noreturn

00000a74:
00000a77: goto @__gmon_start__

00000a75:
00000b42: R16 := 0x10000
00000b49: R17 := mem[R16 + 0xFC0, el]:u64
00000b4f: R16 := R16 + 0xFC0
00000b54: call R17 with noreturn

00000ca8: sub deregister_tm_clones(deregister_tm_clones_result)
00000cc0: deregister_tm_clones_result :: out u32 = low:32[R0]

00000882:
00000885: R0 := 0x11000
0000088b: R0 := R0 + 0x10
00000890: R1 := 0x11000
00000896: R1 := R1 + 0x10
0000089c: #1 := ~R0
000008a1: #2 := R1 + ~R0
000008a7: VF := extend:65[#2 + 1] <> extend:65[R1] + extend:65[#1] + 1
000008ad: CF := pad:65[#2 + 1] <> pad:65[R1] + pad:65[#1] + 1
000008b1: ZF := #2 + 1 = 0
000008b5: NF := 63:63[#2 + 1]
000008bb: when ZF goto %000008b9
00000ca9: goto %00000a56

00000a56:
00000a59: R1 := 0x10000
00000a60: R1 := mem[R1 + 0xFD8, el]:u64
00000a65: when R1 = 0 goto %000008b9
00000caa: goto %00000a69

000008b9:
000008c1: call R30 with noreturn

00000a69:
00000a6d: R16 := R1
00000a72: call R16 with noreturn

00000cab: sub frame_dummy(frame_dummy_result)
00000cc1: frame_dummy_result :: out u32 = low:32[R0]

00000959:
0000095b: call @register_tm_clones with noreturn

00000cac: sub main(main_argc, main_argv, main_result)
00000cc2: main_argc :: in u32 = low:32[R0]
00000cc3: main_argv :: in out u64 = R1
00000cc4: main_result :: out u32 = low:32[R0]

0000095d:
00000961: R31 := R31 - 0x10
00000966: R0 := 1
0000096e: mem := mem with [R31 + 8, el]:u32 <- 31:0[R0]
00000975: mem := mem with [R31 + 0xC, el]:u32 <- 0
0000097c: R0 := pad:64[mem[R31 + 8, el]:u32]
00000982: #4 := 31:0[R0] - 2
00000987: VF := extend:33[#4 + 1] <> extend:33[31:0[R0]] - 1
0000098c: CF := pad:33[#4 + 1] <> pad:33[31:0[R0]] + 0xFFFFFFFF
00000990: ZF := #4 + 1 = 0
00000994: NF := 31:31[#4 + 1]
0000099a: when ZF goto %00000998
00000cad: goto %000009ca

000009ca:
000009cf: R0 := pad:64[mem[R31 + 8, el]:u32]
000009d5: #5 := 31:0[R0] - 4
000009da: VF := extend:33[#5 + 1] <> extend:33[31:0[R0]] - 3
000009df: CF := pad:33[#5 + 1] <> pad:33[31:0[R0]] + 0xFFFFFFFD
000009e3: ZF := #5 + 1 = 0
000009e7: NF := 31:31[#5 + 1]
000009ec: when ZF <> 1 goto %000009bb
00000cae: goto %000009f0

000009bb:
000009be: R0 := 5
000009c6: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R0]
00000caf: goto %000009ab

000009f0:
000009f3: R0 := 3
000009fb: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R0]
00000cb0: goto %00000998

00000998:
000009a0: R0 := 1
000009a8: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R0]
000009ad: goto %000009ab

000009ab:
000009b4: R31 := R31 + 0x10
000009b9: call R30 with noreturn

00000cb1: sub register_tm_clones(register_tm_clones_result)
00000cc5: register_tm_clones_result :: out u32 = low:32[R0]

000008c3:
000008c6: R0 := 0x11000
000008cc: R0 := R0 + 0x10
000008d1: R1 := 0x11000
000008d7: R1 := R1 + 0x10
000008de: R1 := R1 + ~R0 + 1
000008e4: R2 := 0.63:63[R1]
000008eb: R1 := R2 + (R1 ~>> 3)
000008f1: R1 := extend:64[63:1[R1]]
000008f7: when R1 = 0 goto %000008f5
00000cb2: goto %00000a38

00000a38:
00000a3b: R2 := 0x10000
00000a42: R2 := mem[R2 + 0xFF8, el]:u64
00000a47: when R2 = 0 goto %000008f5
00000cb3: goto %00000a4b

000008f5:
000008fd: call R30 with noreturn

00000a4b:
00000a4f: R16 := R2
00000a54: call R16 with noreturn
