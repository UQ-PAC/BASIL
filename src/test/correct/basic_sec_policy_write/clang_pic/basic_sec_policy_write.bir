000005b9: program
00000587: sub __cxa_finalize(__cxa_finalize_result)
000005ba: __cxa_finalize_result :: out u32 = low:32[R0]

00000387:
0000047f: R16 := 0x20000
00000486: R17 := mem[R16 + 8, el]:u64
0000048c: R16 := R16 + 8
00000491: call R17 with noreturn

00000588: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
000005bb: __do_global_dtors_aux_result :: out u32 = low:32[R0]

0000028f:
00000293: #3 := R31 - 0x20
00000299: mem := mem with [#3, el]:u64 <- R29
0000029f: mem := mem with [#3 + 8, el]:u64 <- R30
000002a3: R31 := #3
000002a9: R29 := R31
000002b1: mem := mem with [R31 + 0x10, el]:u64 <- R19
000002b6: R19 := 0x20000
000002bd: R0 := pad:64[mem[R19 + 0x30]]
000002c3: when 0:0[R0] goto %000002c1
000005af: goto %00000350

00000350:
00000353: R0 := 0x1F000
0000035a: R0 := mem[R0 + 0xFB8, el]:u64
00000360: when R0 = 0 goto %0000035e
000005b0: goto %00000377

00000377:
0000037a: R0 := 0x20000
00000381: R0 := mem[R0 + 0x28, el]:u64
00000386: R30 := 0x770
00000389: call @__cxa_finalize with return %0000035e

0000035e:
00000366: R30 := 0x774
00000368: call @deregister_tm_clones with return %0000036a

0000036a:
0000036d: R0 := 1
00000375: mem := mem with [R19 + 0x30] <- 7:0[R0]
000005b1: goto %000002c1

000002c1:
000002cb: R19 := mem[R31 + 0x10, el]:u64
000002d2: R29 := mem[R31, el]:u64
000002d7: R30 := mem[R31 + 8, el]:u64
000002db: R31 := R31 + 0x20
000002e0: call R30 with noreturn

0000058c: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
000005bc: __libc_start_main_main :: in u64 = R0
000005bd: __libc_start_main_arg2 :: in u32 = low:32[R1]
000005be: __libc_start_main_arg3 :: in out u64 = R2
000005bf: __libc_start_main_auxv :: in out u64 = R3
000005c0: __libc_start_main_result :: out u32 = low:32[R0]

000001e8:
00000469: R16 := 0x20000
00000470: R17 := mem[R16, el]:u64
00000476: R16 := R16
0000047b: call R17 with noreturn

0000058d: sub _fini(_fini_result)
000005c1: _fini_result :: out u32 = low:32[R0]

00000020:
00000026: #0 := R31 - 0x10
0000002c: mem := mem with [#0, el]:u64 <- R29
00000032: mem := mem with [#0 + 8, el]:u64 <- R30
00000036: R31 := #0
0000003c: R29 := R31
00000043: R29 := mem[R31, el]:u64
00000048: R30 := mem[R31 + 8, el]:u64
0000004c: R31 := R31 + 0x10
00000051: call R30 with noreturn

0000058e: sub _init(_init_result)
000005c2: _init_result :: out u32 = low:32[R0]

000004d9:
000004df: #5 := R31 - 0x10
000004e5: mem := mem with [#5, el]:u64 <- R29
000004eb: mem := mem with [#5 + 8, el]:u64 <- R30
000004ef: R31 := #5
000004f5: R29 := R31
000004fa: R30 := 0x5F8
000004fc: call @call_weak_fn with return %000004fe

000004fe:
00000503: R29 := mem[R31, el]:u64
00000508: R30 := mem[R31 + 8, el]:u64
0000050c: R31 := R31 + 0x10
00000511: call R30 with noreturn

0000058f: sub _start(_start_result)
000005c3: _start_result :: out u32 = low:32[R0]

000001a9:
000001ae: R29 := 0
000001b3: R30 := 0
000001b9: R5 := R0
000001c0: R1 := mem[R31, el]:u64
000001c6: R2 := R31 + 8
000001cc: R6 := R31
000001d1: R0 := 0x1F000
000001d8: R0 := mem[R0 + 0xFD8, el]:u64
000001dd: R3 := 0
000001e2: R4 := 0
000001e7: R30 := 0x6B0
000001ea: call @__libc_start_main with return %000001ec

000001ec:
000001ef: R30 := 0x6B4
000001f2: call @abort with return %000005b2

000005b2:
000005b3: call @call_weak_fn with noreturn

00000592: sub abort()


000001f0:
000004ab: R16 := 0x20000
000004b2: R17 := mem[R16 + 0x18, el]:u64
000004b8: R16 := R16 + 0x18
000004bd: call R17 with noreturn

00000593: sub call_weak_fn(call_weak_fn_result)
000005c4: call_weak_fn_result :: out u32 = low:32[R0]

000001f4:
000001f7: R0 := 0x1F000
000001fe: R0 := mem[R0 + 0xFD0, el]:u64
00000204: when R0 = 0 goto %00000202
000005b4: goto %000003c7

00000202:
0000020a: call R30 with noreturn

000003c7:
000003ca: goto @__gmon_start__

000003c8:
00000495: R16 := 0x20000
0000049c: R17 := mem[R16 + 0x10, el]:u64
000004a2: R16 := R16 + 0x10
000004a7: call R17 with noreturn

00000595: sub deregister_tm_clones(deregister_tm_clones_result)
000005c5: deregister_tm_clones_result :: out u32 = low:32[R0]

00000210:
00000213: R0 := 0x20000
00000219: R0 := R0 + 0x30
0000021e: R1 := 0x20000
00000224: R1 := R1 + 0x30
0000022a: #1 := ~R0
0000022f: #2 := R1 + ~R0
00000235: VF := extend:65[#2 + 1] <> extend:65[R1] + extend:65[#1] + 1
0000023b: CF := pad:65[#2 + 1] <> pad:65[R1] + pad:65[#1] + 1
0000023f: ZF := #2 + 1 = 0
00000243: NF := 63:63[#2 + 1]
00000249: when ZF goto %00000247
000005b5: goto %000003a9

000003a9:
000003ac: R1 := 0x1F000
000003b3: R1 := mem[R1 + 0xFB0, el]:u64
000003b8: when R1 = 0 goto %00000247
000005b6: goto %000003bc

00000247:
0000024f: call R30 with noreturn

000003bc:
000003c0: R16 := R1
000003c5: call R16 with noreturn

00000598: sub frame_dummy(frame_dummy_result)
000005c6: frame_dummy_result :: out u32 = low:32[R0]

000002e6:
000002e8: call @register_tm_clones with noreturn

00000599: sub main(main_argc, main_argv, main_result)
000005c7: main_argc :: in u32 = low:32[R0]
000005c8: main_argv :: in out u64 = R1
000005c9: main_result :: out u32 = low:32[R0]

000002ea:
000002ee: R31 := R31 - 0x10
000002f6: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R0]
000002fb: R9 := 0x1F000
00000302: R9 := mem[R9 + 0xFC0, el]:u64
00000307: R8 := 1
0000030f: mem := mem with [R9, el]:u32 <- 31:0[R8]
00000316: R10 := pad:64[mem[R31 + 0xC, el]:u32]
0000031b: R8 := 0x1F000
00000322: R8 := mem[R8 + 0xFC8, el]:u64
0000032a: mem := mem with [R8, el]:u32 <- 31:0[R10]
0000032f: R0 := 0
00000336: mem := mem with [R8, el]:u32 <- 0
0000033b: R8 := 2
00000343: mem := mem with [R9, el]:u32 <- 31:0[R8]
00000349: R31 := R31 + 0x10
0000034e: call R30 with noreturn

0000059a: sub register_tm_clones(register_tm_clones_result)
000005ca: register_tm_clones_result :: out u32 = low:32[R0]

00000251:
00000254: R0 := 0x20000
0000025a: R0 := R0 + 0x30
0000025f: R1 := 0x20000
00000265: R1 := R1 + 0x30
0000026c: R1 := R1 + ~R0 + 1
00000272: R2 := 0.63:63[R1]
00000279: R1 := R2 + (R1 ~>> 3)
0000027f: R1 := extend:64[63:1[R1]]
00000285: when R1 = 0 goto %00000283
000005b7: goto %0000038b

0000038b:
0000038e: R2 := 0x1F000
00000395: R2 := mem[R2 + 0xFE0, el]:u64
0000039a: when R2 = 0 goto %00000283
000005b8: goto %0000039e

00000283:
0000028b: call R30 with noreturn

0000039e:
000003a2: R16 := R2
000003a7: call R16 with noreturn
