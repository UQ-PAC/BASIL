0000067f: program
0000064b: sub __cxa_finalize(__cxa_finalize_result)
00000680: __cxa_finalize_result :: out u32 = low:32[R0]

000003e3:
000004db: R16 := 0x11000
000004e2: R17 := mem[R16 + 8, el]:u64
000004e8: R16 := R16 + 8
000004ed: call R17 with noreturn

0000064c: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
00000681: __do_global_dtors_aux_result :: out u32 = low:32[R0]

000002a6:
000002aa: #3 := R31 - 0x20
000002b0: mem := mem with [#3, el]:u64 <- R29
000002b6: mem := mem with [#3 + 8, el]:u64 <- R30
000002ba: R31 := #3
000002c0: R29 := R31
000002c8: mem := mem with [R31 + 0x10, el]:u64 <- R19
000002cd: R19 := 0x11000
000002d4: R0 := pad:64[mem[R19 + 0x30]]
000002db: when 31:0[R0] <> 0 goto %000002d9
00000674: goto %000003ac

000003ac:
000003af: R0 := 0x10000
000003b6: R0 := mem[R0 + 0xFC8, el]:u64
000003bc: when R0 = 0 goto %000003ba
00000675: goto %000003d3

000003d3:
000003d6: R0 := 0x11000
000003dd: R0 := mem[R0 + 0x28, el]:u64
000003e2: R30 := 0x6F0
000003e5: call @__cxa_finalize with return %000003ba

000003ba:
000003c2: R30 := 0x6F4
000003c4: call @deregister_tm_clones with return %000003c6

000003c6:
000003c9: R0 := 1
000003d1: mem := mem with [R19 + 0x30] <- 7:0[R0]
00000676: goto %000002d9

000002d9:
000002e3: R19 := mem[R31 + 0x10, el]:u64
000002ea: R29 := mem[R31, el]:u64
000002ef: R30 := mem[R31 + 8, el]:u64
000002f3: R31 := R31 + 0x20
000002f8: call R30 with noreturn

00000650: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
00000682: __libc_start_main_main :: in u64 = R0
00000683: __libc_start_main_arg2 :: in u32 = low:32[R1]
00000684: __libc_start_main_arg3 :: in out u64 = R2
00000685: __libc_start_main_auxv :: in out u64 = R3
00000686: __libc_start_main_result :: out u32 = low:32[R0]

000001ff:
000004c5: R16 := 0x11000
000004cc: R17 := mem[R16, el]:u64
000004d2: R16 := R16
000004d7: call R17 with noreturn

00000651: sub _fini(_fini_result)
00000687: _fini_result :: out u32 = low:32[R0]

0000001f:
00000025: #0 := R31 - 0x10
0000002b: mem := mem with [#0, el]:u64 <- R29
00000031: mem := mem with [#0 + 8, el]:u64 <- R30
00000035: R31 := #0
0000003b: R29 := R31
00000042: R29 := mem[R31, el]:u64
00000047: R30 := mem[R31 + 8, el]:u64
0000004b: R31 := R31 + 0x10
00000050: call R30 with noreturn

00000652: sub _init(_init_result)
00000688: _init_result :: out u32 = low:32[R0]

00000597:
0000059d: #6 := R31 - 0x10
000005a3: mem := mem with [#6, el]:u64 <- R29
000005a9: mem := mem with [#6 + 8, el]:u64 <- R30
000005ad: R31 := #6
000005b3: R29 := R31
000005b8: R30 := 0x590
000005ba: call @call_weak_fn with return %000005bc

000005bc:
000005c1: R29 := mem[R31, el]:u64
000005c6: R30 := mem[R31 + 8, el]:u64
000005ca: R31 := R31 + 0x10
000005cf: call R30 with noreturn

00000653: sub _start(_start_result)
00000689: _start_result :: out u32 = low:32[R0]

000001c0:
000001c5: R29 := 0
000001ca: R30 := 0
000001d0: R5 := R0
000001d7: R1 := mem[R31, el]:u64
000001dd: R2 := R31 + 8
000001e3: R6 := R31
000001e8: R0 := 0x10000
000001ef: R0 := mem[R0 + 0xFD8, el]:u64
000001f4: R3 := 0
000001f9: R4 := 0
000001fe: R30 := 0x630
00000201: call @__libc_start_main with return %00000203

00000203:
00000206: R30 := 0x634
00000209: call @abort with return %00000677

00000677:
00000678: call @call_weak_fn with noreturn

00000656: sub abort()


00000207:
00000507: R16 := 0x11000
0000050e: R17 := mem[R16 + 0x18, el]:u64
00000514: R16 := R16 + 0x18
00000519: call R17 with noreturn

00000657: sub call_weak_fn(call_weak_fn_result)
0000068a: call_weak_fn_result :: out u32 = low:32[R0]

0000020b:
0000020e: R0 := 0x10000
00000215: R0 := mem[R0 + 0xFD0, el]:u64
0000021b: when R0 = 0 goto %00000219
00000679: goto %00000423

00000219:
00000221: call R30 with noreturn

00000423:
00000426: goto @__gmon_start__

00000424:
000004f1: R16 := 0x11000
000004f8: R17 := mem[R16 + 0x10, el]:u64
000004fe: R16 := R16 + 0x10
00000503: call R17 with noreturn

00000659: sub deregister_tm_clones(deregister_tm_clones_result)
0000068b: deregister_tm_clones_result :: out u32 = low:32[R0]

00000227:
0000022a: R0 := 0x11000
00000230: R0 := R0 + 0x30
00000235: R1 := 0x11000
0000023b: R1 := R1 + 0x30
00000241: #1 := ~R0
00000246: #2 := R1 + ~R0
0000024c: VF := extend:65[#2 + 1] <> extend:65[R1] + extend:65[#1] + 1
00000252: CF := pad:65[#2 + 1] <> pad:65[R1] + pad:65[#1] + 1
00000256: ZF := #2 + 1 = 0
0000025a: NF := 63:63[#2 + 1]
00000260: when ZF goto %0000025e
0000067a: goto %00000405

00000405:
00000408: R1 := 0x10000
0000040f: R1 := mem[R1 + 0xFC0, el]:u64
00000414: when R1 = 0 goto %0000025e
0000067b: goto %00000418

0000025e:
00000266: call R30 with noreturn

00000418:
0000041c: R16 := R1
00000421: call R16 with noreturn

0000065c: sub frame_dummy(frame_dummy_result)
0000068c: frame_dummy_result :: out u32 = low:32[R0]

000002fe:
00000300: call @register_tm_clones with noreturn

0000065d: sub main(main_argc, main_argv, main_result)
0000068d: main_argc :: in u32 = low:32[R0]
0000068e: main_argv :: in out u64 = R1
0000068f: main_result :: out u32 = low:32[R0]

00000302:
00000306: R31 := R31 - 0x20
0000030d: mem := mem with [R31 + 0x1C, el]:u32 <- 0
00000315: mem := mem with [R31 + 0x18, el]:u32 <- 31:0[R0]
0000031d: mem := mem with [R31 + 0x10, el]:u64 <- R1
00000324: mem := mem with [R31 + 0xC, el]:u32 <- 0
0000032b: R8 := pad:64[mem[R31 + 0x18, el]:u32]
00000331: #4 := 31:0[R8] - 1
00000336: VF := extend:33[#4 + 1] <> extend:33[31:0[R8]] + 0
0000033b: CF := pad:33[#4 + 1] <> pad:33[31:0[R8]] - 0x100000000
0000033f: ZF := #4 + 1 = 0
00000343: NF := 31:31[#4 + 1]
00000347: R8 := pad:64[#4 + 1]
00000353: when ZF goto %0000034c
00000354: goto %0000034f

0000034f:
00000350: R8 := 1
00000356: goto %00000352

0000034c:
0000034d: R8 := 0
00000355: goto %00000352

00000352:
0000035c: when 0:0[R8] goto %0000035a
0000067c: goto %00000397

0000035a:
00000362: R8 := 2
0000036a: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R8]
0000036f: goto %0000036d

00000397:
0000039a: goto %00000398

00000398:
0000039e: R8 := 1
000003a6: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R8]
000003aa: goto %0000036d

0000036d:
00000375: R8 := pad:64[mem[R31 + 0xC, el]:u32]
0000037b: R8 := pad:64[31:0[R8] + 1]
00000383: mem := mem with [R31 + 8, el]:u32 <- 31:0[R8]
0000038a: R0 := pad:64[mem[R31 + 8, el]:u32]
00000390: R31 := R31 + 0x20
00000395: call R30 with noreturn

0000065f: sub register_tm_clones(register_tm_clones_result)
00000690: register_tm_clones_result :: out u32 = low:32[R0]

00000268:
0000026b: R0 := 0x11000
00000271: R0 := R0 + 0x30
00000276: R1 := 0x11000
0000027c: R1 := R1 + 0x30
00000283: R1 := R1 + ~R0 + 1
00000289: R2 := 0.63:63[R1]
00000290: R1 := R2 + (R1 ~>> 3)
00000296: R1 := extend:64[63:1[R1]]
0000029c: when R1 = 0 goto %0000029a
0000067d: goto %000003e7

000003e7:
000003ea: R2 := 0x10000
000003f1: R2 := mem[R2 + 0xFE0, el]:u64
000003f6: when R2 = 0 goto %0000029a
0000067e: goto %000003fa

0000029a:
000002a2: call R30 with noreturn

000003fa:
000003fe: R16 := R2
00000403: call R16 with noreturn
