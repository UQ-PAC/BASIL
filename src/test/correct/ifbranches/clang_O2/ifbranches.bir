0000054a: program
00000518: sub __cxa_finalize(__cxa_finalize_result)
0000054b: __cxa_finalize_result :: out u32 = low:32[R0]

00000324:
0000041c: R16 := 0x20000
00000423: R17 := mem[R16 + 8, el]:u64
00000429: R16 := R16 + 8
0000042e: call R17 with noreturn

00000519: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
0000054c: __do_global_dtors_aux_result :: out u32 = low:32[R0]

0000025f:
00000263: #3 := R31 - 0x20
00000269: mem := mem with [#3, el]:u64 <- R29
0000026f: mem := mem with [#3 + 8, el]:u64 <- R30
00000273: R31 := #3
00000279: R29 := R31
00000281: mem := mem with [R31 + 0x10, el]:u64 <- R19
00000286: R19 := 0x20000
0000028d: R0 := pad:64[mem[R19 + 0x30]]
00000293: when 0:0[R0] goto %00000291
00000540: goto %000002ed

000002ed:
000002f0: R0 := 0x1F000
000002f7: R0 := mem[R0 + 0xFC8, el]:u64
000002fd: when R0 = 0 goto %000002fb
00000541: goto %00000314

00000314:
00000317: R0 := 0x20000
0000031e: R0 := mem[R0 + 0x28, el]:u64
00000323: R30 := 0x730
00000326: call @__cxa_finalize with return %000002fb

000002fb:
00000303: R30 := 0x734
00000305: call @deregister_tm_clones with return %00000307

00000307:
0000030a: R0 := 1
00000312: mem := mem with [R19 + 0x30] <- 7:0[R0]
00000542: goto %00000291

00000291:
0000029b: R19 := mem[R31 + 0x10, el]:u64
000002a2: R29 := mem[R31, el]:u64
000002a7: R30 := mem[R31 + 8, el]:u64
000002ab: R31 := R31 + 0x20
000002b0: call R30 with noreturn

0000051d: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
0000054d: __libc_start_main_main :: in u64 = R0
0000054e: __libc_start_main_arg2 :: in u32 = low:32[R1]
0000054f: __libc_start_main_arg3 :: in out u64 = R2
00000550: __libc_start_main_auxv :: in out u64 = R3
00000551: __libc_start_main_result :: out u32 = low:32[R0]

000001b8:
00000406: R16 := 0x20000
0000040d: R17 := mem[R16, el]:u64
00000413: R16 := R16
00000418: call R17 with noreturn

0000051e: sub _fini(_fini_result)
00000552: _fini_result :: out u32 = low:32[R0]

00000020:
00000026: #0 := R31 - 0x10
0000002c: mem := mem with [#0, el]:u64 <- R29
00000032: mem := mem with [#0 + 8, el]:u64 <- R30
00000036: R31 := #0
0000003c: R29 := R31
00000043: R29 := mem[R31, el]:u64
00000048: R30 := mem[R31 + 8, el]:u64
0000004c: R31 := R31 + 0x10
00000051: call R30 with noreturn

0000051f: sub _init(_init_result)
00000553: _init_result :: out u32 = low:32[R0]

00000476:
0000047c: #6 := R31 - 0x10
00000482: mem := mem with [#6, el]:u64 <- R29
00000488: mem := mem with [#6 + 8, el]:u64 <- R30
0000048c: R31 := #6
00000492: R29 := R31
00000497: R30 := 0x5C8
00000499: call @call_weak_fn with return %0000049b

0000049b:
000004a0: R29 := mem[R31, el]:u64
000004a5: R30 := mem[R31 + 8, el]:u64
000004a9: R31 := R31 + 0x10
000004ae: call R30 with noreturn

00000520: sub _start(_start_result)
00000554: _start_result :: out u32 = low:32[R0]

00000179:
0000017e: R29 := 0
00000183: R30 := 0
00000189: R5 := R0
00000190: R1 := mem[R31, el]:u64
00000196: R2 := R31 + 8
0000019c: R6 := R31
000001a1: R0 := 0x1F000
000001a8: R0 := mem[R0 + 0xFD8, el]:u64
000001ad: R3 := 0
000001b2: R4 := 0
000001b7: R30 := 0x670
000001ba: call @__libc_start_main with return %000001bc

000001bc:
000001bf: R30 := 0x674
000001c2: call @abort with return %00000543

00000543:
00000544: call @call_weak_fn with noreturn

00000523: sub abort()


000001c0:
00000448: R16 := 0x20000
0000044f: R17 := mem[R16 + 0x18, el]:u64
00000455: R16 := R16 + 0x18
0000045a: call R17 with noreturn

00000524: sub call_weak_fn(call_weak_fn_result)
00000555: call_weak_fn_result :: out u32 = low:32[R0]

000001c4:
000001c7: R0 := 0x1F000
000001ce: R0 := mem[R0 + 0xFD0, el]:u64
000001d4: when R0 = 0 goto %000001d2
00000545: goto %00000364

000001d2:
000001da: call R30 with noreturn

00000364:
00000367: goto @__gmon_start__

00000365:
00000432: R16 := 0x20000
00000439: R17 := mem[R16 + 0x10, el]:u64
0000043f: R16 := R16 + 0x10
00000444: call R17 with noreturn

00000526: sub deregister_tm_clones(deregister_tm_clones_result)
00000556: deregister_tm_clones_result :: out u32 = low:32[R0]

000001e0:
000001e3: R0 := 0x20000
000001e9: R0 := R0 + 0x30
000001ee: R1 := 0x20000
000001f4: R1 := R1 + 0x30
000001fa: #1 := ~R0
000001ff: #2 := R1 + ~R0
00000205: VF := extend:65[#2 + 1] <> extend:65[R1] + extend:65[#1] + 1
0000020b: CF := pad:65[#2 + 1] <> pad:65[R1] + pad:65[#1] + 1
0000020f: ZF := #2 + 1 = 0
00000213: NF := 63:63[#2 + 1]
00000219: when ZF goto %00000217
00000546: goto %00000346

00000346:
00000349: R1 := 0x1F000
00000350: R1 := mem[R1 + 0xFC0, el]:u64
00000355: when R1 = 0 goto %00000217
00000547: goto %00000359

00000217:
0000021f: call R30 with noreturn

00000359:
0000035d: R16 := R1
00000362: call R16 with noreturn

00000529: sub frame_dummy(frame_dummy_result)
00000557: frame_dummy_result :: out u32 = low:32[R0]

000002b6:
000002b8: call @register_tm_clones with noreturn

0000052a: sub main(main_argc, main_argv, main_result)
00000558: main_argc :: in u32 = low:32[R0]
00000559: main_argv :: in out u64 = R1
0000055a: main_result :: out u32 = low:32[R0]

000002ba:
000002bd: R8 := 2
000002c3: #4 := 31:0[R0] - 1
000002c8: VF := extend:33[#4 + 1] <> extend:33[31:0[R0]] + 0
000002cd: CF := pad:33[#4 + 1] <> pad:33[31:0[R0]] - 0x100000000
000002d1: ZF := #4 + 1 = 0
000002d5: NF := 31:31[#4 + 1]
000002e3: when ZF goto %000002db
000002e4: goto %000002df

000002df:
000002e0: R0 := pad:64[31:0[R8] + 1]
000002e6: goto %000002e2

000002db:
000002dc: R0 := pad:64[31:0[R8]]
000002e5: goto %000002e2

000002e2:
000002eb: call R30 with noreturn

0000052b: sub register_tm_clones(register_tm_clones_result)
0000055b: register_tm_clones_result :: out u32 = low:32[R0]

00000221:
00000224: R0 := 0x20000
0000022a: R0 := R0 + 0x30
0000022f: R1 := 0x20000
00000235: R1 := R1 + 0x30
0000023c: R1 := R1 + ~R0 + 1
00000242: R2 := 0.63:63[R1]
00000249: R1 := R2 + (R1 ~>> 3)
0000024f: R1 := extend:64[63:1[R1]]
00000255: when R1 = 0 goto %00000253
00000548: goto %00000328

00000328:
0000032b: R2 := 0x1F000
00000332: R2 := mem[R2 + 0xFE0, el]:u64
00000337: when R2 = 0 goto %00000253
00000549: goto %0000033b

00000253:
0000025b: call R30 with noreturn

0000033b:
0000033f: R16 := R2
00000344: call R16 with noreturn
