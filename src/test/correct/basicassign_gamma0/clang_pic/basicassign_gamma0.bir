0000055c: program
0000052a: sub __cxa_finalize(__cxa_finalize_result)
0000055d: __cxa_finalize_result :: out u32 = low:32[R0]

00000332:
0000042a: R16 := 0x20000
00000431: R17 := mem[R16 + 8, el]:u64
00000437: R16 := R16 + 8
0000043c: call R17 with noreturn

0000052b: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
0000055e: __do_global_dtors_aux_result :: out u32 = low:32[R0]

0000026f:
00000273: #3 := R31 - 0x20
00000279: mem := mem with [#3, el]:u64 <- R29
0000027f: mem := mem with [#3 + 8, el]:u64 <- R30
00000283: R31 := #3
00000289: R29 := R31
00000291: mem := mem with [R31 + 0x10, el]:u64 <- R19
00000296: R19 := 0x20000
0000029d: R0 := pad:64[mem[R19 + 0x30]]
000002a3: when 0:0[R0] goto %000002a1
00000552: goto %000002fb

000002fb:
000002fe: R0 := 0x1F000
00000305: R0 := mem[R0 + 0xFB8, el]:u64
0000030b: when R0 = 0 goto %00000309
00000553: goto %00000322

00000322:
00000325: R0 := 0x20000
0000032c: R0 := mem[R0 + 0x28, el]:u64
00000331: R30 := 0x770
00000334: call @__cxa_finalize with return %00000309

00000309:
00000311: R30 := 0x774
00000313: call @deregister_tm_clones with return %00000315

00000315:
00000318: R0 := 1
00000320: mem := mem with [R19 + 0x30] <- 7:0[R0]
00000554: goto %000002a1

000002a1:
000002ab: R19 := mem[R31 + 0x10, el]:u64
000002b2: R29 := mem[R31, el]:u64
000002b7: R30 := mem[R31 + 8, el]:u64
000002bb: R31 := R31 + 0x20
000002c0: call R30 with noreturn

0000052f: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
0000055f: __libc_start_main_main :: in u64 = R0
00000560: __libc_start_main_arg2 :: in u32 = low:32[R1]
00000561: __libc_start_main_arg3 :: in out u64 = R2
00000562: __libc_start_main_auxv :: in out u64 = R3
00000563: __libc_start_main_result :: out u32 = low:32[R0]

000001c8:
00000414: R16 := 0x20000
0000041b: R17 := mem[R16, el]:u64
00000421: R16 := R16
00000426: call R17 with noreturn

00000530: sub _fini(_fini_result)
00000564: _fini_result :: out u32 = low:32[R0]

00000020:
00000026: #0 := R31 - 0x10
0000002c: mem := mem with [#0, el]:u64 <- R29
00000032: mem := mem with [#0 + 8, el]:u64 <- R30
00000036: R31 := #0
0000003c: R29 := R31
00000043: R29 := mem[R31, el]:u64
00000048: R30 := mem[R31 + 8, el]:u64
0000004c: R31 := R31 + 0x10
00000051: call R30 with noreturn

00000531: sub _init(_init_result)
00000565: _init_result :: out u32 = low:32[R0]

00000484:
0000048a: #5 := R31 - 0x10
00000490: mem := mem with [#5, el]:u64 <- R29
00000496: mem := mem with [#5 + 8, el]:u64 <- R30
0000049a: R31 := #5
000004a0: R29 := R31
000004a5: R30 := 0x5F8
000004a7: call @call_weak_fn with return %000004a9

000004a9:
000004ae: R29 := mem[R31, el]:u64
000004b3: R30 := mem[R31 + 8, el]:u64
000004b7: R31 := R31 + 0x10
000004bc: call R30 with noreturn

00000532: sub _start(_start_result)
00000566: _start_result :: out u32 = low:32[R0]

00000189:
0000018e: R29 := 0
00000193: R30 := 0
00000199: R5 := R0
000001a0: R1 := mem[R31, el]:u64
000001a6: R2 := R31 + 8
000001ac: R6 := R31
000001b1: R0 := 0x1F000
000001b8: R0 := mem[R0 + 0xFD8, el]:u64
000001bd: R3 := 0
000001c2: R4 := 0
000001c7: R30 := 0x6B0
000001ca: call @__libc_start_main with return %000001cc

000001cc:
000001cf: R30 := 0x6B4
000001d2: call @abort with return %00000555

00000555:
00000556: call @call_weak_fn with noreturn

00000535: sub abort()


000001d0:
00000456: R16 := 0x20000
0000045d: R17 := mem[R16 + 0x18, el]:u64
00000463: R16 := R16 + 0x18
00000468: call R17 with noreturn

00000536: sub call_weak_fn(call_weak_fn_result)
00000567: call_weak_fn_result :: out u32 = low:32[R0]

000001d4:
000001d7: R0 := 0x1F000
000001de: R0 := mem[R0 + 0xFC8, el]:u64
000001e4: when R0 = 0 goto %000001e2
00000557: goto %00000372

000001e2:
000001ea: call R30 with noreturn

00000372:
00000375: goto @__gmon_start__

00000373:
00000440: R16 := 0x20000
00000447: R17 := mem[R16 + 0x10, el]:u64
0000044d: R16 := R16 + 0x10
00000452: call R17 with noreturn

00000538: sub deregister_tm_clones(deregister_tm_clones_result)
00000568: deregister_tm_clones_result :: out u32 = low:32[R0]

000001f0:
000001f3: R0 := 0x20000
000001f9: R0 := R0 + 0x30
000001fe: R1 := 0x20000
00000204: R1 := R1 + 0x30
0000020a: #1 := ~R0
0000020f: #2 := R1 + ~R0
00000215: VF := extend:65[#2 + 1] <> extend:65[R1] + extend:65[#1] + 1
0000021b: CF := pad:65[#2 + 1] <> pad:65[R1] + pad:65[#1] + 1
0000021f: ZF := #2 + 1 = 0
00000223: NF := 63:63[#2 + 1]
00000229: when ZF goto %00000227
00000558: goto %00000354

00000354:
00000357: R1 := 0x1F000
0000035e: R1 := mem[R1 + 0xFB0, el]:u64
00000363: when R1 = 0 goto %00000227
00000559: goto %00000367

00000227:
0000022f: call R30 with noreturn

00000367:
0000036b: R16 := R1
00000370: call R16 with noreturn

0000053b: sub frame_dummy(frame_dummy_result)
00000569: frame_dummy_result :: out u32 = low:32[R0]

000002c6:
000002c8: call @register_tm_clones with noreturn

0000053c: sub main(main_argc, main_argv, main_result)
0000056a: main_argc :: in u32 = low:32[R0]
0000056b: main_argv :: in out u64 = R1
0000056c: main_result :: out u32 = low:32[R0]

000002ca:
000002cd: R8 := 0x1F000
000002d4: R8 := mem[R8 + 0xFD0, el]:u64
000002db: R8 := pad:64[mem[R8, el]:u32]
000002e0: R9 := 0x1F000
000002e7: R9 := mem[R9 + 0xFC0, el]:u64
000002ef: mem := mem with [R9, el]:u32 <- 31:0[R8]
000002f4: R0 := 0
000002f9: call R30 with noreturn

0000053d: sub register_tm_clones(register_tm_clones_result)
0000056d: register_tm_clones_result :: out u32 = low:32[R0]

00000231:
00000234: R0 := 0x20000
0000023a: R0 := R0 + 0x30
0000023f: R1 := 0x20000
00000245: R1 := R1 + 0x30
0000024c: R1 := R1 + ~R0 + 1
00000252: R2 := 0.63:63[R1]
00000259: R1 := R2 + (R1 ~>> 3)
0000025f: R1 := extend:64[63:1[R1]]
00000265: when R1 = 0 goto %00000263
0000055a: goto %00000336

00000336:
00000339: R2 := 0x1F000
00000340: R2 := mem[R2 + 0xFE0, el]:u64
00000345: when R2 = 0 goto %00000263
0000055b: goto %00000349

00000263:
0000026b: call R30 with noreturn

00000349:
0000034d: R16 := R2
00000352: call R16 with noreturn
