00000606: program
000005d2: sub __cxa_finalize(__cxa_finalize_result)
00000607: __cxa_finalize_result :: out u32 = low:32[R0]

0000036c:
00000464: R16 := 0x10000
0000046b: R17 := mem[R16 + 0xFB8, el]:u64
00000471: R16 := R16 + 0xFB8
00000476: call R17 with noreturn

000005d3: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
00000608: __do_global_dtors_aux_result :: out u32 = low:32[R0]

000002c8:
000002cc: #3 := R31 - 0x20
000002d2: mem := mem with [#3, el]:u64 <- R29
000002d8: mem := mem with [#3 + 8, el]:u64 <- R30
000002dc: R31 := #3
000002e2: R29 := R31
000002ea: mem := mem with [R31 + 0x10, el]:u64 <- R19
000002ef: R19 := 0x11000
000002f6: R0 := pad:64[mem[R19 + 0x10]]
000002fd: when 31:0[R0] <> 0 goto %000002fb
000005fc: goto %00000335

00000335:
00000338: R0 := 0x10000
0000033f: R0 := mem[R0 + 0xFE0, el]:u64
00000345: when R0 = 0 goto %00000343
000005fd: goto %0000035c

0000035c:
0000035f: R0 := 0x11000
00000366: R0 := mem[R0 + 8, el]:u64
0000036b: R30 := 0x730
0000036e: call @__cxa_finalize with return %00000343

00000343:
0000034b: R30 := 0x734
0000034d: call @deregister_tm_clones with return %0000034f

0000034f:
00000352: R0 := 1
0000035a: mem := mem with [R19 + 0x10] <- 7:0[R0]
000005fe: goto %000002fb

000002fb:
00000305: R19 := mem[R31 + 0x10, el]:u64
0000030c: R29 := mem[R31, el]:u64
00000311: R30 := mem[R31 + 8, el]:u64
00000315: R31 := R31 + 0x20
0000031a: call R30 with noreturn

000005d7: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
00000609: __libc_start_main_main :: in u64 = R0
0000060a: __libc_start_main_arg2 :: in u32 = low:32[R1]
0000060b: __libc_start_main_arg3 :: in out u64 = R2
0000060c: __libc_start_main_auxv :: in out u64 = R3
0000060d: __libc_start_main_result :: out u32 = low:32[R0]

00000221:
0000044e: R16 := 0x10000
00000455: R17 := mem[R16 + 0xFB0, el]:u64
0000045b: R16 := R16 + 0xFB0
00000460: call R17 with noreturn

000005d8: sub _fini(_fini_result)
0000060e: _fini_result :: out u32 = low:32[R0]

0000001f:
00000025: #0 := R31 - 0x10
0000002b: mem := mem with [#0, el]:u64 <- R29
00000031: mem := mem with [#0 + 8, el]:u64 <- R30
00000035: R31 := #0
0000003b: R29 := R31
00000042: R29 := mem[R31, el]:u64
00000047: R30 := mem[R31 + 8, el]:u64
0000004b: R31 := R31 + 0x10
00000050: call R30 with noreturn

000005d9: sub _init(_init_result)
0000060f: _init_result :: out u32 = low:32[R0]

0000051f:
00000525: #5 := R31 - 0x10
0000052b: mem := mem with [#5, el]:u64 <- R29
00000531: mem := mem with [#5 + 8, el]:u64 <- R30
00000535: R31 := #5
0000053b: R29 := R31
00000540: R30 := 0x590
00000542: call @call_weak_fn with return %00000544

00000544:
00000549: R29 := mem[R31, el]:u64
0000054e: R30 := mem[R31 + 8, el]:u64
00000552: R31 := R31 + 0x10
00000557: call R30 with noreturn

000005da: sub _start(_start_result)
00000610: _start_result :: out u32 = low:32[R0]

000001e2:
000001e7: R29 := 0
000001ec: R30 := 0
000001f2: R5 := R0
000001f9: R1 := mem[R31, el]:u64
000001ff: R2 := R31 + 8
00000205: R6 := R31
0000020a: R0 := 0x10000
00000211: R0 := mem[R0 + 0xFF0, el]:u64
00000216: R3 := 0
0000021b: R4 := 0
00000220: R30 := 0x670
00000223: call @__libc_start_main with return %00000225

00000225:
00000228: R30 := 0x674
0000022b: call @abort with return %000005ff

000005ff:
00000600: call @call_weak_fn with noreturn

000005dd: sub abort()


00000229:
00000490: R16 := 0x10000
00000497: R17 := mem[R16 + 0xFC8, el]:u64
0000049d: R16 := R16 + 0xFC8
000004a2: call R17 with noreturn

000005de: sub call_weak_fn(call_weak_fn_result)
00000611: call_weak_fn_result :: out u32 = low:32[R0]

0000022d:
00000230: R0 := 0x10000
00000237: R0 := mem[R0 + 0xFE8, el]:u64
0000023d: when R0 = 0 goto %0000023b
00000601: goto %000003ac

0000023b:
00000243: call R30 with noreturn

000003ac:
000003af: goto @__gmon_start__

000003ad:
0000047a: R16 := 0x10000
00000481: R17 := mem[R16 + 0xFC0, el]:u64
00000487: R16 := R16 + 0xFC0
0000048c: call R17 with noreturn

000005e0: sub deregister_tm_clones(deregister_tm_clones_result)
00000612: deregister_tm_clones_result :: out u32 = low:32[R0]

00000249:
0000024c: R0 := 0x11000
00000252: R0 := R0 + 0x10
00000257: R1 := 0x11000
0000025d: R1 := R1 + 0x10
00000263: #1 := ~R0
00000268: #2 := R1 + ~R0
0000026e: VF := extend:65[#2 + 1] <> extend:65[R1] + extend:65[#1] + 1
00000274: CF := pad:65[#2 + 1] <> pad:65[R1] + pad:65[#1] + 1
00000278: ZF := #2 + 1 = 0
0000027c: NF := 63:63[#2 + 1]
00000282: when ZF goto %00000280
00000602: goto %0000038e

0000038e:
00000391: R1 := 0x10000
00000398: R1 := mem[R1 + 0xFD8, el]:u64
0000039d: when R1 = 0 goto %00000280
00000603: goto %000003a1

00000280:
00000288: call R30 with noreturn

000003a1:
000003a5: R16 := R1
000003aa: call R16 with noreturn

000005e3: sub frame_dummy(frame_dummy_result)
00000613: frame_dummy_result :: out u32 = low:32[R0]

00000320:
00000322: call @register_tm_clones with noreturn

000005e4: sub main(main_argc, main_argv, main_result)
00000614: main_argc :: in u32 = low:32[R0]
00000615: main_argv :: in out u64 = R1
00000616: main_result :: out u32 = low:32[R0]

000001bc:
000001bf: R0 := 0
000001c4: call R30 with noreturn

000005e5: sub plus_one(plus_one_result)
00000617: plus_one_result :: out u32 = low:32[R0]

0000032a:
0000032e: R0 := pad:64[31:0[R0] + 1]
00000333: call R30 with noreturn

000005e6: sub register_tm_clones(register_tm_clones_result)
00000618: register_tm_clones_result :: out u32 = low:32[R0]

0000028a:
0000028d: R0 := 0x11000
00000293: R0 := R0 + 0x10
00000298: R1 := 0x11000
0000029e: R1 := R1 + 0x10
000002a5: R1 := R1 + ~R0 + 1
000002ab: R2 := 0.63:63[R1]
000002b2: R1 := R2 + (R1 ~>> 3)
000002b8: R1 := extend:64[63:1[R1]]
000002be: when R1 = 0 goto %000002bc
00000604: goto %00000370

00000370:
00000373: R2 := 0x10000
0000037a: R2 := mem[R2 + 0xFF8, el]:u64
0000037f: when R2 = 0 goto %000002bc
00000605: goto %00000383

000002bc:
000002c4: call R30 with noreturn

00000383:
00000387: R16 := R2
0000038c: call R16 with noreturn
