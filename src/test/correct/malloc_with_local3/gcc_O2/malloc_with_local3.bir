00000750: program
00000719: sub __cxa_finalize(__cxa_finalize_result)
00000751: __cxa_finalize_result :: out u32 = low:32[R0]

0000045d:
00000565: R16 := 0x20000
0000056c: R17 := mem[R16 + 8, el]:u64
00000572: R16 := R16 + 8
00000577: call R17 with noreturn

0000071a: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
00000752: __do_global_dtors_aux_result :: out u32 = low:32[R0]

00000395:
00000399: #4 := R31 - 0x20
0000039f: mem := mem with [#4, el]:u64 <- R29
000003a5: mem := mem with [#4 + 8, el]:u64 <- R30
000003a9: R31 := #4
000003af: R29 := R31
000003b7: mem := mem with [R31 + 0x10, el]:u64 <- R19
000003bc: R19 := 0x20000
000003c3: R0 := pad:64[mem[R19 + 0x38]]
000003c9: when 0:0[R0] goto %000003c7
00000746: goto %00000426

00000426:
00000429: R0 := 0x1F000
00000430: R0 := mem[R0 + 0xFC8, el]:u64
00000436: when R0 = 0 goto %00000434
00000747: goto %0000044d

0000044d:
00000450: R0 := 0x20000
00000457: R0 := mem[R0 + 0x30, el]:u64
0000045c: R30 := 0x7B0
0000045f: call @__cxa_finalize with return %00000434

00000434:
0000043c: R30 := 0x7B4
0000043e: call @deregister_tm_clones with return %00000440

00000440:
00000443: R0 := 1
0000044b: mem := mem with [R19 + 0x38] <- 7:0[R0]
00000748: goto %000003c7

000003c7:
000003d1: R19 := mem[R31 + 0x10, el]:u64
000003d8: R29 := mem[R31, el]:u64
000003dd: R30 := mem[R31 + 8, el]:u64
000003e1: R31 := R31 + 0x20
000003e6: call R30 with noreturn

0000071e: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
00000753: __libc_start_main_main :: in u64 = R0
00000754: __libc_start_main_arg2 :: in u32 = low:32[R1]
00000755: __libc_start_main_arg3 :: in out u64 = R2
00000756: __libc_start_main_auxv :: in out u64 = R3
00000757: __libc_start_main_result :: out u32 = low:32[R0]

000002ee:
0000054f: R16 := 0x20000
00000556: R17 := mem[R16, el]:u64
0000055c: R16 := R16
00000561: call R17 with noreturn

0000071f: sub _fini(_fini_result)
00000758: _fini_result :: out u32 = low:32[R0]

00000020:
00000026: #0 := R31 - 0x10
0000002c: mem := mem with [#0, el]:u64 <- R29
00000032: mem := mem with [#0 + 8, el]:u64 <- R30
00000036: R31 := #0
0000003c: R29 := R31
00000043: R29 := mem[R31, el]:u64
00000048: R30 := mem[R31 + 8, el]:u64
0000004c: R31 := R31 + 0x10
00000051: call R30 with noreturn

00000720: sub _init(_init_result)
00000759: _init_result :: out u32 = low:32[R0]

0000064c:
00000652: #6 := R31 - 0x10
00000658: mem := mem with [#6, el]:u64 <- R29
0000065e: mem := mem with [#6 + 8, el]:u64 <- R30
00000662: R31 := #6
00000668: R29 := R31
0000066d: R30 := 0x5C8
0000066f: call @call_weak_fn with return %00000671

00000671:
00000676: R29 := mem[R31, el]:u64
0000067b: R30 := mem[R31 + 8, el]:u64
0000067f: R31 := R31 + 0x10
00000684: call R30 with noreturn

00000721: sub _start(_start_result)
0000075a: _start_result :: out u32 = low:32[R0]

000002af:
000002b4: R29 := 0
000002b9: R30 := 0
000002bf: R5 := R0
000002c6: R1 := mem[R31, el]:u64
000002cc: R2 := R31 + 8
000002d2: R6 := R31
000002d7: R0 := 0x1F000
000002de: R0 := mem[R0 + 0xFD8, el]:u64
000002e3: R3 := 0
000002e8: R4 := 0
000002ed: R30 := 0x6F0
000002f0: call @__libc_start_main with return %000002f2

000002f2:
000002f5: R30 := 0x6F4
000002f8: call @abort with return %00000749

00000749:
0000074a: call @call_weak_fn with noreturn

00000724: sub abort()


000002f6:
00000591: R16 := 0x20000
00000598: R17 := mem[R16 + 0x18, el]:u64
0000059e: R16 := R16 + 0x18
000005a3: call R17 with noreturn

00000725: sub call_weak_fn(call_weak_fn_result)
0000075b: call_weak_fn_result :: out u32 = low:32[R0]

000002fa:
000002fd: R0 := 0x1F000
00000304: R0 := mem[R0 + 0xFD0, el]:u64
0000030a: when R0 = 0 goto %00000308
0000074b: goto %0000049d

00000308:
00000310: call R30 with noreturn

0000049d:
000004a0: goto @__gmon_start__

0000049e:
0000057b: R16 := 0x20000
00000582: R17 := mem[R16 + 0x10, el]:u64
00000588: R16 := R16 + 0x10
0000058d: call R17 with noreturn

00000727: sub deregister_tm_clones(deregister_tm_clones_result)
0000075c: deregister_tm_clones_result :: out u32 = low:32[R0]

00000316:
00000319: R0 := 0x20000
0000031f: R0 := R0 + 0x38
00000324: R1 := 0x20000
0000032a: R1 := R1 + 0x38
00000330: #2 := ~R0
00000335: #3 := R1 + ~R0
0000033b: VF := extend:65[#3 + 1] <> extend:65[R1] + extend:65[#2] + 1
00000341: CF := pad:65[#3 + 1] <> pad:65[R1] + pad:65[#2] + 1
00000345: ZF := #3 + 1 = 0
00000349: NF := 63:63[#3 + 1]
0000034f: when ZF goto %0000034d
0000074c: goto %0000047f

0000047f:
00000482: R1 := 0x1F000
00000489: R1 := mem[R1 + 0xFC0, el]:u64
0000048e: when R1 = 0 goto %0000034d
0000074d: goto %00000492

0000034d:
00000355: call R30 with noreturn

00000492:
00000496: R16 := R1
0000049b: call R16 with noreturn

0000072a: sub frame_dummy(frame_dummy_result)
0000075d: frame_dummy_result :: out u32 = low:32[R0]

000003ec:
000003ee: call @register_tm_clones with noreturn

0000072b: sub main(main_argc, main_argv, main_result)
0000075e: main_argc :: in u32 = low:32[R0]
0000075f: main_argv :: in out u64 = R1
00000760: main_result :: out u32 = low:32[R0]

00000215:
00000219: #1 := R31 - 0x10
0000021f: mem := mem with [#1, el]:u64 <- R29
00000225: mem := mem with [#1 + 8, el]:u64 <- R30
00000229: R31 := #1
0000022e: R1 := 0x42
00000233: R0 := 0
00000239: R29 := R31
0000023f: R0 := R0 + 0x820
00000244: R30 := 0x658
00000247: call @printf with return %00000249

00000249:
0000024c: R1 := 0x2A
00000251: R0 := 0
00000257: R0 := R0 + 0x838
0000025c: R30 := 0x668
0000025e: call @printf with return %00000260

00000260:
00000263: R1 := 0xA
00000268: R0 := 0
0000026e: R0 := R0 + 0x848
00000273: R30 := 0x678
00000275: call @printf with return %00000277

00000277:
0000027a: R0 := 0
00000281: R29 := mem[R31, el]:u64
00000286: R30 := mem[R31 + 8, el]:u64
0000028a: R31 := R31 + 0x10
0000028f: call R30 with noreturn

0000072c: sub printCharValue(printCharValue_result)
00000761: printCharValue_result :: out u32 = low:32[R0]

000003f6:
000003fa: R2 := R0
000003ff: R1 := 0
00000405: R0 := R1 + 0x820
0000040c: R1 := pad:64[mem[R2]]
00000412: R1 := pad:64[31:0[R1] + 1]
00000418: R1 := pad:64[0.7:0[R1]]
00000420: mem := mem with [R2] <- 7:0[R1]
00000424: call @printf with noreturn

0000072d: sub printf(printf_format, printf_result)
00000762: printf_format :: in u64 = R0
00000763: printf_result :: out u32 = low:32[R0]

00000245:
000005a7: R16 := 0x20000
000005ae: R17 := mem[R16 + 0x20, el]:u64
000005b4: R16 := R16 + 0x20
000005b9: call R17 with noreturn

0000072e: sub register_tm_clones(register_tm_clones_result)
00000764: register_tm_clones_result :: out u32 = low:32[R0]

00000357:
0000035a: R0 := 0x20000
00000360: R0 := R0 + 0x38
00000365: R1 := 0x20000
0000036b: R1 := R1 + 0x38
00000372: R1 := R1 + ~R0 + 1
00000378: R2 := 0.63:63[R1]
0000037f: R1 := R2 + (R1 ~>> 3)
00000385: R1 := extend:64[63:1[R1]]
0000038b: when R1 = 0 goto %00000389
0000074e: goto %00000461

00000461:
00000464: R2 := 0x1F000
0000046b: R2 := mem[R2 + 0xFE0, el]:u64
00000470: when R2 = 0 goto %00000389
0000074f: goto %00000474

00000389:
00000391: call R30 with noreturn

00000474:
00000478: R16 := R2
0000047d: call R16 with noreturn
