var {:extern} Gamma_R0: bool;
var {:extern} Gamma_R1: bool;
var {:extern} Gamma_R16: bool;
var {:extern} Gamma_R17: bool;
var {:extern} Gamma_R29: bool;
var {:extern} Gamma_R30: bool;
var {:extern} Gamma_R31: bool;
var {:extern} Gamma_mem: [bv64]bool;
var {:extern} Gamma_stack: [bv64]bool;
var {:extern} R0: bv64;
var {:extern} R1: bv64;
var {:extern} R16: bv64;
var {:extern} R17: bv64;
var {:extern} R29: bv64;
var {:extern} R30: bv64;
var {:extern} R31: bv64;
var {:extern} mem: [bv64]bv8;
var {:extern} stack: [bv64]bv8;
const {:extern} $_IO_stdin_used_addr: bv64;
axiom ($_IO_stdin_used_addr == 2328bv64);
function {:extern} L(mem$in: [bv64]bv8, index: bv64) returns (bool) {
  false
}

function {:extern} {:bvbuiltin "bvadd"} bvadd32(bv32, bv32) returns (bv32);
function {:extern} {:bvbuiltin "bvadd"} bvadd64(bv64, bv64) returns (bv64);
function {:extern} gamma_load32(gammaMap: [bv64]bool, index: bv64) returns (bool) {
  (gammaMap[bvadd64(index, 3bv64)] && (gammaMap[bvadd64(index, 2bv64)] && (gammaMap[bvadd64(index, 1bv64)] && gammaMap[index])))
}

function {:extern} gamma_load64(gammaMap: [bv64]bool, index: bv64) returns (bool) {
  (gammaMap[bvadd64(index, 7bv64)] && (gammaMap[bvadd64(index, 6bv64)] && (gammaMap[bvadd64(index, 5bv64)] && (gammaMap[bvadd64(index, 4bv64)] && (gammaMap[bvadd64(index, 3bv64)] && (gammaMap[bvadd64(index, 2bv64)] && (gammaMap[bvadd64(index, 1bv64)] && gammaMap[index])))))))
}

function {:extern} gamma_load8(gammaMap: [bv64]bool, index: bv64) returns (bool) {
  gammaMap[index]
}

function {:extern} gamma_store32(gammaMap: [bv64]bool, index: bv64, value: bool) returns ([bv64]bool) {
  gammaMap[index := value][bvadd64(index, 1bv64) := value][bvadd64(index, 2bv64) := value][bvadd64(index, 3bv64) := value]
}

function {:extern} gamma_store64(gammaMap: [bv64]bool, index: bv64, value: bool) returns ([bv64]bool) {
  gammaMap[index := value][bvadd64(index, 1bv64) := value][bvadd64(index, 2bv64) := value][bvadd64(index, 3bv64) := value][bvadd64(index, 4bv64) := value][bvadd64(index, 5bv64) := value][bvadd64(index, 6bv64) := value][bvadd64(index, 7bv64) := value]
}

function {:extern} gamma_store8(gammaMap: [bv64]bool, index: bv64, value: bool) returns ([bv64]bool) {
  gammaMap[index := value]
}

function {:extern} memory_load32_le(memory: [bv64]bv8, index: bv64) returns (bv32) {
  (memory[bvadd64(index, 3bv64)] ++ (memory[bvadd64(index, 2bv64)] ++ (memory[bvadd64(index, 1bv64)] ++ memory[index])))
}

function {:extern} memory_load64_le(memory: [bv64]bv8, index: bv64) returns (bv64) {
  (memory[bvadd64(index, 7bv64)] ++ (memory[bvadd64(index, 6bv64)] ++ (memory[bvadd64(index, 5bv64)] ++ (memory[bvadd64(index, 4bv64)] ++ (memory[bvadd64(index, 3bv64)] ++ (memory[bvadd64(index, 2bv64)] ++ (memory[bvadd64(index, 1bv64)] ++ memory[index])))))))
}

function {:extern} memory_load8_le(memory: [bv64]bv8, index: bv64) returns (bv8) {
  memory[index]
}

function {:extern} memory_store32_le(memory: [bv64]bv8, index: bv64, value: bv32) returns ([bv64]bv8) {
  memory[index := value[8:0]][bvadd64(index, 1bv64) := value[16:8]][bvadd64(index, 2bv64) := value[24:16]][bvadd64(index, 3bv64) := value[32:24]]
}

function {:extern} memory_store64_le(memory: [bv64]bv8, index: bv64, value: bv64) returns ([bv64]bv8) {
  memory[index := value[8:0]][bvadd64(index, 1bv64) := value[16:8]][bvadd64(index, 2bv64) := value[24:16]][bvadd64(index, 3bv64) := value[32:24]][bvadd64(index, 4bv64) := value[40:32]][bvadd64(index, 5bv64) := value[48:40]][bvadd64(index, 6bv64) := value[56:48]][bvadd64(index, 7bv64) := value[64:56]]
}

function {:extern} memory_store8_le(memory: [bv64]bv8, index: bv64, value: bv8) returns ([bv64]bv8) {
  memory[index := value[8:0]]
}

function {:extern} {:bvbuiltin "zero_extend 32"} zero_extend32_32(bv32) returns (bv64);
function {:extern} {:bvbuiltin "zero_extend 56"} zero_extend56_8(bv8) returns (bv64);
procedure {:extern} rely();
  modifies Gamma_mem, mem;
  ensures (Gamma_mem == old(Gamma_mem));
  ensures (mem == old(mem));
  free ensures (memory_load64_le(mem, 2328bv64) == 131073bv64);
  free ensures (memory_load64_le(mem, 2336bv64) == 2338615504306268244bv64);
  free ensures (memory_load64_le(mem, 2344bv64) == 2924860384375657bv64);
  free ensures (memory_load64_le(mem, 2352bv64) == 7017575154564032596bv64);
  free ensures (memory_load64_le(mem, 2360bv64) == 7089063228440191084bv64);
  free ensures (memory_load64_le(mem, 2368bv64) == 2675202446017455468bv64);
  free ensures (memory_load64_le(mem, 2376bv64) == 2660bv64);
  free ensures (memory_load64_le(mem, 2384bv64) == 8241983568019286100bv64);
  free ensures (memory_load64_le(mem, 2392bv64) == 7575166128241079840bv64);
  free ensures (memory_load8_le(mem, 2400bv64) == 115bv8);
  free ensures (memory_load8_le(mem, 2401bv64) == 58bv8);
  free ensures (memory_load8_le(mem, 2402bv64) == 32bv8);
  free ensures (memory_load8_le(mem, 2403bv64) == 37bv8);
  free ensures (memory_load8_le(mem, 2404bv64) == 99bv8);
  free ensures (memory_load8_le(mem, 2405bv64) == 10bv8);
  free ensures (memory_load8_le(mem, 2406bv64) == 0bv8);
  free ensures (memory_load64_le(mem, 68992bv64) == 2064bv64);
  free ensures (memory_load64_le(mem, 69000bv64) == 1984bv64);
  free ensures (memory_load64_le(mem, 69616bv64) == 2068bv64);
  free ensures (memory_load64_le(mem, 69640bv64) == 69640bv64);

procedure {:extern} rely_transitive();
  modifies Gamma_mem, mem;
  ensures (Gamma_mem == old(Gamma_mem));
  ensures (mem == old(mem));

implementation {:extern} rely_transitive()
{
  call rely();
  call rely();
}

procedure {:extern} rely_reflexive();

procedure {:extern} guarantee_reflexive();
  modifies Gamma_mem, mem;

procedure #free_1712();
  modifies Gamma_R16, Gamma_R17, R16, R17;
  free requires (memory_load64_le(mem, 2328bv64) == 131073bv64);
  free requires (memory_load64_le(mem, 2336bv64) == 2338615504306268244bv64);
  free requires (memory_load64_le(mem, 2344bv64) == 2924860384375657bv64);
  free requires (memory_load64_le(mem, 2352bv64) == 7017575154564032596bv64);
  free requires (memory_load64_le(mem, 2360bv64) == 7089063228440191084bv64);
  free requires (memory_load64_le(mem, 2368bv64) == 2675202446017455468bv64);
  free requires (memory_load64_le(mem, 2376bv64) == 2660bv64);
  free requires (memory_load64_le(mem, 2384bv64) == 8241983568019286100bv64);
  free requires (memory_load64_le(mem, 2392bv64) == 7575166128241079840bv64);
  free requires (memory_load8_le(mem, 2400bv64) == 115bv8);
  free requires (memory_load8_le(mem, 2401bv64) == 58bv8);
  free requires (memory_load8_le(mem, 2402bv64) == 32bv8);
  free requires (memory_load8_le(mem, 2403bv64) == 37bv8);
  free requires (memory_load8_le(mem, 2404bv64) == 99bv8);
  free requires (memory_load8_le(mem, 2405bv64) == 10bv8);
  free requires (memory_load8_le(mem, 2406bv64) == 0bv8);
  free requires (memory_load64_le(mem, 68992bv64) == 2064bv64);
  free requires (memory_load64_le(mem, 69000bv64) == 1984bv64);
  free requires (memory_load64_le(mem, 69616bv64) == 2068bv64);
  free requires (memory_load64_le(mem, 69640bv64) == 69640bv64);
  free ensures (memory_load64_le(mem, 2328bv64) == 131073bv64);
  free ensures (memory_load64_le(mem, 2336bv64) == 2338615504306268244bv64);
  free ensures (memory_load64_le(mem, 2344bv64) == 2924860384375657bv64);
  free ensures (memory_load64_le(mem, 2352bv64) == 7017575154564032596bv64);
  free ensures (memory_load64_le(mem, 2360bv64) == 7089063228440191084bv64);
  free ensures (memory_load64_le(mem, 2368bv64) == 2675202446017455468bv64);
  free ensures (memory_load64_le(mem, 2376bv64) == 2660bv64);
  free ensures (memory_load64_le(mem, 2384bv64) == 8241983568019286100bv64);
  free ensures (memory_load64_le(mem, 2392bv64) == 7575166128241079840bv64);
  free ensures (memory_load8_le(mem, 2400bv64) == 115bv8);
  free ensures (memory_load8_le(mem, 2401bv64) == 58bv8);
  free ensures (memory_load8_le(mem, 2402bv64) == 32bv8);
  free ensures (memory_load8_le(mem, 2403bv64) == 37bv8);
  free ensures (memory_load8_le(mem, 2404bv64) == 99bv8);
  free ensures (memory_load8_le(mem, 2405bv64) == 10bv8);
  free ensures (memory_load8_le(mem, 2406bv64) == 0bv8);
  free ensures (memory_load64_le(mem, 68992bv64) == 2064bv64);
  free ensures (memory_load64_le(mem, 69000bv64) == 1984bv64);
  free ensures (memory_load64_le(mem, 69616bv64) == 2068bv64);
  free ensures (memory_load64_le(mem, 69640bv64) == 69640bv64);

procedure main_2068();
  modifies Gamma_R0, Gamma_R1, Gamma_R16, Gamma_R17, Gamma_R29, Gamma_R30, Gamma_R31, Gamma_mem, Gamma_stack, R0, R1, R16, R17, R29, R30, R31, mem, stack;
  free requires (memory_load64_le(mem, 69632bv64) == 0bv64);
  free requires (memory_load64_le(mem, 69640bv64) == 69640bv64);
  free requires (memory_load64_le(mem, 2328bv64) == 131073bv64);
  free requires (memory_load64_le(mem, 2336bv64) == 2338615504306268244bv64);
  free requires (memory_load64_le(mem, 2344bv64) == 2924860384375657bv64);
  free requires (memory_load64_le(mem, 2352bv64) == 7017575154564032596bv64);
  free requires (memory_load64_le(mem, 2360bv64) == 7089063228440191084bv64);
  free requires (memory_load64_le(mem, 2368bv64) == 2675202446017455468bv64);
  free requires (memory_load64_le(mem, 2376bv64) == 2660bv64);
  free requires (memory_load64_le(mem, 2384bv64) == 8241983568019286100bv64);
  free requires (memory_load64_le(mem, 2392bv64) == 7575166128241079840bv64);
  free requires (memory_load8_le(mem, 2400bv64) == 115bv8);
  free requires (memory_load8_le(mem, 2401bv64) == 58bv8);
  free requires (memory_load8_le(mem, 2402bv64) == 32bv8);
  free requires (memory_load8_le(mem, 2403bv64) == 37bv8);
  free requires (memory_load8_le(mem, 2404bv64) == 99bv8);
  free requires (memory_load8_le(mem, 2405bv64) == 10bv8);
  free requires (memory_load8_le(mem, 2406bv64) == 0bv8);
  free requires (memory_load64_le(mem, 68992bv64) == 2064bv64);
  free requires (memory_load64_le(mem, 69000bv64) == 1984bv64);
  free requires (memory_load64_le(mem, 69616bv64) == 2068bv64);
  free requires (memory_load64_le(mem, 69640bv64) == 69640bv64);
  free ensures (Gamma_R29 == old(Gamma_R29));
  free ensures (Gamma_R31 == old(Gamma_R31));
  free ensures (R29 == old(R29));
  free ensures (R31 == old(R31));
  free ensures (memory_load64_le(mem, 2328bv64) == 131073bv64);
  free ensures (memory_load64_le(mem, 2336bv64) == 2338615504306268244bv64);
  free ensures (memory_load64_le(mem, 2344bv64) == 2924860384375657bv64);
  free ensures (memory_load64_le(mem, 2352bv64) == 7017575154564032596bv64);
  free ensures (memory_load64_le(mem, 2360bv64) == 7089063228440191084bv64);
  free ensures (memory_load64_le(mem, 2368bv64) == 2675202446017455468bv64);
  free ensures (memory_load64_le(mem, 2376bv64) == 2660bv64);
  free ensures (memory_load64_le(mem, 2384bv64) == 8241983568019286100bv64);
  free ensures (memory_load64_le(mem, 2392bv64) == 7575166128241079840bv64);
  free ensures (memory_load8_le(mem, 2400bv64) == 115bv8);
  free ensures (memory_load8_le(mem, 2401bv64) == 58bv8);
  free ensures (memory_load8_le(mem, 2402bv64) == 32bv8);
  free ensures (memory_load8_le(mem, 2403bv64) == 37bv8);
  free ensures (memory_load8_le(mem, 2404bv64) == 99bv8);
  free ensures (memory_load8_le(mem, 2405bv64) == 10bv8);
  free ensures (memory_load8_le(mem, 2406bv64) == 0bv8);
  free ensures (memory_load64_le(mem, 68992bv64) == 2064bv64);
  free ensures (memory_load64_le(mem, 69000bv64) == 1984bv64);
  free ensures (memory_load64_le(mem, 69616bv64) == 2068bv64);
  free ensures (memory_load64_le(mem, 69640bv64) == 69640bv64);

implementation main_2068()
{
  var #4: bv64;
  var Gamma_#4: bool;
  var Gamma_load19: bool;
  var Gamma_load20: bool;
  var Gamma_load21: bool;
  var Gamma_load22: bool;
  var Gamma_load23: bool;
  var Gamma_load24: bool;
  var Gamma_load25: bool;
  var Gamma_load26: bool;
  var Gamma_load27: bool;
  var Gamma_load28: bool;
  var load19: bv64;
  var load20: bv64;
  var load21: bv64;
  var load22: bv64;
  var load23: bv32;
  var load24: bv32;
  var load25: bv64;
  var load26: bv64;
  var load27: bv64;
  var load28: bv64;
  lmain:
    assume {:captureState "lmain"} true;
    #4, Gamma_#4 := bvadd64(R31, 18446744073709551552bv64), Gamma_R31;
    stack, Gamma_stack := memory_store64_le(stack, #4, R29), gamma_store64(Gamma_stack, #4, Gamma_R29);
    assume {:captureState "%000003a4"} true;
    stack, Gamma_stack := memory_store64_le(stack, bvadd64(#4, 8bv64), R30), gamma_store64(Gamma_stack, bvadd64(#4, 8bv64), Gamma_R30);
    assume {:captureState "%000003aa"} true;
    R31, Gamma_R31 := #4, Gamma_#4;
    R29, Gamma_R29 := R31, Gamma_R31;
    R0, Gamma_R0 := 1bv64, true;
    R30, Gamma_R30 := 2084bv64, true;
    call malloc_1664();
    goto l000003c3;
  l000003c3:
    assume {:captureState "l000003c3"} true;
    stack, Gamma_stack := memory_store64_le(stack, bvadd64(R31, 40bv64), R0), gamma_store64(Gamma_stack, bvadd64(R31, 40bv64), Gamma_R0);
    assume {:captureState "%000003c9"} true;
    R0, Gamma_R0 := 11bv64, true;
    stack, Gamma_stack := memory_store32_le(stack, bvadd64(R31, 28bv64), R0[32:0]), gamma_store32(Gamma_stack, bvadd64(R31, 28bv64), Gamma_R0);
    assume {:captureState "%000003d6"} true;
    R0, Gamma_R0 := 4bv64, true;
    R30, Gamma_R30 := 2104bv64, true;
    call malloc_1664();
    goto l000003e4;
  l000003e4:
    assume {:captureState "l000003e4"} true;
    stack, Gamma_stack := memory_store64_le(stack, bvadd64(R31, 48bv64), R0), gamma_store64(Gamma_stack, bvadd64(R31, 48bv64), Gamma_R0);
    assume {:captureState "%000003ea"} true;
    R0, Gamma_R0 := 10bv64, true;
    stack, Gamma_stack := memory_store32_le(stack, bvadd64(R31, 32bv64), R0[32:0]), gamma_store32(Gamma_stack, bvadd64(R31, 32bv64), Gamma_R0);
    assume {:captureState "%000003f7"} true;
    R0, Gamma_R0 := 4bv64, true;
    R30, Gamma_R30 := 2124bv64, true;
    call malloc_1664();
    goto l00000405;
  l00000405:
    assume {:captureState "l00000405"} true;
    stack, Gamma_stack := memory_store64_le(stack, bvadd64(R31, 56bv64), R0), gamma_store64(Gamma_stack, bvadd64(R31, 56bv64), Gamma_R0);
    assume {:captureState "%0000040b"} true;
    R0, Gamma_R0 := 9bv64, true;
    stack, Gamma_stack := memory_store32_le(stack, bvadd64(R31, 36bv64), R0[32:0]), gamma_store32(Gamma_stack, bvadd64(R31, 36bv64), Gamma_R0);
    assume {:captureState "%00000418"} true;
    load19, Gamma_load19 := memory_load64_le(stack, bvadd64(R31, 40bv64)), gamma_load64(Gamma_stack, bvadd64(R31, 40bv64));
    R0, Gamma_R0 := load19, Gamma_load19;
    R1, Gamma_R1 := 65bv64, true;
    call rely();
    assert (L(mem, R0) ==> Gamma_R1);
    mem, Gamma_mem := memory_store8_le(mem, R0, R1[8:0]), gamma_store8(Gamma_mem, R0, Gamma_R1);
    assume {:captureState "%0000042c"} true;
    load20, Gamma_load20 := memory_load64_le(stack, bvadd64(R31, 48bv64)), gamma_load64(Gamma_stack, bvadd64(R31, 48bv64));
    R0, Gamma_R0 := load20, Gamma_load20;
    R1, Gamma_R1 := 42bv64, true;
    call rely();
    assert (L(mem, R0) ==> Gamma_R1);
    mem, Gamma_mem := memory_store32_le(mem, R0, R1[32:0]), gamma_store32(Gamma_mem, R0, Gamma_R1);
    assume {:captureState "%00000440"} true;
    load21, Gamma_load21 := memory_load64_le(stack, bvadd64(R31, 40bv64)), gamma_load64(Gamma_stack, bvadd64(R31, 40bv64));
    R0, Gamma_R0 := load21, Gamma_load21;
    R30, Gamma_R30 := 2168bv64, true;
    call printCharValue_2236();
    goto l000004db;
  l000004db:
    assume {:captureState "l000004db"} true;
    load22, Gamma_load22 := memory_load64_le(stack, bvadd64(R31, 48bv64)), gamma_load64(Gamma_stack, bvadd64(R31, 48bv64));
    R0, Gamma_R0 := load22, Gamma_load22;
    call rely();
    load23, Gamma_load23 := memory_load32_le(mem, R0), (gamma_load32(Gamma_mem, R0) || L(mem, R0));
    R0, Gamma_R0 := zero_extend32_32(load23), Gamma_load23;
    R1, Gamma_R1 := zero_extend32_32(R0[32:0]), Gamma_R0;
    R0, Gamma_R0 := 0bv64, true;
    R0, Gamma_R0 := bvadd64(R0, 2336bv64), Gamma_R0;
    R30, Gamma_R30 := 2192bv64, true;
    call printf_1728();
    goto l00000501;
  l00000501:
    assume {:captureState "l00000501"} true;
    load24, Gamma_load24 := memory_load32_le(stack, bvadd64(R31, 32bv64)), gamma_load32(Gamma_stack, bvadd64(R31, 32bv64));
    R1, Gamma_R1 := zero_extend32_32(load24), Gamma_load24;
    R0, Gamma_R0 := 0bv64, true;
    R0, Gamma_R0 := bvadd64(R0, 2352bv64), Gamma_R0;
    R30, Gamma_R30 := 2208bv64, true;
    call printf_1728();
    goto l0000051a;
  l0000051a:
    assume {:captureState "l0000051a"} true;
    load25, Gamma_load25 := memory_load64_le(stack, bvadd64(R31, 40bv64)), gamma_load64(Gamma_stack, bvadd64(R31, 40bv64));
    R0, Gamma_R0 := load25, Gamma_load25;
    R30, Gamma_R30 := 2216bv64, true;
    call #free_1712();
    goto l00000529;
  l00000529:
    assume {:captureState "l00000529"} true;
    load26, Gamma_load26 := memory_load64_le(stack, bvadd64(R31, 48bv64)), gamma_load64(Gamma_stack, bvadd64(R31, 48bv64));
    R0, Gamma_R0 := load26, Gamma_load26;
    R30, Gamma_R30 := 2224bv64, true;
    call #free_1712();
    goto l00000537;
  l00000537:
    assume {:captureState "l00000537"} true;
    R0, Gamma_R0 := 0bv64, true;
    load27, Gamma_load27 := memory_load64_le(stack, R31), gamma_load64(Gamma_stack, R31);
    R29, Gamma_R29 := load27, Gamma_load27;
    load28, Gamma_load28 := memory_load64_le(stack, bvadd64(R31, 8bv64)), gamma_load64(Gamma_stack, bvadd64(R31, 8bv64));
    R30, Gamma_R30 := load28, Gamma_load28;
    R31, Gamma_R31 := bvadd64(R31, 64bv64), Gamma_R31;
    goto main_2068_basil_return;
  main_2068_basil_return:
    assume {:captureState "main_2068_basil_return"} true;
    return;
}

procedure malloc_1664();
  modifies Gamma_R16, Gamma_R17, R16, R17;
  free requires (memory_load64_le(mem, 2328bv64) == 131073bv64);
  free requires (memory_load64_le(mem, 2336bv64) == 2338615504306268244bv64);
  free requires (memory_load64_le(mem, 2344bv64) == 2924860384375657bv64);
  free requires (memory_load64_le(mem, 2352bv64) == 7017575154564032596bv64);
  free requires (memory_load64_le(mem, 2360bv64) == 7089063228440191084bv64);
  free requires (memory_load64_le(mem, 2368bv64) == 2675202446017455468bv64);
  free requires (memory_load64_le(mem, 2376bv64) == 2660bv64);
  free requires (memory_load64_le(mem, 2384bv64) == 8241983568019286100bv64);
  free requires (memory_load64_le(mem, 2392bv64) == 7575166128241079840bv64);
  free requires (memory_load8_le(mem, 2400bv64) == 115bv8);
  free requires (memory_load8_le(mem, 2401bv64) == 58bv8);
  free requires (memory_load8_le(mem, 2402bv64) == 32bv8);
  free requires (memory_load8_le(mem, 2403bv64) == 37bv8);
  free requires (memory_load8_le(mem, 2404bv64) == 99bv8);
  free requires (memory_load8_le(mem, 2405bv64) == 10bv8);
  free requires (memory_load8_le(mem, 2406bv64) == 0bv8);
  free requires (memory_load64_le(mem, 68992bv64) == 2064bv64);
  free requires (memory_load64_le(mem, 69000bv64) == 1984bv64);
  free requires (memory_load64_le(mem, 69616bv64) == 2068bv64);
  free requires (memory_load64_le(mem, 69640bv64) == 69640bv64);
  free ensures (memory_load64_le(mem, 2328bv64) == 131073bv64);
  free ensures (memory_load64_le(mem, 2336bv64) == 2338615504306268244bv64);
  free ensures (memory_load64_le(mem, 2344bv64) == 2924860384375657bv64);
  free ensures (memory_load64_le(mem, 2352bv64) == 7017575154564032596bv64);
  free ensures (memory_load64_le(mem, 2360bv64) == 7089063228440191084bv64);
  free ensures (memory_load64_le(mem, 2368bv64) == 2675202446017455468bv64);
  free ensures (memory_load64_le(mem, 2376bv64) == 2660bv64);
  free ensures (memory_load64_le(mem, 2384bv64) == 8241983568019286100bv64);
  free ensures (memory_load64_le(mem, 2392bv64) == 7575166128241079840bv64);
  free ensures (memory_load8_le(mem, 2400bv64) == 115bv8);
  free ensures (memory_load8_le(mem, 2401bv64) == 58bv8);
  free ensures (memory_load8_le(mem, 2402bv64) == 32bv8);
  free ensures (memory_load8_le(mem, 2403bv64) == 37bv8);
  free ensures (memory_load8_le(mem, 2404bv64) == 99bv8);
  free ensures (memory_load8_le(mem, 2405bv64) == 10bv8);
  free ensures (memory_load8_le(mem, 2406bv64) == 0bv8);
  free ensures (memory_load64_le(mem, 68992bv64) == 2064bv64);
  free ensures (memory_load64_le(mem, 69000bv64) == 1984bv64);
  free ensures (memory_load64_le(mem, 69616bv64) == 2068bv64);
  free ensures (memory_load64_le(mem, 69640bv64) == 69640bv64);

procedure printCharValue_2236();
  modifies Gamma_R0, Gamma_R1, Gamma_R16, Gamma_R17, Gamma_R29, Gamma_R30, Gamma_R31, Gamma_mem, Gamma_stack, R0, R1, R16, R17, R29, R30, R31, mem, stack;
  free requires (memory_load64_le(mem, 2328bv64) == 131073bv64);
  free requires (memory_load64_le(mem, 2336bv64) == 2338615504306268244bv64);
  free requires (memory_load64_le(mem, 2344bv64) == 2924860384375657bv64);
  free requires (memory_load64_le(mem, 2352bv64) == 7017575154564032596bv64);
  free requires (memory_load64_le(mem, 2360bv64) == 7089063228440191084bv64);
  free requires (memory_load64_le(mem, 2368bv64) == 2675202446017455468bv64);
  free requires (memory_load64_le(mem, 2376bv64) == 2660bv64);
  free requires (memory_load64_le(mem, 2384bv64) == 8241983568019286100bv64);
  free requires (memory_load64_le(mem, 2392bv64) == 7575166128241079840bv64);
  free requires (memory_load8_le(mem, 2400bv64) == 115bv8);
  free requires (memory_load8_le(mem, 2401bv64) == 58bv8);
  free requires (memory_load8_le(mem, 2402bv64) == 32bv8);
  free requires (memory_load8_le(mem, 2403bv64) == 37bv8);
  free requires (memory_load8_le(mem, 2404bv64) == 99bv8);
  free requires (memory_load8_le(mem, 2405bv64) == 10bv8);
  free requires (memory_load8_le(mem, 2406bv64) == 0bv8);
  free requires (memory_load64_le(mem, 68992bv64) == 2064bv64);
  free requires (memory_load64_le(mem, 69000bv64) == 1984bv64);
  free requires (memory_load64_le(mem, 69616bv64) == 2068bv64);
  free requires (memory_load64_le(mem, 69640bv64) == 69640bv64);
  free ensures (Gamma_R29 == old(Gamma_R29));
  free ensures (Gamma_R31 == old(Gamma_R31));
  free ensures (R29 == old(R29));
  free ensures (R31 == old(R31));
  free ensures (memory_load64_le(mem, 2328bv64) == 131073bv64);
  free ensures (memory_load64_le(mem, 2336bv64) == 2338615504306268244bv64);
  free ensures (memory_load64_le(mem, 2344bv64) == 2924860384375657bv64);
  free ensures (memory_load64_le(mem, 2352bv64) == 7017575154564032596bv64);
  free ensures (memory_load64_le(mem, 2360bv64) == 7089063228440191084bv64);
  free ensures (memory_load64_le(mem, 2368bv64) == 2675202446017455468bv64);
  free ensures (memory_load64_le(mem, 2376bv64) == 2660bv64);
  free ensures (memory_load64_le(mem, 2384bv64) == 8241983568019286100bv64);
  free ensures (memory_load64_le(mem, 2392bv64) == 7575166128241079840bv64);
  free ensures (memory_load8_le(mem, 2400bv64) == 115bv8);
  free ensures (memory_load8_le(mem, 2401bv64) == 58bv8);
  free ensures (memory_load8_le(mem, 2402bv64) == 32bv8);
  free ensures (memory_load8_le(mem, 2403bv64) == 37bv8);
  free ensures (memory_load8_le(mem, 2404bv64) == 99bv8);
  free ensures (memory_load8_le(mem, 2405bv64) == 10bv8);
  free ensures (memory_load8_le(mem, 2406bv64) == 0bv8);
  free ensures (memory_load64_le(mem, 68992bv64) == 2064bv64);
  free ensures (memory_load64_le(mem, 69000bv64) == 1984bv64);
  free ensures (memory_load64_le(mem, 69616bv64) == 2068bv64);
  free ensures (memory_load64_le(mem, 69640bv64) == 69640bv64);

implementation printCharValue_2236()
{
  var #5: bv64;
  var Gamma_#5: bool;
  var Gamma_load30: bool;
  var Gamma_load31: bool;
  var Gamma_load32: bool;
  var Gamma_load33: bool;
  var Gamma_load34: bool;
  var Gamma_load35: bool;
  var Gamma_load36: bool;
  var load30: bv64;
  var load31: bv8;
  var load32: bv64;
  var load33: bv64;
  var load34: bv8;
  var load35: bv64;
  var load36: bv64;
  lprintCharValue:
    assume {:captureState "lprintCharValue"} true;
    #5, Gamma_#5 := bvadd64(R31, 18446744073709551584bv64), Gamma_R31;
    stack, Gamma_stack := memory_store64_le(stack, #5, R29), gamma_store64(Gamma_stack, #5, Gamma_R29);
    assume {:captureState "%0000045a"} true;
    stack, Gamma_stack := memory_store64_le(stack, bvadd64(#5, 8bv64), R30), gamma_store64(Gamma_stack, bvadd64(#5, 8bv64), Gamma_R30);
    assume {:captureState "%00000460"} true;
    R31, Gamma_R31 := #5, Gamma_#5;
    R29, Gamma_R29 := R31, Gamma_R31;
    stack, Gamma_stack := memory_store64_le(stack, bvadd64(R31, 24bv64), R0), gamma_store64(Gamma_stack, bvadd64(R31, 24bv64), Gamma_R0);
    assume {:captureState "%00000472"} true;
    load30, Gamma_load30 := memory_load64_le(stack, bvadd64(R31, 24bv64)), gamma_load64(Gamma_stack, bvadd64(R31, 24bv64));
    R0, Gamma_R0 := load30, Gamma_load30;
    call rely();
    load31, Gamma_load31 := memory_load8_le(mem, R0), (gamma_load8(Gamma_mem, R0) || L(mem, R0));
    R0, Gamma_R0 := zero_extend56_8(load31), Gamma_load31;
    R0, Gamma_R0 := zero_extend32_32(bvadd32(R0[32:0], 1bv32)), Gamma_R0;
    R1, Gamma_R1 := zero_extend32_32((0bv24 ++ R0[8:0])), Gamma_R0;
    load32, Gamma_load32 := memory_load64_le(stack, bvadd64(R31, 24bv64)), gamma_load64(Gamma_stack, bvadd64(R31, 24bv64));
    R0, Gamma_R0 := load32, Gamma_load32;
    call rely();
    assert (L(mem, R0) ==> Gamma_R1);
    mem, Gamma_mem := memory_store8_le(mem, R0, R1[8:0]), gamma_store8(Gamma_mem, R0, Gamma_R1);
    assume {:captureState "%0000049b"} true;
    load33, Gamma_load33 := memory_load64_le(stack, bvadd64(R31, 24bv64)), gamma_load64(Gamma_stack, bvadd64(R31, 24bv64));
    R0, Gamma_R0 := load33, Gamma_load33;
    call rely();
    load34, Gamma_load34 := memory_load8_le(mem, R0), (gamma_load8(Gamma_mem, R0) || L(mem, R0));
    R0, Gamma_R0 := zero_extend56_8(load34), Gamma_load34;
    R1, Gamma_R1 := zero_extend32_32(R0[32:0]), Gamma_R0;
    R0, Gamma_R0 := 0bv64, true;
    R0, Gamma_R0 := bvadd64(R0, 2384bv64), Gamma_R0;
    R30, Gamma_R30 := 2296bv64, true;
    call printf_1728();
    goto l000004c4;
  l000004c4:
    assume {:captureState "l000004c4"} true;
    load35, Gamma_load35 := memory_load64_le(stack, R31), gamma_load64(Gamma_stack, R31);
    R29, Gamma_R29 := load35, Gamma_load35;
    load36, Gamma_load36 := memory_load64_le(stack, bvadd64(R31, 8bv64)), gamma_load64(Gamma_stack, bvadd64(R31, 8bv64));
    R30, Gamma_R30 := load36, Gamma_load36;
    R31, Gamma_R31 := bvadd64(R31, 32bv64), Gamma_R31;
    goto printCharValue_2236_basil_return;
  printCharValue_2236_basil_return:
    assume {:captureState "printCharValue_2236_basil_return"} true;
    return;
}

procedure printf_1728();
  modifies Gamma_R16, Gamma_R17, R16, R17;
  free requires (memory_load64_le(mem, 2328bv64) == 131073bv64);
  free requires (memory_load64_le(mem, 2336bv64) == 2338615504306268244bv64);
  free requires (memory_load64_le(mem, 2344bv64) == 2924860384375657bv64);
  free requires (memory_load64_le(mem, 2352bv64) == 7017575154564032596bv64);
  free requires (memory_load64_le(mem, 2360bv64) == 7089063228440191084bv64);
  free requires (memory_load64_le(mem, 2368bv64) == 2675202446017455468bv64);
  free requires (memory_load64_le(mem, 2376bv64) == 2660bv64);
  free requires (memory_load64_le(mem, 2384bv64) == 8241983568019286100bv64);
  free requires (memory_load64_le(mem, 2392bv64) == 7575166128241079840bv64);
  free requires (memory_load8_le(mem, 2400bv64) == 115bv8);
  free requires (memory_load8_le(mem, 2401bv64) == 58bv8);
  free requires (memory_load8_le(mem, 2402bv64) == 32bv8);
  free requires (memory_load8_le(mem, 2403bv64) == 37bv8);
  free requires (memory_load8_le(mem, 2404bv64) == 99bv8);
  free requires (memory_load8_le(mem, 2405bv64) == 10bv8);
  free requires (memory_load8_le(mem, 2406bv64) == 0bv8);
  free requires (memory_load64_le(mem, 68992bv64) == 2064bv64);
  free requires (memory_load64_le(mem, 69000bv64) == 1984bv64);
  free requires (memory_load64_le(mem, 69616bv64) == 2068bv64);
  free requires (memory_load64_le(mem, 69640bv64) == 69640bv64);
  free ensures (memory_load64_le(mem, 2328bv64) == 131073bv64);
  free ensures (memory_load64_le(mem, 2336bv64) == 2338615504306268244bv64);
  free ensures (memory_load64_le(mem, 2344bv64) == 2924860384375657bv64);
  free ensures (memory_load64_le(mem, 2352bv64) == 7017575154564032596bv64);
  free ensures (memory_load64_le(mem, 2360bv64) == 7089063228440191084bv64);
  free ensures (memory_load64_le(mem, 2368bv64) == 2675202446017455468bv64);
  free ensures (memory_load64_le(mem, 2376bv64) == 2660bv64);
  free ensures (memory_load64_le(mem, 2384bv64) == 8241983568019286100bv64);
  free ensures (memory_load64_le(mem, 2392bv64) == 7575166128241079840bv64);
  free ensures (memory_load8_le(mem, 2400bv64) == 115bv8);
  free ensures (memory_load8_le(mem, 2401bv64) == 58bv8);
  free ensures (memory_load8_le(mem, 2402bv64) == 32bv8);
  free ensures (memory_load8_le(mem, 2403bv64) == 37bv8);
  free ensures (memory_load8_le(mem, 2404bv64) == 99bv8);
  free ensures (memory_load8_le(mem, 2405bv64) == 10bv8);
  free ensures (memory_load8_le(mem, 2406bv64) == 0bv8);
  free ensures (memory_load64_le(mem, 68992bv64) == 2064bv64);
  free ensures (memory_load64_le(mem, 69000bv64) == 1984bv64);
  free ensures (memory_load64_le(mem, 69616bv64) == 2068bv64);
  free ensures (memory_load64_le(mem, 69640bv64) == 69640bv64);

