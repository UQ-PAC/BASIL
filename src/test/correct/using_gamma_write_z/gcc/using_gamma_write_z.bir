00000595: program
00000563: sub __cxa_finalize(__cxa_finalize_result)
00000596: __cxa_finalize_result :: out u32 = low:32[R0]

0000031b:
00000413: R16 := 0x10000
0000041a: R17 := mem[R16 + 0xFB8, el]:u64
00000420: R16 := R16 + 0xFB8
00000425: call R17 with noreturn

00000564: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
00000597: __do_global_dtors_aux_result :: out u32 = low:32[R0]

00000266:
0000026a: #3 := R31 - 0x20
00000270: mem := mem with [#3, el]:u64 <- R29
00000276: mem := mem with [#3 + 8, el]:u64 <- R30
0000027a: R31 := #3
00000280: R29 := R31
00000288: mem := mem with [R31 + 0x10, el]:u64 <- R19
0000028d: R19 := 0x11000
00000294: R0 := pad:64[mem[R19 + 0x10]]
0000029b: when 31:0[R0] <> 0 goto %00000299
0000058b: goto %000002e4

000002e4:
000002e7: R0 := 0x10000
000002ee: R0 := mem[R0 + 0xFE0, el]:u64
000002f4: when R0 = 0 goto %000002f2
0000058c: goto %0000030b

0000030b:
0000030e: R0 := 0x11000
00000315: R0 := mem[R0 + 8, el]:u64
0000031a: R30 := 0x6F0
0000031d: call @__cxa_finalize with return %000002f2

000002f2:
000002fa: R30 := 0x6F4
000002fc: call @deregister_tm_clones with return %000002fe

000002fe:
00000301: R0 := 1
00000309: mem := mem with [R19 + 0x10] <- 7:0[R0]
0000058d: goto %00000299

00000299:
000002a3: R19 := mem[R31 + 0x10, el]:u64
000002aa: R29 := mem[R31, el]:u64
000002af: R30 := mem[R31 + 8, el]:u64
000002b3: R31 := R31 + 0x20
000002b8: call R30 with noreturn

00000568: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
00000598: __libc_start_main_main :: in u64 = R0
00000599: __libc_start_main_arg2 :: in u32 = low:32[R1]
0000059a: __libc_start_main_arg3 :: in out u64 = R2
0000059b: __libc_start_main_auxv :: in out u64 = R3
0000059c: __libc_start_main_result :: out u32 = low:32[R0]

000001bf:
000003fd: R16 := 0x10000
00000404: R17 := mem[R16 + 0xFB0, el]:u64
0000040a: R16 := R16 + 0xFB0
0000040f: call R17 with noreturn

00000569: sub _fini(_fini_result)
0000059d: _fini_result :: out u32 = low:32[R0]

0000001f:
00000025: #0 := R31 - 0x10
0000002b: mem := mem with [#0, el]:u64 <- R29
00000031: mem := mem with [#0 + 8, el]:u64 <- R30
00000035: R31 := #0
0000003b: R29 := R31
00000042: R29 := mem[R31, el]:u64
00000047: R30 := mem[R31 + 8, el]:u64
0000004b: R31 := R31 + 0x10
00000050: call R30 with noreturn

0000056a: sub _init(_init_result)
0000059e: _init_result :: out u32 = low:32[R0]

000004bf:
000004c5: #5 := R31 - 0x10
000004cb: mem := mem with [#5, el]:u64 <- R29
000004d1: mem := mem with [#5 + 8, el]:u64 <- R30
000004d5: R31 := #5
000004db: R29 := R31
000004e0: R30 := 0x590
000004e2: call @call_weak_fn with return %000004e4

000004e4:
000004e9: R29 := mem[R31, el]:u64
000004ee: R30 := mem[R31 + 8, el]:u64
000004f2: R31 := R31 + 0x10
000004f7: call R30 with noreturn

0000056b: sub _start(_start_result)
0000059f: _start_result :: out u32 = low:32[R0]

00000180:
00000185: R29 := 0
0000018a: R30 := 0
00000190: R5 := R0
00000197: R1 := mem[R31, el]:u64
0000019d: R2 := R31 + 8
000001a3: R6 := R31
000001a8: R0 := 0x10000
000001af: R0 := mem[R0 + 0xFF0, el]:u64
000001b4: R3 := 0
000001b9: R4 := 0
000001be: R30 := 0x630
000001c1: call @__libc_start_main with return %000001c3

000001c3:
000001c6: R30 := 0x634
000001c9: call @abort with return %0000058e

0000058e:
0000058f: call @call_weak_fn with noreturn

0000056e: sub abort()


000001c7:
0000043f: R16 := 0x10000
00000446: R17 := mem[R16 + 0xFC8, el]:u64
0000044c: R16 := R16 + 0xFC8
00000451: call R17 with noreturn

0000056f: sub call_weak_fn(call_weak_fn_result)
000005a0: call_weak_fn_result :: out u32 = low:32[R0]

000001cb:
000001ce: R0 := 0x10000
000001d5: R0 := mem[R0 + 0xFE8, el]:u64
000001db: when R0 = 0 goto %000001d9
00000590: goto %0000035b

000001d9:
000001e1: call R30 with noreturn

0000035b:
0000035e: goto @__gmon_start__

0000035c:
00000429: R16 := 0x10000
00000430: R17 := mem[R16 + 0xFC0, el]:u64
00000436: R16 := R16 + 0xFC0
0000043b: call R17 with noreturn

00000571: sub deregister_tm_clones(deregister_tm_clones_result)
000005a1: deregister_tm_clones_result :: out u32 = low:32[R0]

000001e7:
000001ea: R0 := 0x11000
000001f0: R0 := R0 + 0x10
000001f5: R1 := 0x11000
000001fb: R1 := R1 + 0x10
00000201: #1 := ~R0
00000206: #2 := R1 + ~R0
0000020c: VF := extend:65[#2 + 1] <> extend:65[R1] + extend:65[#1] + 1
00000212: CF := pad:65[#2 + 1] <> pad:65[R1] + pad:65[#1] + 1
00000216: ZF := #2 + 1 = 0
0000021a: NF := 63:63[#2 + 1]
00000220: when ZF goto %0000021e
00000591: goto %0000033d

0000033d:
00000340: R1 := 0x10000
00000347: R1 := mem[R1 + 0xFD8, el]:u64
0000034c: when R1 = 0 goto %0000021e
00000592: goto %00000350

0000021e:
00000226: call R30 with noreturn

00000350:
00000354: R16 := R1
00000359: call R16 with noreturn

00000574: sub frame_dummy(frame_dummy_result)
000005a2: frame_dummy_result :: out u32 = low:32[R0]

000002be:
000002c0: call @register_tm_clones with noreturn

00000575: sub main(main_argc, main_argv, main_result)
000005a3: main_argc :: in u32 = low:32[R0]
000005a4: main_argv :: in out u64 = R1
000005a5: main_result :: out u32 = low:32[R0]

000002c2:
000002c5: R0 := 0x11000
000002cb: R0 := R0 + 0x18
000002d0: R1 := 1
000002d8: mem := mem with [R0, el]:u32 <- 31:0[R1]
000002dd: R0 := 0
000002e2: call R30 with noreturn

00000576: sub register_tm_clones(register_tm_clones_result)
000005a6: register_tm_clones_result :: out u32 = low:32[R0]

00000228:
0000022b: R0 := 0x11000
00000231: R0 := R0 + 0x10
00000236: R1 := 0x11000
0000023c: R1 := R1 + 0x10
00000243: R1 := R1 + ~R0 + 1
00000249: R2 := 0.63:63[R1]
00000250: R1 := R2 + (R1 ~>> 3)
00000256: R1 := extend:64[63:1[R1]]
0000025c: when R1 = 0 goto %0000025a
00000593: goto %0000031f

0000031f:
00000322: R2 := 0x10000
00000329: R2 := mem[R2 + 0xFF8, el]:u64
0000032e: when R2 = 0 goto %0000025a
00000594: goto %00000332

0000025a:
00000262: call R30 with noreturn

00000332:
00000336: R16 := R2
0000033b: call R16 with noreturn
