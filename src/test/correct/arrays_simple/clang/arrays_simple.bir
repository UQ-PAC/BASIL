00000574: program
00000542: sub __cxa_finalize(__cxa_finalize_result)
00000575: __cxa_finalize_result :: out u32 = low:32[R0]

00000348:
00000440: R16 := 0x20000
00000447: R17 := mem[R16 + 8, el]:u64
0000044d: R16 := R16 + 8
00000452: call R17 with noreturn

00000543: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
00000576: __do_global_dtors_aux_result :: out u32 = low:32[R0]

00000277:
0000027b: #3 := R31 - 0x20
00000281: mem := mem with [#3, el]:u64 <- R29
00000287: mem := mem with [#3 + 8, el]:u64 <- R30
0000028b: R31 := #3
00000291: R29 := R31
00000299: mem := mem with [R31 + 0x10, el]:u64 <- R19
0000029e: R19 := 0x20000
000002a5: R0 := pad:64[mem[R19 + 0x30]]
000002ab: when 0:0[R0] goto %000002a9
0000056a: goto %00000311

00000311:
00000314: R0 := 0x1F000
0000031b: R0 := mem[R0 + 0xFC8, el]:u64
00000321: when R0 = 0 goto %0000031f
0000056b: goto %00000338

00000338:
0000033b: R0 := 0x20000
00000342: R0 := mem[R0 + 0x28, el]:u64
00000347: R30 := 0x730
0000034a: call @__cxa_finalize with return %0000031f

0000031f:
00000327: R30 := 0x734
00000329: call @deregister_tm_clones with return %0000032b

0000032b:
0000032e: R0 := 1
00000336: mem := mem with [R19 + 0x30] <- 7:0[R0]
0000056c: goto %000002a9

000002a9:
000002b3: R19 := mem[R31 + 0x10, el]:u64
000002ba: R29 := mem[R31, el]:u64
000002bf: R30 := mem[R31 + 8, el]:u64
000002c3: R31 := R31 + 0x20
000002c8: call R30 with noreturn

00000547: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
00000577: __libc_start_main_main :: in u64 = R0
00000578: __libc_start_main_arg2 :: in u32 = low:32[R1]
00000579: __libc_start_main_arg3 :: in out u64 = R2
0000057a: __libc_start_main_auxv :: in out u64 = R3
0000057b: __libc_start_main_result :: out u32 = low:32[R0]

000001d0:
0000042a: R16 := 0x20000
00000431: R17 := mem[R16, el]:u64
00000437: R16 := R16
0000043c: call R17 with noreturn

00000548: sub _fini(_fini_result)
0000057c: _fini_result :: out u32 = low:32[R0]

00000020:
00000026: #0 := R31 - 0x10
0000002c: mem := mem with [#0, el]:u64 <- R29
00000032: mem := mem with [#0 + 8, el]:u64 <- R30
00000036: R31 := #0
0000003c: R29 := R31
00000043: R29 := mem[R31, el]:u64
00000048: R30 := mem[R31 + 8, el]:u64
0000004c: R31 := R31 + 0x10
00000051: call R30 with noreturn

00000549: sub _init(_init_result)
0000057d: _init_result :: out u32 = low:32[R0]

0000049a:
000004a0: #5 := R31 - 0x10
000004a6: mem := mem with [#5, el]:u64 <- R29
000004ac: mem := mem with [#5 + 8, el]:u64 <- R30
000004b0: R31 := #5
000004b6: R29 := R31
000004bb: R30 := 0x5C8
000004bd: call @call_weak_fn with return %000004bf

000004bf:
000004c4: R29 := mem[R31, el]:u64
000004c9: R30 := mem[R31 + 8, el]:u64
000004cd: R31 := R31 + 0x10
000004d2: call R30 with noreturn

0000054a: sub _start(_start_result)
0000057e: _start_result :: out u32 = low:32[R0]

00000191:
00000196: R29 := 0
0000019b: R30 := 0
000001a1: R5 := R0
000001a8: R1 := mem[R31, el]:u64
000001ae: R2 := R31 + 8
000001b4: R6 := R31
000001b9: R0 := 0x1F000
000001c0: R0 := mem[R0 + 0xFD8, el]:u64
000001c5: R3 := 0
000001ca: R4 := 0
000001cf: R30 := 0x670
000001d2: call @__libc_start_main with return %000001d4

000001d4:
000001d7: R30 := 0x674
000001da: call @abort with return %0000056d

0000056d:
0000056e: call @call_weak_fn with noreturn

0000054d: sub abort()


000001d8:
0000046c: R16 := 0x20000
00000473: R17 := mem[R16 + 0x18, el]:u64
00000479: R16 := R16 + 0x18
0000047e: call R17 with noreturn

0000054e: sub call_weak_fn(call_weak_fn_result)
0000057f: call_weak_fn_result :: out u32 = low:32[R0]

000001dc:
000001df: R0 := 0x1F000
000001e6: R0 := mem[R0 + 0xFD0, el]:u64
000001ec: when R0 = 0 goto %000001ea
0000056f: goto %00000388

000001ea:
000001f2: call R30 with noreturn

00000388:
0000038b: goto @__gmon_start__

00000389:
00000456: R16 := 0x20000
0000045d: R17 := mem[R16 + 0x10, el]:u64
00000463: R16 := R16 + 0x10
00000468: call R17 with noreturn

00000550: sub deregister_tm_clones(deregister_tm_clones_result)
00000580: deregister_tm_clones_result :: out u32 = low:32[R0]

000001f8:
000001fb: R0 := 0x20000
00000201: R0 := R0 + 0x30
00000206: R1 := 0x20000
0000020c: R1 := R1 + 0x30
00000212: #1 := ~R0
00000217: #2 := R1 + ~R0
0000021d: VF := extend:65[#2 + 1] <> extend:65[R1] + extend:65[#1] + 1
00000223: CF := pad:65[#2 + 1] <> pad:65[R1] + pad:65[#1] + 1
00000227: ZF := #2 + 1 = 0
0000022b: NF := 63:63[#2 + 1]
00000231: when ZF goto %0000022f
00000570: goto %0000036a

0000036a:
0000036d: R1 := 0x1F000
00000374: R1 := mem[R1 + 0xFC0, el]:u64
00000379: when R1 = 0 goto %0000022f
00000571: goto %0000037d

0000022f:
00000237: call R30 with noreturn

0000037d:
00000381: R16 := R1
00000386: call R16 with noreturn

00000553: sub frame_dummy(frame_dummy_result)
00000581: frame_dummy_result :: out u32 = low:32[R0]

000002ce:
000002d0: call @register_tm_clones with noreturn

00000554: sub main(main_argc, main_argv, main_result)
00000582: main_argc :: in u32 = low:32[R0]
00000583: main_argv :: in out u64 = R1
00000584: main_result :: out u32 = low:32[R0]

000002d2:
000002d6: R31 := R31 - 0x20
000002db: R8 := 3
000002e3: mem := mem with [R31 + 0x14, el]:u32 <- 31:0[R8]
000002e8: R8 := 7
000002f0: mem := mem with [R31 + 0x1C, el]:u32 <- 31:0[R8]
000002f7: R8 := pad:64[mem[R31 + 0x14, el]:u32]
000002ff: mem := mem with [R31 + 8, el]:u32 <- 31:0[R8]
00000304: R0 := 0
0000030a: R31 := R31 + 0x20
0000030f: call R30 with noreturn

00000555: sub register_tm_clones(register_tm_clones_result)
00000585: register_tm_clones_result :: out u32 = low:32[R0]

00000239:
0000023c: R0 := 0x20000
00000242: R0 := R0 + 0x30
00000247: R1 := 0x20000
0000024d: R1 := R1 + 0x30
00000254: R1 := R1 + ~R0 + 1
0000025a: R2 := 0.63:63[R1]
00000261: R1 := R2 + (R1 ~>> 3)
00000267: R1 := extend:64[63:1[R1]]
0000026d: when R1 = 0 goto %0000026b
00000572: goto %0000034c

0000034c:
0000034f: R2 := 0x1F000
00000356: R2 := mem[R2 + 0xFE0, el]:u64
0000035b: when R2 = 0 goto %0000026b
00000573: goto %0000035f

0000026b:
00000273: call R30 with noreturn

0000035f:
00000363: R16 := R2
00000368: call R16 with noreturn
