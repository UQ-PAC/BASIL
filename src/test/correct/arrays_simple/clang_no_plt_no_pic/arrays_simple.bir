00000b66: program
00000b50: sub __cxa_finalize(__cxa_finalize_result)
00000b67: __cxa_finalize_result :: out u32 = low:32[R0]

00000900:
000009f8: R16 := 0x11000
000009ff: R17 := mem[R16 + 8, el]:u64
00000a05: R16 := R16 + 8
00000a0a: call R17 with noreturn

00000b51: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
00000b68: __do_global_dtors_aux_result :: out u32 = low:32[R0]

0000082e:
00000832: #3 := R31 - 0x20
00000838: mem := mem with [#3, el]:u64 <- R29
0000083e: mem := mem with [#3 + 8, el]:u64 <- R30
00000842: R31 := #3
00000848: R29 := R31
00000850: mem := mem with [R31 + 0x10, el]:u64 <- R19
00000855: R19 := 0x11000
0000085c: R0 := pad:64[mem[R19 + 0x30]]
00000863: when 31:0[R0] <> 0 goto %00000861
00000b52: goto %000008c9

000008c9:
000008cc: R0 := 0x10000
000008d3: R0 := mem[R0 + 0xFC8, el]:u64
000008d9: when R0 = 0 goto %000008d7
00000b53: goto %000008f0

000008f0:
000008f3: R0 := 0x11000
000008fa: R0 := mem[R0 + 0x28, el]:u64
000008ff: R30 := 0x6F0
00000902: call @__cxa_finalize with return %000008d7

000008d7:
000008df: R30 := 0x6F4
000008e1: call @deregister_tm_clones with return %000008e3

000008e3:
000008e6: R0 := 1
000008ee: mem := mem with [R19 + 0x30] <- 7:0[R0]
00000b54: goto %00000861

00000861:
0000086b: R19 := mem[R31 + 0x10, el]:u64
00000872: R29 := mem[R31, el]:u64
00000877: R30 := mem[R31 + 8, el]:u64
0000087b: R31 := R31 + 0x20
00000880: call R30 with noreturn

00000b55: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
00000b69: __libc_start_main_main :: in u64 = R0
00000b6a: __libc_start_main_arg2 :: in u32 = low:32[R1]
00000b6b: __libc_start_main_arg3 :: in out u64 = R2
00000b6c: __libc_start_main_auxv :: in out u64 = R3
00000b6d: __libc_start_main_result :: out u32 = low:32[R0]

00000787:
000009e2: R16 := 0x11000
000009e9: R17 := mem[R16, el]:u64
000009ef: R16 := R16
000009f4: call R17 with noreturn

00000b56: sub _fini(_fini_result)
00000b6e: _fini_result :: out u32 = low:32[R0]

000005d7:
000005dd: #0 := R31 - 0x10
000005e3: mem := mem with [#0, el]:u64 <- R29
000005e9: mem := mem with [#0 + 8, el]:u64 <- R30
000005ed: R31 := #0
000005f3: R29 := R31
000005fa: R29 := mem[R31, el]:u64
000005ff: R30 := mem[R31 + 8, el]:u64
00000603: R31 := R31 + 0x10
00000608: call R30 with noreturn

00000b57: sub _init(_init_result)
00000b6f: _init_result :: out u32 = low:32[R0]

00000aa8:
00000aae: #5 := R31 - 0x10
00000ab4: mem := mem with [#5, el]:u64 <- R29
00000aba: mem := mem with [#5 + 8, el]:u64 <- R30
00000abe: R31 := #5
00000ac4: R29 := R31
00000ac9: R30 := 0x590
00000acb: call @call_weak_fn with return %00000acd

00000acd:
00000ad2: R29 := mem[R31, el]:u64
00000ad7: R30 := mem[R31 + 8, el]:u64
00000adb: R31 := R31 + 0x10
00000ae0: call R30 with noreturn

00000b58: sub _start(_start_result)
00000b70: _start_result :: out u32 = low:32[R0]

00000748:
0000074d: R29 := 0
00000752: R30 := 0
00000758: R5 := R0
0000075f: R1 := mem[R31, el]:u64
00000765: R2 := R31 + 8
0000076b: R6 := R31
00000770: R0 := 0x10000
00000777: R0 := mem[R0 + 0xFD8, el]:u64
0000077c: R3 := 0
00000781: R4 := 0
00000786: R30 := 0x630
00000789: call @__libc_start_main with return %0000078b

0000078b:
0000078e: R30 := 0x634
00000791: call @abort with return %00000b59

00000b59:
00000b5a: call @call_weak_fn with noreturn

00000b5b: sub abort()


0000078f:
00000a24: R16 := 0x11000
00000a2b: R17 := mem[R16 + 0x18, el]:u64
00000a31: R16 := R16 + 0x18
00000a36: call R17 with noreturn

00000b5c: sub call_weak_fn(call_weak_fn_result)
00000b71: call_weak_fn_result :: out u32 = low:32[R0]

00000793:
00000796: R0 := 0x10000
0000079d: R0 := mem[R0 + 0xFD0, el]:u64
000007a3: when R0 = 0 goto %000007a1
00000b5d: goto %00000940

000007a1:
000007a9: call R30 with noreturn

00000940:
00000943: goto @__gmon_start__

00000941:
00000a0e: R16 := 0x11000
00000a15: R17 := mem[R16 + 0x10, el]:u64
00000a1b: R16 := R16 + 0x10
00000a20: call R17 with noreturn

00000b5e: sub deregister_tm_clones(deregister_tm_clones_result)
00000b72: deregister_tm_clones_result :: out u32 = low:32[R0]

000007af:
000007b2: R0 := 0x11000
000007b8: R0 := R0 + 0x30
000007bd: R1 := 0x11000
000007c3: R1 := R1 + 0x30
000007c9: #1 := ~R0
000007ce: #2 := R1 + ~R0
000007d4: VF := extend:65[#2 + 1] <> extend:65[R1] + extend:65[#1] + 1
000007da: CF := pad:65[#2 + 1] <> pad:65[R1] + pad:65[#1] + 1
000007de: ZF := #2 + 1 = 0
000007e2: NF := 63:63[#2 + 1]
000007e8: when ZF goto %000007e6
00000b5f: goto %00000922

00000922:
00000925: R1 := 0x10000
0000092c: R1 := mem[R1 + 0xFC0, el]:u64
00000931: when R1 = 0 goto %000007e6
00000b60: goto %00000935

000007e6:
000007ee: call R30 with noreturn

00000935:
00000939: R16 := R1
0000093e: call R16 with noreturn

00000b61: sub frame_dummy(frame_dummy_result)
00000b73: frame_dummy_result :: out u32 = low:32[R0]

00000886:
00000888: call @register_tm_clones with noreturn

00000b62: sub main(main_argc, main_argv, main_result)
00000b74: main_argc :: in u32 = low:32[R0]
00000b75: main_argv :: in out u64 = R1
00000b76: main_result :: out u32 = low:32[R0]

0000088a:
0000088e: R31 := R31 - 0x20
00000893: R8 := 3
0000089b: mem := mem with [R31 + 0x14, el]:u32 <- 31:0[R8]
000008a0: R8 := 7
000008a8: mem := mem with [R31 + 0x1C, el]:u32 <- 31:0[R8]
000008af: R8 := pad:64[mem[R31 + 0x14, el]:u32]
000008b7: mem := mem with [R31 + 8, el]:u32 <- 31:0[R8]
000008bc: R0 := 0
000008c2: R31 := R31 + 0x20
000008c7: call R30 with noreturn

00000b63: sub register_tm_clones(register_tm_clones_result)
00000b77: register_tm_clones_result :: out u32 = low:32[R0]

000007f0:
000007f3: R0 := 0x11000
000007f9: R0 := R0 + 0x30
000007fe: R1 := 0x11000
00000804: R1 := R1 + 0x30
0000080b: R1 := R1 + ~R0 + 1
00000811: R2 := 0.63:63[R1]
00000818: R1 := R2 + (R1 ~>> 3)
0000081e: R1 := extend:64[63:1[R1]]
00000824: when R1 = 0 goto %00000822
00000b64: goto %00000904

00000904:
00000907: R2 := 0x10000
0000090e: R2 := mem[R2 + 0xFE0, el]:u64
00000913: when R2 = 0 goto %00000822
00000b65: goto %00000917

00000822:
0000082a: call R30 with noreturn

00000917:
0000091b: R16 := R2
00000920: call R16 with noreturn
