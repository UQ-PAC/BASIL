000005c7: program
00000593: sub __cxa_finalize(__cxa_finalize_result)
000005c8: __cxa_finalize_result :: out u32 = low:32[R0]

00000394:
0000048c: R16 := 0x20000
00000493: R17 := mem[R16 + 8, el]:u64
00000499: R16 := R16 + 8
0000049e: call R17 with noreturn

00000594: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
000005c9: __do_global_dtors_aux_result :: out u32 = low:32[R0]

0000028b:
0000028f: #3 := R31 - 0x20
00000295: mem := mem with [#3, el]:u64 <- R29
0000029b: mem := mem with [#3 + 8, el]:u64 <- R30
0000029f: R31 := #3
000002a5: R29 := R31
000002ad: mem := mem with [R31 + 0x10, el]:u64 <- R19
000002b2: R19 := 0x20000
000002b9: R0 := pad:64[mem[R19 + 0x30]]
000002bf: when 0:0[R0] goto %000002bd
000005bc: goto %0000035d

0000035d:
00000360: R0 := 0x1F000
00000367: R0 := mem[R0 + 0xFC8, el]:u64
0000036d: when R0 = 0 goto %0000036b
000005bd: goto %00000384

00000384:
00000387: R0 := 0x20000
0000038e: R0 := mem[R0 + 0x28, el]:u64
00000393: R30 := 0x730
00000396: call @__cxa_finalize with return %0000036b

0000036b:
00000373: R30 := 0x734
00000375: call @deregister_tm_clones with return %00000377

00000377:
0000037a: R0 := 1
00000382: mem := mem with [R19 + 0x30] <- 7:0[R0]
000005be: goto %000002bd

000002bd:
000002c7: R19 := mem[R31 + 0x10, el]:u64
000002ce: R29 := mem[R31, el]:u64
000002d3: R30 := mem[R31 + 8, el]:u64
000002d7: R31 := R31 + 0x20
000002dc: call R30 with noreturn

00000598: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
000005ca: __libc_start_main_main :: in u64 = R0
000005cb: __libc_start_main_arg2 :: in u32 = low:32[R1]
000005cc: __libc_start_main_arg3 :: in out u64 = R2
000005cd: __libc_start_main_auxv :: in out u64 = R3
000005ce: __libc_start_main_result :: out u32 = low:32[R0]

000001e4:
00000476: R16 := 0x20000
0000047d: R17 := mem[R16, el]:u64
00000483: R16 := R16
00000488: call R17 with noreturn

00000599: sub _fini(_fini_result)
000005cf: _fini_result :: out u32 = low:32[R0]

00000020:
00000026: #0 := R31 - 0x10
0000002c: mem := mem with [#0, el]:u64 <- R29
00000032: mem := mem with [#0 + 8, el]:u64 <- R30
00000036: R31 := #0
0000003c: R29 := R31
00000043: R29 := mem[R31, el]:u64
00000048: R30 := mem[R31 + 8, el]:u64
0000004c: R31 := R31 + 0x10
00000051: call R30 with noreturn

0000059a: sub _init(_init_result)
000005d0: _init_result :: out u32 = low:32[R0]

000004e6:
000004ec: #6 := R31 - 0x10
000004f2: mem := mem with [#6, el]:u64 <- R29
000004f8: mem := mem with [#6 + 8, el]:u64 <- R30
000004fc: R31 := #6
00000502: R29 := R31
00000507: R30 := 0x5C8
00000509: call @call_weak_fn with return %0000050b

0000050b:
00000510: R29 := mem[R31, el]:u64
00000515: R30 := mem[R31 + 8, el]:u64
00000519: R31 := R31 + 0x10
0000051e: call R30 with noreturn

0000059b: sub _start(_start_result)
000005d1: _start_result :: out u32 = low:32[R0]

000001a5:
000001aa: R29 := 0
000001af: R30 := 0
000001b5: R5 := R0
000001bc: R1 := mem[R31, el]:u64
000001c2: R2 := R31 + 8
000001c8: R6 := R31
000001cd: R0 := 0x1F000
000001d4: R0 := mem[R0 + 0xFD8, el]:u64
000001d9: R3 := 0
000001de: R4 := 0
000001e3: R30 := 0x670
000001e6: call @__libc_start_main with return %000001e8

000001e8:
000001eb: R30 := 0x674
000001ee: call @abort with return %000005bf

000005bf:
000005c0: call @call_weak_fn with noreturn

0000059e: sub abort()


000001ec:
000004b8: R16 := 0x20000
000004bf: R17 := mem[R16 + 0x18, el]:u64
000004c5: R16 := R16 + 0x18
000004ca: call R17 with noreturn

0000059f: sub call_weak_fn(call_weak_fn_result)
000005d2: call_weak_fn_result :: out u32 = low:32[R0]

000001f0:
000001f3: R0 := 0x1F000
000001fa: R0 := mem[R0 + 0xFD0, el]:u64
00000200: when R0 = 0 goto %000001fe
000005c1: goto %000003d4

000001fe:
00000206: call R30 with noreturn

000003d4:
000003d7: goto @__gmon_start__

000003d5:
000004a2: R16 := 0x20000
000004a9: R17 := mem[R16 + 0x10, el]:u64
000004af: R16 := R16 + 0x10
000004b4: call R17 with noreturn

000005a1: sub deregister_tm_clones(deregister_tm_clones_result)
000005d3: deregister_tm_clones_result :: out u32 = low:32[R0]

0000020c:
0000020f: R0 := 0x20000
00000215: R0 := R0 + 0x30
0000021a: R1 := 0x20000
00000220: R1 := R1 + 0x30
00000226: #1 := ~R0
0000022b: #2 := R1 + ~R0
00000231: VF := extend:65[#2 + 1] <> extend:65[R1] + extend:65[#1] + 1
00000237: CF := pad:65[#2 + 1] <> pad:65[R1] + pad:65[#1] + 1
0000023b: ZF := #2 + 1 = 0
0000023f: NF := 63:63[#2 + 1]
00000245: when ZF goto %00000243
000005c2: goto %000003b6

000003b6:
000003b9: R1 := 0x1F000
000003c0: R1 := mem[R1 + 0xFC0, el]:u64
000003c5: when R1 = 0 goto %00000243
000005c3: goto %000003c9

00000243:
0000024b: call R30 with noreturn

000003c9:
000003cd: R16 := R1
000003d2: call R16 with noreturn

000005a4: sub frame_dummy(frame_dummy_result)
000005d4: frame_dummy_result :: out u32 = low:32[R0]

000002e2:
000002e4: call @register_tm_clones with noreturn

000005a5: sub main(main_argc, main_argv, main_result)
000005d5: main_argc :: in u32 = low:32[R0]
000005d6: main_argv :: in out u64 = R1
000005d7: main_result :: out u32 = low:32[R0]

000002e6:
000002ea: R31 := R31 - 0x10
000002f1: mem := mem with [R31 + 0xC, el]:u32 <- 0
000002f6: R8 := 0x20000
000002fd: R8 := pad:64[mem[R8 + 0x34, el]:u32]
00000303: #4 := 31:0[R8] - 1
00000308: VF := extend:33[#4 + 1] <> extend:33[31:0[R8]] + 0
0000030d: CF := pad:33[#4 + 1] <> pad:33[31:0[R8]] - 0x100000000
00000311: ZF := #4 + 1 = 0
00000315: NF := 31:31[#4 + 1]
00000319: R8 := pad:64[#4 + 1]
00000325: when ZF goto %0000031e
00000326: goto %00000321

00000321:
00000322: R8 := 1
00000328: goto %00000324

0000031e:
0000031f: R8 := 0
00000327: goto %00000324

00000324:
0000032e: when 0:0[R8] goto %0000032c
000005c4: goto %00000343

00000343:
00000346: goto %00000344

00000344:
0000034a: R8 := 1
0000034f: R9 := 0x20000
00000357: mem := mem with [R9 + 0x34, el]:u32 <- 31:0[R8]
0000035b: goto %0000032c

0000032c:
00000336: R0 := pad:64[mem[R31 + 0xC, el]:u32]
0000033c: R31 := R31 + 0x10
00000341: call R30 with noreturn

000005a7: sub register_tm_clones(register_tm_clones_result)
000005d8: register_tm_clones_result :: out u32 = low:32[R0]

0000024d:
00000250: R0 := 0x20000
00000256: R0 := R0 + 0x30
0000025b: R1 := 0x20000
00000261: R1 := R1 + 0x30
00000268: R1 := R1 + ~R0 + 1
0000026e: R2 := 0.63:63[R1]
00000275: R1 := R2 + (R1 ~>> 3)
0000027b: R1 := extend:64[63:1[R1]]
00000281: when R1 = 0 goto %0000027f
000005c5: goto %00000398

00000398:
0000039b: R2 := 0x1F000
000003a2: R2 := mem[R2 + 0xFE0, el]:u64
000003a7: when R2 = 0 goto %0000027f
000005c6: goto %000003ab

0000027f:
00000287: call R30 with noreturn

000003ab:
000003af: R16 := R2
000003b4: call R16 with noreturn
