000005ca: program
00000596: sub __cxa_finalize(__cxa_finalize_result)
000005cb: __cxa_finalize_result :: out u32 = low:32[R0]

00000397:
0000048f: R16 := 0x20000
00000496: R17 := mem[R16 + 8, el]:u64
0000049c: R16 := R16 + 8
000004a1: call R17 with noreturn

00000597: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
000005cc: __do_global_dtors_aux_result :: out u32 = low:32[R0]

0000028b:
0000028f: #3 := R31 - 0x20
00000295: mem := mem with [#3, el]:u64 <- R29
0000029b: mem := mem with [#3 + 8, el]:u64 <- R30
0000029f: R31 := #3
000002a5: R29 := R31
000002ad: mem := mem with [R31 + 0x10, el]:u64 <- R19
000002b2: R19 := 0x20000
000002b9: R0 := pad:64[mem[R19 + 0x30]]
000002bf: when 0:0[R0] goto %000002bd
000005bf: goto %00000360

00000360:
00000363: R0 := 0x1F000
0000036a: R0 := mem[R0 + 0xFC8, el]:u64
00000370: when R0 = 0 goto %0000036e
000005c0: goto %00000387

00000387:
0000038a: R0 := 0x20000
00000391: R0 := mem[R0 + 0x28, el]:u64
00000396: R30 := 0x730
00000399: call @__cxa_finalize with return %0000036e

0000036e:
00000376: R30 := 0x734
00000378: call @deregister_tm_clones with return %0000037a

0000037a:
0000037d: R0 := 1
00000385: mem := mem with [R19 + 0x30] <- 7:0[R0]
000005c1: goto %000002bd

000002bd:
000002c7: R19 := mem[R31 + 0x10, el]:u64
000002ce: R29 := mem[R31, el]:u64
000002d3: R30 := mem[R31 + 8, el]:u64
000002d7: R31 := R31 + 0x20
000002dc: call R30 with noreturn

0000059b: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
000005cd: __libc_start_main_main :: in u64 = R0
000005ce: __libc_start_main_arg2 :: in u32 = low:32[R1]
000005cf: __libc_start_main_arg3 :: in out u64 = R2
000005d0: __libc_start_main_auxv :: in out u64 = R3
000005d1: __libc_start_main_result :: out u32 = low:32[R0]

000001e4:
00000479: R16 := 0x20000
00000480: R17 := mem[R16, el]:u64
00000486: R16 := R16
0000048b: call R17 with noreturn

0000059c: sub _fini(_fini_result)
000005d2: _fini_result :: out u32 = low:32[R0]

00000020:
00000026: #0 := R31 - 0x10
0000002c: mem := mem with [#0, el]:u64 <- R29
00000032: mem := mem with [#0 + 8, el]:u64 <- R30
00000036: R31 := #0
0000003c: R29 := R31
00000043: R29 := mem[R31, el]:u64
00000048: R30 := mem[R31 + 8, el]:u64
0000004c: R31 := R31 + 0x10
00000051: call R30 with noreturn

0000059d: sub _init(_init_result)
000005d3: _init_result :: out u32 = low:32[R0]

000004e9:
000004ef: #6 := R31 - 0x10
000004f5: mem := mem with [#6, el]:u64 <- R29
000004fb: mem := mem with [#6 + 8, el]:u64 <- R30
000004ff: R31 := #6
00000505: R29 := R31
0000050a: R30 := 0x5C8
0000050c: call @call_weak_fn with return %0000050e

0000050e:
00000513: R29 := mem[R31, el]:u64
00000518: R30 := mem[R31 + 8, el]:u64
0000051c: R31 := R31 + 0x10
00000521: call R30 with noreturn

0000059e: sub _start(_start_result)
000005d4: _start_result :: out u32 = low:32[R0]

000001a5:
000001aa: R29 := 0
000001af: R30 := 0
000001b5: R5 := R0
000001bc: R1 := mem[R31, el]:u64
000001c2: R2 := R31 + 8
000001c8: R6 := R31
000001cd: R0 := 0x1F000
000001d4: R0 := mem[R0 + 0xFD8, el]:u64
000001d9: R3 := 0
000001de: R4 := 0
000001e3: R30 := 0x670
000001e6: call @__libc_start_main with return %000001e8

000001e8:
000001eb: R30 := 0x674
000001ee: call @abort with return %000005c2

000005c2:
000005c3: call @call_weak_fn with noreturn

000005a1: sub abort()


000001ec:
000004bb: R16 := 0x20000
000004c2: R17 := mem[R16 + 0x18, el]:u64
000004c8: R16 := R16 + 0x18
000004cd: call R17 with noreturn

000005a2: sub call_weak_fn(call_weak_fn_result)
000005d5: call_weak_fn_result :: out u32 = low:32[R0]

000001f0:
000001f3: R0 := 0x1F000
000001fa: R0 := mem[R0 + 0xFD0, el]:u64
00000200: when R0 = 0 goto %000001fe
000005c4: goto %000003d7

000001fe:
00000206: call R30 with noreturn

000003d7:
000003da: goto @__gmon_start__

000003d8:
000004a5: R16 := 0x20000
000004ac: R17 := mem[R16 + 0x10, el]:u64
000004b2: R16 := R16 + 0x10
000004b7: call R17 with noreturn

000005a4: sub deregister_tm_clones(deregister_tm_clones_result)
000005d6: deregister_tm_clones_result :: out u32 = low:32[R0]

0000020c:
0000020f: R0 := 0x20000
00000215: R0 := R0 + 0x30
0000021a: R1 := 0x20000
00000220: R1 := R1 + 0x30
00000226: #1 := ~R0
0000022b: #2 := R1 + ~R0
00000231: VF := extend:65[#2 + 1] <> extend:65[R1] + extend:65[#1] + 1
00000237: CF := pad:65[#2 + 1] <> pad:65[R1] + pad:65[#1] + 1
0000023b: ZF := #2 + 1 = 0
0000023f: NF := 63:63[#2 + 1]
00000245: when ZF goto %00000243
000005c5: goto %000003b9

000003b9:
000003bc: R1 := 0x1F000
000003c3: R1 := mem[R1 + 0xFC0, el]:u64
000003c8: when R1 = 0 goto %00000243
000005c6: goto %000003cc

00000243:
0000024b: call R30 with noreturn

000003cc:
000003d0: R16 := R1
000003d5: call R16 with noreturn

000005a7: sub frame_dummy(frame_dummy_result)
000005d7: frame_dummy_result :: out u32 = low:32[R0]

000002e2:
000002e4: call @register_tm_clones with noreturn

000005a8: sub main(main_argc, main_argv, main_result)
000005d8: main_argc :: in u32 = low:32[R0]
000005d9: main_argv :: in out u64 = R1
000005da: main_result :: out u32 = low:32[R0]

000002e6:
000002ea: R31 := R31 - 0x10
000002f1: mem := mem with [R31 + 0xC, el]:u32 <- 0
000002f6: R8 := 5
000002fe: mem := mem with [R31 + 8, el]:u32 <- 31:0[R8]
00000305: R8 := pad:64[mem[R31 + 8, el]:u32]
0000030b: #4 := 31:0[R8] - 6
00000310: VF := extend:33[#4 + 1] <> extend:33[31:0[R8]] - 5
00000315: CF := pad:33[#4 + 1] <> pad:33[31:0[R8]] + 0xFFFFFFFB
00000319: ZF := #4 + 1 = 0
0000031d: NF := 31:31[#4 + 1]
00000321: R8 := pad:64[#4 + 1]
0000032d: when ZF goto %00000326
0000032e: goto %00000329

00000329:
0000032a: R8 := 1
00000330: goto %0000032c

00000326:
00000327: R8 := 0
0000032f: goto %0000032c

0000032c:
00000336: when 0:0[R8] goto %00000334
000005c7: goto %0000034b

0000034b:
0000034e: goto %0000034c

0000034c:
00000352: R8 := 6
0000035a: mem := mem with [R31 + 8, el]:u32 <- 31:0[R8]
0000035e: goto %00000334

00000334:
0000033e: R0 := pad:64[mem[R31 + 0xC, el]:u32]
00000344: R31 := R31 + 0x10
00000349: call R30 with noreturn

000005aa: sub register_tm_clones(register_tm_clones_result)
000005db: register_tm_clones_result :: out u32 = low:32[R0]

0000024d:
00000250: R0 := 0x20000
00000256: R0 := R0 + 0x30
0000025b: R1 := 0x20000
00000261: R1 := R1 + 0x30
00000268: R1 := R1 + ~R0 + 1
0000026e: R2 := 0.63:63[R1]
00000275: R1 := R2 + (R1 ~>> 3)
0000027b: R1 := extend:64[63:1[R1]]
00000281: when R1 = 0 goto %0000027f
000005c8: goto %0000039b

0000039b:
0000039e: R2 := 0x1F000
000003a5: R2 := mem[R2 + 0xFE0, el]:u64
000003aa: when R2 = 0 goto %0000027f
000005c9: goto %000003ae

0000027f:
00000287: call R30 with noreturn

000003ae:
000003b2: R16 := R2
000003b7: call R16 with noreturn
