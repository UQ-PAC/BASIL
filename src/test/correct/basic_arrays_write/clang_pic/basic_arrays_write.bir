00000550: program
0000051e: sub __cxa_finalize(__cxa_finalize_result)
00000551: __cxa_finalize_result :: out u32 = low:32[R0]

0000033e:
00000436: R16 := 0x20000
0000043d: R17 := mem[R16 + 8, el]:u64
00000443: R16 := R16 + 8
00000448: call R17 with noreturn

0000051f: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
00000552: __do_global_dtors_aux_result :: out u32 = low:32[R0]

00000273:
00000277: #3 := R31 - 0x20
0000027d: mem := mem with [#3, el]:u64 <- R29
00000283: mem := mem with [#3 + 8, el]:u64 <- R30
00000287: R31 := #3
0000028d: R29 := R31
00000295: mem := mem with [R31 + 0x10, el]:u64 <- R19
0000029a: R19 := 0x20000
000002a1: R0 := pad:64[mem[R19 + 0x30]]
000002a7: when 0:0[R0] goto %000002a5
00000546: goto %00000307

00000307:
0000030a: R0 := 0x1F000
00000311: R0 := mem[R0 + 0xFC0, el]:u64
00000317: when R0 = 0 goto %00000315
00000547: goto %0000032e

0000032e:
00000331: R0 := 0x20000
00000338: R0 := mem[R0 + 0x28, el]:u64
0000033d: R30 := 0x770
00000340: call @__cxa_finalize with return %00000315

00000315:
0000031d: R30 := 0x774
0000031f: call @deregister_tm_clones with return %00000321

00000321:
00000324: R0 := 1
0000032c: mem := mem with [R19 + 0x30] <- 7:0[R0]
00000548: goto %000002a5

000002a5:
000002af: R19 := mem[R31 + 0x10, el]:u64
000002b6: R29 := mem[R31, el]:u64
000002bb: R30 := mem[R31 + 8, el]:u64
000002bf: R31 := R31 + 0x20
000002c4: call R30 with noreturn

00000523: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
00000553: __libc_start_main_main :: in u64 = R0
00000554: __libc_start_main_arg2 :: in u32 = low:32[R1]
00000555: __libc_start_main_arg3 :: in out u64 = R2
00000556: __libc_start_main_auxv :: in out u64 = R3
00000557: __libc_start_main_result :: out u32 = low:32[R0]

000001cc:
00000420: R16 := 0x20000
00000427: R17 := mem[R16, el]:u64
0000042d: R16 := R16
00000432: call R17 with noreturn

00000524: sub _fini(_fini_result)
00000558: _fini_result :: out u32 = low:32[R0]

00000020:
00000026: #0 := R31 - 0x10
0000002c: mem := mem with [#0, el]:u64 <- R29
00000032: mem := mem with [#0 + 8, el]:u64 <- R30
00000036: R31 := #0
0000003c: R29 := R31
00000043: R29 := mem[R31, el]:u64
00000048: R30 := mem[R31 + 8, el]:u64
0000004c: R31 := R31 + 0x10
00000051: call R30 with noreturn

00000525: sub _init(_init_result)
00000559: _init_result :: out u32 = low:32[R0]

00000490:
00000496: #5 := R31 - 0x10
0000049c: mem := mem with [#5, el]:u64 <- R29
000004a2: mem := mem with [#5 + 8, el]:u64 <- R30
000004a6: R31 := #5
000004ac: R29 := R31
000004b1: R30 := 0x5E0
000004b3: call @call_weak_fn with return %000004b5

000004b5:
000004ba: R29 := mem[R31, el]:u64
000004bf: R30 := mem[R31 + 8, el]:u64
000004c3: R31 := R31 + 0x10
000004c8: call R30 with noreturn

00000526: sub _start(_start_result)
0000055a: _start_result :: out u32 = low:32[R0]

0000018d:
00000192: R29 := 0
00000197: R30 := 0
0000019d: R5 := R0
000001a4: R1 := mem[R31, el]:u64
000001aa: R2 := R31 + 8
000001b0: R6 := R31
000001b5: R0 := 0x1F000
000001bc: R0 := mem[R0 + 0xFD0, el]:u64
000001c1: R3 := 0
000001c6: R4 := 0
000001cb: R30 := 0x6B0
000001ce: call @__libc_start_main with return %000001d0

000001d0:
000001d3: R30 := 0x6B4
000001d6: call @abort with return %00000549

00000549:
0000054a: call @call_weak_fn with noreturn

00000529: sub abort()


000001d4:
00000462: R16 := 0x20000
00000469: R17 := mem[R16 + 0x18, el]:u64
0000046f: R16 := R16 + 0x18
00000474: call R17 with noreturn

0000052a: sub call_weak_fn(call_weak_fn_result)
0000055b: call_weak_fn_result :: out u32 = low:32[R0]

000001d8:
000001db: R0 := 0x1F000
000001e2: R0 := mem[R0 + 0xFC8, el]:u64
000001e8: when R0 = 0 goto %000001e6
0000054b: goto %0000037e

000001e6:
000001ee: call R30 with noreturn

0000037e:
00000381: goto @__gmon_start__

0000037f:
0000044c: R16 := 0x20000
00000453: R17 := mem[R16 + 0x10, el]:u64
00000459: R16 := R16 + 0x10
0000045e: call R17 with noreturn

0000052c: sub deregister_tm_clones(deregister_tm_clones_result)
0000055c: deregister_tm_clones_result :: out u32 = low:32[R0]

000001f4:
000001f7: R0 := 0x20000
000001fd: R0 := R0 + 0x30
00000202: R1 := 0x20000
00000208: R1 := R1 + 0x30
0000020e: #1 := ~R0
00000213: #2 := R1 + ~R0
00000219: VF := extend:65[#2 + 1] <> extend:65[R1] + extend:65[#1] + 1
0000021f: CF := pad:65[#2 + 1] <> pad:65[R1] + pad:65[#1] + 1
00000223: ZF := #2 + 1 = 0
00000227: NF := 63:63[#2 + 1]
0000022d: when ZF goto %0000022b
0000054c: goto %00000360

00000360:
00000363: R1 := 0x1F000
0000036a: R1 := mem[R1 + 0xFB8, el]:u64
0000036f: when R1 = 0 goto %0000022b
0000054d: goto %00000373

0000022b:
00000233: call R30 with noreturn

00000373:
00000377: R16 := R1
0000037c: call R16 with noreturn

0000052f: sub frame_dummy(frame_dummy_result)
0000055d: frame_dummy_result :: out u32 = low:32[R0]

000002ca:
000002cc: call @register_tm_clones with noreturn

00000530: sub main(main_argc, main_argv, main_result)
0000055e: main_argc :: in u32 = low:32[R0]
0000055f: main_argv :: in out u64 = R1
00000560: main_result :: out u32 = low:32[R0]

000002ce:
000002d2: R31 := R31 - 0x10
000002d7: R9 := 0x1F000
000002de: R9 := mem[R9 + 0xFD8, el]:u64
000002e6: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R0]
000002ed: R8 := pad:64[mem[R31 + 0xC, el]:u32]
000002f5: mem := mem with [R9 + 4, el]:u32 <- 31:0[R8]
000002fa: R0 := 0
00000300: R31 := R31 + 0x10
00000305: call R30 with noreturn

00000531: sub register_tm_clones(register_tm_clones_result)
00000561: register_tm_clones_result :: out u32 = low:32[R0]

00000235:
00000238: R0 := 0x20000
0000023e: R0 := R0 + 0x30
00000243: R1 := 0x20000
00000249: R1 := R1 + 0x30
00000250: R1 := R1 + ~R0 + 1
00000256: R2 := 0.63:63[R1]
0000025d: R1 := R2 + (R1 ~>> 3)
00000263: R1 := extend:64[63:1[R1]]
00000269: when R1 = 0 goto %00000267
0000054e: goto %00000342

00000342:
00000345: R2 := 0x1F000
0000034c: R2 := mem[R2 + 0xFE0, el]:u64
00000351: when R2 = 0 goto %00000267
0000054f: goto %00000355

00000267:
0000026f: call R30 with noreturn

00000355:
00000359: R16 := R2
0000035e: call R16 with noreturn
