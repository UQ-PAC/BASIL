0000056f: program
0000053b: sub __cxa_finalize(__cxa_finalize_result)
00000570: __cxa_finalize_result :: out u32 = low:32[R0]

00000341:
00000439: R16 := 0x20000
00000440: R17 := mem[R16 + 8, el]:u64
00000446: R16 := R16 + 8
0000044b: call R17 with noreturn

0000053c: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
00000571: __do_global_dtors_aux_result :: out u32 = low:32[R0]

00000277:
0000027b: #3 := R31 - 0x20
00000281: mem := mem with [#3, el]:u64 <- R29
00000287: mem := mem with [#3 + 8, el]:u64 <- R30
0000028b: R31 := #3
00000291: R29 := R31
00000299: mem := mem with [R31 + 0x10, el]:u64 <- R19
0000029e: R19 := 0x20000
000002a5: R0 := pad:64[mem[R19 + 0x30]]
000002ab: when 0:0[R0] goto %000002a9
00000565: goto %0000030a

0000030a:
0000030d: R0 := 0x1F000
00000314: R0 := mem[R0 + 0xFC8, el]:u64
0000031a: when R0 = 0 goto %00000318
00000566: goto %00000331

00000331:
00000334: R0 := 0x20000
0000033b: R0 := mem[R0 + 0x28, el]:u64
00000340: R30 := 0x730
00000343: call @__cxa_finalize with return %00000318

00000318:
00000320: R30 := 0x734
00000322: call @deregister_tm_clones with return %00000324

00000324:
00000327: R0 := 1
0000032f: mem := mem with [R19 + 0x30] <- 7:0[R0]
00000567: goto %000002a9

000002a9:
000002b3: R19 := mem[R31 + 0x10, el]:u64
000002ba: R29 := mem[R31, el]:u64
000002bf: R30 := mem[R31 + 8, el]:u64
000002c3: R31 := R31 + 0x20
000002c8: call R30 with noreturn

00000540: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
00000572: __libc_start_main_main :: in u64 = R0
00000573: __libc_start_main_arg2 :: in u32 = low:32[R1]
00000574: __libc_start_main_arg3 :: in out u64 = R2
00000575: __libc_start_main_auxv :: in out u64 = R3
00000576: __libc_start_main_result :: out u32 = low:32[R0]

000001d0:
00000423: R16 := 0x20000
0000042a: R17 := mem[R16, el]:u64
00000430: R16 := R16
00000435: call R17 with noreturn

00000541: sub _fini(_fini_result)
00000577: _fini_result :: out u32 = low:32[R0]

00000020:
00000026: #0 := R31 - 0x10
0000002c: mem := mem with [#0, el]:u64 <- R29
00000032: mem := mem with [#0 + 8, el]:u64 <- R30
00000036: R31 := #0
0000003c: R29 := R31
00000043: R29 := mem[R31, el]:u64
00000048: R30 := mem[R31 + 8, el]:u64
0000004c: R31 := R31 + 0x10
00000051: call R30 with noreturn

00000542: sub _init(_init_result)
00000578: _init_result :: out u32 = low:32[R0]

00000493:
00000499: #5 := R31 - 0x10
0000049f: mem := mem with [#5, el]:u64 <- R29
000004a5: mem := mem with [#5 + 8, el]:u64 <- R30
000004a9: R31 := #5
000004af: R29 := R31
000004b4: R30 := 0x5C8
000004b6: call @call_weak_fn with return %000004b8

000004b8:
000004bd: R29 := mem[R31, el]:u64
000004c2: R30 := mem[R31 + 8, el]:u64
000004c6: R31 := R31 + 0x10
000004cb: call R30 with noreturn

00000543: sub _start(_start_result)
00000579: _start_result :: out u32 = low:32[R0]

00000191:
00000196: R29 := 0
0000019b: R30 := 0
000001a1: R5 := R0
000001a8: R1 := mem[R31, el]:u64
000001ae: R2 := R31 + 8
000001b4: R6 := R31
000001b9: R0 := 0x1F000
000001c0: R0 := mem[R0 + 0xFD8, el]:u64
000001c5: R3 := 0
000001ca: R4 := 0
000001cf: R30 := 0x670
000001d2: call @__libc_start_main with return %000001d4

000001d4:
000001d7: R30 := 0x674
000001da: call @abort with return %00000568

00000568:
00000569: call @call_weak_fn with noreturn

00000546: sub abort()


000001d8:
00000465: R16 := 0x20000
0000046c: R17 := mem[R16 + 0x18, el]:u64
00000472: R16 := R16 + 0x18
00000477: call R17 with noreturn

00000547: sub call_weak_fn(call_weak_fn_result)
0000057a: call_weak_fn_result :: out u32 = low:32[R0]

000001dc:
000001df: R0 := 0x1F000
000001e6: R0 := mem[R0 + 0xFD0, el]:u64
000001ec: when R0 = 0 goto %000001ea
0000056a: goto %00000381

000001ea:
000001f2: call R30 with noreturn

00000381:
00000384: goto @__gmon_start__

00000382:
0000044f: R16 := 0x20000
00000456: R17 := mem[R16 + 0x10, el]:u64
0000045c: R16 := R16 + 0x10
00000461: call R17 with noreturn

00000549: sub deregister_tm_clones(deregister_tm_clones_result)
0000057b: deregister_tm_clones_result :: out u32 = low:32[R0]

000001f8:
000001fb: R0 := 0x20000
00000201: R0 := R0 + 0x30
00000206: R1 := 0x20000
0000020c: R1 := R1 + 0x30
00000212: #1 := ~R0
00000217: #2 := R1 + ~R0
0000021d: VF := extend:65[#2 + 1] <> extend:65[R1] + extend:65[#1] + 1
00000223: CF := pad:65[#2 + 1] <> pad:65[R1] + pad:65[#1] + 1
00000227: ZF := #2 + 1 = 0
0000022b: NF := 63:63[#2 + 1]
00000231: when ZF goto %0000022f
0000056b: goto %00000363

00000363:
00000366: R1 := 0x1F000
0000036d: R1 := mem[R1 + 0xFC0, el]:u64
00000372: when R1 = 0 goto %0000022f
0000056c: goto %00000376

0000022f:
00000237: call R30 with noreturn

00000376:
0000037a: R16 := R1
0000037f: call R16 with noreturn

0000054c: sub frame_dummy(frame_dummy_result)
0000057c: frame_dummy_result :: out u32 = low:32[R0]

000002ce:
000002d0: call @register_tm_clones with noreturn

0000054d: sub get_two(get_two_result)
0000057d: get_two_result :: out u32 = low:32[R0]

00000300:
00000303: R0 := 2
00000308: call R30 with noreturn

0000054e: sub main(main_argc, main_argv, main_result)
0000057e: main_argc :: in u32 = low:32[R0]
0000057f: main_argv :: in out u64 = R1
00000580: main_result :: out u32 = low:32[R0]

000002d2:
000002d5: R0 := 0
000002da: R8 := 0x20000
000002df: R9 := 1
000002e4: R10 := 0x20000
000002e9: R11 := 2
000002f1: mem := mem with [R8 + 0x34, el]:u32 <- 31:0[R9]
000002f9: mem := mem with [R10 + 0x38, el]:u32 <- 31:0[R11]
000002fe: call R30 with noreturn

0000054f: sub register_tm_clones(register_tm_clones_result)
00000581: register_tm_clones_result :: out u32 = low:32[R0]

00000239:
0000023c: R0 := 0x20000
00000242: R0 := R0 + 0x30
00000247: R1 := 0x20000
0000024d: R1 := R1 + 0x30
00000254: R1 := R1 + ~R0 + 1
0000025a: R2 := 0.63:63[R1]
00000261: R1 := R2 + (R1 ~>> 3)
00000267: R1 := extend:64[63:1[R1]]
0000026d: when R1 = 0 goto %0000026b
0000056d: goto %00000345

00000345:
00000348: R2 := 0x1F000
0000034f: R2 := mem[R2 + 0xFE0, el]:u64
00000354: when R2 = 0 goto %0000026b
0000056e: goto %00000358

0000026b:
00000273: call R30 with noreturn

00000358:
0000035c: R16 := R2
00000361: call R16 with noreturn
