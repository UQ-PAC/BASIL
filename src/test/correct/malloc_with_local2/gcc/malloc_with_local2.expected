var Gamma_R0: bool;
var Gamma_R1: bool;
var Gamma_R16: bool;
var Gamma_R17: bool;
var Gamma_R29: bool;
var Gamma_R30: bool;
var Gamma_R31: bool;
var Gamma_mem: [bv64]bool;
var Gamma_stack: [bv64]bool;
var R0: bv64;
var R1: bv64;
var R16: bv64;
var R17: bv64;
var R29: bv64;
var R30: bv64;
var R31: bv64;
var mem: [bv64]bv8;
var stack: [bv64]bv8;
const $_IO_stdin_used_addr: bv64;
axiom ($_IO_stdin_used_addr == 2272bv64);
function L(memory: [bv64]bv8, index: bv64) returns (bool) {
  false
}

function {:bvbuiltin "bvadd"} bvadd64(bv64, bv64) returns (bv64);
function gamma_load32(gammaMap: [bv64]bool, index: bv64) returns (bool) {
  (gammaMap[bvadd64(index, 3bv64)] && (gammaMap[bvadd64(index, 2bv64)] && (gammaMap[bvadd64(index, 1bv64)] && gammaMap[index])))
}

function gamma_load64(gammaMap: [bv64]bool, index: bv64) returns (bool) {
  (gammaMap[bvadd64(index, 7bv64)] && (gammaMap[bvadd64(index, 6bv64)] && (gammaMap[bvadd64(index, 5bv64)] && (gammaMap[bvadd64(index, 4bv64)] && (gammaMap[bvadd64(index, 3bv64)] && (gammaMap[bvadd64(index, 2bv64)] && (gammaMap[bvadd64(index, 1bv64)] && gammaMap[index])))))))
}

function gamma_load8(gammaMap: [bv64]bool, index: bv64) returns (bool) {
  gammaMap[index]
}

function gamma_store32(gammaMap: [bv64]bool, index: bv64, value: bool) returns ([bv64]bool) {
  gammaMap[index := value][bvadd64(index, 1bv64) := value][bvadd64(index, 2bv64) := value][bvadd64(index, 3bv64) := value]
}

function gamma_store64(gammaMap: [bv64]bool, index: bv64, value: bool) returns ([bv64]bool) {
  gammaMap[index := value][bvadd64(index, 1bv64) := value][bvadd64(index, 2bv64) := value][bvadd64(index, 3bv64) := value][bvadd64(index, 4bv64) := value][bvadd64(index, 5bv64) := value][bvadd64(index, 6bv64) := value][bvadd64(index, 7bv64) := value]
}

function gamma_store8(gammaMap: [bv64]bool, index: bv64, value: bool) returns ([bv64]bool) {
  gammaMap[index := value]
}

function memory_load32_le(memory: [bv64]bv8, index: bv64) returns (bv32) {
  (memory[bvadd64(index, 3bv64)] ++ (memory[bvadd64(index, 2bv64)] ++ (memory[bvadd64(index, 1bv64)] ++ memory[index])))
}

function memory_load64_le(memory: [bv64]bv8, index: bv64) returns (bv64) {
  (memory[bvadd64(index, 7bv64)] ++ (memory[bvadd64(index, 6bv64)] ++ (memory[bvadd64(index, 5bv64)] ++ (memory[bvadd64(index, 4bv64)] ++ (memory[bvadd64(index, 3bv64)] ++ (memory[bvadd64(index, 2bv64)] ++ (memory[bvadd64(index, 1bv64)] ++ memory[index])))))))
}

function memory_load8_le(memory: [bv64]bv8, index: bv64) returns (bv8) {
  memory[index]
}

function memory_store32_le(memory: [bv64]bv8, index: bv64, value: bv32) returns ([bv64]bv8) {
  memory[index := value[8:0]][bvadd64(index, 1bv64) := value[16:8]][bvadd64(index, 2bv64) := value[24:16]][bvadd64(index, 3bv64) := value[32:24]]
}

function memory_store64_le(memory: [bv64]bv8, index: bv64, value: bv64) returns ([bv64]bv8) {
  memory[index := value[8:0]][bvadd64(index, 1bv64) := value[16:8]][bvadd64(index, 2bv64) := value[24:16]][bvadd64(index, 3bv64) := value[32:24]][bvadd64(index, 4bv64) := value[40:32]][bvadd64(index, 5bv64) := value[48:40]][bvadd64(index, 6bv64) := value[56:48]][bvadd64(index, 7bv64) := value[64:56]]
}

function memory_store8_le(memory: [bv64]bv8, index: bv64, value: bv8) returns ([bv64]bv8) {
  memory[index := value[8:0]]
}

function {:bvbuiltin "zero_extend 32"} zero_extend32_32(bv32) returns (bv64);
function {:bvbuiltin "zero_extend 56"} zero_extend56_8(bv8) returns (bv64);
procedure rely();
  modifies mem, Gamma_mem;
  ensures (forall i: bv64 :: (((mem[i] == old(mem[i])) ==> (Gamma_mem[i] == old(Gamma_mem[i])))));
  ensures (mem == old(mem));
  ensures (Gamma_mem == old(Gamma_mem));

procedure rely_transitive()
  modifies mem, Gamma_mem;
  ensures (mem == old(mem));
  ensures (Gamma_mem == old(Gamma_mem));
{
  call rely();
  call rely();
}

procedure rely_reflexive();

procedure guarantee_reflexive();
  modifies mem, Gamma_mem;

procedure #free();
  modifies Gamma_R16, Gamma_R17, R16, R17;

procedure main()
  modifies Gamma_R0, Gamma_R1, Gamma_R16, Gamma_R17, Gamma_R29, Gamma_R30, Gamma_R31, Gamma_mem, Gamma_stack, R0, R1, R16, R17, R29, R30, R31, mem, stack;
  free requires (memory_load8_le(mem, 2272bv64) == 1bv8);
  free requires (memory_load8_le(mem, 2273bv64) == 0bv8);
  free requires (memory_load8_le(mem, 2274bv64) == 2bv8);
  free requires (memory_load8_le(mem, 2275bv64) == 0bv8);
  free requires (memory_load8_le(mem, 2276bv64) == 0bv8);
  free requires (memory_load8_le(mem, 2277bv64) == 0bv8);
  free requires (memory_load8_le(mem, 2278bv64) == 0bv8);
  free requires (memory_load8_le(mem, 2279bv64) == 0bv8);
  free requires (memory_load8_le(mem, 2280bv64) == 84bv8);
  free requires (memory_load8_le(mem, 2281bv64) == 104bv8);
  free requires (memory_load8_le(mem, 2282bv64) == 101bv8);
  free requires (memory_load8_le(mem, 2283bv64) == 32bv8);
  free requires (memory_load8_le(mem, 2284bv64) == 99bv8);
  free requires (memory_load8_le(mem, 2285bv64) == 104bv8);
  free requires (memory_load8_le(mem, 2286bv64) == 97bv8);
  free requires (memory_load8_le(mem, 2287bv64) == 114bv8);
  free requires (memory_load8_le(mem, 2288bv64) == 32bv8);
  free requires (memory_load8_le(mem, 2289bv64) == 105bv8);
  free requires (memory_load8_le(mem, 2290bv64) == 115bv8);
  free requires (memory_load8_le(mem, 2291bv64) == 58bv8);
  free requires (memory_load8_le(mem, 2292bv64) == 32bv8);
  free requires (memory_load8_le(mem, 2293bv64) == 37bv8);
  free requires (memory_load8_le(mem, 2294bv64) == 99bv8);
  free requires (memory_load8_le(mem, 2295bv64) == 10bv8);
  free requires (memory_load8_le(mem, 2296bv64) == 0bv8);
  free requires (memory_load8_le(mem, 2297bv64) == 0bv8);
  free requires (memory_load8_le(mem, 2298bv64) == 0bv8);
  free requires (memory_load8_le(mem, 2299bv64) == 0bv8);
  free requires (memory_load8_le(mem, 2300bv64) == 0bv8);
  free requires (memory_load8_le(mem, 2301bv64) == 0bv8);
  free requires (memory_load8_le(mem, 2302bv64) == 0bv8);
  free requires (memory_load8_le(mem, 2303bv64) == 0bv8);
  free requires (memory_load8_le(mem, 2304bv64) == 84bv8);
  free requires (memory_load8_le(mem, 2305bv64) == 104bv8);
  free requires (memory_load8_le(mem, 2306bv64) == 101bv8);
  free requires (memory_load8_le(mem, 2307bv64) == 32bv8);
  free requires (memory_load8_le(mem, 2308bv64) == 105bv8);
  free requires (memory_load8_le(mem, 2309bv64) == 110bv8);
  free requires (memory_load8_le(mem, 2310bv64) == 116bv8);
  free requires (memory_load8_le(mem, 2311bv64) == 32bv8);
  free requires (memory_load8_le(mem, 2312bv64) == 105bv8);
  free requires (memory_load8_le(mem, 2313bv64) == 115bv8);
  free requires (memory_load8_le(mem, 2314bv64) == 58bv8);
  free requires (memory_load8_le(mem, 2315bv64) == 32bv8);
  free requires (memory_load8_le(mem, 2316bv64) == 37bv8);
  free requires (memory_load8_le(mem, 2317bv64) == 100bv8);
  free requires (memory_load8_le(mem, 2318bv64) == 10bv8);
  free requires (memory_load8_le(mem, 2319bv64) == 0bv8);
  free requires (memory_load8_le(mem, 2320bv64) == 84bv8);
  free requires (memory_load8_le(mem, 2321bv64) == 104bv8);
  free requires (memory_load8_le(mem, 2322bv64) == 101bv8);
  free requires (memory_load8_le(mem, 2323bv64) == 32bv8);
  free requires (memory_load8_le(mem, 2324bv64) == 108bv8);
  free requires (memory_load8_le(mem, 2325bv64) == 111bv8);
  free requires (memory_load8_le(mem, 2326bv64) == 99bv8);
  free requires (memory_load8_le(mem, 2327bv64) == 97bv8);
  free requires (memory_load8_le(mem, 2328bv64) == 108bv8);
  free requires (memory_load8_le(mem, 2329bv64) == 32bv8);
  free requires (memory_load8_le(mem, 2330bv64) == 118bv8);
  free requires (memory_load8_le(mem, 2331bv64) == 97bv8);
  free requires (memory_load8_le(mem, 2332bv64) == 114bv8);
  free requires (memory_load8_le(mem, 2333bv64) == 105bv8);
  free requires (memory_load8_le(mem, 2334bv64) == 97bv8);
  free requires (memory_load8_le(mem, 2335bv64) == 98bv8);
  free requires (memory_load8_le(mem, 2336bv64) == 108bv8);
  free requires (memory_load8_le(mem, 2337bv64) == 101bv8);
  free requires (memory_load8_le(mem, 2338bv64) == 32bv8);
  free requires (memory_load8_le(mem, 2339bv64) == 105bv8);
  free requires (memory_load8_le(mem, 2340bv64) == 115bv8);
  free requires (memory_load8_le(mem, 2341bv64) == 58bv8);
  free requires (memory_load8_le(mem, 2342bv64) == 32bv8);
  free requires (memory_load8_le(mem, 2343bv64) == 37bv8);
  free requires (memory_load8_le(mem, 2344bv64) == 100bv8);
  free requires (memory_load8_le(mem, 2345bv64) == 10bv8);
  free requires (memory_load8_le(mem, 2346bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69504bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69505bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69506bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69507bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69508bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69509bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69510bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69511bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69512bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69513bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69514bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69515bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69516bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69517bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69518bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69519bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69520bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69521bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69522bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69523bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69524bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69525bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69526bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69527bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69528bv64) == 64bv8);
  free requires (memory_load8_le(mem, 69529bv64) == 6bv8);
  free requires (memory_load8_le(mem, 69530bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69531bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69532bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69533bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69534bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69535bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69536bv64) == 64bv8);
  free requires (memory_load8_le(mem, 69537bv64) == 6bv8);
  free requires (memory_load8_le(mem, 69538bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69539bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69540bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69541bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69542bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69543bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69544bv64) == 64bv8);
  free requires (memory_load8_le(mem, 69545bv64) == 6bv8);
  free requires (memory_load8_le(mem, 69546bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69547bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69548bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69549bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69550bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69551bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69552bv64) == 64bv8);
  free requires (memory_load8_le(mem, 69553bv64) == 6bv8);
  free requires (memory_load8_le(mem, 69554bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69555bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69556bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69557bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69558bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69559bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69560bv64) == 64bv8);
  free requires (memory_load8_le(mem, 69561bv64) == 6bv8);
  free requires (memory_load8_le(mem, 69562bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69563bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69564bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69565bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69566bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69567bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69568bv64) == 64bv8);
  free requires (memory_load8_le(mem, 69569bv64) == 6bv8);
  free requires (memory_load8_le(mem, 69570bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69571bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69572bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69573bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69574bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69575bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69576bv64) == 64bv8);
  free requires (memory_load8_le(mem, 69577bv64) == 6bv8);
  free requires (memory_load8_le(mem, 69578bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69579bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69580bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69581bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69582bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69583bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69584bv64) == 144bv8);
  free requires (memory_load8_le(mem, 69585bv64) == 13bv8);
  free requires (memory_load8_le(mem, 69586bv64) == 1bv8);
  free requires (memory_load8_le(mem, 69587bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69588bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69589bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69590bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69591bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69592bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69593bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69594bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69595bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69596bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69597bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69598bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69599bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69600bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69601bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69602bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69603bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69604bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69605bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69606bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69607bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69608bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69609bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69610bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69611bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69612bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69613bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69614bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69615bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69616bv64) == 20bv8);
  free requires (memory_load8_le(mem, 69617bv64) == 8bv8);
  free requires (memory_load8_le(mem, 69618bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69619bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69620bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69621bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69622bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69623bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69624bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69625bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69626bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69627bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69628bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69629bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69630bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69631bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69632bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69633bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69634bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69635bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69636bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69637bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69638bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69639bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69640bv64) == 8bv8);
  free requires (memory_load8_le(mem, 69641bv64) == 16bv8);
  free requires (memory_load8_le(mem, 69642bv64) == 1bv8);
  free requires (memory_load8_le(mem, 69643bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69644bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69645bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69646bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69647bv64) == 0bv8);
  free ensures (Gamma_R29 == old(Gamma_R29));
  free ensures (Gamma_R31 == old(Gamma_R31));
  free ensures (R29 == old(R29));
  free ensures (R31 == old(R31));
{
  var #4: bv64;
  var Gamma_#4: bool;
  lmain:
    #4, Gamma_#4 := bvadd64(R31, 18446744073709551552bv64), Gamma_R31;
    stack, Gamma_stack := memory_store64_le(stack, #4, R29), gamma_store64(Gamma_stack, #4, Gamma_R29);
    stack, Gamma_stack := memory_store64_le(stack, bvadd64(#4, 8bv64), R30), gamma_store64(Gamma_stack, bvadd64(#4, 8bv64), Gamma_R30);
    R31, Gamma_R31 := #4, Gamma_#4;
    R29, Gamma_R29 := R31, Gamma_R31;
    R0, Gamma_R0 := 1bv64, true;
    R30, Gamma_R30 := 2084bv64, true;
    call malloc();
    goto l0000038b;
  l0000038b:
    stack, Gamma_stack := memory_store64_le(stack, bvadd64(R31, 40bv64), R0), gamma_store64(Gamma_stack, bvadd64(R31, 40bv64), Gamma_R0);
    R0, Gamma_R0 := 11bv64, true;
    stack, Gamma_stack := memory_store32_le(stack, bvadd64(R31, 28bv64), R0[32:0]), gamma_store32(Gamma_stack, bvadd64(R31, 28bv64), Gamma_R0);
    R0, Gamma_R0 := 4bv64, true;
    R30, Gamma_R30 := 2104bv64, true;
    call malloc();
    goto l000003ac;
  l000003ac:
    stack, Gamma_stack := memory_store64_le(stack, bvadd64(R31, 48bv64), R0), gamma_store64(Gamma_stack, bvadd64(R31, 48bv64), Gamma_R0);
    R0, Gamma_R0 := 10bv64, true;
    stack, Gamma_stack := memory_store32_le(stack, bvadd64(R31, 32bv64), R0[32:0]), gamma_store32(Gamma_stack, bvadd64(R31, 32bv64), Gamma_R0);
    R0, Gamma_R0 := 4bv64, true;
    R30, Gamma_R30 := 2124bv64, true;
    call malloc();
    goto l000003cd;
  l000003cd:
    stack, Gamma_stack := memory_store64_le(stack, bvadd64(R31, 56bv64), R0), gamma_store64(Gamma_stack, bvadd64(R31, 56bv64), Gamma_R0);
    R0, Gamma_R0 := 9bv64, true;
    stack, Gamma_stack := memory_store32_le(stack, bvadd64(R31, 36bv64), R0[32:0]), gamma_store32(Gamma_stack, bvadd64(R31, 36bv64), Gamma_R0);
    R0, Gamma_R0 := memory_load64_le(stack, bvadd64(R31, 40bv64)), gamma_load64(Gamma_stack, bvadd64(R31, 40bv64));
    R1, Gamma_R1 := 65bv64, true;
    call rely();
    assert (L(mem, R0) ==> Gamma_R1);
    mem, Gamma_mem := memory_store8_le(mem, R0, R1[8:0]), gamma_store8(Gamma_mem, R0, Gamma_R1);
    R0, Gamma_R0 := memory_load64_le(stack, bvadd64(R31, 48bv64)), gamma_load64(Gamma_stack, bvadd64(R31, 48bv64));
    R1, Gamma_R1 := 42bv64, true;
    call rely();
    assert (L(mem, R0) ==> Gamma_R1);
    mem, Gamma_mem := memory_store32_le(mem, R0, R1[32:0]), gamma_store32(Gamma_mem, R0, Gamma_R1);
    R0, Gamma_R0 := memory_load64_le(stack, bvadd64(R31, 40bv64)), gamma_load64(Gamma_stack, bvadd64(R31, 40bv64));
    R0, Gamma_R0 := zero_extend56_8(memory_load8_le(mem, R0)), (gamma_load8(Gamma_mem, R0) || L(mem, R0));
    R1, Gamma_R1 := zero_extend32_32(R0[32:0]), Gamma_R0;
    R0, Gamma_R0 := 0bv64, true;
    R0, Gamma_R0 := bvadd64(R0, 2280bv64), Gamma_R0;
    R30, Gamma_R30 := 2184bv64, true;
    call printf();
    goto l00000431;
  l00000431:
    R0, Gamma_R0 := memory_load64_le(stack, bvadd64(R31, 48bv64)), gamma_load64(Gamma_stack, bvadd64(R31, 48bv64));
    R0, Gamma_R0 := zero_extend32_32(memory_load32_le(mem, R0)), (gamma_load32(Gamma_mem, R0) || L(mem, R0));
    R1, Gamma_R1 := zero_extend32_32(R0[32:0]), Gamma_R0;
    R0, Gamma_R0 := 0bv64, true;
    R0, Gamma_R0 := bvadd64(R0, 2304bv64), Gamma_R0;
    R30, Gamma_R30 := 2208bv64, true;
    call printf();
    goto l00000457;
  l00000457:
    R1, Gamma_R1 := zero_extend32_32(memory_load32_le(stack, bvadd64(R31, 32bv64))), gamma_load32(Gamma_stack, bvadd64(R31, 32bv64));
    R0, Gamma_R0 := 0bv64, true;
    R0, Gamma_R0 := bvadd64(R0, 2320bv64), Gamma_R0;
    R30, Gamma_R30 := 2224bv64, true;
    call printf();
    goto l00000470;
  l00000470:
    R0, Gamma_R0 := memory_load64_le(stack, bvadd64(R31, 40bv64)), gamma_load64(Gamma_stack, bvadd64(R31, 40bv64));
    R30, Gamma_R30 := 2232bv64, true;
    call #free();
    goto l0000047f;
  l0000047f:
    R0, Gamma_R0 := memory_load64_le(stack, bvadd64(R31, 48bv64)), gamma_load64(Gamma_stack, bvadd64(R31, 48bv64));
    R30, Gamma_R30 := 2240bv64, true;
    call #free();
    goto l0000048d;
  l0000048d:
    R0, Gamma_R0 := 0bv64, true;
    R29, Gamma_R29 := memory_load64_le(stack, R31), gamma_load64(Gamma_stack, R31);
    R30, Gamma_R30 := memory_load64_le(stack, bvadd64(R31, 8bv64)), gamma_load64(Gamma_stack, bvadd64(R31, 8bv64));
    R31, Gamma_R31 := bvadd64(R31, 64bv64), Gamma_R31;
    return;
}

procedure malloc();
  modifies Gamma_R16, Gamma_R17, R16, R17;

procedure printf();
  modifies Gamma_R16, Gamma_R17, R16, R17;
