0000105b: program
0000103d: sub __cxa_finalize(__cxa_finalize_result)
0000105c: __cxa_finalize_result :: out u32 = low:32[R0]

00000d93:
00000e8b: R16 := 0x10000
00000e92: R17 := mem[R16 + 0xFB8, el]:u64
00000e98: R16 := R16 + 0xFB8
00000e9d: call R17 with noreturn

0000103e: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
0000105d: __do_global_dtors_aux_result :: out u32 = low:32[R0]

00000b5e:
00000b62: #3 := R31 - 0x20
00000b68: mem := mem with [#3, el]:u64 <- R29
00000b6e: mem := mem with [#3 + 8, el]:u64 <- R30
00000b72: R31 := #3
00000b78: R29 := R31
00000b80: mem := mem with [R31 + 0x10, el]:u64 <- R19
00000b85: R19 := 0x11000
00000b8c: R0 := pad:64[mem[R19 + 0x10]]
00000b93: when 31:0[R0] <> 0 goto %00000b91
0000103f: goto %00000d5c

00000d5c:
00000d5f: R0 := 0x10000
00000d66: R0 := mem[R0 + 0xFE0, el]:u64
00000d6c: when R0 = 0 goto %00000d6a
00001040: goto %00000d83

00000d83:
00000d86: R0 := 0x11000
00000d8d: R0 := mem[R0 + 8, el]:u64
00000d92: R30 := 0x6F0
00000d95: call @__cxa_finalize with return %00000d6a

00000d6a:
00000d72: R30 := 0x6F4
00000d74: call @deregister_tm_clones with return %00000d76

00000d76:
00000d79: R0 := 1
00000d81: mem := mem with [R19 + 0x10] <- 7:0[R0]
00001041: goto %00000b91

00000b91:
00000b9b: R19 := mem[R31 + 0x10, el]:u64
00000ba2: R29 := mem[R31, el]:u64
00000ba7: R30 := mem[R31 + 8, el]:u64
00000bab: R31 := R31 + 0x20
00000bb0: call R30 with noreturn

00001042: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
0000105e: __libc_start_main_main :: in u64 = R0
0000105f: __libc_start_main_arg2 :: in u32 = low:32[R1]
00001060: __libc_start_main_arg3 :: in out u64 = R2
00001061: __libc_start_main_auxv :: in out u64 = R3
00001062: __libc_start_main_result :: out u32 = low:32[R0]

00000ab7:
00000e75: R16 := 0x10000
00000e7c: R17 := mem[R16 + 0xFB0, el]:u64
00000e82: R16 := R16 + 0xFB0
00000e87: call R17 with noreturn

00001043: sub _fini(_fini_result)
00001063: _fini_result :: out u32 = low:32[R0]

00000853:
00000859: #0 := R31 - 0x10
0000085f: mem := mem with [#0, el]:u64 <- R29
00000865: mem := mem with [#0 + 8, el]:u64 <- R30
00000869: R31 := #0
0000086f: R29 := R31
00000876: R29 := mem[R31, el]:u64
0000087b: R30 := mem[R31 + 8, el]:u64
0000087f: R31 := R31 + 0x10
00000884: call R30 with noreturn

00001044: sub _init(_init_result)
00001064: _init_result :: out u32 = low:32[R0]

00000f68:
00000f6e: #10 := R31 - 0x10
00000f74: mem := mem with [#10, el]:u64 <- R29
00000f7a: mem := mem with [#10 + 8, el]:u64 <- R30
00000f7e: R31 := #10
00000f84: R29 := R31
00000f89: R30 := 0x590
00000f8b: call @call_weak_fn with return %00000f8d

00000f8d:
00000f92: R29 := mem[R31, el]:u64
00000f97: R30 := mem[R31 + 8, el]:u64
00000f9b: R31 := R31 + 0x10
00000fa0: call R30 with noreturn

00001045: sub _start(_start_result)
00001065: _start_result :: out u32 = low:32[R0]

00000a78:
00000a7d: R29 := 0
00000a82: R30 := 0
00000a88: R5 := R0
00000a8f: R1 := mem[R31, el]:u64
00000a95: R2 := R31 + 8
00000a9b: R6 := R31
00000aa0: R0 := 0x10000
00000aa7: R0 := mem[R0 + 0xFF0, el]:u64
00000aac: R3 := 0
00000ab1: R4 := 0
00000ab6: R30 := 0x630
00000ab9: call @__libc_start_main with return %00000abb

00000abb:
00000abe: R30 := 0x634
00000ac1: call @abort with return %00001046

00001046:
00001047: call @call_weak_fn with noreturn

00001048: sub abort()


00000abf:
00000eb7: R16 := 0x10000
00000ebe: R17 := mem[R16 + 0xFC8, el]:u64
00000ec4: R16 := R16 + 0xFC8
00000ec9: call R17 with noreturn

00001049: sub call_weak_fn(call_weak_fn_result)
00001066: call_weak_fn_result :: out u32 = low:32[R0]

00000ac3:
00000ac6: R0 := 0x10000
00000acd: R0 := mem[R0 + 0xFE8, el]:u64
00000ad3: when R0 = 0 goto %00000ad1
0000104a: goto %00000dd3

00000ad1:
00000ad9: call R30 with noreturn

00000dd3:
00000dd6: goto @__gmon_start__

00000dd4:
00000ea1: R16 := 0x10000
00000ea8: R17 := mem[R16 + 0xFC0, el]:u64
00000eae: R16 := R16 + 0xFC0
00000eb3: call R17 with noreturn

0000104b: sub deregister_tm_clones(deregister_tm_clones_result)
00001067: deregister_tm_clones_result :: out u32 = low:32[R0]

00000adf:
00000ae2: R0 := 0x11000
00000ae8: R0 := R0 + 0x10
00000aed: R1 := 0x11000
00000af3: R1 := R1 + 0x10
00000af9: #1 := ~R0
00000afe: #2 := R1 + ~R0
00000b04: VF := extend:65[#2 + 1] <> extend:65[R1] + extend:65[#1] + 1
00000b0a: CF := pad:65[#2 + 1] <> pad:65[R1] + pad:65[#1] + 1
00000b0e: ZF := #2 + 1 = 0
00000b12: NF := 63:63[#2 + 1]
00000b18: when ZF goto %00000b16
0000104c: goto %00000db5

00000db5:
00000db8: R1 := 0x10000
00000dbf: R1 := mem[R1 + 0xFD8, el]:u64
00000dc4: when R1 = 0 goto %00000b16
0000104d: goto %00000dc8

00000b16:
00000b1e: call R30 with noreturn

00000dc8:
00000dcc: R16 := R1
00000dd1: call R16 with noreturn

0000104e: sub frame_dummy(frame_dummy_result)
00001068: frame_dummy_result :: out u32 = low:32[R0]

00000bb6:
00000bb8: call @register_tm_clones with noreturn

0000104f: sub main(main_argc, main_argv, main_result)
00001069: main_argc :: in u32 = low:32[R0]
0000106a: main_argv :: in out u64 = R1
0000106b: main_result :: out u32 = low:32[R0]

00000c17:
00000c1b: #4 := R31 - 0x30
00000c21: mem := mem with [#4, el]:u64 <- R29
00000c27: mem := mem with [#4 + 8, el]:u64 <- R30
00000c2b: R31 := #4
00000c31: R29 := R31
00000c39: mem := mem with [R31 + 0x1C, el]:u32 <- 31:0[R0]
00000c40: R0 := pad:64[mem[R31 + 0x1C, el]:u32]
00000c46: #5 := 31:0[R0] - 3
00000c4b: VF := extend:33[#5 + 1] <> extend:33[31:0[R0]] - 2
00000c50: CF := pad:33[#5 + 1] <> pad:33[31:0[R0]] + 0xFFFFFFFE
00000c54: ZF := #5 + 1 = 0
00000c58: NF := 31:31[#5 + 1]
00000c5e: when ZF goto %00000c5c
00001050: goto %00000cb6

00000c5c:
00000c64: R0 := 0
00000c6a: R0 := R0 + 0x744
00000c72: mem := mem with [R31 + 0x28, el]:u64 <- R0
00000c77: goto %00000c75

00000cb6:
00000cbb: R0 := pad:64[mem[R31 + 0x1C, el]:u32]
00000cc1: #6 := 31:0[R0] - 3
00000cc6: VF := extend:33[#6 + 1] <> extend:33[31:0[R0]] - 2
00000ccb: CF := pad:33[#6 + 1] <> pad:33[31:0[R0]] + 0xFFFFFFFE
00000ccf: ZF := #6 + 1 = 0
00000cd3: NF := 31:31[#6 + 1]
00000cda: when NF = VF & ~ZF goto %00000ca1
00001051: goto %00000cde

00000cde:
00000ce3: R0 := pad:64[mem[R31 + 0x1C, el]:u32]
00000ce9: #7 := 31:0[R0] - 1
00000cee: VF := extend:33[#7 + 1] <> extend:33[31:0[R0]] + 0
00000cf3: CF := pad:33[#7 + 1] <> pad:33[31:0[R0]] - 0x100000000
00000cf7: ZF := #7 + 1 = 0
00000cfb: NF := 31:31[#7 + 1]
00000d01: when ZF goto %00000cff
00001052: goto %00000d32

00000cff:
00000d07: R0 := 0
00000d0d: R0 := R0 + 0x714
00000d15: mem := mem with [R31 + 0x28, el]:u64 <- R0
00000d19: goto %00000c75

00000d32:
00000d37: R0 := pad:64[mem[R31 + 0x1C, el]:u32]
00000d3d: #8 := 31:0[R0] - 2
00000d42: VF := extend:33[#8 + 1] <> extend:33[31:0[R0]] - 1
00000d47: CF := pad:33[#8 + 1] <> pad:33[31:0[R0]] + 0xFFFFFFFF
00000d4b: ZF := #8 + 1 = 0
00000d4f: NF := 31:31[#8 + 1]
00000d54: when ZF goto %00000d1b
00001053: goto %00000d58

00000d1b:
00000d1e: R0 := 0
00000d24: R0 := R0 + 0x72C
00000d2c: mem := mem with [R31 + 0x28, el]:u64 <- R0
00000d30: goto %00000c75

00000d58:
00000d5a: goto %00000ca1

00000ca1:
00000ca4: R0 := 0
00000caa: R0 := R0 + 0x714
00000cb2: mem := mem with [R31 + 0x28, el]:u64 <- R0
00001054: goto %00000c75

00000c75:
00000c7d: R0 := mem[R31 + 0x28, el]:u64
00000c82: R30 := 0x7E4
00000c85: call R0 with return %00000c87

00000c87:
00000c8a: R0 := 0
00000c91: R29 := mem[R31, el]:u64
00000c96: R30 := mem[R31 + 8, el]:u64
00000c9a: R31 := R31 + 0x30
00000c9f: call R30 with noreturn

00001055: sub register_tm_clones(register_tm_clones_result)
0000106c: register_tm_clones_result :: out u32 = low:32[R0]

00000b20:
00000b23: R0 := 0x11000
00000b29: R0 := R0 + 0x10
00000b2e: R1 := 0x11000
00000b34: R1 := R1 + 0x10
00000b3b: R1 := R1 + ~R0 + 1
00000b41: R2 := 0.63:63[R1]
00000b48: R1 := R2 + (R1 ~>> 3)
00000b4e: R1 := extend:64[63:1[R1]]
00000b54: when R1 = 0 goto %00000b52
00001056: goto %00000d97

00000d97:
00000d9a: R2 := 0x10000
00000da1: R2 := mem[R2 + 0xFF8, el]:u64
00000da6: when R2 = 0 goto %00000b52
00001057: goto %00000daa

00000b52:
00000b5a: call R30 with noreturn

00000daa:
00000dae: R16 := R2
00000db3: call R16 with noreturn

00001058: sub set_seven(set_seven_result)
0000106d: set_seven_result :: out u32 = low:32[R0]

00000bf8:
00000bfb: R0 := 0x11000
00000c01: R0 := R0 + 0x14
00000c06: R1 := 7
00000c0e: mem := mem with [R0, el]:u32 <- 31:0[R1]
00000c15: call R30 with noreturn

00001059: sub set_six(set_six_result)
0000106e: set_six_result :: out u32 = low:32[R0]

00000bd9:
00000bdc: R0 := 0x11000
00000be2: R0 := R0 + 0x14
00000be7: R1 := 6
00000bef: mem := mem with [R0, el]:u32 <- 31:0[R1]
00000bf6: call R30 with noreturn

0000105a: sub set_two(set_two_result)
0000106f: set_two_result :: out u32 = low:32[R0]

00000bba:
00000bbd: R0 := 0x11000
00000bc3: R0 := R0 + 0x14
00000bc8: R1 := 2
00000bd0: mem := mem with [R0, el]:u32 <- 31:0[R1]
00000bd7: call R30 with noreturn
