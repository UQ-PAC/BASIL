00000579: program
00000543: sub __cxa_finalize(__cxa_finalize_result)
0000057a: __cxa_finalize_result :: out u32 = low:32[R0]

0000034a:
00000442: R16 := 0x20000
00000449: R17 := mem[R16 + 8, el]:u64
0000044f: R16 := R16 + 8
00000454: call R17 with noreturn

00000544: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
0000057b: __do_global_dtors_aux_result :: out u32 = low:32[R0]

00000273:
00000277: #3 := R31 - 0x20
0000027d: mem := mem with [#3, el]:u64 <- R29
00000283: mem := mem with [#3 + 8, el]:u64 <- R30
00000287: R31 := #3
0000028d: R29 := R31
00000295: mem := mem with [R31 + 0x10, el]:u64 <- R19
0000029a: R19 := 0x20000
000002a1: R0 := pad:64[mem[R19 + 0x30]]
000002a7: when 0:0[R0] goto %000002a5
0000056d: goto %00000313

00000313:
00000316: R0 := 0x1F000
0000031d: R0 := mem[R0 + 0xFC0, el]:u64
00000323: when R0 = 0 goto %00000321
0000056e: goto %0000033a

0000033a:
0000033d: R0 := 0x20000
00000344: R0 := mem[R0 + 0x28, el]:u64
00000349: R30 := 0x730
0000034c: call @__cxa_finalize with return %00000321

00000321:
00000329: R30 := 0x734
0000032b: call @deregister_tm_clones with return %0000032d

0000032d:
00000330: R0 := 1
00000338: mem := mem with [R19 + 0x30] <- 7:0[R0]
0000056f: goto %000002a5

000002a5:
000002af: R19 := mem[R31 + 0x10, el]:u64
000002b6: R29 := mem[R31, el]:u64
000002bb: R30 := mem[R31 + 8, el]:u64
000002bf: R31 := R31 + 0x20
000002c4: call R30 with noreturn

00000548: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
0000057c: __libc_start_main_main :: in u64 = R0
0000057d: __libc_start_main_arg2 :: in u32 = low:32[R1]
0000057e: __libc_start_main_arg3 :: in out u64 = R2
0000057f: __libc_start_main_auxv :: in out u64 = R3
00000580: __libc_start_main_result :: out u32 = low:32[R0]

000001cc:
0000042c: R16 := 0x20000
00000433: R17 := mem[R16, el]:u64
00000439: R16 := R16
0000043e: call R17 with noreturn

00000549: sub _fini(_fini_result)
00000581: _fini_result :: out u32 = low:32[R0]

00000020:
00000026: #0 := R31 - 0x10
0000002c: mem := mem with [#0, el]:u64 <- R29
00000032: mem := mem with [#0 + 8, el]:u64 <- R30
00000036: R31 := #0
0000003c: R29 := R31
00000043: R29 := mem[R31, el]:u64
00000048: R30 := mem[R31 + 8, el]:u64
0000004c: R31 := R31 + 0x10
00000051: call R30 with noreturn

0000054a: sub _init(_init_result)
00000582: _init_result :: out u32 = low:32[R0]

0000049c:
000004a2: #6 := R31 - 0x10
000004a8: mem := mem with [#6, el]:u64 <- R29
000004ae: mem := mem with [#6 + 8, el]:u64 <- R30
000004b2: R31 := #6
000004b8: R29 := R31
000004bd: R30 := 0x5A8
000004bf: call @call_weak_fn with return %000004c1

000004c1:
000004c6: R29 := mem[R31, el]:u64
000004cb: R30 := mem[R31 + 8, el]:u64
000004cf: R31 := R31 + 0x10
000004d4: call R30 with noreturn

0000054b: sub _start(_start_result)
00000583: _start_result :: out u32 = low:32[R0]

0000018d:
00000192: R29 := 0
00000197: R30 := 0
0000019d: R5 := R0
000001a4: R1 := mem[R31, el]:u64
000001aa: R2 := R31 + 8
000001b0: R6 := R31
000001b5: R0 := 0x1F000
000001bc: R0 := mem[R0 + 0xFD8, el]:u64
000001c1: R3 := 0
000001c6: R4 := 0
000001cb: R30 := 0x670
000001ce: call @__libc_start_main with return %000001d0

000001d0:
000001d3: R30 := 0x674
000001d6: call @abort with return %00000570

00000570:
00000571: call @call_weak_fn with noreturn

0000054e: sub abort()


000001d4:
0000046e: R16 := 0x20000
00000475: R17 := mem[R16 + 0x18, el]:u64
0000047b: R16 := R16 + 0x18
00000480: call R17 with noreturn

0000054f: sub call_weak_fn(call_weak_fn_result)
00000584: call_weak_fn_result :: out u32 = low:32[R0]

000001d8:
000001db: R0 := 0x1F000
000001e2: R0 := mem[R0 + 0xFD0, el]:u64
000001e8: when R0 = 0 goto %000001e6
00000572: goto %0000038a

000001e6:
000001ee: call R30 with noreturn

0000038a:
0000038d: goto @__gmon_start__

0000038b:
00000458: R16 := 0x20000
0000045f: R17 := mem[R16 + 0x10, el]:u64
00000465: R16 := R16 + 0x10
0000046a: call R17 with noreturn

00000551: sub deregister_tm_clones(deregister_tm_clones_result)
00000585: deregister_tm_clones_result :: out u32 = low:32[R0]

000001f4:
000001f7: R0 := 0x20000
000001fd: R0 := R0 + 0x30
00000202: R1 := 0x20000
00000208: R1 := R1 + 0x30
0000020e: #1 := ~R0
00000213: #2 := R1 + ~R0
00000219: VF := extend:65[#2 + 1] <> extend:65[R1] + extend:65[#1] + 1
0000021f: CF := pad:65[#2 + 1] <> pad:65[R1] + pad:65[#1] + 1
00000223: ZF := #2 + 1 = 0
00000227: NF := 63:63[#2 + 1]
0000022d: when ZF goto %0000022b
00000573: goto %0000036c

0000036c:
0000036f: R1 := 0x1F000
00000376: R1 := mem[R1 + 0xFB8, el]:u64
0000037b: when R1 = 0 goto %0000022b
00000574: goto %0000037f

0000022b:
00000233: call R30 with noreturn

0000037f:
00000383: R16 := R1
00000388: call R16 with noreturn

00000554: sub frame_dummy(frame_dummy_result)
00000586: frame_dummy_result :: out u32 = low:32[R0]

000002ca:
000002cc: call @register_tm_clones with noreturn

00000555: sub main(main_argc, main_argv, main_result)
00000587: main_argc :: in u32 = low:32[R0]
00000588: main_argv :: in out u64 = R1
00000589: main_result :: out u32 = low:32[R0]

000002ce:
000002d1: R0 := 0x1F000
000002d8: R0 := mem[R0 + 0xFC8, el]:u64
000002df: R0 := pad:64[mem[R0, el]:u32]
000002e5: #4 := 31:0[R0] - 1
000002ea: VF := extend:33[#4 + 1] <> extend:33[31:0[R0]] + 0
000002ef: CF := pad:33[#4 + 1] <> pad:33[31:0[R0]] - 0x100000000
000002f3: ZF := #4 + 1 = 0
000002f7: NF := 31:31[#4 + 1]
000002fd: when ZF goto %000002fb
00000575: goto %0000030a

000002fb:
00000303: R0 := 1
00000576: goto %00000305

0000030a:
0000030d: R0 := 0
00000311: goto %00000305

00000305:
00000308: call R30 with noreturn

00000558: sub register_tm_clones(register_tm_clones_result)
0000058a: register_tm_clones_result :: out u32 = low:32[R0]

00000235:
00000238: R0 := 0x20000
0000023e: R0 := R0 + 0x30
00000243: R1 := 0x20000
00000249: R1 := R1 + 0x30
00000250: R1 := R1 + ~R0 + 1
00000256: R2 := 0.63:63[R1]
0000025d: R1 := R2 + (R1 ~>> 3)
00000263: R1 := extend:64[63:1[R1]]
00000269: when R1 = 0 goto %00000267
00000577: goto %0000034e

0000034e:
00000351: R2 := 0x1F000
00000358: R2 := mem[R2 + 0xFE0, el]:u64
0000035d: when R2 = 0 goto %00000267
00000578: goto %00000361

00000267:
0000026f: call R30 with noreturn

00000361:
00000365: R16 := R2
0000036a: call R16 with noreturn
