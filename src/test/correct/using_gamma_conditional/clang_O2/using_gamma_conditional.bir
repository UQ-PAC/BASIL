00000554: program
00000522: sub __cxa_finalize(__cxa_finalize_result)
00000555: __cxa_finalize_result :: out u32 = low:32[R0]

0000032d:
00000425: R16 := 0x20000
0000042c: R17 := mem[R16 + 8, el]:u64
00000432: R16 := R16 + 8
00000437: call R17 with noreturn

00000523: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
00000556: __do_global_dtors_aux_result :: out u32 = low:32[R0]

00000263:
00000267: #3 := R31 - 0x20
0000026d: mem := mem with [#3, el]:u64 <- R29
00000273: mem := mem with [#3 + 8, el]:u64 <- R30
00000277: R31 := #3
0000027d: R29 := R31
00000285: mem := mem with [R31 + 0x10, el]:u64 <- R19
0000028a: R19 := 0x20000
00000291: R0 := pad:64[mem[R19 + 0x30]]
00000297: when 0:0[R0] goto %00000295
0000054a: goto %000002f6

000002f6:
000002f9: R0 := 0x1F000
00000300: R0 := mem[R0 + 0xFC8, el]:u64
00000306: when R0 = 0 goto %00000304
0000054b: goto %0000031d

0000031d:
00000320: R0 := 0x20000
00000327: R0 := mem[R0 + 0x28, el]:u64
0000032c: R30 := 0x730
0000032f: call @__cxa_finalize with return %00000304

00000304:
0000030c: R30 := 0x734
0000030e: call @deregister_tm_clones with return %00000310

00000310:
00000313: R0 := 1
0000031b: mem := mem with [R19 + 0x30] <- 7:0[R0]
0000054c: goto %00000295

00000295:
0000029f: R19 := mem[R31 + 0x10, el]:u64
000002a6: R29 := mem[R31, el]:u64
000002ab: R30 := mem[R31 + 8, el]:u64
000002af: R31 := R31 + 0x20
000002b4: call R30 with noreturn

00000527: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
00000557: __libc_start_main_main :: in u64 = R0
00000558: __libc_start_main_arg2 :: in u32 = low:32[R1]
00000559: __libc_start_main_arg3 :: in out u64 = R2
0000055a: __libc_start_main_auxv :: in out u64 = R3
0000055b: __libc_start_main_result :: out u32 = low:32[R0]

000001bc:
0000040f: R16 := 0x20000
00000416: R17 := mem[R16, el]:u64
0000041c: R16 := R16
00000421: call R17 with noreturn

00000528: sub _fini(_fini_result)
0000055c: _fini_result :: out u32 = low:32[R0]

00000020:
00000026: #0 := R31 - 0x10
0000002c: mem := mem with [#0, el]:u64 <- R29
00000032: mem := mem with [#0 + 8, el]:u64 <- R30
00000036: R31 := #0
0000003c: R29 := R31
00000043: R29 := mem[R31, el]:u64
00000048: R30 := mem[R31 + 8, el]:u64
0000004c: R31 := R31 + 0x10
00000051: call R30 with noreturn

00000529: sub _init(_init_result)
0000055d: _init_result :: out u32 = low:32[R0]

0000047f:
00000485: #6 := R31 - 0x10
0000048b: mem := mem with [#6, el]:u64 <- R29
00000491: mem := mem with [#6 + 8, el]:u64 <- R30
00000495: R31 := #6
0000049b: R29 := R31
000004a0: R30 := 0x5C8
000004a2: call @call_weak_fn with return %000004a4

000004a4:
000004a9: R29 := mem[R31, el]:u64
000004ae: R30 := mem[R31 + 8, el]:u64
000004b2: R31 := R31 + 0x10
000004b7: call R30 with noreturn

0000052a: sub _start(_start_result)
0000055e: _start_result :: out u32 = low:32[R0]

0000017d:
00000182: R29 := 0
00000187: R30 := 0
0000018d: R5 := R0
00000194: R1 := mem[R31, el]:u64
0000019a: R2 := R31 + 8
000001a0: R6 := R31
000001a5: R0 := 0x1F000
000001ac: R0 := mem[R0 + 0xFD8, el]:u64
000001b1: R3 := 0
000001b6: R4 := 0
000001bb: R30 := 0x670
000001be: call @__libc_start_main with return %000001c0

000001c0:
000001c3: R30 := 0x674
000001c6: call @abort with return %0000054d

0000054d:
0000054e: call @call_weak_fn with noreturn

0000052d: sub abort()


000001c4:
00000451: R16 := 0x20000
00000458: R17 := mem[R16 + 0x18, el]:u64
0000045e: R16 := R16 + 0x18
00000463: call R17 with noreturn

0000052e: sub call_weak_fn(call_weak_fn_result)
0000055f: call_weak_fn_result :: out u32 = low:32[R0]

000001c8:
000001cb: R0 := 0x1F000
000001d2: R0 := mem[R0 + 0xFD0, el]:u64
000001d8: when R0 = 0 goto %000001d6
0000054f: goto %0000036d

000001d6:
000001de: call R30 with noreturn

0000036d:
00000370: goto @__gmon_start__

0000036e:
0000043b: R16 := 0x20000
00000442: R17 := mem[R16 + 0x10, el]:u64
00000448: R16 := R16 + 0x10
0000044d: call R17 with noreturn

00000530: sub deregister_tm_clones(deregister_tm_clones_result)
00000560: deregister_tm_clones_result :: out u32 = low:32[R0]

000001e4:
000001e7: R0 := 0x20000
000001ed: R0 := R0 + 0x30
000001f2: R1 := 0x20000
000001f8: R1 := R1 + 0x30
000001fe: #1 := ~R0
00000203: #2 := R1 + ~R0
00000209: VF := extend:65[#2 + 1] <> extend:65[R1] + extend:65[#1] + 1
0000020f: CF := pad:65[#2 + 1] <> pad:65[R1] + pad:65[#1] + 1
00000213: ZF := #2 + 1 = 0
00000217: NF := 63:63[#2 + 1]
0000021d: when ZF goto %0000021b
00000550: goto %0000034f

0000034f:
00000352: R1 := 0x1F000
00000359: R1 := mem[R1 + 0xFC0, el]:u64
0000035e: when R1 = 0 goto %0000021b
00000551: goto %00000362

0000021b:
00000223: call R30 with noreturn

00000362:
00000366: R16 := R1
0000036b: call R16 with noreturn

00000533: sub frame_dummy(frame_dummy_result)
00000561: frame_dummy_result :: out u32 = low:32[R0]

000002ba:
000002bc: call @register_tm_clones with noreturn

00000534: sub main(main_argc, main_argv, main_result)
00000562: main_argc :: in u32 = low:32[R0]
00000563: main_argv :: in out u64 = R1
00000564: main_result :: out u32 = low:32[R0]

000002be:
000002c1: R8 := 0x20000
000002c8: R8 := pad:64[mem[R8 + 0x34, el]:u32]
000002ce: #4 := 31:0[R8] - 1
000002d3: VF := extend:33[#4 + 1] <> extend:33[31:0[R8]] + 0
000002d8: CF := pad:33[#4 + 1] <> pad:33[31:0[R8]] - 0x100000000
000002dc: ZF := #4 + 1 = 0
000002e0: NF := 31:31[#4 + 1]
000002ec: when ZF <> 1 goto %000002e5
000002ed: goto %000002e8

000002e8:
000002e9: R0 := 1
000002ef: goto %000002eb

000002e5:
000002e6: R0 := 0
000002ee: goto %000002eb

000002eb:
000002f4: call R30 with noreturn

00000535: sub register_tm_clones(register_tm_clones_result)
00000565: register_tm_clones_result :: out u32 = low:32[R0]

00000225:
00000228: R0 := 0x20000
0000022e: R0 := R0 + 0x30
00000233: R1 := 0x20000
00000239: R1 := R1 + 0x30
00000240: R1 := R1 + ~R0 + 1
00000246: R2 := 0.63:63[R1]
0000024d: R1 := R2 + (R1 ~>> 3)
00000253: R1 := extend:64[63:1[R1]]
00000259: when R1 = 0 goto %00000257
00000552: goto %00000331

00000331:
00000334: R2 := 0x1F000
0000033b: R2 := mem[R2 + 0xFE0, el]:u64
00000340: when R2 = 0 goto %00000257
00000553: goto %00000344

00000257:
0000025f: call R30 with noreturn

00000344:
00000348: R16 := R2
0000034d: call R16 with noreturn
