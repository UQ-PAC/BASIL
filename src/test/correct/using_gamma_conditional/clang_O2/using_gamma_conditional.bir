000005a5: program
00000573: sub __cxa_finalize(__cxa_finalize_result)
000005a6: __cxa_finalize_result :: out u32 = low:32[R0]

0000032d:
00000425: R16 := 0x11000
0000042c: R17 := mem[R16 + 8, el]:u64
00000432: R16 := R16 + 8
00000437: call R17 with noreturn

00000574: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
000005a7: __do_global_dtors_aux_result :: out u32 = low:32[R0]

00000262:
00000266: #3 := R31 - 0x20
0000026c: mem := mem with [#3, el]:u64 <- R29
00000272: mem := mem with [#3 + 8, el]:u64 <- R30
00000276: R31 := #3
0000027c: R29 := R31
00000284: mem := mem with [R31 + 0x10, el]:u64 <- R19
00000289: R19 := 0x11000
00000290: R0 := pad:64[mem[R19 + 0x30]]
00000297: when 31:0[R0] <> 0 goto %00000295
0000059b: goto %000002f6

000002f6:
000002f9: R0 := 0x10000
00000300: R0 := mem[R0 + 0xFC8, el]:u64
00000306: when R0 = 0 goto %00000304
0000059c: goto %0000031d

0000031d:
00000320: R0 := 0x11000
00000327: R0 := mem[R0 + 0x28, el]:u64
0000032c: R30 := 0x6F0
0000032f: call @__cxa_finalize with return %00000304

00000304:
0000030c: R30 := 0x6F4
0000030e: call @deregister_tm_clones with return %00000310

00000310:
00000313: R0 := 1
0000031b: mem := mem with [R19 + 0x30] <- 7:0[R0]
0000059d: goto %00000295

00000295:
0000029f: R19 := mem[R31 + 0x10, el]:u64
000002a6: R29 := mem[R31, el]:u64
000002ab: R30 := mem[R31 + 8, el]:u64
000002af: R31 := R31 + 0x20
000002b4: call R30 with noreturn

00000578: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
000005a8: __libc_start_main_main :: in u64 = R0
000005a9: __libc_start_main_arg2 :: in u32 = low:32[R1]
000005aa: __libc_start_main_arg3 :: in out u64 = R2
000005ab: __libc_start_main_auxv :: in out u64 = R3
000005ac: __libc_start_main_result :: out u32 = low:32[R0]

000001bb:
0000040f: R16 := 0x11000
00000416: R17 := mem[R16, el]:u64
0000041c: R16 := R16
00000421: call R17 with noreturn

00000579: sub _fini(_fini_result)
000005ad: _fini_result :: out u32 = low:32[R0]

0000001f:
00000025: #0 := R31 - 0x10
0000002b: mem := mem with [#0, el]:u64 <- R29
00000031: mem := mem with [#0 + 8, el]:u64 <- R30
00000035: R31 := #0
0000003b: R29 := R31
00000042: R29 := mem[R31, el]:u64
00000047: R30 := mem[R31 + 8, el]:u64
0000004b: R31 := R31 + 0x10
00000050: call R30 with noreturn

0000057a: sub _init(_init_result)
000005ae: _init_result :: out u32 = low:32[R0]

000004d0:
000004d6: #6 := R31 - 0x10
000004dc: mem := mem with [#6, el]:u64 <- R29
000004e2: mem := mem with [#6 + 8, el]:u64 <- R30
000004e6: R31 := #6
000004ec: R29 := R31
000004f1: R30 := 0x590
000004f3: call @call_weak_fn with return %000004f5

000004f5:
000004fa: R29 := mem[R31, el]:u64
000004ff: R30 := mem[R31 + 8, el]:u64
00000503: R31 := R31 + 0x10
00000508: call R30 with noreturn

0000057b: sub _start(_start_result)
000005af: _start_result :: out u32 = low:32[R0]

0000017c:
00000181: R29 := 0
00000186: R30 := 0
0000018c: R5 := R0
00000193: R1 := mem[R31, el]:u64
00000199: R2 := R31 + 8
0000019f: R6 := R31
000001a4: R0 := 0x10000
000001ab: R0 := mem[R0 + 0xFD8, el]:u64
000001b0: R3 := 0
000001b5: R4 := 0
000001ba: R30 := 0x630
000001bd: call @__libc_start_main with return %000001bf

000001bf:
000001c2: R30 := 0x634
000001c5: call @abort with return %0000059e

0000059e:
0000059f: call @call_weak_fn with noreturn

0000057e: sub abort()


000001c3:
00000451: R16 := 0x11000
00000458: R17 := mem[R16 + 0x18, el]:u64
0000045e: R16 := R16 + 0x18
00000463: call R17 with noreturn

0000057f: sub call_weak_fn(call_weak_fn_result)
000005b0: call_weak_fn_result :: out u32 = low:32[R0]

000001c7:
000001ca: R0 := 0x10000
000001d1: R0 := mem[R0 + 0xFD0, el]:u64
000001d7: when R0 = 0 goto %000001d5
000005a0: goto %0000036d

000001d5:
000001dd: call R30 with noreturn

0000036d:
00000370: goto @__gmon_start__

0000036e:
0000043b: R16 := 0x11000
00000442: R17 := mem[R16 + 0x10, el]:u64
00000448: R16 := R16 + 0x10
0000044d: call R17 with noreturn

00000581: sub deregister_tm_clones(deregister_tm_clones_result)
000005b1: deregister_tm_clones_result :: out u32 = low:32[R0]

000001e3:
000001e6: R0 := 0x11000
000001ec: R0 := R0 + 0x30
000001f1: R1 := 0x11000
000001f7: R1 := R1 + 0x30
000001fd: #1 := ~R0
00000202: #2 := R1 + ~R0
00000208: VF := extend:65[#2 + 1] <> extend:65[R1] + extend:65[#1] + 1
0000020e: CF := pad:65[#2 + 1] <> pad:65[R1] + pad:65[#1] + 1
00000212: ZF := #2 + 1 = 0
00000216: NF := 63:63[#2 + 1]
0000021c: when ZF goto %0000021a
000005a1: goto %0000034f

0000034f:
00000352: R1 := 0x10000
00000359: R1 := mem[R1 + 0xFC0, el]:u64
0000035e: when R1 = 0 goto %0000021a
000005a2: goto %00000362

0000021a:
00000222: call R30 with noreturn

00000362:
00000366: R16 := R1
0000036b: call R16 with noreturn

00000584: sub frame_dummy(frame_dummy_result)
000005b2: frame_dummy_result :: out u32 = low:32[R0]

000002ba:
000002bc: call @register_tm_clones with noreturn

00000585: sub main(main_argc, main_argv, main_result)
000005b3: main_argc :: in u32 = low:32[R0]
000005b4: main_argv :: in out u64 = R1
000005b5: main_result :: out u32 = low:32[R0]

000002be:
000002c1: R8 := 0x11000
000002c8: R8 := pad:64[mem[R8 + 0x34, el]:u32]
000002ce: #4 := 31:0[R8] - 1
000002d3: VF := extend:33[#4 + 1] <> extend:33[31:0[R8]] + 0
000002d8: CF := pad:33[#4 + 1] <> pad:33[31:0[R8]] - 0x100000000
000002dc: ZF := #4 + 1 = 0
000002e0: NF := 31:31[#4 + 1]
000002ec: when ZF <> 1 goto %000002e5
000002ed: goto %000002e8

000002e8:
000002e9: R0 := 1
000002ef: goto %000002eb

000002e5:
000002e6: R0 := 0
000002ee: goto %000002eb

000002eb:
000002f4: call R30 with noreturn

00000586: sub register_tm_clones(register_tm_clones_result)
000005b6: register_tm_clones_result :: out u32 = low:32[R0]

00000224:
00000227: R0 := 0x11000
0000022d: R0 := R0 + 0x30
00000232: R1 := 0x11000
00000238: R1 := R1 + 0x30
0000023f: R1 := R1 + ~R0 + 1
00000245: R2 := 0.63:63[R1]
0000024c: R1 := R2 + (R1 ~>> 3)
00000252: R1 := extend:64[63:1[R1]]
00000258: when R1 = 0 goto %00000256
000005a3: goto %00000331

00000331:
00000334: R2 := 0x10000
0000033b: R2 := mem[R2 + 0xFE0, el]:u64
00000340: when R2 = 0 goto %00000256
000005a4: goto %00000344

00000256:
0000025e: call R30 with noreturn

00000344:
00000348: R16 := R2
0000034d: call R16 with noreturn
