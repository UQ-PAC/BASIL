00000689: program
00000651: sub __cxa_finalize(__cxa_finalize_result)
0000068a: __cxa_finalize_result :: out u32 = low:32[R0]

00000458:
00000550: R16 := 0x20000
00000557: R17 := mem[R16 + 8, el]:u64
0000055d: R16 := R16 + 8
00000562: call R17 with noreturn

00000652: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
0000068b: __do_global_dtors_aux_result :: out u32 = low:32[R0]

000002dd:
000002e1: #3 := R31 - 0x20
000002e7: mem := mem with [#3, el]:u64 <- R29
000002ed: mem := mem with [#3 + 8, el]:u64 <- R30
000002f1: R31 := #3
000002f7: R29 := R31
000002ff: mem := mem with [R31 + 0x10, el]:u64 <- R19
00000304: R19 := 0x20000
0000030b: R0 := pad:64[mem[R19 + 0x30]]
00000311: when 0:0[R0] goto %0000030f
0000067d: goto %00000421

00000421:
00000424: R0 := 0x1F000
0000042b: R0 := mem[R0 + 0xFB8, el]:u64
00000431: when R0 = 0 goto %0000042f
0000067e: goto %00000448

00000448:
0000044b: R0 := 0x20000
00000452: R0 := mem[R0 + 0x28, el]:u64
00000457: R30 := 0x73C
0000045a: call @__cxa_finalize with return %0000042f

0000042f:
00000437: R30 := 0x740
00000439: call @deregister_tm_clones with return %0000043b

0000043b:
0000043e: R0 := 1
00000446: mem := mem with [R19 + 0x30] <- 7:0[R0]
0000067f: goto %0000030f

0000030f:
00000319: R19 := mem[R31 + 0x10, el]:u64
00000320: R29 := mem[R31, el]:u64
00000325: R30 := mem[R31 + 8, el]:u64
00000329: R31 := R31 + 0x20
0000032e: call R30 with noreturn

00000656: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
0000068c: __libc_start_main_main :: in u64 = R0
0000068d: __libc_start_main_arg2 :: in u32 = low:32[R1]
0000068e: __libc_start_main_arg3 :: in out u64 = R2
0000068f: __libc_start_main_auxv :: in out u64 = R3
00000690: __libc_start_main_result :: out u32 = low:32[R0]

00000230:
0000053a: R16 := 0x20000
00000541: R17 := mem[R16, el]:u64
00000547: R16 := R16
0000054c: call R17 with noreturn

00000657: sub _fini(_fini_result)
00000691: _fini_result :: out u32 = low:32[R0]

00000020:
00000026: #0 := R31 - 0x10
0000002c: mem := mem with [#0, el]:u64 <- R29
00000032: mem := mem with [#0 + 8, el]:u64 <- R30
00000036: R31 := #0
0000003c: R29 := R31
00000043: R29 := mem[R31, el]:u64
00000048: R30 := mem[R31 + 8, el]:u64
0000004c: R31 := R31 + 0x10
00000051: call R30 with noreturn

00000658: sub _init(_init_result)
00000692: _init_result :: out u32 = low:32[R0]

000005aa:
000005b0: #7 := R31 - 0x10
000005b6: mem := mem with [#7, el]:u64 <- R29
000005bc: mem := mem with [#7 + 8, el]:u64 <- R30
000005c0: R31 := #7
000005c6: R29 := R31
000005cb: R30 := 0x5C0
000005cd: call @call_weak_fn with return %000005cf

000005cf:
000005d4: R29 := mem[R31, el]:u64
000005d9: R30 := mem[R31 + 8, el]:u64
000005dd: R31 := R31 + 0x10
000005e2: call R30 with noreturn

00000659: sub _start(_start_result)
00000693: _start_result :: out u32 = low:32[R0]

000001f1:
000001f6: R29 := 0
000001fb: R30 := 0
00000201: R5 := R0
00000208: R1 := mem[R31, el]:u64
0000020e: R2 := R31 + 8
00000214: R6 := R31
00000219: R0 := 0x1F000
00000220: R0 := mem[R0 + 0xFD8, el]:u64
00000225: R3 := 0
0000022a: R4 := 0
0000022f: R30 := 0x670
00000232: call @__libc_start_main with return %00000234

00000234:
00000237: R30 := 0x674
0000023a: call @abort with return %00000680

00000680:
00000681: call @call_weak_fn with noreturn

0000065c: sub abort()


00000238:
0000057c: R16 := 0x20000
00000583: R17 := mem[R16 + 0x18, el]:u64
00000589: R16 := R16 + 0x18
0000058e: call R17 with noreturn

0000065d: sub call_weak_fn(call_weak_fn_result)
00000694: call_weak_fn_result :: out u32 = low:32[R0]

0000023c:
0000023f: R0 := 0x1F000
00000246: R0 := mem[R0 + 0xFC8, el]:u64
0000024c: when R0 = 0 goto %0000024a
00000682: goto %00000498

0000024a:
00000252: call R30 with noreturn

00000498:
0000049b: goto @__gmon_start__

00000499:
00000566: R16 := 0x20000
0000056d: R17 := mem[R16 + 0x10, el]:u64
00000573: R16 := R16 + 0x10
00000578: call R17 with noreturn

0000065f: sub deregister_tm_clones(deregister_tm_clones_result)
00000695: deregister_tm_clones_result :: out u32 = low:32[R0]

00000260:
00000263: R0 := 0x20000
00000269: R0 := R0 + 0x30
0000026e: R1 := 0x20000
00000274: R1 := R1 + 0x30
0000027a: #1 := ~R0
0000027f: #2 := R1 + ~R0
00000285: VF := extend:65[#2 + 1] <> extend:65[R1] + extend:65[#1] + 1
0000028b: CF := pad:65[#2 + 1] <> pad:65[R1] + pad:65[#1] + 1
0000028f: ZF := #2 + 1 = 0
00000293: NF := 63:63[#2 + 1]
00000299: when ZF goto %00000297
00000683: goto %0000047a

0000047a:
0000047d: R1 := 0x1F000
00000484: R1 := mem[R1 + 0xFB0, el]:u64
00000489: when R1 = 0 goto %00000297
00000684: goto %0000048d

00000297:
0000029f: call R30 with noreturn

0000048d:
00000491: R16 := R1
00000496: call R16 with noreturn

00000662: sub f(f_result)
00000696: f_result :: out u32 = low:32[R0]

0000033a:
0000033e: R31 := R31 - 0x10
00000346: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R0]
0000034e: mem := mem with [R31 + 8, el]:u32 <- 31:0[R1]
00000353: R0 := 0x1F000
0000035a: R0 := mem[R0 + 0xFD0, el]:u64
00000361: R0 := pad:64[mem[R0, el]:u32]
00000367: #4 := 31:0[R0]
0000036c: VF := 0
00000371: CF := pad:33[#4] <> pad:33[31:0[R0]] - 0x100000000
00000375: ZF := #4 = 0
00000379: NF := 31:31[#4]
0000037f: when ZF goto %0000037d
00000685: goto %00000416

0000037d:
00000387: R0 := pad:64[mem[R31 + 8, el]:u32]
00000686: goto %00000389

00000416:
0000041b: R0 := pad:64[mem[R31 + 0xC, el]:u32]
0000041f: goto %00000389

00000389:
0000038d: R31 := R31 + 0x10
00000392: call R30 with noreturn

00000665: sub frame_dummy(frame_dummy_result)
00000697: frame_dummy_result :: out u32 = low:32[R0]

00000336:
00000338: call @register_tm_clones with noreturn

00000666: sub main(main_argc, main_argv, main_result)
00000698: main_argc :: in u32 = low:32[R0]
00000699: main_argv :: in out u64 = R1
0000069a: main_result :: out u32 = low:32[R0]

00000394:
00000398: #5 := R31 - 0x10
0000039e: mem := mem with [#5, el]:u64 <- R29
000003a4: mem := mem with [#5 + 8, el]:u64 <- R30
000003a8: R31 := #5
000003ae: R29 := R31
000003b3: R0 := 0x1F000
000003ba: R0 := mem[R0 + 0xFD0, el]:u64
000003c1: mem := mem with [R0, el]:u32 <- 0
000003c6: R0 := 0x1F000
000003cd: R0 := mem[R0 + 0xFC0, el]:u64
000003d4: R0 := pad:64[mem[R0, el]:u32]
000003d9: R1 := 1
000003de: R30 := 0x7C0
000003e0: call @f with return %000003e2

000003e2:
000003e6: R1 := pad:64[31:0[R0]]
000003eb: R0 := 0x1F000
000003f2: R0 := mem[R0 + 0xFC0, el]:u64
000003fa: mem := mem with [R0, el]:u32 <- 31:0[R1]
000003ff: R0 := 0
00000406: R29 := mem[R31, el]:u64
0000040b: R30 := mem[R31 + 8, el]:u64
0000040f: R31 := R31 + 0x10
00000414: call R30 with noreturn

00000667: sub register_tm_clones(register_tm_clones_result)
0000069b: register_tm_clones_result :: out u32 = low:32[R0]

000002a1:
000002a4: R0 := 0x20000
000002aa: R0 := R0 + 0x30
000002af: R1 := 0x20000
000002b5: R1 := R1 + 0x30
000002bc: R1 := R1 + ~R0 + 1
000002c2: R2 := 0.63:63[R1]
000002c9: R1 := R2 + (R1 ~>> 3)
000002cf: R1 := extend:64[63:1[R1]]
000002d5: when R1 = 0 goto %000002d3
00000687: goto %0000045c

0000045c:
0000045f: R2 := 0x1F000
00000466: R2 := mem[R2 + 0xFE0, el]:u64
0000046b: when R2 = 0 goto %000002d3
00000688: goto %0000046f

000002d3:
000002db: call R30 with noreturn

0000046f:
00000473: R16 := R2
00000478: call R16 with noreturn
