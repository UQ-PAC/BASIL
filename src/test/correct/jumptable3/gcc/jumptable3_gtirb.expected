var {:extern} CF: bv1;
var {:extern} Gamma_CF: bool;
var {:extern} Gamma_NF: bool;
var {:extern} Gamma_R0: bool;
var {:extern} Gamma_R1: bool;
var {:extern} Gamma_R29: bool;
var {:extern} Gamma_R30: bool;
var {:extern} Gamma_R31: bool;
var {:extern} Gamma_VF: bool;
var {:extern} Gamma_ZF: bool;
var {:extern} Gamma_mem: [bv64]bool;
var {:extern} Gamma_stack: [bv64]bool;
var {:extern} NF: bv1;
var {:extern} R0: bv64;
var {:extern} R1: bv64;
var {:extern} R29: bv64;
var {:extern} R30: bv64;
var {:extern} R31: bv64;
var {:extern} VF: bv1;
var {:extern} ZF: bv1;
var {:extern} mem: [bv64]bv8;
var {:extern} stack: [bv64]bv8;
function {:extern} L(memory: [bv64]bv8, index: bv64) returns (bool) {
  false
}

function {:extern} {:bvbuiltin "bvadd"} bvadd32(bv32, bv32) returns (bv32);
function {:extern} {:bvbuiltin "bvadd"} bvadd33(bv33, bv33) returns (bv33);
function {:extern} {:bvbuiltin "bvadd"} bvadd64(bv64, bv64) returns (bv64);
function {:extern} {:bvbuiltin "bvcomp"} bvcomp32(bv32, bv32) returns (bv1);
function {:extern} {:bvbuiltin "bvcomp"} bvcomp33(bv33, bv33) returns (bv1);
function {:extern} {:bvbuiltin "bvnot"} bvnot1(bv1) returns (bv1);
function {:extern} gamma_load32(gammaMap: [bv64]bool, index: bv64) returns (bool) {
  (gammaMap[bvadd64(index, 3bv64)] && (gammaMap[bvadd64(index, 2bv64)] && (gammaMap[bvadd64(index, 1bv64)] && gammaMap[index])))
}

function {:extern} gamma_load64(gammaMap: [bv64]bool, index: bv64) returns (bool) {
  (gammaMap[bvadd64(index, 7bv64)] && (gammaMap[bvadd64(index, 6bv64)] && (gammaMap[bvadd64(index, 5bv64)] && (gammaMap[bvadd64(index, 4bv64)] && (gammaMap[bvadd64(index, 3bv64)] && (gammaMap[bvadd64(index, 2bv64)] && (gammaMap[bvadd64(index, 1bv64)] && gammaMap[index])))))))
}

function {:extern} gamma_store32(gammaMap: [bv64]bool, index: bv64, value: bool) returns ([bv64]bool) {
  gammaMap[index := value][bvadd64(index, 1bv64) := value][bvadd64(index, 2bv64) := value][bvadd64(index, 3bv64) := value]
}

function {:extern} gamma_store64(gammaMap: [bv64]bool, index: bv64, value: bool) returns ([bv64]bool) {
  gammaMap[index := value][bvadd64(index, 1bv64) := value][bvadd64(index, 2bv64) := value][bvadd64(index, 3bv64) := value][bvadd64(index, 4bv64) := value][bvadd64(index, 5bv64) := value][bvadd64(index, 6bv64) := value][bvadd64(index, 7bv64) := value]
}

function {:extern} memory_load32_le(memory: [bv64]bv8, index: bv64) returns (bv32) {
  (memory[bvadd64(index, 3bv64)] ++ (memory[bvadd64(index, 2bv64)] ++ (memory[bvadd64(index, 1bv64)] ++ memory[index])))
}

function {:extern} memory_load64_le(memory: [bv64]bv8, index: bv64) returns (bv64) {
  (memory[bvadd64(index, 7bv64)] ++ (memory[bvadd64(index, 6bv64)] ++ (memory[bvadd64(index, 5bv64)] ++ (memory[bvadd64(index, 4bv64)] ++ (memory[bvadd64(index, 3bv64)] ++ (memory[bvadd64(index, 2bv64)] ++ (memory[bvadd64(index, 1bv64)] ++ memory[index])))))))
}

function {:extern} memory_load8_le(memory: [bv64]bv8, index: bv64) returns (bv8) {
  memory[index]
}

function {:extern} memory_store32_le(memory: [bv64]bv8, index: bv64, value: bv32) returns ([bv64]bv8) {
  memory[index := value[8:0]][bvadd64(index, 1bv64) := value[16:8]][bvadd64(index, 2bv64) := value[24:16]][bvadd64(index, 3bv64) := value[32:24]]
}

function {:extern} memory_store64_le(memory: [bv64]bv8, index: bv64, value: bv64) returns ([bv64]bv8) {
  memory[index := value[8:0]][bvadd64(index, 1bv64) := value[16:8]][bvadd64(index, 2bv64) := value[24:16]][bvadd64(index, 3bv64) := value[32:24]][bvadd64(index, 4bv64) := value[40:32]][bvadd64(index, 5bv64) := value[48:40]][bvadd64(index, 6bv64) := value[56:48]][bvadd64(index, 7bv64) := value[64:56]]
}

function {:extern} {:bvbuiltin "sign_extend 1"} sign_extend1_32(bv32) returns (bv33);
function {:extern} {:bvbuiltin "zero_extend 1"} zero_extend1_32(bv32) returns (bv33);
function {:extern} {:bvbuiltin "zero_extend 32"} zero_extend32_32(bv32) returns (bv64);
procedure {:extern} rely();
  modifies Gamma_mem, mem;
  ensures (mem == old(mem));
  ensures (Gamma_mem == old(Gamma_mem));
  free ensures (memory_load8_le(mem, 2356bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 2357bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 2358bv64) == 2bv8);
  free ensures (memory_load8_le(mem, 2359bv64) == 0bv8);
  free ensures (memory_load64_le(mem, 69016bv64) == 1808bv64);
  free ensures (memory_load64_le(mem, 69024bv64) == 1728bv64);
  free ensures (memory_load64_le(mem, 69616bv64) == 1920bv64);
  free ensures (memory_load64_le(mem, 69640bv64) == 69640bv64);

procedure {:extern} rely_transitive();
  modifies Gamma_mem, mem;
  ensures (mem == old(mem));
  ensures (Gamma_mem == old(Gamma_mem));

implementation {:extern} rely_transitive()
{
  call rely();
  call rely();
}

procedure {:extern} rely_reflexive();

procedure {:extern} guarantee_reflexive();
  modifies Gamma_mem, mem;

procedure sub_seven();
  modifies Gamma_R0, Gamma_R1, Gamma_mem, R0, R1, mem;
  free requires (memory_load8_le(mem, 2356bv64) == 1bv8);
  free requires (memory_load8_le(mem, 2357bv64) == 0bv8);
  free requires (memory_load8_le(mem, 2358bv64) == 2bv8);
  free requires (memory_load8_le(mem, 2359bv64) == 0bv8);
  free requires (memory_load64_le(mem, 69016bv64) == 1808bv64);
  free requires (memory_load64_le(mem, 69024bv64) == 1728bv64);
  free requires (memory_load64_le(mem, 69616bv64) == 1920bv64);
  free requires (memory_load64_le(mem, 69640bv64) == 69640bv64);
  free ensures (memory_load8_le(mem, 2356bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 2357bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 2358bv64) == 2bv8);
  free ensures (memory_load8_le(mem, 2359bv64) == 0bv8);
  free ensures (memory_load64_le(mem, 69016bv64) == 1808bv64);
  free ensures (memory_load64_le(mem, 69024bv64) == 1728bv64);
  free ensures (memory_load64_le(mem, 69616bv64) == 1920bv64);
  free ensures (memory_load64_le(mem, 69640bv64) == 69640bv64);

implementation sub_seven()
{
  $sub_seven$__0__$mlDpa_xURGGpfZUXtmLQUA:
    assume {:captureState "$sub_seven$__0__$mlDpa_xURGGpfZUXtmLQUA"} true;
    R0, Gamma_R0 := 69632bv64, true;
    R0, Gamma_R0 := bvadd64(R0, 16bv64), Gamma_R0;
    call rely();
    R0, Gamma_R0 := zero_extend32_32(memory_load32_le(mem, R0)), (gamma_load32(Gamma_mem, R0) || L(mem, R0));
    R1, Gamma_R1 := zero_extend32_32(bvadd32(R0[32:0], 4294967289bv32)), Gamma_R0;
    R0, Gamma_R0 := 69632bv64, true;
    R0, Gamma_R0 := bvadd64(R0, 16bv64), Gamma_R0;
    call rely();
    assert (L(mem, R0) ==> Gamma_R1);
    mem, Gamma_mem := memory_store32_le(mem, R0, R1[32:0]), gamma_store32(Gamma_mem, R0, Gamma_R1);
    assume {:captureState "1908$0"} true;
    goto sub_seven_basil_return;
  sub_seven_basil_return:
    assume {:captureState "sub_seven_basil_return"} true;
    return;
}

procedure add_six();
  modifies Gamma_R0, Gamma_R1, Gamma_mem, R0, R1, mem;
  free requires (memory_load8_le(mem, 2356bv64) == 1bv8);
  free requires (memory_load8_le(mem, 2357bv64) == 0bv8);
  free requires (memory_load8_le(mem, 2358bv64) == 2bv8);
  free requires (memory_load8_le(mem, 2359bv64) == 0bv8);
  free requires (memory_load64_le(mem, 69016bv64) == 1808bv64);
  free requires (memory_load64_le(mem, 69024bv64) == 1728bv64);
  free requires (memory_load64_le(mem, 69616bv64) == 1920bv64);
  free requires (memory_load64_le(mem, 69640bv64) == 69640bv64);
  free ensures (memory_load8_le(mem, 2356bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 2357bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 2358bv64) == 2bv8);
  free ensures (memory_load8_le(mem, 2359bv64) == 0bv8);
  free ensures (memory_load64_le(mem, 69016bv64) == 1808bv64);
  free ensures (memory_load64_le(mem, 69024bv64) == 1728bv64);
  free ensures (memory_load64_le(mem, 69616bv64) == 1920bv64);
  free ensures (memory_load64_le(mem, 69640bv64) == 69640bv64);

implementation add_six()
{
  $add_six$__0__$0BEBLjTZRmehDA5GB3cdpA:
    assume {:captureState "$add_six$__0__$0BEBLjTZRmehDA5GB3cdpA"} true;
    R0, Gamma_R0 := 69632bv64, true;
    R0, Gamma_R0 := bvadd64(R0, 16bv64), Gamma_R0;
    call rely();
    R0, Gamma_R0 := zero_extend32_32(memory_load32_le(mem, R0)), (gamma_load32(Gamma_mem, R0) || L(mem, R0));
    R1, Gamma_R1 := zero_extend32_32(bvadd32(R0[32:0], 6bv32)), Gamma_R0;
    R0, Gamma_R0 := 69632bv64, true;
    R0, Gamma_R0 := bvadd64(R0, 16bv64), Gamma_R0;
    call rely();
    assert (L(mem, R0) ==> Gamma_R1);
    mem, Gamma_mem := memory_store32_le(mem, R0, R1[32:0]), gamma_store32(Gamma_mem, R0, Gamma_R1);
    assume {:captureState "1872$0"} true;
    goto add_six_basil_return;
  add_six_basil_return:
    assume {:captureState "add_six_basil_return"} true;
    return;
}

procedure main();
  modifies CF, Gamma_CF, Gamma_NF, Gamma_R0, Gamma_R1, Gamma_R29, Gamma_R30, Gamma_R31, Gamma_VF, Gamma_ZF, Gamma_mem, Gamma_stack, NF, R0, R1, R29, R30, R31, VF, ZF, mem, stack;
  requires (Gamma_R0 == true);
  free requires (memory_load64_le(mem, 69632bv64) == 0bv64);
  free requires (memory_load64_le(mem, 69640bv64) == 69640bv64);
  free requires (memory_load8_le(mem, 69648bv64) == 5bv8);
  free requires (memory_load8_le(mem, 69649bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69650bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69651bv64) == 0bv8);
  free requires (memory_load8_le(mem, 2356bv64) == 1bv8);
  free requires (memory_load8_le(mem, 2357bv64) == 0bv8);
  free requires (memory_load8_le(mem, 2358bv64) == 2bv8);
  free requires (memory_load8_le(mem, 2359bv64) == 0bv8);
  free requires (memory_load64_le(mem, 69016bv64) == 1808bv64);
  free requires (memory_load64_le(mem, 69024bv64) == 1728bv64);
  free requires (memory_load64_le(mem, 69616bv64) == 1920bv64);
  free requires (memory_load64_le(mem, 69640bv64) == 69640bv64);
  free ensures (Gamma_R29 == old(Gamma_R29));
  free ensures (Gamma_R31 == old(Gamma_R31));
  free ensures (R29 == old(R29));
  free ensures (R31 == old(R31));
  free ensures (memory_load8_le(mem, 2356bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 2357bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 2358bv64) == 2bv8);
  free ensures (memory_load8_le(mem, 2359bv64) == 0bv8);
  free ensures (memory_load64_le(mem, 69016bv64) == 1808bv64);
  free ensures (memory_load64_le(mem, 69024bv64) == 1728bv64);
  free ensures (memory_load64_le(mem, 69616bv64) == 1920bv64);
  free ensures (memory_load64_le(mem, 69640bv64) == 69640bv64);

implementation main()
{
  var Cse0__5$0$1: bv32;
  var Cse0__5$13$1: bv32;
  var Cse0__5$16$1: bv32;
  var Cse0__5$19$1: bv32;
  var Cse0__5$22$1: bv32;
  var Cse0__5$23$0: bv64;
  var Cse0__5$23$5: bv32;
  var Cse0__5$24$1: bv32;
  var Cse0__5$27$1: bv32;
  var Cse0__5$28$1: bv32;
  var Cse0__5$3$1: bv32;
  var Cse0__5$30$1: bv32;
  var Cse0__5$31$1: bv32;
  var Cse0__5$32$1: bv32;
  var Cse0__5$33$1: bv32;
  var Cse0__5$36$1: bv32;
  var Cse0__5$37$1: bv32;
  var Cse0__5$40$1: bv32;
  var Cse0__5$41$1: bv32;
  var Cse0__5$46$1: bv32;
  var Cse0__5$48$1: bv32;
  var Cse0__5$7$1: bv32;
  var Cse0__5$8$1: bv32;
  var Gamma_Cse0__5$0$1: bool;
  var Gamma_Cse0__5$13$1: bool;
  var Gamma_Cse0__5$16$1: bool;
  var Gamma_Cse0__5$19$1: bool;
  var Gamma_Cse0__5$22$1: bool;
  var Gamma_Cse0__5$23$0: bool;
  var Gamma_Cse0__5$23$5: bool;
  var Gamma_Cse0__5$24$1: bool;
  var Gamma_Cse0__5$27$1: bool;
  var Gamma_Cse0__5$28$1: bool;
  var Gamma_Cse0__5$3$1: bool;
  var Gamma_Cse0__5$30$1: bool;
  var Gamma_Cse0__5$31$1: bool;
  var Gamma_Cse0__5$32$1: bool;
  var Gamma_Cse0__5$33$1: bool;
  var Gamma_Cse0__5$36$1: bool;
  var Gamma_Cse0__5$37$1: bool;
  var Gamma_Cse0__5$40$1: bool;
  var Gamma_Cse0__5$41$1: bool;
  var Gamma_Cse0__5$46$1: bool;
  var Gamma_Cse0__5$48$1: bool;
  var Gamma_Cse0__5$7$1: bool;
  var Gamma_Cse0__5$8$1: bool;
  $main$__0__$z~0b6uidTS~mLwD0SIEhTA:
    assume {:captureState "$main$__0__$z~0b6uidTS~mLwD0SIEhTA"} true;
    Cse0__5$23$0, Gamma_Cse0__5$23$0 := bvadd64(R31, 18446744073709551584bv64), Gamma_R31;
    stack, Gamma_stack := memory_store64_le(stack, Cse0__5$23$0, R29), gamma_store64(Gamma_stack, Cse0__5$23$0, Gamma_R29);
    assume {:captureState "1920$1"} true;
    stack, Gamma_stack := memory_store64_le(stack, bvadd64(Cse0__5$23$0, 8bv64), R30), gamma_store64(Gamma_stack, bvadd64(Cse0__5$23$0, 8bv64), Gamma_R30);
    assume {:captureState "1920$2"} true;
    R31, Gamma_R31 := Cse0__5$23$0, Gamma_Cse0__5$23$0;
    R29, Gamma_R29 := R31, Gamma_R31;
    stack, Gamma_stack := memory_store32_le(stack, bvadd64(R31, 28bv64), R0[32:0]), gamma_store32(Gamma_stack, bvadd64(R31, 28bv64), Gamma_R0);
    assume {:captureState "1928$0"} true;
    stack, Gamma_stack := memory_store64_le(stack, bvadd64(R31, 16bv64), R1), gamma_store64(Gamma_stack, bvadd64(R31, 16bv64), Gamma_R1);
    assume {:captureState "1932$0"} true;
    R0, Gamma_R0 := zero_extend32_32(memory_load32_le(stack, bvadd64(R31, 28bv64))), gamma_load32(Gamma_stack, bvadd64(R31, 28bv64));
    Cse0__5$23$5, Gamma_Cse0__5$23$5 := bvadd32(R0[32:0], 4294967285bv32), Gamma_R0;
    VF, Gamma_VF := bvnot1(bvcomp33(sign_extend1_32(Cse0__5$23$5), bvadd33(sign_extend1_32(R0[32:0]), 8589934581bv33))), (Gamma_R0 && Gamma_Cse0__5$23$5);
    CF, Gamma_CF := bvnot1(bvcomp33(zero_extend1_32(Cse0__5$23$5), bvadd33(zero_extend1_32(R0[32:0]), 4294967285bv33))), (Gamma_R0 && Gamma_Cse0__5$23$5);
    ZF, Gamma_ZF := bvcomp32(Cse0__5$23$5, 0bv32), Gamma_Cse0__5$23$5;
    NF, Gamma_NF := Cse0__5$23$5[32:31], Gamma_Cse0__5$23$5;
    assert Gamma_ZF;
    goto $main$__0__$z~0b6uidTS~mLwD0SIEhTA_goto_$main$__46__$GEuY48xRT0uvUY35XyLVFA, $main$__0__$z~0b6uidTS~mLwD0SIEhTA_goto_$main$__1__$tipLQ_rqSE6NwoCTY8VBfQ;
  $main$__1__$tipLQ_rqSE6NwoCTY8VBfQ:
    assume {:captureState "$main$__1__$tipLQ_rqSE6NwoCTY8VBfQ"} true;
    R0, Gamma_R0 := zero_extend32_32(memory_load32_le(stack, bvadd64(R31, 28bv64))), gamma_load32(Gamma_stack, bvadd64(R31, 28bv64));
    Cse0__5$36$1, Gamma_Cse0__5$36$1 := bvadd32(R0[32:0], 4294967285bv32), Gamma_R0;
    VF, Gamma_VF := bvnot1(bvcomp33(sign_extend1_32(Cse0__5$36$1), bvadd33(sign_extend1_32(R0[32:0]), 8589934581bv33))), (Gamma_R0 && Gamma_Cse0__5$36$1);
    CF, Gamma_CF := bvnot1(bvcomp33(zero_extend1_32(Cse0__5$36$1), bvadd33(zero_extend1_32(R0[32:0]), 4294967285bv33))), (Gamma_R0 && Gamma_Cse0__5$36$1);
    ZF, Gamma_ZF := bvcomp32(Cse0__5$36$1, 0bv32), Gamma_Cse0__5$36$1;
    NF, Gamma_NF := Cse0__5$36$1[32:31], Gamma_Cse0__5$36$1;
    assert ((Gamma_NF && Gamma_VF) && Gamma_ZF);
    goto $main$__1__$tipLQ_rqSE6NwoCTY8VBfQ_goto_$main$__49__$f9R8ysUJTcueGxUsS6k5mA, $main$__1__$tipLQ_rqSE6NwoCTY8VBfQ_goto_$main$__2__$8HiVu0bxQUyIDw3W3xJUEg;
  $main$__2__$8HiVu0bxQUyIDw3W3xJUEg:
    assume {:captureState "$main$__2__$8HiVu0bxQUyIDw3W3xJUEg"} true;
    R0, Gamma_R0 := zero_extend32_32(memory_load32_le(stack, bvadd64(R31, 28bv64))), gamma_load32(Gamma_stack, bvadd64(R31, 28bv64));
    Cse0__5$28$1, Gamma_Cse0__5$28$1 := bvadd32(R0[32:0], 4294967286bv32), Gamma_R0;
    VF, Gamma_VF := bvnot1(bvcomp33(sign_extend1_32(Cse0__5$28$1), bvadd33(sign_extend1_32(R0[32:0]), 8589934582bv33))), (Gamma_R0 && Gamma_Cse0__5$28$1);
    CF, Gamma_CF := bvnot1(bvcomp33(zero_extend1_32(Cse0__5$28$1), bvadd33(zero_extend1_32(R0[32:0]), 4294967286bv33))), (Gamma_R0 && Gamma_Cse0__5$28$1);
    ZF, Gamma_ZF := bvcomp32(Cse0__5$28$1, 0bv32), Gamma_Cse0__5$28$1;
    NF, Gamma_NF := Cse0__5$28$1[32:31], Gamma_Cse0__5$28$1;
    assert Gamma_ZF;
    goto $main$__2__$8HiVu0bxQUyIDw3W3xJUEg_goto_$main$__43__$2RImeVlIRb2gC36HWMZI9A, $main$__2__$8HiVu0bxQUyIDw3W3xJUEg_goto_$main$__3__$LnOdFhw~SjCwp8D0DhVXZg;
  $main$__3__$LnOdFhw~SjCwp8D0DhVXZg:
    assume {:captureState "$main$__3__$LnOdFhw~SjCwp8D0DhVXZg"} true;
    R0, Gamma_R0 := zero_extend32_32(memory_load32_le(stack, bvadd64(R31, 28bv64))), gamma_load32(Gamma_stack, bvadd64(R31, 28bv64));
    Cse0__5$22$1, Gamma_Cse0__5$22$1 := bvadd32(R0[32:0], 4294967286bv32), Gamma_R0;
    VF, Gamma_VF := bvnot1(bvcomp33(sign_extend1_32(Cse0__5$22$1), bvadd33(sign_extend1_32(R0[32:0]), 8589934582bv33))), (Gamma_R0 && Gamma_Cse0__5$22$1);
    CF, Gamma_CF := bvnot1(bvcomp33(zero_extend1_32(Cse0__5$22$1), bvadd33(zero_extend1_32(R0[32:0]), 4294967286bv33))), (Gamma_R0 && Gamma_Cse0__5$22$1);
    ZF, Gamma_ZF := bvcomp32(Cse0__5$22$1, 0bv32), Gamma_Cse0__5$22$1;
    NF, Gamma_NF := Cse0__5$22$1[32:31], Gamma_Cse0__5$22$1;
    assert ((Gamma_NF && Gamma_VF) && Gamma_ZF);
    goto $main$__3__$LnOdFhw~SjCwp8D0DhVXZg_goto_$main$__49__$f9R8ysUJTcueGxUsS6k5mA, $main$__3__$LnOdFhw~SjCwp8D0DhVXZg_goto_$main$__4__$AeCHn0zUTQiT5Qkh3bFY3A;
  $main$__4__$AeCHn0zUTQiT5Qkh3bFY3A:
    assume {:captureState "$main$__4__$AeCHn0zUTQiT5Qkh3bFY3A"} true;
    R0, Gamma_R0 := zero_extend32_32(memory_load32_le(stack, bvadd64(R31, 28bv64))), gamma_load32(Gamma_stack, bvadd64(R31, 28bv64));
    Cse0__5$32$1, Gamma_Cse0__5$32$1 := bvadd32(R0[32:0], 4294967287bv32), Gamma_R0;
    VF, Gamma_VF := bvnot1(bvcomp33(sign_extend1_32(Cse0__5$32$1), bvadd33(sign_extend1_32(R0[32:0]), 8589934583bv33))), (Gamma_R0 && Gamma_Cse0__5$32$1);
    CF, Gamma_CF := bvnot1(bvcomp33(zero_extend1_32(Cse0__5$32$1), bvadd33(zero_extend1_32(R0[32:0]), 4294967287bv33))), (Gamma_R0 && Gamma_Cse0__5$32$1);
    ZF, Gamma_ZF := bvcomp32(Cse0__5$32$1, 0bv32), Gamma_Cse0__5$32$1;
    NF, Gamma_NF := Cse0__5$32$1[32:31], Gamma_Cse0__5$32$1;
    assert Gamma_ZF;
    goto $main$__4__$AeCHn0zUTQiT5Qkh3bFY3A_goto_$main$__40__$Qsv158XSRUWgkws9EPSHmg, $main$__4__$AeCHn0zUTQiT5Qkh3bFY3A_goto_$main$__5__$e74L~CUsRUW7m_7JI2Lgng;
  $main$__5__$e74L~CUsRUW7m_7JI2Lgng:
    assume {:captureState "$main$__5__$e74L~CUsRUW7m_7JI2Lgng"} true;
    R0, Gamma_R0 := zero_extend32_32(memory_load32_le(stack, bvadd64(R31, 28bv64))), gamma_load32(Gamma_stack, bvadd64(R31, 28bv64));
    Cse0__5$13$1, Gamma_Cse0__5$13$1 := bvadd32(R0[32:0], 4294967287bv32), Gamma_R0;
    VF, Gamma_VF := bvnot1(bvcomp33(sign_extend1_32(Cse0__5$13$1), bvadd33(sign_extend1_32(R0[32:0]), 8589934583bv33))), (Gamma_R0 && Gamma_Cse0__5$13$1);
    CF, Gamma_CF := bvnot1(bvcomp33(zero_extend1_32(Cse0__5$13$1), bvadd33(zero_extend1_32(R0[32:0]), 4294967287bv33))), (Gamma_R0 && Gamma_Cse0__5$13$1);
    ZF, Gamma_ZF := bvcomp32(Cse0__5$13$1, 0bv32), Gamma_Cse0__5$13$1;
    NF, Gamma_NF := Cse0__5$13$1[32:31], Gamma_Cse0__5$13$1;
    assert ((Gamma_NF && Gamma_VF) && Gamma_ZF);
    goto $main$__5__$e74L~CUsRUW7m_7JI2Lgng_goto_$main$__49__$f9R8ysUJTcueGxUsS6k5mA, $main$__5__$e74L~CUsRUW7m_7JI2Lgng_goto_$main$__6__$im9ml0SYRAWF9I9HlEPn6A;
  $main$__6__$im9ml0SYRAWF9I9HlEPn6A:
    assume {:captureState "$main$__6__$im9ml0SYRAWF9I9HlEPn6A"} true;
    R0, Gamma_R0 := zero_extend32_32(memory_load32_le(stack, bvadd64(R31, 28bv64))), gamma_load32(Gamma_stack, bvadd64(R31, 28bv64));
    Cse0__5$37$1, Gamma_Cse0__5$37$1 := bvadd32(R0[32:0], 4294967288bv32), Gamma_R0;
    VF, Gamma_VF := bvnot1(bvcomp33(sign_extend1_32(Cse0__5$37$1), bvadd33(sign_extend1_32(R0[32:0]), 8589934584bv33))), (Gamma_R0 && Gamma_Cse0__5$37$1);
    CF, Gamma_CF := bvnot1(bvcomp33(zero_extend1_32(Cse0__5$37$1), bvadd33(zero_extend1_32(R0[32:0]), 4294967288bv33))), (Gamma_R0 && Gamma_Cse0__5$37$1);
    ZF, Gamma_ZF := bvcomp32(Cse0__5$37$1, 0bv32), Gamma_Cse0__5$37$1;
    NF, Gamma_NF := Cse0__5$37$1[32:31], Gamma_Cse0__5$37$1;
    assert Gamma_ZF;
    goto $main$__6__$im9ml0SYRAWF9I9HlEPn6A_goto_$main$__37__$_L6ubIH8RFKyq3bxT1jMdw, $main$__6__$im9ml0SYRAWF9I9HlEPn6A_goto_$main$__7__$5mmugH1oQSSpEsELel3LkQ;
  $main$__7__$5mmugH1oQSSpEsELel3LkQ:
    assume {:captureState "$main$__7__$5mmugH1oQSSpEsELel3LkQ"} true;
    R0, Gamma_R0 := zero_extend32_32(memory_load32_le(stack, bvadd64(R31, 28bv64))), gamma_load32(Gamma_stack, bvadd64(R31, 28bv64));
    Cse0__5$0$1, Gamma_Cse0__5$0$1 := bvadd32(R0[32:0], 4294967288bv32), Gamma_R0;
    VF, Gamma_VF := bvnot1(bvcomp33(sign_extend1_32(Cse0__5$0$1), bvadd33(sign_extend1_32(R0[32:0]), 8589934584bv33))), (Gamma_R0 && Gamma_Cse0__5$0$1);
    CF, Gamma_CF := bvnot1(bvcomp33(zero_extend1_32(Cse0__5$0$1), bvadd33(zero_extend1_32(R0[32:0]), 4294967288bv33))), (Gamma_R0 && Gamma_Cse0__5$0$1);
    ZF, Gamma_ZF := bvcomp32(Cse0__5$0$1, 0bv32), Gamma_Cse0__5$0$1;
    NF, Gamma_NF := Cse0__5$0$1[32:31], Gamma_Cse0__5$0$1;
    assert ((Gamma_NF && Gamma_VF) && Gamma_ZF);
    goto $main$__7__$5mmugH1oQSSpEsELel3LkQ_goto_$main$__49__$f9R8ysUJTcueGxUsS6k5mA, $main$__7__$5mmugH1oQSSpEsELel3LkQ_goto_$main$__8__$XzrCdTGPTCOVNgFA8X2w4A;
  $main$__8__$XzrCdTGPTCOVNgFA8X2w4A:
    assume {:captureState "$main$__8__$XzrCdTGPTCOVNgFA8X2w4A"} true;
    R0, Gamma_R0 := zero_extend32_32(memory_load32_le(stack, bvadd64(R31, 28bv64))), gamma_load32(Gamma_stack, bvadd64(R31, 28bv64));
    Cse0__5$24$1, Gamma_Cse0__5$24$1 := bvadd32(R0[32:0], 4294967289bv32), Gamma_R0;
    VF, Gamma_VF := bvnot1(bvcomp33(sign_extend1_32(Cse0__5$24$1), bvadd33(sign_extend1_32(R0[32:0]), 8589934585bv33))), (Gamma_R0 && Gamma_Cse0__5$24$1);
    CF, Gamma_CF := bvnot1(bvcomp33(zero_extend1_32(Cse0__5$24$1), bvadd33(zero_extend1_32(R0[32:0]), 4294967289bv33))), (Gamma_R0 && Gamma_Cse0__5$24$1);
    ZF, Gamma_ZF := bvcomp32(Cse0__5$24$1, 0bv32), Gamma_Cse0__5$24$1;
    NF, Gamma_NF := Cse0__5$24$1[32:31], Gamma_Cse0__5$24$1;
    assert Gamma_ZF;
    goto $main$__8__$XzrCdTGPTCOVNgFA8X2w4A_goto_$main$__36__$3RwU8ymxQVy0R1kIGXk9kw, $main$__8__$XzrCdTGPTCOVNgFA8X2w4A_goto_$main$__9__$MCdd0lmpRUiDPemIUddH~w;
  $main$__9__$MCdd0lmpRUiDPemIUddH~w:
    assume {:captureState "$main$__9__$MCdd0lmpRUiDPemIUddH~w"} true;
    R0, Gamma_R0 := zero_extend32_32(memory_load32_le(stack, bvadd64(R31, 28bv64))), gamma_load32(Gamma_stack, bvadd64(R31, 28bv64));
    Cse0__5$46$1, Gamma_Cse0__5$46$1 := bvadd32(R0[32:0], 4294967289bv32), Gamma_R0;
    VF, Gamma_VF := bvnot1(bvcomp33(sign_extend1_32(Cse0__5$46$1), bvadd33(sign_extend1_32(R0[32:0]), 8589934585bv33))), (Gamma_R0 && Gamma_Cse0__5$46$1);
    CF, Gamma_CF := bvnot1(bvcomp33(zero_extend1_32(Cse0__5$46$1), bvadd33(zero_extend1_32(R0[32:0]), 4294967289bv33))), (Gamma_R0 && Gamma_Cse0__5$46$1);
    ZF, Gamma_ZF := bvcomp32(Cse0__5$46$1, 0bv32), Gamma_Cse0__5$46$1;
    NF, Gamma_NF := Cse0__5$46$1[32:31], Gamma_Cse0__5$46$1;
    assert ((Gamma_NF && Gamma_VF) && Gamma_ZF);
    goto $main$__9__$MCdd0lmpRUiDPemIUddH~w_goto_$main$__49__$f9R8ysUJTcueGxUsS6k5mA, $main$__9__$MCdd0lmpRUiDPemIUddH~w_goto_$main$__10__$00ZzCNGLTcODX0CNhRpVmQ;
  $main$__10__$00ZzCNGLTcODX0CNhRpVmQ:
    assume {:captureState "$main$__10__$00ZzCNGLTcODX0CNhRpVmQ"} true;
    R0, Gamma_R0 := zero_extend32_32(memory_load32_le(stack, bvadd64(R31, 28bv64))), gamma_load32(Gamma_stack, bvadd64(R31, 28bv64));
    Cse0__5$30$1, Gamma_Cse0__5$30$1 := bvadd32(R0[32:0], 4294967290bv32), Gamma_R0;
    VF, Gamma_VF := bvnot1(bvcomp33(sign_extend1_32(Cse0__5$30$1), bvadd33(sign_extend1_32(R0[32:0]), 8589934586bv33))), (Gamma_R0 && Gamma_Cse0__5$30$1);
    CF, Gamma_CF := bvnot1(bvcomp33(zero_extend1_32(Cse0__5$30$1), bvadd33(zero_extend1_32(R0[32:0]), 4294967290bv33))), (Gamma_R0 && Gamma_Cse0__5$30$1);
    ZF, Gamma_ZF := bvcomp32(Cse0__5$30$1, 0bv32), Gamma_Cse0__5$30$1;
    NF, Gamma_NF := Cse0__5$30$1[32:31], Gamma_Cse0__5$30$1;
    assert Gamma_ZF;
    goto $main$__10__$00ZzCNGLTcODX0CNhRpVmQ_goto_$main$__35__$vcLC1bBeTpiXgt~iHtKJbA, $main$__10__$00ZzCNGLTcODX0CNhRpVmQ_goto_$main$__11__$Tk~YSAWNQni8k2QXnx5qxg;
  $main$__11__$Tk~YSAWNQni8k2QXnx5qxg:
    assume {:captureState "$main$__11__$Tk~YSAWNQni8k2QXnx5qxg"} true;
    R0, Gamma_R0 := zero_extend32_32(memory_load32_le(stack, bvadd64(R31, 28bv64))), gamma_load32(Gamma_stack, bvadd64(R31, 28bv64));
    Cse0__5$27$1, Gamma_Cse0__5$27$1 := bvadd32(R0[32:0], 4294967290bv32), Gamma_R0;
    VF, Gamma_VF := bvnot1(bvcomp33(sign_extend1_32(Cse0__5$27$1), bvadd33(sign_extend1_32(R0[32:0]), 8589934586bv33))), (Gamma_R0 && Gamma_Cse0__5$27$1);
    CF, Gamma_CF := bvnot1(bvcomp33(zero_extend1_32(Cse0__5$27$1), bvadd33(zero_extend1_32(R0[32:0]), 4294967290bv33))), (Gamma_R0 && Gamma_Cse0__5$27$1);
    ZF, Gamma_ZF := bvcomp32(Cse0__5$27$1, 0bv32), Gamma_Cse0__5$27$1;
    NF, Gamma_NF := Cse0__5$27$1[32:31], Gamma_Cse0__5$27$1;
    assert ((Gamma_NF && Gamma_VF) && Gamma_ZF);
    goto $main$__11__$Tk~YSAWNQni8k2QXnx5qxg_goto_$main$__49__$f9R8ysUJTcueGxUsS6k5mA, $main$__11__$Tk~YSAWNQni8k2QXnx5qxg_goto_$main$__12__$VWXp6Fw6TGyZVFCTvS~MYQ;
  $main$__12__$VWXp6Fw6TGyZVFCTvS~MYQ:
    assume {:captureState "$main$__12__$VWXp6Fw6TGyZVFCTvS~MYQ"} true;
    R0, Gamma_R0 := zero_extend32_32(memory_load32_le(stack, bvadd64(R31, 28bv64))), gamma_load32(Gamma_stack, bvadd64(R31, 28bv64));
    Cse0__5$8$1, Gamma_Cse0__5$8$1 := bvadd32(R0[32:0], 4294967291bv32), Gamma_R0;
    VF, Gamma_VF := bvnot1(bvcomp33(sign_extend1_32(Cse0__5$8$1), bvadd33(sign_extend1_32(R0[32:0]), 8589934587bv33))), (Gamma_R0 && Gamma_Cse0__5$8$1);
    CF, Gamma_CF := bvnot1(bvcomp33(zero_extend1_32(Cse0__5$8$1), bvadd33(zero_extend1_32(R0[32:0]), 4294967291bv33))), (Gamma_R0 && Gamma_Cse0__5$8$1);
    ZF, Gamma_ZF := bvcomp32(Cse0__5$8$1, 0bv32), Gamma_Cse0__5$8$1;
    NF, Gamma_NF := Cse0__5$8$1[32:31], Gamma_Cse0__5$8$1;
    assert Gamma_ZF;
    goto $main$__12__$VWXp6Fw6TGyZVFCTvS~MYQ_goto_$main$__33__$Wi8y29iATRi4ST2Rbc0fSg, $main$__12__$VWXp6Fw6TGyZVFCTvS~MYQ_goto_$main$__13__$eNmSrnffR4GZB3z6CvypQw;
  $main$__13__$eNmSrnffR4GZB3z6CvypQw:
    assume {:captureState "$main$__13__$eNmSrnffR4GZB3z6CvypQw"} true;
    R0, Gamma_R0 := zero_extend32_32(memory_load32_le(stack, bvadd64(R31, 28bv64))), gamma_load32(Gamma_stack, bvadd64(R31, 28bv64));
    Cse0__5$7$1, Gamma_Cse0__5$7$1 := bvadd32(R0[32:0], 4294967291bv32), Gamma_R0;
    VF, Gamma_VF := bvnot1(bvcomp33(sign_extend1_32(Cse0__5$7$1), bvadd33(sign_extend1_32(R0[32:0]), 8589934587bv33))), (Gamma_R0 && Gamma_Cse0__5$7$1);
    CF, Gamma_CF := bvnot1(bvcomp33(zero_extend1_32(Cse0__5$7$1), bvadd33(zero_extend1_32(R0[32:0]), 4294967291bv33))), (Gamma_R0 && Gamma_Cse0__5$7$1);
    ZF, Gamma_ZF := bvcomp32(Cse0__5$7$1, 0bv32), Gamma_Cse0__5$7$1;
    NF, Gamma_NF := Cse0__5$7$1[32:31], Gamma_Cse0__5$7$1;
    assert ((Gamma_NF && Gamma_VF) && Gamma_ZF);
    goto $main$__13__$eNmSrnffR4GZB3z6CvypQw_goto_$main$__49__$f9R8ysUJTcueGxUsS6k5mA, $main$__13__$eNmSrnffR4GZB3z6CvypQw_goto_$main$__14__$DmQ1heVrQ~aZni_EKekQtQ;
  $main$__14__$DmQ1heVrQ~aZni_EKekQtQ:
    assume {:captureState "$main$__14__$DmQ1heVrQ~aZni_EKekQtQ"} true;
    R0, Gamma_R0 := zero_extend32_32(memory_load32_le(stack, bvadd64(R31, 28bv64))), gamma_load32(Gamma_stack, bvadd64(R31, 28bv64));
    Cse0__5$48$1, Gamma_Cse0__5$48$1 := bvadd32(R0[32:0], 4294967292bv32), Gamma_R0;
    VF, Gamma_VF := bvnot1(bvcomp33(sign_extend1_32(Cse0__5$48$1), bvadd33(sign_extend1_32(R0[32:0]), 8589934588bv33))), (Gamma_R0 && Gamma_Cse0__5$48$1);
    CF, Gamma_CF := bvnot1(bvcomp33(zero_extend1_32(Cse0__5$48$1), bvadd33(zero_extend1_32(R0[32:0]), 4294967292bv33))), (Gamma_R0 && Gamma_Cse0__5$48$1);
    ZF, Gamma_ZF := bvcomp32(Cse0__5$48$1, 0bv32), Gamma_Cse0__5$48$1;
    NF, Gamma_NF := Cse0__5$48$1[32:31], Gamma_Cse0__5$48$1;
    assert Gamma_ZF;
    goto $main$__14__$DmQ1heVrQ~aZni_EKekQtQ_goto_$main$__31__$wwjLZ6e5QWacwNhNAkwkMQ, $main$__14__$DmQ1heVrQ~aZni_EKekQtQ_goto_$main$__15__$1HKoFlqCQ_ycI_JGLbHe8A;
  $main$__15__$1HKoFlqCQ_ycI_JGLbHe8A:
    assume {:captureState "$main$__15__$1HKoFlqCQ_ycI_JGLbHe8A"} true;
    R0, Gamma_R0 := zero_extend32_32(memory_load32_le(stack, bvadd64(R31, 28bv64))), gamma_load32(Gamma_stack, bvadd64(R31, 28bv64));
    Cse0__5$40$1, Gamma_Cse0__5$40$1 := bvadd32(R0[32:0], 4294967292bv32), Gamma_R0;
    VF, Gamma_VF := bvnot1(bvcomp33(sign_extend1_32(Cse0__5$40$1), bvadd33(sign_extend1_32(R0[32:0]), 8589934588bv33))), (Gamma_R0 && Gamma_Cse0__5$40$1);
    CF, Gamma_CF := bvnot1(bvcomp33(zero_extend1_32(Cse0__5$40$1), bvadd33(zero_extend1_32(R0[32:0]), 4294967292bv33))), (Gamma_R0 && Gamma_Cse0__5$40$1);
    ZF, Gamma_ZF := bvcomp32(Cse0__5$40$1, 0bv32), Gamma_Cse0__5$40$1;
    NF, Gamma_NF := Cse0__5$40$1[32:31], Gamma_Cse0__5$40$1;
    assert ((Gamma_NF && Gamma_VF) && Gamma_ZF);
    goto $main$__15__$1HKoFlqCQ_ycI_JGLbHe8A_goto_$main$__49__$f9R8ysUJTcueGxUsS6k5mA, $main$__15__$1HKoFlqCQ_ycI_JGLbHe8A_goto_$main$__16__$oZIETcTiTaq1vW3hMnzCvw;
  $main$__16__$oZIETcTiTaq1vW3hMnzCvw:
    assume {:captureState "$main$__16__$oZIETcTiTaq1vW3hMnzCvw"} true;
    R0, Gamma_R0 := zero_extend32_32(memory_load32_le(stack, bvadd64(R31, 28bv64))), gamma_load32(Gamma_stack, bvadd64(R31, 28bv64));
    Cse0__5$41$1, Gamma_Cse0__5$41$1 := bvadd32(R0[32:0], 4294967293bv32), Gamma_R0;
    VF, Gamma_VF := bvnot1(bvcomp33(sign_extend1_32(Cse0__5$41$1), bvadd33(sign_extend1_32(R0[32:0]), 8589934589bv33))), (Gamma_R0 && Gamma_Cse0__5$41$1);
    CF, Gamma_CF := bvnot1(bvcomp33(zero_extend1_32(Cse0__5$41$1), bvadd33(zero_extend1_32(R0[32:0]), 4294967293bv33))), (Gamma_R0 && Gamma_Cse0__5$41$1);
    ZF, Gamma_ZF := bvcomp32(Cse0__5$41$1, 0bv32), Gamma_Cse0__5$41$1;
    NF, Gamma_NF := Cse0__5$41$1[32:31], Gamma_Cse0__5$41$1;
    assert Gamma_ZF;
    goto $main$__16__$oZIETcTiTaq1vW3hMnzCvw_goto_$main$__28__$yBKib8zISTC1~2_rqq9vDQ, $main$__16__$oZIETcTiTaq1vW3hMnzCvw_goto_$main$__17__$TWTSCH~RTtOtwLMkO8uOvQ;
  $main$__17__$TWTSCH~RTtOtwLMkO8uOvQ:
    assume {:captureState "$main$__17__$TWTSCH~RTtOtwLMkO8uOvQ"} true;
    R0, Gamma_R0 := zero_extend32_32(memory_load32_le(stack, bvadd64(R31, 28bv64))), gamma_load32(Gamma_stack, bvadd64(R31, 28bv64));
    Cse0__5$19$1, Gamma_Cse0__5$19$1 := bvadd32(R0[32:0], 4294967293bv32), Gamma_R0;
    VF, Gamma_VF := bvnot1(bvcomp33(sign_extend1_32(Cse0__5$19$1), bvadd33(sign_extend1_32(R0[32:0]), 8589934589bv33))), (Gamma_R0 && Gamma_Cse0__5$19$1);
    CF, Gamma_CF := bvnot1(bvcomp33(zero_extend1_32(Cse0__5$19$1), bvadd33(zero_extend1_32(R0[32:0]), 4294967293bv33))), (Gamma_R0 && Gamma_Cse0__5$19$1);
    ZF, Gamma_ZF := bvcomp32(Cse0__5$19$1, 0bv32), Gamma_Cse0__5$19$1;
    NF, Gamma_NF := Cse0__5$19$1[32:31], Gamma_Cse0__5$19$1;
    assert ((Gamma_NF && Gamma_VF) && Gamma_ZF);
    goto $main$__17__$TWTSCH~RTtOtwLMkO8uOvQ_goto_$main$__49__$f9R8ysUJTcueGxUsS6k5mA, $main$__17__$TWTSCH~RTtOtwLMkO8uOvQ_goto_$main$__18__$3fac1DiNRtuxuVWJsuF3TA;
  $main$__18__$3fac1DiNRtuxuVWJsuF3TA:
    assume {:captureState "$main$__18__$3fac1DiNRtuxuVWJsuF3TA"} true;
    R0, Gamma_R0 := zero_extend32_32(memory_load32_le(stack, bvadd64(R31, 28bv64))), gamma_load32(Gamma_stack, bvadd64(R31, 28bv64));
    Cse0__5$33$1, Gamma_Cse0__5$33$1 := bvadd32(R0[32:0], 4294967294bv32), Gamma_R0;
    VF, Gamma_VF := bvnot1(bvcomp33(sign_extend1_32(Cse0__5$33$1), bvadd33(sign_extend1_32(R0[32:0]), 8589934590bv33))), (Gamma_R0 && Gamma_Cse0__5$33$1);
    CF, Gamma_CF := bvnot1(bvcomp33(zero_extend1_32(Cse0__5$33$1), bvadd33(zero_extend1_32(R0[32:0]), 4294967294bv33))), (Gamma_R0 && Gamma_Cse0__5$33$1);
    ZF, Gamma_ZF := bvcomp32(Cse0__5$33$1, 0bv32), Gamma_Cse0__5$33$1;
    NF, Gamma_NF := Cse0__5$33$1[32:31], Gamma_Cse0__5$33$1;
    assert Gamma_ZF;
    goto $main$__18__$3fac1DiNRtuxuVWJsuF3TA_goto_$main$__26__$1pwdb48BTvG8WvQtDDu6OQ, $main$__18__$3fac1DiNRtuxuVWJsuF3TA_goto_$main$__19__$9wjyTh6wRMqCJ8r~LZPx3g;
  $main$__19__$9wjyTh6wRMqCJ8r~LZPx3g:
    assume {:captureState "$main$__19__$9wjyTh6wRMqCJ8r~LZPx3g"} true;
    R0, Gamma_R0 := zero_extend32_32(memory_load32_le(stack, bvadd64(R31, 28bv64))), gamma_load32(Gamma_stack, bvadd64(R31, 28bv64));
    Cse0__5$31$1, Gamma_Cse0__5$31$1 := bvadd32(R0[32:0], 4294967294bv32), Gamma_R0;
    VF, Gamma_VF := bvnot1(bvcomp33(sign_extend1_32(Cse0__5$31$1), bvadd33(sign_extend1_32(R0[32:0]), 8589934590bv33))), (Gamma_R0 && Gamma_Cse0__5$31$1);
    CF, Gamma_CF := bvnot1(bvcomp33(zero_extend1_32(Cse0__5$31$1), bvadd33(zero_extend1_32(R0[32:0]), 4294967294bv33))), (Gamma_R0 && Gamma_Cse0__5$31$1);
    ZF, Gamma_ZF := bvcomp32(Cse0__5$31$1, 0bv32), Gamma_Cse0__5$31$1;
    NF, Gamma_NF := Cse0__5$31$1[32:31], Gamma_Cse0__5$31$1;
    assert ((Gamma_NF && Gamma_VF) && Gamma_ZF);
    goto $main$__19__$9wjyTh6wRMqCJ8r~LZPx3g_goto_$main$__49__$f9R8ysUJTcueGxUsS6k5mA, $main$__19__$9wjyTh6wRMqCJ8r~LZPx3g_goto_$main$__20__$Du2yKE3TSh6XQ6Hgh5lrWw;
  $main$__20__$Du2yKE3TSh6XQ6Hgh5lrWw:
    assume {:captureState "$main$__20__$Du2yKE3TSh6XQ6Hgh5lrWw"} true;
    R0, Gamma_R0 := zero_extend32_32(memory_load32_le(stack, bvadd64(R31, 28bv64))), gamma_load32(Gamma_stack, bvadd64(R31, 28bv64));
    Cse0__5$3$1, Gamma_Cse0__5$3$1 := bvadd32(R0[32:0], 0bv32), Gamma_R0;
    VF, Gamma_VF := bvnot1(bvcomp32(Cse0__5$3$1, Cse0__5$3$1)), Gamma_Cse0__5$3$1;
    CF, Gamma_CF := bvnot1(bvcomp33(zero_extend1_32(Cse0__5$3$1), bvadd33(zero_extend1_32(R0[32:0]), 4294967296bv33))), (Gamma_R0 && Gamma_Cse0__5$3$1);
    ZF, Gamma_ZF := bvcomp32(Cse0__5$3$1, 0bv32), Gamma_Cse0__5$3$1;
    NF, Gamma_NF := Cse0__5$3$1[32:31], Gamma_Cse0__5$3$1;
    assert Gamma_ZF;
    goto $main$__20__$Du2yKE3TSh6XQ6Hgh5lrWw_goto_$main$__23__$ukYDkYLXQG2u6JKI6iN7YQ, $main$__20__$Du2yKE3TSh6XQ6Hgh5lrWw_goto_$main$__21__$ZoebrlT3QyWgd2bmuZMilA;
  $main$__21__$ZoebrlT3QyWgd2bmuZMilA:
    assume {:captureState "$main$__21__$ZoebrlT3QyWgd2bmuZMilA"} true;
    R0, Gamma_R0 := zero_extend32_32(memory_load32_le(stack, bvadd64(R31, 28bv64))), gamma_load32(Gamma_stack, bvadd64(R31, 28bv64));
    Cse0__5$16$1, Gamma_Cse0__5$16$1 := bvadd32(R0[32:0], 4294967295bv32), Gamma_R0;
    VF, Gamma_VF := bvnot1(bvcomp33(sign_extend1_32(Cse0__5$16$1), bvadd33(sign_extend1_32(R0[32:0]), 8589934591bv33))), (Gamma_R0 && Gamma_Cse0__5$16$1);
    CF, Gamma_CF := bvnot1(bvcomp33(zero_extend1_32(Cse0__5$16$1), bvadd33(zero_extend1_32(R0[32:0]), 4294967295bv33))), (Gamma_R0 && Gamma_Cse0__5$16$1);
    ZF, Gamma_ZF := bvcomp32(Cse0__5$16$1, 0bv32), Gamma_Cse0__5$16$1;
    NF, Gamma_NF := Cse0__5$16$1[32:31], Gamma_Cse0__5$16$1;
    assert Gamma_ZF;
    goto $main$__21__$ZoebrlT3QyWgd2bmuZMilA_goto_$main$__25__$I8FmmvyDSuO6S7JWVUe0yQ, $main$__21__$ZoebrlT3QyWgd2bmuZMilA_goto_$main$__22__$Kj2KzjNHTXqZnQDuiwwR5A;
  $main$__22__$Kj2KzjNHTXqZnQDuiwwR5A:
    assume {:captureState "$main$__22__$Kj2KzjNHTXqZnQDuiwwR5A"} true;
    goto $main$__49__$f9R8ysUJTcueGxUsS6k5mA;
  $main$__23__$ukYDkYLXQG2u6JKI6iN7YQ:
    assume {:captureState "$main$__23__$ukYDkYLXQG2u6JKI6iN7YQ"} true;
    R30, Gamma_R30 := 2208bv64, true;
    call add_two();
    goto $main$__24__$loW4FRJWQpuraCDDZiLRAw;
  $main$__24__$loW4FRJWQpuraCDDZiLRAw:
    assume {:captureState "$main$__24__$loW4FRJWQpuraCDDZiLRAw"} true;
    goto $main$__50__$ukzvLdCWTJOyN51KG0uWdA;
  $main$__25__$I8FmmvyDSuO6S7JWVUe0yQ:
    assume {:captureState "$main$__25__$I8FmmvyDSuO6S7JWVUe0yQ"} true;
    R30, Gamma_R30 := 2216bv64, true;
    call add_six();
    goto $main$__26__$1pwdb48BTvG8WvQtDDu6OQ;
  $main$__26__$1pwdb48BTvG8WvQtDDu6OQ:
    assume {:captureState "$main$__26__$1pwdb48BTvG8WvQtDDu6OQ"} true;
    R30, Gamma_R30 := 2220bv64, true;
    call sub_seven();
    goto $main$__27__$6aI0fNJ~R3O5JHnSlFemnA;
  $main$__27__$6aI0fNJ~R3O5JHnSlFemnA:
    assume {:captureState "$main$__27__$6aI0fNJ~R3O5JHnSlFemnA"} true;
    goto $main$__50__$ukzvLdCWTJOyN51KG0uWdA;
  $main$__28__$yBKib8zISTC1~2_rqq9vDQ:
    assume {:captureState "$main$__28__$yBKib8zISTC1~2_rqq9vDQ"} true;
    R30, Gamma_R30 := 2228bv64, true;
    call add_two();
    goto $main$__29__$Rl3GLKRwQA~LSWI9oUdszw;
  $main$__29__$Rl3GLKRwQA~LSWI9oUdszw:
    assume {:captureState "$main$__29__$Rl3GLKRwQA~LSWI9oUdszw"} true;
    R30, Gamma_R30 := 2232bv64, true;
    call sub_seven();
    goto $main$__30__$U9CfX1mOQd6yiRqNK~Y5qw;
  $main$__30__$U9CfX1mOQd6yiRqNK~Y5qw:
    assume {:captureState "$main$__30__$U9CfX1mOQd6yiRqNK~Y5qw"} true;
    goto $main$__50__$ukzvLdCWTJOyN51KG0uWdA;
  $main$__31__$wwjLZ6e5QWacwNhNAkwkMQ:
    assume {:captureState "$main$__31__$wwjLZ6e5QWacwNhNAkwkMQ"} true;
    R30, Gamma_R30 := 2240bv64, true;
    call add_six();
    goto $main$__32__$xofIjn1ART6c30YTAQkolg;
  $main$__32__$xofIjn1ART6c30YTAQkolg:
    assume {:captureState "$main$__32__$xofIjn1ART6c30YTAQkolg"} true;
    goto $main$__50__$ukzvLdCWTJOyN51KG0uWdA;
  $main$__33__$Wi8y29iATRi4ST2Rbc0fSg:
    assume {:captureState "$main$__33__$Wi8y29iATRi4ST2Rbc0fSg"} true;
    R30, Gamma_R30 := 2248bv64, true;
    call add_six();
    goto $main$__34__$bVLoc~MuS_ysTnyHQfGrEg;
  $main$__34__$bVLoc~MuS_ysTnyHQfGrEg:
    assume {:captureState "$main$__34__$bVLoc~MuS_ysTnyHQfGrEg"} true;
    R30, Gamma_R30 := 2252bv64, true;
    call add_two();
    goto $main$__35__$vcLC1bBeTpiXgt~iHtKJbA;
  $main$__35__$vcLC1bBeTpiXgt~iHtKJbA:
    assume {:captureState "$main$__35__$vcLC1bBeTpiXgt~iHtKJbA"} true;
    R30, Gamma_R30 := 2256bv64, true;
    call add_six();
    goto $main$__36__$3RwU8ymxQVy0R1kIGXk9kw;
  $main$__36__$3RwU8ymxQVy0R1kIGXk9kw:
    assume {:captureState "$main$__36__$3RwU8ymxQVy0R1kIGXk9kw"} true;
    R30, Gamma_R30 := 2260bv64, true;
    call sub_seven();
    goto $main$__37__$_L6ubIH8RFKyq3bxT1jMdw;
  $main$__37__$_L6ubIH8RFKyq3bxT1jMdw:
    assume {:captureState "$main$__37__$_L6ubIH8RFKyq3bxT1jMdw"} true;
    R30, Gamma_R30 := 2264bv64, true;
    call sub_seven();
    goto $main$__38__$hC4fTbf2So~ZTFbKyLb2Pw;
  $main$__38__$hC4fTbf2So~ZTFbKyLb2Pw:
    assume {:captureState "$main$__38__$hC4fTbf2So~ZTFbKyLb2Pw"} true;
    R30, Gamma_R30 := 2268bv64, true;
    call add_six();
    goto $main$__39__$NRLFNMJuS4CwH9K~wybuKw;
  $main$__39__$NRLFNMJuS4CwH9K~wybuKw:
    assume {:captureState "$main$__39__$NRLFNMJuS4CwH9K~wybuKw"} true;
    goto $main$__50__$ukzvLdCWTJOyN51KG0uWdA;
  $main$__40__$Qsv158XSRUWgkws9EPSHmg:
    assume {:captureState "$main$__40__$Qsv158XSRUWgkws9EPSHmg"} true;
    R30, Gamma_R30 := 2276bv64, true;
    call add_two();
    goto $main$__41__$bovTJt1LQFShqvYUHLNzzA;
  $main$__41__$bovTJt1LQFShqvYUHLNzzA:
    assume {:captureState "$main$__41__$bovTJt1LQFShqvYUHLNzzA"} true;
    R30, Gamma_R30 := 2280bv64, true;
    call add_six();
    goto $main$__42__$JGCjy~rYRTm_5xc~kDtcLg;
  $main$__42__$JGCjy~rYRTm_5xc~kDtcLg:
    assume {:captureState "$main$__42__$JGCjy~rYRTm_5xc~kDtcLg"} true;
    goto $main$__50__$ukzvLdCWTJOyN51KG0uWdA;
  $main$__43__$2RImeVlIRb2gC36HWMZI9A:
    assume {:captureState "$main$__43__$2RImeVlIRb2gC36HWMZI9A"} true;
    R30, Gamma_R30 := 2288bv64, true;
    call sub_seven();
    goto $main$__44__$GTSTE64CTY260KysccetMA;
  $main$__44__$GTSTE64CTY260KysccetMA:
    assume {:captureState "$main$__44__$GTSTE64CTY260KysccetMA"} true;
    R30, Gamma_R30 := 2292bv64, true;
    call add_two();
    goto $main$__45__$RH5b5VZEQBCBDYlIT7F3dw;
  $main$__45__$RH5b5VZEQBCBDYlIT7F3dw:
    assume {:captureState "$main$__45__$RH5b5VZEQBCBDYlIT7F3dw"} true;
    R30, Gamma_R30 := 2296bv64, true;
    call add_six();
    goto $main$__46__$GEuY48xRT0uvUY35XyLVFA;
  $main$__46__$GEuY48xRT0uvUY35XyLVFA:
    assume {:captureState "$main$__46__$GEuY48xRT0uvUY35XyLVFA"} true;
    R30, Gamma_R30 := 2228bv64, true;
    call sub_seven();
    goto $main$__47__$2Okgcr9wSiW8qL9bMnevKQ;
  $main$__47__$2Okgcr9wSiW8qL9bMnevKQ:
    assume {:captureState "$main$__47__$2Okgcr9wSiW8qL9bMnevKQ"} true;
    R30, Gamma_R30 := 2304bv64, true;
    call add_two();
    goto $main$__48__$v_2uPbquRSCCtcW7Gt00~g;
  $main$__48__$v_2uPbquRSCCtcW7Gt00~g:
    assume {:captureState "$main$__48__$v_2uPbquRSCCtcW7Gt00~g"} true;
    goto $main$__50__$ukzvLdCWTJOyN51KG0uWdA;
  $main$__49__$f9R8ysUJTcueGxUsS6k5mA:
    assume {:captureState "$main$__49__$f9R8ysUJTcueGxUsS6k5mA"} true;
    R0, Gamma_R0 := 1bv64, true;
    goto $main$__51__$aUYLZxrsS46VVmWDE2soXw;
  $main$__50__$ukzvLdCWTJOyN51KG0uWdA:
    assume {:captureState "$main$__50__$ukzvLdCWTJOyN51KG0uWdA"} true;
    R0, Gamma_R0 := 69632bv64, true;
    R0, Gamma_R0 := bvadd64(R0, 16bv64), Gamma_R0;
    call rely();
    R0, Gamma_R0 := zero_extend32_32(memory_load32_le(mem, R0)), (gamma_load32(Gamma_mem, R0) || L(mem, R0));
    goto $main$__51__$aUYLZxrsS46VVmWDE2soXw;
  $main$__51__$aUYLZxrsS46VVmWDE2soXw:
    assume {:captureState "$main$__51__$aUYLZxrsS46VVmWDE2soXw"} true;
    R29, Gamma_R29 := memory_load64_le(stack, R31), gamma_load64(Gamma_stack, R31);
    R30, Gamma_R30 := memory_load64_le(stack, bvadd64(R31, 8bv64)), gamma_load64(Gamma_stack, bvadd64(R31, 8bv64));
    R31, Gamma_R31 := bvadd64(R31, 32bv64), Gamma_R31;
    goto main_basil_return;
  $main$__7__$5mmugH1oQSSpEsELel3LkQ_goto_$main$__49__$f9R8ysUJTcueGxUsS6k5mA:
    assume {:captureState "$main$__7__$5mmugH1oQSSpEsELel3LkQ_goto_$main$__49__$f9R8ysUJTcueGxUsS6k5mA"} true;
    assume ((NF == VF) && (ZF == 0bv1));
    goto $main$__49__$f9R8ysUJTcueGxUsS6k5mA;
  $main$__7__$5mmugH1oQSSpEsELel3LkQ_goto_$main$__8__$XzrCdTGPTCOVNgFA8X2w4A:
    assume {:captureState "$main$__7__$5mmugH1oQSSpEsELel3LkQ_goto_$main$__8__$XzrCdTGPTCOVNgFA8X2w4A"} true;
    assume (!((NF == VF) && (ZF == 0bv1)));
    goto $main$__8__$XzrCdTGPTCOVNgFA8X2w4A;
  $main$__20__$Du2yKE3TSh6XQ6Hgh5lrWw_goto_$main$__23__$ukYDkYLXQG2u6JKI6iN7YQ:
    assume {:captureState "$main$__20__$Du2yKE3TSh6XQ6Hgh5lrWw_goto_$main$__23__$ukYDkYLXQG2u6JKI6iN7YQ"} true;
    assume (ZF == 1bv1);
    goto $main$__23__$ukYDkYLXQG2u6JKI6iN7YQ;
  $main$__20__$Du2yKE3TSh6XQ6Hgh5lrWw_goto_$main$__21__$ZoebrlT3QyWgd2bmuZMilA:
    assume {:captureState "$main$__20__$Du2yKE3TSh6XQ6Hgh5lrWw_goto_$main$__21__$ZoebrlT3QyWgd2bmuZMilA"} true;
    assume (!(ZF == 1bv1));
    goto $main$__21__$ZoebrlT3QyWgd2bmuZMilA;
  $main$__13__$eNmSrnffR4GZB3z6CvypQw_goto_$main$__49__$f9R8ysUJTcueGxUsS6k5mA:
    assume {:captureState "$main$__13__$eNmSrnffR4GZB3z6CvypQw_goto_$main$__49__$f9R8ysUJTcueGxUsS6k5mA"} true;
    assume ((NF == VF) && (ZF == 0bv1));
    goto $main$__49__$f9R8ysUJTcueGxUsS6k5mA;
  $main$__13__$eNmSrnffR4GZB3z6CvypQw_goto_$main$__14__$DmQ1heVrQ~aZni_EKekQtQ:
    assume {:captureState "$main$__13__$eNmSrnffR4GZB3z6CvypQw_goto_$main$__14__$DmQ1heVrQ~aZni_EKekQtQ"} true;
    assume (!((NF == VF) && (ZF == 0bv1)));
    goto $main$__14__$DmQ1heVrQ~aZni_EKekQtQ;
  $main$__12__$VWXp6Fw6TGyZVFCTvS~MYQ_goto_$main$__33__$Wi8y29iATRi4ST2Rbc0fSg:
    assume {:captureState "$main$__12__$VWXp6Fw6TGyZVFCTvS~MYQ_goto_$main$__33__$Wi8y29iATRi4ST2Rbc0fSg"} true;
    assume (ZF == 1bv1);
    goto $main$__33__$Wi8y29iATRi4ST2Rbc0fSg;
  $main$__12__$VWXp6Fw6TGyZVFCTvS~MYQ_goto_$main$__13__$eNmSrnffR4GZB3z6CvypQw:
    assume {:captureState "$main$__12__$VWXp6Fw6TGyZVFCTvS~MYQ_goto_$main$__13__$eNmSrnffR4GZB3z6CvypQw"} true;
    assume (!(ZF == 1bv1));
    goto $main$__13__$eNmSrnffR4GZB3z6CvypQw;
  $main$__5__$e74L~CUsRUW7m_7JI2Lgng_goto_$main$__49__$f9R8ysUJTcueGxUsS6k5mA:
    assume {:captureState "$main$__5__$e74L~CUsRUW7m_7JI2Lgng_goto_$main$__49__$f9R8ysUJTcueGxUsS6k5mA"} true;
    assume ((NF == VF) && (ZF == 0bv1));
    goto $main$__49__$f9R8ysUJTcueGxUsS6k5mA;
  $main$__5__$e74L~CUsRUW7m_7JI2Lgng_goto_$main$__6__$im9ml0SYRAWF9I9HlEPn6A:
    assume {:captureState "$main$__5__$e74L~CUsRUW7m_7JI2Lgng_goto_$main$__6__$im9ml0SYRAWF9I9HlEPn6A"} true;
    assume (!((NF == VF) && (ZF == 0bv1)));
    goto $main$__6__$im9ml0SYRAWF9I9HlEPn6A;
  $main$__21__$ZoebrlT3QyWgd2bmuZMilA_goto_$main$__25__$I8FmmvyDSuO6S7JWVUe0yQ:
    assume {:captureState "$main$__21__$ZoebrlT3QyWgd2bmuZMilA_goto_$main$__25__$I8FmmvyDSuO6S7JWVUe0yQ"} true;
    assume (ZF == 1bv1);
    goto $main$__25__$I8FmmvyDSuO6S7JWVUe0yQ;
  $main$__21__$ZoebrlT3QyWgd2bmuZMilA_goto_$main$__22__$Kj2KzjNHTXqZnQDuiwwR5A:
    assume {:captureState "$main$__21__$ZoebrlT3QyWgd2bmuZMilA_goto_$main$__22__$Kj2KzjNHTXqZnQDuiwwR5A"} true;
    assume (!(ZF == 1bv1));
    goto $main$__22__$Kj2KzjNHTXqZnQDuiwwR5A;
  $main$__17__$TWTSCH~RTtOtwLMkO8uOvQ_goto_$main$__49__$f9R8ysUJTcueGxUsS6k5mA:
    assume {:captureState "$main$__17__$TWTSCH~RTtOtwLMkO8uOvQ_goto_$main$__49__$f9R8ysUJTcueGxUsS6k5mA"} true;
    assume ((NF == VF) && (ZF == 0bv1));
    goto $main$__49__$f9R8ysUJTcueGxUsS6k5mA;
  $main$__17__$TWTSCH~RTtOtwLMkO8uOvQ_goto_$main$__18__$3fac1DiNRtuxuVWJsuF3TA:
    assume {:captureState "$main$__17__$TWTSCH~RTtOtwLMkO8uOvQ_goto_$main$__18__$3fac1DiNRtuxuVWJsuF3TA"} true;
    assume (!((NF == VF) && (ZF == 0bv1)));
    goto $main$__18__$3fac1DiNRtuxuVWJsuF3TA;
  $main$__3__$LnOdFhw~SjCwp8D0DhVXZg_goto_$main$__49__$f9R8ysUJTcueGxUsS6k5mA:
    assume {:captureState "$main$__3__$LnOdFhw~SjCwp8D0DhVXZg_goto_$main$__49__$f9R8ysUJTcueGxUsS6k5mA"} true;
    assume ((NF == VF) && (ZF == 0bv1));
    goto $main$__49__$f9R8ysUJTcueGxUsS6k5mA;
  $main$__3__$LnOdFhw~SjCwp8D0DhVXZg_goto_$main$__4__$AeCHn0zUTQiT5Qkh3bFY3A:
    assume {:captureState "$main$__3__$LnOdFhw~SjCwp8D0DhVXZg_goto_$main$__4__$AeCHn0zUTQiT5Qkh3bFY3A"} true;
    assume (!((NF == VF) && (ZF == 0bv1)));
    goto $main$__4__$AeCHn0zUTQiT5Qkh3bFY3A;
  $main$__0__$z~0b6uidTS~mLwD0SIEhTA_goto_$main$__46__$GEuY48xRT0uvUY35XyLVFA:
    assume {:captureState "$main$__0__$z~0b6uidTS~mLwD0SIEhTA_goto_$main$__46__$GEuY48xRT0uvUY35XyLVFA"} true;
    assume (ZF == 1bv1);
    goto $main$__46__$GEuY48xRT0uvUY35XyLVFA;
  $main$__0__$z~0b6uidTS~mLwD0SIEhTA_goto_$main$__1__$tipLQ_rqSE6NwoCTY8VBfQ:
    assume {:captureState "$main$__0__$z~0b6uidTS~mLwD0SIEhTA_goto_$main$__1__$tipLQ_rqSE6NwoCTY8VBfQ"} true;
    assume (!(ZF == 1bv1));
    goto $main$__1__$tipLQ_rqSE6NwoCTY8VBfQ;
  $main$__8__$XzrCdTGPTCOVNgFA8X2w4A_goto_$main$__36__$3RwU8ymxQVy0R1kIGXk9kw:
    assume {:captureState "$main$__8__$XzrCdTGPTCOVNgFA8X2w4A_goto_$main$__36__$3RwU8ymxQVy0R1kIGXk9kw"} true;
    assume (ZF == 1bv1);
    goto $main$__36__$3RwU8ymxQVy0R1kIGXk9kw;
  $main$__8__$XzrCdTGPTCOVNgFA8X2w4A_goto_$main$__9__$MCdd0lmpRUiDPemIUddH~w:
    assume {:captureState "$main$__8__$XzrCdTGPTCOVNgFA8X2w4A_goto_$main$__9__$MCdd0lmpRUiDPemIUddH~w"} true;
    assume (!(ZF == 1bv1));
    goto $main$__9__$MCdd0lmpRUiDPemIUddH~w;
  $main$__11__$Tk~YSAWNQni8k2QXnx5qxg_goto_$main$__49__$f9R8ysUJTcueGxUsS6k5mA:
    assume {:captureState "$main$__11__$Tk~YSAWNQni8k2QXnx5qxg_goto_$main$__49__$f9R8ysUJTcueGxUsS6k5mA"} true;
    assume ((NF == VF) && (ZF == 0bv1));
    goto $main$__49__$f9R8ysUJTcueGxUsS6k5mA;
  $main$__11__$Tk~YSAWNQni8k2QXnx5qxg_goto_$main$__12__$VWXp6Fw6TGyZVFCTvS~MYQ:
    assume {:captureState "$main$__11__$Tk~YSAWNQni8k2QXnx5qxg_goto_$main$__12__$VWXp6Fw6TGyZVFCTvS~MYQ"} true;
    assume (!((NF == VF) && (ZF == 0bv1)));
    goto $main$__12__$VWXp6Fw6TGyZVFCTvS~MYQ;
  $main$__2__$8HiVu0bxQUyIDw3W3xJUEg_goto_$main$__43__$2RImeVlIRb2gC36HWMZI9A:
    assume {:captureState "$main$__2__$8HiVu0bxQUyIDw3W3xJUEg_goto_$main$__43__$2RImeVlIRb2gC36HWMZI9A"} true;
    assume (ZF == 1bv1);
    goto $main$__43__$2RImeVlIRb2gC36HWMZI9A;
  $main$__2__$8HiVu0bxQUyIDw3W3xJUEg_goto_$main$__3__$LnOdFhw~SjCwp8D0DhVXZg:
    assume {:captureState "$main$__2__$8HiVu0bxQUyIDw3W3xJUEg_goto_$main$__3__$LnOdFhw~SjCwp8D0DhVXZg"} true;
    assume (!(ZF == 1bv1));
    goto $main$__3__$LnOdFhw~SjCwp8D0DhVXZg;
  $main$__10__$00ZzCNGLTcODX0CNhRpVmQ_goto_$main$__35__$vcLC1bBeTpiXgt~iHtKJbA:
    assume {:captureState "$main$__10__$00ZzCNGLTcODX0CNhRpVmQ_goto_$main$__35__$vcLC1bBeTpiXgt~iHtKJbA"} true;
    assume (ZF == 1bv1);
    goto $main$__35__$vcLC1bBeTpiXgt~iHtKJbA;
  $main$__10__$00ZzCNGLTcODX0CNhRpVmQ_goto_$main$__11__$Tk~YSAWNQni8k2QXnx5qxg:
    assume {:captureState "$main$__10__$00ZzCNGLTcODX0CNhRpVmQ_goto_$main$__11__$Tk~YSAWNQni8k2QXnx5qxg"} true;
    assume (!(ZF == 1bv1));
    goto $main$__11__$Tk~YSAWNQni8k2QXnx5qxg;
  $main$__19__$9wjyTh6wRMqCJ8r~LZPx3g_goto_$main$__49__$f9R8ysUJTcueGxUsS6k5mA:
    assume {:captureState "$main$__19__$9wjyTh6wRMqCJ8r~LZPx3g_goto_$main$__49__$f9R8ysUJTcueGxUsS6k5mA"} true;
    assume ((NF == VF) && (ZF == 0bv1));
    goto $main$__49__$f9R8ysUJTcueGxUsS6k5mA;
  $main$__19__$9wjyTh6wRMqCJ8r~LZPx3g_goto_$main$__20__$Du2yKE3TSh6XQ6Hgh5lrWw:
    assume {:captureState "$main$__19__$9wjyTh6wRMqCJ8r~LZPx3g_goto_$main$__20__$Du2yKE3TSh6XQ6Hgh5lrWw"} true;
    assume (!((NF == VF) && (ZF == 0bv1)));
    goto $main$__20__$Du2yKE3TSh6XQ6Hgh5lrWw;
  $main$__4__$AeCHn0zUTQiT5Qkh3bFY3A_goto_$main$__40__$Qsv158XSRUWgkws9EPSHmg:
    assume {:captureState "$main$__4__$AeCHn0zUTQiT5Qkh3bFY3A_goto_$main$__40__$Qsv158XSRUWgkws9EPSHmg"} true;
    assume (ZF == 1bv1);
    goto $main$__40__$Qsv158XSRUWgkws9EPSHmg;
  $main$__4__$AeCHn0zUTQiT5Qkh3bFY3A_goto_$main$__5__$e74L~CUsRUW7m_7JI2Lgng:
    assume {:captureState "$main$__4__$AeCHn0zUTQiT5Qkh3bFY3A_goto_$main$__5__$e74L~CUsRUW7m_7JI2Lgng"} true;
    assume (!(ZF == 1bv1));
    goto $main$__5__$e74L~CUsRUW7m_7JI2Lgng;
  $main$__18__$3fac1DiNRtuxuVWJsuF3TA_goto_$main$__26__$1pwdb48BTvG8WvQtDDu6OQ:
    assume {:captureState "$main$__18__$3fac1DiNRtuxuVWJsuF3TA_goto_$main$__26__$1pwdb48BTvG8WvQtDDu6OQ"} true;
    assume (ZF == 1bv1);
    goto $main$__26__$1pwdb48BTvG8WvQtDDu6OQ;
  $main$__18__$3fac1DiNRtuxuVWJsuF3TA_goto_$main$__19__$9wjyTh6wRMqCJ8r~LZPx3g:
    assume {:captureState "$main$__18__$3fac1DiNRtuxuVWJsuF3TA_goto_$main$__19__$9wjyTh6wRMqCJ8r~LZPx3g"} true;
    assume (!(ZF == 1bv1));
    goto $main$__19__$9wjyTh6wRMqCJ8r~LZPx3g;
  $main$__1__$tipLQ_rqSE6NwoCTY8VBfQ_goto_$main$__49__$f9R8ysUJTcueGxUsS6k5mA:
    assume {:captureState "$main$__1__$tipLQ_rqSE6NwoCTY8VBfQ_goto_$main$__49__$f9R8ysUJTcueGxUsS6k5mA"} true;
    assume ((NF == VF) && (ZF == 0bv1));
    goto $main$__49__$f9R8ysUJTcueGxUsS6k5mA;
  $main$__1__$tipLQ_rqSE6NwoCTY8VBfQ_goto_$main$__2__$8HiVu0bxQUyIDw3W3xJUEg:
    assume {:captureState "$main$__1__$tipLQ_rqSE6NwoCTY8VBfQ_goto_$main$__2__$8HiVu0bxQUyIDw3W3xJUEg"} true;
    assume (!((NF == VF) && (ZF == 0bv1)));
    goto $main$__2__$8HiVu0bxQUyIDw3W3xJUEg;
  $main$__6__$im9ml0SYRAWF9I9HlEPn6A_goto_$main$__37__$_L6ubIH8RFKyq3bxT1jMdw:
    assume {:captureState "$main$__6__$im9ml0SYRAWF9I9HlEPn6A_goto_$main$__37__$_L6ubIH8RFKyq3bxT1jMdw"} true;
    assume (ZF == 1bv1);
    goto $main$__37__$_L6ubIH8RFKyq3bxT1jMdw;
  $main$__6__$im9ml0SYRAWF9I9HlEPn6A_goto_$main$__7__$5mmugH1oQSSpEsELel3LkQ:
    assume {:captureState "$main$__6__$im9ml0SYRAWF9I9HlEPn6A_goto_$main$__7__$5mmugH1oQSSpEsELel3LkQ"} true;
    assume (!(ZF == 1bv1));
    goto $main$__7__$5mmugH1oQSSpEsELel3LkQ;
  $main$__15__$1HKoFlqCQ_ycI_JGLbHe8A_goto_$main$__49__$f9R8ysUJTcueGxUsS6k5mA:
    assume {:captureState "$main$__15__$1HKoFlqCQ_ycI_JGLbHe8A_goto_$main$__49__$f9R8ysUJTcueGxUsS6k5mA"} true;
    assume ((NF == VF) && (ZF == 0bv1));
    goto $main$__49__$f9R8ysUJTcueGxUsS6k5mA;
  $main$__15__$1HKoFlqCQ_ycI_JGLbHe8A_goto_$main$__16__$oZIETcTiTaq1vW3hMnzCvw:
    assume {:captureState "$main$__15__$1HKoFlqCQ_ycI_JGLbHe8A_goto_$main$__16__$oZIETcTiTaq1vW3hMnzCvw"} true;
    assume (!((NF == VF) && (ZF == 0bv1)));
    goto $main$__16__$oZIETcTiTaq1vW3hMnzCvw;
  $main$__16__$oZIETcTiTaq1vW3hMnzCvw_goto_$main$__28__$yBKib8zISTC1~2_rqq9vDQ:
    assume {:captureState "$main$__16__$oZIETcTiTaq1vW3hMnzCvw_goto_$main$__28__$yBKib8zISTC1~2_rqq9vDQ"} true;
    assume (ZF == 1bv1);
    goto $main$__28__$yBKib8zISTC1~2_rqq9vDQ;
  $main$__16__$oZIETcTiTaq1vW3hMnzCvw_goto_$main$__17__$TWTSCH~RTtOtwLMkO8uOvQ:
    assume {:captureState "$main$__16__$oZIETcTiTaq1vW3hMnzCvw_goto_$main$__17__$TWTSCH~RTtOtwLMkO8uOvQ"} true;
    assume (!(ZF == 1bv1));
    goto $main$__17__$TWTSCH~RTtOtwLMkO8uOvQ;
  $main$__9__$MCdd0lmpRUiDPemIUddH~w_goto_$main$__49__$f9R8ysUJTcueGxUsS6k5mA:
    assume {:captureState "$main$__9__$MCdd0lmpRUiDPemIUddH~w_goto_$main$__49__$f9R8ysUJTcueGxUsS6k5mA"} true;
    assume ((NF == VF) && (ZF == 0bv1));
    goto $main$__49__$f9R8ysUJTcueGxUsS6k5mA;
  $main$__9__$MCdd0lmpRUiDPemIUddH~w_goto_$main$__10__$00ZzCNGLTcODX0CNhRpVmQ:
    assume {:captureState "$main$__9__$MCdd0lmpRUiDPemIUddH~w_goto_$main$__10__$00ZzCNGLTcODX0CNhRpVmQ"} true;
    assume (!((NF == VF) && (ZF == 0bv1)));
    goto $main$__10__$00ZzCNGLTcODX0CNhRpVmQ;
  $main$__14__$DmQ1heVrQ~aZni_EKekQtQ_goto_$main$__31__$wwjLZ6e5QWacwNhNAkwkMQ:
    assume {:captureState "$main$__14__$DmQ1heVrQ~aZni_EKekQtQ_goto_$main$__31__$wwjLZ6e5QWacwNhNAkwkMQ"} true;
    assume (ZF == 1bv1);
    goto $main$__31__$wwjLZ6e5QWacwNhNAkwkMQ;
  $main$__14__$DmQ1heVrQ~aZni_EKekQtQ_goto_$main$__15__$1HKoFlqCQ_ycI_JGLbHe8A:
    assume {:captureState "$main$__14__$DmQ1heVrQ~aZni_EKekQtQ_goto_$main$__15__$1HKoFlqCQ_ycI_JGLbHe8A"} true;
    assume (!(ZF == 1bv1));
    goto $main$__15__$1HKoFlqCQ_ycI_JGLbHe8A;
  main_basil_return:
    assume {:captureState "main_basil_return"} true;
    return;
}

procedure add_two();
  modifies Gamma_R0, Gamma_R1, Gamma_mem, R0, R1, mem;
  free requires (memory_load8_le(mem, 2356bv64) == 1bv8);
  free requires (memory_load8_le(mem, 2357bv64) == 0bv8);
  free requires (memory_load8_le(mem, 2358bv64) == 2bv8);
  free requires (memory_load8_le(mem, 2359bv64) == 0bv8);
  free requires (memory_load64_le(mem, 69016bv64) == 1808bv64);
  free requires (memory_load64_le(mem, 69024bv64) == 1728bv64);
  free requires (memory_load64_le(mem, 69616bv64) == 1920bv64);
  free requires (memory_load64_le(mem, 69640bv64) == 69640bv64);
  free ensures (memory_load8_le(mem, 2356bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 2357bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 2358bv64) == 2bv8);
  free ensures (memory_load8_le(mem, 2359bv64) == 0bv8);
  free ensures (memory_load64_le(mem, 69016bv64) == 1808bv64);
  free ensures (memory_load64_le(mem, 69024bv64) == 1728bv64);
  free ensures (memory_load64_le(mem, 69616bv64) == 1920bv64);
  free ensures (memory_load64_le(mem, 69640bv64) == 69640bv64);

implementation add_two()
{
  $add_two$__0__$mI9196hVTaaiL7nNo4P5YA:
    assume {:captureState "$add_two$__0__$mI9196hVTaaiL7nNo4P5YA"} true;
    R0, Gamma_R0 := 69632bv64, true;
    R0, Gamma_R0 := bvadd64(R0, 16bv64), Gamma_R0;
    call rely();
    R0, Gamma_R0 := zero_extend32_32(memory_load32_le(mem, R0)), (gamma_load32(Gamma_mem, R0) || L(mem, R0));
    R1, Gamma_R1 := zero_extend32_32(bvadd32(R0[32:0], 2bv32)), Gamma_R0;
    R0, Gamma_R0 := 69632bv64, true;
    R0, Gamma_R0 := bvadd64(R0, 16bv64), Gamma_R0;
    call rely();
    assert (L(mem, R0) ==> Gamma_R1);
    mem, Gamma_mem := memory_store32_le(mem, R0, R1[32:0]), gamma_store32(Gamma_mem, R0, Gamma_R1);
    assume {:captureState "1836$0"} true;
    goto add_two_basil_return;
  add_two_basil_return:
    assume {:captureState "add_two_basil_return"} true;
    return;
}

