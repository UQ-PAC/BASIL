var {:extern} CF: bv1;
var {:extern} Gamma_CF: bool;
var {:extern} Gamma_NF: bool;
var {:extern} Gamma_R0: bool;
var {:extern} Gamma_R1: bool;
var {:extern} Gamma_VF: bool;
var {:extern} Gamma_ZF: bool;
var {:extern} Gamma_mem: [bv64]bool;
var {:extern} NF: bv1;
var {:extern} R0: bv64;
var {:extern} R1: bv64;
var {:extern} VF: bv1;
var {:extern} ZF: bv1;
var {:extern} mem: [bv64]bv8;
function {:extern} L(memory: [bv64]bv8, index: bv64) returns (bool) {
  false
}

function {:extern} {:bvbuiltin "bvadd"} bvadd32(bv32, bv32) returns (bv32);
function {:extern} {:bvbuiltin "bvadd"} bvadd33(bv33, bv33) returns (bv33);
function {:extern} {:bvbuiltin "bvadd"} bvadd64(bv64, bv64) returns (bv64);
function {:extern} {:bvbuiltin "bvcomp"} bvcomp32(bv32, bv32) returns (bv1);
function {:extern} {:bvbuiltin "bvcomp"} bvcomp33(bv33, bv33) returns (bv1);
function {:extern} {:bvbuiltin "bvnot"} bvnot1(bv1) returns (bv1);
function {:extern} gamma_load32(gammaMap: [bv64]bool, index: bv64) returns (bool) {
  (gammaMap[bvadd64(index, 3bv64)] && (gammaMap[bvadd64(index, 2bv64)] && (gammaMap[bvadd64(index, 1bv64)] && gammaMap[index])))
}

function {:extern} gamma_store32(gammaMap: [bv64]bool, index: bv64, value: bool) returns ([bv64]bool) {
  gammaMap[index := value][bvadd64(index, 1bv64) := value][bvadd64(index, 2bv64) := value][bvadd64(index, 3bv64) := value]
}

function {:extern} memory_load32_le(memory: [bv64]bv8, index: bv64) returns (bv32) {
  (memory[bvadd64(index, 3bv64)] ++ (memory[bvadd64(index, 2bv64)] ++ (memory[bvadd64(index, 1bv64)] ++ memory[index])))
}

function {:extern} memory_load64_le(memory: [bv64]bv8, index: bv64) returns (bv64) {
  (memory[bvadd64(index, 7bv64)] ++ (memory[bvadd64(index, 6bv64)] ++ (memory[bvadd64(index, 5bv64)] ++ (memory[bvadd64(index, 4bv64)] ++ (memory[bvadd64(index, 3bv64)] ++ (memory[bvadd64(index, 2bv64)] ++ (memory[bvadd64(index, 1bv64)] ++ memory[index])))))))
}

function {:extern} memory_load8_le(memory: [bv64]bv8, index: bv64) returns (bv8) {
  memory[index]
}

function {:extern} memory_store32_le(memory: [bv64]bv8, index: bv64, value: bv32) returns ([bv64]bv8) {
  memory[index := value[8:0]][bvadd64(index, 1bv64) := value[16:8]][bvadd64(index, 2bv64) := value[24:16]][bvadd64(index, 3bv64) := value[32:24]]
}

function {:extern} {:bvbuiltin "sign_extend 1"} sign_extend1_32(bv32) returns (bv33);
function {:extern} {:bvbuiltin "zero_extend 1"} zero_extend1_32(bv32) returns (bv33);
function {:extern} {:bvbuiltin "zero_extend 32"} zero_extend32_32(bv32) returns (bv64);
procedure {:extern} rely();
  modifies Gamma_mem, mem;
  ensures (mem == old(mem));
  ensures (Gamma_mem == old(Gamma_mem));
  free ensures (memory_load8_le(mem, 2232bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 2233bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 2234bv64) == 2bv8);
  free ensures (memory_load8_le(mem, 2235bv64) == 0bv8);
  free ensures (memory_load64_le(mem, 69016bv64) == 2128bv64);
  free ensures (memory_load64_le(mem, 69024bv64) == 2048bv64);
  free ensures (memory_load64_le(mem, 69616bv64) == 1536bv64);
  free ensures (memory_load64_le(mem, 69640bv64) == 69640bv64);

procedure {:extern} rely_transitive();
  modifies Gamma_mem, mem;
  ensures (mem == old(mem));
  ensures (Gamma_mem == old(Gamma_mem));

implementation {:extern} rely_transitive()
{
  call rely();
  call rely();
}

procedure {:extern} rely_reflexive();

procedure {:extern} guarantee_reflexive();
  modifies Gamma_mem, mem;

procedure main();
  modifies CF, Gamma_CF, Gamma_NF, Gamma_R0, Gamma_R1, Gamma_VF, Gamma_ZF, Gamma_mem, NF, R0, R1, VF, ZF, mem;
  requires (Gamma_R0 == true);
  free requires (memory_load64_le(mem, 69632bv64) == 0bv64);
  free requires (memory_load64_le(mem, 69640bv64) == 69640bv64);
  free requires (memory_load8_le(mem, 69648bv64) == 5bv8);
  free requires (memory_load8_le(mem, 69649bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69650bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69651bv64) == 0bv8);
  free requires (memory_load8_le(mem, 2232bv64) == 1bv8);
  free requires (memory_load8_le(mem, 2233bv64) == 0bv8);
  free requires (memory_load8_le(mem, 2234bv64) == 2bv8);
  free requires (memory_load8_le(mem, 2235bv64) == 0bv8);
  free requires (memory_load64_le(mem, 69016bv64) == 2128bv64);
  free requires (memory_load64_le(mem, 69024bv64) == 2048bv64);
  free requires (memory_load64_le(mem, 69616bv64) == 1536bv64);
  free requires (memory_load64_le(mem, 69640bv64) == 69640bv64);
  free ensures (memory_load8_le(mem, 2232bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 2233bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 2234bv64) == 2bv8);
  free ensures (memory_load8_le(mem, 2235bv64) == 0bv8);
  free ensures (memory_load64_le(mem, 69016bv64) == 2128bv64);
  free ensures (memory_load64_le(mem, 69024bv64) == 2048bv64);
  free ensures (memory_load64_le(mem, 69616bv64) == 1536bv64);
  free ensures (memory_load64_le(mem, 69640bv64) == 69640bv64);

implementation main()
{
  var Cse0__5$11$0: bv32;
  var Cse0__5$15$0: bv32;
  var Cse0__5$18$0: bv32;
  var Cse0__5$19$1: bv32;
  var Cse0__5$20$0: bv32;
  var Cse0__5$22$1: bv32;
  var Cse0__5$24$1: bv32;
  var Cse0__5$27$0: bv32;
  var Cse0__5$5$0: bv32;
  var Cse0__5$6$0: bv32;
  var Gamma_Cse0__5$11$0: bool;
  var Gamma_Cse0__5$15$0: bool;
  var Gamma_Cse0__5$18$0: bool;
  var Gamma_Cse0__5$19$1: bool;
  var Gamma_Cse0__5$20$0: bool;
  var Gamma_Cse0__5$22$1: bool;
  var Gamma_Cse0__5$24$1: bool;
  var Gamma_Cse0__5$27$0: bool;
  var Gamma_Cse0__5$5$0: bool;
  var Gamma_Cse0__5$6$0: bool;
  $main$__0__$0sz7~MBESKq_l7wsV7QzEw:
    assume {:captureState "$main$__0__$0sz7~MBESKq_l7wsV7QzEw"} true;
    R1, Gamma_R1 := 69632bv64, true;
    Cse0__5$24$1, Gamma_Cse0__5$24$1 := bvadd32(R0[32:0], 4294967290bv32), Gamma_R0;
    VF, Gamma_VF := bvnot1(bvcomp33(sign_extend1_32(Cse0__5$24$1), bvadd33(sign_extend1_32(R0[32:0]), 8589934586bv33))), (Gamma_R0 && Gamma_Cse0__5$24$1);
    CF, Gamma_CF := bvnot1(bvcomp33(zero_extend1_32(Cse0__5$24$1), bvadd33(zero_extend1_32(R0[32:0]), 4294967290bv33))), (Gamma_R0 && Gamma_Cse0__5$24$1);
    ZF, Gamma_ZF := bvcomp32(Cse0__5$24$1, 0bv32), Gamma_Cse0__5$24$1;
    NF, Gamma_NF := Cse0__5$24$1[32:31], Gamma_Cse0__5$24$1;
    assert Gamma_ZF;
    goto $main$__0__$0sz7~MBESKq_l7wsV7QzEw_goto_$main$__12__$yKAK2PskRMGoL74k8tWP2A, $main$__0__$0sz7~MBESKq_l7wsV7QzEw_goto_$main$__1__$CHn9erYlSlKfynDQ6gTYzw;
  $main$__1__$CHn9erYlSlKfynDQ6gTYzw:
    assume {:captureState "$main$__1__$CHn9erYlSlKfynDQ6gTYzw"} true;
    assert ((Gamma_NF && Gamma_VF) && Gamma_ZF);
    goto $main$__1__$CHn9erYlSlKfynDQ6gTYzw_goto_$main$__14__$skZzD4KjQ3O2oX~6W5_qBQ, $main$__1__$CHn9erYlSlKfynDQ6gTYzw_goto_$main$__2__$r34s2UoUQh2rqn4~31H5vg;
  $main$__2__$r34s2UoUQh2rqn4~31H5vg:
    assume {:captureState "$main$__2__$r34s2UoUQh2rqn4~31H5vg"} true;
    Cse0__5$15$0, Gamma_Cse0__5$15$0 := bvadd32(R0[32:0], 4294967293bv32), Gamma_R0;
    VF, Gamma_VF := bvnot1(bvcomp33(sign_extend1_32(Cse0__5$15$0), bvadd33(sign_extend1_32(R0[32:0]), 8589934589bv33))), (Gamma_R0 && Gamma_Cse0__5$15$0);
    CF, Gamma_CF := bvnot1(bvcomp33(zero_extend1_32(Cse0__5$15$0), bvadd33(zero_extend1_32(R0[32:0]), 4294967293bv33))), (Gamma_R0 && Gamma_Cse0__5$15$0);
    ZF, Gamma_ZF := bvcomp32(Cse0__5$15$0, 0bv32), Gamma_Cse0__5$15$0;
    NF, Gamma_NF := Cse0__5$15$0[32:31], Gamma_Cse0__5$15$0;
    assert Gamma_ZF;
    goto $main$__2__$r34s2UoUQh2rqn4~31H5vg_goto_$main$__22__$jgORdcwrSuqi8Dk0PNMimQ, $main$__2__$r34s2UoUQh2rqn4~31H5vg_goto_$main$__3__$CJUc5xBxRJSmqD3tHmTgrw;
  $main$__3__$CJUc5xBxRJSmqD3tHmTgrw:
    assume {:captureState "$main$__3__$CJUc5xBxRJSmqD3tHmTgrw"} true;
    assert ((Gamma_NF && Gamma_VF) && Gamma_ZF);
    goto $main$__3__$CJUc5xBxRJSmqD3tHmTgrw_goto_$main$__10__$zwDu~UXVRaS43a2Plka3~g, $main$__3__$CJUc5xBxRJSmqD3tHmTgrw_goto_$main$__4__$fNPGFnLHRHWMfYNezFYLJQ;
  $main$__4__$fNPGFnLHRHWMfYNezFYLJQ:
    assume {:captureState "$main$__4__$fNPGFnLHRHWMfYNezFYLJQ"} true;
    R1, Gamma_R1 := 69632bv64, true;
    Cse0__5$19$1, Gamma_Cse0__5$19$1 := bvadd32(R0[32:0], 4294967295bv32), Gamma_R0;
    VF, Gamma_VF := bvnot1(bvcomp33(sign_extend1_32(Cse0__5$19$1), bvadd33(sign_extend1_32(R0[32:0]), 8589934591bv33))), (Gamma_R0 && Gamma_Cse0__5$19$1);
    CF, Gamma_CF := bvnot1(bvcomp33(zero_extend1_32(Cse0__5$19$1), bvadd33(zero_extend1_32(R0[32:0]), 4294967295bv33))), (Gamma_R0 && Gamma_Cse0__5$19$1);
    ZF, Gamma_ZF := bvcomp32(Cse0__5$19$1, 0bv32), Gamma_Cse0__5$19$1;
    NF, Gamma_NF := Cse0__5$19$1[32:31], Gamma_Cse0__5$19$1;
    assert Gamma_ZF;
    goto $main$__4__$fNPGFnLHRHWMfYNezFYLJQ_goto_$main$__23__$75HGhUJPRceXP6NjGSTerg, $main$__4__$fNPGFnLHRHWMfYNezFYLJQ_goto_$main$__5__$yWAtAGLORaO0kkkfGmJBxg;
  $main$__5__$yWAtAGLORaO0kkkfGmJBxg:
    assume {:captureState "$main$__5__$yWAtAGLORaO0kkkfGmJBxg"} true;
    Cse0__5$6$0, Gamma_Cse0__5$6$0 := bvadd32(R0[32:0], 4294967294bv32), Gamma_R0;
    VF, Gamma_VF := bvnot1(bvcomp33(sign_extend1_32(Cse0__5$6$0), bvadd33(sign_extend1_32(R0[32:0]), 8589934590bv33))), (Gamma_R0 && Gamma_Cse0__5$6$0);
    CF, Gamma_CF := bvnot1(bvcomp33(zero_extend1_32(Cse0__5$6$0), bvadd33(zero_extend1_32(R0[32:0]), 4294967294bv33))), (Gamma_R0 && Gamma_Cse0__5$6$0);
    ZF, Gamma_ZF := bvcomp32(Cse0__5$6$0, 0bv32), Gamma_Cse0__5$6$0;
    NF, Gamma_NF := Cse0__5$6$0[32:31], Gamma_Cse0__5$6$0;
    assert Gamma_ZF;
    goto $main$__5__$yWAtAGLORaO0kkkfGmJBxg_goto_$main$__8__$c7DVzlGpTka13ffRU2fb3A, $main$__5__$yWAtAGLORaO0kkkfGmJBxg_goto_$main$__6__$7U1myQrGQbaHg3DCMxUG_w;
  $main$__6__$7U1myQrGQbaHg3DCMxUG_w:
    assume {:captureState "$main$__6__$7U1myQrGQbaHg3DCMxUG_w"} true;
    call rely();
    R0, Gamma_R0 := zero_extend32_32(memory_load32_le(mem, bvadd64(R1, 16bv64))), (gamma_load32(Gamma_mem, bvadd64(R1, 16bv64)) || L(mem, bvadd64(R1, 16bv64)));
    R0, Gamma_R0 := zero_extend32_32(bvadd32(R0[32:0], 4294967289bv32)), Gamma_R0;
    call rely();
    assert (L(mem, bvadd64(R1, 16bv64)) ==> Gamma_R0);
    mem, Gamma_mem := memory_store32_le(mem, bvadd64(R1, 16bv64), R0[32:0]), gamma_store32(Gamma_mem, bvadd64(R1, 16bv64), Gamma_R0);
    assume {:captureState "1592$0"} true;
    goto $main$__7__$hhwEGU9xQtuyZS6IhvFIkg;
  $main$__7__$hhwEGU9xQtuyZS6IhvFIkg:
    assume {:captureState "$main$__7__$hhwEGU9xQtuyZS6IhvFIkg"} true;
    goto main_basil_return;
  $main$__8__$c7DVzlGpTka13ffRU2fb3A:
    assume {:captureState "$main$__8__$c7DVzlGpTka13ffRU2fb3A"} true;
    assert Gamma_R0;
    goto $main$__8__$c7DVzlGpTka13ffRU2fb3A_goto_$main$__27__$ghrdCrHVShG~sRRFtXftvA, $main$__8__$c7DVzlGpTka13ffRU2fb3A_goto_$main$__9__$CSj7eUglQHyGcHZhFIATcQ;
  $main$__9__$CSj7eUglQHyGcHZhFIATcQ:
    assume {:captureState "$main$__9__$CSj7eUglQHyGcHZhFIATcQ"} true;
    call rely();
    R0, Gamma_R0 := zero_extend32_32(memory_load32_le(mem, bvadd64(R1, 16bv64))), (gamma_load32(Gamma_mem, bvadd64(R1, 16bv64)) || L(mem, bvadd64(R1, 16bv64)));
    R0, Gamma_R0 := zero_extend32_32(bvadd32(R0[32:0], 2bv32)), Gamma_R0;
    call rely();
    assert (L(mem, bvadd64(R1, 16bv64)) ==> Gamma_R0);
    mem, Gamma_mem := memory_store32_le(mem, bvadd64(R1, 16bv64), R0[32:0]), gamma_store32(Gamma_mem, bvadd64(R1, 16bv64), Gamma_R0);
    assume {:captureState "1612$0"} true;
    goto $main$__7__$hhwEGU9xQtuyZS6IhvFIkg;
  $main$__10__$zwDu~UXVRaS43a2Plka3~g:
    assume {:captureState "$main$__10__$zwDu~UXVRaS43a2Plka3~g"} true;
    Cse0__5$18$0, Gamma_Cse0__5$18$0 := bvadd32(R0[32:0], 4294967292bv32), Gamma_R0;
    VF, Gamma_VF := bvnot1(bvcomp33(sign_extend1_32(Cse0__5$18$0), bvadd33(sign_extend1_32(R0[32:0]), 8589934588bv33))), (Gamma_R0 && Gamma_Cse0__5$18$0);
    CF, Gamma_CF := bvnot1(bvcomp33(zero_extend1_32(Cse0__5$18$0), bvadd33(zero_extend1_32(R0[32:0]), 4294967292bv33))), (Gamma_R0 && Gamma_Cse0__5$18$0);
    ZF, Gamma_ZF := bvcomp32(Cse0__5$18$0, 0bv32), Gamma_Cse0__5$18$0;
    NF, Gamma_NF := Cse0__5$18$0[32:31], Gamma_Cse0__5$18$0;
    assert Gamma_ZF;
    goto $main$__10__$zwDu~UXVRaS43a2Plka3~g_goto_$main$__24__$sTTkWEDiRkmRPEv35AqMsQ, $main$__10__$zwDu~UXVRaS43a2Plka3~g_goto_$main$__11__$uxdyZthtTKWcClI6ylURdg;
  $main$__11__$uxdyZthtTKWcClI6ylURdg:
    assume {:captureState "$main$__11__$uxdyZthtTKWcClI6ylURdg"} true;
    R1, Gamma_R1 := 69632bv64, true;
    call rely();
    R0, Gamma_R0 := zero_extend32_32(memory_load32_le(mem, bvadd64(R1, 16bv64))), (gamma_load32(Gamma_mem, bvadd64(R1, 16bv64)) || L(mem, bvadd64(R1, 16bv64)));
    R0, Gamma_R0 := zero_extend32_32(bvadd32(R0[32:0], 8bv32)), Gamma_R0;
    call rely();
    assert (L(mem, bvadd64(R1, 16bv64)) ==> Gamma_R0);
    mem, Gamma_mem := memory_store32_le(mem, bvadd64(R1, 16bv64), R0[32:0]), gamma_store32(Gamma_mem, bvadd64(R1, 16bv64), Gamma_R0);
    assume {:captureState "1640$0"} true;
    goto $main$__12__$yKAK2PskRMGoL74k8tWP2A;
  $main$__12__$yKAK2PskRMGoL74k8tWP2A:
    assume {:captureState "$main$__12__$yKAK2PskRMGoL74k8tWP2A"} true;
    call rely();
    R0, Gamma_R0 := zero_extend32_32(memory_load32_le(mem, bvadd64(R1, 16bv64))), (gamma_load32(Gamma_mem, bvadd64(R1, 16bv64)) || L(mem, bvadd64(R1, 16bv64)));
    R0, Gamma_R0 := zero_extend32_32(bvadd32(R0[32:0], 6bv32)), Gamma_R0;
    call rely();
    assert (L(mem, bvadd64(R1, 16bv64)) ==> Gamma_R0);
    mem, Gamma_mem := memory_store32_le(mem, bvadd64(R1, 16bv64), R0[32:0]), gamma_store32(Gamma_mem, bvadd64(R1, 16bv64), Gamma_R0);
    assume {:captureState "1652$0"} true;
    goto $main$__13__$q5KG8J9qRg6~XKHEFa6IRA;
  $main$__13__$q5KG8J9qRg6~XKHEFa6IRA:
    assume {:captureState "$main$__13__$q5KG8J9qRg6~XKHEFa6IRA"} true;
    call rely();
    R0, Gamma_R0 := zero_extend32_32(memory_load32_le(mem, bvadd64(R1, 16bv64))), (gamma_load32(Gamma_mem, bvadd64(R1, 16bv64)) || L(mem, bvadd64(R1, 16bv64)));
    R0, Gamma_R0 := zero_extend32_32(bvadd32(R0[32:0], 4294967289bv32)), Gamma_R0;
    call rely();
    assert (L(mem, bvadd64(R1, 16bv64)) ==> Gamma_R0);
    mem, Gamma_mem := memory_store32_le(mem, bvadd64(R1, 16bv64), R0[32:0]), gamma_store32(Gamma_mem, bvadd64(R1, 16bv64), Gamma_R0);
    assume {:captureState "1664$0"} true;
    goto $main$__21__$6iiG1Zl2RF~wJXQMLcXkMg;
  $main$__14__$skZzD4KjQ3O2oX~6W5_qBQ:
    assume {:captureState "$main$__14__$skZzD4KjQ3O2oX~6W5_qBQ"} true;
    R1, Gamma_R1 := 69632bv64, true;
    Cse0__5$22$1, Gamma_Cse0__5$22$1 := bvadd32(R0[32:0], 4294967287bv32), Gamma_R0;
    VF, Gamma_VF := bvnot1(bvcomp33(sign_extend1_32(Cse0__5$22$1), bvadd33(sign_extend1_32(R0[32:0]), 8589934583bv33))), (Gamma_R0 && Gamma_Cse0__5$22$1);
    CF, Gamma_CF := bvnot1(bvcomp33(zero_extend1_32(Cse0__5$22$1), bvadd33(zero_extend1_32(R0[32:0]), 4294967287bv33))), (Gamma_R0 && Gamma_Cse0__5$22$1);
    ZF, Gamma_ZF := bvcomp32(Cse0__5$22$1, 0bv32), Gamma_Cse0__5$22$1;
    NF, Gamma_NF := Cse0__5$22$1[32:31], Gamma_Cse0__5$22$1;
    assert Gamma_ZF;
    goto $main$__14__$skZzD4KjQ3O2oX~6W5_qBQ_goto_$main$__25__$1NKikr2_T7OPq7M7Oj0VnQ, $main$__14__$skZzD4KjQ3O2oX~6W5_qBQ_goto_$main$__15__$XH2fSZzqQcCkVmtelRgjHA;
  $main$__15__$XH2fSZzqQcCkVmtelRgjHA:
    assume {:captureState "$main$__15__$XH2fSZzqQcCkVmtelRgjHA"} true;
    assert ((Gamma_NF && Gamma_VF) && Gamma_ZF);
    goto $main$__15__$XH2fSZzqQcCkVmtelRgjHA_goto_$main$__19__$GV6On60PTc~Xs_mrsPUgrw, $main$__15__$XH2fSZzqQcCkVmtelRgjHA_goto_$main$__16__$LixriQmDS9OP6kZAgCfxQA;
  $main$__16__$LixriQmDS9OP6kZAgCfxQA:
    assume {:captureState "$main$__16__$LixriQmDS9OP6kZAgCfxQA"} true;
    Cse0__5$5$0, Gamma_Cse0__5$5$0 := bvadd32(R0[32:0], 4294967286bv32), Gamma_R0;
    VF, Gamma_VF := bvnot1(bvcomp33(sign_extend1_32(Cse0__5$5$0), bvadd33(sign_extend1_32(R0[32:0]), 8589934582bv33))), (Gamma_R0 && Gamma_Cse0__5$5$0);
    CF, Gamma_CF := bvnot1(bvcomp33(zero_extend1_32(Cse0__5$5$0), bvadd33(zero_extend1_32(R0[32:0]), 4294967286bv33))), (Gamma_R0 && Gamma_Cse0__5$5$0);
    ZF, Gamma_ZF := bvcomp32(Cse0__5$5$0, 0bv32), Gamma_Cse0__5$5$0;
    NF, Gamma_NF := Cse0__5$5$0[32:31], Gamma_Cse0__5$5$0;
    assert Gamma_ZF;
    goto $main$__16__$LixriQmDS9OP6kZAgCfxQA_goto_$main$__26__$Zqu84LZDQtanrNYoOOuDow, $main$__16__$LixriQmDS9OP6kZAgCfxQA_goto_$main$__17__$sUtIO5YgToSWVO59xcPiBQ;
  $main$__17__$sUtIO5YgToSWVO59xcPiBQ:
    assume {:captureState "$main$__17__$sUtIO5YgToSWVO59xcPiBQ"} true;
    Cse0__5$20$0, Gamma_Cse0__5$20$0 := bvadd32(R0[32:0], 4294967285bv32), Gamma_R0;
    VF, Gamma_VF := bvnot1(bvcomp33(sign_extend1_32(Cse0__5$20$0), bvadd33(sign_extend1_32(R0[32:0]), 8589934581bv33))), (Gamma_R0 && Gamma_Cse0__5$20$0);
    CF, Gamma_CF := bvnot1(bvcomp33(zero_extend1_32(Cse0__5$20$0), bvadd33(zero_extend1_32(R0[32:0]), 4294967285bv33))), (Gamma_R0 && Gamma_Cse0__5$20$0);
    ZF, Gamma_ZF := bvcomp32(Cse0__5$20$0, 0bv32), Gamma_Cse0__5$20$0;
    NF, Gamma_NF := Cse0__5$20$0[32:31], Gamma_Cse0__5$20$0;
    assert Gamma_ZF;
    goto $main$__17__$sUtIO5YgToSWVO59xcPiBQ_goto_$main$__27__$ghrdCrHVShG~sRRFtXftvA, $main$__17__$sUtIO5YgToSWVO59xcPiBQ_goto_$main$__18__$N8d5AkRRTiaceWqt0Ogi0g;
  $main$__18__$N8d5AkRRTiaceWqt0Ogi0g:
    assume {:captureState "$main$__18__$N8d5AkRRTiaceWqt0Ogi0g"} true;
    call rely();
    R0, Gamma_R0 := zero_extend32_32(memory_load32_le(mem, bvadd64(R1, 16bv64))), (gamma_load32(Gamma_mem, bvadd64(R1, 16bv64)) || L(mem, bvadd64(R1, 16bv64)));
    R0, Gamma_R0 := zero_extend32_32(bvadd32(R0[32:0], 4294967291bv32)), Gamma_R0;
    call rely();
    assert (L(mem, bvadd64(R1, 16bv64)) ==> Gamma_R0);
    mem, Gamma_mem := memory_store32_le(mem, bvadd64(R1, 16bv64), R0[32:0]), gamma_store32(Gamma_mem, bvadd64(R1, 16bv64), Gamma_R0);
    assume {:captureState "1712$0"} true;
    goto $main$__7__$hhwEGU9xQtuyZS6IhvFIkg;
  $main$__19__$GV6On60PTc~Xs_mrsPUgrw:
    assume {:captureState "$main$__19__$GV6On60PTc~Xs_mrsPUgrw"} true;
    Cse0__5$27$0, Gamma_Cse0__5$27$0 := bvadd32(R0[32:0], 4294967289bv32), Gamma_R0;
    VF, Gamma_VF := bvnot1(bvcomp33(sign_extend1_32(Cse0__5$27$0), bvadd33(sign_extend1_32(R0[32:0]), 8589934585bv33))), (Gamma_R0 && Gamma_Cse0__5$27$0);
    CF, Gamma_CF := bvnot1(bvcomp33(zero_extend1_32(Cse0__5$27$0), bvadd33(zero_extend1_32(R0[32:0]), 4294967289bv33))), (Gamma_R0 && Gamma_Cse0__5$27$0);
    ZF, Gamma_ZF := bvcomp32(Cse0__5$27$0, 0bv32), Gamma_Cse0__5$27$0;
    NF, Gamma_NF := Cse0__5$27$0[32:31], Gamma_Cse0__5$27$0;
    assert Gamma_ZF;
    goto $main$__19__$GV6On60PTc~Xs_mrsPUgrw_goto_$main$__13__$q5KG8J9qRg6~XKHEFa6IRA, $main$__19__$GV6On60PTc~Xs_mrsPUgrw_goto_$main$__20__$MlpQg7E2QjSZikQXMmYI0g;
  $main$__20__$MlpQg7E2QjSZikQXMmYI0g:
    assume {:captureState "$main$__20__$MlpQg7E2QjSZikQXMmYI0g"} true;
    Cse0__5$11$0, Gamma_Cse0__5$11$0 := bvadd32(R0[32:0], 4294967288bv32), Gamma_R0;
    VF, Gamma_VF := bvnot1(bvcomp33(sign_extend1_32(Cse0__5$11$0), bvadd33(sign_extend1_32(R0[32:0]), 8589934584bv33))), (Gamma_R0 && Gamma_Cse0__5$11$0);
    CF, Gamma_CF := bvnot1(bvcomp33(zero_extend1_32(Cse0__5$11$0), bvadd33(zero_extend1_32(R0[32:0]), 4294967288bv33))), (Gamma_R0 && Gamma_Cse0__5$11$0);
    ZF, Gamma_ZF := bvcomp32(Cse0__5$11$0, 0bv32), Gamma_Cse0__5$11$0;
    NF, Gamma_NF := Cse0__5$11$0[32:31], Gamma_Cse0__5$11$0;
    assert Gamma_ZF;
    goto $main$__20__$MlpQg7E2QjSZikQXMmYI0g_goto_$main$__27__$ghrdCrHVShG~sRRFtXftvA, $main$__20__$MlpQg7E2QjSZikQXMmYI0g_goto_$main$__21__$6iiG1Zl2RF~wJXQMLcXkMg;
  $main$__21__$6iiG1Zl2RF~wJXQMLcXkMg:
    assume {:captureState "$main$__21__$6iiG1Zl2RF~wJXQMLcXkMg"} true;
    call rely();
    R0, Gamma_R0 := zero_extend32_32(memory_load32_le(mem, bvadd64(R1, 16bv64))), (gamma_load32(Gamma_mem, bvadd64(R1, 16bv64)) || L(mem, bvadd64(R1, 16bv64)));
    R0, Gamma_R0 := zero_extend32_32(bvadd32(R0[32:0], 4294967295bv32)), Gamma_R0;
    call rely();
    assert (L(mem, bvadd64(R1, 16bv64)) ==> Gamma_R0);
    mem, Gamma_mem := memory_store32_le(mem, bvadd64(R1, 16bv64), R0[32:0]), gamma_store32(Gamma_mem, bvadd64(R1, 16bv64), Gamma_R0);
    assume {:captureState "1744$0"} true;
    goto $main$__7__$hhwEGU9xQtuyZS6IhvFIkg;
  $main$__22__$jgORdcwrSuqi8Dk0PNMimQ:
    assume {:captureState "$main$__22__$jgORdcwrSuqi8Dk0PNMimQ"} true;
    R1, Gamma_R1 := 69632bv64, true;
    call rely();
    R0, Gamma_R0 := zero_extend32_32(memory_load32_le(mem, bvadd64(R1, 16bv64))), (gamma_load32(Gamma_mem, bvadd64(R1, 16bv64)) || L(mem, bvadd64(R1, 16bv64)));
    R0, Gamma_R0 := zero_extend32_32(bvadd32(R0[32:0], 4294967291bv32)), Gamma_R0;
    call rely();
    assert (L(mem, bvadd64(R1, 16bv64)) ==> Gamma_R0);
    mem, Gamma_mem := memory_store32_le(mem, bvadd64(R1, 16bv64), R0[32:0]), gamma_store32(Gamma_mem, bvadd64(R1, 16bv64), Gamma_R0);
    assume {:captureState "1764$0"} true;
    goto $main$__7__$hhwEGU9xQtuyZS6IhvFIkg;
  $main$__23__$75HGhUJPRceXP6NjGSTerg:
    assume {:captureState "$main$__23__$75HGhUJPRceXP6NjGSTerg"} true;
    call rely();
    R0, Gamma_R0 := zero_extend32_32(memory_load32_le(mem, bvadd64(R1, 16bv64))), (gamma_load32(Gamma_mem, bvadd64(R1, 16bv64)) || L(mem, bvadd64(R1, 16bv64)));
    R0, Gamma_R0 := zero_extend32_32(bvadd32(R0[32:0], 6bv32)), Gamma_R0;
    call rely();
    assert (L(mem, bvadd64(R1, 16bv64)) ==> Gamma_R0);
    mem, Gamma_mem := memory_store32_le(mem, bvadd64(R1, 16bv64), R0[32:0]), gamma_store32(Gamma_mem, bvadd64(R1, 16bv64), Gamma_R0);
    assume {:captureState "1780$0"} true;
    goto $main$__6__$7U1myQrGQbaHg3DCMxUG_w;
  $main$__24__$sTTkWEDiRkmRPEv35AqMsQ:
    assume {:captureState "$main$__24__$sTTkWEDiRkmRPEv35AqMsQ"} true;
    R1, Gamma_R1 := 69632bv64, true;
    call rely();
    R0, Gamma_R0 := zero_extend32_32(memory_load32_le(mem, bvadd64(R1, 16bv64))), (gamma_load32(Gamma_mem, bvadd64(R1, 16bv64)) || L(mem, bvadd64(R1, 16bv64)));
    R0, Gamma_R0 := zero_extend32_32(bvadd32(R0[32:0], 6bv32)), Gamma_R0;
    call rely();
    assert (L(mem, bvadd64(R1, 16bv64)) ==> Gamma_R0);
    mem, Gamma_mem := memory_store32_le(mem, bvadd64(R1, 16bv64), R0[32:0]), gamma_store32(Gamma_mem, bvadd64(R1, 16bv64), Gamma_R0);
    assume {:captureState "1800$0"} true;
    goto $main$__7__$hhwEGU9xQtuyZS6IhvFIkg;
  $main$__25__$1NKikr2_T7OPq7M7Oj0VnQ:
    assume {:captureState "$main$__25__$1NKikr2_T7OPq7M7Oj0VnQ"} true;
    call rely();
    R0, Gamma_R0 := zero_extend32_32(memory_load32_le(mem, bvadd64(R1, 16bv64))), (gamma_load32(Gamma_mem, bvadd64(R1, 16bv64)) || L(mem, bvadd64(R1, 16bv64)));
    R0, Gamma_R0 := zero_extend32_32(bvadd32(R0[32:0], 8bv32)), Gamma_R0;
    call rely();
    assert (L(mem, bvadd64(R1, 16bv64)) ==> Gamma_R0);
    mem, Gamma_mem := memory_store32_le(mem, bvadd64(R1, 16bv64), R0[32:0]), gamma_store32(Gamma_mem, bvadd64(R1, 16bv64), Gamma_R0);
    assume {:captureState "1816$0"} true;
    goto $main$__7__$hhwEGU9xQtuyZS6IhvFIkg;
  $main$__26__$Zqu84LZDQtanrNYoOOuDow:
    assume {:captureState "$main$__26__$Zqu84LZDQtanrNYoOOuDow"} true;
    call rely();
    R0, Gamma_R0 := zero_extend32_32(memory_load32_le(mem, bvadd64(R1, 16bv64))), (gamma_load32(Gamma_mem, bvadd64(R1, 16bv64)) || L(mem, bvadd64(R1, 16bv64)));
    R0, Gamma_R0 := zero_extend32_32(bvadd32(R0[32:0], 1bv32)), Gamma_R0;
    call rely();
    assert (L(mem, bvadd64(R1, 16bv64)) ==> Gamma_R0);
    mem, Gamma_mem := memory_store32_le(mem, bvadd64(R1, 16bv64), R0[32:0]), gamma_store32(Gamma_mem, bvadd64(R1, 16bv64), Gamma_R0);
    assume {:captureState "1832$0"} true;
    goto $main$__18__$N8d5AkRRTiaceWqt0Ogi0g;
  $main$__27__$ghrdCrHVShG~sRRFtXftvA:
    assume {:captureState "$main$__27__$ghrdCrHVShG~sRRFtXftvA"} true;
    R0, Gamma_R0 := 1bv64, true;
    goto main_basil_return;
  $main$__16__$LixriQmDS9OP6kZAgCfxQA_goto_$main$__26__$Zqu84LZDQtanrNYoOOuDow:
    assume {:captureState "$main$__16__$LixriQmDS9OP6kZAgCfxQA_goto_$main$__26__$Zqu84LZDQtanrNYoOOuDow"} true;
    assume (ZF == 1bv1);
    goto $main$__26__$Zqu84LZDQtanrNYoOOuDow;
  $main$__16__$LixriQmDS9OP6kZAgCfxQA_goto_$main$__17__$sUtIO5YgToSWVO59xcPiBQ:
    assume {:captureState "$main$__16__$LixriQmDS9OP6kZAgCfxQA_goto_$main$__17__$sUtIO5YgToSWVO59xcPiBQ"} true;
    assume (!(ZF == 1bv1));
    goto $main$__17__$sUtIO5YgToSWVO59xcPiBQ;
  $main$__5__$yWAtAGLORaO0kkkfGmJBxg_goto_$main$__8__$c7DVzlGpTka13ffRU2fb3A:
    assume {:captureState "$main$__5__$yWAtAGLORaO0kkkfGmJBxg_goto_$main$__8__$c7DVzlGpTka13ffRU2fb3A"} true;
    assume (!(ZF == 1bv1));
    goto $main$__8__$c7DVzlGpTka13ffRU2fb3A;
  $main$__5__$yWAtAGLORaO0kkkfGmJBxg_goto_$main$__6__$7U1myQrGQbaHg3DCMxUG_w:
    assume {:captureState "$main$__5__$yWAtAGLORaO0kkkfGmJBxg_goto_$main$__6__$7U1myQrGQbaHg3DCMxUG_w"} true;
    assume (!(!(ZF == 1bv1)));
    goto $main$__6__$7U1myQrGQbaHg3DCMxUG_w;
  $main$__1__$CHn9erYlSlKfynDQ6gTYzw_goto_$main$__14__$skZzD4KjQ3O2oX~6W5_qBQ:
    assume {:captureState "$main$__1__$CHn9erYlSlKfynDQ6gTYzw_goto_$main$__14__$skZzD4KjQ3O2oX~6W5_qBQ"} true;
    assume ((NF == VF) && (ZF == 0bv1));
    goto $main$__14__$skZzD4KjQ3O2oX~6W5_qBQ;
  $main$__1__$CHn9erYlSlKfynDQ6gTYzw_goto_$main$__2__$r34s2UoUQh2rqn4~31H5vg:
    assume {:captureState "$main$__1__$CHn9erYlSlKfynDQ6gTYzw_goto_$main$__2__$r34s2UoUQh2rqn4~31H5vg"} true;
    assume (!((NF == VF) && (ZF == 0bv1)));
    goto $main$__2__$r34s2UoUQh2rqn4~31H5vg;
  $main$__15__$XH2fSZzqQcCkVmtelRgjHA_goto_$main$__19__$GV6On60PTc~Xs_mrsPUgrw:
    assume {:captureState "$main$__15__$XH2fSZzqQcCkVmtelRgjHA_goto_$main$__19__$GV6On60PTc~Xs_mrsPUgrw"} true;
    assume (!((NF == VF) && (ZF == 0bv1)));
    goto $main$__19__$GV6On60PTc~Xs_mrsPUgrw;
  $main$__15__$XH2fSZzqQcCkVmtelRgjHA_goto_$main$__16__$LixriQmDS9OP6kZAgCfxQA:
    assume {:captureState "$main$__15__$XH2fSZzqQcCkVmtelRgjHA_goto_$main$__16__$LixriQmDS9OP6kZAgCfxQA"} true;
    assume (!(!((NF == VF) && (ZF == 0bv1))));
    goto $main$__16__$LixriQmDS9OP6kZAgCfxQA;
  $main$__8__$c7DVzlGpTka13ffRU2fb3A_goto_$main$__27__$ghrdCrHVShG~sRRFtXftvA:
    assume {:captureState "$main$__8__$c7DVzlGpTka13ffRU2fb3A_goto_$main$__27__$ghrdCrHVShG~sRRFtXftvA"} true;
    assume ((R0[32:0] == 0bv32) == false);
    goto $main$__27__$ghrdCrHVShG~sRRFtXftvA;
  $main$__8__$c7DVzlGpTka13ffRU2fb3A_goto_$main$__9__$CSj7eUglQHyGcHZhFIATcQ:
    assume {:captureState "$main$__8__$c7DVzlGpTka13ffRU2fb3A_goto_$main$__9__$CSj7eUglQHyGcHZhFIATcQ"} true;
    assume (!((R0[32:0] == 0bv32) == false));
    goto $main$__9__$CSj7eUglQHyGcHZhFIATcQ;
  $main$__20__$MlpQg7E2QjSZikQXMmYI0g_goto_$main$__27__$ghrdCrHVShG~sRRFtXftvA:
    assume {:captureState "$main$__20__$MlpQg7E2QjSZikQXMmYI0g_goto_$main$__27__$ghrdCrHVShG~sRRFtXftvA"} true;
    assume (!(ZF == 1bv1));
    goto $main$__27__$ghrdCrHVShG~sRRFtXftvA;
  $main$__20__$MlpQg7E2QjSZikQXMmYI0g_goto_$main$__21__$6iiG1Zl2RF~wJXQMLcXkMg:
    assume {:captureState "$main$__20__$MlpQg7E2QjSZikQXMmYI0g_goto_$main$__21__$6iiG1Zl2RF~wJXQMLcXkMg"} true;
    assume (!(!(ZF == 1bv1)));
    goto $main$__21__$6iiG1Zl2RF~wJXQMLcXkMg;
  $main$__2__$r34s2UoUQh2rqn4~31H5vg_goto_$main$__22__$jgORdcwrSuqi8Dk0PNMimQ:
    assume {:captureState "$main$__2__$r34s2UoUQh2rqn4~31H5vg_goto_$main$__22__$jgORdcwrSuqi8Dk0PNMimQ"} true;
    assume (ZF == 1bv1);
    goto $main$__22__$jgORdcwrSuqi8Dk0PNMimQ;
  $main$__2__$r34s2UoUQh2rqn4~31H5vg_goto_$main$__3__$CJUc5xBxRJSmqD3tHmTgrw:
    assume {:captureState "$main$__2__$r34s2UoUQh2rqn4~31H5vg_goto_$main$__3__$CJUc5xBxRJSmqD3tHmTgrw"} true;
    assume (!(ZF == 1bv1));
    goto $main$__3__$CJUc5xBxRJSmqD3tHmTgrw;
  $main$__3__$CJUc5xBxRJSmqD3tHmTgrw_goto_$main$__10__$zwDu~UXVRaS43a2Plka3~g:
    assume {:captureState "$main$__3__$CJUc5xBxRJSmqD3tHmTgrw_goto_$main$__10__$zwDu~UXVRaS43a2Plka3~g"} true;
    assume ((NF == VF) && (ZF == 0bv1));
    goto $main$__10__$zwDu~UXVRaS43a2Plka3~g;
  $main$__3__$CJUc5xBxRJSmqD3tHmTgrw_goto_$main$__4__$fNPGFnLHRHWMfYNezFYLJQ:
    assume {:captureState "$main$__3__$CJUc5xBxRJSmqD3tHmTgrw_goto_$main$__4__$fNPGFnLHRHWMfYNezFYLJQ"} true;
    assume (!((NF == VF) && (ZF == 0bv1)));
    goto $main$__4__$fNPGFnLHRHWMfYNezFYLJQ;
  $main$__10__$zwDu~UXVRaS43a2Plka3~g_goto_$main$__24__$sTTkWEDiRkmRPEv35AqMsQ:
    assume {:captureState "$main$__10__$zwDu~UXVRaS43a2Plka3~g_goto_$main$__24__$sTTkWEDiRkmRPEv35AqMsQ"} true;
    assume (ZF == 1bv1);
    goto $main$__24__$sTTkWEDiRkmRPEv35AqMsQ;
  $main$__10__$zwDu~UXVRaS43a2Plka3~g_goto_$main$__11__$uxdyZthtTKWcClI6ylURdg:
    assume {:captureState "$main$__10__$zwDu~UXVRaS43a2Plka3~g_goto_$main$__11__$uxdyZthtTKWcClI6ylURdg"} true;
    assume (!(ZF == 1bv1));
    goto $main$__11__$uxdyZthtTKWcClI6ylURdg;
  $main$__4__$fNPGFnLHRHWMfYNezFYLJQ_goto_$main$__23__$75HGhUJPRceXP6NjGSTerg:
    assume {:captureState "$main$__4__$fNPGFnLHRHWMfYNezFYLJQ_goto_$main$__23__$75HGhUJPRceXP6NjGSTerg"} true;
    assume (ZF == 1bv1);
    goto $main$__23__$75HGhUJPRceXP6NjGSTerg;
  $main$__4__$fNPGFnLHRHWMfYNezFYLJQ_goto_$main$__5__$yWAtAGLORaO0kkkfGmJBxg:
    assume {:captureState "$main$__4__$fNPGFnLHRHWMfYNezFYLJQ_goto_$main$__5__$yWAtAGLORaO0kkkfGmJBxg"} true;
    assume (!(ZF == 1bv1));
    goto $main$__5__$yWAtAGLORaO0kkkfGmJBxg;
  $main$__17__$sUtIO5YgToSWVO59xcPiBQ_goto_$main$__27__$ghrdCrHVShG~sRRFtXftvA:
    assume {:captureState "$main$__17__$sUtIO5YgToSWVO59xcPiBQ_goto_$main$__27__$ghrdCrHVShG~sRRFtXftvA"} true;
    assume (!(ZF == 1bv1));
    goto $main$__27__$ghrdCrHVShG~sRRFtXftvA;
  $main$__17__$sUtIO5YgToSWVO59xcPiBQ_goto_$main$__18__$N8d5AkRRTiaceWqt0Ogi0g:
    assume {:captureState "$main$__17__$sUtIO5YgToSWVO59xcPiBQ_goto_$main$__18__$N8d5AkRRTiaceWqt0Ogi0g"} true;
    assume (!(!(ZF == 1bv1)));
    goto $main$__18__$N8d5AkRRTiaceWqt0Ogi0g;
  $main$__14__$skZzD4KjQ3O2oX~6W5_qBQ_goto_$main$__25__$1NKikr2_T7OPq7M7Oj0VnQ:
    assume {:captureState "$main$__14__$skZzD4KjQ3O2oX~6W5_qBQ_goto_$main$__25__$1NKikr2_T7OPq7M7Oj0VnQ"} true;
    assume (ZF == 1bv1);
    goto $main$__25__$1NKikr2_T7OPq7M7Oj0VnQ;
  $main$__14__$skZzD4KjQ3O2oX~6W5_qBQ_goto_$main$__15__$XH2fSZzqQcCkVmtelRgjHA:
    assume {:captureState "$main$__14__$skZzD4KjQ3O2oX~6W5_qBQ_goto_$main$__15__$XH2fSZzqQcCkVmtelRgjHA"} true;
    assume (!(ZF == 1bv1));
    goto $main$__15__$XH2fSZzqQcCkVmtelRgjHA;
  $main$__0__$0sz7~MBESKq_l7wsV7QzEw_goto_$main$__12__$yKAK2PskRMGoL74k8tWP2A:
    assume {:captureState "$main$__0__$0sz7~MBESKq_l7wsV7QzEw_goto_$main$__12__$yKAK2PskRMGoL74k8tWP2A"} true;
    assume (ZF == 1bv1);
    goto $main$__12__$yKAK2PskRMGoL74k8tWP2A;
  $main$__0__$0sz7~MBESKq_l7wsV7QzEw_goto_$main$__1__$CHn9erYlSlKfynDQ6gTYzw:
    assume {:captureState "$main$__0__$0sz7~MBESKq_l7wsV7QzEw_goto_$main$__1__$CHn9erYlSlKfynDQ6gTYzw"} true;
    assume (!(ZF == 1bv1));
    goto $main$__1__$CHn9erYlSlKfynDQ6gTYzw;
  $main$__19__$GV6On60PTc~Xs_mrsPUgrw_goto_$main$__13__$q5KG8J9qRg6~XKHEFa6IRA:
    assume {:captureState "$main$__19__$GV6On60PTc~Xs_mrsPUgrw_goto_$main$__13__$q5KG8J9qRg6~XKHEFa6IRA"} true;
    assume (ZF == 1bv1);
    goto $main$__13__$q5KG8J9qRg6~XKHEFa6IRA;
  $main$__19__$GV6On60PTc~Xs_mrsPUgrw_goto_$main$__20__$MlpQg7E2QjSZikQXMmYI0g:
    assume {:captureState "$main$__19__$GV6On60PTc~Xs_mrsPUgrw_goto_$main$__20__$MlpQg7E2QjSZikQXMmYI0g"} true;
    assume (!(ZF == 1bv1));
    goto $main$__20__$MlpQg7E2QjSZikQXMmYI0g;
  main_basil_return:
    assume {:captureState "main_basil_return"} true;
    return;
}

