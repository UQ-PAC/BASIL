00000be4: program
00000bce: sub __cxa_finalize(__cxa_finalize_result)
00000be5: __cxa_finalize_result :: out u32 = low:32[R0]

00000974:
00000a6c: R16 := 0x11000
00000a73: R17 := mem[R16 + 8, el]:u64
00000a79: R16 := R16 + 8
00000a7e: call R17 with noreturn

00000bcf: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
00000be6: __do_global_dtors_aux_result :: out u32 = low:32[R0]

00000881:
00000885: #3 := R31 - 0x20
0000088b: mem := mem with [#3, el]:u64 <- R29
00000891: mem := mem with [#3 + 8, el]:u64 <- R30
00000895: R31 := #3
0000089b: R29 := R31
000008a3: mem := mem with [R31 + 0x10, el]:u64 <- R19
000008a8: R19 := 0x11000
000008af: R0 := pad:64[mem[R19 + 0x30]]
000008b6: when 31:0[R0] <> 0 goto %000008b4
00000bd0: goto %0000093d

0000093d:
00000940: R0 := 0x10000
00000947: R0 := mem[R0 + 0xFC8, el]:u64
0000094d: when R0 = 0 goto %0000094b
00000bd1: goto %00000964

00000964:
00000967: R0 := 0x11000
0000096e: R0 := mem[R0 + 0x28, el]:u64
00000973: R30 := 0x6F0
00000976: call @__cxa_finalize with return %0000094b

0000094b:
00000953: R30 := 0x6F4
00000955: call @deregister_tm_clones with return %00000957

00000957:
0000095a: R0 := 1
00000962: mem := mem with [R19 + 0x30] <- 7:0[R0]
00000bd2: goto %000008b4

000008b4:
000008be: R19 := mem[R31 + 0x10, el]:u64
000008c5: R29 := mem[R31, el]:u64
000008ca: R30 := mem[R31 + 8, el]:u64
000008ce: R31 := R31 + 0x20
000008d3: call R30 with noreturn

00000bd3: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
00000be7: __libc_start_main_main :: in u64 = R0
00000be8: __libc_start_main_arg2 :: in u32 = low:32[R1]
00000be9: __libc_start_main_arg3 :: in out u64 = R2
00000bea: __libc_start_main_auxv :: in out u64 = R3
00000beb: __libc_start_main_result :: out u32 = low:32[R0]

000007da:
00000a56: R16 := 0x11000
00000a5d: R17 := mem[R16, el]:u64
00000a63: R16 := R16
00000a68: call R17 with noreturn

00000bd4: sub _fini(_fini_result)
00000bec: _fini_result :: out u32 = low:32[R0]

00000616:
0000061c: #0 := R31 - 0x10
00000622: mem := mem with [#0, el]:u64 <- R29
00000628: mem := mem with [#0 + 8, el]:u64 <- R30
0000062c: R31 := #0
00000632: R29 := R31
00000639: R29 := mem[R31, el]:u64
0000063e: R30 := mem[R31 + 8, el]:u64
00000642: R31 := R31 + 0x10
00000647: call R30 with noreturn

00000bd5: sub _init(_init_result)
00000bed: _init_result :: out u32 = low:32[R0]

00000b21:
00000b27: #5 := R31 - 0x10
00000b2d: mem := mem with [#5, el]:u64 <- R29
00000b33: mem := mem with [#5 + 8, el]:u64 <- R30
00000b37: R31 := #5
00000b3d: R29 := R31
00000b42: R30 := 0x590
00000b44: call @call_weak_fn with return %00000b46

00000b46:
00000b4b: R29 := mem[R31, el]:u64
00000b50: R30 := mem[R31 + 8, el]:u64
00000b54: R31 := R31 + 0x10
00000b59: call R30 with noreturn

00000bd6: sub _start(_start_result)
00000bee: _start_result :: out u32 = low:32[R0]

0000079b:
000007a0: R29 := 0
000007a5: R30 := 0
000007ab: R5 := R0
000007b2: R1 := mem[R31, el]:u64
000007b8: R2 := R31 + 8
000007be: R6 := R31
000007c3: R0 := 0x10000
000007ca: R0 := mem[R0 + 0xFD8, el]:u64
000007cf: R3 := 0
000007d4: R4 := 0
000007d9: R30 := 0x630
000007dc: call @__libc_start_main with return %000007de

000007de:
000007e1: R30 := 0x634
000007e4: call @abort with return %00000bd7

00000bd7:
00000bd8: call @call_weak_fn with noreturn

00000bd9: sub abort()


000007e2:
00000a98: R16 := 0x11000
00000a9f: R17 := mem[R16 + 0x18, el]:u64
00000aa5: R16 := R16 + 0x18
00000aaa: call R17 with noreturn

00000bda: sub call_weak_fn(call_weak_fn_result)
00000bef: call_weak_fn_result :: out u32 = low:32[R0]

000007e6:
000007e9: R0 := 0x10000
000007f0: R0 := mem[R0 + 0xFD0, el]:u64
000007f6: when R0 = 0 goto %000007f4
00000bdb: goto %000009b4

000007f4:
000007fc: call R30 with noreturn

000009b4:
000009b7: goto @__gmon_start__

000009b5:
00000a82: R16 := 0x11000
00000a89: R17 := mem[R16 + 0x10, el]:u64
00000a8f: R16 := R16 + 0x10
00000a94: call R17 with noreturn

00000bdc: sub deregister_tm_clones(deregister_tm_clones_result)
00000bf0: deregister_tm_clones_result :: out u32 = low:32[R0]

00000802:
00000805: R0 := 0x11000
0000080b: R0 := R0 + 0x30
00000810: R1 := 0x11000
00000816: R1 := R1 + 0x30
0000081c: #1 := ~R0
00000821: #2 := R1 + ~R0
00000827: VF := extend:65[#2 + 1] <> extend:65[R1] + extend:65[#1] + 1
0000082d: CF := pad:65[#2 + 1] <> pad:65[R1] + pad:65[#1] + 1
00000831: ZF := #2 + 1 = 0
00000835: NF := 63:63[#2 + 1]
0000083b: when ZF goto %00000839
00000bdd: goto %00000996

00000996:
00000999: R1 := 0x10000
000009a0: R1 := mem[R1 + 0xFC0, el]:u64
000009a5: when R1 = 0 goto %00000839
00000bde: goto %000009a9

00000839:
00000841: call R30 with noreturn

000009a9:
000009ad: R16 := R1
000009b2: call R16 with noreturn

00000bdf: sub frame_dummy(frame_dummy_result)
00000bf1: frame_dummy_result :: out u32 = low:32[R0]

000008d9:
000008db: call @register_tm_clones with noreturn

00000be0: sub main(main_argc, main_argv, main_result)
00000bf2: main_argc :: in u32 = low:32[R0]
00000bf3: main_argv :: in out u64 = R1
00000bf4: main_result :: out u32 = low:32[R0]

000008dd:
000008e0: R9 := 0x11000
000008e5: R0 := 0
000008ec: mem := mem with [R9 + 0x34, el]:u32 <- 0
000008f3: R8 := pad:64[mem[R9 + 0x34, el]:u32]
000008f9: R8 := pad:64[31:0[R8] + 1]
00000901: mem := mem with [R9 + 0x34, el]:u32 <- 31:0[R8]
00000906: R8 := 0x11000
0000090d: R10 := pad:64[mem[R8 + 0x38, el]:u32]
00000912: R8 := 0x11000
0000091a: mem := mem with [R8 + 0x3C, el]:u32 <- 31:0[R10]
00000921: mem := mem with [R8 + 0x3C, el]:u32 <- 0
00000928: R8 := pad:64[mem[R9 + 0x34, el]:u32]
0000092e: R8 := pad:64[31:0[R8] + 1]
00000936: mem := mem with [R9 + 0x34, el]:u32 <- 31:0[R8]
0000093b: call R30 with noreturn

00000be1: sub register_tm_clones(register_tm_clones_result)
00000bf5: register_tm_clones_result :: out u32 = low:32[R0]

00000843:
00000846: R0 := 0x11000
0000084c: R0 := R0 + 0x30
00000851: R1 := 0x11000
00000857: R1 := R1 + 0x30
0000085e: R1 := R1 + ~R0 + 1
00000864: R2 := 0.63:63[R1]
0000086b: R1 := R2 + (R1 ~>> 3)
00000871: R1 := extend:64[63:1[R1]]
00000877: when R1 = 0 goto %00000875
00000be2: goto %00000978

00000978:
0000097b: R2 := 0x10000
00000982: R2 := mem[R2 + 0xFE0, el]:u64
00000987: when R2 = 0 goto %00000875
00000be3: goto %0000098b

00000875:
0000087d: call R30 with noreturn

0000098b:
0000098f: R16 := R2
00000994: call R16 with noreturn
