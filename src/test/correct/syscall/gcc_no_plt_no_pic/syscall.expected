var Gamma_R0: bool;
var Gamma_R1: bool;
var Gamma_R16: bool;
var Gamma_R17: bool;
var Gamma_R29: bool;
var Gamma_R30: bool;
var Gamma_R31: bool;
var Gamma_mem: [bv64]bool;
var Gamma_stack: [bv64]bool;
var R0: bv64;
var R1: bv64;
var R16: bv64;
var R17: bv64;
var R29: bv64;
var R30: bv64;
var R31: bv64;
var mem: [bv64]bv8;
var stack: [bv64]bv8;
const $_IO_stdin_used_addr: bv64;
axiom ($_IO_stdin_used_addr == 1932bv64);
function {:bvbuiltin "bvadd"} bvadd64(bv64, bv64) returns (bv64);
function gamma_load32(gammaMap: [bv64]bool, index: bv64) returns (bool) {
  (gammaMap[bvadd64(index, 3bv64)] && (gammaMap[bvadd64(index, 2bv64)] && (gammaMap[bvadd64(index, 1bv64)] && gammaMap[index])))
}

function gamma_load64(gammaMap: [bv64]bool, index: bv64) returns (bool) {
  (gammaMap[bvadd64(index, 7bv64)] && (gammaMap[bvadd64(index, 6bv64)] && (gammaMap[bvadd64(index, 5bv64)] && (gammaMap[bvadd64(index, 4bv64)] && (gammaMap[bvadd64(index, 3bv64)] && (gammaMap[bvadd64(index, 2bv64)] && (gammaMap[bvadd64(index, 1bv64)] && gammaMap[index])))))))
}

function gamma_store32(gammaMap: [bv64]bool, index: bv64, value: bool) returns ([bv64]bool) {
  gammaMap[index := value][bvadd64(index, 1bv64) := value][bvadd64(index, 2bv64) := value][bvadd64(index, 3bv64) := value]
}

function gamma_store64(gammaMap: [bv64]bool, index: bv64, value: bool) returns ([bv64]bool) {
  gammaMap[index := value][bvadd64(index, 1bv64) := value][bvadd64(index, 2bv64) := value][bvadd64(index, 3bv64) := value][bvadd64(index, 4bv64) := value][bvadd64(index, 5bv64) := value][bvadd64(index, 6bv64) := value][bvadd64(index, 7bv64) := value]
}

function memory_load32_le(memory: [bv64]bv8, index: bv64) returns (bv32) {
  (memory[bvadd64(index, 3bv64)] ++ (memory[bvadd64(index, 2bv64)] ++ (memory[bvadd64(index, 1bv64)] ++ memory[index])))
}

function memory_load64_le(memory: [bv64]bv8, index: bv64) returns (bv64) {
  (memory[bvadd64(index, 7bv64)] ++ (memory[bvadd64(index, 6bv64)] ++ (memory[bvadd64(index, 5bv64)] ++ (memory[bvadd64(index, 4bv64)] ++ (memory[bvadd64(index, 3bv64)] ++ (memory[bvadd64(index, 2bv64)] ++ (memory[bvadd64(index, 1bv64)] ++ memory[index])))))))
}

function memory_load8_le(memory: [bv64]bv8, index: bv64) returns (bv8) {
  memory[index]
}

function memory_store32_le(memory: [bv64]bv8, index: bv64, value: bv32) returns ([bv64]bv8) {
  memory[index := value[8:0]][bvadd64(index, 1bv64) := value[16:8]][bvadd64(index, 2bv64) := value[24:16]][bvadd64(index, 3bv64) := value[32:24]]
}

function memory_store64_le(memory: [bv64]bv8, index: bv64, value: bv64) returns ([bv64]bv8) {
  memory[index := value[8:0]][bvadd64(index, 1bv64) := value[16:8]][bvadd64(index, 2bv64) := value[24:16]][bvadd64(index, 3bv64) := value[32:24]][bvadd64(index, 4bv64) := value[40:32]][bvadd64(index, 5bv64) := value[48:40]][bvadd64(index, 6bv64) := value[56:48]][bvadd64(index, 7bv64) := value[64:56]]
}

function {:bvbuiltin "zero_extend 32"} zero_extend32_32(bv32) returns (bv64);
procedure rely();
  modifies Gamma_mem, mem;
  ensures (mem == old(mem));
  ensures (Gamma_mem == old(Gamma_mem));
  free ensures (memory_load8_le(mem, 1932bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 1933bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 1934bv64) == 2bv8);
  free ensures (memory_load8_le(mem, 1935bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69008bv64) == 80bv8);
  free ensures (memory_load8_le(mem, 69009bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69010bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69011bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69012bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69013bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69014bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69015bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69016bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69017bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69018bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69019bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69020bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69021bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69022bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69023bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69616bv64) == 84bv8);
  free ensures (memory_load8_le(mem, 69617bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69618bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69619bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69620bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69621bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69622bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69623bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69640bv64) == 8bv8);
  free ensures (memory_load8_le(mem, 69641bv64) == 16bv8);
  free ensures (memory_load8_le(mem, 69642bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 69643bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69644bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69645bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69646bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69647bv64) == 0bv8);

procedure rely_transitive()
  modifies Gamma_mem, mem;
  ensures (mem == old(mem));
  ensures (Gamma_mem == old(Gamma_mem));
{
  call rely();
  call rely();
}

procedure rely_reflexive();

procedure guarantee_reflexive();
  modifies Gamma_mem, mem;

procedure fork();
  modifies Gamma_R16, Gamma_R17, R16, R17;
  free requires (memory_load8_le(mem, 1932bv64) == 1bv8);
  free requires (memory_load8_le(mem, 1933bv64) == 0bv8);
  free requires (memory_load8_le(mem, 1934bv64) == 2bv8);
  free requires (memory_load8_le(mem, 1935bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69008bv64) == 80bv8);
  free requires (memory_load8_le(mem, 69009bv64) == 7bv8);
  free requires (memory_load8_le(mem, 69010bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69011bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69012bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69013bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69014bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69015bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69016bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69017bv64) == 7bv8);
  free requires (memory_load8_le(mem, 69018bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69019bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69020bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69021bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69022bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69023bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69616bv64) == 84bv8);
  free requires (memory_load8_le(mem, 69617bv64) == 7bv8);
  free requires (memory_load8_le(mem, 69618bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69619bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69620bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69621bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69622bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69623bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69640bv64) == 8bv8);
  free requires (memory_load8_le(mem, 69641bv64) == 16bv8);
  free requires (memory_load8_le(mem, 69642bv64) == 1bv8);
  free requires (memory_load8_le(mem, 69643bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69644bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69645bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69646bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69647bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 1932bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 1933bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 1934bv64) == 2bv8);
  free ensures (memory_load8_le(mem, 1935bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69008bv64) == 80bv8);
  free ensures (memory_load8_le(mem, 69009bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69010bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69011bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69012bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69013bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69014bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69015bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69016bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69017bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69018bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69019bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69020bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69021bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69022bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69023bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69616bv64) == 84bv8);
  free ensures (memory_load8_le(mem, 69617bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69618bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69619bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69620bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69621bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69622bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69623bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69640bv64) == 8bv8);
  free ensures (memory_load8_le(mem, 69641bv64) == 16bv8);
  free ensures (memory_load8_le(mem, 69642bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 69643bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69644bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69645bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69646bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69647bv64) == 0bv8);

procedure main()
  modifies Gamma_R0, Gamma_R16, Gamma_R17, Gamma_R29, Gamma_R30, Gamma_R31, Gamma_stack, R0, R16, R17, R29, R30, R31, stack;
  free requires (memory_load8_le(mem, 69632bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69633bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69634bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69635bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69636bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69637bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69638bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69639bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69640bv64) == 8bv8);
  free requires (memory_load8_le(mem, 69641bv64) == 16bv8);
  free requires (memory_load8_le(mem, 69642bv64) == 1bv8);
  free requires (memory_load8_le(mem, 69643bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69644bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69645bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69646bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69647bv64) == 0bv8);
  free requires (memory_load8_le(mem, 1932bv64) == 1bv8);
  free requires (memory_load8_le(mem, 1933bv64) == 0bv8);
  free requires (memory_load8_le(mem, 1934bv64) == 2bv8);
  free requires (memory_load8_le(mem, 1935bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69008bv64) == 80bv8);
  free requires (memory_load8_le(mem, 69009bv64) == 7bv8);
  free requires (memory_load8_le(mem, 69010bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69011bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69012bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69013bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69014bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69015bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69016bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69017bv64) == 7bv8);
  free requires (memory_load8_le(mem, 69018bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69019bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69020bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69021bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69022bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69023bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69616bv64) == 84bv8);
  free requires (memory_load8_le(mem, 69617bv64) == 7bv8);
  free requires (memory_load8_le(mem, 69618bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69619bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69620bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69621bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69622bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69623bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69640bv64) == 8bv8);
  free requires (memory_load8_le(mem, 69641bv64) == 16bv8);
  free requires (memory_load8_le(mem, 69642bv64) == 1bv8);
  free requires (memory_load8_le(mem, 69643bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69644bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69645bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69646bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69647bv64) == 0bv8);
  free ensures (Gamma_R29 == old(Gamma_R29));
  free ensures (Gamma_R31 == old(Gamma_R31));
  free ensures (R29 == old(R29));
  free ensures (R31 == old(R31));
  free ensures (memory_load8_le(mem, 1932bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 1933bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 1934bv64) == 2bv8);
  free ensures (memory_load8_le(mem, 1935bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69008bv64) == 80bv8);
  free ensures (memory_load8_le(mem, 69009bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69010bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69011bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69012bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69013bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69014bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69015bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69016bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69017bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69018bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69019bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69020bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69021bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69022bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69023bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69616bv64) == 84bv8);
  free ensures (memory_load8_le(mem, 69617bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69618bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69619bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69620bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69621bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69622bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69623bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69640bv64) == 8bv8);
  free ensures (memory_load8_le(mem, 69641bv64) == 16bv8);
  free ensures (memory_load8_le(mem, 69642bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 69643bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69644bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69645bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69646bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69647bv64) == 0bv8);
{
  var #4: bv64;
  var Gamma_#4: bool;
  lmain:
    #4, Gamma_#4 := bvadd64(R31, 18446744073709551568bv64), Gamma_R31;
    stack, Gamma_stack := memory_store64_le(stack, #4, R29), gamma_store64(Gamma_stack, #4, Gamma_R29);
    stack, Gamma_stack := memory_store64_le(stack, bvadd64(#4, 8bv64), R30), gamma_store64(Gamma_stack, bvadd64(#4, 8bv64), Gamma_R30);
    R31, Gamma_R31 := #4, Gamma_#4;
    R29, Gamma_R29 := R31, Gamma_R31;
    stack, Gamma_stack := memory_store32_le(stack, bvadd64(R31, 28bv64), R0[32:0]), gamma_store32(Gamma_stack, bvadd64(R31, 28bv64), Gamma_R0);
    stack, Gamma_stack := memory_store64_le(stack, bvadd64(R31, 16bv64), R1), gamma_store64(Gamma_stack, bvadd64(R31, 16bv64), Gamma_R1);
    R30, Gamma_R30 := 1896bv64, true;
    call fork();
    goto l000008f9;
  l000008f9:
    stack, Gamma_stack := memory_store32_le(stack, bvadd64(R31, 44bv64), R0[32:0]), gamma_store32(Gamma_stack, bvadd64(R31, 44bv64), Gamma_R0);
    R0, Gamma_R0 := zero_extend32_32(memory_load32_le(stack, bvadd64(R31, 44bv64))), gamma_load32(Gamma_stack, bvadd64(R31, 44bv64));
    R29, Gamma_R29 := memory_load64_le(stack, R31), gamma_load64(Gamma_stack, R31);
    R30, Gamma_R30 := memory_load64_le(stack, bvadd64(R31, 8bv64)), gamma_load64(Gamma_stack, bvadd64(R31, 8bv64));
    R31, Gamma_R31 := bvadd64(R31, 48bv64), Gamma_R31;
    return;
}
