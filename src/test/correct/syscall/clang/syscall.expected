var Gamma_R0: bool;
var Gamma_R1: bool;
var Gamma_R29: bool;
var Gamma_R30: bool;
var Gamma_R31: bool;
var Gamma_mem: [bv64]bool;
var Gamma_stack: [bv64]bool;
var R0: bv64;
var R1: bv64;
var R29: bv64;
var R30: bv64;
var R31: bv64;
var mem: [bv64]bv8;
var stack: [bv64]bv8;
const $_IO_stdin_used_addr: bv64;
axiom ($_IO_stdin_used_addr == 1944bv64);
function L(memory: [bv64]bv8, index: bv64) returns (bool) {
  false
}

function {:bvbuiltin "bvadd"} bvadd64(bv64, bv64) returns (bv64);
function gamma_load32(gammaMap: [bv64]bool, index: bv64) returns (bool) {
  (gammaMap[bvadd64(index, 3bv64)] && (gammaMap[bvadd64(index, 2bv64)] && (gammaMap[bvadd64(index, 1bv64)] && gammaMap[index])))
}

function gamma_load64(gammaMap: [bv64]bool, index: bv64) returns (bool) {
  (gammaMap[bvadd64(index, 7bv64)] && (gammaMap[bvadd64(index, 6bv64)] && (gammaMap[bvadd64(index, 5bv64)] && (gammaMap[bvadd64(index, 4bv64)] && (gammaMap[bvadd64(index, 3bv64)] && (gammaMap[bvadd64(index, 2bv64)] && (gammaMap[bvadd64(index, 1bv64)] && gammaMap[index])))))))
}

function gamma_store32(gammaMap: [bv64]bool, index: bv64, value: bool) returns ([bv64]bool) {
  gammaMap[index := value][bvadd64(index, 1bv64) := value][bvadd64(index, 2bv64) := value][bvadd64(index, 3bv64) := value]
}

function gamma_store64(gammaMap: [bv64]bool, index: bv64, value: bool) returns ([bv64]bool) {
  gammaMap[index := value][bvadd64(index, 1bv64) := value][bvadd64(index, 2bv64) := value][bvadd64(index, 3bv64) := value][bvadd64(index, 4bv64) := value][bvadd64(index, 5bv64) := value][bvadd64(index, 6bv64) := value][bvadd64(index, 7bv64) := value]
}

function memory_load32_le(memory: [bv64]bv8, index: bv64) returns (bv32) {
  (memory[bvadd64(index, 3bv64)] ++ (memory[bvadd64(index, 2bv64)] ++ (memory[bvadd64(index, 1bv64)] ++ memory[index])))
}

function memory_load64_le(memory: [bv64]bv8, index: bv64) returns (bv64) {
  (memory[bvadd64(index, 7bv64)] ++ (memory[bvadd64(index, 6bv64)] ++ (memory[bvadd64(index, 5bv64)] ++ (memory[bvadd64(index, 4bv64)] ++ (memory[bvadd64(index, 3bv64)] ++ (memory[bvadd64(index, 2bv64)] ++ (memory[bvadd64(index, 1bv64)] ++ memory[index])))))))
}

function memory_load8_le(memory: [bv64]bv8, index: bv64) returns (bv8) {
  memory[index]
}

function memory_store32_le(memory: [bv64]bv8, index: bv64, value: bv32) returns ([bv64]bv8) {
  memory[index := value[8:0]][bvadd64(index, 1bv64) := value[16:8]][bvadd64(index, 2bv64) := value[24:16]][bvadd64(index, 3bv64) := value[32:24]]
}

function memory_store64_le(memory: [bv64]bv8, index: bv64, value: bv64) returns ([bv64]bv8) {
  memory[index := value[8:0]][bvadd64(index, 1bv64) := value[16:8]][bvadd64(index, 2bv64) := value[24:16]][bvadd64(index, 3bv64) := value[32:24]][bvadd64(index, 4bv64) := value[40:32]][bvadd64(index, 5bv64) := value[48:40]][bvadd64(index, 6bv64) := value[56:48]][bvadd64(index, 7bv64) := value[64:56]]
}

function {:bvbuiltin "zero_extend 32"} zero_extend32_32(bv32) returns (bv64);
procedure rely();
  modifies mem, Gamma_mem;
  ensures (mem == old(mem));
  ensures (Gamma_mem == old(Gamma_mem));
  free ensures (memory_load8_le(mem, 1944bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 1945bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 1946bv64) == 2bv8);
  free ensures (memory_load8_le(mem, 1947bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69064bv64) == 80bv8);
  free ensures (memory_load8_le(mem, 69065bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69066bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69067bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69068bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69069bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69070bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69071bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69072bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69073bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69074bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69075bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69076bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69077bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69078bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69079bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69592bv64) == 84bv8);
  free ensures (memory_load8_le(mem, 69593bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69594bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69595bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69596bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69597bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69598bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69599bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69680bv64) == 48bv8);
  free ensures (memory_load8_le(mem, 69681bv64) == 16bv8);
  free ensures (memory_load8_le(mem, 69682bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 69683bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69684bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69685bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69686bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69687bv64) == 0bv8);

procedure rely_transitive()
  modifies mem, Gamma_mem;
  ensures (mem == old(mem));
  ensures (Gamma_mem == old(Gamma_mem));
{
  call rely();
  call rely();
}

procedure rely_reflexive();

procedure guarantee_reflexive();
  modifies mem, Gamma_mem;

procedure fork();
  free requires (memory_load8_le(mem, 1944bv64) == 1bv8);
  free requires (memory_load8_le(mem, 1945bv64) == 0bv8);
  free requires (memory_load8_le(mem, 1946bv64) == 2bv8);
  free requires (memory_load8_le(mem, 1947bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69064bv64) == 80bv8);
  free requires (memory_load8_le(mem, 69065bv64) == 7bv8);
  free requires (memory_load8_le(mem, 69066bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69067bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69068bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69069bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69070bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69071bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69072bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69073bv64) == 7bv8);
  free requires (memory_load8_le(mem, 69074bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69075bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69076bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69077bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69078bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69079bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69592bv64) == 84bv8);
  free requires (memory_load8_le(mem, 69593bv64) == 7bv8);
  free requires (memory_load8_le(mem, 69594bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69595bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69596bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69597bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69598bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69599bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69680bv64) == 48bv8);
  free requires (memory_load8_le(mem, 69681bv64) == 16bv8);
  free requires (memory_load8_le(mem, 69682bv64) == 1bv8);
  free requires (memory_load8_le(mem, 69683bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69684bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69685bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69686bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69687bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 1944bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 1945bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 1946bv64) == 2bv8);
  free ensures (memory_load8_le(mem, 1947bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69064bv64) == 80bv8);
  free ensures (memory_load8_le(mem, 69065bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69066bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69067bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69068bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69069bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69070bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69071bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69072bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69073bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69074bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69075bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69076bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69077bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69078bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69079bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69592bv64) == 84bv8);
  free ensures (memory_load8_le(mem, 69593bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69594bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69595bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69596bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69597bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69598bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69599bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69680bv64) == 48bv8);
  free ensures (memory_load8_le(mem, 69681bv64) == 16bv8);
  free ensures (memory_load8_le(mem, 69682bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 69683bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69684bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69685bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69686bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69687bv64) == 0bv8);

procedure main()
  modifies Gamma_R0, Gamma_R29, Gamma_R30, Gamma_R31, Gamma_mem, Gamma_stack, R0, R29, R30, R31, mem, stack;
  free requires (memory_load8_le(mem, 69672bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69673bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69674bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69675bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69676bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69677bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69678bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69679bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69680bv64) == 48bv8);
  free requires (memory_load8_le(mem, 69681bv64) == 16bv8);
  free requires (memory_load8_le(mem, 69682bv64) == 1bv8);
  free requires (memory_load8_le(mem, 69683bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69684bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69685bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69686bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69687bv64) == 0bv8);
  free requires (memory_load8_le(mem, 1944bv64) == 1bv8);
  free requires (memory_load8_le(mem, 1945bv64) == 0bv8);
  free requires (memory_load8_le(mem, 1946bv64) == 2bv8);
  free requires (memory_load8_le(mem, 1947bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69064bv64) == 80bv8);
  free requires (memory_load8_le(mem, 69065bv64) == 7bv8);
  free requires (memory_load8_le(mem, 69066bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69067bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69068bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69069bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69070bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69071bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69072bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69073bv64) == 7bv8);
  free requires (memory_load8_le(mem, 69074bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69075bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69076bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69077bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69078bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69079bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69592bv64) == 84bv8);
  free requires (memory_load8_le(mem, 69593bv64) == 7bv8);
  free requires (memory_load8_le(mem, 69594bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69595bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69596bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69597bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69598bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69599bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69680bv64) == 48bv8);
  free requires (memory_load8_le(mem, 69681bv64) == 16bv8);
  free requires (memory_load8_le(mem, 69682bv64) == 1bv8);
  free requires (memory_load8_le(mem, 69683bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69684bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69685bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69686bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69687bv64) == 0bv8);
  free ensures (Gamma_R29 == old(Gamma_R29));
  free ensures (Gamma_R31 == old(Gamma_R31));
  free ensures (R29 == old(R29));
  free ensures (R31 == old(R31));
  free ensures (memory_load8_le(mem, 1944bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 1945bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 1946bv64) == 2bv8);
  free ensures (memory_load8_le(mem, 1947bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69064bv64) == 80bv8);
  free ensures (memory_load8_le(mem, 69065bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69066bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69067bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69068bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69069bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69070bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69071bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69072bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69073bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69074bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69075bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69076bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69077bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69078bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69079bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69592bv64) == 84bv8);
  free ensures (memory_load8_le(mem, 69593bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69594bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69595bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69596bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69597bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69598bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69599bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69680bv64) == 48bv8);
  free ensures (memory_load8_le(mem, 69681bv64) == 16bv8);
  free ensures (memory_load8_le(mem, 69682bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 69683bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69684bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69685bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69686bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69687bv64) == 0bv8);
{
  var #4: bv64;
  var #5: bv64;
  var Gamma_#4: bool;
  var Gamma_#5: bool;
  lmain:
    R31, Gamma_R31 := bvadd64(R31, 18446744073709551568bv64), Gamma_R31;
    #4, Gamma_#4 := bvadd64(R31, 32bv64), Gamma_R31;
    stack, Gamma_stack := memory_store64_le(stack, #4, R29), gamma_store64(Gamma_stack, #4, Gamma_R29);
    stack, Gamma_stack := memory_store64_le(stack, bvadd64(#4, 8bv64), R30), gamma_store64(Gamma_stack, bvadd64(#4, 8bv64), Gamma_R30);
    R29, Gamma_R29 := bvadd64(R31, 32bv64), Gamma_R31;
    stack, Gamma_stack := memory_store32_le(stack, bvadd64(R29, 18446744073709551612bv64), 0bv32), gamma_store32(Gamma_stack, bvadd64(R29, 18446744073709551612bv64), true);
    stack, Gamma_stack := memory_store32_le(stack, bvadd64(R29, 18446744073709551608bv64), R0[32:0]), gamma_store32(Gamma_stack, bvadd64(R29, 18446744073709551608bv64), Gamma_R0);
    stack, Gamma_stack := memory_store64_le(stack, bvadd64(R31, 16bv64), R1), gamma_store64(Gamma_stack, bvadd64(R31, 16bv64), Gamma_R1);
    R30, Gamma_R30 := 1904bv64, true;
    call fork();
    goto l00000317;
  l00000317:
    call rely();
    assert (L(mem, bvadd64(R31, 12bv64)) ==> Gamma_R0);
    mem, Gamma_mem := memory_store32_le(mem, bvadd64(R31, 12bv64), R0[32:0]), gamma_store32(Gamma_mem, bvadd64(R31, 12bv64), Gamma_R0);
    R0, Gamma_R0 := zero_extend32_32(memory_load32_le(mem, bvadd64(R31, 12bv64))), (gamma_load32(Gamma_mem, bvadd64(R31, 12bv64)) || L(mem, bvadd64(R31, 12bv64)));
    #5, Gamma_#5 := bvadd64(R31, 32bv64), Gamma_R31;
    R29, Gamma_R29 := memory_load64_le(mem, #5), (gamma_load64(Gamma_mem, #5) || L(mem, #5));
    R30, Gamma_R30 := memory_load64_le(mem, bvadd64(#5, 8bv64)), (gamma_load64(Gamma_mem, bvadd64(#5, 8bv64)) || L(mem, bvadd64(#5, 8bv64)));
    R31, Gamma_R31 := bvadd64(R31, 48bv64), Gamma_R31;
    return;
}
