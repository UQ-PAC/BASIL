var {:extern} Gamma_R0: bool;
var {:extern} Gamma_R1: bool;
var {:extern} Gamma_R29: bool;
var {:extern} Gamma_R30: bool;
var {:extern} Gamma_R31: bool;
var {:extern} Gamma_mem: [bv64]bool;
var {:extern} Gamma_stack: [bv64]bool;
var {:extern} R0: bv64;
var {:extern} R1: bv64;
var {:extern} R29: bv64;
var {:extern} R30: bv64;
var {:extern} R31: bv64;
var {:extern} mem: [bv64]bv8;
var {:extern} stack: [bv64]bv8;
const {:extern} $x_addr: bv64;
axiom ($x_addr == 69652bv64);
const {:extern} $y_addr: bv64;
axiom ($y_addr == 69656bv64);
function {:extern} L(memory: [bv64]bv8, index: bv64) returns (bool) {
  (if (index == $y_addr) then (memory_load32_le(memory, $x_addr) == 1bv32) else (if (index == $x_addr) then true else false))
}

function {:extern} {:bvbuiltin "bvadd"} bvadd64(bv64, bv64) returns (bv64);
function {:extern} gamma_load32(gammaMap: [bv64]bool, index: bv64) returns (bool) {
  (gammaMap[bvadd64(index, 3bv64)] && (gammaMap[bvadd64(index, 2bv64)] && (gammaMap[bvadd64(index, 1bv64)] && gammaMap[index])))
}

function {:extern} gamma_load64(gammaMap: [bv64]bool, index: bv64) returns (bool) {
  (gammaMap[bvadd64(index, 7bv64)] && (gammaMap[bvadd64(index, 6bv64)] && (gammaMap[bvadd64(index, 5bv64)] && (gammaMap[bvadd64(index, 4bv64)] && (gammaMap[bvadd64(index, 3bv64)] && (gammaMap[bvadd64(index, 2bv64)] && (gammaMap[bvadd64(index, 1bv64)] && gammaMap[index])))))))
}

function {:extern} gamma_store32(gammaMap: [bv64]bool, index: bv64, value: bool) returns ([bv64]bool) {
  gammaMap[index := value][bvadd64(index, 1bv64) := value][bvadd64(index, 2bv64) := value][bvadd64(index, 3bv64) := value]
}

function {:extern} gamma_store64(gammaMap: [bv64]bool, index: bv64, value: bool) returns ([bv64]bool) {
  gammaMap[index := value][bvadd64(index, 1bv64) := value][bvadd64(index, 2bv64) := value][bvadd64(index, 3bv64) := value][bvadd64(index, 4bv64) := value][bvadd64(index, 5bv64) := value][bvadd64(index, 6bv64) := value][bvadd64(index, 7bv64) := value]
}

function {:extern} memory_load32_le(memory: [bv64]bv8, index: bv64) returns (bv32) {
  (memory[bvadd64(index, 3bv64)] ++ (memory[bvadd64(index, 2bv64)] ++ (memory[bvadd64(index, 1bv64)] ++ memory[index])))
}

function {:extern} memory_load64_le(memory: [bv64]bv8, index: bv64) returns (bv64) {
  (memory[bvadd64(index, 7bv64)] ++ (memory[bvadd64(index, 6bv64)] ++ (memory[bvadd64(index, 5bv64)] ++ (memory[bvadd64(index, 4bv64)] ++ (memory[bvadd64(index, 3bv64)] ++ (memory[bvadd64(index, 2bv64)] ++ (memory[bvadd64(index, 1bv64)] ++ memory[index])))))))
}

function {:extern} memory_load8_le(memory: [bv64]bv8, index: bv64) returns (bv8) {
  memory[index]
}

function {:extern} memory_store32_le(memory: [bv64]bv8, index: bv64, value: bv32) returns ([bv64]bv8) {
  memory[index := value[8:0]][bvadd64(index, 1bv64) := value[16:8]][bvadd64(index, 2bv64) := value[24:16]][bvadd64(index, 3bv64) := value[32:24]]
}

function {:extern} memory_store64_le(memory: [bv64]bv8, index: bv64, value: bv64) returns ([bv64]bv8) {
  memory[index := value[8:0]][bvadd64(index, 1bv64) := value[16:8]][bvadd64(index, 2bv64) := value[24:16]][bvadd64(index, 3bv64) := value[32:24]][bvadd64(index, 4bv64) := value[40:32]][bvadd64(index, 5bv64) := value[48:40]][bvadd64(index, 6bv64) := value[56:48]][bvadd64(index, 7bv64) := value[64:56]]
}

function {:extern} {:bvbuiltin "zero_extend 32"} zero_extend32_32(bv32) returns (bv64);
procedure {:extern} rely();
  modifies Gamma_mem, mem;
  ensures (forall i: bv64 :: (((mem[i] == old(mem[i])) ==> (Gamma_mem[i] == old(Gamma_mem[i])))));
  ensures (memory_load32_le(mem, $x_addr) == old(memory_load32_le(mem, $x_addr)));
  ensures (memory_load32_le(mem, $y_addr) == old(memory_load32_le(mem, $y_addr)));
  free ensures (memory_load8_le(mem, 1964bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 1965bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 1966bv64) == 2bv8);
  free ensures (memory_load8_le(mem, 1967bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69608bv64) == 24bv8);
  free ensures (memory_load8_le(mem, 69609bv64) == 16bv8);
  free ensures (memory_load8_le(mem, 69610bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 69611bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69612bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69613bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69614bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69615bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69640bv64) == 8bv8);
  free ensures (memory_load8_le(mem, 69641bv64) == 16bv8);
  free ensures (memory_load8_le(mem, 69642bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 69643bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69644bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69645bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69646bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69647bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69616bv64) == 92bv8);
  free ensures (memory_load8_le(mem, 69617bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69618bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69619bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69620bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69621bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69622bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69623bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69008bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69009bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69010bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69011bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69012bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69013bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69014bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69015bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69592bv64) == 20bv8);
  free ensures (memory_load8_le(mem, 69593bv64) == 16bv8);
  free ensures (memory_load8_le(mem, 69594bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 69595bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69596bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69597bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69598bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69599bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69000bv64) == 80bv8);
  free ensures (memory_load8_le(mem, 69001bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69002bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69003bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69004bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69005bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69006bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69007bv64) == 0bv8);

procedure {:extern} rely_transitive()
  modifies Gamma_mem, mem;
  ensures (memory_load32_le(mem, $x_addr) == old(memory_load32_le(mem, $x_addr)));
  ensures (memory_load32_le(mem, $y_addr) == old(memory_load32_le(mem, $y_addr)));
{
  call rely();
  call rely();
}

procedure {:extern} rely_reflexive()
{
  assert (memory_load32_le(mem, $x_addr) == memory_load32_le(mem, $x_addr));
  assert (memory_load32_le(mem, $y_addr) == memory_load32_le(mem, $y_addr));
}

procedure {:extern} guarantee_reflexive()
  modifies Gamma_mem, mem;
{
  assert ((memory_load32_le(mem, $x_addr) == 0bv32) ==> (memory_load32_le(mem, $x_addr) == 0bv32));
  assert (gamma_load32(Gamma_mem, $y_addr) ==> ((memory_load32_le(mem, $x_addr) == 0bv32) || gamma_load32(Gamma_mem, $y_addr)));
}

procedure main()
  modifies Gamma_R0, Gamma_R1, Gamma_R29, Gamma_R30, Gamma_R31, Gamma_mem, Gamma_stack, R0, R1, R29, R30, R31, mem, stack;
  requires (Gamma_R0 == false);
  free requires (memory_load8_le(mem, 69632bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69633bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69634bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69635bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69636bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69637bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69638bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69639bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69640bv64) == 8bv8);
  free requires (memory_load8_le(mem, 69641bv64) == 16bv8);
  free requires (memory_load8_le(mem, 69642bv64) == 1bv8);
  free requires (memory_load8_le(mem, 69643bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69644bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69645bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69646bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69647bv64) == 0bv8);
  free requires (memory_load8_le(mem, 1964bv64) == 1bv8);
  free requires (memory_load8_le(mem, 1965bv64) == 0bv8);
  free requires (memory_load8_le(mem, 1966bv64) == 2bv8);
  free requires (memory_load8_le(mem, 1967bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69608bv64) == 24bv8);
  free requires (memory_load8_le(mem, 69609bv64) == 16bv8);
  free requires (memory_load8_le(mem, 69610bv64) == 1bv8);
  free requires (memory_load8_le(mem, 69611bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69612bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69613bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69614bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69615bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69640bv64) == 8bv8);
  free requires (memory_load8_le(mem, 69641bv64) == 16bv8);
  free requires (memory_load8_le(mem, 69642bv64) == 1bv8);
  free requires (memory_load8_le(mem, 69643bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69644bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69645bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69646bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69647bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69616bv64) == 92bv8);
  free requires (memory_load8_le(mem, 69617bv64) == 7bv8);
  free requires (memory_load8_le(mem, 69618bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69619bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69620bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69621bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69622bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69623bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69008bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69009bv64) == 7bv8);
  free requires (memory_load8_le(mem, 69010bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69011bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69012bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69013bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69014bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69015bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69592bv64) == 20bv8);
  free requires (memory_load8_le(mem, 69593bv64) == 16bv8);
  free requires (memory_load8_le(mem, 69594bv64) == 1bv8);
  free requires (memory_load8_le(mem, 69595bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69596bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69597bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69598bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69599bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69000bv64) == 80bv8);
  free requires (memory_load8_le(mem, 69001bv64) == 7bv8);
  free requires (memory_load8_le(mem, 69002bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69003bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69004bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69005bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69006bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69007bv64) == 0bv8);
  free ensures (Gamma_R29 == old(Gamma_R29));
  free ensures (Gamma_R31 == old(Gamma_R31));
  free ensures (R29 == old(R29));
  free ensures (R31 == old(R31));
  free ensures (memory_load8_le(mem, 1964bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 1965bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 1966bv64) == 2bv8);
  free ensures (memory_load8_le(mem, 1967bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69608bv64) == 24bv8);
  free ensures (memory_load8_le(mem, 69609bv64) == 16bv8);
  free ensures (memory_load8_le(mem, 69610bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 69611bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69612bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69613bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69614bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69615bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69640bv64) == 8bv8);
  free ensures (memory_load8_le(mem, 69641bv64) == 16bv8);
  free ensures (memory_load8_le(mem, 69642bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 69643bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69644bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69645bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69646bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69647bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69616bv64) == 92bv8);
  free ensures (memory_load8_le(mem, 69617bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69618bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69619bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69620bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69621bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69622bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69623bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69008bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69009bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69010bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69011bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69012bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69013bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69014bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69015bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69592bv64) == 20bv8);
  free ensures (memory_load8_le(mem, 69593bv64) == 16bv8);
  free ensures (memory_load8_le(mem, 69594bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 69595bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69596bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69597bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69598bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69599bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69000bv64) == 80bv8);
  free ensures (memory_load8_le(mem, 69001bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69002bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69003bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69004bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69005bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69006bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69007bv64) == 0bv8);
{
  var #4: bv64;
  var Gamma_#4: bool;
  var Gamma_y_old: bool;
  var x_old: bv32;
  lmain:
    assume {:captureState "lmain"} true;
    #4, Gamma_#4 := bvadd64(R31, 18446744073709551584bv64), Gamma_R31;
    stack, Gamma_stack := memory_store64_le(stack, #4, R29), gamma_store64(Gamma_stack, #4, Gamma_R29);
    assume {:captureState "%00000302"} true;
    stack, Gamma_stack := memory_store64_le(stack, bvadd64(#4, 8bv64), R30), gamma_store64(Gamma_stack, bvadd64(#4, 8bv64), Gamma_R30);
    assume {:captureState "%00000308"} true;
    R31, Gamma_R31 := #4, Gamma_#4;
    R29, Gamma_R29 := R31, Gamma_R31;
    stack, Gamma_stack := memory_store32_le(stack, bvadd64(R31, 28bv64), R0[32:0]), gamma_store32(Gamma_stack, bvadd64(R31, 28bv64), Gamma_R0);
    assume {:captureState "%0000031a"} true;
    R30, Gamma_R30 := 1900bv64, true;
    call zero();
    goto l00000323;
  l00000323:
    assume {:captureState "l00000323"} true;
    R1, Gamma_R1 := zero_extend32_32(R0[32:0]), Gamma_R0;
    R0, Gamma_R0 := 65536bv64, true;
    call rely();
    R0, Gamma_R0 := memory_load64_le(mem, bvadd64(R0, 4056bv64)), (gamma_load64(Gamma_mem, bvadd64(R0, 4056bv64)) || L(mem, bvadd64(R0, 4056bv64)));
    call rely();
    assert (L(mem, R0) ==> Gamma_R1);
    x_old := memory_load32_le(mem, $x_addr);
    Gamma_y_old := (gamma_load32(Gamma_mem, $y_addr) || L(mem, $y_addr));
    mem, Gamma_mem := memory_store32_le(mem, R0, R1[32:0]), gamma_store32(Gamma_mem, R0, Gamma_R1);
    assert ((R0 == $x_addr) ==> (L(mem, $y_addr) ==> Gamma_y_old));
    assert ((x_old == 0bv32) ==> (memory_load32_le(mem, $x_addr) == 0bv32));
    assert (Gamma_y_old ==> ((memory_load32_le(mem, $x_addr) == 0bv32) || gamma_load32(Gamma_mem, $y_addr)));
    assume {:captureState "%0000033b"} true;
    R0, Gamma_R0 := 65536bv64, true;
    call rely();
    R0, Gamma_R0 := memory_load64_le(mem, bvadd64(R0, 4072bv64)), (gamma_load64(Gamma_mem, bvadd64(R0, 4072bv64)) || L(mem, bvadd64(R0, 4072bv64)));
    R1, Gamma_R1 := zero_extend32_32(memory_load32_le(stack, bvadd64(R31, 28bv64))), gamma_load32(Gamma_stack, bvadd64(R31, 28bv64));
    call rely();
    assert (L(mem, R0) ==> Gamma_R1);
    x_old := memory_load32_le(mem, $x_addr);
    Gamma_y_old := (gamma_load32(Gamma_mem, $y_addr) || L(mem, $y_addr));
    mem, Gamma_mem := memory_store32_le(mem, R0, R1[32:0]), gamma_store32(Gamma_mem, R0, Gamma_R1);
    assert ((R0 == $x_addr) ==> (L(mem, $y_addr) ==> Gamma_y_old));
    assert ((x_old == 0bv32) ==> (memory_load32_le(mem, $x_addr) == 0bv32));
    assert (Gamma_y_old ==> ((memory_load32_le(mem, $x_addr) == 0bv32) || gamma_load32(Gamma_mem, $y_addr)));
    assume {:captureState "%00000356"} true;
    R0, Gamma_R0 := 0bv64, true;
    R29, Gamma_R29 := memory_load64_le(stack, R31), gamma_load64(Gamma_stack, R31);
    R30, Gamma_R30 := memory_load64_le(stack, bvadd64(R31, 8bv64)), gamma_load64(Gamma_stack, bvadd64(R31, 8bv64));
    R31, Gamma_R31 := bvadd64(R31, 32bv64), Gamma_R31;
    goto main_return;
  terminate:
    assume {:captureState "terminate"} true;
    goto terminate;
  main_return:
    assume {:captureState "main_return"} true;
    return;
}

procedure zero()
  modifies Gamma_R0, R0;
  free requires (memory_load8_le(mem, 1964bv64) == 1bv8);
  free requires (memory_load8_le(mem, 1965bv64) == 0bv8);
  free requires (memory_load8_le(mem, 1966bv64) == 2bv8);
  free requires (memory_load8_le(mem, 1967bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69608bv64) == 24bv8);
  free requires (memory_load8_le(mem, 69609bv64) == 16bv8);
  free requires (memory_load8_le(mem, 69610bv64) == 1bv8);
  free requires (memory_load8_le(mem, 69611bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69612bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69613bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69614bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69615bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69640bv64) == 8bv8);
  free requires (memory_load8_le(mem, 69641bv64) == 16bv8);
  free requires (memory_load8_le(mem, 69642bv64) == 1bv8);
  free requires (memory_load8_le(mem, 69643bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69644bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69645bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69646bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69647bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69616bv64) == 92bv8);
  free requires (memory_load8_le(mem, 69617bv64) == 7bv8);
  free requires (memory_load8_le(mem, 69618bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69619bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69620bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69621bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69622bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69623bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69008bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69009bv64) == 7bv8);
  free requires (memory_load8_le(mem, 69010bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69011bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69012bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69013bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69014bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69015bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69592bv64) == 20bv8);
  free requires (memory_load8_le(mem, 69593bv64) == 16bv8);
  free requires (memory_load8_le(mem, 69594bv64) == 1bv8);
  free requires (memory_load8_le(mem, 69595bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69596bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69597bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69598bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69599bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69000bv64) == 80bv8);
  free requires (memory_load8_le(mem, 69001bv64) == 7bv8);
  free requires (memory_load8_le(mem, 69002bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69003bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69004bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69005bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69006bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69007bv64) == 0bv8);
  ensures ((R0[32:0] == 0bv32) && Gamma_R0);
  free ensures (memory_load8_le(mem, 1964bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 1965bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 1966bv64) == 2bv8);
  free ensures (memory_load8_le(mem, 1967bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69608bv64) == 24bv8);
  free ensures (memory_load8_le(mem, 69609bv64) == 16bv8);
  free ensures (memory_load8_le(mem, 69610bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 69611bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69612bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69613bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69614bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69615bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69640bv64) == 8bv8);
  free ensures (memory_load8_le(mem, 69641bv64) == 16bv8);
  free ensures (memory_load8_le(mem, 69642bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 69643bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69644bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69645bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69646bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69647bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69616bv64) == 92bv8);
  free ensures (memory_load8_le(mem, 69617bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69618bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69619bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69620bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69621bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69622bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69623bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69008bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69009bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69010bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69011bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69012bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69013bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69014bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69015bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69592bv64) == 20bv8);
  free ensures (memory_load8_le(mem, 69593bv64) == 16bv8);
  free ensures (memory_load8_le(mem, 69594bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 69595bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69596bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69597bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69598bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69599bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69000bv64) == 80bv8);
  free ensures (memory_load8_le(mem, 69001bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69002bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69003bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69004bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69005bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69006bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69007bv64) == 0bv8);
{
  lzero:
    assume {:captureState "lzero"} true;
    R0, Gamma_R0 := 0bv64, true;
    goto zero_return;
  terminate:
    assume {:captureState "terminate"} true;
    goto terminate;
  zero_return:
    assume {:captureState "zero_return"} true;
    return;
}
