000005be: program
0000058c: sub __cxa_finalize(__cxa_finalize_result)
000005bf: __cxa_finalize_result :: out u32 = low:32[R0]

00000342:
0000043a: R16 := 0x11000
00000441: R17 := mem[R16 + 8, el]:u64
00000447: R16 := R16 + 8
0000044c: call R17 with noreturn

0000058d: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
000005c0: __do_global_dtors_aux_result :: out u32 = low:32[R0]

0000026a:
0000026e: #3 := R31 - 0x20
00000274: mem := mem with [#3, el]:u64 <- R29
0000027a: mem := mem with [#3 + 8, el]:u64 <- R30
0000027e: R31 := #3
00000284: R29 := R31
0000028c: mem := mem with [R31 + 0x10, el]:u64 <- R19
00000291: R19 := 0x11000
00000298: R0 := pad:64[mem[R19 + 0x30]]
0000029f: when 31:0[R0] <> 0 goto %0000029d
000005b4: goto %0000030b

0000030b:
0000030e: R0 := 0x10000
00000315: R0 := mem[R0 + 0xFC8, el]:u64
0000031b: when R0 = 0 goto %00000319
000005b5: goto %00000332

00000332:
00000335: R0 := 0x11000
0000033c: R0 := mem[R0 + 0x28, el]:u64
00000341: R30 := 0x6F0
00000344: call @__cxa_finalize with return %00000319

00000319:
00000321: R30 := 0x6F4
00000323: call @deregister_tm_clones with return %00000325

00000325:
00000328: R0 := 1
00000330: mem := mem with [R19 + 0x30] <- 7:0[R0]
000005b6: goto %0000029d

0000029d:
000002a7: R19 := mem[R31 + 0x10, el]:u64
000002ae: R29 := mem[R31, el]:u64
000002b3: R30 := mem[R31 + 8, el]:u64
000002b7: R31 := R31 + 0x20
000002bc: call R30 with noreturn

00000591: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
000005c1: __libc_start_main_main :: in u64 = R0
000005c2: __libc_start_main_arg2 :: in u32 = low:32[R1]
000005c3: __libc_start_main_arg3 :: in out u64 = R2
000005c4: __libc_start_main_auxv :: in out u64 = R3
000005c5: __libc_start_main_result :: out u32 = low:32[R0]

000001c3:
00000424: R16 := 0x11000
0000042b: R17 := mem[R16, el]:u64
00000431: R16 := R16
00000436: call R17 with noreturn

00000592: sub _fini(_fini_result)
000005c6: _fini_result :: out u32 = low:32[R0]

0000001f:
00000025: #0 := R31 - 0x10
0000002b: mem := mem with [#0, el]:u64 <- R29
00000031: mem := mem with [#0 + 8, el]:u64 <- R30
00000035: R31 := #0
0000003b: R29 := R31
00000042: R29 := mem[R31, el]:u64
00000047: R30 := mem[R31 + 8, el]:u64
0000004b: R31 := R31 + 0x10
00000050: call R30 with noreturn

00000593: sub _init(_init_result)
000005c7: _init_result :: out u32 = low:32[R0]

000004e7:
000004ed: #6 := R31 - 0x10
000004f3: mem := mem with [#6, el]:u64 <- R29
000004f9: mem := mem with [#6 + 8, el]:u64 <- R30
000004fd: R31 := #6
00000503: R29 := R31
00000508: R30 := 0x590
0000050a: call @call_weak_fn with return %0000050c

0000050c:
00000511: R29 := mem[R31, el]:u64
00000516: R30 := mem[R31 + 8, el]:u64
0000051a: R31 := R31 + 0x10
0000051f: call R30 with noreturn

00000594: sub _start(_start_result)
000005c8: _start_result :: out u32 = low:32[R0]

00000184:
00000189: R29 := 0
0000018e: R30 := 0
00000194: R5 := R0
0000019b: R1 := mem[R31, el]:u64
000001a1: R2 := R31 + 8
000001a7: R6 := R31
000001ac: R0 := 0x10000
000001b3: R0 := mem[R0 + 0xFD8, el]:u64
000001b8: R3 := 0
000001bd: R4 := 0
000001c2: R30 := 0x630
000001c5: call @__libc_start_main with return %000001c7

000001c7:
000001ca: R30 := 0x634
000001cd: call @abort with return %000005b7

000005b7:
000005b8: call @call_weak_fn with noreturn

00000597: sub abort()


000001cb:
00000466: R16 := 0x11000
0000046d: R17 := mem[R16 + 0x18, el]:u64
00000473: R16 := R16 + 0x18
00000478: call R17 with noreturn

00000598: sub call_weak_fn(call_weak_fn_result)
000005c9: call_weak_fn_result :: out u32 = low:32[R0]

000001cf:
000001d2: R0 := 0x10000
000001d9: R0 := mem[R0 + 0xFD0, el]:u64
000001df: when R0 = 0 goto %000001dd
000005b9: goto %00000382

000001dd:
000001e5: call R30 with noreturn

00000382:
00000385: goto @__gmon_start__

00000383:
00000450: R16 := 0x11000
00000457: R17 := mem[R16 + 0x10, el]:u64
0000045d: R16 := R16 + 0x10
00000462: call R17 with noreturn

0000059a: sub deregister_tm_clones(deregister_tm_clones_result)
000005ca: deregister_tm_clones_result :: out u32 = low:32[R0]

000001eb:
000001ee: R0 := 0x11000
000001f4: R0 := R0 + 0x30
000001f9: R1 := 0x11000
000001ff: R1 := R1 + 0x30
00000205: #1 := ~R0
0000020a: #2 := R1 + ~R0
00000210: VF := extend:65[#2 + 1] <> extend:65[R1] + extend:65[#1] + 1
00000216: CF := pad:65[#2 + 1] <> pad:65[R1] + pad:65[#1] + 1
0000021a: ZF := #2 + 1 = 0
0000021e: NF := 63:63[#2 + 1]
00000224: when ZF goto %00000222
000005ba: goto %00000364

00000364:
00000367: R1 := 0x10000
0000036e: R1 := mem[R1 + 0xFC0, el]:u64
00000373: when R1 = 0 goto %00000222
000005bb: goto %00000377

00000222:
0000022a: call R30 with noreturn

00000377:
0000037b: R16 := R1
00000380: call R16 with noreturn

0000059d: sub frame_dummy(frame_dummy_result)
000005cb: frame_dummy_result :: out u32 = low:32[R0]

000002c2:
000002c4: call @register_tm_clones with noreturn

0000059e: sub main(main_argc, main_argv, main_result)
000005cc: main_argc :: in u32 = low:32[R0]
000005cd: main_argv :: in out u64 = R1
000005ce: main_result :: out u32 = low:32[R0]

000002c6:
000002c9: R8 := 0x11000
000002ce: R9 := 0x11000
000002d5: R8 := pad:64[mem[R8 + 0x34, el]:u32]
000002dc: R9 := pad:64[mem[R9 + 0x38, el]:u32]
000002e2: #4 := 31:0[R8] - 1
000002e7: VF := extend:33[#4 + 1] <> extend:33[31:0[R8]] + 0
000002ec: CF := pad:33[#4 + 1] <> pad:33[31:0[R8]] - 0x100000000
000002f0: ZF := #4 + 1 = 0
000002f4: NF := 31:31[#4 + 1]
00000301: when ZF goto %000002fa
00000302: goto %000002fd

000002fd:
000002fe: R0 := 0
00000304: goto %00000300

000002fa:
000002fb: R0 := pad:64[31:0[R9]]
00000303: goto %00000300

00000300:
00000309: call R30 with noreturn

0000059f: sub register_tm_clones(register_tm_clones_result)
000005cf: register_tm_clones_result :: out u32 = low:32[R0]

0000022c:
0000022f: R0 := 0x11000
00000235: R0 := R0 + 0x30
0000023a: R1 := 0x11000
00000240: R1 := R1 + 0x30
00000247: R1 := R1 + ~R0 + 1
0000024d: R2 := 0.63:63[R1]
00000254: R1 := R2 + (R1 ~>> 3)
0000025a: R1 := extend:64[63:1[R1]]
00000260: when R1 = 0 goto %0000025e
000005bc: goto %00000346

00000346:
00000349: R2 := 0x10000
00000350: R2 := mem[R2 + 0xFE0, el]:u64
00000355: when R2 = 0 goto %0000025e
000005bd: goto %00000359

0000025e:
00000266: call R30 with noreturn

00000359:
0000035d: R16 := R2
00000362: call R16 with noreturn
