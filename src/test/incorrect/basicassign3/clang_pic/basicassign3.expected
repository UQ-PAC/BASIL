var {:extern} Gamma_R0: bool;
var {:extern} Gamma_R10: bool;
var {:extern} Gamma_R31: bool;
var {:extern} Gamma_R8: bool;
var {:extern} Gamma_R9: bool;
var {:extern} Gamma_mem: [bv64]bool;
var {:extern} Gamma_stack: [bv64]bool;
var {:extern} R0: bv64;
var {:extern} R10: bv64;
var {:extern} R31: bv64;
var {:extern} R8: bv64;
var {:extern} R9: bv64;
var {:extern} mem: [bv64]bv8;
var {:extern} stack: [bv64]bv8;
const {:extern} $secret_addr: bv64;
axiom ($secret_addr == 69681bv64);
const {:extern} $z_addr: bv64;
axiom ($z_addr == 69682bv64);
function {:extern} L(memory: [bv64]bv8, index: bv64) returns (bool) {
  (if (index == $secret_addr) then false else (if (index == $z_addr) then true else false))
}

function {:extern} {:bvbuiltin "bvadd"} bvadd64(bv64, bv64) returns (bv64);
function {:extern} gamma_load64(gammaMap: [bv64]bool, index: bv64) returns (bool) {
  (gammaMap[bvadd64(index, 7bv64)] && (gammaMap[bvadd64(index, 6bv64)] && (gammaMap[bvadd64(index, 5bv64)] && (gammaMap[bvadd64(index, 4bv64)] && (gammaMap[bvadd64(index, 3bv64)] && (gammaMap[bvadd64(index, 2bv64)] && (gammaMap[bvadd64(index, 1bv64)] && gammaMap[index])))))))
}

function {:extern} gamma_load8(gammaMap: [bv64]bool, index: bv64) returns (bool) {
  gammaMap[index]
}

function {:extern} gamma_store8(gammaMap: [bv64]bool, index: bv64, value: bool) returns ([bv64]bool) {
  gammaMap[index := value]
}

function {:extern} memory_load64_le(memory: [bv64]bv8, index: bv64) returns (bv64) {
  (memory[bvadd64(index, 7bv64)] ++ (memory[bvadd64(index, 6bv64)] ++ (memory[bvadd64(index, 5bv64)] ++ (memory[bvadd64(index, 4bv64)] ++ (memory[bvadd64(index, 3bv64)] ++ (memory[bvadd64(index, 2bv64)] ++ (memory[bvadd64(index, 1bv64)] ++ memory[index])))))))
}

function {:extern} memory_load8_le(memory: [bv64]bv8, index: bv64) returns (bv8) {
  memory[index]
}

function {:extern} memory_store8_le(memory: [bv64]bv8, index: bv64, value: bv8) returns ([bv64]bv8) {
  memory[index := value[8:0]]
}

function {:extern} {:bvbuiltin "zero_extend 56"} zero_extend56_8(bv8) returns (bv64);
procedure {:extern} rely();
  modifies Gamma_mem, mem;
  ensures (mem == old(mem));
  ensures (Gamma_mem == old(Gamma_mem));
  free ensures (memory_load8_le(mem, 1964bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 1965bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 1966bv64) == 2bv8);
  free ensures (memory_load8_le(mem, 1967bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69672bv64) == 40bv8);
  free ensures (memory_load8_le(mem, 69673bv64) == 16bv8);
  free ensures (memory_load8_le(mem, 69674bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 69675bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69676bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69677bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69678bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69679bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69584bv64) == 49bv8);
  free ensures (memory_load8_le(mem, 69585bv64) == 16bv8);
  free ensures (memory_load8_le(mem, 69586bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 69587bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69588bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69589bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69590bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69591bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69048bv64) == 80bv8);
  free ensures (memory_load8_le(mem, 69049bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69050bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69051bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69052bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69053bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69054bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69055bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69568bv64) == 50bv8);
  free ensures (memory_load8_le(mem, 69569bv64) == 16bv8);
  free ensures (memory_load8_le(mem, 69570bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 69571bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69572bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69573bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69574bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69575bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69592bv64) == 84bv8);
  free ensures (memory_load8_le(mem, 69593bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69594bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69595bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69596bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69597bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69598bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69599bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69056bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69057bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69058bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69059bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69060bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69061bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69062bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69063bv64) == 0bv8);

procedure {:extern} rely_transitive()
  modifies Gamma_mem, mem;
  ensures (mem == old(mem));
  ensures (Gamma_mem == old(Gamma_mem));
{
  call rely();
  call rely();
}

procedure {:extern} rely_reflexive();

procedure {:extern} guarantee_reflexive();
  modifies Gamma_mem, mem;

procedure main()
  modifies Gamma_R0, Gamma_R10, Gamma_R31, Gamma_R8, Gamma_R9, Gamma_mem, Gamma_stack, R0, R10, R31, R8, R9, mem, stack;
  free requires (memory_load8_le(mem, 69664bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69665bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69666bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69667bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69668bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69669bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69670bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69671bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69672bv64) == 40bv8);
  free requires (memory_load8_le(mem, 69673bv64) == 16bv8);
  free requires (memory_load8_le(mem, 69674bv64) == 1bv8);
  free requires (memory_load8_le(mem, 69675bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69676bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69677bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69678bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69679bv64) == 0bv8);
  free requires (memory_load8_le(mem, 1964bv64) == 1bv8);
  free requires (memory_load8_le(mem, 1965bv64) == 0bv8);
  free requires (memory_load8_le(mem, 1966bv64) == 2bv8);
  free requires (memory_load8_le(mem, 1967bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69672bv64) == 40bv8);
  free requires (memory_load8_le(mem, 69673bv64) == 16bv8);
  free requires (memory_load8_le(mem, 69674bv64) == 1bv8);
  free requires (memory_load8_le(mem, 69675bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69676bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69677bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69678bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69679bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69584bv64) == 49bv8);
  free requires (memory_load8_le(mem, 69585bv64) == 16bv8);
  free requires (memory_load8_le(mem, 69586bv64) == 1bv8);
  free requires (memory_load8_le(mem, 69587bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69588bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69589bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69590bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69591bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69048bv64) == 80bv8);
  free requires (memory_load8_le(mem, 69049bv64) == 7bv8);
  free requires (memory_load8_le(mem, 69050bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69051bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69052bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69053bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69054bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69055bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69568bv64) == 50bv8);
  free requires (memory_load8_le(mem, 69569bv64) == 16bv8);
  free requires (memory_load8_le(mem, 69570bv64) == 1bv8);
  free requires (memory_load8_le(mem, 69571bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69572bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69573bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69574bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69575bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69592bv64) == 84bv8);
  free requires (memory_load8_le(mem, 69593bv64) == 7bv8);
  free requires (memory_load8_le(mem, 69594bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69595bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69596bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69597bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69598bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69599bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69056bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69057bv64) == 7bv8);
  free requires (memory_load8_le(mem, 69058bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69059bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69060bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69061bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69062bv64) == 0bv8);
  free requires (memory_load8_le(mem, 69063bv64) == 0bv8);
  free ensures (Gamma_R31 == old(Gamma_R31));
  free ensures (R31 == old(R31));
  free ensures (memory_load8_le(mem, 1964bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 1965bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 1966bv64) == 2bv8);
  free ensures (memory_load8_le(mem, 1967bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69672bv64) == 40bv8);
  free ensures (memory_load8_le(mem, 69673bv64) == 16bv8);
  free ensures (memory_load8_le(mem, 69674bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 69675bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69676bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69677bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69678bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69679bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69584bv64) == 49bv8);
  free ensures (memory_load8_le(mem, 69585bv64) == 16bv8);
  free ensures (memory_load8_le(mem, 69586bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 69587bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69588bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69589bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69590bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69591bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69048bv64) == 80bv8);
  free ensures (memory_load8_le(mem, 69049bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69050bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69051bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69052bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69053bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69054bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69055bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69568bv64) == 50bv8);
  free ensures (memory_load8_le(mem, 69569bv64) == 16bv8);
  free ensures (memory_load8_le(mem, 69570bv64) == 1bv8);
  free ensures (memory_load8_le(mem, 69571bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69572bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69573bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69574bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69575bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69592bv64) == 84bv8);
  free ensures (memory_load8_le(mem, 69593bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69594bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69595bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69596bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69597bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69598bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69599bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69056bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69057bv64) == 7bv8);
  free ensures (memory_load8_le(mem, 69058bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69059bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69060bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69061bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69062bv64) == 0bv8);
  free ensures (memory_load8_le(mem, 69063bv64) == 0bv8);
{
  lmain:
    assume {:captureState "lmain"} true;
    R31, Gamma_R31 := bvadd64(R31, 18446744073709551600bv64), Gamma_R31;
    R8, Gamma_R8 := 65536bv64, true;
    call rely();
    R8, Gamma_R8 := memory_load64_le(mem, bvadd64(R8, 4048bv64)), (gamma_load64(Gamma_mem, bvadd64(R8, 4048bv64)) || L(mem, bvadd64(R8, 4048bv64)));
    call rely();
    R9, Gamma_R9 := zero_extend56_8(memory_load8_le(mem, R8)), (gamma_load8(Gamma_mem, R8) || L(mem, R8));
    stack, Gamma_stack := memory_store8_le(stack, bvadd64(R31, 15bv64), R9[8:0]), gamma_store8(Gamma_stack, bvadd64(R31, 15bv64), Gamma_R9);
    assume {:captureState "%0000030d"} true;
    stack, Gamma_stack := memory_store8_le(stack, bvadd64(R31, 15bv64), 0bv8), gamma_store8(Gamma_stack, bvadd64(R31, 15bv64), true);
    assume {:captureState "%00000314"} true;
    R10, Gamma_R10 := zero_extend56_8(memory_load8_le(stack, bvadd64(R31, 15bv64))), gamma_load8(Gamma_stack, bvadd64(R31, 15bv64));
    R9, Gamma_R9 := 65536bv64, true;
    call rely();
    R9, Gamma_R9 := memory_load64_le(mem, bvadd64(R9, 4032bv64)), (gamma_load64(Gamma_mem, bvadd64(R9, 4032bv64)) || L(mem, bvadd64(R9, 4032bv64)));
    call rely();
    assert (L(mem, R9) ==> Gamma_R10);
    mem, Gamma_mem := memory_store8_le(mem, R9, R10[8:0]), gamma_store8(Gamma_mem, R9, Gamma_R10);
    assume {:captureState "%0000032f"} true;
    call rely();
    R8, Gamma_R8 := zero_extend56_8(memory_load8_le(mem, R8)), (gamma_load8(Gamma_mem, R8) || L(mem, R8));
    stack, Gamma_stack := memory_store8_le(stack, bvadd64(R31, 15bv64), R8[8:0]), gamma_store8(Gamma_stack, bvadd64(R31, 15bv64), Gamma_R8);
    assume {:captureState "%0000033e"} true;
    R8, Gamma_R8 := zero_extend56_8(memory_load8_le(stack, bvadd64(R31, 15bv64))), gamma_load8(Gamma_stack, bvadd64(R31, 15bv64));
    call rely();
    assert (L(mem, R9) ==> Gamma_R8);
    mem, Gamma_mem := memory_store8_le(mem, R9, R8[8:0]), gamma_store8(Gamma_mem, R9, Gamma_R8);
    assume {:captureState "%0000034d"} true;
    R0, Gamma_R0 := 0bv64, true;
    R31, Gamma_R31 := bvadd64(R31, 16bv64), Gamma_R31;
    return;
}
