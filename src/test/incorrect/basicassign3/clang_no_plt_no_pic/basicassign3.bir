000005b1: program
0000057f: sub __cxa_finalize(__cxa_finalize_result)
000005b2: __cxa_finalize_result :: out u32 = low:32[R0]

00000380:
00000478: R16 := 0x20000
0000047f: R17 := mem[R16 + 8, el]:u64
00000485: R16 := R16 + 8
0000048a: call R17 with noreturn

00000580: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
000005b3: __do_global_dtors_aux_result :: out u32 = low:32[R0]

0000028b:
0000028f: #3 := R31 - 0x20
00000295: mem := mem with [#3, el]:u64 <- R29
0000029b: mem := mem with [#3 + 8, el]:u64 <- R30
0000029f: R31 := #3
000002a5: R29 := R31
000002ad: mem := mem with [R31 + 0x10, el]:u64 <- R19
000002b2: R19 := 0x20000
000002b9: R0 := pad:64[mem[R19 + 0x30]]
000002bf: when 0:0[R0] goto %000002bd
000005a7: goto %00000349

00000349:
0000034c: R0 := 0x1F000
00000353: R0 := mem[R0 + 0xFC8, el]:u64
00000359: when R0 = 0 goto %00000357
000005a8: goto %00000370

00000370:
00000373: R0 := 0x20000
0000037a: R0 := mem[R0 + 0x28, el]:u64
0000037f: R30 := 0x730
00000382: call @__cxa_finalize with return %00000357

00000357:
0000035f: R30 := 0x734
00000361: call @deregister_tm_clones with return %00000363

00000363:
00000366: R0 := 1
0000036e: mem := mem with [R19 + 0x30] <- 7:0[R0]
000005a9: goto %000002bd

000002bd:
000002c7: R19 := mem[R31 + 0x10, el]:u64
000002ce: R29 := mem[R31, el]:u64
000002d3: R30 := mem[R31 + 8, el]:u64
000002d7: R31 := R31 + 0x20
000002dc: call R30 with noreturn

00000584: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
000005b4: __libc_start_main_main :: in u64 = R0
000005b5: __libc_start_main_arg2 :: in u32 = low:32[R1]
000005b6: __libc_start_main_arg3 :: in out u64 = R2
000005b7: __libc_start_main_auxv :: in out u64 = R3
000005b8: __libc_start_main_result :: out u32 = low:32[R0]

000001e4:
00000462: R16 := 0x20000
00000469: R17 := mem[R16, el]:u64
0000046f: R16 := R16
00000474: call R17 with noreturn

00000585: sub _fini(_fini_result)
000005b9: _fini_result :: out u32 = low:32[R0]

00000020:
00000026: #0 := R31 - 0x10
0000002c: mem := mem with [#0, el]:u64 <- R29
00000032: mem := mem with [#0 + 8, el]:u64 <- R30
00000036: R31 := #0
0000003c: R29 := R31
00000043: R29 := mem[R31, el]:u64
00000048: R30 := mem[R31 + 8, el]:u64
0000004c: R31 := R31 + 0x10
00000051: call R30 with noreturn

00000586: sub _init(_init_result)
000005ba: _init_result :: out u32 = low:32[R0]

000004d2:
000004d8: #5 := R31 - 0x10
000004de: mem := mem with [#5, el]:u64 <- R29
000004e4: mem := mem with [#5 + 8, el]:u64 <- R30
000004e8: R31 := #5
000004ee: R29 := R31
000004f3: R30 := 0x5C8
000004f5: call @call_weak_fn with return %000004f7

000004f7:
000004fc: R29 := mem[R31, el]:u64
00000501: R30 := mem[R31 + 8, el]:u64
00000505: R31 := R31 + 0x10
0000050a: call R30 with noreturn

00000587: sub _start(_start_result)
000005bb: _start_result :: out u32 = low:32[R0]

000001a5:
000001aa: R29 := 0
000001af: R30 := 0
000001b5: R5 := R0
000001bc: R1 := mem[R31, el]:u64
000001c2: R2 := R31 + 8
000001c8: R6 := R31
000001cd: R0 := 0x1F000
000001d4: R0 := mem[R0 + 0xFD8, el]:u64
000001d9: R3 := 0
000001de: R4 := 0
000001e3: R30 := 0x670
000001e6: call @__libc_start_main with return %000001e8

000001e8:
000001eb: R30 := 0x674
000001ee: call @abort with return %000005aa

000005aa:
000005ab: call @call_weak_fn with noreturn

0000058a: sub abort()


000001ec:
000004a4: R16 := 0x20000
000004ab: R17 := mem[R16 + 0x18, el]:u64
000004b1: R16 := R16 + 0x18
000004b6: call R17 with noreturn

0000058b: sub call_weak_fn(call_weak_fn_result)
000005bc: call_weak_fn_result :: out u32 = low:32[R0]

000001f0:
000001f3: R0 := 0x1F000
000001fa: R0 := mem[R0 + 0xFD0, el]:u64
00000200: when R0 = 0 goto %000001fe
000005ac: goto %000003c0

000001fe:
00000206: call R30 with noreturn

000003c0:
000003c3: goto @__gmon_start__

000003c1:
0000048e: R16 := 0x20000
00000495: R17 := mem[R16 + 0x10, el]:u64
0000049b: R16 := R16 + 0x10
000004a0: call R17 with noreturn

0000058d: sub deregister_tm_clones(deregister_tm_clones_result)
000005bd: deregister_tm_clones_result :: out u32 = low:32[R0]

0000020c:
0000020f: R0 := 0x20000
00000215: R0 := R0 + 0x30
0000021a: R1 := 0x20000
00000220: R1 := R1 + 0x30
00000226: #1 := ~R0
0000022b: #2 := R1 + ~R0
00000231: VF := extend:65[#2 + 1] <> extend:65[R1] + extend:65[#1] + 1
00000237: CF := pad:65[#2 + 1] <> pad:65[R1] + pad:65[#1] + 1
0000023b: ZF := #2 + 1 = 0
0000023f: NF := 63:63[#2 + 1]
00000245: when ZF goto %00000243
000005ad: goto %000003a2

000003a2:
000003a5: R1 := 0x1F000
000003ac: R1 := mem[R1 + 0xFC0, el]:u64
000003b1: when R1 = 0 goto %00000243
000005ae: goto %000003b5

00000243:
0000024b: call R30 with noreturn

000003b5:
000003b9: R16 := R1
000003be: call R16 with noreturn

00000590: sub frame_dummy(frame_dummy_result)
000005be: frame_dummy_result :: out u32 = low:32[R0]

000002e2:
000002e4: call @register_tm_clones with noreturn

00000591: sub main(main_argc, main_argv, main_result)
000005bf: main_argc :: in u32 = low:32[R0]
000005c0: main_argv :: in out u64 = R1
000005c1: main_result :: out u32 = low:32[R0]

000002e6:
000002ea: R31 := R31 - 0x10
000002ef: R8 := 0x20000
000002f6: R9 := pad:64[mem[R8 + 0x31]]
000002fe: mem := mem with [R31 + 0xF] <- 7:0[R9]
00000305: mem := mem with [R31 + 0xF] <- 0
0000030c: R10 := pad:64[mem[R31 + 0xF]]
00000311: R9 := 0x20000
00000319: mem := mem with [R9 + 0x32] <- 7:0[R10]
00000320: R8 := pad:64[mem[R8 + 0x31]]
00000328: mem := mem with [R31 + 0xF] <- 7:0[R8]
0000032f: R8 := pad:64[mem[R31 + 0xF]]
00000337: mem := mem with [R9 + 0x32] <- 7:0[R8]
0000033c: R0 := 0
00000342: R31 := R31 + 0x10
00000347: call R30 with noreturn

00000592: sub register_tm_clones(register_tm_clones_result)
000005c2: register_tm_clones_result :: out u32 = low:32[R0]

0000024d:
00000250: R0 := 0x20000
00000256: R0 := R0 + 0x30
0000025b: R1 := 0x20000
00000261: R1 := R1 + 0x30
00000268: R1 := R1 + ~R0 + 1
0000026e: R2 := 0.63:63[R1]
00000275: R1 := R2 + (R1 ~>> 3)
0000027b: R1 := extend:64[63:1[R1]]
00000281: when R1 = 0 goto %0000027f
000005af: goto %00000384

00000384:
00000387: R2 := 0x1F000
0000038e: R2 := mem[R2 + 0xFE0, el]:u64
00000393: when R2 = 0 goto %0000027f
000005b0: goto %00000397

0000027f:
00000287: call R30 with noreturn

00000397:
0000039b: R16 := R2
000003a0: call R16 with noreturn
