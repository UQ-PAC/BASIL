000006b6: program
00000684: sub __cxa_finalize(__cxa_finalize_result)
000006b7: __cxa_finalize_result :: out u32 = low:32[R0]

0000040e:
00000506: R16 := 0x10000
0000050d: R17 := mem[R16 + 0xFA0, el]:u64
00000513: R16 := R16 + 0xFA0
00000518: call R17 with noreturn

00000685: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
000006b8: __do_global_dtors_aux_result :: out u32 = low:32[R0]

000002c2:
000002c6: #3 := R31 - 0x20
000002cc: mem := mem with [#3, el]:u64 <- R29
000002d2: mem := mem with [#3 + 8, el]:u64 <- R30
000002d6: R31 := #3
000002dc: R29 := R31
000002e4: mem := mem with [R31 + 0x10, el]:u64 <- R19
000002e9: R19 := 0x11000
000002f0: R0 := pad:64[mem[R19 + 0x10]]
000002f7: when 31:0[R0] <> 0 goto %000002f5
000006ac: goto %000003d7

000003d7:
000003da: R0 := 0x10000
000003e1: R0 := mem[R0 + 0xFC8, el]:u64
000003e7: when R0 = 0 goto %000003e5
000006ad: goto %000003fe

000003fe:
00000401: R0 := 0x11000
00000408: R0 := mem[R0 + 8, el]:u64
0000040d: R30 := 0x730
00000410: call @__cxa_finalize with return %000003e5

000003e5:
000003ed: R30 := 0x734
000003ef: call @deregister_tm_clones with return %000003f1

000003f1:
000003f4: R0 := 1
000003fc: mem := mem with [R19 + 0x10] <- 7:0[R0]
000006ae: goto %000002f5

000002f5:
000002ff: R19 := mem[R31 + 0x10, el]:u64
00000306: R29 := mem[R31, el]:u64
0000030b: R30 := mem[R31 + 8, el]:u64
0000030f: R31 := R31 + 0x20
00000314: call R30 with noreturn

00000689: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
000006b9: __libc_start_main_main :: in u64 = R0
000006ba: __libc_start_main_arg2 :: in u32 = low:32[R1]
000006bb: __libc_start_main_arg3 :: in out u64 = R2
000006bc: __libc_start_main_auxv :: in out u64 = R3
000006bd: __libc_start_main_result :: out u32 = low:32[R0]

0000021b:
000004f0: R16 := 0x10000
000004f7: R17 := mem[R16 + 0xF98, el]:u64
000004fd: R16 := R16 + 0xF98
00000502: call R17 with noreturn

0000068a: sub _fini(_fini_result)
000006be: _fini_result :: out u32 = low:32[R0]

0000001f:
00000025: #0 := R31 - 0x10
0000002b: mem := mem with [#0, el]:u64 <- R29
00000031: mem := mem with [#0 + 8, el]:u64 <- R30
00000035: R31 := #0
0000003b: R29 := R31
00000042: R29 := mem[R31, el]:u64
00000047: R30 := mem[R31 + 8, el]:u64
0000004b: R31 := R31 + 0x10
00000050: call R30 with noreturn

0000068b: sub _init(_init_result)
000006bf: _init_result :: out u32 = low:32[R0]

000005c9:
000005cf: #5 := R31 - 0x10
000005d5: mem := mem with [#5, el]:u64 <- R29
000005db: mem := mem with [#5 + 8, el]:u64 <- R30
000005df: R31 := #5
000005e5: R29 := R31
000005ea: R30 := 0x5D8
000005ec: call @call_weak_fn with return %000005ee

000005ee:
000005f3: R29 := mem[R31, el]:u64
000005f8: R30 := mem[R31 + 8, el]:u64
000005fc: R31 := R31 + 0x10
00000601: call R30 with noreturn

0000068c: sub _start(_start_result)
000006c0: _start_result :: out u32 = low:32[R0]

000001dc:
000001e1: R29 := 0
000001e6: R30 := 0
000001ec: R5 := R0
000001f3: R1 := mem[R31, el]:u64
000001f9: R2 := R31 + 8
000001ff: R6 := R31
00000204: R0 := 0x10000
0000020b: R0 := mem[R0 + 0xFF0, el]:u64
00000210: R3 := 0
00000215: R4 := 0
0000021a: R30 := 0x670
0000021d: call @__libc_start_main with return %0000021f

0000021f:
00000222: R30 := 0x674
00000225: call @abort with return %000006af

000006af:
000006b0: call @call_weak_fn with noreturn

0000068f: sub abort()


00000223:
00000532: R16 := 0x10000
00000539: R17 := mem[R16 + 0xFB0, el]:u64
0000053f: R16 := R16 + 0xFB0
00000544: call R17 with noreturn

00000690: sub call_weak_fn(call_weak_fn_result)
000006c1: call_weak_fn_result :: out u32 = low:32[R0]

00000227:
0000022a: R0 := 0x10000
00000231: R0 := mem[R0 + 0xFE0, el]:u64
00000237: when R0 = 0 goto %00000235
000006b1: goto %0000044e

00000235:
0000023d: call R30 with noreturn

0000044e:
00000451: goto @__gmon_start__

0000044f:
0000051c: R16 := 0x10000
00000523: R17 := mem[R16 + 0xFA8, el]:u64
00000529: R16 := R16 + 0xFA8
0000052e: call R17 with noreturn

00000692: sub deregister_tm_clones(deregister_tm_clones_result)
000006c2: deregister_tm_clones_result :: out u32 = low:32[R0]

00000243:
00000246: R0 := 0x11000
0000024c: R0 := R0 + 0x10
00000251: R1 := 0x11000
00000257: R1 := R1 + 0x10
0000025d: #1 := ~R0
00000262: #2 := R1 + ~R0
00000268: VF := extend:65[#2 + 1] <> extend:65[R1] + extend:65[#1] + 1
0000026e: CF := pad:65[#2 + 1] <> pad:65[R1] + pad:65[#1] + 1
00000272: ZF := #2 + 1 = 0
00000276: NF := 63:63[#2 + 1]
0000027c: when ZF goto %0000027a
000006b2: goto %00000430

00000430:
00000433: R1 := 0x10000
0000043a: R1 := mem[R1 + 0xFC0, el]:u64
0000043f: when R1 = 0 goto %0000027a
000006b3: goto %00000443

0000027a:
00000282: call R30 with noreturn

00000443:
00000447: R16 := R1
0000044c: call R16 with noreturn

00000695: sub frame_dummy(frame_dummy_result)
000006c3: frame_dummy_result :: out u32 = low:32[R0]

0000031a:
0000031c: call @register_tm_clones with noreturn

00000696: sub main(main_argc, main_argv, main_result)
000006c4: main_argc :: in u32 = low:32[R0]
000006c5: main_argv :: in out u64 = R1
000006c6: main_result :: out u32 = low:32[R0]

0000031e:
00000321: R0 := 0x10000
00000328: R0 := mem[R0 + 0xFE8, el]:u64
0000032f: R1 := pad:64[mem[R0, el]:u32]
00000334: R0 := 0x10000
0000033b: R0 := mem[R0 + 0xFD8, el]:u64
00000343: mem := mem with [R0, el]:u32 <- 31:0[R1]
00000348: R0 := 0x10000
0000034f: R0 := mem[R0 + 0xFD8, el]:u64
00000356: mem := mem with [R0, el]:u32 <- 0
0000035b: R0 := 0x10000
00000362: R0 := mem[R0 + 0xFD8, el]:u64
00000369: R1 := pad:64[mem[R0, el]:u32]
0000036e: R0 := 0x10000
00000375: R0 := mem[R0 + 0xFD0, el]:u64
0000037d: mem := mem with [R0, el]:u32 <- 31:0[R1]
00000382: R0 := 0x10000
00000389: R0 := mem[R0 + 0xFE8, el]:u64
00000390: R1 := pad:64[mem[R0, el]:u32]
00000395: R0 := 0x10000
0000039c: R0 := mem[R0 + 0xFD8, el]:u64
000003a4: mem := mem with [R0, el]:u32 <- 31:0[R1]
000003a9: R0 := 0x10000
000003b0: R0 := mem[R0 + 0xFD8, el]:u64
000003b7: R1 := pad:64[mem[R0, el]:u32]
000003bc: R0 := 0x10000
000003c3: R0 := mem[R0 + 0xFD0, el]:u64
000003cb: mem := mem with [R0, el]:u32 <- 31:0[R1]
000003d0: R0 := 0
000003d5: call R30 with noreturn

00000697: sub register_tm_clones(register_tm_clones_result)
000006c7: register_tm_clones_result :: out u32 = low:32[R0]

00000284:
00000287: R0 := 0x11000
0000028d: R0 := R0 + 0x10
00000292: R1 := 0x11000
00000298: R1 := R1 + 0x10
0000029f: R1 := R1 + ~R0 + 1
000002a5: R2 := 0.63:63[R1]
000002ac: R1 := R2 + (R1 ~>> 3)
000002b2: R1 := extend:64[63:1[R1]]
000002b8: when R1 = 0 goto %000002b6
000006b4: goto %00000412

00000412:
00000415: R2 := 0x10000
0000041c: R2 := mem[R2 + 0xFF8, el]:u64
00000421: when R2 = 0 goto %000002b6
000006b5: goto %00000425

000002b6:
000002be: call R30 with noreturn

00000425:
00000429: R16 := R2
0000042e: call R16 with noreturn
