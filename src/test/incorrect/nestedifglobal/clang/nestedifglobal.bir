00000765: program
0000072d: sub __cxa_finalize(__cxa_finalize_result)
00000766: __cxa_finalize_result :: out u32 = low:32[R0]

000004a9:
000005a1: R16 := 0x11000
000005a8: R17 := mem[R16 + 8, el]:u64
000005ae: R16 := R16 + 8
000005b3: call R17 with noreturn

0000072e: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
00000767: __do_global_dtors_aux_result :: out u32 = low:32[R0]

000002de:
000002e2: #3 := R31 - 0x20
000002e8: mem := mem with [#3, el]:u64 <- R29
000002ee: mem := mem with [#3 + 8, el]:u64 <- R30
000002f2: R31 := #3
000002f8: R29 := R31
00000300: mem := mem with [R31 + 0x10, el]:u64 <- R19
00000305: R19 := 0x11000
0000030c: R0 := pad:64[mem[R19 + 0x30]]
00000313: when 31:0[R0] <> 0 goto %00000311
00000758: goto %00000472

00000472:
00000475: R0 := 0x10000
0000047c: R0 := mem[R0 + 0xFC8, el]:u64
00000482: when R0 = 0 goto %00000480
00000759: goto %00000499

00000499:
0000049c: R0 := 0x11000
000004a3: R0 := mem[R0 + 0x28, el]:u64
000004a8: R30 := 0x6F0
000004ab: call @__cxa_finalize with return %00000480

00000480:
00000488: R30 := 0x6F4
0000048a: call @deregister_tm_clones with return %0000048c

0000048c:
0000048f: R0 := 1
00000497: mem := mem with [R19 + 0x30] <- 7:0[R0]
0000075a: goto %00000311

00000311:
0000031b: R19 := mem[R31 + 0x10, el]:u64
00000322: R29 := mem[R31, el]:u64
00000327: R30 := mem[R31 + 8, el]:u64
0000032b: R31 := R31 + 0x20
00000330: call R30 with noreturn

00000732: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
00000768: __libc_start_main_main :: in u64 = R0
00000769: __libc_start_main_arg2 :: in u32 = low:32[R1]
0000076a: __libc_start_main_arg3 :: in out u64 = R2
0000076b: __libc_start_main_auxv :: in out u64 = R3
0000076c: __libc_start_main_result :: out u32 = low:32[R0]

00000237:
0000058b: R16 := 0x11000
00000592: R17 := mem[R16, el]:u64
00000598: R16 := R16
0000059d: call R17 with noreturn

00000733: sub _fini(_fini_result)
0000076d: _fini_result :: out u32 = low:32[R0]

0000001f:
00000025: #0 := R31 - 0x10
0000002b: mem := mem with [#0, el]:u64 <- R29
00000031: mem := mem with [#0 + 8, el]:u64 <- R30
00000035: R31 := #0
0000003b: R29 := R31
00000042: R29 := mem[R31, el]:u64
00000047: R30 := mem[R31 + 8, el]:u64
0000004b: R31 := R31 + 0x10
00000050: call R30 with noreturn

00000734: sub _init(_init_result)
0000076e: _init_result :: out u32 = low:32[R0]

0000066b:
00000671: #8 := R31 - 0x10
00000677: mem := mem with [#8, el]:u64 <- R29
0000067d: mem := mem with [#8 + 8, el]:u64 <- R30
00000681: R31 := #8
00000687: R29 := R31
0000068c: R30 := 0x590
0000068e: call @call_weak_fn with return %00000690

00000690:
00000695: R29 := mem[R31, el]:u64
0000069a: R30 := mem[R31 + 8, el]:u64
0000069e: R31 := R31 + 0x10
000006a3: call R30 with noreturn

00000735: sub _start(_start_result)
0000076f: _start_result :: out u32 = low:32[R0]

000001f8:
000001fd: R29 := 0
00000202: R30 := 0
00000208: R5 := R0
0000020f: R1 := mem[R31, el]:u64
00000215: R2 := R31 + 8
0000021b: R6 := R31
00000220: R0 := 0x10000
00000227: R0 := mem[R0 + 0xFD8, el]:u64
0000022c: R3 := 0
00000231: R4 := 0
00000236: R30 := 0x630
00000239: call @__libc_start_main with return %0000023b

0000023b:
0000023e: R30 := 0x634
00000241: call @abort with return %0000075b

0000075b:
0000075c: call @call_weak_fn with noreturn

00000738: sub abort()


0000023f:
000005cd: R16 := 0x11000
000005d4: R17 := mem[R16 + 0x18, el]:u64
000005da: R16 := R16 + 0x18
000005df: call R17 with noreturn

00000739: sub call_weak_fn(call_weak_fn_result)
00000770: call_weak_fn_result :: out u32 = low:32[R0]

00000243:
00000246: R0 := 0x10000
0000024d: R0 := mem[R0 + 0xFD0, el]:u64
00000253: when R0 = 0 goto %00000251
0000075d: goto %000004e9

00000251:
00000259: call R30 with noreturn

000004e9:
000004ec: goto @__gmon_start__

000004ea:
000005b7: R16 := 0x11000
000005be: R17 := mem[R16 + 0x10, el]:u64
000005c4: R16 := R16 + 0x10
000005c9: call R17 with noreturn

0000073b: sub deregister_tm_clones(deregister_tm_clones_result)
00000771: deregister_tm_clones_result :: out u32 = low:32[R0]

0000025f:
00000262: R0 := 0x11000
00000268: R0 := R0 + 0x30
0000026d: R1 := 0x11000
00000273: R1 := R1 + 0x30
00000279: #1 := ~R0
0000027e: #2 := R1 + ~R0
00000284: VF := extend:65[#2 + 1] <> extend:65[R1] + extend:65[#1] + 1
0000028a: CF := pad:65[#2 + 1] <> pad:65[R1] + pad:65[#1] + 1
0000028e: ZF := #2 + 1 = 0
00000292: NF := 63:63[#2 + 1]
00000298: when ZF goto %00000296
0000075e: goto %000004cb

000004cb:
000004ce: R1 := 0x10000
000004d5: R1 := mem[R1 + 0xFC0, el]:u64
000004da: when R1 = 0 goto %00000296
0000075f: goto %000004de

00000296:
0000029e: call R30 with noreturn

000004de:
000004e2: R16 := R1
000004e7: call R16 with noreturn

0000073e: sub frame_dummy(frame_dummy_result)
00000772: frame_dummy_result :: out u32 = low:32[R0]

00000336:
00000338: call @register_tm_clones with noreturn

0000073f: sub main(main_argc, main_argv, main_result)
00000773: main_argc :: in u32 = low:32[R0]
00000774: main_argv :: in out u64 = R1
00000775: main_result :: out u32 = low:32[R0]

0000033a:
0000033e: R31 := R31 - 0x10
00000345: mem := mem with [R31 + 0xC, el]:u32 <- 0
0000034d: mem := mem with [R31 + 8, el]:u32 <- 31:0[R0]
00000354: R9 := pad:64[mem[R31 + 8, el]:u32]
00000359: R8 := 0x11000
00000361: mem := mem with [R8 + 0x34, el]:u32 <- 31:0[R9]
00000368: mem := mem with [R31 + 4, el]:u32 <- 0
0000036f: R8 := pad:64[mem[R8 + 0x34, el]:u32]
00000375: #4 := 31:0[R8] - 1
0000037a: VF := extend:33[#4 + 1] <> extend:33[31:0[R8]] + 0
0000037f: CF := pad:33[#4 + 1] <> pad:33[31:0[R8]] - 0x100000000
00000383: ZF := #4 + 1 = 0
00000387: NF := 31:31[#4 + 1]
0000038b: R8 := pad:64[#4 + 1]
00000397: when ZF goto %00000390
00000398: goto %00000393

00000393:
00000394: R8 := 1
0000039a: goto %00000396

00000390:
00000391: R8 := 0
00000399: goto %00000396

00000396:
000003a0: when 0:0[R8] goto %0000039e
00000760: goto %0000045d

0000045d:
00000460: goto %0000045e

0000045e:
00000464: R8 := 3
0000046c: mem := mem with [R31 + 4, el]:u32 <- 31:0[R8]
00000470: goto %0000039e

0000039e:
000003a6: R8 := 0x11000
000003ad: R8 := pad:64[mem[R8 + 0x34, el]:u32]
000003b3: #5 := 31:0[R8] - 2
000003b8: VF := extend:33[#5 + 1] <> extend:33[31:0[R8]] - 1
000003bd: CF := pad:33[#5 + 1] <> pad:33[31:0[R8]] + 0xFFFFFFFF
000003c1: ZF := #5 + 1 = 0
000003c5: NF := 31:31[#5 + 1]
000003c9: R8 := pad:64[#5 + 1]
000003d5: when ZF goto %000003ce
000003d6: goto %000003d1

000003d1:
000003d2: R8 := 1
000003d8: goto %000003d4

000003ce:
000003cf: R8 := 0
000003d7: goto %000003d4

000003d4:
000003de: when 0:0[R8] goto %000003dc
00000761: goto %00000448

00000448:
0000044b: goto %00000449

00000449:
0000044f: R8 := 5
00000457: mem := mem with [R31 + 4, el]:u32 <- 31:0[R8]
0000045b: goto %000003dc

000003dc:
000003e6: R8 := pad:64[mem[R31 + 4, el]:u32]
000003ec: #6 := 31:0[R8] - 4
000003f1: VF := extend:33[#6 + 1] <> extend:33[31:0[R8]] - 3
000003f6: CF := pad:33[#6 + 1] <> pad:33[31:0[R8]] + 0xFFFFFFFD
000003fa: ZF := #6 + 1 = 0
000003fe: NF := 31:31[#6 + 1]
00000402: R8 := pad:64[#6 + 1]
0000040e: when ZF goto %00000407
0000040f: goto %0000040a

0000040a:
0000040b: R8 := 1
00000411: goto %0000040d

00000407:
00000408: R8 := 0
00000410: goto %0000040d

0000040d:
00000417: when 0:0[R8] goto %00000415
00000762: goto %0000042c

0000042c:
0000042f: goto %0000042d

0000042d:
00000433: R8 := 0x11000
0000043a: R8 := pad:64[mem[R8 + 0x38, el]:u32]
00000442: mem := mem with [R31 + 4, el]:u32 <- 31:0[R8]
00000446: goto %00000415

00000415:
0000041f: R0 := pad:64[mem[R31 + 0xC, el]:u32]
00000425: R31 := R31 + 0x10
0000042a: call R30 with noreturn

00000743: sub register_tm_clones(register_tm_clones_result)
00000776: register_tm_clones_result :: out u32 = low:32[R0]

000002a0:
000002a3: R0 := 0x11000
000002a9: R0 := R0 + 0x30
000002ae: R1 := 0x11000
000002b4: R1 := R1 + 0x30
000002bb: R1 := R1 + ~R0 + 1
000002c1: R2 := 0.63:63[R1]
000002c8: R1 := R2 + (R1 ~>> 3)
000002ce: R1 := extend:64[63:1[R1]]
000002d4: when R1 = 0 goto %000002d2
00000763: goto %000004ad

000004ad:
000004b0: R2 := 0x10000
000004b7: R2 := mem[R2 + 0xFE0, el]:u64
000004bc: when R2 = 0 goto %000002d2
00000764: goto %000004c0

000002d2:
000002da: call R30 with noreturn

000004c0:
000004c4: R16 := R2
000004c9: call R16 with noreturn
