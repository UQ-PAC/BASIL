00000729: program
000006eb: sub __cxa_finalize(__cxa_finalize_result)
0000072a: __cxa_finalize_result :: out u32 = low:32[R0]

0000046d:
00000565: R16 := 0x20000
0000056c: R17 := mem[R16 + 8, el]:u64
00000572: R16 := R16 + 8
00000577: call R17 with noreturn

000006ec: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
0000072b: __do_global_dtors_aux_result :: out u32 = low:32[R0]

000002d3:
000002d7: #3 := R31 - 0x20
000002dd: mem := mem with [#3, el]:u64 <- R29
000002e3: mem := mem with [#3 + 8, el]:u64 <- R30
000002e7: R31 := #3
000002ed: R29 := R31
000002f5: mem := mem with [R31 + 0x10, el]:u64 <- R19
000002fa: R19 := 0x20000
00000301: R0 := pad:64[mem[R19 + 0x30]]
00000307: when 0:0[R0] goto %00000305
00000719: goto %00000436

00000436:
00000439: R0 := 0x1F000
00000440: R0 := mem[R0 + 0xFC8, el]:u64
00000446: when R0 = 0 goto %00000444
0000071a: goto %0000045d

0000045d:
00000460: R0 := 0x20000
00000467: R0 := mem[R0 + 0x28, el]:u64
0000046c: R30 := 0x6F0
0000046f: call @__cxa_finalize with return %00000444

00000444:
0000044c: R30 := 0x6F4
0000044e: call @deregister_tm_clones with return %00000450

00000450:
00000453: R0 := 1
0000045b: mem := mem with [R19 + 0x30] <- 7:0[R0]
0000071b: goto %00000305

00000305:
0000030f: R19 := mem[R31 + 0x10, el]:u64
00000316: R29 := mem[R31, el]:u64
0000031b: R30 := mem[R31 + 8, el]:u64
0000031f: R31 := R31 + 0x20
00000324: call R30 with noreturn

000006f0: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
0000072c: __libc_start_main_main :: in u64 = R0
0000072d: __libc_start_main_arg2 :: in u32 = low:32[R1]
0000072e: __libc_start_main_arg3 :: in out u64 = R2
0000072f: __libc_start_main_auxv :: in out u64 = R3
00000730: __libc_start_main_result :: out u32 = low:32[R0]

0000022c:
0000054f: R16 := 0x20000
00000556: R17 := mem[R16, el]:u64
0000055c: R16 := R16
00000561: call R17 with noreturn

000006f1: sub _fini(_fini_result)
00000731: _fini_result :: out u32 = low:32[R0]

00000020:
00000026: #0 := R31 - 0x10
0000002c: mem := mem with [#0, el]:u64 <- R29
00000032: mem := mem with [#0 + 8, el]:u64 <- R30
00000036: R31 := #0
0000003c: R29 := R31
00000043: R29 := mem[R31, el]:u64
00000048: R30 := mem[R31 + 8, el]:u64
0000004c: R31 := R31 + 0x10
00000051: call R30 with noreturn

000006f2: sub _init(_init_result)
00000732: _init_result :: out u32 = low:32[R0]

0000062c:
00000632: #8 := R31 - 0x10
00000638: mem := mem with [#8, el]:u64 <- R29
0000063e: mem := mem with [#8 + 8, el]:u64 <- R30
00000642: R31 := #8
00000648: R29 := R31
0000064d: R30 := 0x590
0000064f: call @call_weak_fn with return %00000651

00000651:
00000656: R29 := mem[R31, el]:u64
0000065b: R30 := mem[R31 + 8, el]:u64
0000065f: R31 := R31 + 0x10
00000664: call R30 with noreturn

000006f3: sub _start(_start_result)
00000733: _start_result :: out u32 = low:32[R0]

000001ed:
000001f2: R29 := 0
000001f7: R30 := 0
000001fd: R5 := R0
00000204: R1 := mem[R31, el]:u64
0000020a: R2 := R31 + 8
00000210: R6 := R31
00000215: R0 := 0x1F000
0000021c: R0 := mem[R0 + 0xFD8, el]:u64
00000221: R3 := 0
00000226: R4 := 0
0000022b: R30 := 0x630
0000022e: call @__libc_start_main with return %00000230

00000230:
00000233: R30 := 0x634
00000236: call @abort with return %0000071c

0000071c:
0000071d: call @call_weak_fn with noreturn

000006f6: sub abort()


00000234:
00000591: R16 := 0x20000
00000598: R17 := mem[R16 + 0x18, el]:u64
0000059e: R16 := R16 + 0x18
000005a3: call R17 with noreturn

000006f7: sub call_weak_fn(call_weak_fn_result)
00000734: call_weak_fn_result :: out u32 = low:32[R0]

00000238:
0000023b: R0 := 0x1F000
00000242: R0 := mem[R0 + 0xFD0, el]:u64
00000248: when R0 = 0 goto %00000246
0000071e: goto %000004ad

00000246:
0000024e: call R30 with noreturn

000004ad:
000004b0: goto @__gmon_start__

000004ae:
0000057b: R16 := 0x20000
00000582: R17 := mem[R16 + 0x10, el]:u64
00000588: R16 := R16 + 0x10
0000058d: call R17 with noreturn

000006f9: sub deregister_tm_clones(deregister_tm_clones_result)
00000735: deregister_tm_clones_result :: out u32 = low:32[R0]

00000254:
00000257: R0 := 0x20000
0000025d: R0 := R0 + 0x30
00000262: R1 := 0x20000
00000268: R1 := R1 + 0x30
0000026e: #1 := ~R0
00000273: #2 := R1 + ~R0
00000279: VF := extend:65[#2 + 1] <> extend:65[R1] + extend:65[#1] + 1
0000027f: CF := pad:65[#2 + 1] <> pad:65[R1] + pad:65[#1] + 1
00000283: ZF := #2 + 1 = 0
00000287: NF := 63:63[#2 + 1]
0000028d: when ZF goto %0000028b
0000071f: goto %0000048f

0000048f:
00000492: R1 := 0x1F000
00000499: R1 := mem[R1 + 0xFC0, el]:u64
0000049e: when R1 = 0 goto %0000028b
00000720: goto %000004a2

0000028b:
00000293: call R30 with noreturn

000004a2:
000004a6: R16 := R1
000004ab: call R16 with noreturn

000006fc: sub frame_dummy(frame_dummy_result)
00000736: frame_dummy_result :: out u32 = low:32[R0]

0000032a:
0000032c: call @register_tm_clones with noreturn

000006fd: sub main(main_argc, main_argv, main_result)
00000737: main_argc :: in u32 = low:32[R0]
00000738: main_argv :: in out u64 = R1
00000739: main_result :: out u32 = low:32[R0]

0000032e:
00000332: R31 := R31 - 0x20
0000033a: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R0]
0000033f: R0 := 0x20000
00000345: R0 := R0 + 0x34
0000034c: R1 := pad:64[mem[R31 + 0xC, el]:u32]
00000354: mem := mem with [R0, el]:u32 <- 31:0[R1]
0000035b: mem := mem with [R31 + 0x1C, el]:u32 <- 0
00000360: R0 := 0x20000
00000366: R0 := R0 + 0x34
0000036d: R0 := pad:64[mem[R0, el]:u32]
00000373: #4 := 31:0[R0] - 1
00000378: VF := extend:33[#4 + 1] <> extend:33[31:0[R0]] + 0
0000037d: CF := pad:33[#4 + 1] <> pad:33[31:0[R0]] - 0x100000000
00000381: ZF := #4 + 1 = 0
00000385: NF := 31:31[#4 + 1]
0000038b: when ZF <> 1 goto %00000389
00000721: goto %00000429

00000429:
0000042c: R0 := 3
00000434: mem := mem with [R31 + 0x1C, el]:u32 <- 31:0[R0]
00000722: goto %00000389

00000389:
00000391: R0 := 0x20000
00000397: R0 := R0 + 0x34
0000039e: R0 := pad:64[mem[R0, el]:u32]
000003a4: #5 := 31:0[R0] - 2
000003a9: VF := extend:33[#5 + 1] <> extend:33[31:0[R0]] - 1
000003ae: CF := pad:33[#5 + 1] <> pad:33[31:0[R0]] + 0xFFFFFFFF
000003b2: ZF := #5 + 1 = 0
000003b6: NF := 31:31[#5 + 1]
000003bc: when ZF <> 1 goto %000003ba
00000723: goto %0000041c

0000041c:
0000041f: R0 := 5
00000427: mem := mem with [R31 + 0x1C, el]:u32 <- 31:0[R0]
00000724: goto %000003ba

000003ba:
000003c4: R0 := pad:64[mem[R31 + 0x1C, el]:u32]
000003ca: #6 := 31:0[R0] - 4
000003cf: VF := extend:33[#6 + 1] <> extend:33[31:0[R0]] - 3
000003d4: CF := pad:33[#6 + 1] <> pad:33[31:0[R0]] + 0xFFFFFFFD
000003d8: ZF := #6 + 1 = 0
000003dc: NF := 31:31[#6 + 1]
000003e2: when ZF <> 1 goto %000003e0
00000725: goto %00000402

00000402:
00000405: R0 := 0x20000
0000040b: R0 := R0 + 0x38
00000412: R0 := pad:64[mem[R0, el]:u32]
0000041a: mem := mem with [R31 + 0x1C, el]:u32 <- 31:0[R0]
00000726: goto %000003e0

000003e0:
000003e8: R0 := 0x20000
000003ee: R0 := R0 + 0x38
000003f5: R0 := pad:64[mem[R0, el]:u32]
000003fb: R31 := R31 + 0x20
00000400: call R30 with noreturn

00000704: sub register_tm_clones(register_tm_clones_result)
0000073a: register_tm_clones_result :: out u32 = low:32[R0]

00000295:
00000298: R0 := 0x20000
0000029e: R0 := R0 + 0x30
000002a3: R1 := 0x20000
000002a9: R1 := R1 + 0x30
000002b0: R1 := R1 + ~R0 + 1
000002b6: R2 := 0.63:63[R1]
000002bd: R1 := R2 + (R1 ~>> 3)
000002c3: R1 := extend:64[63:1[R1]]
000002c9: when R1 = 0 goto %000002c7
00000727: goto %00000471

00000471:
00000474: R2 := 0x1F000
0000047b: R2 := mem[R2 + 0xFE0, el]:u64
00000480: when R2 = 0 goto %000002c7
00000728: goto %00000484

000002c7:
000002cf: call R30 with noreturn

00000484:
00000488: R16 := R2
0000048d: call R16 with noreturn
