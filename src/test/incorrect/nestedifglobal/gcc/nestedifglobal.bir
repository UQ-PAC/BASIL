00000710: program
000006d2: sub __cxa_finalize(__cxa_finalize_result)
00000711: __cxa_finalize_result :: out u32 = low:32[R0]

00000458:
00000550: R16 := 0x10000
00000557: R17 := mem[R16 + 0xFB8, el]:u64
0000055d: R16 := R16 + 0xFB8
00000562: call R17 with noreturn

000006d3: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
00000712: __do_global_dtors_aux_result :: out u32 = low:32[R0]

000002ca:
000002ce: #3 := R31 - 0x20
000002d4: mem := mem with [#3, el]:u64 <- R29
000002da: mem := mem with [#3 + 8, el]:u64 <- R30
000002de: R31 := #3
000002e4: R29 := R31
000002ec: mem := mem with [R31 + 0x10, el]:u64 <- R19
000002f1: R19 := 0x11000
000002f8: R0 := pad:64[mem[R19 + 0x10]]
000002ff: when 31:0[R0] <> 0 goto %000002fd
00000700: goto %00000421

00000421:
00000424: R0 := 0x10000
0000042b: R0 := mem[R0 + 0xFE0, el]:u64
00000431: when R0 = 0 goto %0000042f
00000701: goto %00000448

00000448:
0000044b: R0 := 0x11000
00000452: R0 := mem[R0 + 8, el]:u64
00000457: R30 := 0x6F0
0000045a: call @__cxa_finalize with return %0000042f

0000042f:
00000437: R30 := 0x6F4
00000439: call @deregister_tm_clones with return %0000043b

0000043b:
0000043e: R0 := 1
00000446: mem := mem with [R19 + 0x10] <- 7:0[R0]
00000702: goto %000002fd

000002fd:
00000307: R19 := mem[R31 + 0x10, el]:u64
0000030e: R29 := mem[R31, el]:u64
00000313: R30 := mem[R31 + 8, el]:u64
00000317: R31 := R31 + 0x20
0000031c: call R30 with noreturn

000006d7: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
00000713: __libc_start_main_main :: in u64 = R0
00000714: __libc_start_main_arg2 :: in u32 = low:32[R1]
00000715: __libc_start_main_arg3 :: in out u64 = R2
00000716: __libc_start_main_auxv :: in out u64 = R3
00000717: __libc_start_main_result :: out u32 = low:32[R0]

00000223:
0000053a: R16 := 0x10000
00000541: R17 := mem[R16 + 0xFB0, el]:u64
00000547: R16 := R16 + 0xFB0
0000054c: call R17 with noreturn

000006d8: sub _fini(_fini_result)
00000718: _fini_result :: out u32 = low:32[R0]

0000001f:
00000025: #0 := R31 - 0x10
0000002b: mem := mem with [#0, el]:u64 <- R29
00000031: mem := mem with [#0 + 8, el]:u64 <- R30
00000035: R31 := #0
0000003b: R29 := R31
00000042: R29 := mem[R31, el]:u64
00000047: R30 := mem[R31 + 8, el]:u64
0000004b: R31 := R31 + 0x10
00000050: call R30 with noreturn

000006d9: sub _init(_init_result)
00000719: _init_result :: out u32 = low:32[R0]

00000615:
0000061b: #8 := R31 - 0x10
00000621: mem := mem with [#8, el]:u64 <- R29
00000627: mem := mem with [#8 + 8, el]:u64 <- R30
0000062b: R31 := #8
00000631: R29 := R31
00000636: R30 := 0x590
00000638: call @call_weak_fn with return %0000063a

0000063a:
0000063f: R29 := mem[R31, el]:u64
00000644: R30 := mem[R31 + 8, el]:u64
00000648: R31 := R31 + 0x10
0000064d: call R30 with noreturn

000006da: sub _start(_start_result)
0000071a: _start_result :: out u32 = low:32[R0]

000001e4:
000001e9: R29 := 0
000001ee: R30 := 0
000001f4: R5 := R0
000001fb: R1 := mem[R31, el]:u64
00000201: R2 := R31 + 8
00000207: R6 := R31
0000020c: R0 := 0x10000
00000213: R0 := mem[R0 + 0xFF0, el]:u64
00000218: R3 := 0
0000021d: R4 := 0
00000222: R30 := 0x630
00000225: call @__libc_start_main with return %00000227

00000227:
0000022a: R30 := 0x634
0000022d: call @abort with return %00000703

00000703:
00000704: call @call_weak_fn with noreturn

000006dd: sub abort()


0000022b:
0000057c: R16 := 0x10000
00000583: R17 := mem[R16 + 0xFC8, el]:u64
00000589: R16 := R16 + 0xFC8
0000058e: call R17 with noreturn

000006de: sub call_weak_fn(call_weak_fn_result)
0000071b: call_weak_fn_result :: out u32 = low:32[R0]

0000022f:
00000232: R0 := 0x10000
00000239: R0 := mem[R0 + 0xFE8, el]:u64
0000023f: when R0 = 0 goto %0000023d
00000705: goto %00000498

0000023d:
00000245: call R30 with noreturn

00000498:
0000049b: goto @__gmon_start__

00000499:
00000566: R16 := 0x10000
0000056d: R17 := mem[R16 + 0xFC0, el]:u64
00000573: R16 := R16 + 0xFC0
00000578: call R17 with noreturn

000006e0: sub deregister_tm_clones(deregister_tm_clones_result)
0000071c: deregister_tm_clones_result :: out u32 = low:32[R0]

0000024b:
0000024e: R0 := 0x11000
00000254: R0 := R0 + 0x10
00000259: R1 := 0x11000
0000025f: R1 := R1 + 0x10
00000265: #1 := ~R0
0000026a: #2 := R1 + ~R0
00000270: VF := extend:65[#2 + 1] <> extend:65[R1] + extend:65[#1] + 1
00000276: CF := pad:65[#2 + 1] <> pad:65[R1] + pad:65[#1] + 1
0000027a: ZF := #2 + 1 = 0
0000027e: NF := 63:63[#2 + 1]
00000284: when ZF goto %00000282
00000706: goto %0000047a

0000047a:
0000047d: R1 := 0x10000
00000484: R1 := mem[R1 + 0xFD8, el]:u64
00000489: when R1 = 0 goto %00000282
00000707: goto %0000048d

00000282:
0000028a: call R30 with noreturn

0000048d:
00000491: R16 := R1
00000496: call R16 with noreturn

000006e3: sub frame_dummy(frame_dummy_result)
0000071d: frame_dummy_result :: out u32 = low:32[R0]

00000322:
00000324: call @register_tm_clones with noreturn

000006e4: sub main(main_argc, main_argv, main_result)
0000071e: main_argc :: in u32 = low:32[R0]
0000071f: main_argv :: in out u64 = R1
00000720: main_result :: out u32 = low:32[R0]

00000326:
0000032a: R31 := R31 - 0x20
00000332: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R0]
00000337: R0 := 0x11000
0000033d: R0 := R0 + 0x14
00000344: R1 := pad:64[mem[R31 + 0xC, el]:u32]
0000034c: mem := mem with [R0, el]:u32 <- 31:0[R1]
00000353: mem := mem with [R31 + 0x1C, el]:u32 <- 0
00000358: R0 := 0x11000
0000035e: R0 := R0 + 0x14
00000365: R0 := pad:64[mem[R0, el]:u32]
0000036b: #4 := 31:0[R0] - 1
00000370: VF := extend:33[#4 + 1] <> extend:33[31:0[R0]] + 0
00000375: CF := pad:33[#4 + 1] <> pad:33[31:0[R0]] - 0x100000000
00000379: ZF := #4 + 1 = 0
0000037d: NF := 31:31[#4 + 1]
00000383: when ZF <> 1 goto %00000381
00000708: goto %00000414

00000414:
00000417: R0 := 3
0000041f: mem := mem with [R31 + 0x1C, el]:u32 <- 31:0[R0]
00000709: goto %00000381

00000381:
00000389: R0 := 0x11000
0000038f: R0 := R0 + 0x14
00000396: R0 := pad:64[mem[R0, el]:u32]
0000039c: #5 := 31:0[R0] - 2
000003a1: VF := extend:33[#5 + 1] <> extend:33[31:0[R0]] - 1
000003a6: CF := pad:33[#5 + 1] <> pad:33[31:0[R0]] + 0xFFFFFFFF
000003aa: ZF := #5 + 1 = 0
000003ae: NF := 31:31[#5 + 1]
000003b4: when ZF <> 1 goto %000003b2
0000070a: goto %00000407

00000407:
0000040a: R0 := 5
00000412: mem := mem with [R31 + 0x1C, el]:u32 <- 31:0[R0]
0000070b: goto %000003b2

000003b2:
000003bc: R0 := pad:64[mem[R31 + 0x1C, el]:u32]
000003c2: #6 := 31:0[R0] - 4
000003c7: VF := extend:33[#6 + 1] <> extend:33[31:0[R0]] - 3
000003cc: CF := pad:33[#6 + 1] <> pad:33[31:0[R0]] + 0xFFFFFFFD
000003d0: ZF := #6 + 1 = 0
000003d4: NF := 31:31[#6 + 1]
000003da: when ZF <> 1 goto %000003d8
0000070c: goto %000003ed

000003ed:
000003f0: R0 := 0x11000
000003f6: R0 := R0 + 0x18
000003fd: R0 := pad:64[mem[R0, el]:u32]
00000405: mem := mem with [R31 + 0x1C, el]:u32 <- 31:0[R0]
0000070d: goto %000003d8

000003d8:
000003e0: R0 := 0
000003e6: R31 := R31 + 0x20
000003eb: call R30 with noreturn

000006eb: sub register_tm_clones(register_tm_clones_result)
00000721: register_tm_clones_result :: out u32 = low:32[R0]

0000028c:
0000028f: R0 := 0x11000
00000295: R0 := R0 + 0x10
0000029a: R1 := 0x11000
000002a0: R1 := R1 + 0x10
000002a7: R1 := R1 + ~R0 + 1
000002ad: R2 := 0.63:63[R1]
000002b4: R1 := R2 + (R1 ~>> 3)
000002ba: R1 := extend:64[63:1[R1]]
000002c0: when R1 = 0 goto %000002be
0000070e: goto %0000045c

0000045c:
0000045f: R2 := 0x10000
00000466: R2 := mem[R2 + 0xFF8, el]:u64
0000046b: when R2 = 0 goto %000002be
0000070f: goto %0000046f

000002be:
000002c6: call R30 with noreturn

0000046f:
00000473: R16 := R2
00000478: call R16 with noreturn
