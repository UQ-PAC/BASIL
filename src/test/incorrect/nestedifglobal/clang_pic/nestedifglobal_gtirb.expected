var {:extern} CF: bv1;
var {:extern} Gamma_CF: bool;
var {:extern} Gamma_NF: bool;
var {:extern} Gamma_R0: bool;
var {:extern} Gamma_R31: bool;
var {:extern} Gamma_R8: bool;
var {:extern} Gamma_R9: bool;
var {:extern} Gamma_VF: bool;
var {:extern} Gamma_ZF: bool;
var {:extern} Gamma_mem: [bv64]bool;
var {:extern} Gamma_stack: [bv64]bool;
var {:extern} NF: bv1;
var {:extern} R0: bv64;
var {:extern} R31: bv64;
var {:extern} R8: bv64;
var {:extern} R9: bv64;
var {:extern} VF: bv1;
var {:extern} ZF: bv1;
var {:extern} mem: [bv64]bv8;
var {:extern} stack: [bv64]bv8;
function {:extern} L(mem$in: [bv64]bv8, index: bv64) returns (bool) {
  false
}

function {:extern} {:bvbuiltin "bvadd"} bvadd32(bv32, bv32) returns (bv32);
function {:extern} {:bvbuiltin "bvadd"} bvadd33(bv33, bv33) returns (bv33);
function {:extern} {:bvbuiltin "bvadd"} bvadd64(bv64, bv64) returns (bv64);
function {:extern} {:bvbuiltin "bvcomp"} bvcomp32(bv32, bv32) returns (bv1);
function {:extern} {:bvbuiltin "bvcomp"} bvcomp33(bv33, bv33) returns (bv1);
function {:extern} {:bvbuiltin "bvnot"} bvnot1(bv1) returns (bv1);
function {:extern} gamma_load32(gammaMap: [bv64]bool, index: bv64) returns (bool) {
  (gammaMap[bvadd64(index, 3bv64)] && (gammaMap[bvadd64(index, 2bv64)] && (gammaMap[bvadd64(index, 1bv64)] && gammaMap[index])))
}

function {:extern} gamma_load64(gammaMap: [bv64]bool, index: bv64) returns (bool) {
  (gammaMap[bvadd64(index, 7bv64)] && (gammaMap[bvadd64(index, 6bv64)] && (gammaMap[bvadd64(index, 5bv64)] && (gammaMap[bvadd64(index, 4bv64)] && (gammaMap[bvadd64(index, 3bv64)] && (gammaMap[bvadd64(index, 2bv64)] && (gammaMap[bvadd64(index, 1bv64)] && gammaMap[index])))))))
}

function {:extern} gamma_store32(gammaMap: [bv64]bool, index: bv64, value: bool) returns ([bv64]bool) {
  gammaMap[index := value][bvadd64(index, 1bv64) := value][bvadd64(index, 2bv64) := value][bvadd64(index, 3bv64) := value]
}

function {:extern} gamma_store64(gammaMap: [bv64]bool, index: bv64, value: bool) returns ([bv64]bool) {
  gammaMap[index := value][bvadd64(index, 1bv64) := value][bvadd64(index, 2bv64) := value][bvadd64(index, 3bv64) := value][bvadd64(index, 4bv64) := value][bvadd64(index, 5bv64) := value][bvadd64(index, 6bv64) := value][bvadd64(index, 7bv64) := value]
}

function {:extern} memory_load32_le(memory: [bv64]bv8, index: bv64) returns (bv32) {
  (memory[bvadd64(index, 3bv64)] ++ (memory[bvadd64(index, 2bv64)] ++ (memory[bvadd64(index, 1bv64)] ++ memory[index])))
}

function {:extern} memory_load64_le(memory: [bv64]bv8, index: bv64) returns (bv64) {
  (memory[bvadd64(index, 7bv64)] ++ (memory[bvadd64(index, 6bv64)] ++ (memory[bvadd64(index, 5bv64)] ++ (memory[bvadd64(index, 4bv64)] ++ (memory[bvadd64(index, 3bv64)] ++ (memory[bvadd64(index, 2bv64)] ++ (memory[bvadd64(index, 1bv64)] ++ memory[index])))))))
}

function {:extern} memory_store32_le(memory: [bv64]bv8, index: bv64, value: bv32) returns ([bv64]bv8) {
  memory[index := value[8:0]][bvadd64(index, 1bv64) := value[16:8]][bvadd64(index, 2bv64) := value[24:16]][bvadd64(index, 3bv64) := value[32:24]]
}

function {:extern} memory_store64_le(memory: [bv64]bv8, index: bv64, value: bv64) returns ([bv64]bv8) {
  memory[index := value[8:0]][bvadd64(index, 1bv64) := value[16:8]][bvadd64(index, 2bv64) := value[24:16]][bvadd64(index, 3bv64) := value[32:24]][bvadd64(index, 4bv64) := value[40:32]][bvadd64(index, 5bv64) := value[48:40]][bvadd64(index, 6bv64) := value[56:48]][bvadd64(index, 7bv64) := value[64:56]]
}

function {:extern} {:bvbuiltin "sign_extend 1"} sign_extend1_32(bv32) returns (bv33);
function {:extern} {:bvbuiltin "zero_extend 1"} zero_extend1_32(bv32) returns (bv33);
function {:extern} {:bvbuiltin "zero_extend 32"} zero_extend32_32(bv32) returns (bv64);
procedure {:extern} rely();
  modifies Gamma_mem, mem;
  ensures (Gamma_mem == old(Gamma_mem));
  ensures (mem == old(mem));
  free ensures (memory_load32_le(mem, 2060bv64) == 131073bv32);
  free ensures (memory_load64_le(mem, 69048bv64) == 1872bv64);
  free ensures (memory_load64_le(mem, 69056bv64) == 1792bv64);
  free ensures (memory_load64_le(mem, 69568bv64) == 69688bv64);
  free ensures (memory_load64_le(mem, 69576bv64) == 69684bv64);
  free ensures (memory_load64_le(mem, 69592bv64) == 1876bv64);
  free ensures (memory_load64_le(mem, 69672bv64) == 69672bv64);

procedure {:extern} rely_transitive();
  modifies Gamma_mem, mem;
  ensures (Gamma_mem == old(Gamma_mem));
  ensures (mem == old(mem));

implementation {:extern} rely_transitive()
{
  call rely();
  call rely();
}

procedure {:extern} rely_reflexive();

procedure {:extern} guarantee_reflexive();
  modifies Gamma_mem, mem;

procedure main_1876();
  modifies CF, Gamma_CF, Gamma_NF, Gamma_R0, Gamma_R31, Gamma_R8, Gamma_R9, Gamma_VF, Gamma_ZF, Gamma_mem, Gamma_stack, NF, R0, R31, R8, R9, VF, ZF, mem, stack;
  free requires (memory_load64_le(mem, 69664bv64) == 0bv64);
  free requires (memory_load64_le(mem, 69672bv64) == 69672bv64);
  free requires (memory_load32_le(mem, 2060bv64) == 131073bv32);
  free requires (memory_load64_le(mem, 69048bv64) == 1872bv64);
  free requires (memory_load64_le(mem, 69056bv64) == 1792bv64);
  free requires (memory_load64_le(mem, 69568bv64) == 69688bv64);
  free requires (memory_load64_le(mem, 69576bv64) == 69684bv64);
  free requires (memory_load64_le(mem, 69592bv64) == 1876bv64);
  free requires (memory_load64_le(mem, 69672bv64) == 69672bv64);
  free ensures (Gamma_R31 == old(Gamma_R31));
  free ensures (R31 == old(R31));
  free ensures (memory_load32_le(mem, 2060bv64) == 131073bv32);
  free ensures (memory_load64_le(mem, 69048bv64) == 1872bv64);
  free ensures (memory_load64_le(mem, 69056bv64) == 1792bv64);
  free ensures (memory_load64_le(mem, 69568bv64) == 69688bv64);
  free ensures (memory_load64_le(mem, 69576bv64) == 69684bv64);
  free ensures (memory_load64_le(mem, 69592bv64) == 1876bv64);
  free ensures (memory_load64_le(mem, 69672bv64) == 69672bv64);

implementation main_1876()
{
  var Cse0__5_3_1: bv32;
  var Cse0__5_4_2: bv32;
  var Cse0__5_7_10: bv32;
  var Gamma_Cse0__5_3_1: bool;
  var Gamma_Cse0__5_4_2: bool;
  var Gamma_Cse0__5_7_10: bool;
  var Gamma_load11: bool;
  var Gamma_load12: bool;
  var Gamma_load13: bool;
  var Gamma_load14: bool;
  var Gamma_load15: bool;
  var Gamma_load16: bool;
  var Gamma_load17: bool;
  var Gamma_load18: bool;
  var Gamma_load19: bool;
  var Gamma_load20: bool;
  var load11: bv64;
  var load12: bv32;
  var load13: bv32;
  var load14: bv64;
  var load15: bv32;
  var load16: bv64;
  var load17: bv32;
  var load18: bv64;
  var load19: bv32;
  var load20: bv32;
  main_1876__0__T93CJsvjRiGkLGM3lm~zUw:
    assume {:captureState "main_1876__0__T93CJsvjRiGkLGM3lm~zUw"} true;
    R31, Gamma_R31 := bvadd64(R31, 18446744073709551584bv64), Gamma_R31;
    R8, Gamma_R8 := 65536bv64, true;
    call rely();
    load18, Gamma_load18 := memory_load64_le(mem, bvadd64(R8, 4040bv64)), (gamma_load64(Gamma_mem, bvadd64(R8, 4040bv64)) || L(mem, bvadd64(R8, 4040bv64)));
    R8, Gamma_R8 := load18, Gamma_load18;
    stack, Gamma_stack := memory_store64_le(stack, bvadd64(R31, 8bv64), R8), gamma_store64(Gamma_stack, bvadd64(R31, 8bv64), Gamma_R8);
    assume {:captureState "1888_0"} true;
    stack, Gamma_stack := memory_store32_le(stack, bvadd64(R31, 28bv64), 0bv32), gamma_store32(Gamma_stack, bvadd64(R31, 28bv64), true);
    assume {:captureState "1892_0"} true;
    stack, Gamma_stack := memory_store32_le(stack, bvadd64(R31, 24bv64), R0[32:0]), gamma_store32(Gamma_stack, bvadd64(R31, 24bv64), Gamma_R0);
    assume {:captureState "1896_0"} true;
    load19, Gamma_load19 := memory_load32_le(stack, bvadd64(R31, 24bv64)), gamma_load32(Gamma_stack, bvadd64(R31, 24bv64));
    R9, Gamma_R9 := zero_extend32_32(load19), Gamma_load19;
    call rely();
    assert (L(mem, R8) ==> Gamma_R9);
    mem, Gamma_mem := memory_store32_le(mem, R8, R9[32:0]), gamma_store32(Gamma_mem, R8, Gamma_R9);
    assume {:captureState "1904_0"} true;
    stack, Gamma_stack := memory_store32_le(stack, bvadd64(R31, 20bv64), 0bv32), gamma_store32(Gamma_stack, bvadd64(R31, 20bv64), true);
    assume {:captureState "1908_0"} true;
    call rely();
    load20, Gamma_load20 := memory_load32_le(mem, R8), (gamma_load32(Gamma_mem, R8) || L(mem, R8));
    R8, Gamma_R8 := zero_extend32_32(load20), Gamma_load20;
    Cse0__5_7_10, Gamma_Cse0__5_7_10 := bvadd32(R8[32:0], 0bv32), Gamma_R8;
    VF, Gamma_VF := bvnot1(bvcomp32(Cse0__5_7_10, Cse0__5_7_10)), Gamma_Cse0__5_7_10;
    CF, Gamma_CF := bvnot1(bvcomp33(zero_extend1_32(Cse0__5_7_10), bvadd33(zero_extend1_32(R8[32:0]), 4294967296bv33))), (Gamma_R8 && Gamma_Cse0__5_7_10);
    ZF, Gamma_ZF := bvcomp32(Cse0__5_7_10, 0bv32), Gamma_Cse0__5_7_10;
    NF, Gamma_NF := Cse0__5_7_10[32:31], Gamma_Cse0__5_7_10;
    R8, Gamma_R8 := zero_extend32_32(Cse0__5_7_10), Gamma_Cse0__5_7_10;
    assert Gamma_ZF;
    goto main_1876__0__T93CJsvjRiGkLGM3lm~zUw$__0, main_1876__0__T93CJsvjRiGkLGM3lm~zUw$__1;
  main_1876__0__T93CJsvjRiGkLGM3lm~zUw$__1:
    assume {:captureState "main_1876__0__T93CJsvjRiGkLGM3lm~zUw$__1"} true;
    assume (!(ZF == 1bv1));
    R8, Gamma_R8 := 1bv64, true;
    assert Gamma_R8;
    goto main_1876__0__T93CJsvjRiGkLGM3lm~zUw_goto_main_1876__3__BQu4h3vlSRawGkdd3zg0DQ, main_1876__0__T93CJsvjRiGkLGM3lm~zUw_goto_main_1876__1__XR5j_yKuQR24HXECGUTTaw;
  main_1876__0__T93CJsvjRiGkLGM3lm~zUw$__0:
    assume {:captureState "main_1876__0__T93CJsvjRiGkLGM3lm~zUw$__0"} true;
    assume (ZF == 1bv1);
    R8, Gamma_R8 := 0bv64, true;
    assert Gamma_R8;
    goto main_1876__0__T93CJsvjRiGkLGM3lm~zUw_goto_main_1876__3__BQu4h3vlSRawGkdd3zg0DQ, main_1876__0__T93CJsvjRiGkLGM3lm~zUw_goto_main_1876__1__XR5j_yKuQR24HXECGUTTaw;
  main_1876__0__T93CJsvjRiGkLGM3lm~zUw_goto_main_1876__1__XR5j_yKuQR24HXECGUTTaw:
    assume {:captureState "main_1876__0__T93CJsvjRiGkLGM3lm~zUw_goto_main_1876__1__XR5j_yKuQR24HXECGUTTaw"} true;
    assume (!(R8[1:0] == 1bv1));
    goto main_1876__1__XR5j_yKuQR24HXECGUTTaw;
  main_1876__1__XR5j_yKuQR24HXECGUTTaw:
    assume {:captureState "main_1876__1__XR5j_yKuQR24HXECGUTTaw"} true;
    goto main_1876__2__StfBUB0KQESSUkJf_60bAQ;
  main_1876__2__StfBUB0KQESSUkJf_60bAQ:
    assume {:captureState "main_1876__2__StfBUB0KQESSUkJf_60bAQ"} true;
    R8, Gamma_R8 := 3bv64, true;
    stack, Gamma_stack := memory_store32_le(stack, bvadd64(R31, 20bv64), R8[32:0]), gamma_store32(Gamma_stack, bvadd64(R31, 20bv64), Gamma_R8);
    assume {:captureState "1936_0"} true;
    goto main_1876__3__BQu4h3vlSRawGkdd3zg0DQ;
  main_1876__0__T93CJsvjRiGkLGM3lm~zUw_goto_main_1876__3__BQu4h3vlSRawGkdd3zg0DQ:
    assume {:captureState "main_1876__0__T93CJsvjRiGkLGM3lm~zUw_goto_main_1876__3__BQu4h3vlSRawGkdd3zg0DQ"} true;
    assume (R8[1:0] == 1bv1);
    goto main_1876__3__BQu4h3vlSRawGkdd3zg0DQ;
  main_1876__3__BQu4h3vlSRawGkdd3zg0DQ:
    assume {:captureState "main_1876__3__BQu4h3vlSRawGkdd3zg0DQ"} true;
    load14, Gamma_load14 := memory_load64_le(stack, bvadd64(R31, 8bv64)), gamma_load64(Gamma_stack, bvadd64(R31, 8bv64));
    R8, Gamma_R8 := load14, Gamma_load14;
    call rely();
    load15, Gamma_load15 := memory_load32_le(mem, R8), (gamma_load32(Gamma_mem, R8) || L(mem, R8));
    R8, Gamma_R8 := zero_extend32_32(load15), Gamma_load15;
    Cse0__5_4_2, Gamma_Cse0__5_4_2 := bvadd32(R8[32:0], 4294967295bv32), Gamma_R8;
    VF, Gamma_VF := bvnot1(bvcomp33(sign_extend1_32(Cse0__5_4_2), bvadd33(sign_extend1_32(R8[32:0]), 8589934591bv33))), (Gamma_R8 && Gamma_Cse0__5_4_2);
    CF, Gamma_CF := bvnot1(bvcomp33(zero_extend1_32(Cse0__5_4_2), bvadd33(zero_extend1_32(R8[32:0]), 4294967295bv33))), (Gamma_R8 && Gamma_Cse0__5_4_2);
    ZF, Gamma_ZF := bvcomp32(Cse0__5_4_2, 0bv32), Gamma_Cse0__5_4_2;
    NF, Gamma_NF := Cse0__5_4_2[32:31], Gamma_Cse0__5_4_2;
    R8, Gamma_R8 := zero_extend32_32(Cse0__5_4_2), Gamma_Cse0__5_4_2;
    assert Gamma_ZF;
    goto main_1876__3__BQu4h3vlSRawGkdd3zg0DQ$__0, main_1876__3__BQu4h3vlSRawGkdd3zg0DQ$__1;
  main_1876__3__BQu4h3vlSRawGkdd3zg0DQ$__1:
    assume {:captureState "main_1876__3__BQu4h3vlSRawGkdd3zg0DQ$__1"} true;
    assume (!(ZF == 1bv1));
    R8, Gamma_R8 := 1bv64, true;
    assert Gamma_R8;
    goto main_1876__3__BQu4h3vlSRawGkdd3zg0DQ_goto_main_1876__6__ScgHlHhCS1WcMwxSLBCjog, main_1876__3__BQu4h3vlSRawGkdd3zg0DQ_goto_main_1876__4__kgyF7X0vQAeoGY79WFpAXw;
  main_1876__3__BQu4h3vlSRawGkdd3zg0DQ$__0:
    assume {:captureState "main_1876__3__BQu4h3vlSRawGkdd3zg0DQ$__0"} true;
    assume (ZF == 1bv1);
    R8, Gamma_R8 := 0bv64, true;
    assert Gamma_R8;
    goto main_1876__3__BQu4h3vlSRawGkdd3zg0DQ_goto_main_1876__6__ScgHlHhCS1WcMwxSLBCjog, main_1876__3__BQu4h3vlSRawGkdd3zg0DQ_goto_main_1876__4__kgyF7X0vQAeoGY79WFpAXw;
  main_1876__3__BQu4h3vlSRawGkdd3zg0DQ_goto_main_1876__4__kgyF7X0vQAeoGY79WFpAXw:
    assume {:captureState "main_1876__3__BQu4h3vlSRawGkdd3zg0DQ_goto_main_1876__4__kgyF7X0vQAeoGY79WFpAXw"} true;
    assume (!(R8[1:0] == 1bv1));
    goto main_1876__4__kgyF7X0vQAeoGY79WFpAXw;
  main_1876__4__kgyF7X0vQAeoGY79WFpAXw:
    assume {:captureState "main_1876__4__kgyF7X0vQAeoGY79WFpAXw"} true;
    goto main_1876__5__La5W_bn0QnSJ~MnvpXFWoA;
  main_1876__5__La5W_bn0QnSJ~MnvpXFWoA:
    assume {:captureState "main_1876__5__La5W_bn0QnSJ~MnvpXFWoA"} true;
    R8, Gamma_R8 := 5bv64, true;
    stack, Gamma_stack := memory_store32_le(stack, bvadd64(R31, 20bv64), R8[32:0]), gamma_store32(Gamma_stack, bvadd64(R31, 20bv64), Gamma_R8);
    assume {:captureState "1972_0"} true;
    goto main_1876__6__ScgHlHhCS1WcMwxSLBCjog;
  main_1876__3__BQu4h3vlSRawGkdd3zg0DQ_goto_main_1876__6__ScgHlHhCS1WcMwxSLBCjog:
    assume {:captureState "main_1876__3__BQu4h3vlSRawGkdd3zg0DQ_goto_main_1876__6__ScgHlHhCS1WcMwxSLBCjog"} true;
    assume (R8[1:0] == 1bv1);
    goto main_1876__6__ScgHlHhCS1WcMwxSLBCjog;
  main_1876__6__ScgHlHhCS1WcMwxSLBCjog:
    assume {:captureState "main_1876__6__ScgHlHhCS1WcMwxSLBCjog"} true;
    load13, Gamma_load13 := memory_load32_le(stack, bvadd64(R31, 20bv64)), gamma_load32(Gamma_stack, bvadd64(R31, 20bv64));
    R8, Gamma_R8 := zero_extend32_32(load13), Gamma_load13;
    Cse0__5_3_1, Gamma_Cse0__5_3_1 := bvadd32(R8[32:0], 4294967293bv32), Gamma_R8;
    VF, Gamma_VF := bvnot1(bvcomp33(sign_extend1_32(Cse0__5_3_1), bvadd33(sign_extend1_32(R8[32:0]), 8589934589bv33))), (Gamma_R8 && Gamma_Cse0__5_3_1);
    CF, Gamma_CF := bvnot1(bvcomp33(zero_extend1_32(Cse0__5_3_1), bvadd33(zero_extend1_32(R8[32:0]), 4294967293bv33))), (Gamma_R8 && Gamma_Cse0__5_3_1);
    ZF, Gamma_ZF := bvcomp32(Cse0__5_3_1, 0bv32), Gamma_Cse0__5_3_1;
    NF, Gamma_NF := Cse0__5_3_1[32:31], Gamma_Cse0__5_3_1;
    R8, Gamma_R8 := zero_extend32_32(Cse0__5_3_1), Gamma_Cse0__5_3_1;
    assert Gamma_ZF;
    goto main_1876__6__ScgHlHhCS1WcMwxSLBCjog$__0, main_1876__6__ScgHlHhCS1WcMwxSLBCjog$__1;
  main_1876__6__ScgHlHhCS1WcMwxSLBCjog$__1:
    assume {:captureState "main_1876__6__ScgHlHhCS1WcMwxSLBCjog$__1"} true;
    assume (!(ZF == 1bv1));
    R8, Gamma_R8 := 1bv64, true;
    assert Gamma_R8;
    goto main_1876__6__ScgHlHhCS1WcMwxSLBCjog_goto_main_1876__9__WNf_4UJFTCupBtDlyt4H0A, main_1876__6__ScgHlHhCS1WcMwxSLBCjog_goto_main_1876__7__PJQQ~S5hQ3isxVg_lohkuQ;
  main_1876__6__ScgHlHhCS1WcMwxSLBCjog$__0:
    assume {:captureState "main_1876__6__ScgHlHhCS1WcMwxSLBCjog$__0"} true;
    assume (ZF == 1bv1);
    R8, Gamma_R8 := 0bv64, true;
    assert Gamma_R8;
    goto main_1876__6__ScgHlHhCS1WcMwxSLBCjog_goto_main_1876__9__WNf_4UJFTCupBtDlyt4H0A, main_1876__6__ScgHlHhCS1WcMwxSLBCjog_goto_main_1876__7__PJQQ~S5hQ3isxVg_lohkuQ;
  main_1876__6__ScgHlHhCS1WcMwxSLBCjog_goto_main_1876__7__PJQQ~S5hQ3isxVg_lohkuQ:
    assume {:captureState "main_1876__6__ScgHlHhCS1WcMwxSLBCjog_goto_main_1876__7__PJQQ~S5hQ3isxVg_lohkuQ"} true;
    assume (!(R8[1:0] == 1bv1));
    goto main_1876__7__PJQQ~S5hQ3isxVg_lohkuQ;
  main_1876__7__PJQQ~S5hQ3isxVg_lohkuQ:
    assume {:captureState "main_1876__7__PJQQ~S5hQ3isxVg_lohkuQ"} true;
    goto main_1876__8__iZUB7usbTzOrpOA3bSaAkg;
  main_1876__8__iZUB7usbTzOrpOA3bSaAkg:
    assume {:captureState "main_1876__8__iZUB7usbTzOrpOA3bSaAkg"} true;
    R8, Gamma_R8 := 65536bv64, true;
    call rely();
    load16, Gamma_load16 := memory_load64_le(mem, bvadd64(R8, 4032bv64)), (gamma_load64(Gamma_mem, bvadd64(R8, 4032bv64)) || L(mem, bvadd64(R8, 4032bv64)));
    R8, Gamma_R8 := load16, Gamma_load16;
    call rely();
    load17, Gamma_load17 := memory_load32_le(mem, R8), (gamma_load32(Gamma_mem, R8) || L(mem, R8));
    R8, Gamma_R8 := zero_extend32_32(load17), Gamma_load17;
    stack, Gamma_stack := memory_store32_le(stack, bvadd64(R31, 20bv64), R8[32:0]), gamma_store32(Gamma_stack, bvadd64(R31, 20bv64), Gamma_R8);
    assume {:captureState "2012_0"} true;
    goto main_1876__9__WNf_4UJFTCupBtDlyt4H0A;
  main_1876__6__ScgHlHhCS1WcMwxSLBCjog_goto_main_1876__9__WNf_4UJFTCupBtDlyt4H0A:
    assume {:captureState "main_1876__6__ScgHlHhCS1WcMwxSLBCjog_goto_main_1876__9__WNf_4UJFTCupBtDlyt4H0A"} true;
    assume (R8[1:0] == 1bv1);
    goto main_1876__9__WNf_4UJFTCupBtDlyt4H0A;
  main_1876__9__WNf_4UJFTCupBtDlyt4H0A:
    assume {:captureState "main_1876__9__WNf_4UJFTCupBtDlyt4H0A"} true;
    R8, Gamma_R8 := 65536bv64, true;
    call rely();
    load11, Gamma_load11 := memory_load64_le(mem, bvadd64(R8, 4032bv64)), (gamma_load64(Gamma_mem, bvadd64(R8, 4032bv64)) || L(mem, bvadd64(R8, 4032bv64)));
    R8, Gamma_R8 := load11, Gamma_load11;
    call rely();
    load12, Gamma_load12 := memory_load32_le(mem, R8), (gamma_load32(Gamma_mem, R8) || L(mem, R8));
    R0, Gamma_R0 := zero_extend32_32(load12), Gamma_load12;
    R31, Gamma_R31 := bvadd64(R31, 32bv64), Gamma_R31;
    goto main_1876_basil_return;
  main_1876_basil_return:
    assume {:captureState "main_1876_basil_return"} true;
    return;
}

