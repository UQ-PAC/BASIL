00000641: program
0000062a: sub __cxa_finalize(__cxa_finalize_result)
00000642: __cxa_finalize_result :: out u32 = low:32[R0]

000003b4:
000004ac: R16 := 0x20000
000004b3: R17 := mem[R16 + 8, el]:u64
000004b9: R16 := R16 + 8
000004be: call R17 with noreturn

0000062b: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
00000643: __do_global_dtors_aux_result :: out u32 = low:32[R0]

00000308:
0000030c: #3 := R31 - 0x20
00000312: mem := mem with [#3, el]:u64 <- R29
00000318: mem := mem with [#3 + 8, el]:u64 <- R30
0000031c: R31 := #3
00000322: R29 := R31
0000032a: mem := mem with [R31 + 0x10, el]:u64 <- R19
0000032f: R19 := 0x20000
00000336: R0 := pad:64[mem[R19 + 0x30]]
0000033c: when 0:0[R0] goto %0000033a
0000062c: goto %0000037d

0000037d:
00000380: R0 := 0x1F000
00000387: R0 := mem[R0 + 0xFC8, el]:u64
0000038d: when R0 = 0 goto %0000038b
0000062d: goto %000003a4

000003a4:
000003a7: R0 := 0x20000
000003ae: R0 := mem[R0 + 0x28, el]:u64
000003b3: R30 := 0x73C
000003b6: call @__cxa_finalize with return %0000038b

0000038b:
00000393: R30 := 0x740
00000395: call @deregister_tm_clones with return %00000397

00000397:
0000039a: R0 := 1
000003a2: mem := mem with [R19 + 0x30] <- 7:0[R0]
0000062e: goto %0000033a

0000033a:
00000344: R19 := mem[R31 + 0x10, el]:u64
0000034b: R29 := mem[R31, el]:u64
00000350: R30 := mem[R31 + 8, el]:u64
00000354: R31 := R31 + 0x20
00000359: call R30 with noreturn

0000062f: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
00000644: __libc_start_main_main :: in u64 = R0
00000645: __libc_start_main_arg2 :: in u32 = low:32[R1]
00000646: __libc_start_main_arg3 :: in out u64 = R2
00000647: __libc_start_main_auxv :: in out u64 = R3
00000648: __libc_start_main_result :: out u32 = low:32[R0]

0000025b:
00000496: R16 := 0x20000
0000049d: R17 := mem[R16, el]:u64
000004a3: R16 := R16
000004a8: call R17 with noreturn

00000630: sub _fini(_fini_result)
00000649: _fini_result :: out u32 = low:32[R0]

00000020:
00000026: #0 := R31 - 0x10
0000002c: mem := mem with [#0, el]:u64 <- R29
00000032: mem := mem with [#0 + 8, el]:u64 <- R30
00000036: R31 := #0
0000003c: R29 := R31
00000043: R29 := mem[R31, el]:u64
00000048: R30 := mem[R31 + 8, el]:u64
0000004c: R31 := R31 + 0x10
00000051: call R30 with noreturn

00000631: sub _init(_init_result)
0000064a: _init_result :: out u32 = low:32[R0]

0000056f:
00000575: #5 := R31 - 0x10
0000057b: mem := mem with [#5, el]:u64 <- R29
00000581: mem := mem with [#5 + 8, el]:u64 <- R30
00000585: R31 := #5
0000058b: R29 := R31
00000590: R30 := 0x590
00000592: call @call_weak_fn with return %00000594

00000594:
00000599: R29 := mem[R31, el]:u64
0000059e: R30 := mem[R31 + 8, el]:u64
000005a2: R31 := R31 + 0x10
000005a7: call R30 with noreturn

00000632: sub _start(_start_result)
0000064b: _start_result :: out u32 = low:32[R0]

0000021c:
00000221: R29 := 0
00000226: R30 := 0
0000022c: R5 := R0
00000233: R1 := mem[R31, el]:u64
00000239: R2 := R31 + 8
0000023f: R6 := R31
00000244: R0 := 0x1F000
0000024b: R0 := mem[R0 + 0xFD8, el]:u64
00000250: R3 := 0
00000255: R4 := 0
0000025a: R30 := 0x670
0000025d: call @__libc_start_main with return %0000025f

0000025f:
00000262: R30 := 0x674
00000265: call @abort with return %00000633

00000633:
00000634: call @call_weak_fn with noreturn

00000635: sub abort()


00000263:
000004d8: R16 := 0x20000
000004df: R17 := mem[R16 + 0x18, el]:u64
000004e5: R16 := R16 + 0x18
000004ea: call R17 with noreturn

00000636: sub call_weak_fn(call_weak_fn_result)
0000064c: call_weak_fn_result :: out u32 = low:32[R0]

00000267:
0000026a: R0 := 0x1F000
00000271: R0 := mem[R0 + 0xFD0, el]:u64
00000277: when R0 = 0 goto %00000275
00000637: goto %000003f4

00000275:
0000027d: call R30 with noreturn

000003f4:
000003f7: goto @__gmon_start__

000003f5:
000004c2: R16 := 0x20000
000004c9: R17 := mem[R16 + 0x10, el]:u64
000004cf: R16 := R16 + 0x10
000004d4: call R17 with noreturn

00000638: sub deregister_tm_clones(deregister_tm_clones_result)
0000064d: deregister_tm_clones_result :: out u32 = low:32[R0]

0000028b:
0000028e: R0 := 0x20000
00000294: R0 := R0 + 0x30
00000299: R1 := 0x20000
0000029f: R1 := R1 + 0x30
000002a5: #1 := ~R0
000002aa: #2 := R1 + ~R0
000002b0: VF := extend:65[#2 + 1] <> extend:65[R1] + extend:65[#1] + 1
000002b6: CF := pad:65[#2 + 1] <> pad:65[R1] + pad:65[#1] + 1
000002ba: ZF := #2 + 1 = 0
000002be: NF := 63:63[#2 + 1]
000002c4: when ZF goto %000002c2
00000639: goto %000003d6

000003d6:
000003d9: R1 := 0x1F000
000003e0: R1 := mem[R1 + 0xFC0, el]:u64
000003e5: when R1 = 0 goto %000002c2
0000063a: goto %000003e9

000002c2:
000002ca: call R30 with noreturn

000003e9:
000003ed: R16 := R1
000003f2: call R16 with noreturn

0000063b: sub frame_dummy(frame_dummy_result)
0000064e: frame_dummy_result :: out u32 = low:32[R0]

00000361:
00000363: call @register_tm_clones with noreturn

0000063c: sub get_two(get_two_result)
0000064f: get_two_result :: out u32 = low:32[R0]

00000373:
00000376: R0 := 2
0000037b: call R30 with noreturn

0000063d: sub main(main_argc, main_argv, main_result)
00000650: main_argc :: in u32 = low:32[R0]
00000651: main_argv :: in out u64 = R1
00000652: main_result :: out u32 = low:32[R0]

000001dd:
000001e0: R0 := 0x20000
000001e6: R1 := R0 + 0x34
000001eb: R3 := 1
000001f0: R2 := 2
000001f8: mem := mem with [R0 + 0x34, el]:u32 <- 31:0[R3]
000001fd: R0 := 0
00000205: mem := mem with [R1 + 4, el]:u32 <- 31:0[R2]
0000020a: call R30 with noreturn

0000063e: sub register_tm_clones(register_tm_clones_result)
00000653: register_tm_clones_result :: out u32 = low:32[R0]

000002cc:
000002cf: R0 := 0x20000
000002d5: R0 := R0 + 0x30
000002da: R1 := 0x20000
000002e0: R1 := R1 + 0x30
000002e7: R1 := R1 + ~R0 + 1
000002ed: R2 := 0.63:63[R1]
000002f4: R1 := R2 + (R1 ~>> 3)
000002fa: R1 := extend:64[63:1[R1]]
00000300: when R1 = 0 goto %000002fe
0000063f: goto %000003b8

000003b8:
000003bb: R2 := 0x1F000
000003c2: R2 := mem[R2 + 0xFE0, el]:u64
000003c7: when R2 = 0 goto %000002fe
00000640: goto %000003cb

000002fe:
00000306: call R30 with noreturn

000003cb:
000003cf: R16 := R2
000003d4: call R16 with noreturn
