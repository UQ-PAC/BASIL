%00000487: Register(R2, bv64) := (Register(R2, bv64)[64:32] ++ (21515bv16 ++ Register(R2, bv64)[16:0]))==>Register(R2, bv64)->Top<>Register(R31, bv64)->Top
%0000045d: Register(R31, bv64) := LocalVar(#6, bv64)==>Register(R31, bv64)->Top
%00000413: Memory(mem, 64, 8) := MemoryStore(Memory(mem, 64, 8), Register(R31, bv64), Register(R2, bv64), LittleEndian, 64)==>Register(R30, bv64)->Top<>Register(R31, bv64)->Top
%000004e8: Register(R0, bv64) := 0bv64==>Register(R31, bv64)->Top
%0000049f: DirectCall(get_two, Some(l000004a1))==>Register(R1, bv64)->Top<>Register(R2, bv64)->Top<>Register(R30, bv64)->Top<>Register(R0, bv64)->Top<>Register(R31, bv64)->Top
%0000043c: Register(R0, bv64) := ZeroExtend(32, bvadd32(Register(R1, bv64)[32:0], Register(R0, bv64)[32:0]))==>Register(R0, bv64)->Top<>Register(R31, bv64)->Top<>Register(R30, bv64)->Top
%00000498: Register(R0, bv64) := 97bv64==>Register(R31, bv64)->Top<>Register(R1, bv64)->Top<>Register(R2, bv64)->Top<>Register(R0, bv64)->Top
Procedure get_two at 1900 with 2 blocks and 0 in and 1 out parameters==>Register(R1, bv64)->Top<>Register(R2, bv64)->Top<>Register(R30, bv64)->Top<>Register(R0, bv64)->Top<>Register(R31, bv64)->Top
%00000453: Memory(mem, 64, 8) := MemoryStore(Memory(mem, 64, 8), LocalVar(#6, bv64), Register(R29, bv64), LittleEndian, 64)==>Register(R30, bv64)->Top<>LocalVar(#6, bv64)->Top
%00000468: Register(R0, bv64) := 69632bv64==>Register(R31, bv64)->Top<>Register(R0, bv64)->Top
%000004ca: Register(R0, bv64) := ZeroExtend(32, MemoryLoad(Memory(mem, 64, 8), Register(R0, bv64), LittleEndian, 32))==>Register(R0, bv64)->Top<>Register(R31, bv64)->Top
IndirectCall(Register(R30, bv64), None)==>Register(R0, bv64)->Top<>Register(R31, bv64)->Top
%000004aa: Register(R0, bv64) := 69632bv64==>Register(R1, bv64)->Top<>Register(R0, bv64)->Top<>Register(R31, bv64)->Top
%000003fb: Register(R31, bv64) := bvadd64(Register(R31, bv64), 18446744073709551600bv64)==>Register(R1, bv64)->Top<>Register(R2, bv64)->Top<>Register(R30, bv64)->Top<>Register(R0, bv64)->Top<>Register(R31, bv64)->Top
%000004ef: Register(R29, bv64) := MemoryLoad(Memory(mem, 64, 8), Register(R31, bv64), LittleEndian, 64)==>Register(R31, bv64)->Top
%00000480: Register(R2, bv64) := 58368bv64==>Register(R31, bv64)->Top<>Register(R2, bv64)->Top
Block lmain==>Register(R29, bv64)->Top<>Register(R31, bv64)->Top<>Register(R30, bv64)->Top
%0000048e: Register(R2, bv64) := (Register(R2, bv64)[64:48] ++ (2bv16 ++ Register(R2, bv64)[32:0]))==>Register(R31, bv64)->Top<>Register(R2, bv64)->Top
Block l000004e5==>Register(R31, bv64)->Top
%000004d0: Register(R1, bv64) := ZeroExtend(32, Register(R0, bv64)[32:0])==>Register(R31, bv64)->Top
%00000403: Memory(mem, 64, 8) := MemoryStore(Memory(mem, 64, 8), bvadd64(Register(R31, bv64), 15bv64), Register(R0, bv64)[8:0], LittleEndian, 8)==>Register(R2, bv64)->Top<>Register(R1, bv64)->Top<>Register(R30, bv64)->Top<>Register(R31, bv64)->Top
%000004c3: Register(R0, bv64) := bvadd64(Register(R0, bv64), 24bv64)==>Register(R0, bv64)->Top<>Register(R31, bv64)->Top
%0000042e: Register(R1, bv64) := ZeroExtend(32, Register(R0, bv64)[32:0])==>Register(R31, bv64)->Top<>Register(R1, bv64)->Top<>Register(R30, bv64)->Top
%000004e0: Register(R30, bv64) := 2040bv64==>Register(R31, bv64)->Top
%00000463: Register(R29, bv64) := Register(R31, bv64)==>Register(R31, bv64)->Top
Block l000004a1==>Register(R31, bv64)->Top<>Register(R0, bv64)->Top
%00000442: Register(R31, bv64) := bvadd64(Register(R31, bv64), 16bv64)==>Register(R0, bv64)->Top<>Register(R30, bv64)->Top<>Register(R31, bv64)->Top
Block main_basil_return==>Register(R30, bv64)->Top
%000004f4: Register(R30, bv64) := MemoryLoad(Memory(mem, 64, 8), bvadd64(Register(R31, bv64), 8bv64), LittleEndian, 64)==>Register(R30, bv64)->Top<>Register(R31, bv64)->Top
%00000421: Register(R0, bv64) := ZeroExtend(32, MemoryLoad(Memory(mem, 64, 8), bvadd64(Register(R31, bv64), 8bv64), LittleEndian, 32))==>Register(R0, bv64)->Top<>Register(R31, bv64)->Top<>Register(R30, bv64)->Top<>Register(R1, bv64)->Top
%0000040b: Memory(mem, 64, 8) := MemoryStore(Memory(mem, 64, 8), bvadd64(Register(R31, bv64), 8bv64), Register(R1, bv64)[32:0], LittleEndian, 32)==>Register(R30, bv64)->Top<>Register(R2, bv64)->Top<>Register(R31, bv64)->Top
GoTo(main_basil_return)==>Register(R30, bv64)->Top
%0000046e: Register(R0, bv64) := bvadd64(Register(R0, bv64), 20bv64)==>Register(R0, bv64)->Top<>Register(R31, bv64)->Top
%00000435: Register(R0, bv64) := MemoryLoad(Memory(mem, 64, 8), Register(R31, bv64), LittleEndian, 64)==>Register(R1, bv64)->Top<>Register(R30, bv64)->Top<>Register(R0, bv64)->Top<>Register(R31, bv64)->Top
%000004f8: Register(R31, bv64) := bvadd64(Register(R31, bv64), 16bv64)==>Register(R30, bv64)->Top
%00000493: Register(R1, bv64) := 10bv64==>Register(R2, bv64)->Top<>Register(R31, bv64)->Top<>Register(R1, bv64)->Top
Procedure main at 1948 with 4 blocks and 2 in and 2 out parameters==>Register(R30, bv64)->Top<>Register(R31, bv64)->Top<>Register(R29, bv64)->Top
%0000049d: Register(R30, bv64) := 1996bv64==>Register(R1, bv64)->Top<>Register(R2, bv64)->Top<>Register(R30, bv64)->Top<>Register(R0, bv64)->Top<>Register(R31, bv64)->Top
%00000473: Register(R1, bv64) := 1bv64==>Register(R1, bv64)->Top<>Register(R0, bv64)->Top<>Register(R31, bv64)->Top
%000004db: Register(R0, bv64) := bvadd64(Register(R0, bv64), 2216bv64)==>Register(R31, bv64)->Top
%0000041a: Register(R1, bv64) := ZeroExtend(56, MemoryLoad(Memory(mem, 64, 8), bvadd64(Register(R31, bv64), 15bv64), LittleEndian, 8))==>Register(R31, bv64)->Top<>Register(R30, bv64)->Top<>Register(R1, bv64)->Top
%000004b0: Register(R0, bv64) := bvadd64(Register(R0, bv64), 24bv64)==>Register(R31, bv64)->Top<>Register(R0, bv64)->Top<>Register(R1, bv64)->Top
%0000047b: Memory(mem, 64, 8) := MemoryStore(Memory(mem, 64, 8), Register(R0, bv64), Register(R1, bv64)[32:0], LittleEndian, 32)==>Register(R31, bv64)->Top
%000004d5: Register(R0, bv64) := 0bv64==>Register(R0, bv64)->Top<>Register(R31, bv64)->Top
%000004e3: DirectCall(printf, Some(l000004e5))==>Register(R31, bv64)->Top
GoTo(l000004a1)==>Register(R31, bv64)->Top<>Register(R0, bv64)->Top
%000004b8: Memory(mem, 64, 8) := MemoryStore(Memory(mem, 64, 8), Register(R0, bv64), Register(R1, bv64)[32:0], LittleEndian, 32)==>Register(R31, bv64)->Top
GoTo(get_two_basil_return)==>Register(R30, bv64)->Top<>Register(R0, bv64)->Top<>Register(R31, bv64)->Top
%000004bd: Register(R0, bv64) := 69632bv64==>Register(R31, bv64)->Top<>Register(R0, bv64)->Top
%000004a5: Register(R1, bv64) := ZeroExtend(32, Register(R0, bv64)[32:0])==>Register(R31, bv64)->Top<>Register(R1, bv64)->Top
Block lget_two==>Register(R1, bv64)->Top<>Register(R2, bv64)->Top<>Register(R30, bv64)->Top<>Register(R0, bv64)->Top<>Register(R31, bv64)->Top
%00000428: Register(R0, bv64) := ZeroExtend(32, bvadd32(Register(R1, bv64)[32:0], Register(R0, bv64)[32:0]))==>Register(R0, bv64)->Top<>Register(R30, bv64)->Top<>Register(R31, bv64)->Top
GoTo(l000004e5)==>Register(R31, bv64)->Top
%0000044d: LocalVar(#6, bv64) := bvadd64(Register(R31, bv64), 18446744073709551600bv64)==>Register(R29, bv64)->Top<>Register(R30, bv64)->Top<>LocalVar(#6, bv64)->Top
%00000459: Memory(mem, 64, 8) := MemoryStore(Memory(mem, 64, 8), bvadd64(LocalVar(#6, bv64), 8bv64), Register(R30, bv64), LittleEndian, 64)==>LocalVar(#6, bv64)->Top
Block get_two_basil_return==>Register(R31, bv64)->Top<>Register(R0, bv64)->Top<>Register(R30, bv64)->Top