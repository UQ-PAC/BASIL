00000787: program
0000074b: sub __cxa_finalize(__cxa_finalize_result)
00000788: __cxa_finalize_result :: out u32 = low:32[R0]

00000472:
000005a9: R16 := 0x10000
000005b0: R17 := mem[R16 + 0xFB8, el]:u64
000005b6: R16 := R16 + 0xFB8
000005bb: call R17 with noreturn

0000074c: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
00000789: __do_global_dtors_aux_result :: out u32 = low:32[R0]

00000394:
00000398: #5 := R31 - 0x20
0000039e: mem := mem with [#5, el]:u64 <- R29
000003a4: mem := mem with [#5 + 8, el]:u64 <- R30
000003a8: R31 := #5
000003ae: R29 := R31
000003b6: mem := mem with [R31 + 0x10, el]:u64 <- R19
000003bb: R19 := 0x11000
000003c2: R0 := pad:64[mem[R19 + 0x10]]
000003c9: when 31:0[R0] <> 0 goto %000003c7
0000077b: goto %0000043b

0000043b:
0000043e: R0 := 0x10000
00000445: R0 := mem[R0 + 0xFE0, el]:u64
0000044b: when R0 = 0 goto %00000449
0000077c: goto %00000462

00000462:
00000465: R0 := 0x11000
0000046c: R0 := mem[R0 + 8, el]:u64
00000471: R30 := 0x770
00000474: call @__cxa_finalize with return %00000449

00000449:
00000451: R30 := 0x774
00000453: call @deregister_tm_clones with return %00000455

00000455:
00000458: R0 := 1
00000460: mem := mem with [R19 + 0x10] <- 7:0[R0]
0000077d: goto %000003c7

000003c7:
000003d1: R19 := mem[R31 + 0x10, el]:u64
000003d8: R29 := mem[R31, el]:u64
000003dd: R30 := mem[R31 + 8, el]:u64
000003e1: R31 := R31 + 0x20
000003e6: call R30 with noreturn

00000750: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
0000078a: __libc_start_main_main :: in u64 = R0
0000078b: __libc_start_main_arg2 :: in u32 = low:32[R1]
0000078c: __libc_start_main_arg3 :: in out u64 = R2
0000078d: __libc_start_main_auxv :: in out u64 = R3
0000078e: __libc_start_main_result :: out u32 = low:32[R0]

000002ed:
00000593: R16 := 0x10000
0000059a: R17 := mem[R16 + 0xFB0, el]:u64
000005a0: R16 := R16 + 0xFB0
000005a5: call R17 with noreturn

00000751: sub _fini(_fini_result)
0000078f: _fini_result :: out u32 = low:32[R0]

0000001f:
00000025: #0 := R31 - 0x10
0000002b: mem := mem with [#0, el]:u64 <- R29
00000031: mem := mem with [#0 + 8, el]:u64 <- R30
00000035: R31 := #0
0000003b: R29 := R31
00000042: R29 := mem[R31, el]:u64
00000047: R30 := mem[R31 + 8, el]:u64
0000004b: R31 := R31 + 0x10
00000050: call R30 with noreturn

00000752: sub _init(_init_result)
00000790: _init_result :: out u32 = low:32[R0]

0000067e:
00000684: #8 := R31 - 0x10
0000068a: mem := mem with [#8, el]:u64 <- R29
00000690: mem := mem with [#8 + 8, el]:u64 <- R30
00000694: R31 := #8
0000069a: R29 := R31
0000069f: R30 := 0x590
000006a1: call @call_weak_fn with return %000006a3

000006a3:
000006a8: R29 := mem[R31, el]:u64
000006ad: R30 := mem[R31 + 8, el]:u64
000006b1: R31 := R31 + 0x10
000006b6: call R30 with noreturn

00000753: sub _start(_start_result)
00000791: _start_result :: out u32 = low:32[R0]

000002ae:
000002b3: R29 := 0
000002b8: R30 := 0
000002be: R5 := R0
000002c5: R1 := mem[R31, el]:u64
000002cb: R2 := R31 + 8
000002d1: R6 := R31
000002d6: R0 := 0x10000
000002dd: R0 := mem[R0 + 0xFF0, el]:u64
000002e2: R3 := 0
000002e7: R4 := 0
000002ec: R30 := 0x6B0
000002ef: call @__libc_start_main with return %000002f1

000002f1:
000002f4: R30 := 0x6B4
000002f7: call @abort with return %0000077e

0000077e:
0000077f: call @call_weak_fn with noreturn

00000756: sub abort()


000002f5:
000005d5: R16 := 0x10000
000005dc: R17 := mem[R16 + 0xFC8, el]:u64
000005e2: R16 := R16 + 0xFC8
000005e7: call R17 with noreturn

00000757: sub call_weak_fn(call_weak_fn_result)
00000792: call_weak_fn_result :: out u32 = low:32[R0]

000002f9:
000002fc: R0 := 0x10000
00000303: R0 := mem[R0 + 0xFE8, el]:u64
00000309: when R0 = 0 goto %00000307
00000780: goto %000004b2

00000307:
0000030f: call R30 with noreturn

000004b2:
000004b5: goto @__gmon_start__

000004b3:
000005bf: R16 := 0x10000
000005c6: R17 := mem[R16 + 0xFC0, el]:u64
000005cc: R16 := R16 + 0xFC0
000005d1: call R17 with noreturn

00000759: sub deregister_tm_clones(deregister_tm_clones_result)
00000793: deregister_tm_clones_result :: out u32 = low:32[R0]

00000315:
00000318: R0 := 0x11000
0000031e: R0 := R0 + 0x10
00000323: R1 := 0x11000
00000329: R1 := R1 + 0x10
0000032f: #3 := ~R0
00000334: #4 := R1 + ~R0
0000033a: VF := extend:65[#4 + 1] <> extend:65[R1] + extend:65[#3] + 1
00000340: CF := pad:65[#4 + 1] <> pad:65[R1] + pad:65[#3] + 1
00000344: ZF := #4 + 1 = 0
00000348: NF := 63:63[#4 + 1]
0000034e: when ZF goto %0000034c
00000781: goto %00000494

00000494:
00000497: R1 := 0x10000
0000049e: R1 := mem[R1 + 0xFD8, el]:u64
000004a3: when R1 = 0 goto %0000034c
00000782: goto %000004a7

0000034c:
00000354: call R30 with noreturn

000004a7:
000004ab: R16 := R1
000004b0: call R16 with noreturn

0000075c: sub frame_dummy(frame_dummy_result)
00000794: frame_dummy_result :: out u32 = low:32[R0]

000003ec:
000003ee: call @register_tm_clones with noreturn

0000075d: sub main(main_argc, main_argv, main_result)
00000795: main_argc :: in u32 = low:32[R0]
00000796: main_argv :: in out u64 = R1
00000797: main_result :: out u32 = low:32[R0]

00000224:
00000228: #1 := R31 - 0x10
0000022e: mem := mem with [#1, el]:u64 <- R29
00000234: mem := mem with [#1 + 8, el]:u64 <- R30
00000238: R31 := #1
0000023e: R29 := R31
00000244: #2 := 31:0[R0] - 2
00000249: VF := extend:33[#2 + 1] <> extend:33[31:0[R0]] - 1
0000024e: CF := pad:33[#2 + 1] <> pad:33[31:0[R0]] + 0xFFFFFFFF
00000252: ZF := #2 + 1 = 0
00000256: NF := 31:31[#2 + 1]
0000025c: when ZF goto %0000025a
00000783: goto %000004b7

0000025a:
00000262: R0 := 0
00000268: R0 := R0 + 0x7B0
0000026d: goto %0000026b

000004b7:
000004bb: #6 := 31:0[R0] - 3
000004c0: VF := extend:33[#6 + 1] <> extend:33[31:0[R0]] - 2
000004c5: CF := pad:33[#6 + 1] <> pad:33[31:0[R0]] + 0xFFFFFFFE
000004c9: ZF := #6 + 1 = 0
000004cd: NF := 31:31[#6 + 1]
000004d2: R1 := 0
000004d7: R0 := 0
000004dd: R1 := R1 + 0x7C0
000004e3: R0 := R0 + 0x7A0
000004f1: when ZF <> 1 goto %000004e9
000004f2: goto %000004ed

000004ed:
000004ee: R0 := R1
000004f4: goto %000004f0

000004e9:
000004ea: R0 := R0
000004f3: goto %000004f0

000004f0:
00000784: goto %0000026b

0000026b:
00000271: R30 := 0x62C
00000274: call R0 with return %00000276

00000276:
00000279: R0 := 0
00000280: R29 := mem[R31, el]:u64
00000285: R30 := mem[R31 + 8, el]:u64
00000289: R31 := R31 + 0x10
0000028e: call R30 with noreturn

00000760: sub register_tm_clones(register_tm_clones_result)
00000798: register_tm_clones_result :: out u32 = low:32[R0]

00000356:
00000359: R0 := 0x11000
0000035f: R0 := R0 + 0x10
00000364: R1 := 0x11000
0000036a: R1 := R1 + 0x10
00000371: R1 := R1 + ~R0 + 1
00000377: R2 := 0.63:63[R1]
0000037e: R1 := R2 + (R1 ~>> 3)
00000384: R1 := extend:64[63:1[R1]]
0000038a: when R1 = 0 goto %00000388
00000785: goto %00000476

00000476:
00000479: R2 := 0x10000
00000480: R2 := mem[R2 + 0xFF8, el]:u64
00000485: when R2 = 0 goto %00000388
00000786: goto %00000489

00000388:
00000390: call R30 with noreturn

00000489:
0000048d: R16 := R2
00000492: call R16 with noreturn

00000763: sub set_seven(set_seven_result)
00000799: set_seven_result :: out u32 = low:32[R0]

00000424:
00000427: R0 := 0x11000
0000042c: R1 := 7
00000434: mem := mem with [R0 + 0x14, el]:u32 <- 31:0[R1]
00000439: call R30 with noreturn

00000764: sub set_six(set_six_result)
0000079a: set_six_result :: out u32 = low:32[R0]

0000040d:
00000410: R0 := 0x11000
00000415: R1 := 6
0000041d: mem := mem with [R0 + 0x14, el]:u32 <- 31:0[R1]
00000422: call R30 with noreturn

00000765: sub set_two(set_two_result)
0000079b: set_two_result :: out u32 = low:32[R0]

000003f6:
000003f9: R0 := 0x11000
000003fe: R1 := 2
00000406: mem := mem with [R0 + 0x14, el]:u32 <- 31:0[R1]
0000040b: call R30 with noreturn
