000199a1: program
00019752: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
000199a2: __do_global_dtors_aux_result :: out u32 = low:32[R0]

00017436:
0001743a: #344 := R31 - 0x20
00017440: mem := mem with [#344, el]:u64 <- R29
00017446: mem := mem with [#344 + 8, el]:u64 <- R30
0001744a: R31 := #344
00017450: R29 := R31
00017458: mem := mem with [R31 + 0x10, el]:u64 <- R19
0001745d: R19 := 0x423000
00017464: R0 := pad:64[mem[R19 + 0x4F0]]
0001746a: when 0:0[R0] goto %00017468
00019753: goto %0001748d

0001748d:
00017490: R30 := 0x40086C
00017492: call @deregister_tm_clones with return %00017494

00017494:
00017497: R0 := 1
0001749f: mem := mem with [R19 + 0x4F0] <- 7:0[R0]
00019754: goto %00017468

00017468:
00017472: R19 := mem[R31 + 0x10, el]:u64
00017479: R29 := mem[R31, el]:u64
0001747e: R30 := mem[R31 + 8, el]:u64
00017482: R31 := R31 + 0x20
00017487: call R30 with noreturn

00019755: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
000199a3: __libc_start_main_main :: in u64 = R0
000199a4: __libc_start_main_arg2 :: in u32 = low:32[R1]
000199a5: __libc_start_main_arg3 :: in out u64 = R2
000199a6: __libc_start_main_auxv :: in out u64 = R3
000199a7: __libc_start_main_result :: out u32 = low:32[R0]

000083ef:
000175b5: R16 := 0x420000
000175bc: R17 := mem[R16 + 8, el]:u64
000175c2: R16 := R16 + 8
000175c7: call R17 with noreturn

00019756: sub _dl_relocate_static_pie(_dl_relocate_static_pie_result)
000199a8: _dl_relocate_static_pie_result :: out u32 = low:32[R0]

00017396:
00017399: call R30 with noreturn

00019757: sub _fini(_fini_result)
000199a9: _fini_result :: out u32 = low:32[R0]

00000020:
00000026: #0 := R31 - 0x10
0000002c: mem := mem with [#0, el]:u64 <- R29
00000032: mem := mem with [#0 + 8, el]:u64 <- R30
00000036: R31 := #0
0000003c: R29 := R31
00000043: R29 := mem[R31, el]:u64
00000048: R30 := mem[R31 + 8, el]:u64
0000004c: R31 := R31 + 0x10
00000051: call R30 with noreturn

00019758: sub _init(_init_result)
000199aa: _init_result :: out u32 = low:32[R0]

0001763b:
00017641: #346 := R31 - 0x10
00017647: mem := mem with [#346, el]:u64 <- R29
0001764d: mem := mem with [#346 + 8, el]:u64 <- R30
00017651: R31 := #346
00017657: R29 := R31
0001765c: R30 := 0x4006C0
0001765e: call @call_weak_fn with return %00017660

00017660:
00017665: R29 := mem[R31, el]:u64
0001766a: R30 := mem[R31 + 8, el]:u64
0001766e: R31 := R31 + 0x10
00017673: call R30 with noreturn

00019759: sub _start(_start_result)
000199ab: _start_result :: out u32 = low:32[R0]

000083b1:
000083b6: R29 := 0
000083bb: R30 := 0
000083c1: R5 := R0
000083c8: R1 := mem[R31, el]:u64
000083ce: R2 := R31 + 8
000083d4: R6 := R31
000083d9: R0 := 0x400000
000083df: R0 := R0 + 0x7B4
000083e4: R3 := 0
000083e9: R4 := 0
000083ee: R30 := 0x4007B0
000083f1: call @__libc_start_main with return %000083f3

000083f3:
000083f6: R30 := 0x4007B4
000083f9: call @abort with return %000083fb

000083fb:
00008400: call @main with noreturn

0001975a: sub abort()


000083f7:
000175e1: R16 := 0x420000
000175e8: R17 := mem[R16 + 0x18, el]:u64
000175ee: R16 := R16 + 0x18
000175f3: call R17 with noreturn

0001975b: sub call_weak_fn(call_weak_fn_result)
000199ac: call_weak_fn_result :: out u32 = low:32[R0]

0001739b:
0001739e: R0 := 0x41F000
000173a5: R0 := mem[R0 + 0xFD8, el]:u64
000173ab: when R0 = 0 goto %000173a9
0001975c: goto %000174dd

000173a9:
000173b1: call R30 with noreturn

000174dd:
000174e0: goto @__gmon_start__

000174de:
000175cb: R16 := 0x420000
000175d2: R17 := mem[R16 + 0x10, el]:u64
000175d8: R16 := R16 + 0x10
000175dd: call R17 with noreturn

0001975d: sub crc32_8bytes(crc32_8bytes_result)
000199ad: crc32_8bytes_result :: out u32 = low:32[R0]

0000a193:
0000a197: #17 := R31 - 0x20
0000a19d: mem := mem with [#17, el]:u64 <- R29
0000a1a3: mem := mem with [#17 + 8, el]:u64 <- R30
0000a1a7: R31 := #17
0000a1ad: R29 := R31
0000a1b5: mem := mem with [R31 + 0x18, el]:u64 <- R0
0000a1bc: R0 := mem[R31 + 0x18, el]:u64
0000a1c2: R0 := pad:64[7:0[R0]]
0000a1c7: R30 := 0x402374
0000a1c9: call @crc32_byte with return %0000a1cb

0000a1cb:
0000a1d0: R0 := mem[R31 + 0x18, el]:u64
0000a1d6: R0 := pad:64[63:8[R0]]
0000a1dc: R0 := pad:64[7:0[R0]]
0000a1e1: R30 := 0x402384
0000a1e3: call @crc32_byte with return %0000a1e5

0000a1e5:
0000a1ea: R0 := mem[R31 + 0x18, el]:u64
0000a1f0: R0 := pad:64[63:16[R0]]
0000a1f6: R0 := pad:64[7:0[R0]]
0000a1fb: R30 := 0x402394
0000a1fd: call @crc32_byte with return %0000a1ff

0000a1ff:
0000a204: R0 := mem[R31 + 0x18, el]:u64
0000a20a: R0 := pad:64[63:24[R0]]
0000a210: R0 := pad:64[7:0[R0]]
0000a215: R30 := 0x4023A4
0000a217: call @crc32_byte with return %0000a219

0000a219:
0000a21e: R0 := mem[R31 + 0x18, el]:u64
0000a224: R0 := pad:64[63:32[R0]]
0000a22a: R0 := pad:64[7:0[R0]]
0000a22f: R30 := 0x4023B4
0000a231: call @crc32_byte with return %0000a233

0000a233:
0000a238: R0 := mem[R31 + 0x18, el]:u64
0000a23e: R0 := pad:64[63:40[R0]]
0000a244: R0 := pad:64[7:0[R0]]
0000a249: R30 := 0x4023C4
0000a24b: call @crc32_byte with return %0000a24d

0000a24d:
0000a252: R0 := mem[R31 + 0x18, el]:u64
0000a258: R0 := pad:64[63:48[R0]]
0000a25e: R0 := pad:64[7:0[R0]]
0000a263: R30 := 0x4023D4
0000a265: call @crc32_byte with return %0000a267

0000a267:
0000a26c: R0 := mem[R31 + 0x18, el]:u64
0000a272: R0 := pad:64[63:56[R0]]
0000a278: R0 := pad:64[7:0[R0]]
0000a27d: R30 := 0x4023E4
0000a27f: call @crc32_byte with return %0000a281

0000a281:
0000a288: R29 := mem[R31, el]:u64
0000a28d: R30 := mem[R31 + 8, el]:u64
0000a291: R31 := R31 + 0x20
0000a296: call R30 with noreturn

0001975e: sub crc32_byte(crc32_byte_result)
000199ae: crc32_byte_result :: out u32 = low:32[R0]

0000a107:
0000a10b: R31 := R31 - 0x10
0000a113: mem := mem with [R31 + 0xF] <- 7:0[R0]
0000a118: R0 := 0x420000
0000a11e: R0 := R0 + 0x40
0000a125: R0 := pad:64[mem[R0, el]:u32]
0000a12b: R1 := pad:64[31:8[R0]]
0000a132: R2 := pad:64[mem[R31 + 0xF]]
0000a137: R0 := 0x420000
0000a13d: R0 := R0 + 0x40
0000a144: R0 := pad:64[mem[R0, el]:u32]
0000a14b: R0 := pad:64[31:0[R2] ^ 31:0[R0]]
0000a151: R2 := pad:64[7:0[R0]]
0000a156: R0 := 0x423000
0000a15c: R0 := R0 + 0x4F8
0000a162: R2 := pad:64[31:0[R2]]
0000a16a: R0 := pad:64[mem[R0 + (61:0[R2].0), el]:u32]
0000a171: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0000a176: R0 := 0x420000
0000a17c: R0 := R0 + 0x40
0000a184: mem := mem with [R0, el]:u32 <- 31:0[R1]
0000a18c: R31 := R31 + 0x10
0000a191: call R30 with noreturn

0001975f: sub crc32_gentab(crc32_gentab_result)
000199af: crc32_gentab_result :: out u32 = low:32[R0]

00009fc0:
00009fc4: R31 := R31 - 0x10
00009fc9: R0 := 0x8320
00009fcf: R0 := pad:64[0xEDB8.15:0[R0]]
00009fd7: mem := mem with [R31, el]:u32 <- 31:0[R0]
00009fde: mem := mem with [R31 + 8, el]:u32 <- 0
00009fe3: goto %00009fe1

00009fe1:
00009fe9: R0 := pad:64[mem[R31 + 8, el]:u32]
00009fef: #16 := 31:0[R0] - 0xFF
00009ff4: VF := extend:64[#16] <> extend:64[31:0[R0]] - 0xFF
00009ff9: CF := pad:64[#16] <> pad:64[31:0[R0]] + 0xFFFFFF01
00009ffd: ZF := #16 = 0
0000a001: NF := 31:31[#16]
0000a009: when ~(NF = VF & ~ZF) goto %0000a007
00019760: goto %0000a0f8

0000a0f8:
0000a100: R31 := R31 + 0x10
0000a105: call R30 with noreturn

0000a007:
0000a011: R0 := pad:64[mem[R31 + 8, el]:u32]
0000a019: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R0]
0000a01e: R0 := 8
0000a026: mem := mem with [R31 + 4, el]:u32 <- 31:0[R0]
0000a02b: goto %0000a029

0000a029:
0000a031: R0 := pad:64[mem[R31 + 4, el]:u32]
0000a036: VF := 0
0000a039: CF := 1
0000a03d: ZF := 31:0[R0] = 0
0000a041: NF := 31:31[R0]
0000a049: when NF = VF & ~ZF goto %0000a047
00019761: goto %0000a0c1

0000a0c1:
0000a0c4: R0 := 0x423000
0000a0ca: R0 := R0 + 0x4F8
0000a0d1: R1 := extend:64[mem[R31 + 8, el]:u32]
0000a0d8: R2 := pad:64[mem[R31 + 0xC, el]:u32]
0000a0e1: mem := mem with [R0 + (61:0[R1].0), el]:u32 <- 31:0[R2]
0000a0e8: R0 := pad:64[mem[R31 + 8, el]:u32]
0000a0ee: R0 := pad:64[31:0[R0] + 1]
0000a0f6: mem := mem with [R31 + 8, el]:u32 <- 31:0[R0]
00019762: goto %00009fe1

0000a047:
0000a051: R0 := pad:64[mem[R31 + 0xC, el]:u32]
0000a057: R0 := pad:64[0:0[R0]]
0000a05c: VF := 0
0000a05f: CF := 1
0000a063: ZF := 31:0[R0] = 0
0000a067: NF := 31:31[R0]
0000a06d: when ZF goto %0000a06b
00019763: goto %0000a09a

0000a06b:
0000a075: R0 := pad:64[mem[R31 + 0xC, el]:u32]
0000a07b: R0 := pad:64[31:1[R0]]
0000a083: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R0]
00019764: goto %0000a085

0000a09a:
0000a09f: R0 := pad:64[mem[R31 + 0xC, el]:u32]
0000a0a5: R0 := pad:64[31:1[R0]]
0000a0ac: R1 := pad:64[mem[R31, el]:u32]
0000a0b3: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0000a0bb: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R0]
0000a0bf: goto %0000a085

0000a085:
0000a08a: R0 := pad:64[mem[R31 + 4, el]:u32]
0000a090: R0 := pad:64[31:0[R0] - 1]
0000a098: mem := mem with [R31 + 4, el]:u32 <- 31:0[R0]
00019765: goto %0000a029

00019766: sub deregister_tm_clones(deregister_tm_clones_result)
000199b0: deregister_tm_clones_result :: out u32 = low:32[R0]

000173b7:
000173ba: R0 := 0x423000
000173c0: R0 := R0 + 0x4F0
000173c5: R1 := 0x423000
000173cb: R1 := R1 + 0x4F0
000173d1: #342 := ~R0
000173d6: #343 := R1 + ~R0
000173dc: VF := extend:128[#343 + 1] <> extend:128[R1] + extend:128[#342] + 1
000173e2: CF := pad:128[#343 + 1] <> pad:128[R1] + pad:128[#342] + 1
000173e6: ZF := #343 + 1 = 0
000173ea: NF := 63:63[#343 + 1]
000173f0: when ZF goto %000173ee
00019767: goto %000174bf

000174bf:
000174c2: R1 := 0x41F000
000174c9: R1 := mem[R1 + 0xFD0, el]:u64
000174ce: when R1 = 0 goto %000173ee
00019768: goto %000174d2

000173ee:
000173f6: call R30 with noreturn

000174d2:
000174d6: R16 := R1
000174db: call R16 with noreturn

00019769: sub frame_dummy(frame_dummy_result)
000199b1: frame_dummy_result :: out u32 = low:32[R0]

00017489:
0001748b: call @register_tm_clones with noreturn

0001976a: sub func_1(func_1_result)
000199b2: func_1_result :: out u32 = low:32[R0]

0000a3f8:
0000a3fc: R31 := R31 - 0xE20
0000a404: mem := mem with [R31, el]:u64 <- R29
0000a40a: mem := mem with [R31 + 8, el]:u64 <- R30
0000a410: R29 := R31
0000a418: mem := mem with [R31 + 0x10, el]:u64 <- R19
0000a41d: R0 := 0x420000
0000a423: R1 := R0 + 0x720
0000a429: R0 := R31 + 0xC58
0000a430: V0 := mem[R1, el]:u128
0000a435: V1 := mem[R1 + 0x10, el]:u128
0000a43d: mem := mem with [R0, el]:u128 <- V0
0000a443: mem := mem with [R0 + 0x10, el]:u128 <- V1
0000a44a: V0 := mem[R1 + 0x20, el]:u128
0000a452: mem := mem with [R0 + 0x20, el]:u128 <- V0
0000a457: R0 := 0x420000
0000a45d: R0 := R0 + 0x230
0000a465: mem := mem with [R31 + 0xE08, el]:u64 <- R0
0000a46c: mem := mem with [R31 + 0xC50, el]:u64 <- 0
0000a471: R0 := 0x5AA3
0000a479: mem := mem with [R31 + 0xC4E, el]:u16 <- 15:0[R0]
0000a47e: R0 := 0x420000
0000a484: R0 := R0 + 0x90
0000a48c: mem := mem with [R31 + 0xC40, el]:u64 <- R0
0000a492: R0 := R31 + 0xC40
0000a49a: mem := mem with [R31 + 0xE00, el]:u64 <- R0
0000a49f: R0 := 0xFFFFFFFB
0000a4a7: mem := mem with [R31 + 0xC30, el]:u16 <- 15:0[R0]
0000a4ac: R0 := 0xFFFFFFFB
0000a4b4: mem := mem with [R31 + 0xC32, el]:u16 <- 15:0[R0]
0000a4b9: R0 := 0xFFFFFFFB
0000a4c1: mem := mem with [R31 + 0xC34, el]:u16 <- 15:0[R0]
0000a4c6: R0 := 0xFFFFFFFB
0000a4ce: mem := mem with [R31 + 0xC36, el]:u16 <- 15:0[R0]
0000a4d3: R0 := 0xFFFFFFFB
0000a4db: mem := mem with [R31 + 0xC38, el]:u16 <- 15:0[R0]
0000a4e0: R0 := 0xFFFFFFFB
0000a4e8: mem := mem with [R31 + 0xC3A, el]:u16 <- 15:0[R0]
0000a4ed: R0 := 0xFFFFFFFB
0000a4f5: mem := mem with [R31 + 0xC3C, el]:u16 <- 15:0[R0]
0000a4fa: R0 := 0xFFFFFFFB
0000a502: mem := mem with [R31 + 0xC3E, el]:u16 <- 15:0[R0]
0000a507: R0 := 0xFFFFFFF7
0000a50f: mem := mem with [R31 + 0xDFE, el]:u16 <- 15:0[R0]
0000a514: R0 := 0x421000
0000a51a: R0 := R0 + 0xFF8
0000a522: mem := mem with [R31 + 0xDF0, el]:u64 <- R0
0000a527: R0 := 0x2E
0000a52f: mem := mem with [R31 + 0xE1F] <- 7:0[R0]
0000a535: R0 := R31 + 0xC30
0000a53b: R0 := R0 + 0xE
0000a543: mem := mem with [R31 + 0xA80, el]:u64 <- R0
0000a549: R0 := R31 + 0xC30
0000a54f: R0 := R0 + 0xE
0000a557: mem := mem with [R31 + 0xA88, el]:u64 <- R0
0000a55d: R0 := R31 + 0xC30
0000a563: R0 := R0 + 0xE
0000a56b: mem := mem with [R31 + 0xA90, el]:u64 <- R0
0000a570: R0 := 0x420000
0000a576: R0 := R0 + 0xB0
0000a57e: mem := mem with [R31 + 0xA98, el]:u64 <- R0
0000a585: mem := mem with [R31 + 0xAA0, el]:u64 <- 0
0000a58a: R0 := 0x420000
0000a590: R0 := R0 + 0x84
0000a598: mem := mem with [R31 + 0xAA8, el]:u64 <- R0
0000a59e: R0 := R31 + 0xC4E
0000a5a6: mem := mem with [R31 + 0xAB0, el]:u64 <- R0
0000a5ac: R0 := R31 + 0xC30
0000a5b2: R0 := R0 + 0xE
0000a5ba: mem := mem with [R31 + 0xAB8, el]:u64 <- R0
0000a5bf: R0 := 0x420000
0000a5c5: R0 := R0 + 0x668
0000a5cd: mem := mem with [R31 + 0xAC0, el]:u64 <- R0
0000a5d2: R0 := 0x420000
0000a5d8: R0 := R0 + 0x668
0000a5e0: mem := mem with [R31 + 0xAC8, el]:u64 <- R0
0000a5e5: R0 := 0x420000
0000a5eb: R0 := R0 + 0x668
0000a5f3: mem := mem with [R31 + 0xAD0, el]:u64 <- R0
0000a5f9: R0 := R31 + 0xC30
0000a5ff: R0 := R0 + 0xE
0000a607: mem := mem with [R31 + 0xAD8, el]:u64 <- R0
0000a60d: R0 := R31 + 0xC30
0000a613: R0 := R0 + 0xE
0000a61b: mem := mem with [R31 + 0xAE0, el]:u64 <- R0
0000a620: R0 := 0x420000
0000a626: R0 := R0 + 0x84
0000a62e: mem := mem with [R31 + 0xAE8, el]:u64 <- R0
0000a633: R0 := 0x420000
0000a639: R0 := R0 + 0x84
0000a641: mem := mem with [R31 + 0xAF0, el]:u64 <- R0
0000a647: R0 := R31 + 0xC30
0000a64d: R0 := R0 + 4
0000a655: mem := mem with [R31 + 0xAF8, el]:u64 <- R0
0000a65b: R0 := R31 + 0xC30
0000a661: R0 := R0 + 8
0000a669: mem := mem with [R31 + 0xB00, el]:u64 <- R0
0000a66f: R0 := R31 + 0xC30
0000a675: R0 := R0 + 0xE
0000a67d: mem := mem with [R31 + 0xB08, el]:u64 <- R0
0000a683: R0 := R31 + 0xC30
0000a689: R0 := R0 + 2
0000a691: mem := mem with [R31 + 0xB10, el]:u64 <- R0
0000a696: R0 := 0x420000
0000a69c: R0 := R0 + 0xB0
0000a6a4: mem := mem with [R31 + 0xB18, el]:u64 <- R0
0000a6aa: R0 := R31 + 0xC30
0000a6b0: R0 := R0 + 2
0000a6b8: mem := mem with [R31 + 0xB20, el]:u64 <- R0
0000a6bf: mem := mem with [R31 + 0xB28, el]:u64 <- 0
0000a6c5: R0 := R31 + 0xC30
0000a6cb: R0 := R0 + 0xE
0000a6d3: mem := mem with [R31 + 0xB30, el]:u64 <- R0
0000a6d9: R0 := R31 + 0xC4E
0000a6e1: mem := mem with [R31 + 0xB38, el]:u64 <- R0
0000a6e6: R0 := 0x420000
0000a6ec: R0 := R0 + 0xB0
0000a6f4: mem := mem with [R31 + 0xB40, el]:u64 <- R0
0000a6f9: R0 := 0x420000
0000a6ff: R0 := R0 + 0xB0
0000a707: mem := mem with [R31 + 0xB48, el]:u64 <- R0
0000a70d: R0 := R31 + 0xC30
0000a713: R0 := R0 + 0xE
0000a71b: mem := mem with [R31 + 0xB50, el]:u64 <- R0
0000a721: R0 := R31 + 0xC30
0000a727: R0 := R0 + 0xE
0000a72f: mem := mem with [R31 + 0xB58, el]:u64 <- R0
0000a735: R0 := R31 + 0xC30
0000a73b: R0 := R0 + 8
0000a743: mem := mem with [R31 + 0xB60, el]:u64 <- R0
0000a74a: mem := mem with [R31 + 0xB68, el]:u64 <- 0
0000a74f: R0 := 0x420000
0000a755: R0 := R0 + 0x84
0000a75d: mem := mem with [R31 + 0xB70, el]:u64 <- R0
0000a762: R0 := 0x420000
0000a768: R0 := R0 + 0x84
0000a770: mem := mem with [R31 + 0xB78, el]:u64 <- R0
0000a776: R0 := R31 + 0xC30
0000a77c: R0 := R0 + 0xE
0000a784: mem := mem with [R31 + 0xB80, el]:u64 <- R0
0000a789: R0 := 0x420000
0000a78f: R0 := R0 + 0x668
0000a797: mem := mem with [R31 + 0xB88, el]:u64 <- R0
0000a79c: R0 := 0x420000
0000a7a2: R0 := R0 + 0x668
0000a7aa: mem := mem with [R31 + 0xB90, el]:u64 <- R0
0000a7b0: R0 := R31 + 0xC30
0000a7b6: R0 := R0 + 0xE
0000a7be: mem := mem with [R31 + 0xB98, el]:u64 <- R0
0000a7c4: R0 := R31 + 0xC30
0000a7ca: R0 := R0 + 0xE
0000a7d2: mem := mem with [R31 + 0xBA0, el]:u64 <- R0
0000a7d8: R0 := R31 + 0xC30
0000a7de: R0 := R0 + 0xE
0000a7e6: mem := mem with [R31 + 0xBA8, el]:u64 <- R0
0000a7ec: R0 := R31 + 0xC30
0000a7f2: R0 := R0 + 0xE
0000a7fa: mem := mem with [R31 + 0xBB0, el]:u64 <- R0
0000a7ff: R0 := 0x420000
0000a805: R0 := R0 + 0x84
0000a80d: mem := mem with [R31 + 0xBB8, el]:u64 <- R0
0000a814: mem := mem with [R31 + 0xBC0, el]:u64 <- 0
0000a81b: mem := mem with [R31 + 0xBC8, el]:u64 <- 0
0000a821: R0 := R31 + 0xC30
0000a827: R0 := R0 + 0xE
0000a82f: mem := mem with [R31 + 0xBD0, el]:u64 <- R0
0000a835: R0 := R31 + 0xC30
0000a83b: R0 := R0 + 0xE
0000a843: mem := mem with [R31 + 0xBD8, el]:u64 <- R0
0000a84a: mem := mem with [R31 + 0xBE0, el]:u64 <- 0
0000a850: R0 := R31 + 0xC30
0000a856: R0 := R0 + 2
0000a85e: mem := mem with [R31 + 0xBE8, el]:u64 <- R0
0000a865: mem := mem with [R31 + 0xBF0, el]:u64 <- 0
0000a86b: R0 := R31 + 0xC30
0000a871: R0 := R0 + 0xE
0000a879: mem := mem with [R31 + 0xBF8, el]:u64 <- R0
0000a87f: R0 := R31 + 0xC4E
0000a887: mem := mem with [R31 + 0xC00, el]:u64 <- R0
0000a88d: R0 := R31 + 0xC30
0000a893: R0 := R0 + 0xE
0000a89b: mem := mem with [R31 + 0xC08, el]:u64 <- R0
0000a8a2: mem := mem with [R31 + 0xC10, el]:u64 <- 0
0000a8a8: R0 := R31 + 0xC30
0000a8ae: R0 := R0 + 0xE
0000a8b6: mem := mem with [R31 + 0xC18, el]:u64 <- R0
0000a8bc: R0 := R31 + 0xC30
0000a8c2: R0 := R0 + 0xE
0000a8ca: mem := mem with [R31 + 0xC20, el]:u64 <- R0
0000a8d1: mem := mem with [R31 + 0xC28, el]:u64 <- 0
0000a8d7: R0 := R31 + 0xA80
0000a8dd: R0 := R0 + 0x38
0000a8e5: mem := mem with [R31 + 0xA48, el]:u64 <- R0
0000a8eb: R0 := R31 + 0xA80
0000a8f1: R0 := R0 + 0x38
0000a8f9: mem := mem with [R31 + 0xA50, el]:u64 <- R0
0000a8ff: R0 := R31 + 0xA80
0000a905: R0 := R0 + 0x50
0000a90d: mem := mem with [R31 + 0xA58, el]:u64 <- R0
0000a913: R0 := R31 + 0xA80
0000a919: R0 := R0 + 0x38
0000a921: mem := mem with [R31 + 0xA60, el]:u64 <- R0
0000a927: R0 := R31 + 0xA80
0000a92d: R0 := R0 + 0x38
0000a935: mem := mem with [R31 + 0xA68, el]:u64 <- R0
0000a93b: R0 := R31 + 0xA80
0000a941: R0 := R0 + 0x50
0000a949: mem := mem with [R31 + 0xA70, el]:u64 <- R0
0000a94f: R0 := R31 + 0xA80
0000a955: R0 := R0 + 0x38
0000a95d: mem := mem with [R31 + 0xA78, el]:u64 <- R0
0000a962: R0 := 0x421000
0000a968: R0 := R0 + 0xFC8
0000a970: mem := mem with [R31 + 0xDE8, el]:u64 <- R0
0000a975: R0 := 0xFFFFFFFF
0000a97d: mem := mem with [R31 + 0xA44, el]:u32 <- 31:0[R0]
0000a982: R0 := 0xE1DA
0000a988: R0 := pad:64[0xCBEA.15:0[R0]]
0000a990: mem := mem with [R31 + 0xDE4, el]:u32 <- 31:0[R0]
0000a997: mem := mem with [R31 + 0xDD8, el]:u64 <- 0
0000a99c: R0 := 1
0000a9a4: mem := mem with [R31 + 0xDD0, el]:u64 <- R0
0000a9a9: R0 := 0x421000
0000a9af: R0 := R0 + 0xF78
0000a9b7: mem := mem with [R31 + 0xA38, el]:u64 <- R0
0000a9bd: R0 := R31 + 0xA38
0000a9c5: mem := mem with [R31 + 0xDC8, el]:u64 <- R0
0000a9ca: R0 := 0x408000
0000a9d0: R1 := R0 + 0xB98
0000a9d6: R0 := R31 + 0x9E8
0000a9dd: V0 := mem[R1, el]:u128
0000a9e2: V1 := mem[R1 + 0x10, el]:u128
0000a9ea: mem := mem with [R0, el]:u128 <- V0
0000a9f0: mem := mem with [R0 + 0x10, el]:u128 <- V1
0000a9f6: #22 := R1 + 0x20
0000a9fb: V0 := mem[#22, el]:u128
0000aa00: V1 := mem[#22 + 0x10, el]:u128
0000aa06: #23 := R0 + 0x20
0000aa0c: mem := mem with [#23, el]:u128 <- V0
0000aa12: mem := mem with [#23 + 0x10, el]:u128 <- V1
0000aa19: V0 := mem[R1 + 0x40, el]:u128
0000aa21: mem := mem with [R0 + 0x40, el]:u128 <- V0
0000aa26: R0 := 0x421000
0000aa2c: R0 := R0 + 0x7A0
0000aa34: mem := mem with [R31 + 0xDC0, el]:u64 <- R0
0000aa39: R0 := 0x408000
0000aa3f: R1 := R0 + 0xBE8
0000aa45: R0 := R31 + 0x9C0
0000aa4c: V0 := mem[R1, el]:u128
0000aa51: V1 := mem[R1 + 0x10, el]:u128
0000aa59: mem := mem with [R0, el]:u128 <- V0
0000aa5f: mem := mem with [R0 + 0x10, el]:u128 <- V1
0000aa66: R1 := pad:64[mem[R1 + 0x20, el]:u32]
0000aa6e: mem := mem with [R0 + 0x20, el]:u32 <- 31:0[R1]
0000aa75: mem := mem with [R31 + 0xDB8, el]:u64 <- 0
0000aa7a: R0 := 0xFFFFFFFD
0000aa82: mem := mem with [R31 + 0xDB4, el]:u32 <- 31:0[R0]
0000aa87: R0 := 0x420000
0000aa8d: R0 := R0 + 0x44
0000aa94: R0 := pad:64[extend:32[mem[R0]]]
0000aa9a: R1 := pad:64[31:0[R0]]
0000aa9f: R0 := 0x420000
0000aaa5: R0 := R0 + 0x48
0000aaad: mem := mem with [R0, el]:u32 <- 31:0[R1]
0000aab2: R0 := 0x420000
0000aab8: R0 := R0 + 0x48
0000aabf: R0 := pad:64[mem[R0, el]:u32]
0000aac4: VF := 0
0000aac7: CF := 1
0000aacb: ZF := 31:0[R0] = 0
0000aacf: NF := 31:31[R0]
0000aad5: when ZF goto %0000aad3
0001976b: goto %00012539

0000aad3:
0000aadb: R0 := 9
0000aae3: mem := mem with [R31 + 0xDB3] <- 7:0[R0]
0000aae8: R0 := 0x3E
0000aaf0: mem := mem with [R31 + 0x997] <- 7:0[R0]
0000aaf5: R0 := 0xD4E5
0000aafb: R0 := pad:64[0x4BA7.15:0[R0]]
0000ab03: mem := mem with [R31 + 0xDAC, el]:u32 <- 31:0[R0]
0000ab08: R0 := 0x420000
0000ab0e: R0 := R0 + 0x668
0000ab16: mem := mem with [R31 + 0x28, el]:u64 <- R0
0000ab1b: R0 := 0x420000
0000ab21: R0 := R0 + 0xB0
0000ab29: mem := mem with [R31 + 0x30, el]:u64 <- R0
0000ab2e: R0 := 0x420000
0000ab34: R0 := R0 + 0x714
0000ab3c: mem := mem with [R31 + 0x38, el]:u64 <- R0
0000ab43: mem := mem with [R31 + 0x40, el]:u64 <- 0
0000ab49: R0 := R31 + 0xC30
0000ab4f: R0 := R0 + 4
0000ab57: mem := mem with [R31 + 0x48, el]:u64 <- R0
0000ab5c: R0 := 0x420000
0000ab62: R0 := R0 + 0x6F2
0000ab6a: mem := mem with [R31 + 0x50, el]:u64 <- R0
0000ab6f: R0 := 0x420000
0000ab75: R0 := R0 + 0x6F2
0000ab7d: mem := mem with [R31 + 0x58, el]:u64 <- R0
0000ab82: R0 := 0x420000
0000ab88: R0 := R0 + 0x6F2
0000ab90: mem := mem with [R31 + 0x60, el]:u64 <- R0
0000ab95: R0 := 0x420000
0000ab9b: R0 := R0 + 0x668
0000aba3: mem := mem with [R31 + 0x68, el]:u64 <- R0
0000aba8: R0 := 0x420000
0000abae: R0 := R0 + 0x6F2
0000abb6: mem := mem with [R31 + 0x70, el]:u64 <- R0
0000abbb: R0 := 0x420000
0000abc1: R0 := R0 + 0x6F2
0000abc9: mem := mem with [R31 + 0x78, el]:u64 <- R0
0000abce: R0 := 0x420000
0000abd4: R0 := R0 + 0xB0
0000abdc: mem := mem with [R31 + 0x80, el]:u64 <- R0
0000abe1: R0 := 0x420000
0000abe7: R0 := R0 + 0x6F2
0000abef: mem := mem with [R31 + 0x88, el]:u64 <- R0
0000abf4: R0 := 0x420000
0000abfa: R0 := R0 + 0x668
0000ac02: mem := mem with [R31 + 0x90, el]:u64 <- R0
0000ac07: R0 := 0x420000
0000ac0d: R0 := R0 + 0x6F2
0000ac15: mem := mem with [R31 + 0x98, el]:u64 <- R0
0000ac1c: mem := mem with [R31 + 0xA0, el]:u64 <- 0
0000ac23: mem := mem with [R31 + 0xA8, el]:u64 <- 0
0000ac2a: mem := mem with [R31 + 0xB0, el]:u64 <- 0
0000ac2f: R0 := 0x420000
0000ac35: R0 := R0 + 0x668
0000ac3d: mem := mem with [R31 + 0xB8, el]:u64 <- R0
0000ac43: R0 := R31 + 0xC30
0000ac49: R0 := R0 + 4
0000ac51: mem := mem with [R31 + 0xC0, el]:u64 <- R0
0000ac57: R0 := R31 + 0xC30
0000ac5d: R0 := R0 + 4
0000ac65: mem := mem with [R31 + 0xC8, el]:u64 <- R0
0000ac6a: R0 := 0x420000
0000ac70: R0 := R0 + 0x668
0000ac78: mem := mem with [R31 + 0xD0, el]:u64 <- R0
0000ac7d: R0 := 0x420000
0000ac83: R0 := R0 + 0x668
0000ac8b: mem := mem with [R31 + 0xD8, el]:u64 <- R0
0000ac92: mem := mem with [R31 + 0xE0, el]:u64 <- 0
0000ac97: R0 := 0x420000
0000ac9d: R0 := R0 + 0x714
0000aca5: mem := mem with [R31 + 0xE8, el]:u64 <- R0
0000acac: mem := mem with [R31 + 0xF0, el]:u64 <- 0
0000acb1: R0 := 0x420000
0000acb7: R0 := R0 + 0x6F2
0000acbf: mem := mem with [R31 + 0xF8, el]:u64 <- R0
0000acc4: R0 := 0x420000
0000acca: R0 := R0 + 0xB0
0000acd2: mem := mem with [R31 + 0x100, el]:u64 <- R0
0000acd9: mem := mem with [R31 + 0x108, el]:u64 <- 0
0000acde: R0 := 0x420000
0000ace4: R0 := R0 + 0xB0
0000acec: mem := mem with [R31 + 0x110, el]:u64 <- R0
0000acf1: R0 := 0x420000
0000acf7: R0 := R0 + 0x668
0000acff: mem := mem with [R31 + 0x118, el]:u64 <- R0
0000ad04: R0 := 0x420000
0000ad0a: R0 := R0 + 0x84
0000ad12: mem := mem with [R31 + 0x120, el]:u64 <- R0
0000ad17: R0 := 0x420000
0000ad1d: R0 := R0 + 0x668
0000ad25: mem := mem with [R31 + 0x128, el]:u64 <- R0
0000ad2a: R0 := 0x420000
0000ad30: R0 := R0 + 0x6F2
0000ad38: mem := mem with [R31 + 0x130, el]:u64 <- R0
0000ad3f: mem := mem with [R31 + 0x138, el]:u64 <- 0
0000ad44: R0 := 0x420000
0000ad4a: R0 := R0 + 0x6F2
0000ad52: mem := mem with [R31 + 0x140, el]:u64 <- R0
0000ad57: R0 := 0x420000
0000ad5d: R0 := R0 + 0x6F2
0000ad65: mem := mem with [R31 + 0x148, el]:u64 <- R0
0000ad6c: mem := mem with [R31 + 0x150, el]:u64 <- 0
0000ad71: R0 := 0x420000
0000ad77: R0 := R0 + 0x714
0000ad7f: mem := mem with [R31 + 0x158, el]:u64 <- R0
0000ad84: R0 := 0x420000
0000ad8a: R0 := R0 + 0x668
0000ad92: mem := mem with [R31 + 0x160, el]:u64 <- R0
0000ad97: R0 := 0x420000
0000ad9d: R0 := R0 + 0x668
0000ada5: mem := mem with [R31 + 0x168, el]:u64 <- R0
0000adaa: R0 := 0x420000
0000adb0: R0 := R0 + 0x714
0000adb8: mem := mem with [R31 + 0x170, el]:u64 <- R0
0000adbe: R0 := R31 + 0xC30
0000adc4: R0 := R0 + 4
0000adcc: mem := mem with [R31 + 0x178, el]:u64 <- R0
0000add2: R0 := R31 + 0xC30
0000add8: R0 := R0 + 4
0000ade0: mem := mem with [R31 + 0x180, el]:u64 <- R0
0000ade5: R0 := 0x420000
0000adeb: R0 := R0 + 0x668
0000adf3: mem := mem with [R31 + 0x188, el]:u64 <- R0
0000adf8: R0 := 0x420000
0000adfe: R0 := R0 + 0x668
0000ae06: mem := mem with [R31 + 0x190, el]:u64 <- R0
0000ae0d: mem := mem with [R31 + 0x198, el]:u64 <- 0
0000ae12: R0 := 0x420000
0000ae18: R0 := R0 + 0x6F2
0000ae20: mem := mem with [R31 + 0x1A0, el]:u64 <- R0
0000ae26: R0 := R31 + 0x28
0000ae2c: R0 := R0 + 0x178
0000ae34: mem := mem with [R31 + 0xDA0, el]:u64 <- R0
0000ae39: R0 := 0x421000
0000ae3f: R0 := R0 + 0x4F8
0000ae47: mem := mem with [R31 + 0xD98, el]:u64 <- R0
0000ae4c: R0 := 0x421000
0000ae52: R0 := R0 + 0x7A0
0000ae5a: mem := mem with [R31 + 0xD90, el]:u64 <- R0
0000ae5f: R0 := 8
0000ae67: mem := mem with [R31 + 0xD8F] <- 7:0[R0]
0000ae6c: R0 := 0x420000
0000ae72: R0 := R0 + 0x708
0000ae79: mem := mem with [R0, el]:u32 <- 0
0000ae7e: goto %0000ae7c

0000ae7c:
0000ae82: R0 := 0x420000
0000ae88: R0 := R0 + 0x708
0000ae8f: R0 := pad:64[mem[R0, el]:u32]
0000ae94: VF := 0
0000ae97: CF := 1
0000ae9b: ZF := 31:0[R0] = 0
0000ae9f: NF := 31:31[R0]
0000aea5: when ZF <> 1 goto %0000aea3
0001976c: goto %00011b54

00011b54:
00011b57: R0 := 0x421000
00011b5d: R0 := R0 + 0x780
00011b64: R0 := mem[R0, el]:u64
00011b6b: R0 := mem[R0, el]:u64
00011b72: R0 := mem[R31 + 0xDC0, el]:u64
00011b7a: mem := mem with [R31 + 0xD98, el]:u64 <- R0
00011b7f: R0 := 0x423000
00011b85: R0 := R0 + 0x4E0
00011b8c: R0 := mem[R0, el]:u64
00011b93: R1 := mem[R31 + 0xD98, el]:u64
00011b9b: mem := mem with [R0, el]:u64 <- R1
00011ba2: R0 := mem[R0, el]:u64
00011ba9: R1 := mem[R31 + 0xD90, el]:u64
00011baf: #193 := ~R0
00011bb4: #194 := R1 + ~R0
00011bba: VF := extend:128[#194 + 1] <> extend:128[R1] + extend:128[#193] + 1
00011bc0: CF := pad:128[#194 + 1] <> pad:128[R1] + pad:128[#193] + 1
00011bc4: ZF := #194 + 1 = 0
00011bc8: NF := 63:63[#194 + 1]
00011bcd: R0 := 0x422000
00011bd3: R0 := R0 + 0x768
00011bda: R1 := mem[R0, el]:u64
00011bdf: R0 := 0x422000
00011be5: R0 := R0 + 0x768
00011bec: R0 := mem[R0, el]:u64
00011bf3: R1 := mem[R1, el]:u64
00011bfb: mem := mem with [R0, el]:u64 <- R1
00011c02: R1 := mem[R31 + 0xA8, el]:u64
00011c09: R0 := mem[R31 + 0xDA0, el]:u64
00011c11: mem := mem with [R0, el]:u64 <- R1
00011c16: R2 := 0
00011c1b: R0 := 0x423000
00011c21: R0 := R0 + 0x4E8
00011c28: R0 := mem[R0, el]:u64
00011c2f: R0 := mem[R0, el]:u64
00011c36: R0 := mem[R0, el]:u64
00011c3c: R1 := pad:64[31:0[R0]]
00011c41: R0 := 0x422000
00011c47: R0 := R0 + 0x4E0
00011c4e: R0 := mem[R0, el]:u64
00011c55: R0 := mem[R0, el]:u64
00011c5c: R1 := pad:64[31:0[R2] | 31:0[R1]]
00011c64: mem := mem with [R0, el]:u32 <- 31:0[R1]
00011c6b: R0 := pad:64[mem[R0, el]:u32]
00011c71: R1 := pad:64[extend:32[7:0[R0]]]
00011c78: R0 := pad:64[extend:32[mem[R31 + 0xD8F]]]
00011c7f: R0 := pad:64[31:0[R1] & 31:0[R0]]
00011c85: R0 := pad:64[extend:32[7:0[R0]]]
00011c8d: mem := mem with [R31 + 0xD8F] <- 7:0[R0]
0001976d: goto %00011c8f

0000aea3:
0000aeab: R0 := 0xFFFFFFFF
0000aeb3: mem := mem with [R31 + 0xD8C, el]:u16 <- 15:0[R0]
0000aeb8: R0 := 5
0000aec0: mem := mem with [R31 + 0x996] <- 7:0[R0]
0000aec5: R0 := 0xFFFFFFFF
0000aecd: mem := mem with [R31 + 0xD8B] <- 7:0[R0]
0000aed2: R0 := 0xFFFFFFFC
0000aeda: mem := mem with [R31 + 0xE14, el]:u32 <- 31:0[R0]
0000aee1: mem := mem with [R31 + 0xE1F] <- 0
0000aee6: goto %0000aee4

0000aee4:
0000aeec: R0 := pad:64[extend:32[mem[R31 + 0xE1F]]]
0000aef2: #24 := 31:0[R0] - 5
0000aef7: VF := extend:64[#24] <> extend:64[31:0[R0]] - 5
0000aefc: CF := pad:64[#24] <> pad:64[31:0[R0]] + 0xFFFFFFFB
0000af00: ZF := #24 = 0
0000af04: NF := 31:31[#24]
0000af0c: when ~(NF = VF & ~ZF) goto %0000af0a
0001976e: goto %00011a75

00011a75:
00011a78: R0 := 0x420000
00011a7e: R0 := R0 + 0xC8
00011a85: mem := mem with [R0, el]:u32 <- 0
00011a8a: goto %00011a88

00011a88:
00011a8e: R0 := 0x420000
00011a94: R0 := R0 + 0xC8
00011a9b: R0 := pad:64[mem[R0, el]:u32]
00011aa1: #192 := 31:0[R0] - 8
00011aa6: VF := extend:64[#192] <> extend:64[31:0[R0]] - 8
00011aab: CF := pad:64[#192] <> pad:64[31:0[R0]] + 0xFFFFFFF8
00011aaf: ZF := #192 = 0
00011ab3: NF := 31:31[#192]
00011ab9: when ZF <> 1 goto %00011ab7
0001976f: goto %00011b29

00011b29:
00011b2c: R0 := 0x420000
00011b32: R0 := R0 + 0x708
00011b39: R0 := pad:64[mem[R0, el]:u32]
00011b3f: R1 := pad:64[31:0[R0] + 8]
00011b44: R0 := 0x420000
00011b4a: R0 := R0 + 0x708
00011b52: mem := mem with [R0, el]:u32 <- 31:0[R1]
00019770: goto %0000ae7c

00011ab7:
00011abf: R0 := 1
00011ac7: mem := mem with [R31 + 0xD80, el]:u64 <- R0
00011acc: R0 := 0x421000
00011ad2: R0 := R0 + 0x798
00011ad9: R0 := mem[R0, el]:u64
00011ae0: R0 := pad:64[mem[R0, el]:u32]
00011ae6: R0 := extend:64[31:0[R0]]
00011aed: R1 := mem[R31 + 0xD80, el]:u64
00011af4: R0 := R1 & R0
00011afc: mem := mem with [R31 + 0xD80, el]:u64 <- R0
00011b01: R0 := 0x420000
00011b07: R0 := R0 + 0xC8
00011b0e: R0 := pad:64[mem[R0, el]:u32]
00011b14: R1 := pad:64[31:0[R0] + 1]
00011b19: R0 := 0x420000
00011b1f: R0 := R0 + 0xC8
00011b27: mem := mem with [R0, el]:u32 <- 31:0[R1]
00019771: goto %00011a88

0000af0a:
0000af14: mem := mem with [R31 + 0xD78, el]:u64 <- 0
0000af19: R0 := 0x43DB
0000af1f: R0 := pad:64[0xBFF5.15:0[R0]]
0000af27: mem := mem with [R31 + 0xD74, el]:u32 <- 31:0[R0]
0000af2c: R0 := 0x421000
0000af32: R0 := R0 + 0xF48
0000af3a: mem := mem with [R31 + 0xD68, el]:u64 <- R0
0000af3f: R0 := 0xFFFFFFFF
0000af47: mem := mem with [R31 + 0xD64, el]:u32 <- 31:0[R0]
0000af4e: R1 := pad:64[extend:32[mem[R31 + 0xE1F]]]
0000af53: R0 := 0x421000
0000af59: R0 := R0 + 0xF80
0000af60: R0 := mem[R0, el]:u64
0000af67: R0 := mem[R0, el]:u64
0000af6d: R1 := extend:64[31:0[R1]]
0000af73: R1 := 60:0[R1].0
0000af79: R2 := R31 + 0xC58
0000af81: R1 := mem[R2 + R1, el]:u64
0000af89: mem := mem with [R0, el]:u64 <- R1
0000af90: R0 := mem[R31 + 0xD78, el]:u64
0000af95: VF := 0
0000af98: CF := 1
0000af9c: ZF := R0 = 0
0000afa0: NF := 63:63[R0]
0000afac: when ZF <> 1 goto %0000afa5
0000afad: goto %0000afa8

0000afa8:
0000afa9: R0 := 1
0000afaf: goto %0000afab

0000afa5:
0000afa6: R0 := 0
0000afae: goto %0000afab

0000afab:
0000afb5: R0 := pad:64[7:0[R0]]
0000afbb: R3 := pad:64[31:0[R0]]
0000afc2: R1 := pad:64[extend:32[mem[R31 + 0xDB3]]]
0000afc7: R0 := 0x423000
0000afcd: R0 := R0 + 0x4B0
0000afd4: R0 := mem[R0, el]:u64
0000afdb: R2 := mem[R0, el]:u64
0000afe0: R0 := 0x423000
0000afe6: R0 := R0 + 0x4D8
0000afed: R0 := mem[R0, el]:u64
0000aff4: R0 := mem[R0, el]:u64
0000affa: #25 := ~R0
0000afff: #26 := R2 + ~R0
0000b005: VF := extend:128[#26 + 1] <> extend:128[R2] + extend:128[#25] + 1
0000b00b: CF := pad:128[#26 + 1] <> pad:128[R2] + pad:128[#25] + 1
0000b00f: ZF := #26 + 1 = 0
0000b013: NF := 63:63[#26 + 1]
0000b01f: when ZF goto %0000b018
0000b020: goto %0000b01b

0000b01b:
0000b01c: R0 := 1
0000b022: goto %0000b01e

0000b018:
0000b019: R0 := 0
0000b021: goto %0000b01e

0000b01e:
0000b028: R0 := pad:64[7:0[R0]]
0000b02e: R2 := pad:64[31:0[R0]]
0000b033: R0 := 0x423000
0000b039: R0 := R0 + 0x400
0000b040: R0 := mem[R0, el]:u64
0000b047: R0 := mem[R0, el]:u64
0000b04e: R0 := mem[R0, el]:u64
0000b055: R0 := mem[R0, el]:u64
0000b05c: R0 := mem[R0, el]:u64
0000b063: R0 := pad:64[mem[R0, el]:u32]
0000b06a: R0 := pad:64[31:0[R2] & 31:0[R0]]
0000b070: #27 := ~31:0[R0]
0000b075: #28 := 31:0[R1] + ~31:0[R0]
0000b07b: VF := extend:64[#28 + 1] <> extend:64[31:0[R1]] + extend:64[#27] +
          1
0000b081: CF := pad:64[#28 + 1] <> pad:64[31:0[R1]] + pad:64[#27] + 1
0000b085: ZF := #28 + 1 = 0
0000b089: NF := 31:31[#28 + 1]
0000b08f: when CF <> 1 goto %0000b08d
00019772: goto %00011a3e

00011a3e:
00011a41: R0 := 0x422000
00011a47: R0 := R0 + 0x768
00011a4e: R0 := mem[R0, el]:u64
00011a55: R0 := mem[R0, el]:u64
00011a5c: R0 := pad:64[mem[R0, el]:u16]
00011a61: VF := 0
00011a64: CF := 1
00011a68: ZF := 31:0[R0] = 0
00011a6c: NF := 31:31[R0]
00011a71: when ZF goto %0000b0b6
00019773: goto %0000b08d

0000b08d:
0000b095: R0 := 0x420000
0000b09b: R0 := R0 + 0x608
0000b0a2: R0 := pad:64[mem[R0 + 0xC, el]:u32]
0000b0a7: VF := 0
0000b0aa: CF := 1
0000b0ae: ZF := 31:0[R0] = 0
0000b0b2: NF := 31:31[R0]
0000b0b8: when ZF goto %0000b0b6
00019774: goto %00011a35

0000b0b6:
0000b0be: R0 := 0
00019775: goto %0000b0c0

00011a35:
00011a38: R0 := 1
00011a3c: goto %0000b0c0

0000b0c0:
0000b0c4: #29 := ~31:0[R3]
0000b0c9: #30 := 31:0[R0] + ~31:0[R3]
0000b0cf: VF := extend:64[#30 + 1] <> extend:64[31:0[R0]] + extend:64[#29] +
          1
0000b0d5: CF := pad:64[#30 + 1] <> pad:64[31:0[R0]] + pad:64[#29] + 1
0000b0d9: ZF := #30 + 1 = 0
0000b0dd: NF := 31:31[#30 + 1]
0000b0e4: when NF <> VF goto %0000b0e2
00019776: goto %000112cb

0000b0e2:
0000b0ea: R0 := 0x420000
0000b0f0: R0 := R0 + 0x70
0000b0f8: mem := mem with [R31 + 0x1A8, el]:u64 <- R0
0000b0fe: R0 := R31 + 0x997
0000b106: mem := mem with [R31 + 0x1B0, el]:u64 <- R0
0000b10c: R0 := R31 + 0x997
0000b114: mem := mem with [R31 + 0x1B8, el]:u64 <- R0
0000b119: R0 := 0x420000
0000b11f: R0 := R0 + 0x6A3
0000b127: mem := mem with [R31 + 0x1C0, el]:u64 <- R0
0000b12d: R0 := R31 + 0x996
0000b135: mem := mem with [R31 + 0x1C8, el]:u64 <- R0
0000b13a: R0 := 0x420000
0000b140: R0 := R0 + 0x699
0000b148: mem := mem with [R31 + 0x1D0, el]:u64 <- R0
0000b14d: R0 := 0x420000
0000b153: R0 := R0 + 0x290
0000b15b: mem := mem with [R31 + 0x1D8, el]:u64 <- R0
0000b160: R0 := 0x420000
0000b166: R0 := R0 + 0x290
0000b16e: mem := mem with [R31 + 0x1E0, el]:u64 <- R0
0000b175: mem := mem with [R31 + 0x1E8, el]:u64 <- 0
0000b17a: R0 := 0x420000
0000b180: R0 := R0 + 0x290
0000b188: mem := mem with [R31 + 0x1F0, el]:u64 <- R0
0000b18d: R0 := 0x420000
0000b193: R0 := R0 + 0x290
0000b19b: mem := mem with [R31 + 0x1F8, el]:u64 <- R0
0000b1a0: R0 := 0x420000
0000b1a6: R0 := R0 + 0x290
0000b1ae: mem := mem with [R31 + 0x200, el]:u64 <- R0
0000b1b5: mem := mem with [R31 + 0x208, el]:u64 <- 0
0000b1ba: R0 := 0x420000
0000b1c0: R0 := R0 + 0x699
0000b1c8: mem := mem with [R31 + 0x210, el]:u64 <- R0
0000b1ce: R0 := R31 + 0x996
0000b1d6: mem := mem with [R31 + 0x218, el]:u64 <- R0
0000b1db: R0 := 0x420000
0000b1e1: R0 := R0 + 0x6A3
0000b1e9: mem := mem with [R31 + 0x220, el]:u64 <- R0
0000b1ee: R0 := 0x420000
0000b1f4: R0 := R0 + 0x290
0000b1fc: mem := mem with [R31 + 0x228, el]:u64 <- R0
0000b202: R0 := R31 + 0x997
0000b20a: mem := mem with [R31 + 0x230, el]:u64 <- R0
0000b211: mem := mem with [R31 + 0x238, el]:u64 <- 0
0000b217: R0 := R31 + 0x996
0000b21f: mem := mem with [R31 + 0x240, el]:u64 <- R0
0000b226: mem := mem with [R31 + 0x248, el]:u64 <- 0
0000b22b: R0 := 0x420000
0000b231: R0 := R0 + 0x70
0000b239: mem := mem with [R31 + 0x250, el]:u64 <- R0
0000b23f: R0 := R31 + 0x997
0000b247: mem := mem with [R31 + 0x258, el]:u64 <- R0
0000b24e: mem := mem with [R31 + 0x260, el]:u64 <- 0
0000b253: R0 := 0x420000
0000b259: R0 := R0 + 0x6B2
0000b261: mem := mem with [R31 + 0x268, el]:u64 <- R0
0000b266: R0 := 0x420000
0000b26c: R0 := R0 + 0x290
0000b274: mem := mem with [R31 + 0x270, el]:u64 <- R0
0000b27b: mem := mem with [R31 + 0x278, el]:u64 <- 0
0000b281: R0 := R31 + 0x997
0000b289: mem := mem with [R31 + 0x280, el]:u64 <- R0
0000b28e: R0 := 0x420000
0000b294: R0 := R0 + 0x6A3
0000b29c: mem := mem with [R31 + 0x288, el]:u64 <- R0
0000b2a1: R0 := 0x420000
0000b2a7: R0 := R0 + 0x290
0000b2af: mem := mem with [R31 + 0x290, el]:u64 <- R0
0000b2b4: R0 := 0x420000
0000b2ba: R0 := R0 + 0x290
0000b2c2: mem := mem with [R31 + 0x298, el]:u64 <- R0
0000b2c8: R0 := R31 + 0x997
0000b2d0: mem := mem with [R31 + 0x2A0, el]:u64 <- R0
0000b2d6: R0 := R31 + 0x997
0000b2de: mem := mem with [R31 + 0x2A8, el]:u64 <- R0
0000b2e3: R0 := 0x420000
0000b2e9: R0 := R0 + 0x290
0000b2f1: mem := mem with [R31 + 0x2B0, el]:u64 <- R0
0000b2f6: R0 := 0x420000
0000b2fc: R0 := R0 + 0x290
0000b304: mem := mem with [R31 + 0x2B8, el]:u64 <- R0
0000b309: R0 := 0x420000
0000b30f: R0 := R0 + 0x6B7
0000b317: mem := mem with [R31 + 0x2C0, el]:u64 <- R0
0000b31c: R0 := 0x420000
0000b322: R0 := R0 + 0x70
0000b32a: mem := mem with [R31 + 0x2C8, el]:u64 <- R0
0000b331: mem := mem with [R31 + 0x2D0, el]:u64 <- 0
0000b336: R0 := 0x420000
0000b33c: R0 := R0 + 0x70
0000b344: mem := mem with [R31 + 0x2D8, el]:u64 <- R0
0000b349: R0 := 0x420000
0000b34f: R0 := R0 + 0x290
0000b357: mem := mem with [R31 + 0x2E0, el]:u64 <- R0
0000b35c: R0 := 0x420000
0000b362: R0 := R0 + 0x290
0000b36a: mem := mem with [R31 + 0x2E8, el]:u64 <- R0
0000b370: R0 := R31 + 0x996
0000b378: mem := mem with [R31 + 0x2F0, el]:u64 <- R0
0000b37e: R0 := R31 + 0x996
0000b386: mem := mem with [R31 + 0x2F8, el]:u64 <- R0
0000b38c: R0 := R31 + 0x996
0000b394: mem := mem with [R31 + 0x300, el]:u64 <- R0
0000b39a: R0 := R31 + 0x996
0000b3a2: mem := mem with [R31 + 0x308, el]:u64 <- R0
0000b3a7: R0 := 0x420000
0000b3ad: R0 := R0 + 0x290
0000b3b5: mem := mem with [R31 + 0x310, el]:u64 <- R0
0000b3bc: mem := mem with [R31 + 0x318, el]:u64 <- 0
0000b3c1: R0 := 0x420000
0000b3c7: R0 := R0 + 0x290
0000b3cf: mem := mem with [R31 + 0x320, el]:u64 <- R0
0000b3d4: R0 := 0x420000
0000b3da: R0 := R0 + 0x70
0000b3e2: mem := mem with [R31 + 0x328, el]:u64 <- R0
0000b3e7: R0 := 0x420000
0000b3ed: R0 := R0 + 0x6A3
0000b3f5: mem := mem with [R31 + 0x330, el]:u64 <- R0
0000b3fa: R0 := 0x420000
0000b400: R0 := R0 + 0x70
0000b408: mem := mem with [R31 + 0x338, el]:u64 <- R0
0000b40e: R0 := R31 + 0x997
0000b416: mem := mem with [R31 + 0x340, el]:u64 <- R0
0000b41d: mem := mem with [R31 + 0x348, el]:u64 <- 0
0000b422: R0 := 0x420000
0000b428: R0 := R0 + 0x70
0000b430: mem := mem with [R31 + 0x350, el]:u64 <- R0
0000b435: R0 := 0x420000
0000b43b: R0 := R0 + 0x70
0000b443: mem := mem with [R31 + 0x358, el]:u64 <- R0
0000b448: R0 := 0x420000
0000b44e: R0 := R0 + 0x6B7
0000b456: mem := mem with [R31 + 0x360, el]:u64 <- R0
0000b45d: mem := mem with [R31 + 0x368, el]:u64 <- 0
0000b462: R0 := 0x420000
0000b468: R0 := R0 + 0x70
0000b470: mem := mem with [R31 + 0x370, el]:u64 <- R0
0000b475: R0 := 0x420000
0000b47b: R0 := R0 + 0x70
0000b483: mem := mem with [R31 + 0x378, el]:u64 <- R0
0000b48a: mem := mem with [R31 + 0x380, el]:u64 <- 0
0000b48f: R0 := 0x420000
0000b495: R0 := R0 + 0x70
0000b49d: mem := mem with [R31 + 0x388, el]:u64 <- R0
0000b4a2: R0 := 0x420000
0000b4a8: R0 := R0 + 0x6B7
0000b4b0: mem := mem with [R31 + 0x390, el]:u64 <- R0
0000b4b7: mem := mem with [R31 + 0x398, el]:u64 <- 0
0000b4bc: R0 := 0x420000
0000b4c2: R0 := R0 + 0x70
0000b4ca: mem := mem with [R31 + 0x3A0, el]:u64 <- R0
0000b4d0: R0 := R31 + 0x996
0000b4d8: mem := mem with [R31 + 0x3A8, el]:u64 <- R0
0000b4dd: R0 := 0x420000
0000b4e3: R0 := R0 + 0x290
0000b4eb: mem := mem with [R31 + 0x3B0, el]:u64 <- R0
0000b4f1: R0 := R31 + 0x996
0000b4f9: mem := mem with [R31 + 0x3B8, el]:u64 <- R0
0000b4ff: R0 := R31 + 0x997
0000b507: mem := mem with [R31 + 0x3C0, el]:u64 <- R0
0000b50c: R0 := 0x420000
0000b512: R0 := R0 + 0x290
0000b51a: mem := mem with [R31 + 0x3C8, el]:u64 <- R0
0000b521: mem := mem with [R31 + 0x3D0, el]:u64 <- 0
0000b526: R0 := 0x420000
0000b52c: R0 := R0 + 0x70
0000b534: mem := mem with [R31 + 0x3D8, el]:u64 <- R0
0000b539: R0 := 0x420000
0000b53f: R0 := R0 + 0x290
0000b547: mem := mem with [R31 + 0x3E0, el]:u64 <- R0
0000b54c: R0 := 0x420000
0000b552: R0 := R0 + 0x70
0000b55a: mem := mem with [R31 + 0x3E8, el]:u64 <- R0
0000b55f: R0 := 0x420000
0000b565: R0 := R0 + 0x70
0000b56d: mem := mem with [R31 + 0x3F0, el]:u64 <- R0
0000b572: R0 := 0x420000
0000b578: R0 := R0 + 0x290
0000b580: mem := mem with [R31 + 0x3F8, el]:u64 <- R0
0000b585: R0 := 0x420000
0000b58b: R0 := R0 + 0x70
0000b593: mem := mem with [R31 + 0x400, el]:u64 <- R0
0000b599: R0 := R31 + 0x997
0000b5a1: mem := mem with [R31 + 0x408, el]:u64 <- R0
0000b5a7: R0 := R31 + 0x996
0000b5af: mem := mem with [R31 + 0x410, el]:u64 <- R0
0000b5b4: R0 := 0x420000
0000b5ba: R0 := R0 + 0x290
0000b5c2: mem := mem with [R31 + 0x418, el]:u64 <- R0
0000b5c7: R0 := 0x420000
0000b5cd: R0 := R0 + 0x70
0000b5d5: mem := mem with [R31 + 0x420, el]:u64 <- R0
0000b5da: R0 := 0x420000
0000b5e0: R0 := R0 + 0x6A3
0000b5e8: mem := mem with [R31 + 0x428, el]:u64 <- R0
0000b5ed: R0 := 0x420000
0000b5f3: R0 := R0 + 0x70
0000b5fb: mem := mem with [R31 + 0x430, el]:u64 <- R0
0000b602: mem := mem with [R31 + 0x438, el]:u64 <- 0
0000b608: R0 := R31 + 0x996
0000b610: mem := mem with [R31 + 0x440, el]:u64 <- R0
0000b615: R0 := 0x420000
0000b61b: R0 := R0 + 0x6B2
0000b623: mem := mem with [R31 + 0x448, el]:u64 <- R0
0000b628: R0 := 0x420000
0000b62e: R0 := R0 + 0x290
0000b636: mem := mem with [R31 + 0x450, el]:u64 <- R0
0000b63c: R0 := R31 + 0x997
0000b644: mem := mem with [R31 + 0x458, el]:u64 <- R0
0000b64a: R0 := R31 + 0x997
0000b652: mem := mem with [R31 + 0x460, el]:u64 <- R0
0000b657: R0 := 0x420000
0000b65d: R0 := R0 + 0x290
0000b665: mem := mem with [R31 + 0x468, el]:u64 <- R0
0000b66a: R0 := 0x420000
0000b670: R0 := R0 + 0x290
0000b678: mem := mem with [R31 + 0x470, el]:u64 <- R0
0000b67d: R0 := 0x420000
0000b683: R0 := R0 + 0x290
0000b68b: mem := mem with [R31 + 0x478, el]:u64 <- R0
0000b690: R0 := 0x420000
0000b696: R0 := R0 + 0x290
0000b69e: mem := mem with [R31 + 0x480, el]:u64 <- R0
0000b6a5: mem := mem with [R31 + 0x488, el]:u64 <- 0
0000b6aa: R0 := 0x420000
0000b6b0: R0 := R0 + 0x290
0000b6b8: mem := mem with [R31 + 0x490, el]:u64 <- R0
0000b6bd: R0 := 0x420000
0000b6c3: R0 := R0 + 0x290
0000b6cb: mem := mem with [R31 + 0x498, el]:u64 <- R0
0000b6d2: mem := mem with [R31 + 0x4A0, el]:u64 <- 0
0000b6d7: R0 := 0x420000
0000b6dd: R0 := R0 + 0x70
0000b6e5: mem := mem with [R31 + 0x4A8, el]:u64 <- R0
0000b6ea: R0 := 0x420000
0000b6f0: R0 := R0 + 0x6B7
0000b6f8: mem := mem with [R31 + 0x4B0, el]:u64 <- R0
0000b6fd: R0 := 0x420000
0000b703: R0 := R0 + 0x6B2
0000b70b: mem := mem with [R31 + 0x4B8, el]:u64 <- R0
0000b710: R0 := 0x420000
0000b716: R0 := R0 + 0x290
0000b71e: mem := mem with [R31 + 0x4C0, el]:u64 <- R0
0000b723: R0 := 0x420000
0000b729: R0 := R0 + 0x6A3
0000b731: mem := mem with [R31 + 0x4C8, el]:u64 <- R0
0000b736: R0 := 0x420000
0000b73c: R0 := R0 + 0x6B7
0000b744: mem := mem with [R31 + 0x4D0, el]:u64 <- R0
0000b74a: R0 := R31 + 0x996
0000b752: mem := mem with [R31 + 0x4D8, el]:u64 <- R0
0000b759: mem := mem with [R31 + 0x4E0, el]:u64 <- 0
0000b75e: R0 := 0x420000
0000b764: R0 := R0 + 0x6B7
0000b76c: mem := mem with [R31 + 0x4E8, el]:u64 <- R0
0000b771: R0 := 0x420000
0000b777: R0 := R0 + 0x290
0000b77f: mem := mem with [R31 + 0x4F0, el]:u64 <- R0
0000b786: mem := mem with [R31 + 0x4F8, el]:u64 <- 0
0000b78b: R0 := 0x420000
0000b791: R0 := R0 + 0x290
0000b799: mem := mem with [R31 + 0x500, el]:u64 <- R0
0000b79e: R0 := 0x420000
0000b7a4: R0 := R0 + 0x70
0000b7ac: mem := mem with [R31 + 0x508, el]:u64 <- R0
0000b7b1: R0 := 0x420000
0000b7b7: R0 := R0 + 0x290
0000b7bf: mem := mem with [R31 + 0x510, el]:u64 <- R0
0000b7c4: R0 := 0x420000
0000b7ca: R0 := R0 + 0x70
0000b7d2: mem := mem with [R31 + 0x518, el]:u64 <- R0
0000b7d8: R0 := R31 + 0x997
0000b7e0: mem := mem with [R31 + 0x520, el]:u64 <- R0
0000b7e6: R0 := R31 + 0x997
0000b7ee: mem := mem with [R31 + 0x528, el]:u64 <- R0
0000b7f3: R0 := 0x420000
0000b7f9: R0 := R0 + 0x290
0000b801: mem := mem with [R31 + 0x530, el]:u64 <- R0
0000b806: R0 := 0x420000
0000b80c: R0 := R0 + 0x70
0000b814: mem := mem with [R31 + 0x538, el]:u64 <- R0
0000b81a: R0 := R31 + 0x996
0000b822: mem := mem with [R31 + 0x540, el]:u64 <- R0
0000b827: R0 := 0x420000
0000b82d: R0 := R0 + 0x70
0000b835: mem := mem with [R31 + 0x548, el]:u64 <- R0
0000b83a: R0 := 0x420000
0000b840: R0 := R0 + 0x70
0000b848: mem := mem with [R31 + 0x550, el]:u64 <- R0
0000b84d: R0 := 0x420000
0000b853: R0 := R0 + 0x6B2
0000b85b: mem := mem with [R31 + 0x558, el]:u64 <- R0
0000b860: R0 := 0x420000
0000b866: R0 := R0 + 0x70
0000b86e: mem := mem with [R31 + 0x560, el]:u64 <- R0
0000b873: R0 := 0x420000
0000b879: R0 := R0 + 0x70
0000b881: mem := mem with [R31 + 0x568, el]:u64 <- R0
0000b887: R0 := R31 + 0x996
0000b88f: mem := mem with [R31 + 0x570, el]:u64 <- R0
0000b895: R0 := R31 + 0x997
0000b89d: mem := mem with [R31 + 0x578, el]:u64 <- R0
0000b8a2: R0 := 0x420000
0000b8a8: R0 := R0 + 0x70
0000b8b0: mem := mem with [R31 + 0x580, el]:u64 <- R0
0000b8b7: mem := mem with [R31 + 0x588, el]:u64 <- 0
0000b8bc: R0 := 0x420000
0000b8c2: R0 := R0 + 0x70
0000b8ca: mem := mem with [R31 + 0x590, el]:u64 <- R0
0000b8d0: R0 := R31 + 0x996
0000b8d8: mem := mem with [R31 + 0x598, el]:u64 <- R0
0000b8dd: R0 := 0x420000
0000b8e3: R0 := R0 + 0x290
0000b8eb: mem := mem with [R31 + 0x5A0, el]:u64 <- R0
0000b8f0: R0 := 0x420000
0000b8f6: R0 := R0 + 0x290
0000b8fe: mem := mem with [R31 + 0x5A8, el]:u64 <- R0
0000b905: mem := mem with [R31 + 0x5B0, el]:u64 <- 0
0000b90a: R0 := 0x420000
0000b910: R0 := R0 + 0x70
0000b918: mem := mem with [R31 + 0x5B8, el]:u64 <- R0
0000b91e: R0 := R31 + 0x997
0000b926: mem := mem with [R31 + 0x5C0, el]:u64 <- R0
0000b92b: R0 := 0x420000
0000b931: R0 := R0 + 0x70
0000b939: mem := mem with [R31 + 0x5C8, el]:u64 <- R0
0000b93e: R0 := 0x420000
0000b944: R0 := R0 + 0x290
0000b94c: mem := mem with [R31 + 0x5D0, el]:u64 <- R0
0000b951: R0 := 0x420000
0000b957: R0 := R0 + 0x70
0000b95f: mem := mem with [R31 + 0x5D8, el]:u64 <- R0
0000b964: R0 := 0x420000
0000b96a: R0 := R0 + 0x70
0000b972: mem := mem with [R31 + 0x5E0, el]:u64 <- R0
0000b977: R0 := 0x420000
0000b97d: R0 := R0 + 0x70
0000b985: mem := mem with [R31 + 0x5E8, el]:u64 <- R0
0000b98a: R0 := 0x420000
0000b990: R0 := R0 + 0x6B7
0000b998: mem := mem with [R31 + 0x5F0, el]:u64 <- R0
0000b99d: R0 := 0x420000
0000b9a3: R0 := R0 + 0x290
0000b9ab: mem := mem with [R31 + 0x5F8, el]:u64 <- R0
0000b9b2: mem := mem with [R31 + 0x600, el]:u64 <- 0
0000b9b7: R0 := 0x420000
0000b9bd: R0 := R0 + 0x290
0000b9c5: mem := mem with [R31 + 0x608, el]:u64 <- R0
0000b9ca: R0 := 0x420000
0000b9d0: R0 := R0 + 0x70
0000b9d8: mem := mem with [R31 + 0x610, el]:u64 <- R0
0000b9df: mem := mem with [R31 + 0x618, el]:u64 <- 0
0000b9e4: R0 := 0x420000
0000b9ea: R0 := R0 + 0x6B7
0000b9f2: mem := mem with [R31 + 0x620, el]:u64 <- R0
0000b9f7: R0 := 0x420000
0000b9fd: R0 := R0 + 0x6B2
0000ba05: mem := mem with [R31 + 0x628, el]:u64 <- R0
0000ba0a: R0 := 0x420000
0000ba10: R0 := R0 + 0x70
0000ba18: mem := mem with [R31 + 0x630, el]:u64 <- R0
0000ba1f: mem := mem with [R31 + 0x638, el]:u64 <- 0
0000ba25: R0 := R31 + 0x997
0000ba2d: mem := mem with [R31 + 0x640, el]:u64 <- R0
0000ba32: R0 := 0x420000
0000ba38: R0 := R0 + 0x290
0000ba40: mem := mem with [R31 + 0x648, el]:u64 <- R0
0000ba45: R0 := 0x420000
0000ba4b: R0 := R0 + 0x6A3
0000ba53: mem := mem with [R31 + 0x650, el]:u64 <- R0
0000ba58: R0 := 0x420000
0000ba5e: R0 := R0 + 0x290
0000ba66: mem := mem with [R31 + 0x658, el]:u64 <- R0
0000ba6b: R0 := 0x420000
0000ba71: R0 := R0 + 0x290
0000ba79: mem := mem with [R31 + 0x660, el]:u64 <- R0
0000ba7e: R0 := 0x420000
0000ba84: R0 := R0 + 0x70
0000ba8c: mem := mem with [R31 + 0x668, el]:u64 <- R0
0000ba91: R0 := 0x420000
0000ba97: R0 := R0 + 0x290
0000ba9f: mem := mem with [R31 + 0x670, el]:u64 <- R0
0000baa4: R0 := 0x420000
0000baaa: R0 := R0 + 0x70
0000bab2: mem := mem with [R31 + 0x678, el]:u64 <- R0
0000bab8: R0 := R31 + 0x996
0000bac0: mem := mem with [R31 + 0x680, el]:u64 <- R0
0000bac5: R0 := 0x420000
0000bacb: R0 := R0 + 0x70
0000bad3: mem := mem with [R31 + 0x688, el]:u64 <- R0
0000bad9: R0 := R31 + 0x996
0000bae1: mem := mem with [R31 + 0x690, el]:u64 <- R0
0000bae6: R0 := 0x420000
0000baec: R0 := R0 + 0x70
0000baf4: mem := mem with [R31 + 0x698, el]:u64 <- R0
0000baf9: R0 := 0x420000
0000baff: R0 := R0 + 0x290
0000bb07: mem := mem with [R31 + 0x6A0, el]:u64 <- R0
0000bb0c: R0 := 0x420000
0000bb12: R0 := R0 + 0x290
0000bb1a: mem := mem with [R31 + 0x6A8, el]:u64 <- R0
0000bb21: mem := mem with [R31 + 0x6B0, el]:u64 <- 0
0000bb27: R0 := R31 + 0x996
0000bb2f: mem := mem with [R31 + 0x6B8, el]:u64 <- R0
0000bb34: R0 := 0x420000
0000bb3a: R0 := R0 + 0x6B7
0000bb42: mem := mem with [R31 + 0x6C0, el]:u64 <- R0
0000bb49: mem := mem with [R31 + 0x6C8, el]:u64 <- 0
0000bb4e: R0 := 0x420000
0000bb54: R0 := R0 + 0x290
0000bb5c: mem := mem with [R31 + 0x6D0, el]:u64 <- R0
0000bb62: R0 := R31 + 0x997
0000bb6a: mem := mem with [R31 + 0x6D8, el]:u64 <- R0
0000bb70: R0 := R31 + 0x997
0000bb78: mem := mem with [R31 + 0x6E0, el]:u64 <- R0
0000bb7d: R0 := 0x420000
0000bb83: R0 := R0 + 0x70
0000bb8b: mem := mem with [R31 + 0x6E8, el]:u64 <- R0
0000bb90: R0 := 0x420000
0000bb96: R0 := R0 + 0x290
0000bb9e: mem := mem with [R31 + 0x6F0, el]:u64 <- R0
0000bba3: R0 := 0x420000
0000bba9: R0 := R0 + 0x6B2
0000bbb1: mem := mem with [R31 + 0x6F8, el]:u64 <- R0
0000bbb7: R0 := R31 + 0x997
0000bbbf: mem := mem with [R31 + 0x700, el]:u64 <- R0
0000bbc4: R0 := 0x420000
0000bbca: R0 := R0 + 0x70
0000bbd2: mem := mem with [R31 + 0x708, el]:u64 <- R0
0000bbd7: R0 := 0x420000
0000bbdd: R0 := R0 + 0x290
0000bbe5: mem := mem with [R31 + 0x710, el]:u64 <- R0
0000bbea: R0 := 0x420000
0000bbf0: R0 := R0 + 0x70
0000bbf8: mem := mem with [R31 + 0x718, el]:u64 <- R0
0000bbff: mem := mem with [R31 + 0x720, el]:u64 <- 0
0000bc05: R0 := R31 + 0x997
0000bc0d: mem := mem with [R31 + 0x728, el]:u64 <- R0
0000bc12: R0 := 0x420000
0000bc18: R0 := R0 + 0x70
0000bc20: mem := mem with [R31 + 0x730, el]:u64 <- R0
0000bc25: R0 := 0x420000
0000bc2b: R0 := R0 + 0x70
0000bc33: mem := mem with [R31 + 0x738, el]:u64 <- R0
0000bc39: R0 := R31 + 0x997
0000bc41: mem := mem with [R31 + 0x740, el]:u64 <- R0
0000bc46: R0 := 0x420000
0000bc4c: R0 := R0 + 0x70
0000bc54: mem := mem with [R31 + 0x748, el]:u64 <- R0
0000bc5b: mem := mem with [R31 + 0x750, el]:u64 <- 0
0000bc62: mem := mem with [R31 + 0x758, el]:u64 <- 0
0000bc67: R0 := 0x420000
0000bc6d: R0 := R0 + 0x70
0000bc75: mem := mem with [R31 + 0x760, el]:u64 <- R0
0000bc7a: R0 := 0x420000
0000bc80: R0 := R0 + 0x6B7
0000bc88: mem := mem with [R31 + 0x768, el]:u64 <- R0
0000bc8d: R0 := 0x420000
0000bc93: R0 := R0 + 0x290
0000bc9b: mem := mem with [R31 + 0x770, el]:u64 <- R0
0000bca1: R0 := R31 + 0x996
0000bca9: mem := mem with [R31 + 0x778, el]:u64 <- R0
0000bcae: R0 := 0x420000
0000bcb4: R0 := R0 + 0x290
0000bcbc: mem := mem with [R31 + 0x780, el]:u64 <- R0
0000bcc1: R0 := 0x420000
0000bcc7: R0 := R0 + 0x6A3
0000bccf: mem := mem with [R31 + 0x788, el]:u64 <- R0
0000bcd6: mem := mem with [R31 + 0x790, el]:u64 <- 0
0000bcdb: R0 := 0x420000
0000bce1: R0 := R0 + 0x6B2
0000bce9: mem := mem with [R31 + 0x798, el]:u64 <- R0
0000bcee: R0 := 0x420000
0000bcf4: R0 := R0 + 0x290
0000bcfc: mem := mem with [R31 + 0x7A0, el]:u64 <- R0
0000bd01: R0 := 0x420000
0000bd07: R0 := R0 + 0x70
0000bd0f: mem := mem with [R31 + 0x7A8, el]:u64 <- R0
0000bd14: R0 := 0x420000
0000bd1a: R0 := R0 + 0x290
0000bd22: mem := mem with [R31 + 0x7B0, el]:u64 <- R0
0000bd27: R0 := 0x420000
0000bd2d: R0 := R0 + 0x290
0000bd35: mem := mem with [R31 + 0x7B8, el]:u64 <- R0
0000bd3a: R0 := 0x420000
0000bd40: R0 := R0 + 0x70
0000bd48: mem := mem with [R31 + 0x7C0, el]:u64 <- R0
0000bd4f: mem := mem with [R31 + 0x7C8, el]:u64 <- 0
0000bd56: mem := mem with [R31 + 0x7D0, el]:u64 <- 0
0000bd5b: R0 := 0x420000
0000bd61: R0 := R0 + 0x290
0000bd69: mem := mem with [R31 + 0x7D8, el]:u64 <- R0
0000bd6f: R0 := R31 + 0x997
0000bd77: mem := mem with [R31 + 0x7E0, el]:u64 <- R0
0000bd7c: R0 := 0x420000
0000bd82: R0 := R0 + 0x290
0000bd8a: mem := mem with [R31 + 0x7E8, el]:u64 <- R0
0000bd8f: R0 := 0x420000
0000bd95: R0 := R0 + 0x70
0000bd9d: mem := mem with [R31 + 0x7F0, el]:u64 <- R0
0000bda3: R0 := R31 + 0x997
0000bdab: mem := mem with [R31 + 0x7F8, el]:u64 <- R0
0000bdb2: mem := mem with [R31 + 0x800, el]:u64 <- 0
0000bdb7: R0 := 0x420000
0000bdbd: R0 := R0 + 0x6B2
0000bdc5: mem := mem with [R31 + 0x808, el]:u64 <- R0
0000bdca: R0 := 0x420000
0000bdd0: R0 := R0 + 0x290
0000bdd8: mem := mem with [R31 + 0x810, el]:u64 <- R0
0000bddf: mem := mem with [R31 + 0x818, el]:u64 <- 0
0000bde5: R0 := R31 + 0x997
0000bded: mem := mem with [R31 + 0x820, el]:u64 <- R0
0000bdf2: R0 := 0x420000
0000bdf8: R0 := R0 + 0x6A3
0000be00: mem := mem with [R31 + 0x828, el]:u64 <- R0
0000be05: R0 := 0x420000
0000be0b: R0 := R0 + 0x290
0000be13: mem := mem with [R31 + 0x830, el]:u64 <- R0
0000be18: R0 := 0x420000
0000be1e: R0 := R0 + 0x290
0000be26: mem := mem with [R31 + 0x838, el]:u64 <- R0
0000be2c: R0 := R31 + 0x997
0000be34: mem := mem with [R31 + 0x840, el]:u64 <- R0
0000be3b: mem := mem with [R31 + 0x848, el]:u64 <- 0
0000be41: R0 := R31 + 0x997
0000be49: mem := mem with [R31 + 0x850, el]:u64 <- R0
0000be4f: R0 := R31 + 0x996
0000be57: mem := mem with [R31 + 0x858, el]:u64 <- R0
0000be5c: R0 := 0x420000
0000be62: R0 := R0 + 0x290
0000be6a: mem := mem with [R31 + 0x860, el]:u64 <- R0
0000be6f: R0 := 0x420000
0000be75: R0 := R0 + 0x699
0000be7d: mem := mem with [R31 + 0x868, el]:u64 <- R0
0000be82: R0 := 0x420000
0000be88: R0 := R0 + 0x70
0000be90: mem := mem with [R31 + 0x870, el]:u64 <- R0
0000be95: R0 := 0x420000
0000be9b: R0 := R0 + 0x70
0000bea3: mem := mem with [R31 + 0x878, el]:u64 <- R0
0000bea8: R0 := 0x420000
0000beae: R0 := R0 + 0x290
0000beb6: mem := mem with [R31 + 0x880, el]:u64 <- R0
0000bebb: R0 := 0x420000
0000bec1: R0 := R0 + 0x70
0000bec9: mem := mem with [R31 + 0x888, el]:u64 <- R0
0000bece: R0 := 0x420000
0000bed4: R0 := R0 + 0x290
0000bedc: mem := mem with [R31 + 0x890, el]:u64 <- R0
0000bee1: R0 := 0x420000
0000bee7: R0 := R0 + 0x70
0000beef: mem := mem with [R31 + 0x898, el]:u64 <- R0
0000bef4: R0 := 0x420000
0000befa: R0 := R0 + 0x290
0000bf02: mem := mem with [R31 + 0x8A0, el]:u64 <- R0
0000bf07: R0 := 0x420000
0000bf0d: R0 := R0 + 0x290
0000bf15: mem := mem with [R31 + 0x8A8, el]:u64 <- R0
0000bf1b: R0 := R31 + 0x997
0000bf23: mem := mem with [R31 + 0x8B0, el]:u64 <- R0
0000bf2a: mem := mem with [R31 + 0x8B8, el]:u64 <- 0
0000bf30: R0 := R31 + 0x996
0000bf38: mem := mem with [R31 + 0x8C0, el]:u64 <- R0
0000bf3e: R0 := R31 + 0x996
0000bf46: mem := mem with [R31 + 0x8C8, el]:u64 <- R0
0000bf4b: R0 := 0x420000
0000bf51: R0 := R0 + 0x70
0000bf59: mem := mem with [R31 + 0x8D0, el]:u64 <- R0
0000bf5e: R0 := 0x420000
0000bf64: R0 := R0 + 0x68E
0000bf6c: mem := mem with [R31 + 0x8D8, el]:u64 <- R0
0000bf71: R0 := 0x420000
0000bf77: R0 := R0 + 0x70
0000bf7f: mem := mem with [R31 + 0x8E0, el]:u64 <- R0
0000bf86: mem := mem with [R31 + 0x8E8, el]:u64 <- 0
0000bf8b: R0 := 0x420000
0000bf91: R0 := R0 + 0x70
0000bf99: mem := mem with [R31 + 0x8F0, el]:u64 <- R0
0000bf9f: R0 := R31 + 0x997
0000bfa7: mem := mem with [R31 + 0x8F8, el]:u64 <- R0
0000bfac: R0 := 0x420000
0000bfb2: R0 := R0 + 0x290
0000bfba: mem := mem with [R31 + 0x900, el]:u64 <- R0
0000bfc1: mem := mem with [R31 + 0x908, el]:u64 <- 0
0000bfc6: R0 := 0x420000
0000bfcc: R0 := R0 + 0x70
0000bfd4: mem := mem with [R31 + 0x910, el]:u64 <- R0
0000bfd9: R0 := 0x420000
0000bfdf: R0 := R0 + 0x68E
0000bfe7: mem := mem with [R31 + 0x918, el]:u64 <- R0
0000bfee: mem := mem with [R31 + 0x920, el]:u64 <- 0
0000bff4: R0 := R31 + 0x996
0000bffc: mem := mem with [R31 + 0x928, el]:u64 <- R0
0000c001: R0 := 0x420000
0000c007: R0 := R0 + 0x290
0000c00f: mem := mem with [R31 + 0x930, el]:u64 <- R0
0000c016: mem := mem with [R31 + 0x938, el]:u64 <- 0
0000c01b: R0 := 0x420000
0000c021: R0 := R0 + 0x68E
0000c029: mem := mem with [R31 + 0x940, el]:u64 <- R0
0000c02e: R0 := 0x420000
0000c034: R0 := R0 + 0x290
0000c03c: mem := mem with [R31 + 0x948, el]:u64 <- R0
0000c043: mem := mem with [R31 + 0x950, el]:u64 <- 0
0000c048: R0 := 0x420000
0000c04e: R0 := R0 + 0x70
0000c056: mem := mem with [R31 + 0x958, el]:u64 <- R0
0000c05c: R0 := R31 + 0x997
0000c064: mem := mem with [R31 + 0x960, el]:u64 <- R0
0000c069: R0 := 0x420000
0000c06f: R0 := R0 + 0x70
0000c077: mem := mem with [R31 + 0x968, el]:u64 <- R0
0000c07c: R0 := 0x420000
0000c082: R0 := R0 + 0x290
0000c08a: mem := mem with [R31 + 0x970, el]:u64 <- R0
0000c08f: R0 := 0x420000
0000c095: R0 := R0 + 0x70
0000c09d: mem := mem with [R31 + 0x978, el]:u64 <- R0
0000c0a2: R0 := 0x420000
0000c0a8: R0 := R0 + 0x290
0000c0b0: mem := mem with [R31 + 0x980, el]:u64 <- R0
0000c0b7: mem := mem with [R31 + 0xE10, el]:u32 <- 0
0000c0bc: goto %0000c0ba

0000c0ba:
0000c0c2: R0 := pad:64[mem[R31 + 0xE10, el]:u32]
0000c0c7: VF := 0
0000c0ca: CF := 1
0000c0ce: ZF := 31:0[R0] = 0
0000c0d2: NF := 31:31[R0]
0000c0da: when ~(NF = VF & ~ZF) goto %0000c0d8
00019777: goto %0000c119

0000c119:
0000c11c: R0 := 0x421000
0000c122: R0 := R0 + 0xF80
0000c129: R0 := mem[R0, el]:u64
0000c130: R0 := mem[R0, el]:u64
0000c137: R1 := mem[R31 + 0x988, el]:u64
0000c13f: mem := mem with [R0, el]:u64 <- R1
0000c144: R0 := 0x421000
0000c14a: R0 := R0 + 0xF90
0000c151: R0 := mem[R0, el]:u64
0000c158: R0 := mem[R0, el]:u64
0000c15f: R1 := pad:64[mem[R0, el]:u32]
0000c165: R1 := pad:64[31:0[R1] + 1]
0000c16d: mem := mem with [R0, el]:u32 <- 31:0[R1]
0000c172: R0 := 0x421000
0000c178: R0 := R0 + 0xF98
0000c17f: R0 := mem[R0, el]:u64
0000c186: R1 := mem[R31 + 0xD68, el]:u64
0000c18e: mem := mem with [R0, el]:u64 <- R1
0000c195: R0 := mem[R0, el]:u64
0000c19a: VF := 0
0000c19d: CF := 1
0000c1a1: ZF := R0 = 0
0000c1a5: NF := 63:63[R0]
0000c1b1: when ZF goto %0000c1aa
0000c1b2: goto %0000c1ad

0000c1ad:
0000c1ae: R0 := 1
0000c1b4: goto %0000c1b0

0000c1aa:
0000c1ab: R0 := 0
0000c1b3: goto %0000c1b0

0000c1b0:
0000c1ba: R0 := pad:64[7:0[R0]]
0000c1c2: mem := mem with [R31 + 0xE14, el]:u32 <- 31:0[R0]
0000c1c7: R0 := 0x423000
0000c1cd: R0 := R0 + 0x3B8
0000c1d4: R0 := mem[R0, el]:u64
0000c1db: R0 := pad:64[mem[R0, el]:u32]
0000c1e0: VF := 0
0000c1e3: CF := 1
0000c1e7: ZF := 31:0[R0] = 0
0000c1eb: NF := 31:31[R0]
0000c1f1: when ZF goto %0000c1ef
00019778: goto %0001127c

0001127c:
00011281: R0 := pad:64[mem[R31 + 0xDAC, el]:u32]
00011287: R1 := pad:64[7:0[R0]]
0001128c: R0 := 0x420000
00011292: R0 := R0 + 0x70
0001129a: mem := mem with [R0] <- 7:0[R1]
0001129f: R0 := 0x420000
000112a5: R0 := R0 + 0x258
000112ac: R0 := mem[R0 + 8, el]:u64
000112b2: R0 := extend:64[25:8[R0]]
000112b9: R0 := pad:64[mem[R31 + 0xD8C, el]:u16]
000112be: VF := 0
000112c1: CF := 1
000112c5: ZF := 31:0[R0] = 0
000112c9: NF := 31:31[R0]
00019779: goto %0000c1ef

0000c1ef:
0000c1f7: R0 := 0x423000
0000c1fd: R0 := R0 + 0x3C8
0000c204: R0 := mem[R0, el]:u64
0000c20b: R0 := mem[R0, el]:u64
0000c212: R0 := mem[R0, el]:u64
0000c219: R0 := pad:64[mem[R0, el]:u16]
0000c21f: R2 := pad:64[31:0[R0]]
0000c224: R0 := 0x423000
0000c22a: R0 := R0 + 0x930
0000c231: R0 := pad:64[mem[R0, el]:u32]
0000c237: R0 := pad:64[extend:32[15:0[R0]]]
0000c23d: R1 := pad:64[31:0[R0]]
0000c243: R0 := pad:64[31:0[R1]]
0000c249: R0 := pad:64[31:0[R0] + 1]
0000c24f: #31 := 31:0[R0] - 2
0000c254: VF := extend:64[#31] <> extend:64[31:0[R0]] - 2
0000c259: CF := pad:64[#31] <> pad:64[31:0[R0]] + 0xFFFFFFFE
0000c25d: ZF := #31 = 0
0000c261: NF := 31:31[#31]
0000c26e: when CF & ~ZF goto %0000c267
0000c26f: goto %0000c26a

0000c26a:
0000c26b: R0 := 1
0000c271: goto %0000c26d

0000c267:
0000c268: R0 := 0
0000c270: goto %0000c26d

0000c26d:
0000c277: R0 := pad:64[7:0[R0]]
0000c27d: R0 := pad:64[extend:32[7:0[R0]]]
0000c282: R3 := 0
0000c287: VF := 0
0000c28a: CF := 1
0000c28e: ZF := 31:0[R0] = 0
0000c292: NF := 31:31[R0]
0000c2a0: when ZF <> 1 goto %0000c298
0000c2a1: goto %0000c29c

0000c29c:
0000c29d: R0 := pad:64[31:0[R3]]
0000c2a3: goto %0000c29f

0000c298:
0000c299: R0 := pad:64[31:0[R1]]
0000c2a2: goto %0000c29f

0000c29f:
0000c2a9: #32 := ~31:0[R0]
0000c2ae: #33 := 31:0[R2] + ~31:0[R0]
0000c2b4: VF := extend:64[#33 + 1] <> extend:64[31:0[R2]] + extend:64[#32] +
          1
0000c2ba: CF := pad:64[#33 + 1] <> pad:64[31:0[R2]] + pad:64[#32] + 1
0000c2be: ZF := #33 + 1 = 0
0000c2c2: NF := 31:31[#33 + 1]
0000c2cf: when NF <> VF goto %0000c2c8
0000c2d0: goto %0000c2cb

0000c2cb:
0000c2cc: R0 := 1
0000c2d2: goto %0000c2ce

0000c2c8:
0000c2c9: R0 := 0
0000c2d1: goto %0000c2ce

0000c2ce:
0000c2d8: R0 := pad:64[7:0[R0]]
0000c2de: R1 := pad:64[31:0[R0]]
0000c2e5: R0 := pad:64[extend:32[mem[R31 + 0xD8B]]]
0000c2eb: #34 := ~31:0[R0]
0000c2f0: #35 := 31:0[R1] + ~31:0[R0]
0000c2f6: VF := extend:64[#35 + 1] <> extend:64[31:0[R1]] + extend:64[#34] +
          1
0000c2fc: CF := pad:64[#35 + 1] <> pad:64[31:0[R1]] + pad:64[#34] + 1
0000c300: ZF := #35 + 1 = 0
0000c304: NF := 31:31[#35 + 1]
0000c30b: when NF <> VF goto %0000c309
0001977a: goto %00011235

00011235:
00011238: R0 := 0x423000
0001123e: R0 := R0 + 0x3C8
00011245: R0 := mem[R0, el]:u64
0001124c: R0 := mem[R0, el]:u64
00011253: R0 := mem[R0, el]:u64
0001125a: R0 := pad:64[mem[R0, el]:u16]
0001125f: VF := 0
00011262: CF := 1
00011266: ZF := 31:0[R0] = 0
0001126a: NF := 31:31[R0]
0001126f: when ZF goto %0000c309
0001977b: goto %00011273

0000c309:
0000c311: R0 := 0
0001977c: goto %0000c313

00011273:
00011276: R0 := 1
0001127a: goto %0000c313

0000c313:
0000c318: R1 := pad:64[extend:32[mem[R31 + 0xD8B]]]
0000c31e: #36 := ~31:0[R1]
0000c323: #37 := 31:0[R0] + ~31:0[R1]
0000c329: VF := extend:64[#37 + 1] <> extend:64[31:0[R0]] + extend:64[#36] +
          1
0000c32f: CF := pad:64[#37 + 1] <> pad:64[31:0[R0]] + pad:64[#36] + 1
0000c333: ZF := #37 + 1 = 0
0000c337: NF := 31:31[#37 + 1]
0000c33e: R0 := pad:64[extend:32[mem[R31 + 0xD8B]]]
0000c344: R0 := pad:64[15:0[R0]]
0000c34a: R1 := pad:64[31:0[R0]]
0000c34f: R0 := 0x420000
0000c355: R0 := R0 + 0x628
0000c35c: R0 := pad:64[mem[R0 + 8, el]:u32]
0000c362: R0 := pad:64[15:0[R0]]
0000c369: R1 := pad:64[31:0[R1] ~>> pad:10[4:0[R0]]]
0000c370: R0 := mem[R31 + 0xE00, el]:u64
0000c377: R0 := mem[R0, el]:u64
0000c37d: R1 := extend:64[31:0[R1]]
0000c385: mem := mem with [R0, el]:u64 <- R1
0000c38c: R0 := mem[R0, el]:u64
0000c391: VF := 0
0000c394: CF := 1
0000c398: ZF := R0 = 0
0000c39c: NF := 63:63[R0]
0000c3a2: when ZF goto %0000c3a0
0001977d: goto %0001122c

0000c3a0:
0000c3a8: R0 := 0
0001977e: goto %0000c3aa

0001122c:
0001122f: R0 := 1
00011233: goto %0000c3aa

0000c3aa:
0000c3af: R1 := pad:64[mem[R31 + 0xDAC, el]:u32]
0000c3b5: #38 := ~31:0[R1]
0000c3ba: #39 := 31:0[R0] + ~31:0[R1]
0000c3c0: VF := extend:64[#39 + 1] <> extend:64[31:0[R0]] + extend:64[#38] +
          1
0000c3c6: CF := pad:64[#39 + 1] <> pad:64[31:0[R0]] + pad:64[#38] + 1
0000c3ca: ZF := #39 + 1 = 0
0000c3ce: NF := 31:31[#39 + 1]
0000c3da: when ZF <> 1 goto %0000c3d3
0000c3db: goto %0000c3d6

0000c3d6:
0000c3d7: R0 := 1
0000c3dd: goto %0000c3d9

0000c3d3:
0000c3d4: R0 := 0
0000c3dc: goto %0000c3d9

0000c3d9:
0000c3e3: R0 := pad:64[7:0[R0]]
0000c3e9: R1 := pad:64[7:0[R0]]
0000c3ee: R0 := 0x421000
0000c3f4: R0 := R0 + 0x778
0000c3fb: R19 := mem[R0, el]:u64
0000c401: R0 := R1
0000c406: R30 := 0x4043C8
0000c409: call @func_8 with return %000111d2

000111d2:
000111d8: mem := mem with [R19, el]:u64 <- R0
000111dd: R0 := 0x422000
000111e3: R0 := R0 + 0x4E0
000111ea: R0 := mem[R0, el]:u64
000111f0: R1 := R31 + 0xA44
000111f8: mem := mem with [R0, el]:u64 <- R1
000111ff: R0 := pad:64[mem[R31 + 0xD64, el]:u32]
00011204: VF := 0
00011207: CF := 1
0001120b: ZF := 31:0[R0] = 0
0001120f: NF := 31:31[R0]
0001977f: goto %00011211

0000c0d8:
0000c0e2: R0 := extend:64[mem[R31 + 0xE10, el]:u32]
0000c0e8: R0 := 60:0[R0].0
0000c0ee: R1 := R31 + 0x988
0000c0f3: R2 := 0x420000
0000c0f9: R2 := R2 + 0x7C
0000c102: mem := mem with [R1 + R0, el]:u64 <- R2
0000c109: R0 := pad:64[mem[R31 + 0xE10, el]:u32]
0000c10f: R0 := pad:64[31:0[R0] + 1]
0000c117: mem := mem with [R31 + 0xE10, el]:u32 <- 31:0[R0]
00019780: goto %0000c0ba

000112cb:
000112ce: R0 := 1
000112d6: mem := mem with [R31 + 0xD58, el]:u64 <- R0
000112db: R0 := 1
000112e3: mem := mem with [R31 + 0xD54, el]:u32 <- 31:0[R0]
000112e8: R0 := 1
000112f0: mem := mem with [R31 + 0xA44, el]:u32 <- 31:0[R0]
000112f5: goto %000112f3

000112f3:
000112fb: R0 := pad:64[mem[R31 + 0xA44, el]:u32]
00011300: VF := 0
00011303: CF := 1
00011307: ZF := 31:0[R0] = 0
0001130b: NF := 31:31[R0]
00011312: when NF = VF goto %00011310
00019781: goto %00011a31

00011a31:
00011a33: goto %00011211

00011211:
00011216: R0 := pad:64[mem[R31 + 0xE1F]]
0001121c: R0 := pad:64[31:0[R0] + 1]
00011222: R0 := pad:64[7:0[R0]]
0001122a: mem := mem with [R31 + 0xE1F] <- 7:0[R0]
00019782: goto %0000aee4

00011310:
00011318: R0 := 0x423000
0001131e: R0 := R0 + 0x4B8
00011326: mem := mem with [R31 + 0xD48, el]:u64 <- R0
0001132b: R0 := 1
00011333: mem := mem with [R31 + 0xD44, el]:u32 <- 31:0[R0]
00011338: R0 := 0xFFFFFFFF
00011340: mem := mem with [R31 + 0xD42, el]:u16 <- 15:0[R0]
00011345: R0 := 0x420000
0001134b: R0 := R0 + 0x108
00011353: mem := mem with [R31 + 0xD38, el]:u64 <- R0
00011358: R0 := 0x420000
0001135e: R0 := R0 + 0x268
00011366: mem := mem with [R31 + 0xD30, el]:u64 <- R0
0001136d: R2 := pad:64[extend:32[mem[R31 + 0xE1F]]]
00011374: R1 := pad:64[mem[R31 + 0xA44, el]:u32]
00011379: R0 := 0x420000
0001137f: R0 := R0 + 0xD0
00011385: R1 := extend:64[31:0[R1]]
0001138b: R2 := extend:64[31:0[R2]]
00011391: R2 := 62:0[R2].0
00011398: R1 := R2 + R1
000113a0: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
000113a5: R0 := 0x423000
000113ab: R0 := R0 + 0x4E8
000113b2: R1 := mem[R31 + 0xD48, el]:u64
000113ba: mem := mem with [R0, el]:u64 <- R1
000113c1: R0 := pad:64[extend:32[mem[R31 + 0xDB3]]]
000113c6: VF := 0
000113c9: CF := 1
000113cd: ZF := 31:0[R0] = 0
000113d1: NF := 31:31[R0]
000113d7: when ZF goto %000113d5
00019783: goto %00011a01

00011a01:
00011a04: R0 := 0x423000
00011a0a: R0 := R0 + 0x4E8
00011a11: R0 := mem[R0, el]:u64
00011a18: R0 := mem[R0, el]:u64
00011a1f: R0 := mem[R0, el]:u64
00011a24: VF := 0
00011a27: CF := 1
00011a2b: ZF := R0 = 0
00011a2f: NF := 63:63[R0]
00019784: goto %000113d5

000113d5:
000113dd: R0 := 0x422000
000113e3: R0 := R0 + 0x768
000113ea: R0 := mem[R0, el]:u64
000113f1: R0 := mem[R0, el]:u64
000113f8: R0 := pad:64[mem[R0, el]:u16]
000113fe: R1 := pad:64[31:0[R0]]
00011403: R0 := 0x420000
00011409: R0 := R0 + 0x258
00011410: R0 := pad:64[extend:32[mem[R0 + 8]]]
00011417: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001141d: #181 := 31:0[R0] - 9
00011422: VF := extend:64[#181] <> extend:64[31:0[R0]] - 9
00011427: CF := pad:64[#181] <> pad:64[31:0[R0]] + 0xFFFFFFF7
0001142b: ZF := #181 = 0
0001142f: NF := 31:31[#181]
0001143b: when ZF goto %00011434
0001143c: goto %00011437

00011437:
00011438: R0 := 1
0001143e: goto %0001143a

00011434:
00011435: R0 := 0
0001143d: goto %0001143a

0001143a:
00011444: R0 := pad:64[7:0[R0]]
0001144a: R1 := pad:64[31:0[R0]]
00011451: R0 := pad:64[mem[R31 + 0xD44, el]:u32]
00011458: R0 := pad:64[31:0[R0] | 31:0[R1]]
00011460: mem := mem with [R31 + 0xD44, el]:u32 <- 31:0[R0]
00011465: R0 := 0x422000
0001146b: R0 := R0 + 0x768
00011472: R0 := mem[R0, el]:u64
00011479: R0 := mem[R0, el]:u64
00011480: R1 := pad:64[mem[R31 + 0xD44, el]:u32]
00011486: R1 := pad:64[15:0[R1]]
0001148e: mem := mem with [R0, el]:u16 <- 15:0[R1]
00011495: R0 := pad:64[mem[R0, el]:u16]
0001149a: VF := 0
0001149d: CF := 1
000114a1: ZF := 31:0[R0] = 0
000114a5: NF := 31:31[R0]
000114ab: when ZF goto %000114a9
00019785: goto %000119ea

000119ea:
000119ef: R0 := pad:64[extend:32[mem[R31 + 0xD8B]]]
000119f4: VF := 0
000119f7: CF := 1
000119fb: ZF := 31:0[R0] = 0
000119ff: NF := 31:31[R0]
00019786: goto %000114a9

000114a9:
000114b3: R0 := mem[R31 + 0xD38, el]:u64
000114b8: R1 := 1
000114c0: mem := mem with [R0, el]:u32 <- 31:0[R1]
000114c5: R0 := 0x421000
000114cb: R0 := R0 + 0xF98
000114d2: R0 := mem[R0, el]:u64
000114d9: R0 := mem[R0, el]:u64
000114e0: R0 := mem[R0, el]:u64
000114e7: R1 := pad:64[mem[R0, el]:u32]
000114ed: R1 := pad:64[31:0[R1] + 1]
000114f5: mem := mem with [R0, el]:u32 <- 31:0[R1]
000114fc: R0 := pad:64[mem[R0, el]:u32]
00011503: R2 := pad:64[mem[R31 + 0xA44, el]:u32]
00011508: R1 := 0x420000
0001150e: R1 := R1 + 0x78
00011514: R2 := extend:64[31:0[R2]]
0001151c: R1 := pad:64[mem[R1 + (61:0[R2].0), el]:u32]
00011522: #182 := ~31:0[R1]
00011527: #183 := 31:0[R0] + ~31:0[R1]
0001152d: VF := extend:64[#183 + 1] <> extend:64[31:0[R0]] + extend:64[#182]
          + 1
00011533: CF := pad:64[#183 + 1] <> pad:64[31:0[R0]] + pad:64[#182] + 1
00011537: ZF := #183 + 1 = 0
0001153b: NF := 31:31[#183 + 1]
00011547: when CF goto %00011540
00011548: goto %00011543

00011543:
00011544: R0 := 1
0001154a: goto %00011546

00011540:
00011541: R0 := 0
00011549: goto %00011546

00011546:
00011550: R0 := pad:64[7:0[R0]]
00011556: R0 := pad:64[extend:32[7:0[R0]]]
0001155c: R0 := pad:64[7:0[R0]]
00011562: R1 := pad:64[31:0[R0]]
00011567: R0 := 1
00011570: R1 := pad:64[31:0[R2] * 31:0[R1]]
00011577: R0 := pad:64[31:0[R0] + ~31:0[R1] + 1]
0001157d: R1 := pad:64[extend:32[7:0[R0]]]
00011582: R0 := 0x421000
00011588: R0 := R0 + 0x670
0001158f: R0 := mem[R0, el]:u64
00011596: R0 := pad:64[mem[R0, el]:u32]
0001159c: R0 := pad:64[extend:32[7:0[R0]]]
000115a3: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
000115a9: R0 := pad:64[extend:32[7:0[R0]]]
000115af: R0 := pad:64[7:0[R0]]
000115b5: R1 := pad:64[31:0[R0]]
000115bc: R0 := pad:64[mem[R31 + 0xD42, el]:u16]
000115c2: R0 := pad:64[7:0[R0]]
000115c9: R0 := pad:64[31:0[R1] + 31:0[R0]]
000115ce: VF := 0
000115d1: CF := 1
000115d5: ZF := 31:0[R0] = 0
000115d9: NF := 31:31[R0]
000115df: when ZF goto %000115dd
00019787: goto %000119c1

000119c1:
000119c4: R0 := 0x421000
000119ca: R0 := R0 + 0x780
000119d1: R0 := mem[R0, el]:u64
000119d8: R0 := mem[R0, el]:u64
000119dd: VF := 0
000119e0: CF := 1
000119e4: ZF := R0 = 0
000119e8: NF := 63:63[R0]
00019788: goto %000115dd

000115dd:
000115e5: R0 := 0x422000
000115eb: R0 := R0 + 0x4E8
000115f2: R0 := mem[R0, el]:u64
000115f9: R0 := mem[R0, el]:u64
00011600: R0 := mem[R0, el]:u64
00011607: R0 := pad:64[mem[R0, el]:u32]
0001160e: R1 := pad:64[mem[R31 + 0xE14, el]:u32]
00011615: R0 := pad:64[31:0[R1] | 31:0[R0]]
0001161d: mem := mem with [R31 + 0xE14, el]:u32 <- 31:0[R0]
00011622: R0 := 0x422000
00011628: R0 := R0 + 0x768
0001162f: R0 := mem[R0, el]:u64
00011636: R1 := mem[R0, el]:u64
0001163d: R0 := pad:64[mem[R1, el]:u16]
00011643: R2 := pad:64[31:0[R0] - 1]
00011649: R2 := pad:64[15:0[R2]]
00011651: mem := mem with [R1, el]:u16 <- 15:0[R2]
00011656: VF := 0
00011659: CF := 1
0001165d: ZF := 31:0[R0] = 0
00011661: NF := 31:31[R0]
00011667: when ZF <> 1 goto %00011665
00019789: goto %00011756

00011756:
0001175b: R0 := mem[R31 + 0xD58, el]:u64
00011761: R1 := pad:64[extend:32[7:0[R0]]]
00011768: R0 := pad:64[extend:32[mem[R31 + 0xD42, el]:u16]]
0001176d: VF := 0
00011770: CF := 1
00011774: ZF := 31:0[R0] = 0
00011778: NF := 31:31[R0]
0001177e: when ZF <> 1 goto %0001177c
0001978a: goto %000118ee

000118ee:
000118f3: R2 := pad:64[mem[R31 + 0xA44, el]:u32]
000118f8: R0 := 0x420000
000118fe: R0 := R0 + 0x78
00011904: R2 := extend:64[31:0[R2]]
0001190c: R0 := pad:64[mem[R0 + (61:0[R2].0), el]:u32]
00011912: R0 := pad:64[extend:32[15:0[R0]]]
00011918: R2 := pad:64[31:0[R0]]
0001191f: R0 := pad:64[mem[R31 + 0x996]]
00011925: R3 := pad:64[31:0[R0]]
0001192c: R0 := pad:64[mem[R31 + 0xDB4, el]:u32]
00011932: #188 := ~31:0[R3]
00011937: #189 := 31:0[R0] + ~31:0[R3]
0001193d: VF := extend:64[#189 + 1] <> extend:64[31:0[R0]] + extend:64[#188]
          + 1
00011943: CF := pad:64[#189 + 1] <> pad:64[31:0[R0]] + pad:64[#188] + 1
00011947: ZF := #189 + 1 = 0
0001194b: NF := 31:31[#189 + 1]
00011957: when ZF <> 1 goto %00011950
00011958: goto %00011953

00011953:
00011954: R0 := 1
0001195a: goto %00011956

00011950:
00011951: R0 := 0
00011959: goto %00011956

00011956:
00011960: R0 := pad:64[7:0[R0]]
00011966: R3 := pad:64[31:0[R0]]
0001196d: R0 := pad:64[mem[R31 + 0xD54, el]:u32]
00011973: #190 := ~31:0[R3]
00011978: #191 := 31:0[R0] + ~31:0[R3]
0001197e: VF := extend:64[#191 + 1] <> extend:64[31:0[R0]] + extend:64[#190]
          + 1
00011984: CF := pad:64[#191 + 1] <> pad:64[31:0[R0]] + pad:64[#190] + 1
00011988: ZF := #191 + 1 = 0
0001198c: NF := 31:31[#191 + 1]
00011998: when ZF <> 1 goto %00011991
00011999: goto %00011994

00011994:
00011995: R0 := 1
0001199b: goto %00011997

00011991:
00011992: R0 := 0
0001199a: goto %00011997

00011997:
000119a1: R0 := pad:64[7:0[R0]]
000119a8: R0 := pad:64[31:0[R2] + 31:0[R0]]
000119ad: VF := 0
000119b0: CF := 1
000119b4: ZF := 31:0[R0] = 0
000119b8: NF := 31:31[R0]
000119bd: when ZF goto %000118e9
0001978b: goto %0001177c

000118e9:
000118ec: R0 := 0
0001978c: goto %00011787

0001177c:
00011784: R0 := 1
00011789: goto %00011787

00011787:
0001178f: R2 := pad:64[mem[R31 + 0x997]]
00011795: #184 := ~31:0[R2]
0001179a: #185 := 31:0[R0] + ~31:0[R2]
000117a0: VF := extend:64[#185 + 1] <> extend:64[31:0[R0]] + extend:64[#184]
          + 1
000117a6: CF := pad:64[#185 + 1] <> pad:64[31:0[R0]] + pad:64[#184] + 1
000117aa: ZF := #185 + 1 = 0
000117ae: NF := 31:31[#185 + 1]
000117ba: when ZF <> 1 goto %000117b3
000117bb: goto %000117b6

000117b6:
000117b7: R0 := 1
000117bd: goto %000117b9

000117b3:
000117b4: R0 := 0
000117bc: goto %000117b9

000117b9:
000117c3: R0 := pad:64[7:0[R0]]
000117c9: R0 := pad:64[extend:32[7:0[R0]]]
000117d0: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
000117d6: R0 := pad:64[extend:32[7:0[R0]]]
000117dc: R0 := pad:64[7:0[R0]]
000117e2: R1 := pad:64[31:0[R0]]
000117e7: R0 := 0x420000
000117ed: R0 := R0 + 0x210
000117f4: R0 := pad:64[mem[R0 + 0xC, el]:u32]
000117fa: R0 := pad:64[7:0[R0]]
00011801: R0 := pad:64[31:0[R1] * 31:0[R0]]
00011806: VF := 0
00011809: CF := 1
0001180d: ZF := 31:0[R0] = 0
00011811: NF := 31:31[R0]
00011817: when ZF <> 1 goto %00011815
0001978d: goto %000118d2

000118d2:
000118d7: R0 := pad:64[mem[R31 + 0xE14, el]:u32]
000118dc: VF := 0
000118df: CF := 1
000118e3: ZF := 31:0[R0] = 0
000118e7: NF := 31:31[R0]
0001978e: goto %00011815

00011815:
0001181f: R0 := mem[R31 + 0xD58, el]:u64
00011825: R3 := pad:64[31:0[R0]]
0001182a: R0 := 0x422000
00011830: R0 := R0 + 0x6F8
00011837: R0 := mem[R0, el]:u64
0001183e: R0 := mem[R0, el]:u64
00011845: R0 := mem[R0, el]:u64
0001184c: R1 := mem[R0, el]:u64
00011853: R0 := pad:64[mem[R1, el]:u32]
00011859: R2 := pad:64[31:0[R0] - 1]
00011861: mem := mem with [R1, el]:u32 <- 31:0[R2]
00011868: R1 := pad:64[31:0[R3] + 31:0[R0]]
0001186d: R0 := 0xDD43
00011873: R0 := pad:64[0xF596.15:0[R0]]
00011879: #186 := ~31:0[R0]
0001187e: #187 := 31:0[R1] + ~31:0[R0]
00011884: VF := extend:64[#187 + 1] <> extend:64[31:0[R1]] + extend:64[#186]
          + 1
0001188a: CF := pad:64[#187 + 1] <> pad:64[31:0[R1]] + pad:64[#186] + 1
0001188e: ZF := #187 + 1 = 0
00011892: NF := 31:31[#187 + 1]
00011897: when ZF <> 1 goto %00011665
0001978f: goto %0001189b

0001189b:
0001189e: R0 := 0x423000
000118a4: R0 := R0 + 0x4E8
000118ab: R0 := mem[R0, el]:u64
000118b2: R0 := mem[R0, el]:u64
000118b9: R0 := mem[R0, el]:u64
000118be: VF := 0
000118c1: CF := 1
000118c5: ZF := R0 = 0
000118c9: NF := 63:63[R0]
000118ce: when ZF goto %00011751
00019790: goto %00011665

00011751:
00011754: R2 := 0
00019791: goto %00011670

00011665:
0001166d: R2 := 1
00011672: goto %00011670

00011670:
00011678: R0 := mem[R31 + 0xD30, el]:u64
0001167f: R1 := mem[R0, el]:u64
00011685: R0 := extend:64[31:0[R2]]
0001168c: R1 := R1 ^ R0
00011693: R0 := mem[R31 + 0xD30, el]:u64
0001169b: mem := mem with [R0, el]:u64 <- R1
000116a2: R0 := pad:64[extend:32[mem[R31 + 0xD8C, el]:u16]]
000116a8: R2 := pad:64[31:0[R0]]
000116ad: R0 := 0x422000
000116b3: R0 := R0 + 0x4E0
000116ba: R0 := mem[R0, el]:u64
000116c1: R0 := mem[R0, el]:u64
000116c8: R1 := pad:64[mem[R0, el]:u32]
000116cd: R0 := 0x422000
000116d3: R0 := R0 + 0x4E0
000116da: R0 := mem[R0, el]:u64
000116e1: R0 := mem[R0, el]:u64
000116e8: R1 := pad:64[31:0[R2] | 31:0[R1]]
000116f0: mem := mem with [R0, el]:u32 <- 31:0[R1]
000116f7: R2 := pad:64[extend:32[mem[R31 + 0xE1F]]]
000116fe: R1 := pad:64[mem[R31 + 0xA44, el]:u32]
00011703: R0 := 0x420000
00011709: R0 := R0 + 0xD0
0001170f: R1 := extend:64[31:0[R1]]
00011715: R2 := extend:64[31:0[R2]]
0001171b: R2 := 62:0[R2].0
00011722: R1 := R2 + R1
0001172a: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001172f: VF := 0
00011732: CF := 1
00011736: ZF := 31:0[R0] = 0
0001173a: NF := 31:31[R0]
00011741: R0 := pad:64[mem[R31 + 0xA44, el]:u32]
00011747: R0 := pad:64[31:0[R0] - 1]
0001174f: mem := mem with [R31 + 0xA44, el]:u32 <- 31:0[R0]
00019792: goto %000112f3

00012539:
0001253e: mem := mem with [R31 + 0x9B8, el]:u64 <- 0
00012543: R0 := 0xBAF9
00012549: R0 := pad:64[0x772C.15:0[R0]]
00012551: mem := mem with [R31 + 0xD2C, el]:u32 <- 31:0[R0]
00012556: R0 := 0x583C
0001255c: R0 := pad:64[0x32A8.15:0[R0]]
00012564: mem := mem with [R31 + 0xD28, el]:u32 <- 31:0[R0]
00012569: R0 := 0x746C
00012571: mem := mem with [R31 + 0xD26, el]:u16 <- 15:0[R0]
00012576: R0 := 0xFFFFFFFD
0001257e: mem := mem with [R31 + 0xD20, el]:u32 <- 31:0[R0]
00012583: R0 := 0xFFFFFFFF
0001258b: mem := mem with [R31 + 0xD1E, el]:u16 <- 15:0[R0]
00012590: R0 := 0xD34C
00012596: R0 := pad:64[0xB6EE.15:0[R0]]
0001259e: mem := mem with [R31 + 0xD18, el]:u32 <- 31:0[R0]
000125a3: R0 := 0x423000
000125a9: R0 := R0 + 0xA18
000125b1: mem := mem with [R31 + 0xD10, el]:u64 <- R0
000125b6: R0 := 0xFFFFFFFF
000125be: mem := mem with [R31 + 0xD0E, el]:u16 <- 15:0[R0]
000125c3: R0 := 0x422000
000125c9: R0 := R0 + 0x768
000125d1: mem := mem with [R31 + 0xD00, el]:u64 <- R0
000125d6: R0 := 0x127C
000125dc: R0 := pad:64[0xF5C5.15:0[R0]]
000125e4: mem := mem with [R31 + 0xCFC, el]:u32 <- 31:0[R0]
000125e9: R0 := 0xFFFFFFFF
000125f1: mem := mem with [R31 + 0xCF8, el]:u32 <- 31:0[R0]
000125f6: R0 := 0xC811
000125fc: R0 := pad:64[0x422C.15:0[R0]]
00012604: mem := mem with [R31 + 0xCF4, el]:u32 <- 31:0[R0]
00012609: R0 := 0x408000
0001260f: R1 := R0 + 0xC10
00012615: R0 := R31 + 0x28
0001261c: V0 := mem[R1, el]:u128
00012621: V1 := mem[R1 + 0x10, el]:u128
00012629: mem := mem with [R0, el]:u128 <- V0
0001262f: mem := mem with [R0 + 0x10, el]:u128 <- V1
00012636: R1 := mem[R1 + 0x20, el]:u64
0001263e: mem := mem with [R0 + 0x20, el]:u64 <- R1
00012643: R0 := 1
0001264b: mem := mem with [R31 + 0xCF0, el]:u32 <- 31:0[R0]
00012650: R0 := 0x53
00012658: mem := mem with [R31 + 0xCEF] <- 7:0[R0]
0001265f: mem := mem with [R31 + 0x9A8, el]:u64 <- 0
00012664: R0 := 0x420000
0001266a: R0 := R0 + 0x98
00012672: mem := mem with [R31 + 0x1A8, el]:u64 <- R0
00012677: R0 := 0x420000
0001267d: R0 := R0 + 0x98
00012685: mem := mem with [R31 + 0x1B0, el]:u64 <- R0
0001268b: R0 := R31 + 0x9B8
00012693: mem := mem with [R31 + 0x1B8, el]:u64 <- R0
00012698: R0 := 0x420000
0001269e: R0 := R0 + 0x98
000126a6: mem := mem with [R31 + 0x1C0, el]:u64 <- R0
000126ab: R0 := 0x420000
000126b1: R0 := R0 + 0x98
000126b9: mem := mem with [R31 + 0x1C8, el]:u64 <- R0
000126c0: mem := mem with [R31 + 0x1D0, el]:u64 <- 0
000126c7: mem := mem with [R31 + 0x1D8, el]:u64 <- 0
000126ce: mem := mem with [R31 + 0x1E0, el]:u64 <- 0
000126d5: mem := mem with [R31 + 0x1E8, el]:u64 <- 0
000126db: R0 := R31 + 0x9B8
000126e3: mem := mem with [R31 + 0x1F0, el]:u64 <- R0
000126e8: R0 := 0x420000
000126ee: R0 := R0 + 0x98
000126f6: mem := mem with [R31 + 0x1F8, el]:u64 <- R0
000126fb: R0 := 0x420000
00012701: R0 := R0 + 0x98
00012709: mem := mem with [R31 + 0x200, el]:u64 <- R0
0001270e: R0 := 0x420000
00012714: R0 := R0 + 0x98
0001271c: mem := mem with [R31 + 0x208, el]:u64 <- R0
00012722: R0 := R31 + 0x9B8
0001272a: mem := mem with [R31 + 0x210, el]:u64 <- R0
00012730: R0 := R31 + 0x9B8
00012738: mem := mem with [R31 + 0x218, el]:u64 <- R0
0001273e: R0 := R31 + 0x9B8
00012746: mem := mem with [R31 + 0x220, el]:u64 <- R0
0001274d: mem := mem with [R31 + 0x228, el]:u64 <- 0
00012752: R0 := 0x420000
00012758: R0 := R0 + 0x90
00012760: mem := mem with [R31 + 0x230, el]:u64 <- R0
00012765: R0 := 0x420000
0001276b: R0 := R0 + 0x98
00012773: mem := mem with [R31 + 0x238, el]:u64 <- R0
00012778: R0 := 0x420000
0001277e: R0 := R0 + 0x98
00012786: mem := mem with [R31 + 0x240, el]:u64 <- R0
0001278b: R0 := 0x420000
00012791: R0 := R0 + 0x98
00012799: mem := mem with [R31 + 0x248, el]:u64 <- R0
000127a0: mem := mem with [R31 + 0x250, el]:u64 <- 0
000127a6: R0 := R31 + 0x9B8
000127ae: mem := mem with [R31 + 0x258, el]:u64 <- R0
000127b5: mem := mem with [R31 + 0x260, el]:u64 <- 0
000127ba: R0 := 0x420000
000127c0: R0 := R0 + 0x98
000127c8: mem := mem with [R31 + 0x268, el]:u64 <- R0
000127cd: R0 := 0x420000
000127d3: R0 := R0 + 0x90
000127db: mem := mem with [R31 + 0x270, el]:u64 <- R0
000127e0: R0 := 0x420000
000127e6: R0 := R0 + 0x98
000127ee: mem := mem with [R31 + 0x278, el]:u64 <- R0
000127f3: R0 := 0x420000
000127f9: R0 := R0 + 0x98
00012801: mem := mem with [R31 + 0x280, el]:u64 <- R0
00012806: R0 := 0x420000
0001280c: R0 := R0 + 0x90
00012814: mem := mem with [R31 + 0x288, el]:u64 <- R0
00012819: R0 := 0x420000
0001281f: R0 := R0 + 0x90
00012827: mem := mem with [R31 + 0x290, el]:u64 <- R0
0001282c: R0 := 0x420000
00012832: R0 := R0 + 0x98
0001283a: mem := mem with [R31 + 0x298, el]:u64 <- R0
0001283f: R0 := 0x420000
00012845: R0 := R0 + 0x90
0001284d: mem := mem with [R31 + 0x2A0, el]:u64 <- R0
00012852: R0 := 0x420000
00012858: R0 := R0 + 0x98
00012860: mem := mem with [R31 + 0x2A8, el]:u64 <- R0
00012866: R0 := R31 + 0x9B8
0001286e: mem := mem with [R31 + 0x2B0, el]:u64 <- R0
00012873: R0 := 0x420000
00012879: R0 := R0 + 0x98
00012881: mem := mem with [R31 + 0x2B8, el]:u64 <- R0
00012887: R0 := R31 + 0x9B8
0001288f: mem := mem with [R31 + 0x2C0, el]:u64 <- R0
00012894: R0 := 0x420000
0001289a: R0 := R0 + 0x90
000128a2: mem := mem with [R31 + 0x2C8, el]:u64 <- R0
000128a7: R0 := 0x420000
000128ad: R0 := R0 + 0x90
000128b5: mem := mem with [R31 + 0x2D0, el]:u64 <- R0
000128bc: mem := mem with [R31 + 0x2D8, el]:u64 <- 0
000128c1: R0 := 0x420000
000128c7: R0 := R0 + 0x98
000128cf: mem := mem with [R31 + 0x2E0, el]:u64 <- R0
000128d4: R0 := 0x420000
000128da: R0 := R0 + 0x90
000128e2: mem := mem with [R31 + 0x2E8, el]:u64 <- R0
000128e7: R0 := 0x420000
000128ed: R0 := R0 + 0x98
000128f5: mem := mem with [R31 + 0x2F0, el]:u64 <- R0
000128fb: R0 := R31 + 0x9B8
00012903: mem := mem with [R31 + 0x2F8, el]:u64 <- R0
00012908: R0 := 0x420000
0001290e: R0 := R0 + 0x98
00012916: mem := mem with [R31 + 0x300, el]:u64 <- R0
0001291b: R0 := 0x420000
00012921: R0 := R0 + 0x98
00012929: mem := mem with [R31 + 0x308, el]:u64 <- R0
0001292f: R0 := R31 + 0x9B8
00012937: mem := mem with [R31 + 0x310, el]:u64 <- R0
0001293c: R0 := 0x420000
00012942: R0 := R0 + 0x98
0001294a: mem := mem with [R31 + 0x318, el]:u64 <- R0
0001294f: R0 := 0x420000
00012955: R0 := R0 + 0x90
0001295d: mem := mem with [R31 + 0x320, el]:u64 <- R0
00012962: R0 := 0x420000
00012968: R0 := R0 + 0x98
00012970: mem := mem with [R31 + 0x328, el]:u64 <- R0
00012975: R0 := 0x420000
0001297b: R0 := R0 + 0x98
00012983: mem := mem with [R31 + 0x330, el]:u64 <- R0
00012988: R0 := 0x420000
0001298e: R0 := R0 + 0x90
00012996: mem := mem with [R31 + 0x338, el]:u64 <- R0
0001299b: R0 := 0x420000
000129a1: R0 := R0 + 0x90
000129a9: mem := mem with [R31 + 0x340, el]:u64 <- R0
000129ae: R0 := 0x420000
000129b4: R0 := R0 + 0x98
000129bc: mem := mem with [R31 + 0x348, el]:u64 <- R0
000129c1: R0 := 0x420000
000129c7: R0 := R0 + 0x90
000129cf: mem := mem with [R31 + 0x350, el]:u64 <- R0
000129d4: R0 := 0x420000
000129da: R0 := R0 + 0x98
000129e2: mem := mem with [R31 + 0x358, el]:u64 <- R0
000129e7: R0 := 0x420000
000129ed: R0 := R0 + 0x98
000129f5: mem := mem with [R31 + 0x360, el]:u64 <- R0
000129fa: R0 := 0x420000
00012a00: R0 := R0 + 0x90
00012a08: mem := mem with [R31 + 0x368, el]:u64 <- R0
00012a0e: R0 := R31 + 0x9B8
00012a16: mem := mem with [R31 + 0x370, el]:u64 <- R0
00012a1d: mem := mem with [R31 + 0x378, el]:u64 <- 0
00012a22: R0 := 0x420000
00012a28: R0 := R0 + 0x98
00012a30: mem := mem with [R31 + 0x380, el]:u64 <- R0
00012a35: R0 := 0x420000
00012a3b: R0 := R0 + 0x98
00012a43: mem := mem with [R31 + 0x388, el]:u64 <- R0
00012a4a: mem := mem with [R31 + 0x390, el]:u64 <- 0
00012a4f: R0 := 0x420000
00012a55: R0 := R0 + 0x90
00012a5d: mem := mem with [R31 + 0x398, el]:u64 <- R0
00012a62: R0 := 0x420000
00012a68: R0 := R0 + 0x90
00012a70: mem := mem with [R31 + 0x3A0, el]:u64 <- R0
00012a76: R0 := R31 + 0x9B8
00012a7e: mem := mem with [R31 + 0x3A8, el]:u64 <- R0
00012a83: R0 := 0x420000
00012a89: R0 := R0 + 0x90
00012a91: mem := mem with [R31 + 0x3B0, el]:u64 <- R0
00012a97: R0 := R31 + 0x9B8
00012a9f: mem := mem with [R31 + 0x3B8, el]:u64 <- R0
00012aa4: R0 := 0x420000
00012aaa: R0 := R0 + 0x90
00012ab2: mem := mem with [R31 + 0x3C0, el]:u64 <- R0
00012ab7: R0 := 0x420000
00012abd: R0 := R0 + 0x98
00012ac5: mem := mem with [R31 + 0x3C8, el]:u64 <- R0
00012aca: R0 := 0x420000
00012ad0: R0 := R0 + 0x98
00012ad8: mem := mem with [R31 + 0x3D0, el]:u64 <- R0
00012ade: R0 := R31 + 0x9B8
00012ae6: mem := mem with [R31 + 0x3D8, el]:u64 <- R0
00012aeb: R0 := 0x420000
00012af1: R0 := R0 + 0x98
00012af9: mem := mem with [R31 + 0x3E0, el]:u64 <- R0
00012aff: R0 := R31 + 0x9B8
00012b07: mem := mem with [R31 + 0x3E8, el]:u64 <- R0
00012b0c: R0 := 0x420000
00012b12: R0 := R0 + 0x98
00012b1a: mem := mem with [R31 + 0x3F0, el]:u64 <- R0
00012b21: mem := mem with [R31 + 0x3F8, el]:u64 <- 0
00012b28: mem := mem with [R31 + 0x400, el]:u64 <- 0
00012b2d: R0 := 0x420000
00012b33: R0 := R0 + 0x98
00012b3b: mem := mem with [R31 + 0x408, el]:u64 <- R0
00012b40: R0 := 0x420000
00012b46: R0 := R0 + 0x98
00012b4e: mem := mem with [R31 + 0x410, el]:u64 <- R0
00012b55: mem := mem with [R31 + 0x418, el]:u64 <- 0
00012b5b: R0 := R31 + 0x9B8
00012b63: mem := mem with [R31 + 0x420, el]:u64 <- R0
00012b6a: mem := mem with [R31 + 0x428, el]:u64 <- 0
00012b6f: R0 := 0x420000
00012b75: R0 := R0 + 0x98
00012b7d: mem := mem with [R31 + 0x430, el]:u64 <- R0
00012b82: R0 := 0x420000
00012b88: R0 := R0 + 0x90
00012b90: mem := mem with [R31 + 0x438, el]:u64 <- R0
00012b95: R0 := 0x420000
00012b9b: R0 := R0 + 0x98
00012ba3: mem := mem with [R31 + 0x440, el]:u64 <- R0
00012ba8: R0 := 0x420000
00012bae: R0 := R0 + 0x98
00012bb6: mem := mem with [R31 + 0x448, el]:u64 <- R0
00012bbc: R0 := R31 + 0x9B8
00012bc4: mem := mem with [R31 + 0x450, el]:u64 <- R0
00012bc9: R0 := 0x420000
00012bcf: R0 := R0 + 0x98
00012bd7: mem := mem with [R31 + 0x458, el]:u64 <- R0
00012bdc: R0 := 0x420000
00012be2: R0 := R0 + 0x98
00012bea: mem := mem with [R31 + 0x460, el]:u64 <- R0
00012bf0: R0 := R31 + 0x9B8
00012bf8: mem := mem with [R31 + 0x468, el]:u64 <- R0
00012bfd: R0 := 0x420000
00012c03: R0 := R0 + 0x98
00012c0b: mem := mem with [R31 + 0x470, el]:u64 <- R0
00012c12: mem := mem with [R31 + 0x478, el]:u64 <- 0
00012c18: R0 := R31 + 0x9B8
00012c20: mem := mem with [R31 + 0x480, el]:u64 <- R0
00012c26: R0 := R31 + 0x9B8
00012c2e: mem := mem with [R31 + 0x488, el]:u64 <- R0
00012c35: mem := mem with [R31 + 0x490, el]:u64 <- 0
00012c3a: R0 := 0x420000
00012c40: R0 := R0 + 0x98
00012c48: mem := mem with [R31 + 0x498, el]:u64 <- R0
00012c4d: R0 := 0x420000
00012c53: R0 := R0 + 0x90
00012c5b: mem := mem with [R31 + 0x4A0, el]:u64 <- R0
00012c62: mem := mem with [R31 + 0x4A8, el]:u64 <- 0
00012c67: R0 := 0x420000
00012c6d: R0 := R0 + 0x98
00012c75: mem := mem with [R31 + 0x4B0, el]:u64 <- R0
00012c7a: R0 := 0x420000
00012c80: R0 := R0 + 0x90
00012c88: mem := mem with [R31 + 0x4B8, el]:u64 <- R0
00012c8f: mem := mem with [R31 + 0x4C0, el]:u64 <- 0
00012c94: R0 := 0x420000
00012c9a: R0 := R0 + 0x90
00012ca2: mem := mem with [R31 + 0x4C8, el]:u64 <- R0
00012ca7: R0 := 0x420000
00012cad: R0 := R0 + 0x90
00012cb5: mem := mem with [R31 + 0x4D0, el]:u64 <- R0
00012cba: R0 := 0x420000
00012cc0: R0 := R0 + 0x98
00012cc8: mem := mem with [R31 + 0x4D8, el]:u64 <- R0
00012ccd: R0 := 0x420000
00012cd3: R0 := R0 + 0x98
00012cdb: mem := mem with [R31 + 0x4E0, el]:u64 <- R0
00012ce1: R0 := R31 + 0x9B8
00012ce9: mem := mem with [R31 + 0x4E8, el]:u64 <- R0
00012cee: R0 := 0x420000
00012cf4: R0 := R0 + 0x90
00012cfc: mem := mem with [R31 + 0x4F0, el]:u64 <- R0
00012d02: R0 := R31 + 0x9B8
00012d0a: mem := mem with [R31 + 0x4F8, el]:u64 <- R0
00012d0f: R0 := 0x420000
00012d15: R0 := R0 + 0x98
00012d1d: mem := mem with [R31 + 0x500, el]:u64 <- R0
00012d22: R0 := 0x420000
00012d28: R0 := R0 + 0x98
00012d30: mem := mem with [R31 + 0x508, el]:u64 <- R0
00012d36: R0 := R31 + 0x9B8
00012d3e: mem := mem with [R31 + 0x510, el]:u64 <- R0
00012d43: R0 := 0x420000
00012d49: R0 := R0 + 0x90
00012d51: mem := mem with [R31 + 0x518, el]:u64 <- R0
00012d56: R0 := 0x420000
00012d5c: R0 := R0 + 0x98
00012d64: mem := mem with [R31 + 0x520, el]:u64 <- R0
00012d6b: mem := mem with [R31 + 0x528, el]:u64 <- 0
00012d71: R0 := R31 + 0x9B8
00012d79: mem := mem with [R31 + 0x530, el]:u64 <- R0
00012d7e: R0 := 0x420000
00012d84: R0 := R0 + 0x90
00012d8c: mem := mem with [R31 + 0x538, el]:u64 <- R0
00012d91: R0 := 0x420000
00012d97: R0 := R0 + 0x90
00012d9f: mem := mem with [R31 + 0x540, el]:u64 <- R0
00012da6: mem := mem with [R31 + 0x548, el]:u64 <- 0
00012dab: R0 := 0x420000
00012db1: R0 := R0 + 0x98
00012db9: mem := mem with [R31 + 0x550, el]:u64 <- R0
00012dbe: R0 := 0x420000
00012dc4: R0 := R0 + 0x90
00012dcc: mem := mem with [R31 + 0x558, el]:u64 <- R0
00012dd1: R0 := 0x420000
00012dd7: R0 := R0 + 0x98
00012ddf: mem := mem with [R31 + 0x560, el]:u64 <- R0
00012de6: mem := mem with [R31 + 0x568, el]:u64 <- 0
00012deb: R0 := 0x420000
00012df1: R0 := R0 + 0x90
00012df9: mem := mem with [R31 + 0x570, el]:u64 <- R0
00012e00: mem := mem with [R31 + 0x578, el]:u64 <- 0
00012e07: mem := mem with [R31 + 0x580, el]:u64 <- 0
00012e0c: R0 := 0x420000
00012e12: R0 := R0 + 0x90
00012e1a: mem := mem with [R31 + 0x588, el]:u64 <- R0
00012e21: mem := mem with [R31 + 0x590, el]:u64 <- 0
00012e26: R0 := 0x420000
00012e2c: R0 := R0 + 0x98
00012e34: mem := mem with [R31 + 0x598, el]:u64 <- R0
00012e39: R0 := 0x420000
00012e3f: R0 := R0 + 0x98
00012e47: mem := mem with [R31 + 0x5A0, el]:u64 <- R0
00012e4c: R0 := 0x420000
00012e52: R0 := R0 + 0x98
00012e5a: mem := mem with [R31 + 0x5A8, el]:u64 <- R0
00012e5f: R0 := 0x420000
00012e65: R0 := R0 + 0x90
00012e6d: mem := mem with [R31 + 0x5B0, el]:u64 <- R0
00012e74: mem := mem with [R31 + 0x5B8, el]:u64 <- 0
00012e79: R0 := 0x420000
00012e7f: R0 := R0 + 0x98
00012e87: mem := mem with [R31 + 0x5C0, el]:u64 <- R0
00012e8c: R0 := 0x420000
00012e92: R0 := R0 + 0x90
00012e9a: mem := mem with [R31 + 0x5C8, el]:u64 <- R0
00012ea0: R0 := R31 + 0x9B8
00012ea8: mem := mem with [R31 + 0x5D0, el]:u64 <- R0
00012eae: R0 := R31 + 0x9B8
00012eb6: mem := mem with [R31 + 0x5D8, el]:u64 <- R0
00012ebb: R0 := 0x420000
00012ec1: R0 := R0 + 0x90
00012ec9: mem := mem with [R31 + 0x5E0, el]:u64 <- R0
00012ecf: R0 := R31 + 0x9B8
00012ed7: mem := mem with [R31 + 0x5E8, el]:u64 <- R0
00012ede: mem := mem with [R31 + 0x5F0, el]:u64 <- 0
00012ee5: mem := mem with [R31 + 0x5F8, el]:u64 <- 0
00012eeb: R0 := R31 + 0x9B8
00012ef3: mem := mem with [R31 + 0x600, el]:u64 <- R0
00012ef8: R0 := 0x420000
00012efe: R0 := R0 + 0x90
00012f06: mem := mem with [R31 + 0x608, el]:u64 <- R0
00012f0c: R0 := R31 + 0x9B8
00012f14: mem := mem with [R31 + 0x610, el]:u64 <- R0
00012f1b: mem := mem with [R31 + 0x618, el]:u64 <- 0
00012f20: R0 := 0x420000
00012f26: R0 := R0 + 0x90
00012f2e: mem := mem with [R31 + 0x620, el]:u64 <- R0
00012f33: R0 := 0x420000
00012f39: R0 := R0 + 0x98
00012f41: mem := mem with [R31 + 0x628, el]:u64 <- R0
00012f48: mem := mem with [R31 + 0x630, el]:u64 <- 0
00012f4d: R0 := 0x420000
00012f53: R0 := R0 + 0x98
00012f5b: mem := mem with [R31 + 0x638, el]:u64 <- R0
00012f60: R0 := 0x420000
00012f66: R0 := R0 + 0x90
00012f6e: mem := mem with [R31 + 0x640, el]:u64 <- R0
00012f74: R0 := R31 + 0x9B8
00012f7c: mem := mem with [R31 + 0x648, el]:u64 <- R0
00012f81: R0 := 0x420000
00012f87: R0 := R0 + 0x98
00012f8f: mem := mem with [R31 + 0x650, el]:u64 <- R0
00012f96: mem := mem with [R31 + 0x658, el]:u64 <- 0
00012f9c: R0 := R31 + 0x9B8
00012fa4: mem := mem with [R31 + 0x660, el]:u64 <- R0
00012faa: R0 := R31 + 0x9B8
00012fb2: mem := mem with [R31 + 0x668, el]:u64 <- R0
00012fb7: R0 := 0x420000
00012fbd: R0 := R0 + 0x90
00012fc5: mem := mem with [R31 + 0x670, el]:u64 <- R0
00012fca: R0 := 0x420000
00012fd0: R0 := R0 + 0x98
00012fd8: mem := mem with [R31 + 0x678, el]:u64 <- R0
00012fdd: R0 := 0x420000
00012fe3: R0 := R0 + 0x98
00012feb: mem := mem with [R31 + 0x680, el]:u64 <- R0
00012ff1: R0 := R31 + 0x9B8
00012ff9: mem := mem with [R31 + 0x688, el]:u64 <- R0
00012ffe: R0 := 0x420000
00013004: R0 := R0 + 0x90
0001300c: mem := mem with [R31 + 0x690, el]:u64 <- R0
00013012: R0 := R31 + 0x9B8
0001301a: mem := mem with [R31 + 0x698, el]:u64 <- R0
00013020: R0 := R31 + 0x9B8
00013028: mem := mem with [R31 + 0x6A0, el]:u64 <- R0
0001302d: R0 := 0x420000
00013033: R0 := R0 + 0x90
0001303b: mem := mem with [R31 + 0x6A8, el]:u64 <- R0
00013041: R0 := R31 + 0x9B8
00013049: mem := mem with [R31 + 0x6B0, el]:u64 <- R0
0001304e: R0 := 0x420000
00013054: R0 := R0 + 0x98
0001305c: mem := mem with [R31 + 0x6B8, el]:u64 <- R0
00013062: R0 := R31 + 0x9B8
0001306a: mem := mem with [R31 + 0x6C0, el]:u64 <- R0
0001306f: R0 := 0x420000
00013075: R0 := R0 + 0x98
0001307d: mem := mem with [R31 + 0x6C8, el]:u64 <- R0
00013082: R0 := 0x420000
00013088: R0 := R0 + 0x98
00013090: mem := mem with [R31 + 0x6D0, el]:u64 <- R0
00013095: R0 := 0x420000
0001309b: R0 := R0 + 0x98
000130a3: mem := mem with [R31 + 0x6D8, el]:u64 <- R0
000130a8: R0 := 0x420000
000130ae: R0 := R0 + 0x90
000130b6: mem := mem with [R31 + 0x6E0, el]:u64 <- R0
000130bb: R0 := 0xFFFFFFF8
000130c3: mem := mem with [R31 + 0xCE8, el]:u32 <- 31:0[R0]
000130c8: R0 := 0xD72B
000130ce: R0 := pad:64[0x6AD5.15:0[R0]]
000130d6: mem := mem with [R31 + 0xCE4, el]:u32 <- 31:0[R0]
000130db: R0 := 0x2F2E
000130e2: R0 := 63:32[R0].0x40D1.15:0[R0]
000130e9: R0 := 63:48[R0].0xCCC9.31:0[R0]
000130ef: R0 := 0xC13A.47:0[R0]
000130f7: mem := mem with [R31 + 0xCD8, el]:u64 <- R0
000130fc: R0 := 9
00013104: mem := mem with [R31 + 0xCD4, el]:u32 <- 31:0[R0]
00013109: R0 := 0x421000
0001310f: R0 := R0 + 0xF98
00013117: mem := mem with [R31 + 0xCC8, el]:u64 <- R0
0001311c: R0 := 3
00013124: mem := mem with [R31 + 0xCC0, el]:u64 <- R0
00013129: R0 := 0x408000
0001312f: R1 := R0 + 0xC38
00013135: R0 := R31 + 0x998
0001313c: R2 := mem[R1, el]:u64
00013144: mem := mem with [R0, el]:u64 <- R2
0001314b: R1 := mem[R1 + 6, el]:u64
00013153: mem := mem with [R0 + 6, el]:u64 <- R1
00013158: R0 := 0x47F2
00013160: mem := mem with [R31 + 0xCBE, el]:u16 <- 15:0[R0]
00013165: R0 := 0xABC
0001316b: R0 := pad:64[0x3F69.15:0[R0]]
00013173: mem := mem with [R31 + 0xCB8, el]:u32 <- 31:0[R0]
00013178: R0 := 0xFFFFFFD2
00013180: mem := mem with [R31 + 0xCB7] <- 7:0[R0]
00013185: R0 := 7
0001318d: mem := mem with [R31 + 0xCB0, el]:u32 <- 31:0[R0]
00013194: mem := mem with [R31 + 0xCA8, el]:u64 <- 0
00013199: R0 := 0x2B
000131a1: mem := mem with [R31 + 0xCA7] <- 7:0[R0]
000131a6: R0 := 0x420000
000131ac: R0 := R0 + 0x258
000131b4: mem := mem with [R31 + 0xC98, el]:u64 <- R0
000131b9: R0 := 0x5802
000131c1: mem := mem with [R31 + 0xC96, el]:u16 <- 15:0[R0]
000131c6: R0 := 0x421000
000131cc: R0 := R0 + 0xF70
000131d4: mem := mem with [R31 + 0xC88, el]:u64 <- R0
000131db: mem := mem with [R31 + 0xE18, el]:u32 <- 0
000131e0: goto %000131de

000131de:
000131e6: R0 := pad:64[mem[R31 + 0xE18, el]:u32]
000131ec: #223 := 31:0[R0] - 1
000131f1: VF := extend:64[#223] <> extend:64[31:0[R0]] - 1
000131f6: CF := pad:64[#223] <> pad:64[31:0[R0]] + 0xFFFFFFFF
000131fa: ZF := #223 = 0
000131fe: NF := 31:31[#223]
00013206: when ~(NF = VF & ~ZF) goto %00013204
00019793: goto %0001323f

0001323f:
00013241: goto %00011c8f

00011c8f:
00011c92: R0 := 0x420000
00011c98: R0 := R0 + 0x98
00011c9f: R0 := mem[R0, el]:u64
00011ca5: R0 := pad:64[7:0[R0]]
00011cac: R19 := mem[R31 + 0x10, el]:u64
00011cb3: R29 := mem[R31, el]:u64
00011cb8: R30 := mem[R31 + 8, el]:u64
00011cbe: R31 := R31 + 0xE20
00011cc3: call R30 with noreturn

00013204:
0001320e: R0 := extend:64[mem[R31 + 0xE18, el]:u32]
00013214: R0 := 61:0[R0].0
0001321a: R1 := R31 + 0x9B0
0001321f: R2 := 1
00013228: mem := mem with [R1 + R0, el]:u32 <- 31:0[R2]
0001322f: R0 := pad:64[mem[R31 + 0xE18, el]:u32]
00013235: R0 := pad:64[31:0[R0] + 1]
0001323d: mem := mem with [R31 + 0xE18, el]:u32 <- 31:0[R0]
00019794: goto %000131de

00019795: sub func_27(func_27_result)
000199b3: func_27_result :: out u32 = low:32[R0]

0000fd69:
0000fd6d: R31 := R31 - 0x60
0000fd75: mem := mem with [R31 + 0x1C, el]:u32 <- 31:0[R0]
0000fd7d: mem := mem with [R31 + 0x10, el]:u64 <- R1
0000fd85: mem := mem with [R31 + 8, el]:u64 <- R2
0000fd8d: mem := mem with [R31 + 0x18, el]:u32 <- 31:0[R3]
0000fd95: mem := mem with [R31, el]:u64 <- R4
0000fd9a: R0 := 0x420000
0000fda0: R0 := R0 + 0x80
0000fda8: mem := mem with [R31 + 0x50, el]:u64 <- R0
0000fdad: R0 := 0x420000
0000fdb3: R0 := R0 + 0x64
0000fdbb: mem := mem with [R31 + 0x48, el]:u64 <- R0
0000fdc0: R0 := 0x420000
0000fdc6: R0 := R0 + 0x64
0000fdce: mem := mem with [R31 + 0x40, el]:u64 <- R0
0000fdd3: R0 := 0x420000
0000fdd9: R0 := R0 + 0x7C
0000fde1: mem := mem with [R31 + 0x38, el]:u64 <- R0
0000fde6: R0 := 0xFFFFFFFFFFFFFFF9
0000fdee: mem := mem with [R31 + 0x30, el]:u64 <- R0
0000fdf5: mem := mem with [R31 + 0x5C, el]:u32 <- 0
0000fdfa: goto %0000fdf8

0000fdf8:
0000fe00: R0 := pad:64[mem[R31 + 0x5C, el]:u32]
0000fe06: #156 := 31:0[R0] - 1
0000fe0b: VF := extend:64[#156] <> extend:64[31:0[R0]] - 1
0000fe10: CF := pad:64[#156] <> pad:64[31:0[R0]] + 0xFFFFFFFF
0000fe14: ZF := #156 = 0
0000fe18: NF := 31:31[#156]
0000fe20: when ~(NF = VF & ~ZF) goto %0000fe1e
00019796: goto %0000fe5f

0000fe5f:
0000fe64: R0 := mem[R31 + 0x30, el]:u64
0000fe6a: R0 := R0 - 1
0000fe72: mem := mem with [R31 + 0x30, el]:u64 <- R0
0000fe79: R0 := pad:64[mem[R31 + 0x1C, el]:u32]
0000fe7f: R31 := R31 + 0x60
0000fe84: call R30 with noreturn

0000fe1e:
0000fe28: R0 := extend:64[mem[R31 + 0x5C, el]:u32]
0000fe2e: R0 := 60:0[R0].0
0000fe34: R1 := R31 + 0x20
0000fe39: R2 := 0x420000
0000fe3f: R2 := R2 + 0x58
0000fe48: mem := mem with [R1 + R0, el]:u64 <- R2
0000fe4f: R0 := pad:64[mem[R31 + 0x5C, el]:u32]
0000fe55: R0 := pad:64[31:0[R0] + 1]
0000fe5d: mem := mem with [R31 + 0x5C, el]:u32 <- 31:0[R0]
00019797: goto %0000fdf8

00019798: sub func_33(func_33_result)
000199b4: func_33_result :: out u32 = low:32[R0]

0000fe86:
0000fe8a: R31 := R31 - 0x4C0
0000fe92: mem := mem with [R31, el]:u64 <- R29
0000fe98: mem := mem with [R31 + 8, el]:u64 <- R30
0000fe9e: R29 := R31
0000fea6: mem := mem with [R31 + 0x2F] <- 7:0[R0]
0000feae: mem := mem with [R31 + 0x28, el]:u32 <- 31:0[R1]
0000feb6: mem := mem with [R31 + 0x20, el]:u64 <- R2
0000febe: mem := mem with [R31 + 0x18, el]:u64 <- R3
0000fec6: mem := mem with [R31 + 0x10, el]:u64 <- R4
0000fecd: mem := mem with [R31 + 0x4B0, el]:u64 <- 0
0000fed2: R0 := 0x420000
0000fed8: R0 := R0 + 0x44
0000fee0: mem := mem with [R31 + 0x4A8, el]:u64 <- R0
0000fee5: R0 := 0x421000
0000feeb: R0 := R0 + 0xF48
0000fef3: mem := mem with [R31 + 0x3A8, el]:u64 <- R0
0000fef9: R0 := R31 + 0x3A8
0000ff01: mem := mem with [R31 + 0x3A0, el]:u64 <- R0
0000ff07: R0 := R31 + 0x3A0
0000ff0f: mem := mem with [R31 + 0x2E0, el]:u64 <- R0
0000ff15: R0 := R31 + 0x3A0
0000ff1d: mem := mem with [R31 + 0x2E8, el]:u64 <- R0
0000ff23: R0 := R31 + 0x3A0
0000ff2b: mem := mem with [R31 + 0x2F0, el]:u64 <- R0
0000ff31: R0 := R31 + 0x3A0
0000ff39: mem := mem with [R31 + 0x2F8, el]:u64 <- R0
0000ff3f: R0 := R31 + 0x3A0
0000ff47: mem := mem with [R31 + 0x300, el]:u64 <- R0
0000ff4d: R0 := R31 + 0x3A0
0000ff55: mem := mem with [R31 + 0x308, el]:u64 <- R0
0000ff5b: R0 := R31 + 0x3A0
0000ff63: mem := mem with [R31 + 0x310, el]:u64 <- R0
0000ff69: R0 := R31 + 0x3A0
0000ff71: mem := mem with [R31 + 0x318, el]:u64 <- R0
0000ff77: R0 := R31 + 0x3A0
0000ff7f: mem := mem with [R31 + 0x320, el]:u64 <- R0
0000ff85: R0 := R31 + 0x3A0
0000ff8d: mem := mem with [R31 + 0x328, el]:u64 <- R0
0000ff93: R0 := R31 + 0x3A0
0000ff9b: mem := mem with [R31 + 0x330, el]:u64 <- R0
0000ffa1: R0 := R31 + 0x3A0
0000ffa9: mem := mem with [R31 + 0x338, el]:u64 <- R0
0000ffaf: R0 := R31 + 0x3A0
0000ffb7: mem := mem with [R31 + 0x340, el]:u64 <- R0
0000ffbd: R0 := R31 + 0x3A0
0000ffc5: mem := mem with [R31 + 0x348, el]:u64 <- R0
0000ffcb: R0 := R31 + 0x3A0
0000ffd3: mem := mem with [R31 + 0x350, el]:u64 <- R0
0000ffd9: R0 := R31 + 0x3A0
0000ffe1: mem := mem with [R31 + 0x358, el]:u64 <- R0
0000ffe7: R0 := R31 + 0x3A0
0000ffef: mem := mem with [R31 + 0x360, el]:u64 <- R0
0000fff5: R0 := R31 + 0x3A0
0000fffd: mem := mem with [R31 + 0x368, el]:u64 <- R0
00010003: R0 := R31 + 0x3A0
0001000b: mem := mem with [R31 + 0x370, el]:u64 <- R0
00010011: R0 := R31 + 0x3A0
00010019: mem := mem with [R31 + 0x378, el]:u64 <- R0
0001001f: R0 := R31 + 0x3A0
00010027: mem := mem with [R31 + 0x380, el]:u64 <- R0
0001002d: R0 := R31 + 0x3A0
00010035: mem := mem with [R31 + 0x388, el]:u64 <- R0
0001003b: R0 := R31 + 0x3A0
00010043: mem := mem with [R31 + 0x390, el]:u64 <- R0
00010049: R0 := R31 + 0x3A0
00010051: mem := mem with [R31 + 0x398, el]:u64 <- R0
00010056: R0 := 0x1B96
0001005c: R0 := pad:64[0x7A59.15:0[R0]]
00010064: mem := mem with [R31 + 0x4A4, el]:u32 <- 31:0[R0]
00010069: R0 := 0xFD0F
0001006f: R0 := pad:64[0x3763.15:0[R0]]
00010077: mem := mem with [R31 + 0x4A0, el]:u32 <- 31:0[R0]
0001007c: R0 := 0x98ED
00010082: R0 := pad:64[0xADF6.15:0[R0]]
0001008a: mem := mem with [R31 + 0x49C, el]:u32 <- 31:0[R0]
00010091: mem := mem with [R31 + 0x498, el]:u32 <- 0
00010096: R0 := 0x1BF2
0001009c: R0 := pad:64[0x8333.15:0[R0]]
000100a4: mem := mem with [R31 + 0x494, el]:u32 <- 31:0[R0]
000100a9: R0 := 0x3400
000100af: R0 := pad:64[0x8AFC.15:0[R0]]
000100b7: mem := mem with [R31 + 0x490, el]:u32 <- 31:0[R0]
000100bc: R0 := 0xB405
000100c2: R0 := pad:64[0x537F.15:0[R0]]
000100ca: mem := mem with [R31 + 0x48C, el]:u32 <- 31:0[R0]
000100cf: R0 := 0xDF7
000100d6: R0 := 63:32[R0].0xB052.15:0[R0]
000100dd: R0 := 63:48[R0].0x8554.31:0[R0]
000100e3: R0 := 0xFCAF.47:0[R0]
000100eb: mem := mem with [R31 + 0x480, el]:u64 <- R0
000100f0: R0 := 0xFFFFFFF8
000100f8: mem := mem with [R31 + 0x47C, el]:u32 <- 31:0[R0]
000100fd: R0 := 0x408000
00010103: R1 := R0 + 0xF28
00010109: R0 := R31 + 0x268
00010110: V0 := mem[R1, el]:u128
00010115: V1 := mem[R1 + 0x10, el]:u128
0001011d: mem := mem with [R0, el]:u128 <- V0
00010123: mem := mem with [R0 + 0x10, el]:u128 <- V1
00010129: #157 := R1 + 0x20
0001012e: V0 := mem[#157, el]:u128
00010133: V1 := mem[#157 + 0x10, el]:u128
00010139: #158 := R0 + 0x20
0001013f: mem := mem with [#158, el]:u128 <- V0
00010145: mem := mem with [#158 + 0x10, el]:u128 <- V1
0001014b: #159 := R1 + 0x40
00010150: V0 := mem[#159, el]:u128
00010155: V1 := mem[#159 + 0x10, el]:u128
0001015b: #160 := R0 + 0x40
00010161: mem := mem with [#160, el]:u128 <- V0
00010167: mem := mem with [#160 + 0x10, el]:u128 <- V1
0001016e: V0 := mem[R1 + 0x60, el]:u128
00010176: mem := mem with [R0 + 0x60, el]:u128 <- V0
0001017d: R1 := mem[R1 + 0x70, el]:u64
00010185: mem := mem with [R0 + 0x70, el]:u64 <- R1
0001018a: R0 := 0xD0C2
00010190: R0 := pad:64[0x4201.15:0[R0]]
00010198: mem := mem with [R31 + 0x478, el]:u32 <- 31:0[R0]
0001019d: R0 := 0xFFFFFFFB
000101a5: mem := mem with [R31 + 0x477] <- 7:0[R0]
000101aa: R0 := 2
000101b2: mem := mem with [R31 + 0x476] <- 7:0[R0]
000101b9: mem := mem with [R31 + 0x468, el]:u64 <- 0
000101be: R0 := 0x422000
000101c4: R0 := R0 + 0x38
000101cc: mem := mem with [R31 + 0x460, el]:u64 <- R0
000101d1: R0 := 0x422000
000101d7: R0 := R0 + 0x4E8
000101df: mem := mem with [R31 + 0x458, el]:u64 <- R0
000101e4: R0 := 0x421000
000101ea: R0 := R0 + 0x7A0
000101f2: mem := mem with [R31 + 0x260, el]:u64 <- R0
000101f8: R0 := R31 + 0x260
00010200: mem := mem with [R31 + 0x450, el]:u64 <- R0
00010205: R0 := 0x420000
0001020b: R0 := R0 + 0x54
00010213: mem := mem with [R31 + 0x258, el]:u64 <- R0
00010219: R0 := R31 + 0x258
00010221: mem := mem with [R31 + 0x448, el]:u64 <- R0
00010226: R0 := 0xD347
0001022c: R0 := pad:64[0x7CEA.15:0[R0]]
00010234: mem := mem with [R31 + 0x444, el]:u32 <- 31:0[R0]
00010239: R0 := 0x421000
0001023f: R0 := R0 + 0x620
00010246: R0 := mem[R0, el]:u64
0001024d: R1 := mem[R31 + 0x4B0, el]:u64
00010255: mem := mem with [R0, el]:u64 <- R1
0001025a: R0 := 0x420000
00010260: R0 := R0 + 0x44
00010267: mem := mem with [R0] <- 0
0001026c: goto %0001026a

0001026a:
00010270: R0 := 0x420000
00010276: R0 := R0 + 0x44
0001027d: R0 := pad:64[extend:32[mem[R0]]]
00010283: #161 := 31:0[R0] - 7
00010288: VF := extend:64[#161] <> extend:64[31:0[R0]] - 7
0001028d: CF := pad:64[#161] <> pad:64[31:0[R0]] + 0xFFFFFFF9
00010291: ZF := #161 = 0
00010295: NF := 31:31[#161]
0001029d: when ~(NF = VF & ~ZF) goto %0001029b
00019799: goto %0001039d

0001039d:
000103a0: R0 := 0x420000
000103a6: R0 := R0 + 0x88
000103ab: R1 := 1
000103b3: mem := mem with [R0, el]:u32 <- 31:0[R1]
000103b8: goto %000103b6

000103b6:
000103bc: R0 := 0x420000
000103c2: R0 := R0 + 0x88
000103c9: R0 := pad:64[mem[R0, el]:u32]
000103cf: #163 := 31:0[R0] - 5
000103d4: VF := extend:64[#163] <> extend:64[31:0[R0]] - 5
000103d9: CF := pad:64[#163] <> pad:64[31:0[R0]] + 0xFFFFFFFB
000103dd: ZF := #163 = 0
000103e1: NF := 31:31[#163]
000103e8: when ~(CF & ~ZF) goto %000103e6
0001979a: goto %0001060f

0001060f:
00010612: R0 := 0x421000
00010618: R0 := R0 + 0x7A0
0001061f: R0 := mem[R0, el]:u64
00010626: R0 := mem[R0, el]:u64
0001062d: R29 := mem[R31, el]:u64
00010632: R30 := mem[R31 + 8, el]:u64
00010638: R31 := R31 + 0x4C0
0001063d: call R30 with noreturn

000103e6:
000103ee: R0 := 0xFFFFCE97
000103f6: mem := mem with [R31 + 0x442, el]:u16 <- 15:0[R0]
000103fb: R0 := 0x420000
00010401: R0 := R0 + 0x8C
00010409: mem := mem with [R31 + 0x438, el]:u64 <- R0
00010410: mem := mem with [R31 + 0x430, el]:u64 <- 0
00010415: R0 := 0x420000
0001041b: R0 := R0 + 0x5C
00010423: mem := mem with [R31 + 0x428, el]:u64 <- R0
00010428: R0 := 0x5F12
0001042e: R0 := pad:64[0x1E34.15:0[R0]]
00010436: mem := mem with [R31 + 0x424, el]:u32 <- 31:0[R0]
0001043b: R0 := 0xFFFFFFFA
00010443: mem := mem with [R31 + 0x420, el]:u32 <- 31:0[R0]
00010448: R0 := 0x7A80
0001044e: R0 := pad:64[0x2401.15:0[R0]]
00010456: mem := mem with [R31 + 0x41C, el]:u32 <- 31:0[R0]
0001045d: mem := mem with [R31 + 0x410, el]:u64 <- 0
00010462: R0 := 0x423000
00010468: R0 := R0 + 0x910
00010470: mem := mem with [R31 + 0x240, el]:u64 <- R0
00010476: R0 := R31 + 0x240
0001047e: mem := mem with [R31 + 0x408, el]:u64 <- R0
00010485: mem := mem with [R31 + 0x400, el]:u64 <- 0
0001048a: R0 := 0xFFFFFFCA
00010492: mem := mem with [R31 + 0x3FF] <- 7:0[R0]
00010497: R0 := 0xFFFFFFFF
0001049f: mem := mem with [R31 + 0x3F8, el]:u32 <- 31:0[R0]
000104a4: R0 := 0xFFFFFFFD
000104ac: mem := mem with [R31 + 0x3F4, el]:u32 <- 31:0[R0]
000104b1: R0 := 3
000104b9: mem := mem with [R31 + 0x3F3] <- 7:0[R0]
000104be: R0 := 0x423000
000104c4: R0 := R0 + 0x900
000104cc: mem := mem with [R31 + 0x3E8, el]:u64 <- R0
000104d1: R0 := 0xE36A
000104d7: R0 := pad:64[0x7C70.15:0[R0]]
000104df: mem := mem with [R31 + 0x3E4, el]:u32 <- 31:0[R0]
000104e4: R0 := 0x421000
000104ea: R0 := R0 + 0xF78
000104f2: mem := mem with [R31 + 0x3D8, el]:u64 <- R0
000104f9: mem := mem with [R31 + 0x3D0, el]:u64 <- 0
000104fe: R0 := 0x422000
00010504: R0 := R0 + 0x758
0001050c: mem := mem with [R31 + 0x3C8, el]:u64 <- R0
00010513: mem := mem with [R31 + 0x4B8, el]:u32 <- 0
00010518: goto %00010516

00010516:
0001051e: R0 := pad:64[mem[R31 + 0x4B8, el]:u32]
00010524: #164 := 31:0[R0] - 3
00010529: VF := extend:64[#164] <> extend:64[31:0[R0]] - 3
0001052e: CF := pad:64[#164] <> pad:64[31:0[R0]] + 0xFFFFFFFD
00010532: ZF := #164 = 0
00010536: NF := 31:31[#164]
0001053e: when ~(NF = VF & ~ZF) goto %0001053c
0001979b: goto %0001057d

0001057d:
00010582: mem := mem with [R31 + 0x4B8, el]:u32 <- 0
00010587: goto %00010585

00010585:
0001058d: R0 := pad:64[mem[R31 + 0x4B8, el]:u32]
00010592: VF := 0
00010595: CF := 1
00010599: ZF := 31:0[R0] = 0
0001059d: NF := 31:31[R0]
000105a5: when ~(NF = VF & ~ZF) goto %000105a3
0001979c: goto %000105e4

000105e4:
000105e7: R0 := 0x420000
000105ed: R0 := R0 + 0x88
000105f4: R0 := pad:64[mem[R0, el]:u32]
000105fa: R1 := pad:64[31:0[R0] + 1]
000105ff: R0 := 0x420000
00010605: R0 := R0 + 0x88
0001060d: mem := mem with [R0, el]:u32 <- 31:0[R1]
0001979d: goto %000103b6

000105a3:
000105ad: R0 := extend:64[mem[R31 + 0x4B8, el]:u32]
000105b3: R0 := 61:0[R0].0
000105b9: R1 := R31 + 0x238
000105be: R2 := 0x6557
000105c4: R2 := pad:64[0x8C02.15:0[R2]]
000105cd: mem := mem with [R1 + R0, el]:u32 <- 31:0[R2]
000105d4: R0 := pad:64[mem[R31 + 0x4B8, el]:u32]
000105da: R0 := pad:64[31:0[R0] + 1]
000105e2: mem := mem with [R31 + 0x4B8, el]:u32 <- 31:0[R0]
0001979e: goto %00010585

0001053c:
00010546: R0 := extend:64[mem[R31 + 0x4B8, el]:u32]
0001054c: R0 := 61:0[R0].0
00010552: R1 := R31 + 0x248
00010557: R2 := 0x2159
0001055d: R2 := pad:64[0xAB90.15:0[R2]]
00010566: mem := mem with [R1 + R0, el]:u32 <- 31:0[R2]
0001056d: R0 := pad:64[mem[R31 + 0x4B8, el]:u32]
00010573: R0 := pad:64[31:0[R0] + 1]
0001057b: mem := mem with [R31 + 0x4B8, el]:u32 <- 31:0[R0]
0001979f: goto %00010516

0001029b:
000102a5: mem := mem with [R31 + 0x3C0, el]:u64 <- 0
000102ac: mem := mem with [R31 + 0x3B8, el]:u64 <- 0
000102b2: R0 := R31 + 0x38
000102b8: R0 := R0 + 0x10
000102c0: mem := mem with [R31 + 0x3B0, el]:u64 <- R0
000102c5: R0 := 0x408000
000102cb: R1 := R0 + 0xFA0
000102d1: R0 := R31 + 0x58
000102d7: R3 := R1
000102dc: R1 := 0x1E0
000102e2: R2 := R1
000102e8: R1 := R3
000102ed: R30 := 0x405088
000102ef: call @memcpy with return %000102f1

000102f1:
000102f6: mem := mem with [R31 + 0x4BC, el]:u32 <- 0
000102fb: goto %000102f9

000102f9:
00010301: R0 := pad:64[mem[R31 + 0x4BC, el]:u32]
00010307: #162 := 31:0[R0] - 3
0001030c: VF := extend:64[#162] <> extend:64[31:0[R0]] - 3
00010311: CF := pad:64[#162] <> pad:64[31:0[R0]] + 0xFFFFFFFD
00010315: ZF := #162 = 0
00010319: NF := 31:31[#162]
00010321: when ~(NF = VF & ~ZF) goto %0001031f
000197a0: goto %00010360

00010360:
00010363: R0 := 0x420000
00010369: R0 := R0 + 0x44
00010370: R0 := pad:64[extend:32[mem[R0]]]
00010376: R0 := pad:64[7:0[R0]]
0001037c: R0 := pad:64[31:0[R0] + 9]
00010382: R0 := pad:64[7:0[R0]]
00010388: R1 := pad:64[extend:32[7:0[R0]]]
0001038d: R0 := 0x420000
00010393: R0 := R0 + 0x44
0001039b: mem := mem with [R0] <- 7:0[R1]
000197a1: goto %0001026a

0001031f:
00010328: R0 := R31 - 0x338
0001032e: R0 := R0 + 0x370
00010335: R1 := extend:64[mem[R31 + 0x4BC, el]:u32]
0001033a: R2 := 0x420000
00010340: R2 := R2 + 0x44
00010349: mem := mem with [R0 + (60:0[R1].0), el]:u64 <- R2
00010350: R0 := pad:64[mem[R31 + 0x4BC, el]:u32]
00010356: R0 := pad:64[31:0[R0] + 1]
0001035e: mem := mem with [R31 + 0x4BC, el]:u32 <- 31:0[R0]
000197a2: goto %000102f9

000197a3: sub func_49(func_49_result)
000199b5: func_49_result :: out u32 = low:32[R0]

0001063f:
00010643: R31 := R31 - 0x230
0001064b: mem := mem with [R31, el]:u64 <- R29
00010651: mem := mem with [R31 + 8, el]:u64 <- R30
00010657: R29 := R31
0001065f: mem := mem with [R31 + 0x10, el]:u64 <- R19
00010667: mem := mem with [R31 + 0x38, el]:u64 <- R0
0001066f: mem := mem with [R31 + 0x37] <- 7:0[R1]
00010677: mem := mem with [R31 + 0x28, el]:u64 <- R2
0001067f: mem := mem with [R31 + 0x36] <- 7:0[R3]
00010687: mem := mem with [R31 + 0x20, el]:u64 <- R4
0001068c: R0 := 0x420000
00010692: R0 := R0 + 0x48
0001069a: mem := mem with [R31 + 0x1A0, el]:u64 <- R0
000106a0: R0 := R31 + 0x1A0
000106a8: mem := mem with [R31 + 0x220, el]:u64 <- R0
000106ad: R0 := 1
000106b5: mem := mem with [R31 + 0x21C, el]:u32 <- 31:0[R0]
000106bc: mem := mem with [R31 + 0x21B] <- 0
000106c3: mem := mem with [R31 + 0x210, el]:u64 <- 0
000106c8: R0 := 1
000106d0: mem := mem with [R31 + 0x20C, el]:u32 <- 31:0[R0]
000106d5: R0 := 0x409000
000106db: R1 := R0 + 0x180
000106e1: R0 := R31 + 0x160
000106e8: V0 := mem[R1, el]:u128
000106ed: V1 := mem[R1 + 0x10, el]:u128
000106f5: mem := mem with [R0, el]:u128 <- V0
000106fb: mem := mem with [R0 + 0x10, el]:u128 <- V1
00010702: V0 := mem[R1 + 0x20, el]:u128
0001070a: mem := mem with [R0 + 0x20, el]:u128 <- V0
00010711: V0 := mem[R1 + 0x2C, el]:u128
00010719: mem := mem with [R0 + 0x2C, el]:u128 <- V0
0001071e: R0 := 0x23D
00010725: R0 := 63:32[R0].0xF4D.15:0[R0]
0001072c: R0 := 63:48[R0].0xC505.31:0[R0]
00010732: R0 := 0x909D.47:0[R0]
0001073a: mem := mem with [R31 + 0x200, el]:u64 <- R0
0001073f: R0 := 0x420000
00010745: R0 := R0 + 0xC0
0001074d: mem := mem with [R31 + 0x1F8, el]:u64 <- R0
00010752: R0 := 0x5E7B
00010758: R0 := pad:64[0xF305.15:0[R0]]
00010760: mem := mem with [R31 + 0x1F4, el]:u32 <- 31:0[R0]
00010765: R0 := 4
0001076d: mem := mem with [R31 + 0x1F2, el]:u16 <- 15:0[R0]
00010774: mem := mem with [R31 + 0x158, el]:u64 <- 0
00010779: R0 := 0xFFFFFFFF
00010781: mem := mem with [R31 + 0x1F0, el]:u16 <- 15:0[R0]
00010786: R0 := 0x420000
0001078c: R0 := R0 + 0x118
00010794: mem := mem with [R31 + 0x1E8, el]:u64 <- R0
0001079b: R1 := mem[R31 + 0x1A0, el]:u64
000107a2: R0 := mem[R31 + 0x220, el]:u64
000107aa: mem := mem with [R0, el]:u64 <- R1
000107b1: mem := mem with [R31 + 0x36] <- 0
000107b6: goto %000107b4

000107b4:
000107bc: R0 := pad:64[mem[R31 + 0x36]]
000107c2: #165 := 31:0[R0] - 5
000107c7: VF := extend:64[#165] <> extend:64[31:0[R0]] - 5
000107cc: CF := pad:64[#165] <> pad:64[31:0[R0]] + 0xFFFFFFFB
000107d0: ZF := #165 = 0
000107d4: NF := 31:31[#165]
000107db: when ~(CF & ~ZF) goto %000107d9
000197a4: goto %00010be8

00010be8:
00010beb: R0 := 0x421000
00010bf1: R0 := R0 + 0xF88
00010bf8: R0 := mem[R0, el]:u64
00010bfd: R1 := 0x421000
00010c03: R1 := R1 + 0x6E0
00010c0b: mem := mem with [R0, el]:u64 <- R1
00010c10: R0 := 0x421000
00010c16: R0 := R0 + 0xF88
00010c1d: R0 := mem[R0, el]:u64
00010c24: R0 := mem[R0, el]:u64
00010c2b: R0 := mem[R0, el]:u64
00010c32: R0 := mem[R0, el]:u64
00010c39: R19 := mem[R31 + 0x10, el]:u64
00010c40: R29 := mem[R31, el]:u64
00010c45: R30 := mem[R31 + 8, el]:u64
00010c4b: R31 := R31 + 0x230
00010c50: call R30 with noreturn

000107d9:
000107e1: R0 := 0x423000
000107e7: R0 := R0 + 0x908
000107ef: mem := mem with [R31 + 0x1E0, el]:u64 <- R0
000107f6: mem := mem with [R31 + 0x1D8, el]:u64 <- 0
000107fb: R0 := 0x420000
00010801: R0 := R0 + 0x54
00010809: mem := mem with [R31 + 0x1D0, el]:u64 <- R0
0001080e: R0 := 0x420000
00010814: R0 := R0 + 0x64
0001081c: mem := mem with [R31 + 0x1C8, el]:u64 <- R0
00010821: R0 := 0x421000
00010827: R0 := R0 + 0xF48
0001082f: mem := mem with [R31 + 0x1C0, el]:u64 <- R0
00010834: R0 := 0x409000
0001083a: R1 := R0 + 0x1C0
00010840: R0 := R31 + 0x70
00010847: V0 := mem[R1, el]:u128
0001084c: V1 := mem[R1 + 0x10, el]:u128
00010854: mem := mem with [R0, el]:u128 <- V0
0001085a: mem := mem with [R0 + 0x10, el]:u128 <- V1
00010861: V0 := mem[R1 + 0x20, el]:u128
00010869: mem := mem with [R0 + 0x20, el]:u128 <- V0
0001086e: R0 := 0x420000
00010874: R0 := R0 + 0x108
0001087c: mem := mem with [R31 + 0x1B8, el]:u64 <- R0
00010881: R0 := 0x5F26
00010888: R0 := 63:32[R0].0x112E.15:0[R0]
0001088f: R0 := 63:48[R0].0xC30B.31:0[R0]
00010895: R0 := 0xE119.47:0[R0]
0001089d: mem := mem with [R31 + 0x1B0, el]:u64 <- R0
000108a2: R0 := 0x22C3
000108aa: mem := mem with [R31 + 0x1AE, el]:u16 <- 15:0[R0]
000108b1: mem := mem with [R31 + 0x22C, el]:u32 <- 0
000108b6: goto %000108b4

000108b4:
000108bc: R0 := pad:64[mem[R31 + 0x22C, el]:u32]
000108c2: #166 := 31:0[R0] - 5
000108c7: VF := extend:64[#166] <> extend:64[31:0[R0]] - 5
000108cc: CF := pad:64[#166] <> pad:64[31:0[R0]] + 0xFFFFFFFB
000108d0: ZF := #166 = 0
000108d4: NF := 31:31[#166]
000108dc: when ~(NF = VF & ~ZF) goto %000108da
000197a5: goto %00010984

00010984:
00010989: mem := mem with [R31 + 0x22C, el]:u32 <- 0
0001098e: goto %0001098c

0001098c:
00010994: R0 := pad:64[mem[R31 + 0x22C, el]:u32]
0001099a: #168 := 31:0[R0] - 1
0001099f: VF := extend:64[#168] <> extend:64[31:0[R0]] - 1
000109a4: CF := pad:64[#168] <> pad:64[31:0[R0]] + 0xFFFFFFFF
000109a8: ZF := #168 = 0
000109ac: NF := 31:31[#168]
000109b4: when ~(NF = VF & ~ZF) goto %000109b2
000197a6: goto %000109f3

000109f3:
000109f8: mem := mem with [R31 + 0x22C, el]:u32 <- 0
000109fd: goto %000109fb

000109fb:
00010a03: R0 := pad:64[mem[R31 + 0x22C, el]:u32]
00010a09: #169 := 31:0[R0] - 4
00010a0e: VF := extend:64[#169] <> extend:64[31:0[R0]] - 4
00010a13: CF := pad:64[#169] <> pad:64[31:0[R0]] + 0xFFFFFFFC
00010a17: ZF := #169 = 0
00010a1b: NF := 31:31[#169]
00010a23: when ~(NF = VF & ~ZF) goto %00010a21
000197a7: goto %00010a5d

00010a5d:
00010a62: R0 := mem[R31 + 0x1E0, el]:u64
00010a69: R1 := pad:64[extend:32[mem[R0]]]
00010a70: R0 := pad:64[mem[R31 + 0x21C, el]:u32]
00010a76: R0 := pad:64[extend:32[7:0[R0]]]
00010a7d: R0 := pad:64[31:0[R1] & 31:0[R0]]
00010a83: R1 := pad:64[extend:32[7:0[R0]]]
00010a8a: R0 := mem[R31 + 0x1E0, el]:u64
00010a92: mem := mem with [R0] <- 7:0[R1]
00010a97: R0 := 0x420000
00010a9d: R0 := R0 + 0x48
00010aa4: R0 := pad:64[mem[R0, el]:u32]
00010aaa: R0 := extend:64[31:0[R0]]
00010ab0: #170 := R0 - 3
00010ab5: VF := extend:128[#170] <> extend:128[R0] - 3
00010aba: CF := pad:128[#170] <> pad:128[R0] + 0xFFFFFFFFFFFFFFFD
00010abe: ZF := #170 = 0
00010ac2: NF := 63:63[#170]
00010acf: when CF & ~ZF goto %00010ac8
00010ad0: goto %00010acb

00010acb:
00010acc: R0 := 1
00010ad2: goto %00010ace

00010ac8:
00010ac9: R0 := 0
00010ad1: goto %00010ace

00010ace:
00010ad8: R0 := pad:64[7:0[R0]]
00010ade: R19 := pad:64[31:0[R0]]
00010ae5: R0 := mem[R31 + 0x1A0, el]:u64
00010aec: R1 := pad:64[mem[R0, el]:u32]
00010af1: R0 := 0
00010af8: R4 := mem[R31 + 0x210, el]:u64
00010afe: R3 := R0
00010b03: R0 := 0x421000
00010b09: R2 := R0 + 0x4F8
00010b0e: R0 := 1
00010b13: R30 := 0x405508
00010b15: call @func_93 with return %00010b17

00010b17:
00010b1b: R2 := R0
00010b22: R0 := pad:64[mem[R31 + 0x36]]
00010b28: R1 := R0
00010b2e: R0 := R2
00010b33: R30 := 0x40551C
00010b35: call @func_90 with return %00010b37

00010b37:
00010b3b: R0 := pad:64[7:0[R0]]
00010b40: VF := 0
00010b43: CF := 1
00010b47: ZF := 31:0[R0] = 0
00010b4b: NF := 31:31[R0]
00010b51: when ZF <> 1 goto %00010b4f
000197a8: goto %00010bc3

00010bc3:
00010bc8: R0 := mem[R31 + 0x220, el]:u64
00010bcf: R0 := mem[R0, el]:u64
00010bd6: R0 := pad:64[mem[R0, el]:u32]
00010bdb: VF := 0
00010bde: CF := 1
00010be2: ZF := 31:0[R0] = 0
00010be6: NF := 31:31[R0]
000197a9: goto %00010b4f

00010b4f:
00010b58: R1 := pad:64[extend:32[15:0[R19]]]
00010b5d: R0 := 0x420000
00010b63: R0 := R0 + 0x5C
00010b6a: R0 := pad:64[extend:32[mem[R0, el]:u16]]
00010b71: R0 := pad:64[31:0[R1] | 31:0[R0]]
00010b77: R1 := pad:64[extend:32[15:0[R0]]]
00010b7c: R0 := 0x420000
00010b82: R0 := R0 + 0x5C
00010b8a: mem := mem with [R0, el]:u16 <- 15:0[R1]
00010b91: R0 := mem[R31 + 0x1C8, el]:u64
00010b98: mem := mem with [R0, el]:u32 <- 0
00010b9f: R0 := mem[R31 + 0x1C8, el]:u64
00010ba4: R1 := 0xFFFFFFF6
00010bac: mem := mem with [R0, el]:u32 <- 31:0[R1]
00010bb3: R0 := pad:64[mem[R31 + 0x36]]
00010bb9: R0 := pad:64[31:0[R0] + 1]
00010bc1: mem := mem with [R31 + 0x36] <- 7:0[R0]
000197aa: goto %000107b4

00010a21:
00010a2b: R0 := extend:64[mem[R31 + 0x22C, el]:u32]
00010a31: R0 := 60:0[R0].0
00010a37: R1 := R31 + 0x48
00010a3d: R2 := R31 + 0x148
00010a46: mem := mem with [R1 + R0, el]:u64 <- R2
00010a4d: R0 := pad:64[mem[R31 + 0x22C, el]:u32]
00010a53: R0 := pad:64[31:0[R0] + 1]
00010a5b: mem := mem with [R31 + 0x22C, el]:u32 <- 31:0[R0]
000197ab: goto %000109fb

000109b2:
000109bc: R0 := extend:64[mem[R31 + 0x22C, el]:u32]
000109c2: R0 := 60:0[R0].0
000109c8: R1 := R31 + 0x148
000109cd: R2 := 0x423000
000109d3: R2 := R2 + 0x918
000109dc: mem := mem with [R1 + R0, el]:u64 <- R2
000109e3: R0 := pad:64[mem[R31 + 0x22C, el]:u32]
000109e9: R0 := pad:64[31:0[R0] + 1]
000109f1: mem := mem with [R31 + 0x22C, el]:u32 <- 31:0[R0]
000197ac: goto %0001098c

000108da:
000108e4: mem := mem with [R31 + 0x228, el]:u32 <- 0
000108e9: goto %000108e7

000108e7:
000108ef: R0 := pad:64[mem[R31 + 0x228, el]:u32]
000108f5: #167 := 31:0[R0] - 6
000108fa: VF := extend:64[#167] <> extend:64[31:0[R0]] - 6
000108ff: CF := pad:64[#167] <> pad:64[31:0[R0]] + 0xFFFFFFFA
00010903: ZF := #167 = 0
00010907: NF := 31:31[#167]
0001090f: when ~(NF = VF & ~ZF) goto %0001090d
000197ad: goto %0001096f

0001096f:
00010974: R0 := pad:64[mem[R31 + 0x22C, el]:u32]
0001097a: R0 := pad:64[31:0[R0] + 1]
00010982: mem := mem with [R31 + 0x22C, el]:u32 <- 31:0[R0]
000197ae: goto %000108b4

0001090d:
00010917: R2 := extend:64[mem[R31 + 0x228, el]:u32]
0001091e: R1 := extend:64[mem[R31 + 0x22C, el]:u32]
00010924: R0 := R1
0001092a: R0 := 60:0[R0].0
00010931: R0 := R0 + ~R1 + 1
00010938: R0 := R0 + R2
0001093e: R0 := 61:0[R0].0
00010944: R1 := R31 + 0xA0
00010949: R2 := 0x9663
0001094f: R2 := pad:64[0x2A26.15:0[R2]]
00010958: mem := mem with [R1 + R0, el]:u32 <- 31:0[R2]
0001095f: R0 := pad:64[mem[R31 + 0x228, el]:u32]
00010965: R0 := pad:64[31:0[R0] + 1]
0001096d: mem := mem with [R31 + 0x228, el]:u32 <- 31:0[R0]
000197af: goto %000108e7

000197b0: sub func_5(func_5_result)
000199b6: func_5_result :: out u32 = low:32[R0]

00011cc5:
00011cc9: R31 := R31 - 0x5F0
00011cd1: mem := mem with [R31, el]:u64 <- R29
00011cd7: mem := mem with [R31 + 8, el]:u64 <- R30
00011cdd: R29 := R31
00011ce5: mem := mem with [R31 + 0x18, el]:u64 <- R0
00011ced: mem := mem with [R31 + 0x10, el]:u64 <- R1
00011cf2: R0 := 0x420000
00011cf8: R0 := R0 + 0x88
00011d00: mem := mem with [R31 + 0x5E0, el]:u64 <- R0
00011d07: mem := mem with [R31 + 0x4D8, el]:u64 <- 0
00011d0d: R0 := R31 + 0x4D8
00011d15: mem := mem with [R31 + 0x5D8, el]:u64 <- R0
00011d1a: R0 := 0x422000
00011d20: R0 := R0 + 0x4E8
00011d28: mem := mem with [R31 + 0x5D0, el]:u64 <- R0
00011d2d: R0 := 0xFFFFFFFF
00011d35: mem := mem with [R31 + 0x5CC, el]:u32 <- 31:0[R0]
00011d3a: R0 := 0x917
00011d40: R0 := pad:64[0x2DA0.15:0[R0]]
00011d48: mem := mem with [R31 + 0x5C8, el]:u32 <- 31:0[R0]
00011d4d: R0 := 6
00011d55: mem := mem with [R31 + 0x5C4, el]:u32 <- 31:0[R0]
00011d5a: R0 := 1
00011d62: mem := mem with [R31 + 0x5C0, el]:u32 <- 31:0[R0]
00011d69: mem := mem with [R31 + 0x5BC, el]:u32 <- 0
00011d6e: R0 := 1
00011d76: mem := mem with [R31 + 0x5B8, el]:u32 <- 31:0[R0]
00011d7b: R0 := 0xCA56
00011d81: R0 := pad:64[0x5E4C.15:0[R0]]
00011d89: mem := mem with [R31 + 0x5B4, el]:u32 <- 31:0[R0]
00011d8e: R0 := 0x23E9
00011d94: R0 := pad:64[0x9D13.15:0[R0]]
00011d9c: mem := mem with [R31 + 0x5B0, el]:u32 <- 31:0[R0]
00011da1: R0 := 0xAB18
00011da7: R0 := pad:64[0xF615.15:0[R0]]
00011daf: mem := mem with [R31 + 0x5AC, el]:u32 <- 31:0[R0]
00011db6: mem := mem with [R31 + 0x5A8, el]:u32 <- 0
00011dbb: R0 := 0x60FD
00011dc1: R0 := pad:64[0x5C97.15:0[R0]]
00011dc9: mem := mem with [R31 + 0x5A4, el]:u32 <- 31:0[R0]
00011dce: R0 := 0xFA37
00011dd4: R0 := pad:64[0x7A03.15:0[R0]]
00011ddc: mem := mem with [R31 + 0x5A0, el]:u32 <- 31:0[R0]
00011de1: R0 := 0x7FA9
00011de7: R0 := pad:64[0xD73C.15:0[R0]]
00011def: mem := mem with [R31 + 0x59C, el]:u32 <- 31:0[R0]
00011df4: R0 := 1
00011dfc: mem := mem with [R31 + 0x598, el]:u32 <- 31:0[R0]
00011e01: R0 := 0x1E36
00011e07: R0 := pad:64[0xACC4.15:0[R0]]
00011e0f: mem := mem with [R31 + 0x594, el]:u32 <- 31:0[R0]
00011e14: R0 := 5
00011e1c: mem := mem with [R31 + 0x590, el]:u32 <- 31:0[R0]
00011e21: R0 := 0x408000
00011e27: R1 := R0 + 0xC48
00011e2d: R0 := R31 + 0x4A0
00011e34: V0 := mem[R1, el]:u128
00011e39: V1 := mem[R1 + 0x10, el]:u128
00011e41: mem := mem with [R0, el]:u128 <- V0
00011e47: mem := mem with [R0 + 0x10, el]:u128 <- V1
00011e4e: R1 := pad:64[mem[R1 + 0x20, el]:u32]
00011e56: mem := mem with [R0 + 0x20, el]:u32 <- 31:0[R1]
00011e5b: R0 := 0x420000
00011e61: R1 := R0 + 0x750
00011e67: R0 := R31 + 0x2A8
00011e6d: R3 := R1
00011e72: R1 := 0x1F8
00011e78: R2 := R1
00011e7e: R1 := R3
00011e83: R30 := 0x404678
00011e85: call @memcpy with return %00011e87

00011e87:
00011e8b: R0 := R31 + 0x2A8
00011e91: R0 := R0 + 0x138
00011e99: mem := mem with [R31 + 0x2A0, el]:u64 <- R0
00011e9f: R0 := R31 + 0x2A0
00011ea7: mem := mem with [R31 + 0x258, el]:u64 <- R0
00011ead: R0 := R31 + 0x2A0
00011eb5: mem := mem with [R31 + 0x260, el]:u64 <- R0
00011ebb: R0 := R31 + 0x2A0
00011ec3: mem := mem with [R31 + 0x268, el]:u64 <- R0
00011ec9: R0 := R31 + 0x2A0
00011ed1: mem := mem with [R31 + 0x270, el]:u64 <- R0
00011ed7: R0 := R31 + 0x2A0
00011edf: mem := mem with [R31 + 0x278, el]:u64 <- R0
00011ee5: R0 := R31 + 0x2A0
00011eed: mem := mem with [R31 + 0x280, el]:u64 <- R0
00011ef3: R0 := R31 + 0x2A0
00011efb: mem := mem with [R31 + 0x288, el]:u64 <- R0
00011f01: R0 := R31 + 0x2A0
00011f09: mem := mem with [R31 + 0x290, el]:u64 <- R0
00011f0f: R0 := R31 + 0x2A0
00011f17: mem := mem with [R31 + 0x298, el]:u64 <- R0
00011f1c: R0 := 0xFFFFFFE9
00011f24: mem := mem with [R31 + 0x58F] <- 7:0[R0]
00011f29: R0 := 0x27
00011f31: mem := mem with [R31 + 0x58E] <- 7:0[R0]
00011f36: R0 := 0x420000
00011f3c: R0 := R0 + 0x98
00011f44: mem := mem with [R31 + 0x238, el]:u64 <- R0
00011f4a: R0 := R31 + 0x238
00011f52: mem := mem with [R31 + 0x580, el]:u64 <- R0
00011f57: R0 := 0x423000
00011f5d: R0 := R0 + 0x930
00011f65: mem := mem with [R31 + 0x230, el]:u64 <- R0
00011f6a: R0 := 0xFFFFFFB4
00011f72: mem := mem with [R31 + 0x57F] <- 7:0[R0]
00011f77: R0 := 0x422000
00011f7d: R0 := R0 + 0x758
00011f85: mem := mem with [R31 + 0x570, el]:u64 <- R0
00011f8a: R0 := 0x408000
00011f90: R1 := R0 + 0xC70
00011f96: R0 := R31 + 0x140
00011f9d: V0 := mem[R1, el]:u128
00011fa2: V1 := mem[R1 + 0x10, el]:u128
00011faa: mem := mem with [R0, el]:u128 <- V0
00011fb0: mem := mem with [R0 + 0x10, el]:u128 <- V1
00011fb6: #195 := R1 + 0x20
00011fbb: V0 := mem[#195, el]:u128
00011fc0: V1 := mem[#195 + 0x10, el]:u128
00011fc6: #196 := R0 + 0x20
00011fcc: mem := mem with [#196, el]:u128 <- V0
00011fd2: mem := mem with [#196 + 0x10, el]:u128 <- V1
00011fd8: #197 := R1 + 0x40
00011fdd: V0 := mem[#197, el]:u128
00011fe2: V1 := mem[#197 + 0x10, el]:u128
00011fe8: #198 := R0 + 0x40
00011fee: mem := mem with [#198, el]:u128 <- V0
00011ff4: mem := mem with [#198 + 0x10, el]:u128 <- V1
00011ffa: #199 := R1 + 0x60
00011fff: V0 := mem[#199, el]:u128
00012004: V1 := mem[#199 + 0x10, el]:u128
0001200a: #200 := R0 + 0x60
00012010: mem := mem with [#200, el]:u128 <- V0
00012016: mem := mem with [#200 + 0x10, el]:u128 <- V1
0001201c: #201 := R1 + 0x80
00012021: V0 := mem[#201, el]:u128
00012026: V1 := mem[#201 + 0x10, el]:u128
0001202c: #202 := R0 + 0x80
00012032: mem := mem with [#202, el]:u128 <- V0
00012038: mem := mem with [#202 + 0x10, el]:u128 <- V1
0001203e: #203 := R1 + 0xA0
00012043: V0 := mem[#203, el]:u128
00012048: V1 := mem[#203 + 0x10, el]:u128
0001204e: #204 := R0 + 0xA0
00012054: mem := mem with [#204, el]:u128 <- V0
0001205a: mem := mem with [#204 + 0x10, el]:u128 <- V1
00012060: #205 := R1 + 0xC0
00012065: V0 := mem[#205, el]:u128
0001206a: V1 := mem[#205 + 0x10, el]:u128
00012070: #206 := R0 + 0xC0
00012076: mem := mem with [#206, el]:u128 <- V0
0001207c: mem := mem with [#206 + 0x10, el]:u128 <- V1
00012083: V0 := mem[R1 + 0xE0, el]:u128
0001208b: mem := mem with [R0 + 0xE0, el]:u128 <- V0
00012090: R0 := 0xFFFFFFAB
00012098: mem := mem with [R31 + 0x56F] <- 7:0[R0]
0001209d: R0 := 0xFFFFDFCD
000120a5: mem := mem with [R31 + 0x56C, el]:u16 <- 15:0[R0]
000120aa: R0 := 0xFFFFFFFA
000120b2: mem := mem with [R31 + 0x56A, el]:u16 <- 15:0[R0]
000120b7: R0 := 0xFAFA
000120be: R0 := 63:32[R0].0xFAE7.15:0[R0]
000120c5: R0 := 63:48[R0].0xE7FA.31:0[R0]
000120cb: R0 := 0xFAFA.47:0[R0]
000120d3: mem := mem with [R31 + 0x130, el]:u64 <- R0
000120d8: R0 := 0xFFFFFFF6
000120e0: mem := mem with [R31 + 0x564, el]:u32 <- 31:0[R0]
000120e5: R0 := 0xFFFF9E46
000120ed: mem := mem with [R31 + 0x562, el]:u16 <- 15:0[R0]
000120f2: R0 := 1
000120fa: mem := mem with [R31 + 0x55C, el]:u32 <- 31:0[R0]
00012100: R0 := R31 + 0x230
00012108: mem := mem with [R31 + 0x550, el]:u64 <- R0
0001210d: R0 := 0x408000
00012113: R1 := R0 + 0xD60
00012119: R0 := R31 + 0x40
00012120: V0 := mem[R1, el]:u128
00012125: V1 := mem[R1 + 0x10, el]:u128
0001212d: mem := mem with [R0, el]:u128 <- V0
00012133: mem := mem with [R0 + 0x10, el]:u128 <- V1
00012139: #207 := R1 + 0x20
0001213e: V0 := mem[#207, el]:u128
00012143: V1 := mem[#207 + 0x10, el]:u128
00012149: #208 := R0 + 0x20
0001214f: mem := mem with [#208, el]:u128 <- V0
00012155: mem := mem with [#208 + 0x10, el]:u128 <- V1
0001215b: #209 := R1 + 0x40
00012160: V0 := mem[#209, el]:u128
00012165: V1 := mem[#209 + 0x10, el]:u128
0001216b: #210 := R0 + 0x40
00012171: mem := mem with [#210, el]:u128 <- V0
00012177: mem := mem with [#210 + 0x10, el]:u128 <- V1
0001217d: #211 := R1 + 0x60
00012182: V0 := mem[#211, el]:u128
00012187: V1 := mem[#211 + 0x10, el]:u128
0001218d: #212 := R0 + 0x60
00012193: mem := mem with [#212, el]:u128 <- V0
00012199: mem := mem with [#212 + 0x10, el]:u128 <- V1
0001219f: #213 := R1 + 0x80
000121a4: V0 := mem[#213, el]:u128
000121a9: V1 := mem[#213 + 0x10, el]:u128
000121af: #214 := R0 + 0x80
000121b5: mem := mem with [#214, el]:u128 <- V0
000121bb: mem := mem with [#214 + 0x10, el]:u128 <- V1
000121c1: #215 := R1 + 0xA0
000121c6: V0 := mem[#215, el]:u128
000121cb: V1 := mem[#215 + 0x10, el]:u128
000121d1: #216 := R0 + 0xA0
000121d7: mem := mem with [#216, el]:u128 <- V0
000121dd: mem := mem with [#216 + 0x10, el]:u128 <- V1
000121e3: #217 := R1 + 0xC0
000121e8: V0 := mem[#217, el]:u128
000121ed: V1 := mem[#217 + 0x10, el]:u128
000121f3: #218 := R0 + 0xC0
000121f9: mem := mem with [#218, el]:u128 <- V0
000121ff: mem := mem with [#218 + 0x10, el]:u128 <- V1
00012206: V0 := mem[R1 + 0xE0, el]:u128
0001220e: mem := mem with [R0 + 0xE0, el]:u128 <- V0
00012213: R0 := 0x14A6
00012219: R0 := pad:64[0x118.15:0[R0]]
00012221: mem := mem with [R31 + 0x54C, el]:u32 <- 31:0[R0]
00012226: R0 := 0x421000
0001222c: R0 := R0 + 0x7A0
00012234: mem := mem with [R31 + 0x540, el]:u64 <- R0
00012239: R0 := 0xB6F9
0001223f: R0 := pad:64[0x6697.15:0[R0]]
00012247: mem := mem with [R31 + 0x53C, el]:u32 <- 31:0[R0]
0001224c: R0 := 0xB648
00012252: R0 := pad:64[0x35DE.15:0[R0]]
0001225a: mem := mem with [R31 + 0x538, el]:u32 <- 31:0[R0]
0001225f: R0 := 0x422000
00012265: R0 := R0 + 0x4E0
0001226d: mem := mem with [R31 + 0x530, el]:u64 <- R0
00012274: mem := mem with [R31 + 0x30, el]:u64 <- 0
0001227a: R0 := R31 + 0x30
00012282: mem := mem with [R31 + 0x528, el]:u64 <- R0
00012287: R0 := 0x421000
0001228d: R0 := R0 + 0xFE0
00012295: mem := mem with [R31 + 0x520, el]:u64 <- R0
0001229a: R0 := 0x423000
000122a0: R0 := R0 + 0x3C0
000122a8: mem := mem with [R31 + 0x28, el]:u64 <- R0
000122ae: R0 := R31 + 0x28
000122b6: mem := mem with [R31 + 0x20, el]:u64 <- R0
000122bc: R0 := R31 + 0x20
000122c4: mem := mem with [R31 + 0x518, el]:u64 <- R0
000122c9: R0 := 0xFFFFFFF7
000122d1: mem := mem with [R31 + 0x514, el]:u32 <- 31:0[R0]
000122d6: R0 := 5
000122de: mem := mem with [R31 + 0x510, el]:u32 <- 31:0[R0]
000122e3: R0 := 0x420000
000122e9: R0 := R0 + 0x7C
000122f1: mem := mem with [R31 + 0x508, el]:u64 <- R0
000122f6: R0 := 0x40FE
000122fd: R0 := 63:32[R0].0xB17A.15:0[R0]
00012304: R0 := 63:48[R0].0xDABE.31:0[R0]
0001230a: R0 := 0xD079.47:0[R0]
00012312: mem := mem with [R31 + 0x500, el]:u64 <- R0
00012317: R0 := 0xFDD5
0001231e: R0 := 63:32[R0].0x270A.15:0[R0]
00012325: R0 := 63:48[R0].0xD347.31:0[R0]
0001232b: R0 := 0x2E78.47:0[R0]
00012333: mem := mem with [R31 + 0x4F8, el]:u64 <- R0
00012338: R0 := 0xE36F
0001233e: R0 := pad:64[0xAF1B.15:0[R0]]
00012346: mem := mem with [R31 + 0x4F4, el]:u32 <- 31:0[R0]
0001234b: R0 := 0x421000
00012351: R0 := R0 + 0xF70
00012359: mem := mem with [R31 + 0x4E8, el]:u64 <- R0
00012360: mem := mem with [R31 + 0x4E0, el]:u64 <- 0
00012367: mem := mem with [R31 + 0x5EC, el]:u32 <- 0
0001236c: goto %0001236a

0001236a:
00012372: R0 := pad:64[mem[R31 + 0x5EC, el]:u32]
00012378: #219 := 31:0[R0] - 8
0001237d: VF := extend:64[#219] <> extend:64[31:0[R0]] - 8
00012382: CF := pad:64[#219] <> pad:64[31:0[R0]] + 0xFFFFFFF8
00012386: ZF := #219 = 0
0001238a: NF := 31:31[#219]
00012392: when ~(NF = VF & ~ZF) goto %00012390
000197b1: goto %000123c5

000123c5:
000123ca: mem := mem with [R31 + 0x5EC, el]:u32 <- 0
000123cf: goto %000123cd

000123cd:
000123d5: R0 := pad:64[mem[R31 + 0x5EC, el]:u32]
000123db: #220 := 31:0[R0] - 4
000123e0: VF := extend:64[#220] <> extend:64[31:0[R0]] - 4
000123e5: CF := pad:64[#220] <> pad:64[31:0[R0]] + 0xFFFFFFFC
000123e9: ZF := #220 = 0
000123ed: NF := 31:31[#220]
000123f5: when ~(NF = VF & ~ZF) goto %000123f3
000197b2: goto %0001242e

0001242e:
00012433: mem := mem with [R31 + 0x5EC, el]:u32 <- 0
00012438: goto %00012436

00012436:
0001243e: R0 := pad:64[mem[R31 + 0x5EC, el]:u32]
00012444: #221 := 31:0[R0] - 3
00012449: VF := extend:64[#221] <> extend:64[31:0[R0]] - 3
0001244e: CF := pad:64[#221] <> pad:64[31:0[R0]] + 0xFFFFFFFD
00012452: ZF := #221 = 0
00012456: NF := 31:31[#221]
0001245e: when ~(NF = VF & ~ZF) goto %0001245c
000197b3: goto %00012497

00012497:
0001249c: mem := mem with [R31 + 0x5EC, el]:u32 <- 0
000124a1: goto %0001249f

0001249f:
000124a7: R0 := pad:64[mem[R31 + 0x5EC, el]:u32]
000124ad: #222 := 31:0[R0] - 2
000124b2: VF := extend:64[#222] <> extend:64[31:0[R0]] - 2
000124b7: CF := pad:64[#222] <> pad:64[31:0[R0]] + 0xFFFFFFFE
000124bb: ZF := #222 = 0
000124bf: NF := 31:31[#222]
000124c7: when ~(NF = VF & ~ZF) goto %000124c5
000197b4: goto %00012500

00012500:
00012505: R0 := mem[R31 + 0x530, el]:u64
0001250c: R0 := mem[R0, el]:u64
00012513: R0 := mem[R0, el]:u64
0001251a: R0 := pad:64[mem[R0, el]:u32]
00012520: R0 := pad:64[15:0[R0]]
00012527: R29 := mem[R31, el]:u64
0001252c: R30 := mem[R31 + 8, el]:u64
00012532: R31 := R31 + 0x5F0
00012537: call R30 with noreturn

000124c5:
000124cf: R0 := extend:64[mem[R31 + 0x5EC, el]:u32]
000124d5: R0 := 62:0[R0].0
000124db: R1 := R31 + 0x38
000124e0: R2 := 0xFFFFE554
000124e9: mem := mem with [R1 + R0, el]:u16 <- 15:0[R2]
000124f0: R0 := pad:64[mem[R31 + 0x5EC, el]:u32]
000124f6: R0 := pad:64[31:0[R0] + 1]
000124fe: mem := mem with [R31 + 0x5EC, el]:u32 <- 31:0[R0]
000197b5: goto %0001249f

0001245c:
00012466: R0 := extend:64[mem[R31 + 0x5EC, el]:u32]
0001246c: R0 := 62:0[R0].0
00012472: R1 := R31 + 0x138
00012477: R2 := 0x39C1
00012480: mem := mem with [R1 + R0, el]:u16 <- 15:0[R2]
00012487: R0 := pad:64[mem[R31 + 0x5EC, el]:u32]
0001248d: R0 := pad:64[31:0[R0] + 1]
00012495: mem := mem with [R31 + 0x5EC, el]:u32 <- 31:0[R0]
000197b6: goto %00012436

000123f3:
000123fd: R0 := extend:64[mem[R31 + 0x5EC, el]:u32]
00012403: R0 := 61:0[R0].0
00012409: R1 := R31 + 0x240
0001240e: R2 := 0xFFFFFFFF
00012417: mem := mem with [R1 + R0, el]:u32 <- 31:0[R2]
0001241e: R0 := pad:64[mem[R31 + 0x5EC, el]:u32]
00012424: R0 := pad:64[31:0[R0] + 1]
0001242c: mem := mem with [R31 + 0x5EC, el]:u32 <- 31:0[R0]
000197b7: goto %000123cd

00012390:
0001239a: R0 := extend:64[mem[R31 + 0x5EC, el]:u32]
000123a0: R1 := R31 + 0x4C8
000123a5: R2 := 0xFFFFFFFD
000123ae: mem := mem with [R1 + R0] <- 7:0[R2]
000123b5: R0 := pad:64[mem[R31 + 0x5EC, el]:u32]
000123bb: R0 := pad:64[31:0[R0] + 1]
000123c3: mem := mem with [R31 + 0x5EC, el]:u32 <- 31:0[R0]
000197b8: goto %0001236a

000197b9: sub func_55(func_55_result)
000199b7: func_55_result :: out u32 = low:32[R0]

0000ce50:
0000ce57: R31 := R31 - 0xA0
0000ce5f: mem := mem with [R31 + 8, el]:u64 <- R0
0000ce67: mem := mem with [R31, el]:u64 <- R1
0000ce6c: R0 := 0x420000
0000ce72: R1 := R0 + 0xAA8
0000ce78: R0 := R31 + 0x18
0000ce7f: V0 := mem[R1, el]:u128
0000ce84: V1 := mem[R1 + 0x10, el]:u128
0000ce8c: mem := mem with [R0, el]:u128 <- V0
0000ce92: mem := mem with [R0 + 0x10, el]:u128 <- V1
0000ce98: #64 := R1 + 0x20
0000ce9d: V0 := mem[#64, el]:u128
0000cea2: V1 := mem[#64 + 0x10, el]:u128
0000cea8: #65 := R0 + 0x20
0000ceae: mem := mem with [#65, el]:u128 <- V0
0000ceb4: mem := mem with [#65 + 0x10, el]:u128 <- V1
0000ceba: #66 := R1 + 0x40
0000cebf: V0 := mem[#66, el]:u128
0000cec4: V1 := mem[#66 + 0x10, el]:u128
0000ceca: #67 := R0 + 0x40
0000ced0: mem := mem with [#67, el]:u128 <- V0
0000ced6: mem := mem with [#67 + 0x10, el]:u128 <- V1
0000cedc: #68 := R1 + 0x60
0000cee1: V0 := mem[#68, el]:u128
0000cee6: V1 := mem[#68 + 0x10, el]:u128
0000ceec: #69 := R0 + 0x60
0000cef2: mem := mem with [#69, el]:u128 <- V0
0000cef8: mem := mem with [#69 + 0x10, el]:u128 <- V1
0000cefd: R0 := 0x89CE
0000cf03: R0 := pad:64[0x1020.15:0[R0]]
0000cf0b: mem := mem with [R31 + 0x9C, el]:u32 <- 31:0[R0]
0000cf12: R0 := pad:64[mem[R31 + 0x9C, el]:u32]
0000cf18: R0 := pad:64[31:0[R0] - 1]
0000cf20: mem := mem with [R31 + 0x9C, el]:u32 <- 31:0[R0]
0000cf25: R0 := 0x420000
0000cf2b: R0 := R0 + 0x48
0000cf31: R31 := R31 + 0xA0
0000cf36: call R30 with noreturn

000197ba: sub func_68(func_68_result)
000199b8: func_68_result :: out u32 = low:32[R0]

0000c5c3:
0000c5ca: R31 := R31 - 0x20
0000c5d2: mem := mem with [R31 + 0xF] <- 7:0[R0]
0000c5d9: mem := mem with [R31 + 0x18, el]:u64 <- 0
0000c5e0: R0 := mem[R31 + 0x18, el]:u64
0000c5e6: R31 := R31 + 0x20
0000c5eb: call R30 with noreturn

000197bb: sub func_8(func_8_result)
000199b9: func_8_result :: out u32 = low:32[R0]

0000c407:
0000c40e: R31 := R31 - 0x260
0000c416: mem := mem with [R31, el]:u64 <- R29
0000c41c: mem := mem with [R31 + 8, el]:u64 <- R30
0000c422: R29 := R31
0000c428: #40 := R31 + 0x10
0000c42e: mem := mem with [#40, el]:u64 <- R19
0000c434: mem := mem with [#40 + 8, el]:u64 <- R20
0000c43c: mem := mem with [R31 + 0x28, el]:u64 <- R0
0000c441: R0 := 0x6B8D
0000c448: R0 := 63:32[R0].0xE964.15:0[R0]
0000c44f: R0 := 63:48[R0].0x2DB8.31:0[R0]
0000c455: R0 := 0xFE66.47:0[R0]
0000c45d: mem := mem with [R31 + 0x258, el]:u64 <- R0
0000c462: R0 := 0x420000
0000c468: R1 := R0 + 0x948
0000c46e: R0 := R31 + 0xE8
0000c474: R3 := R1
0000c479: R1 := 0x140
0000c47f: R2 := R1
0000c485: R1 := R3
0000c48a: R30 := 0x4049F8
0000c48d: call @memcpy with return %0000c48f

0000c48f:
0000c492: R0 := 0x420000
0000c498: R0 := R0 + 0x1E8
0000c4a0: mem := mem with [R31 + 0x250, el]:u64 <- R0
0000c4a7: mem := mem with [R31 + 0x248, el]:u64 <- 0
0000c4ac: R0 := 0x420000
0000c4b2: R0 := R0 + 0x118
0000c4ba: mem := mem with [R31 + 0x240, el]:u64 <- R0
0000c4bf: R0 := 0x420000
0000c4c5: R0 := R0 + 0x7C
0000c4cd: mem := mem with [R31 + 0x238, el]:u64 <- R0
0000c4d4: R0 := mem[R31 + 0x258, el]:u64
0000c4d9: VF := 0
0000c4dc: CF := 1
0000c4e0: ZF := R0 = 0
0000c4e4: NF := 63:63[R0]
0000c4ea: when ZF goto %0000c4e8
000197bc: goto %00010c52

0000c4e8:
0000c4f0: R0 := 0x408000
0000c4f6: R1 := R0 + 0xEE0
0000c4fc: R0 := R31 + 0x50
0000c503: V0 := mem[R1, el]:u128
0000c508: V1 := mem[R1 + 0x10, el]:u128
0000c510: mem := mem with [R0, el]:u128 <- V0
0000c516: mem := mem with [R0 + 0x10, el]:u128 <- V1
0000c51c: #41 := R1 + 0x20
0000c521: V0 := mem[#41, el]:u128
0000c526: V1 := mem[#41 + 0x10, el]:u128
0000c52c: #42 := R0 + 0x20
0000c532: mem := mem with [#42, el]:u128 <- V0
0000c538: mem := mem with [#42 + 0x10, el]:u128 <- V1
0000c53f: R1 := mem[R1 + 0x40, el]:u64
0000c547: mem := mem with [R0 + 0x40, el]:u64 <- R1
0000c54c: R0 := 0x420000
0000c552: R0 := R0 + 0x220
0000c559: #43 := mem[R0 + 8, el]:u64
0000c55e: R0 := mem[R0, el]:u64
0000c562: R1 := #43
0000c569: R0 := mem[R31 + 0x28, el]:u64
0000c56f: R0 := pad:64[7:0[R0]]
0000c575: R0 := pad:64[27:0[R0].0]
0000c57b: R0 := extend:64[31:0[R0]]
0000c582: R1 := mem[R31 + 0x28, el]:u64
0000c588: #44 := ~R0
0000c58d: #45 := R1 + ~R0
0000c593: VF := extend:128[#45 + 1] <> extend:128[R1] + extend:128[#44] + 1
0000c599: CF := pad:128[#45 + 1] <> pad:128[R1] + pad:128[#44] + 1
0000c59d: ZF := #45 + 1 = 0
0000c5a1: NF := 63:63[#45 + 1]
0000c5ae: when NF <> VF goto %0000c5a7
0000c5af: goto %0000c5aa

0000c5aa:
0000c5ab: R0 := 1
0000c5b1: goto %0000c5ad

0000c5a7:
0000c5a8: R0 := 0
0000c5b0: goto %0000c5ad

0000c5ad:
0000c5b7: R0 := pad:64[7:0[R0]]
0000c5bd: R0 := pad:64[extend:32[7:0[R0]]]
0000c5c2: R30 := 0x404C9C
0000c5c5: call @func_68 with return %0000fb65

0000fb65:
0000fb68: R0 := 0x409000
0000fb6e: R0 := R0 + 0x9D8
0000fb75: R1 := pad:64[mem[R0 + 0x46, el]:u16]
0000fb7a: R0 := 0x4BF1
0000fb80: #147 := ~31:0[R0]
0000fb85: #148 := 31:0[R1] + ~31:0[R0]
0000fb8b: VF := extend:64[#148 + 1] <> extend:64[31:0[R1]] + extend:64[#147]
          + 1
0000fb91: CF := pad:64[#148 + 1] <> pad:64[31:0[R1]] + pad:64[#147] + 1
0000fb95: ZF := #148 + 1 = 0
0000fb99: NF := 31:31[#148 + 1]
0000fba5: when ZF goto %0000fb9e
0000fba6: goto %0000fba1

0000fba1:
0000fba2: R0 := 1
0000fba8: goto %0000fba4

0000fb9e:
0000fb9f: R0 := 0
0000fba7: goto %0000fba4

0000fba4:
0000fbae: R0 := pad:64[7:0[R0]]
0000fbb4: R1 := pad:64[31:0[R0]]
0000fbb9: R0 := 0x409000
0000fbbf: R0 := R0 + 0x9D8
0000fbc6: R0 := pad:64[mem[R0 + 0x46, el]:u16]
0000fbcc: #149 := ~31:0[R0]
0000fbd1: #150 := 31:0[R1] + ~31:0[R0]
0000fbd7: VF := extend:64[#150 + 1] <> extend:64[31:0[R1]] + extend:64[#149]
          + 1
0000fbdd: CF := pad:64[#150 + 1] <> pad:64[31:0[R1]] + pad:64[#149] + 1
0000fbe1: ZF := #150 + 1 = 0
0000fbe5: NF := 31:31[#150 + 1]
0000fbf2: when NF = VF goto %0000fbeb
0000fbf3: goto %0000fbee

0000fbee:
0000fbef: R0 := 1
0000fbf5: goto %0000fbf1

0000fbeb:
0000fbec: R0 := 0
0000fbf4: goto %0000fbf1

0000fbf1:
0000fbfb: R0 := pad:64[7:0[R0]]
0000fc01: R3 := pad:64[31:0[R0]]
0000fc06: R0 := 0x409000
0000fc0c: R0 := R0 + 0x9D8
0000fc13: R0 := pad:64[mem[R0 + 0x2A, el]:u16]
0000fc19: R1 := pad:64[31:0[R0]]
0000fc1e: R0 := 0
0000fc26: R0 := pad:64[7:0[R0]]
0000fc2d: R1 := mem[R31 + 0x28, el]:u64
0000fc33: R1 := pad:64[7:0[R1]]
0000fc3c: R1 := pad:64[31:0[R2] * 31:0[R1]]
0000fc43: R0 := pad:64[31:0[R0] + ~31:0[R1] + 1]
0000fc49: #151 := ~31:0[R0]
0000fc4e: #152 := 31:0[R3] + ~31:0[R0]
0000fc54: VF := extend:64[#152 + 1] <> extend:64[31:0[R3]] + extend:64[#151]
          + 1
0000fc5a: CF := pad:64[#152 + 1] <> pad:64[31:0[R3]] + pad:64[#151] + 1
0000fc5e: ZF := #152 + 1 = 0
0000fc62: NF := 31:31[#152 + 1]
0000fc70: when ~(NF = VF & ~ZF) goto %0000fc69
0000fc71: goto %0000fc6c

0000fc6c:
0000fc6d: R0 := 1
0000fc73: goto %0000fc6f

0000fc69:
0000fc6a: R0 := 0
0000fc72: goto %0000fc6f

0000fc6f:
0000fc79: R0 := pad:64[7:0[R0]]
0000fc7f: R1 := pad:64[31:0[R0]]
0000fc84: R0 := 0x422000
0000fc8a: R0 := R0 + 0x6F0
0000fc91: R0 := mem[R0, el]:u64
0000fc98: R0 := mem[R0, el]:u64
0000fc9f: R0 := mem[R0, el]:u64
0000fca6: R0 := pad:64[mem[R0, el]:u32]
0000fcb4: when 31:0[R0] = 0 goto %0000fcab
0000fcb5: goto %0000fcb0

0000fcb0:
0000fcb1: R0 := pad:64[31:0[pad:64[31:0[R1]] /$ pad:64[31:0[R0]]]]
0000fcb7: goto %0000fcb3

0000fcab:
0000fcac: R0 := 0
0000fcb6: goto %0000fcb3

0000fcb3:
0000fcbd: R0 := pad:64[15:0[R0]]
0000fcc3: R1 := pad:64[31:0[R0]]
0000fcc8: R0 := 0x420000
0000fcce: R0 := R0 + 0x84
0000fcd5: R0 := pad:64[mem[R0, el]:u16]
0000fcdc: R0 := pad:64[31:0[R1] << pad:10[4:0[R0]]]
0000fce2: R0 := extend:64[31:0[R0]]
0000fce9: R1 := mem[R31 + 0x28, el]:u64
0000fcef: #153 := ~R0
0000fcf4: #154 := R1 + ~R0
0000fcfa: VF := extend:128[#154 + 1] <> extend:128[R1] + extend:128[#153] + 1
0000fd00: CF := pad:128[#154 + 1] <> pad:128[R1] + pad:128[#153] + 1
0000fd04: ZF := #154 + 1 = 0
0000fd08: NF := 63:63[#154 + 1]
0000fd16: when ~(NF = VF & ~ZF) goto %0000fd0f
0000fd17: goto %0000fd12

0000fd12:
0000fd13: R0 := 1
0000fd19: goto %0000fd15

0000fd0f:
0000fd10: R0 := 0
0000fd18: goto %0000fd15

0000fd15:
0000fd1f: R0 := pad:64[7:0[R0]]
0000fd25: R0 := pad:64[extend:32[7:0[R0]]]
0000fd2a: R30 := 0x404D68
0000fd2c: call @func_68 with return %0000fd2e

0000fd2e:
0000fd31: R0 := 1
0000fd39: mem := mem with [R31 + 0x6C, el]:u32 <- 31:0[R0]
000197bd: goto %0000fd3b

00010c52:
00010c57: mem := mem with [R31 + 0x230, el]:u64 <- 0
00010c5d: R0 := R31 + 0x30
00010c62: R1 := 0x420000
00010c68: R1 := R1 + 0xA88
00010c70: V0 := 127:8[V0].mem[R1]
00010c77: V0 := 127:16[V0].mem[R1 + 1].7:0[V0]
00010c7e: V0 := 127:24[V0].mem[R1 + 2].15:0[V0]
00010c85: V0 := 127:32[V0].mem[R1 + 3].23:0[V0]
00010c8c: V0 := 127:40[V0].mem[R1 + 4].31:0[V0]
00010c93: V0 := 127:48[V0].mem[R1 + 5].39:0[V0]
00010c9a: V0 := 127:56[V0].mem[R1 + 6].47:0[V0]
00010ca1: V0 := 127:64[V0].mem[R1 + 7].55:0[V0]
00010ca8: V0 := 127:72[V0].mem[R1 + 8].63:0[V0]
00010caf: V0 := 127:80[V0].mem[R1 + 9].71:0[V0]
00010cb6: V0 := 127:88[V0].mem[R1 + 0xA].79:0[V0]
00010cbd: V0 := 127:96[V0].mem[R1 + 0xB].87:0[V0]
00010cc4: V0 := 127:104[V0].mem[R1 + 0xC].95:0[V0]
00010ccb: V0 := 127:112[V0].mem[R1 + 0xD].103:0[V0]
00010cd2: V0 := 127:120[V0].mem[R1 + 0xE].111:0[V0]
00010cd8: V0 := mem[R1 + 0xF].119:0[V0]
00010cde: V1 := 127:8[V1].mem[R1 + 0x10]
00010ce5: V1 := 127:16[V1].mem[R1 + 0x11].7:0[V1]
00010cec: V1 := 127:24[V1].mem[R1 + 0x12].15:0[V1]
00010cf3: V1 := 127:32[V1].mem[R1 + 0x13].23:0[V1]
00010cfa: V1 := 127:40[V1].mem[R1 + 0x14].31:0[V1]
00010d01: V1 := 127:48[V1].mem[R1 + 0x15].39:0[V1]
00010d08: V1 := 127:56[V1].mem[R1 + 0x16].47:0[V1]
00010d0f: V1 := 127:64[V1].mem[R1 + 0x17].55:0[V1]
00010d16: V1 := 127:72[V1].mem[R1 + 0x18].63:0[V1]
00010d1d: V1 := 127:80[V1].mem[R1 + 0x19].71:0[V1]
00010d24: V1 := 127:88[V1].mem[R1 + 0x1A].79:0[V1]
00010d2b: V1 := 127:96[V1].mem[R1 + 0x1B].87:0[V1]
00010d32: V1 := 127:104[V1].mem[R1 + 0x1C].95:0[V1]
00010d39: V1 := 127:112[V1].mem[R1 + 0x1D].103:0[V1]
00010d40: V1 := 127:120[V1].mem[R1 + 0x1E].111:0[V1]
00010d46: V1 := mem[R1 + 0x1F].119:0[V1]
00010d4e: mem := mem with [R0] <- 7:0[V0]
00010d54: mem := mem with [R0 + 1] <- 15:8[V0]
00010d5a: mem := mem with [R0 + 2] <- 23:16[V0]
00010d60: mem := mem with [R0 + 3] <- 31:24[V0]
00010d66: mem := mem with [R0 + 4] <- 39:32[V0]
00010d6c: mem := mem with [R0 + 5] <- 47:40[V0]
00010d72: mem := mem with [R0 + 6] <- 55:48[V0]
00010d78: mem := mem with [R0 + 7] <- 63:56[V0]
00010d7e: mem := mem with [R0 + 8] <- 71:64[V0]
00010d84: mem := mem with [R0 + 9] <- 79:72[V0]
00010d8a: mem := mem with [R0 + 0xA] <- 87:80[V0]
00010d90: mem := mem with [R0 + 0xB] <- 95:88[V0]
00010d96: mem := mem with [R0 + 0xC] <- 103:96[V0]
00010d9c: mem := mem with [R0 + 0xD] <- 111:104[V0]
00010da2: mem := mem with [R0 + 0xE] <- 119:112[V0]
00010da8: mem := mem with [R0 + 0xF] <- 127:120[V0]
00010dae: mem := mem with [R0 + 0x10] <- 7:0[V1]
00010db4: mem := mem with [R0 + 0x11] <- 15:8[V1]
00010dba: mem := mem with [R0 + 0x12] <- 23:16[V1]
00010dc0: mem := mem with [R0 + 0x13] <- 31:24[V1]
00010dc6: mem := mem with [R0 + 0x14] <- 39:32[V1]
00010dcc: mem := mem with [R0 + 0x15] <- 47:40[V1]
00010dd2: mem := mem with [R0 + 0x16] <- 55:48[V1]
00010dd8: mem := mem with [R0 + 0x17] <- 63:56[V1]
00010dde: mem := mem with [R0 + 0x18] <- 71:64[V1]
00010de4: mem := mem with [R0 + 0x19] <- 79:72[V1]
00010dea: mem := mem with [R0 + 0x1A] <- 87:80[V1]
00010df0: mem := mem with [R0 + 0x1B] <- 95:88[V1]
00010df6: mem := mem with [R0 + 0x1C] <- 103:96[V1]
00010dfc: mem := mem with [R0 + 0x1D] <- 111:104[V1]
00010e02: mem := mem with [R0 + 0x1E] <- 119:112[V1]
00010e08: mem := mem with [R0 + 0x1F] <- 127:120[V1]
00010e0d: R0 := 0x408000
00010e13: R1 := R0 + 0xE50
00010e19: R0 := R31 + 0x50
00010e20: V0 := mem[R1, el]:u128
00010e25: V1 := mem[R1 + 0x10, el]:u128
00010e2d: mem := mem with [R0, el]:u128 <- V0
00010e33: mem := mem with [R0 + 0x10, el]:u128 <- V1
00010e39: #171 := R1 + 0x20
00010e3e: V0 := mem[#171, el]:u128
00010e43: V1 := mem[#171 + 0x10, el]:u128
00010e49: #172 := R0 + 0x20
00010e4f: mem := mem with [#172, el]:u128 <- V0
00010e55: mem := mem with [#172 + 0x10, el]:u128 <- V1
00010e5b: #173 := R1 + 0x40
00010e60: V0 := mem[#173, el]:u128
00010e65: V1 := mem[#173 + 0x10, el]:u128
00010e6b: #174 := R0 + 0x40
00010e71: mem := mem with [#174, el]:u128 <- V0
00010e77: mem := mem with [#174 + 0x10, el]:u128 <- V1
00010e7d: #175 := R1 + 0x60
00010e82: V0 := mem[#175, el]:u128
00010e87: V1 := mem[#175 + 0x10, el]:u128
00010e8d: #176 := R0 + 0x60
00010e93: mem := mem with [#176, el]:u128 <- V0
00010e99: mem := mem with [#176 + 0x10, el]:u128 <- V1
00010ea0: V0 := mem[R1 + 0x80, el]:u128
00010ea8: mem := mem with [R0 + 0x80, el]:u128 <- V0
00010ead: R0 := 0x420000
00010eb3: R0 := R0 + 0x108
00010ebb: mem := mem with [R31 + 0x228, el]:u64 <- R0
00010ec2: mem := mem with [R31 + 0xE0, el]:u64 <- 0
00010ec9: mem := mem with [R31 + 0x78, el]:u32 <- 0
00010ed0: R0 := pad:64[mem[R31 + 0x80, el]:u32]
00010ed6: R0 := pad:64[15:0[R0]]
00010edc: R19 := pad:64[31:0[R0]]
00010ee1: R0 := 0x420000
00010ee7: R0 := R0 + 0x50
00010eee: R0 := pad:64[extend:32[mem[R0 + 4, el]:u16]]
00010ef4: R20 := pad:64[31:0[R0]]
00010ef9: R0 := 0x420000
00010eff: R0 := R0 + 0x48
00010f06: R0 := pad:64[mem[R0, el]:u32]
00010f0c: R5 := pad:64[extend:32[7:0[R0]]]
00010f13: R0 := mem[R31 + 0x1F0, el]:u64
00010f18: VF := 0
00010f1b: CF := 1
00010f1f: ZF := R0 = 0
00010f23: NF := 63:63[R0]
00010f2f: when ZF goto %00010f28
00010f30: goto %00010f2b

00010f2b:
00010f2c: R0 := 1
00010f32: goto %00010f2e

00010f28:
00010f29: R0 := 0
00010f31: goto %00010f2e

00010f2e:
00010f38: R0 := pad:64[7:0[R0]]
00010f3e: R6 := pad:64[31:0[R0]]
00010f43: R0 := 0x420000
00010f49: R0 := R0 + 0x48
00010f50: R0 := pad:64[mem[R0, el]:u32]
00010f56: R1 := extend:64[31:0[R0]]
00010f5b: R2 := 0
00010f60: R0 := 0x420000
00010f66: R4 := R0 + 0x56
00010f6c: R3 := R2
00010f72: R2 := R1
00010f78: R1 := pad:64[31:0[R6]]
00010f7e: R0 := pad:64[31:0[R5]]
00010f83: R30 := 0x404AFC
00010f85: call @func_33 with return %00010f87

00010f87:
00010f8d: mem := mem with [R31 + 0x250, el]:u64 <- R0
00010f94: R0 := mem[R31 + 0x28, el]:u64
00010f9a: R1 := pad:64[31:0[R0]]
00010f9f: R0 := 0x420000
00010fa5: R4 := R0 + 0x56
00010fab: R3 := pad:64[31:0[R1]]
00010fb2: R2 := mem[R31 + 0x248, el]:u64
00010fb9: R1 := mem[R31 + 0x250, el]:u64
00010fbf: R0 := pad:64[31:0[R20]]
00010fc4: R30 := 0x404B24
00010fc6: call @func_27 with return %00010fc8

00010fc8:
00010fcc: R0 := pad:64[15:0[R0]]
00010fd1: R1 := 0xFFFFA012
00010fd8: R0 := pad:64[31:0[R1] + ~31:0[R0] + 1]
00010fde: R0 := pad:64[15:0[R0]]
00010fe5: R0 := pad:64[31:0[R19] ~>> pad:10[4:0[R0]]]
00010feb: R0 := extend:64[31:0[R0]]
00010ff2: R1 := mem[R31 + 0x28, el]:u64
00011000: when R1 = 0 goto %00010ff7
00011001: goto %00010ffc

00010ffc:
00010ffd: R2 := 63:0[pad:128[R0] /$ pad:128[R1]]
00011003: goto %00010fff

00010ff7:
00010ff8: R2 := 0
00011002: goto %00010fff

00010fff:
0001100a: R1 := R2 * R1
00011011: R1 := R0 + ~R1 + 1
00011016: R0 := 0x5997
0001101c: #177 := ~R0
00011021: #178 := R1 + ~R0
00011027: VF := extend:128[#178 + 1] <> extend:128[R1] + extend:128[#177] + 1
0001102d: CF := pad:128[#178 + 1] <> pad:128[R1] + pad:128[#177] + 1
00011031: ZF := #178 + 1 = 0
00011035: NF := 63:63[#178 + 1]
0001103a: R0 := 1
00011040: R1 := pad:64[7:0[R0]]
00011045: R0 := 0x8081
0001104b: R0 := pad:64[0x8080.15:0[R0]]
00011052: R0 := pad:64[31:0[R1]] * pad:64[31:0[R0]]
00011058: R0 := pad:64[63:32[R0]]
0001105e: R2 := pad:64[31:7[R0]]
00011064: R0 := pad:64[31:0[R2]]
0001106a: R0 := pad:64[23:0[R0].0]
00011071: R0 := pad:64[31:0[R0] + ~31:0[R2] + 1]
00011078: R0 := pad:64[31:0[R1] + ~31:0[R0] + 1]
0001107e: R0 := pad:64[7:0[R0]]
00011084: R1 := pad:64[31:0[R0]]
00011089: R0 := 0x422000
0001108f: R0 := R0 + 0x768
00011096: R0 := mem[R0, el]:u64
0001109d: R0 := mem[R0, el]:u64
000110a4: R0 := pad:64[mem[R0, el]:u16]
000110aa: #179 := ~31:0[R0]
000110af: #180 := 31:0[R1] + ~31:0[R0]
000110b5: VF := extend:64[#180 + 1] <> extend:64[31:0[R1]] + extend:64[#179]
          + 1
000110bb: CF := pad:64[#180 + 1] <> pad:64[31:0[R1]] + pad:64[#179] + 1
000110bf: ZF := #180 + 1 = 0
000110c3: NF := 31:31[#180 + 1]
000110ca: R2 := mem[R31 + 0x28, el]:u64
000110cf: R0 := 0x421000
000110d5: R0 := R0 + 0xF98
000110dc: R0 := mem[R0, el]:u64
000110e3: R0 := mem[R0, el]:u64
000110ea: R0 := mem[R0, el]:u64
000110f1: R0 := pad:64[mem[R0, el]:u32]
000110f7: R1 := pad:64[31:0[R0]]
000110fd: R0 := pad:64[31:0[R2]]
00011104: R1 := pad:64[31:0[R1] & 31:0[R0]]
00011109: R0 := 0x421000
0001110f: R0 := R0 + 0xF98
00011116: R0 := mem[R0, el]:u64
0001111d: R0 := mem[R0, el]:u64
00011124: R0 := mem[R0, el]:u64
0001112c: mem := mem with [R0, el]:u32 <- 31:0[R1]
00011133: R1 := pad:64[mem[R0, el]:u32]
0001113a: R0 := mem[R31 + 0x228, el]:u64
00011141: R0 := pad:64[mem[R0, el]:u32]
00011148: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001114f: R0 := mem[R31 + 0x228, el]:u64
00011157: mem := mem with [R0, el]:u32 <- 31:0[R1]
0001115c: R2 := 0x1CEA
00011163: R2 := 63:32[R2].0xA859.15:0[R2]
00011168: R0 := 0x421000
0001116e: R0 := R0 + 0x670
00011175: R0 := mem[R0, el]:u64
0001117c: R1 := pad:64[mem[R0, el]:u32]
00011181: R0 := 0x421000
00011187: R0 := R0 + 0x670
0001118e: R0 := mem[R0, el]:u64
00011195: R1 := pad:64[31:0[R1] & 31:0[R2]]
0001119d: mem := mem with [R0, el]:u32 <- 31:0[R1]
000111a2: R0 := 0x421000
000111a8: R0 := R0 + 0x778
000111af: R19 := mem[R0, el]:u64
000111b6: R1 := mem[R31 + 0xE0, el]:u64
000111bd: R0 := mem[R31 + 0x240, el]:u64
000111c2: R30 := 0x404C3C
000111c4: call @func_55 with return %000111c6

000111c6:
000111cc: mem := mem with [R19, el]:u64 <- R0
000111d0: goto %0000fd3b

0000fd3b:
0000fd40: R0 := mem[R31 + 0x238, el]:u64
0000fd46: #155 := R31 + 0x10
0000fd4b: R19 := mem[#155, el]:u64
0000fd50: R20 := mem[#155 + 8, el]:u64
0000fd57: R29 := mem[R31, el]:u64
0000fd5c: R30 := mem[R31 + 8, el]:u64
0000fd62: R31 := R31 + 0x260
0000fd67: call R30 with noreturn

000197be: sub func_90(func_90_result)
000199ba: func_90_result :: out u32 = low:32[R0]

0000c5ed:
0000c5f1: R31 := R31 - 0x5F0
0000c5f9: mem := mem with [R31, el]:u64 <- R29
0000c5ff: mem := mem with [R31 + 8, el]:u64 <- R30
0000c605: R29 := R31
0000c60d: mem := mem with [R31 + 0x10, el]:u64 <- R19
0000c615: mem := mem with [R31 + 0x28, el]:u64 <- R0
0000c61d: mem := mem with [R31 + 0x20, el]:u64 <- R1
0000c622: R0 := 0x420000
0000c628: R0 := R0 + 0x88
0000c630: mem := mem with [R31 + 0x5D0, el]:u64 <- R0
0000c635: R0 := 0x420000
0000c63b: R0 := R0 + 0x90
0000c643: mem := mem with [R31 + 0x5C8, el]:u64 <- R0
0000c648: R0 := 1
0000c650: mem := mem with [R31 + 0x5EC, el]:u32 <- 31:0[R0]
0000c655: R0 := 0x423000
0000c65b: R0 := R0 + 0x900
0000c663: mem := mem with [R31 + 0x5C0, el]:u64 <- R0
0000c66a: mem := mem with [R31 + 0x5B8, el]:u64 <- 0
0000c66f: R0 := 0xB4A2
0000c675: R0 := pad:64[0x4B26.15:0[R0]]
0000c67d: mem := mem with [R31 + 0x5B4, el]:u32 <- 31:0[R0]
0000c682: R0 := 0xFFFFFFFA
0000c68a: mem := mem with [R31 + 0x5B0, el]:u32 <- 31:0[R0]
0000c691: mem := mem with [R31 + 0x5AC, el]:u32 <- 0
0000c696: R0 := 0x36F7
0000c69d: R0 := 63:32[R0].0xF948.15:0[R0]
0000c6a4: R0 := 63:48[R0].0x430D.31:0[R0]
0000c6aa: R0 := 0xC24C.47:0[R0]
0000c6b2: mem := mem with [R31 + 0x5A0, el]:u64 <- R0
0000c6b7: R0 := 0x420000
0000c6bd: R1 := R0 + 0xB28
0000c6c3: R0 := R31 + 0x420
0000c6ca: V0 := mem[R1, el]:u128
0000c6cf: V1 := mem[R1 + 0x10, el]:u128
0000c6d7: mem := mem with [R0, el]:u128 <- V0
0000c6dd: mem := mem with [R0 + 0x10, el]:u128 <- V1
0000c6e3: #46 := R1 + 0x20
0000c6e8: V0 := mem[#46, el]:u128
0000c6ed: V1 := mem[#46 + 0x10, el]:u128
0000c6f3: #47 := R0 + 0x20
0000c6f9: mem := mem with [#47, el]:u128 <- V0
0000c6ff: mem := mem with [#47 + 0x10, el]:u128 <- V1
0000c705: R0 := R31 + 0x420
0000c70b: R0 := R0 + 0x28
0000c713: mem := mem with [R31 + 0x470, el]:u64 <- R0
0000c719: R0 := R31 + 0x420
0000c71f: R0 := R0 + 0x28
0000c727: mem := mem with [R31 + 0x478, el]:u64 <- R0
0000c72d: R0 := R31 + 0x420
0000c733: R0 := R0 + 0x28
0000c73b: mem := mem with [R31 + 0x480, el]:u64 <- R0
0000c741: R0 := R31 + 0x420
0000c747: R0 := R0 + 0x28
0000c74f: mem := mem with [R31 + 0x488, el]:u64 <- R0
0000c755: R0 := R31 + 0x420
0000c75b: R0 := R0 + 0x28
0000c763: mem := mem with [R31 + 0x490, el]:u64 <- R0
0000c769: R0 := R31 + 0x3F8
0000c76f: R1 := R31 + 0x470
0000c776: V0 := mem[R1, el]:u128
0000c77b: V1 := mem[R1 + 0x10, el]:u128
0000c783: mem := mem with [R0, el]:u128 <- V0
0000c789: mem := mem with [R0 + 0x10, el]:u128 <- V1
0000c790: R1 := mem[R1 + 0x20, el]:u64
0000c798: mem := mem with [R0 + 0x20, el]:u64 <- R1
0000c79f: mem := mem with [R31 + 0x5E8, el]:u32 <- 0
0000c7a4: goto %0000c7a2

0000c7a2:
0000c7aa: R0 := pad:64[mem[R31 + 0x5E8, el]:u32]
0000c7b0: #48 := 31:0[R0] - 3
0000c7b5: VF := extend:64[#48] <> extend:64[31:0[R0]] - 3
0000c7ba: CF := pad:64[#48] <> pad:64[31:0[R0]] + 0xFFFFFFFD
0000c7be: ZF := #48 = 0
0000c7c2: NF := 31:31[#48]
0000c7ca: when ~(NF = VF & ~ZF) goto %0000c7c8
000197bf: goto %0000c809

0000c809:
0000c80c: R0 := 0x420000
0000c812: R0 := R0 + 0x84
0000c819: mem := mem with [R0, el]:u16 <- 0
0000c81e: goto %0000c81c

0000c81c:
0000c822: R0 := 0x420000
0000c828: R0 := R0 + 0x84
0000c82f: R0 := pad:64[mem[R0, el]:u16]
0000c835: #49 := 31:0[R0] - 7
0000c83a: VF := extend:64[#49] <> extend:64[31:0[R0]] - 7
0000c83f: CF := pad:64[#49] <> pad:64[31:0[R0]] + 0xFFFFFFF9
0000c843: ZF := #49 = 0
0000c847: NF := 31:31[#49]
0000c84e: when ~(CF & ~ZF) goto %0000c84c
000197c0: goto %0000fb46

0000fb46:
0000fb49: R0 := 0x421000
0000fb4f: R0 := R0 + 0xF58
0000fb56: mem := mem with [R0, el]:u64 <- 0
0000fb5d: R0 := mem[R31 + 0x20, el]:u64
0000fb63: R0 := pad:64[7:0[R0]]
000197c1: goto %0000e0ee

0000c84c:
0000c854: R0 := 0x409000
0000c85a: R1 := R0 + 0x1F0
0000c860: R0 := R31 + 0xB0
0000c867: V0 := mem[R1, el]:u128
0000c86c: V1 := mem[R1 + 0x10, el]:u128
0000c874: mem := mem with [R0, el]:u128 <- V0
0000c87a: mem := mem with [R0 + 0x10, el]:u128 <- V1
0000c880: #50 := R1 + 0x20
0000c885: V0 := mem[#50, el]:u128
0000c88a: V1 := mem[#50 + 0x10, el]:u128
0000c890: #51 := R0 + 0x20
0000c896: mem := mem with [#51, el]:u128 <- V0
0000c89c: mem := mem with [#51 + 0x10, el]:u128 <- V1
0000c8a2: #52 := R1 + 0x40
0000c8a7: V0 := mem[#52, el]:u128
0000c8ac: V1 := mem[#52 + 0x10, el]:u128
0000c8b2: #53 := R0 + 0x40
0000c8b8: mem := mem with [#53, el]:u128 <- V0
0000c8be: mem := mem with [#53 + 0x10, el]:u128 <- V1
0000c8c5: V0 := mem[R1 + 0x60, el]:u128
0000c8cd: mem := mem with [R0 + 0x60, el]:u128 <- V0
0000c8d2: R0 := 0x420000
0000c8d8: R0 := R0 + 0x44
0000c8e0: mem := mem with [R31 + 0x598, el]:u64 <- R0
0000c8e5: R0 := 0x420000
0000c8eb: R1 := R0 + 0xB68
0000c8f1: R0 := R31 + 0x220
0000c8f7: R3 := R1
0000c8fc: R1 := 0x190
0000c902: R2 := R1
0000c908: R1 := R3
0000c90d: R30 := 0x4057C4
0000c90f: call @memcpy with return %0000c911

0000c911:
0000c914: R0 := 0x420000
0000c91a: R0 := R0 + 0x78
0000c922: mem := mem with [R31 + 0x590, el]:u64 <- R0
0000c927: R0 := 0x423000
0000c92d: R0 := R0 + 0x900
0000c935: mem := mem with [R31 + 0x588, el]:u64 <- R0
0000c93a: R0 := 0x423000
0000c940: R0 := R0 + 0x900
0000c948: mem := mem with [R31 + 0x580, el]:u64 <- R0
0000c94e: #54 := R31 + 0x38
0000c953: mem := mem with [#54, el]:u64 <- 0
0000c958: mem := mem with [#54 + 8, el]:u64 <- 0
0000c95e: #55 := R31 + 0x48
0000c963: mem := mem with [#55, el]:u64 <- 0
0000c968: mem := mem with [#55 + 8, el]:u64 <- 0
0000c96f: mem := mem with [R31 + 0x58, el]:u64 <- 0
0000c976: mem := mem with [R31 + 0x57C, el]:u32 <- 0
0000c97b: R0 := 0xFFFFFFFF
0000c983: mem := mem with [R31 + 0x578, el]:u32 <- 31:0[R0]
0000c988: R0 := 0xA70
0000c98e: R0 := pad:64[0x2CF0.15:0[R0]]
0000c996: mem := mem with [R31 + 0x574, el]:u32 <- 31:0[R0]
0000c99b: R0 := 0x3F8C
0000c9a1: R0 := pad:64[0xB8D9.15:0[R0]]
0000c9a9: mem := mem with [R31 + 0x570, el]:u32 <- 31:0[R0]
0000c9ae: R0 := 0x420000
0000c9b4: R0 := R0 + 0x70
0000c9bb: mem := mem with [R0] <- 0
0000c9c2: R0 := 0x420000
0000c9c8: R0 := R0 + 0x70
0000c9cf: R0 := pad:64[mem[R0]]
0000c9d5: #56 := 31:0[R0] - 5
0000c9da: VF := extend:64[#56] <> extend:64[31:0[R0]] - 5
0000c9df: CF := pad:64[#56] <> pad:64[31:0[R0]] + 0xFFFFFFFB
0000c9e3: ZF := #56 = 0
0000c9e7: NF := 31:31[#56]
0000c9ee: when CF & ~ZF goto %0000c9ec
000197c2: goto %0000e09e

0000c9ec:
0000c9f4: R0 := 0x420000
0000c9fa: R0 := R0 + 0x70
0000ca01: mem := mem with [R0] <- 0
0000ca06: goto %0000ca04

0000ca04:
0000ca0a: R0 := 0x420000
0000ca10: R0 := R0 + 0x70
0000ca17: R0 := pad:64[mem[R0]]
0000ca1d: #57 := 31:0[R0] - 5
0000ca22: VF := extend:64[#57] <> extend:64[31:0[R0]] - 5
0000ca27: CF := pad:64[#57] <> pad:64[31:0[R0]] + 0xFFFFFFFB
0000ca2b: ZF := #57 = 0
0000ca2f: NF := 31:31[#57]
0000ca36: when ~(CF & ~ZF) goto %0000ca34
000197c3: goto %0000cafe

0000cafe:
0000cb03: R0 := mem[R31 + 0x590, el]:u64
0000cb0a: R1 := pad:64[mem[R31 + 0x5EC, el]:u32]
0000cb12: mem := mem with [R0, el]:u32 <- 31:0[R1]
0000cb19: R0 := mem[R31 + 0x28, el]:u64
0000cb20: R0 := mem[R0, el]:u64
0000cb27: R0 := pad:64[mem[R0, el]:u32]
0000cb2c: VF := 0
0000cb2f: CF := 1
0000cb33: ZF := 31:0[R0] = 0
0000cb37: NF := 31:31[R0]
0000cb3d: when ZF <> 1 goto %0000cb3b
000197c4: goto %0000cb73

0000cb3b:
000197c5: goto %0000cb42

0000cb73:
0000cb76: R0 := 0x420000
0000cb7c: R0 := R0 + 0xA0
0000cb81: R1 := 1
0000cb89: mem := mem with [R0, el]:u32 <- 31:0[R1]
0000cb8e: goto %0000cb8c

0000cb8c:
0000cb92: R0 := 0x420000
0000cb98: R0 := R0 + 0xA0
0000cb9f: R0 := pad:64[mem[R0, el]:u32]
0000cba5: #59 := 31:0[R0] - 7
0000cbaa: VF := extend:64[#59] <> extend:64[31:0[R0]] - 7
0000cbaf: CF := pad:64[#59] <> pad:64[31:0[R0]] + 0xFFFFFFF9
0000cbb3: ZF := #59 = 0
0000cbb7: NF := 31:31[#59]
0000cbbf: when ~(NF = VF & ~ZF) goto %0000cbbd
000197c6: goto %0000e09a

0000e09a:
0000e09c: goto %0000cb42

0000cb42:
0000cb45: R0 := 0x420000
0000cb4b: R0 := R0 + 0x84
0000cb52: R0 := pad:64[mem[R0, el]:u16]
0000cb58: R0 := pad:64[31:0[R0] + 1]
0000cb5e: R1 := pad:64[15:0[R0]]
0000cb63: R0 := 0x420000
0000cb69: R0 := R0 + 0x84
0000cb71: mem := mem with [R0, el]:u16 <- 15:0[R1]
000197c7: goto %0000c81c

0000cbbd:
0000cbc5: R0 := 0x420000
0000cbcb: R0 := R0 + 0xB0
0000cbd3: mem := mem with [R31 + 0x568, el]:u64 <- R0
0000cbd9: #60 := R31 + 0x60
0000cbde: mem := mem with [#60, el]:u64 <- 0
0000cbe3: mem := mem with [#60 + 8, el]:u64 <- 0
0000cbe9: #61 := R31 + 0x70
0000cbee: mem := mem with [#61, el]:u64 <- 0
0000cbf3: mem := mem with [#61 + 8, el]:u64 <- 0
0000cbfa: mem := mem with [R31 + 0x80, el]:u64 <- 0
0000cc01: mem := mem with [R31 + 0x3E8, el]:u64 <- 0
0000cc06: R0 := 0x420000
0000cc0c: R0 := R0 + 0xC8
0000cc14: mem := mem with [R31 + 0x560, el]:u64 <- R0
0000cc19: R0 := 0xFFFFFFF7
0000cc21: mem := mem with [R31 + 0x3E4, el]:u32 <- 31:0[R0]
0000cc26: R0 := 0x420000
0000cc2c: R0 := R0 + 0x64
0000cc34: mem := mem with [R31 + 0x558, el]:u64 <- R0
0000cc39: R0 := 4
0000cc41: mem := mem with [R31 + 0x554, el]:u32 <- 31:0[R0]
0000cc46: R0 := 2
0000cc4e: mem := mem with [R31 + 0x550, el]:u32 <- 31:0[R0]
0000cc53: R0 := 0xE9E
0000cc59: R0 := pad:64[0x1A3F.15:0[R0]]
0000cc61: mem := mem with [R31 + 0x54C, el]:u32 <- 31:0[R0]
0000cc66: R0 := 0xA4BC
0000cc6c: R0 := pad:64[0xF026.15:0[R0]]
0000cc74: mem := mem with [R31 + 0x548, el]:u32 <- 31:0[R0]
0000cc79: R0 := 0xAE2
0000cc7f: R0 := pad:64[0xEF8D.15:0[R0]]
0000cc87: mem := mem with [R31 + 0x544, el]:u32 <- 31:0[R0]
0000cc8c: R0 := 0x63DE
0000cc92: R0 := pad:64[0x47D1.15:0[R0]]
0000cc9a: mem := mem with [R31 + 0x540, el]:u32 <- 31:0[R0]
0000cca1: mem := mem with [R31 + 0x5E4, el]:u32 <- 0
0000cca6: goto %0000cca4

0000cca4:
0000ccac: R0 := pad:64[mem[R31 + 0x5E4, el]:u32]
0000ccb2: #62 := 31:0[R0] - 4
0000ccb7: VF := extend:64[#62] <> extend:64[31:0[R0]] - 4
0000ccbc: CF := pad:64[#62] <> pad:64[31:0[R0]] + 0xFFFFFFFC
0000ccc0: ZF := #62 = 0
0000ccc4: NF := 31:31[#62]
0000cccc: when ~(NF = VF & ~ZF) goto %0000ccca
000197c8: goto %0000ccff

0000ccff:
0000cd02: R0 := 0x420000
0000cd08: R0 := R0 + 0x70
0000cd0f: R0 := pad:64[mem[R0]]
0000cd15: R3 := pad:64[31:0[R0]]
0000cd1c: R0 := mem[R31 + 0x20, el]:u64
0000cd21: VF := 0
0000cd24: CF := 1
0000cd28: ZF := R0 = 0
0000cd2c: NF := 63:63[R0]
0000cd32: when ZF <> 1 goto %0000cd30
000197c9: goto %0000e055

0000e055:
0000e058: R0 := 0x420000
0000e05e: R0 := R0 + 0xA0
0000e065: R0 := pad:64[mem[R0, el]:u32]
0000e06b: R1 := pad:64[15:0[R0]]
0000e072: R0 := mem[R31 + 0x568, el]:u64
0000e07a: mem := mem with [R0, el]:u16 <- 15:0[R1]
0000e081: R0 := mem[R31 + 0x568, el]:u64
0000e088: R0 := pad:64[mem[R0, el]:u16]
0000e08d: VF := 0
0000e090: CF := 1
0000e094: ZF := 31:0[R0] = 0
0000e098: NF := 31:31[R0]
000197ca: goto %0000cd30

0000cd30:
0000cd3a: R0 := mem[R31 + 0x20, el]:u64
0000cd40: R1 := pad:64[31:0[R0]]
0000cd47: R0 := mem[R31 + 0x590, el]:u64
0000cd4f: mem := mem with [R0, el]:u32 <- 31:0[R1]
0000cd54: R0 := 0
0000cd5b: R1 := mem[R31 + 0x20, el]:u64
0000cd64: R1 := pad:64[31:0[R2] * 31:0[R1]]
0000cd6b: R0 := pad:64[31:0[R0] + ~31:0[R1] + 1]
0000cd71: R1 := extend:64[31:0[R0]]
0000cd78: R0 := mem[R31 + 0x20, el]:u64
0000cd7f: R0 := R1 ^ R0
0000cd85: #63 := R0 - 0xF1
0000cd8a: VF := extend:128[#63] <> extend:128[R0] - 0xF1
0000cd8f: CF := pad:128[#63] <> pad:128[R0] + 0xFFFFFFFFFFFFFF0F
0000cd93: ZF := #63 = 0
0000cd97: NF := 63:63[#63]
0000cda5: when ~(NF = VF & ~ZF) goto %0000cd9e
0000cda6: goto %0000cda1

0000cda1:
0000cda2: R0 := 1
0000cda8: goto %0000cda4

0000cd9e:
0000cd9f: R0 := 0
0000cda7: goto %0000cda4

0000cda4:
0000cdae: R0 := pad:64[7:0[R0]]
0000cdb5: R0 := pad:64[31:0[R3] ~>> pad:10[4:0[R0]]]
0000cdba: VF := 0
0000cdbd: CF := 1
0000cdc1: ZF := 31:0[R0] = 0
0000cdc5: NF := 31:31[R0]
0000cdca: R0 := 0x421000
0000cdd0: R0 := R0 + 0x768
0000cdd7: R0 := mem[R0, el]:u64
0000cdde: R0 := mem[R0, el]:u64
0000cde5: R1 := pad:64[mem[R0, el]:u32]
0000cdec: R0 := mem[R31 + 0x558, el]:u64
0000cdf3: R0 := pad:64[mem[R0, el]:u32]
0000cdfa: R1 := pad:64[31:0[R1] | 31:0[R0]]
0000ce01: R0 := mem[R31 + 0x558, el]:u64
0000ce09: mem := mem with [R0, el]:u32 <- 31:0[R1]
0000ce10: R0 := mem[R31 + 0x558, el]:u64
0000ce15: R1 := 1
0000ce1d: mem := mem with [R0, el]:u32 <- 31:0[R1]
0000ce24: R0 := mem[R31 + 0x5C0, el]:u64
0000ce2b: R2 := mem[R0, el]:u64
0000ce30: R0 := 0x421000
0000ce36: R0 := R0 + 0x778
0000ce3d: R19 := mem[R0, el]:u64
0000ce44: R1 := mem[R31 + 0x50, el]:u64
0000ce4a: R0 := R2
0000ce4f: R30 := 0x405ABC
0000ce52: call @func_55 with return %0000cf38

0000cf38:
0000cf3e: mem := mem with [R19, el]:u64 <- R0
0000cf43: R0 := 0x420000
0000cf49: R0 := R0 + 0x58
0000cf4e: R1 := 4
0000cf56: mem := mem with [R0, el]:u32 <- 31:0[R1]
0000cf5b: goto %0000cf59

0000cf59:
0000cf5f: R0 := 0x420000
0000cf65: R0 := R0 + 0x58
0000cf6c: R0 := pad:64[mem[R0, el]:u32]
0000cf71: VF := 0
0000cf74: CF := 1
0000cf78: ZF := 31:0[R0] = 0
0000cf7c: NF := 31:31[R0]
0000cf84: when NF = VF & ~ZF goto %0000cf82
000197cb: goto %0000e02a

0000e02a:
0000e02d: R0 := 0x420000
0000e033: R0 := R0 + 0xA0
0000e03a: R0 := pad:64[mem[R0, el]:u32]
0000e040: R1 := pad:64[31:0[R0] + 1]
0000e045: R0 := 0x420000
0000e04b: R0 := R0 + 0xA0
0000e053: mem := mem with [R0, el]:u32 <- 31:0[R1]
000197cc: goto %0000cb8c

0000cf82:
0000cf8a: R0 := 0x420000
0000cf90: R0 := R0 + 0x48
0000cf98: mem := mem with [R31 + 0x120, el]:u64 <- R0
0000cf9d: R0 := 0x420000
0000cfa3: R0 := R0 + 0x48
0000cfab: mem := mem with [R31 + 0x128, el]:u64 <- R0
0000cfb1: R0 := R31 + 0x3E4
0000cfb9: mem := mem with [R31 + 0x130, el]:u64 <- R0
0000cfbe: R0 := 0x420000
0000cfc4: R0 := R0 + 0x48
0000cfcc: mem := mem with [R31 + 0x138, el]:u64 <- R0
0000cfd1: R0 := 0x420000
0000cfd7: R0 := R0 + 0x48
0000cfdf: mem := mem with [R31 + 0x140, el]:u64 <- R0
0000cfe6: mem := mem with [R31 + 0x148, el]:u64 <- 0
0000cfed: mem := mem with [R31 + 0x150, el]:u64 <- 0
0000cff2: R0 := 0x420000
0000cff8: R0 := R0 + 0x48
0000d000: mem := mem with [R31 + 0x158, el]:u64 <- R0
0000d007: mem := mem with [R31 + 0x160, el]:u64 <- 0
0000d00c: R0 := 0x420000
0000d012: R0 := R0 + 0x48
0000d01a: mem := mem with [R31 + 0x168, el]:u64 <- R0
0000d021: mem := mem with [R31 + 0x170, el]:u64 <- 0
0000d028: mem := mem with [R31 + 0x178, el]:u64 <- 0
0000d02d: R0 := 0x420000
0000d033: R0 := R0 + 0x48
0000d03b: mem := mem with [R31 + 0x180, el]:u64 <- R0
0000d040: R0 := 0x420000
0000d046: R0 := R0 + 0x48
0000d04e: mem := mem with [R31 + 0x188, el]:u64 <- R0
0000d054: R0 := R31 + 0x3E4
0000d05c: mem := mem with [R31 + 0x190, el]:u64 <- R0
0000d061: R0 := 0x420000
0000d067: R0 := R0 + 0x48
0000d06f: mem := mem with [R31 + 0x198, el]:u64 <- R0
0000d074: R0 := 0x420000
0000d07a: R0 := R0 + 0x48
0000d082: mem := mem with [R31 + 0x1A0, el]:u64 <- R0
0000d089: mem := mem with [R31 + 0x1A8, el]:u64 <- 0
0000d090: mem := mem with [R31 + 0x1B0, el]:u64 <- 0
0000d095: R0 := 0x420000
0000d09b: R0 := R0 + 0x48
0000d0a3: mem := mem with [R31 + 0x1B8, el]:u64 <- R0
0000d0aa: mem := mem with [R31 + 0x1C0, el]:u64 <- 0
0000d0af: R0 := 0x420000
0000d0b5: R0 := R0 + 0x48
0000d0bd: mem := mem with [R31 + 0x1C8, el]:u64 <- R0
0000d0c4: mem := mem with [R31 + 0x1D0, el]:u64 <- 0
0000d0cb: mem := mem with [R31 + 0x1D8, el]:u64 <- 0
0000d0d0: R0 := 0x420000
0000d0d6: R0 := R0 + 0x48
0000d0de: mem := mem with [R31 + 0x1E0, el]:u64 <- R0
0000d0e3: R0 := 0x420000
0000d0e9: R0 := R0 + 0x48
0000d0f1: mem := mem with [R31 + 0x1E8, el]:u64 <- R0
0000d0f7: R0 := R31 + 0x3E4
0000d0ff: mem := mem with [R31 + 0x1F0, el]:u64 <- R0
0000d104: R0 := 0x420000
0000d10a: R0 := R0 + 0x48
0000d112: mem := mem with [R31 + 0x1F8, el]:u64 <- R0
0000d117: R0 := 0x420000
0000d11d: R0 := R0 + 0x48
0000d125: mem := mem with [R31 + 0x200, el]:u64 <- R0
0000d12c: mem := mem with [R31 + 0x208, el]:u64 <- 0
0000d133: mem := mem with [R31 + 0x210, el]:u64 <- 0
0000d138: R0 := 0x420000
0000d13e: R0 := R0 + 0x48
0000d146: mem := mem with [R31 + 0x218, el]:u64 <- R0
0000d14b: R0 := 1
0000d153: mem := mem with [R31 + 0x53E, el]:u16 <- 15:0[R0]
0000d158: R0 := 0x420000
0000d15e: R0 := R0 + 0x98
0000d166: mem := mem with [R31 + 0x3D8, el]:u64 <- R0
0000d16c: R0 := R31 + 0x3D8
0000d174: mem := mem with [R31 + 0x3D0, el]:u64 <- R0
0000d17a: R0 := R31 + 0x3D0
0000d182: mem := mem with [R31 + 0x530, el]:u64 <- R0
0000d187: R0 := 0x420000
0000d18d: R0 := R0 + 0x8C
0000d192: R1 := 7
0000d19a: mem := mem with [R0, el]:u16 <- 15:0[R1]
0000d19f: goto %0000d19d

0000d19d:
0000d1a3: R0 := 0x420000
0000d1a9: R0 := R0 + 0x8C
0000d1b0: R0 := pad:64[extend:32[mem[R0, el]:u16]]
0000d1b5: VF := 0
0000d1b8: CF := 1
0000d1bc: ZF := 31:0[R0] = 0
0000d1c0: NF := 31:31[R0]
0000d1c7: when NF = VF goto %0000d1c5
000197cd: goto %0000d27a

0000d27a:
0000d27f: R0 := mem[R31 + 0x1A8, el]:u64
0000d287: mem := mem with [R31 + 0x558, el]:u64 <- R0
0000d28d: R0 := R31 + 0x3E4
0000d294: R1 := mem[R31 + 0x558, el]:u64
0000d29a: #71 := ~R0
0000d29f: #72 := R1 + ~R0
0000d2a5: VF := extend:128[#72 + 1] <> extend:128[R1] + extend:128[#71] + 1
0000d2ab: CF := pad:128[#72 + 1] <> pad:128[R1] + pad:128[#71] + 1
0000d2af: ZF := #72 + 1 = 0
0000d2b3: NF := 63:63[#72 + 1]
0000d2bf: when ZF <> 1 goto %0000d2b8
0000d2c0: goto %0000d2bb

0000d2bb:
0000d2bc: R0 := 1
0000d2c2: goto %0000d2be

0000d2b8:
0000d2b9: R0 := 0
0000d2c1: goto %0000d2be

0000d2be:
0000d2c8: R0 := pad:64[7:0[R0]]
0000d2ce: R1 := pad:64[31:0[R0]]
0000d2d5: R0 := mem[R31 + 0x5B8, el]:u64
0000d2da: VF := 0
0000d2dd: CF := 1
0000d2e1: ZF := R0 = 0
0000d2e5: NF := 63:63[R0]
0000d2f1: when ZF goto %0000d2ea
0000d2f2: goto %0000d2ed

0000d2ed:
0000d2ee: R0 := 1
0000d2f4: goto %0000d2f0

0000d2ea:
0000d2eb: R0 := 0
0000d2f3: goto %0000d2f0

0000d2f0:
0000d2fa: R0 := pad:64[7:0[R0]]
0000d300: R2 := pad:64[31:0[R0]]
0000d305: R0 := 0x420000
0000d30b: R0 := R0 + 0xC8
0000d312: R0 := pad:64[mem[R0, el]:u32]
0000d318: #73 := ~31:0[R0]
0000d31d: #74 := 31:0[R2] + ~31:0[R0]
0000d323: VF := extend:64[#74 + 1] <> extend:64[31:0[R2]] + extend:64[#73] +
          1
0000d329: CF := pad:64[#74 + 1] <> pad:64[31:0[R2]] + pad:64[#73] + 1
0000d32d: ZF := #74 + 1 = 0
0000d331: NF := 31:31[#74 + 1]
0000d33d: when ZF goto %0000d336
0000d33e: goto %0000d339

0000d339:
0000d33a: R0 := 1
0000d340: goto %0000d33c

0000d336:
0000d337: R0 := 0
0000d33f: goto %0000d33c

0000d33c:
0000d346: R0 := pad:64[7:0[R0]]
0000d34c: R2 := pad:64[31:0[R0]]
0000d353: R0 := mem[R31 + 0x20, el]:u64
0000d359: R0 := pad:64[extend:32[15:0[R0]]]
0000d35f: R0 := pad:64[~31:0[R0]]
0000d365: R0 := pad:64[extend:32[15:0[R0]]]
0000d36c: R0 := pad:64[31:0[R2] ~>> pad:10[4:0[R0]]]
0000d373: R1 := pad:64[31:0[R1] | 31:0[R0]]
0000d37a: R0 := mem[R31 + 0x590, el]:u64
0000d382: mem := mem with [R0, el]:u32 <- 31:0[R1]
0000d389: R0 := mem[R31 + 0x590, el]:u64
0000d390: R0 := pad:64[mem[R0, el]:u32]
0000d398: mem := mem with [R31 + 0x57C, el]:u32 <- 31:0[R0]
0000d39f: R0 := pad:64[mem[R31 + 0x57C, el]:u32]
0000d3a4: VF := 0
0000d3a7: CF := 1
0000d3ab: ZF := 31:0[R0] = 0
0000d3af: NF := 31:31[R0]
0000d3b5: when ZF goto %0000d3b3
000197ce: goto %0000dcca

0000d3b3:
0000d3bb: R0 := 0x423000
0000d3c1: R0 := R0 + 0x900
0000d3c9: mem := mem with [R31 + 0x528, el]:u64 <- R0
0000d3ce: R0 := 0x7C71
0000d3d4: R0 := pad:64[0xFBD7.15:0[R0]]
0000d3dc: mem := mem with [R31 + 0x524, el]:u32 <- 31:0[R0]
0000d3e3: mem := mem with [R31 + 0x5D8, el]:u32 <- 0
0000d3e8: goto %0000d3e6

0000d3e6:
0000d3ee: R0 := pad:64[mem[R31 + 0x5D8, el]:u32]
0000d3f4: #75 := 31:0[R0] - 1
0000d3f9: VF := extend:64[#75] <> extend:64[31:0[R0]] - 1
0000d3fe: CF := pad:64[#75] <> pad:64[31:0[R0]] + 0xFFFFFFFF
0000d402: ZF := #75 = 0
0000d406: NF := 31:31[#75]
0000d40e: when ~(NF = VF & ~ZF) goto %0000d40c
000197cf: goto %0000d441

0000d441:
0000d444: R0 := 0x421000
0000d44a: R0 := R0 + 0x620
0000d451: R0 := mem[R0, el]:u64
0000d458: R0 := mem[R0, el]:u64
0000d45f: R1 := mem[R31 + 0x528, el]:u64
0000d465: #76 := ~R0
0000d46a: #77 := R1 + ~R0
0000d470: VF := extend:128[#77 + 1] <> extend:128[R1] + extend:128[#76] + 1
0000d476: CF := pad:128[#77 + 1] <> pad:128[R1] + pad:128[#76] + 1
0000d47a: ZF := #77 + 1 = 0
0000d47e: NF := 63:63[#77 + 1]
0000d48a: when ZF <> 1 goto %0000d483
0000d48b: goto %0000d486

0000d486:
0000d487: R0 := 1
0000d48d: goto %0000d489

0000d483:
0000d484: R0 := 0
0000d48c: goto %0000d489

0000d489:
0000d493: R0 := pad:64[7:0[R0]]
0000d499: R0 := extend:64[31:0[R0]]
0000d4a0: R1 := mem[R31 + 0x20, el]:u64
0000d4a6: #78 := ~R0
0000d4ab: #79 := R1 + ~R0
0000d4b1: VF := extend:128[#79 + 1] <> extend:128[R1] + extend:128[#78] + 1
0000d4b7: CF := pad:128[#79 + 1] <> pad:128[R1] + pad:128[#78] + 1
0000d4bb: ZF := #79 + 1 = 0
0000d4bf: NF := 63:63[#79 + 1]
0000d4cb: when ZF goto %0000d4c4
0000d4cc: goto %0000d4c7

0000d4c7:
0000d4c8: R0 := 1
0000d4ce: goto %0000d4ca

0000d4c4:
0000d4c5: R0 := 0
0000d4cd: goto %0000d4ca

0000d4ca:
0000d4d4: R0 := pad:64[7:0[R0]]
0000d4da: R1 := pad:64[31:0[R0]]
0000d4e1: R0 := pad:64[extend:32[mem[R31 + 0x53E, el]:u16]]
0000d4e7: #80 := ~31:0[R0]
0000d4ec: #81 := 31:0[R1] + ~31:0[R0]
0000d4f2: VF := extend:64[#81 + 1] <> extend:64[31:0[R1]] + extend:64[#80] +
          1
0000d4f8: CF := pad:64[#81 + 1] <> pad:64[31:0[R1]] + pad:64[#80] + 1
0000d4fc: ZF := #81 + 1 = 0
0000d500: NF := 31:31[#81 + 1]
0000d50e: when ~(NF = VF & ~ZF) goto %0000d507
0000d50f: goto %0000d50a

0000d50a:
0000d50b: R0 := 1
0000d511: goto %0000d50d

0000d507:
0000d508: R0 := 0
0000d510: goto %0000d50d

0000d50d:
0000d517: R0 := pad:64[7:0[R0]]
0000d51d: R1 := pad:64[31:0[R0]]
0000d524: R0 := mem[R31 + 0x590, el]:u64
0000d52b: R0 := pad:64[mem[R0, el]:u32]
0000d531: R0 := pad:64[extend:32[7:0[R0]]]
0000d538: R0 := pad:64[31:0[R1] ~>> pad:10[4:0[R0]]]
0000d53e: R0 := extend:64[31:0[R0]]
0000d545: R1 := mem[R31 + 0x20, el]:u64
0000d54b: #82 := ~R0
0000d550: #83 := R1 + ~R0
0000d556: VF := extend:128[#83 + 1] <> extend:128[R1] + extend:128[#82] + 1
0000d55c: CF := pad:128[#83 + 1] <> pad:128[R1] + pad:128[#82] + 1
0000d560: ZF := #83 + 1 = 0
0000d564: NF := 63:63[#83 + 1]
0000d56b: R0 := mem[R31 + 0x590, el]:u64
0000d572: R2 := pad:64[mem[R0, el]:u32]
0000d579: R0 := mem[R31 + 0x28, el]:u64
0000d57e: VF := 0
0000d581: CF := 1
0000d585: ZF := R0 = 0
0000d589: NF := 63:63[R0]
0000d595: when ZF goto %0000d58e
0000d596: goto %0000d591

0000d591:
0000d592: R0 := 1
0000d598: goto %0000d594

0000d58e:
0000d58f: R0 := 0
0000d597: goto %0000d594

0000d594:
0000d59e: R0 := pad:64[7:0[R0]]
0000d5a4: R1 := pad:64[extend:32[7:0[R0]]]
0000d5a9: R0 := 0x420000
0000d5af: R0 := R0 + 0xCC
0000d5b6: R0 := pad:64[extend:32[mem[R0, el]:u16]]
0000d5bc: R0 := pad:64[extend:32[7:0[R0]]]
0000d5c3: R0 := pad:64[31:0[R1] | 31:0[R0]]
0000d5c9: R0 := pad:64[extend:32[7:0[R0]]]
0000d5cf: R0 := pad:64[7:0[R0]]
0000d5d5: R1 := pad:64[31:0[R0]]
0000d5da: R0 := 0xC4
0000d5e1: R0 := pad:64[31:0[R1] * 31:0[R0]]
0000d5e7: R0 := pad:64[15:0[R0]]
0000d5ed: R0 := pad:64[extend:32[15:0[R0]]]
0000d5f2: R1 := 0x420000
0000d5f8: R1 := R1 + 0xB8
0000d5ff: R1 := mem[R1, el]:u64
0000d605: R1 := pad:64[extend:32[15:0[R1]]]
0000d60e: R1 := pad:64[31:0[R3] * 31:0[R1]]
0000d615: R0 := pad:64[31:0[R0] + ~31:0[R1] + 1]
0000d61b: R1 := extend:64[31:0[R0]]
0000d622: R0 := extend:64[mem[R31 + 0x524, el]:u32]
0000d629: R0 := R1 + ~R0 + 1
0000d62f: #84 := R0 + 3
0000d634: VF := extend:128[#84] <> extend:128[R0] + 3
0000d639: CF := pad:128[#84] <> pad:128[R0] + 3
0000d63d: ZF := #84 = 0
0000d641: NF := 63:63[#84]
0000d64e: when CF & ~ZF goto %0000d647
0000d64f: goto %0000d64a

0000d64a:
0000d64b: R0 := 1
0000d651: goto %0000d64d

0000d647:
0000d648: R0 := 0
0000d650: goto %0000d64d

0000d64d:
0000d657: R0 := pad:64[7:0[R0]]
0000d65d: #85 := ~31:0[R0]
0000d662: #86 := 31:0[R2] + ~31:0[R0]
0000d668: VF := extend:64[#86 + 1] <> extend:64[31:0[R2]] + extend:64[#85] +
          1
0000d66e: CF := pad:64[#86 + 1] <> pad:64[31:0[R2]] + pad:64[#85] + 1
0000d672: ZF := #86 + 1 = 0
0000d676: NF := 31:31[#86 + 1]
0000d683: when NF = VF goto %0000d67c
0000d684: goto %0000d67f

0000d67f:
0000d680: R0 := 1
0000d686: goto %0000d682

0000d67c:
0000d67d: R0 := 0
0000d685: goto %0000d682

0000d682:
0000d68c: R0 := pad:64[7:0[R0]]
0000d692: R0 := pad:64[7:0[R0]]
0000d699: R1 := mem[R31 + 0x20, el]:u64
0000d69f: #87 := ~R0
0000d6a4: #88 := R1 + ~R0
0000d6aa: VF := extend:128[#88 + 1] <> extend:128[R1] + extend:128[#87] + 1
0000d6b0: CF := pad:128[#88 + 1] <> pad:128[R1] + pad:128[#87] + 1
0000d6b4: ZF := #88 + 1 = 0
0000d6b8: NF := 63:63[#88 + 1]
0000d6c5: when NF = VF goto %0000d6be
0000d6c6: goto %0000d6c1

0000d6c1:
0000d6c2: R0 := 1
0000d6c8: goto %0000d6c4

0000d6be:
0000d6bf: R0 := 0
0000d6c7: goto %0000d6c4

0000d6c4:
0000d6ce: R0 := pad:64[7:0[R0]]
0000d6d4: R1 := pad:64[31:0[R0]]
0000d6d9: R0 := 0x420000
0000d6df: R0 := R0 + 0xB0
0000d6e6: R0 := pad:64[mem[R0, el]:u16]
0000d6ed: R0 := pad:64[31:0[R1] + ~31:0[R0] + 1]
0000d6f4: R1 := mem[R31 + 0x20, el]:u64
0000d6fb: R0 := pad:64[31:0[R0] + 31:0[R1]]
0000d701: R1 := extend:64[31:0[R0]]
0000d708: R0 := mem[R31 + 0x20, el]:u64
0000d70f: R1 := R1 ^ R0
0000d714: R0 := 0x423000
0000d71a: R0 := R0 + 0x90A
0000d721: R0 := pad:64[extend:32[mem[R0, el]:u16]]
0000d727: R0 := extend:64[15:0[R0]]
0000d72d: #89 := ~R0
0000d732: #90 := R1 + ~R0
0000d738: VF := extend:128[#90 + 1] <> extend:128[R1] + extend:128[#89] + 1
0000d73e: CF := pad:128[#90 + 1] <> pad:128[R1] + pad:128[#89] + 1
0000d742: ZF := #90 + 1 = 0
0000d746: NF := 63:63[#90 + 1]
0000d754: when ~(NF = VF & ~ZF) goto %0000d74d
0000d755: goto %0000d750

0000d750:
0000d751: R0 := 1
0000d757: goto %0000d753

0000d74d:
0000d74e: R0 := 0
0000d756: goto %0000d753

0000d753:
0000d75d: R0 := pad:64[7:0[R0]]
0000d763: R1 := pad:64[31:0[R0]]
0000d76a: R0 := mem[R31 + 0x590, el]:u64
0000d772: mem := mem with [R0, el]:u32 <- 31:0[R1]
0000d777: R0 := 5
0000d77f: mem := mem with [R31 + 0x5EC, el]:u32 <- 31:0[R0]
0000d784: goto %0000d782

0000d782:
0000d78a: R0 := pad:64[mem[R31 + 0x5EC, el]:u32]
0000d78f: VF := 0
0000d792: CF := 1
0000d796: ZF := 31:0[R0] = 0
0000d79a: NF := 31:31[R0]
0000d7a1: when NF = VF goto %0000d79f
000197d0: goto %0000d974

0000d974:
0000d977: R0 := 5
0000d97f: mem := mem with [R31 + 0x5EC, el]:u32 <- 31:0[R0]
0000d984: goto %0000d982

0000d982:
0000d98a: R0 := pad:64[mem[R31 + 0x5EC, el]:u32]
0000d98f: VF := 0
0000d992: CF := 1
0000d996: ZF := 31:0[R0] = 0
0000d99a: NF := 31:31[R0]
0000d9a1: when NF = VF goto %0000d99f
000197d1: goto %0000dcc6

0000dcc6:
0000dcc8: goto %0000da39

0000d99f:
0000d9a7: R0 := 0x423000
0000d9ad: R0 := R0 + 0x910
0000d9b5: mem := mem with [R31 + 0x518, el]:u64 <- R0
0000d9ba: R0 := 0xFFFFFFFF
0000d9c2: mem := mem with [R31 + 0x514, el]:u32 <- 31:0[R0]
0000d9c7: R0 := 0x420000
0000d9cd: R0 := R0 + 0x58
0000d9d4: R0 := pad:64[mem[R0, el]:u32]
0000d9da: R1 := R31 + 0x88
0000d9e0: R0 := extend:64[31:0[R0]]
0000d9e6: R0 := 60:0[R0].0
0000d9ed: R0 := R1 + R0
0000d9f5: mem := mem with [R31 + 0x508, el]:u64 <- R0
0000d9fa: R0 := 0x423000
0000da00: R0 := R0 + 0x910
0000da07: R1 := mem[R0, el]:u64
0000da0e: R0 := mem[R31 + 0x518, el]:u64
0000da16: mem := mem with [R0, el]:u64 <- R1
0000da1d: R0 := pad:64[mem[R31 + 0x514, el]:u32]
0000da22: VF := 0
0000da25: CF := 1
0000da29: ZF := 31:0[R0] = 0
0000da2d: NF := 31:31[R0]
0000da33: when ZF <> 1 goto %0000da31
000197d2: goto %0000da83

0000da31:
0000da3b: goto %0000da39

0000da83:
0000da88: R0 := mem[R31 + 0x590, el]:u64
0000da8f: R1 := pad:64[mem[R0, el]:u32]
0000da96: R0 := mem[R31 + 0x20, el]:u64
0000da9b: VF := 0
0000da9e: CF := 1
0000daa2: ZF := R0 = 0
0000daa6: NF := 63:63[R0]
0000daac: when ZF goto %0000daaa
000197d3: goto %0000dbcc

0000dbcc:
0000dbd1: R0 := mem[R31 + 0x508, el]:u64
0000dbd8: mem := mem with [R0, el]:u64 <- 0
0000dbdf: R0 := pad:64[extend:32[mem[R31 + 0x3B0]]]
0000dbe5: R2 := pad:64[31:0[R0]]
0000dbec: R0 := mem[R31 + 0x20, el]:u64
0000dbf2: R0 := pad:64[extend:32[15:0[R0]]]
0000dbf9: R0 := pad:64[31:0[R2] << pad:10[4:0[R0]]]
0000dbff: R2 := extend:64[31:0[R0]]
0000dc06: R0 := mem[R31 + 0x20, el]:u64
0000dc0d: R0 := R2 + R0
0000dc12: VF := 0
0000dc15: CF := 1
0000dc19: ZF := R0 = 0
0000dc1d: NF := 63:63[R0]
0000dc24: R2 := mem[R31 + 0x518, el]:u64
0000dc2b: R0 := mem[R31 + 0x530, el]:u64
0000dc31: #100 := ~R0
0000dc36: #101 := R2 + ~R0
0000dc3c: VF := extend:128[#101 + 1] <> extend:128[R2] + extend:128[#100] + 1
0000dc42: CF := pad:128[#101 + 1] <> pad:128[R2] + pad:128[#100] + 1
0000dc46: ZF := #101 + 1 = 0
0000dc4a: NF := 63:63[#101 + 1]
0000dc51: R0 := mem[R31 + 0x20, el]:u64
0000dc57: #102 := R0 - 0x10
0000dc5c: VF := extend:128[#102] <> extend:128[R0] - 0x10
0000dc61: CF := pad:128[#102] <> pad:128[R0] + 0xFFFFFFFFFFFFFFF0
0000dc65: ZF := #102 = 0
0000dc69: NF := 63:63[#102]
0000dc6f: when ZF <> 1 goto %0000dc6d
000197d4: goto %0000dca8

0000dca8:
0000dcad: R0 := mem[R31 + 0x20, el]:u64
0000dcb2: VF := 0
0000dcb5: CF := 1
0000dcb9: ZF := R0 = 0
0000dcbd: NF := 63:63[R0]
0000dcc2: when ZF goto %0000dca3
000197d5: goto %0000dc6d

0000dca3:
0000dca6: R0 := 0
000197d6: goto %0000dc78

0000dc6d:
0000dc75: R0 := 1
0000dc7a: goto %0000dc78

0000dc78:
0000dc7f: #103 := 31:0[R0] + 9
0000dc84: VF := extend:64[#103] <> extend:64[31:0[R0]] + 9
0000dc89: CF := pad:64[#103] <> pad:64[31:0[R0]] + 9
0000dc8d: ZF := #103 = 0
0000dc91: NF := 31:31[#103]
0000dc96: when ZF goto %0000daaa
000197d7: goto %0000dc9a

0000daaa:
0000dab2: R0 := 0
000197d8: goto %0000dab4

0000dc9a:
0000dc9d: R0 := 1
0000dca1: goto %0000dab4

0000dab4:
0000dab8: #96 := ~31:0[R1]
0000dabd: #97 := 31:0[R0] + ~31:0[R1]
0000dac3: VF := extend:64[#97 + 1] <> extend:64[31:0[R0]] + extend:64[#96] +
          1
0000dac9: CF := pad:64[#97 + 1] <> pad:64[31:0[R0]] + pad:64[#96] + 1
0000dacd: ZF := #97 + 1 = 0
0000dad1: NF := 31:31[#97 + 1]
0000dadf: when ~(NF = VF & ~ZF) goto %0000dad8
0000dae0: goto %0000dadb

0000dadb:
0000dadc: R0 := 1
0000dae2: goto %0000dade

0000dad8:
0000dad9: R0 := 0
0000dae1: goto %0000dade

0000dade:
0000dae8: R0 := pad:64[7:0[R0]]
0000daee: R1 := pad:64[31:0[R0]]
0000daf3: R0 := 0x423000
0000daf9: R0 := R0 + 0x90A
0000db00: R0 := pad:64[extend:32[mem[R0, el]:u16]]
0000db06: R0 := pad:64[15:0[R0]]
0000db0f: R0 := pad:64[mem[R31 + 0x5AC, el]:u32]
0000db16: R1 := pad:64[31:0[R1] & 31:0[R0]]
0000db1b: R0 := 0x8722
0000db21: R0 := pad:64[0x33B1.15:0[R0]]
0000db27: #98 := ~31:0[R0]
0000db2c: #99 := 31:0[R1] + ~31:0[R0]
0000db32: VF := extend:64[#99 + 1] <> extend:64[31:0[R1]] + extend:64[#98] +
          1
0000db38: CF := pad:64[#99 + 1] <> pad:64[31:0[R1]] + pad:64[#98] + 1
0000db3c: ZF := #99 + 1 = 0
0000db40: NF := 31:31[#99 + 1]
0000db4e: when NF = VF & ~ZF goto %0000db47
0000db4f: goto %0000db4a

0000db4a:
0000db4b: R0 := 1
0000db51: goto %0000db4d

0000db47:
0000db48: R0 := 0
0000db50: goto %0000db4d

0000db4d:
0000db57: R0 := pad:64[7:0[R0]]
0000db5d: R1 := pad:64[31:0[R0]]
0000db62: R0 := 0x421000
0000db68: R0 := R0 + 0x670
0000db6f: R0 := mem[R0, el]:u64
0000db76: R0 := pad:64[mem[R0, el]:u32]
0000db7d: R0 := pad:64[31:0[R1] + 31:0[R0]]
0000db85: mem := mem with [R31 + 0x468, el]:u32 <- 31:0[R0]
0000db8a: R0 := 0x421000
0000db90: R0 := R0 + 0x798
0000db97: R0 := mem[R0, el]:u64
0000db9e: R0 := pad:64[mem[R0, el]:u32]
0000dba3: VF := 0
0000dba6: CF := 1
0000dbaa: ZF := 31:0[R0] = 0
0000dbae: NF := 31:31[R0]
0000dbb3: when ZF <> 1 goto %0000da81
000197d9: goto %0000dbb7

0000da81:
000197da: goto %0000da39

0000dbb7:
0000dbbc: R0 := pad:64[mem[R31 + 0x5EC, el]:u32]
0000dbc2: R0 := pad:64[31:0[R0] - 1]
0000dbca: mem := mem with [R31 + 0x5EC, el]:u32 <- 31:0[R0]
000197db: goto %0000d982

0000d79f:
0000d7a8: R0 := R31 + 0x38
0000d7ae: R0 := R0 + 0x18
0000d7b6: mem := mem with [R31 + 0x500, el]:u64 <- R0
0000d7bb: R0 := 0x409000
0000d7c1: R0 := R0 + 0xA40
0000d7c8: R0 := mem[R0 + 0x1B8, el]:u64
0000d7cf: R1 := mem[R31 + 0x20, el]:u64
0000d7d5: #91 := ~R0
0000d7da: #92 := R1 + ~R0
0000d7e0: VF := extend:128[#92 + 1] <> extend:128[R1] + extend:128[#91] + 1
0000d7e6: CF := pad:128[#92 + 1] <> pad:128[R1] + pad:128[#91] + 1
0000d7ea: ZF := #92 + 1 = 0
0000d7ee: NF := 63:63[#92 + 1]
0000d7f5: R0 := mem[R31 + 0x568, el]:u64
0000d7fc: R0 := pad:64[mem[R0, el]:u16]
0000d802: R1 := pad:64[31:0[R0] + 1]
0000d808: R2 := pad:64[15:0[R1]]
0000d80f: R1 := mem[R31 + 0x568, el]:u64
0000d817: mem := mem with [R1, el]:u16 <- 15:0[R2]
0000d81d: R1 := pad:64[31:0[R0]]
0000d824: R0 := mem[R31 + 0x20, el]:u64
0000d82a: R0 := pad:64[15:0[R0]]
0000d831: R0 := pad:64[31:0[R1] ~>> pad:10[4:0[R0]]]
0000d837: #93 := 31:0[R0] - 0xF6
0000d83c: VF := extend:64[#93] <> extend:64[31:0[R0]] - 0xF6
0000d841: CF := pad:64[#93] <> pad:64[31:0[R0]] + 0xFFFFFF0A
0000d845: ZF := #93 = 0
0000d849: NF := 31:31[#93]
0000d855: when ZF goto %0000d84e
0000d856: goto %0000d851

0000d851:
0000d852: R0 := 1
0000d858: goto %0000d854

0000d84e:
0000d84f: R0 := 0
0000d857: goto %0000d854

0000d854:
0000d85e: R0 := pad:64[7:0[R0]]
0000d864: R1 := pad:64[extend:32[15:0[R0]]]
0000d869: R0 := 0x423000
0000d86f: R0 := R0 + 0x90A
0000d877: mem := mem with [R0, el]:u16 <- 15:0[R1]
0000d87e: R0 := mem[R31 + 0x590, el]:u64
0000d885: R0 := pad:64[mem[R0, el]:u32]
0000d88b: R1 := pad:64[15:0[R0]]
0000d892: R0 := mem[R31 + 0x500, el]:u64
0000d89a: mem := mem with [R0, el]:u16 <- 15:0[R1]
0000d8a1: R0 := mem[R31 + 0x500, el]:u64
0000d8a8: R1 := pad:64[mem[R0, el]:u16]
0000d8ad: R0 := 0x9B99
0000d8b3: #94 := ~31:0[R0]
0000d8b8: #95 := 31:0[R1] + ~31:0[R0]
0000d8be: VF := extend:64[#95 + 1] <> extend:64[31:0[R1]] + extend:64[#94] +
          1
0000d8c4: CF := pad:64[#95 + 1] <> pad:64[31:0[R1]] + pad:64[#94] + 1
0000d8c8: ZF := #95 + 1 = 0
0000d8cc: NF := 31:31[#95 + 1]
0000d8d3: when CF & ~ZF goto %0000d8d1
000197dc: goto %0000d957

0000d8d1:
0000d8d9: R0 := 0x594C
0000d8e0: R0 := 63:32[R0].0x3B21.15:0[R0]
0000d8e7: R0 := 63:48[R0].0x849F.31:0[R0]
0000d8ed: R0 := 0xB0A3.47:0[R0]
000197dd: goto %0000d8ef

0000d957:
0000d95a: R0 := 0x594D
0000d961: R0 := 63:32[R0].0x3B21.15:0[R0]
0000d968: R0 := 63:48[R0].0x849F.31:0[R0]
0000d96e: R0 := 0xB0A3.47:0[R0]
0000d972: goto %0000d8ef

0000d8ef:
0000d8f4: R1 := pad:64[extend:32[mem[R31 + 0x3B1]]]
0000d8fa: R1 := pad:64[7:0[R1]]
0000d900: R0 := pad:64[7:0[R0]]
0000d907: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0000d90d: R0 := pad:64[7:0[R0]]
0000d913: R0 := pad:64[extend:32[7:0[R0]]]
0000d91b: mem := mem with [R31 + 0x3B1] <- 7:0[R0]
0000d922: R0 := mem[R31 + 0x28, el]:u64
0000d929: R0 := mem[R0, el]:u64
0000d930: R0 := pad:64[mem[R0, el]:u32]
0000d935: VF := 0
0000d938: CF := 1
0000d93c: ZF := 31:0[R0] = 0
0000d940: NF := 31:31[R0]
0000d947: R0 := pad:64[mem[R31 + 0x5EC, el]:u32]
0000d94d: R0 := pad:64[31:0[R0] - 1]
0000d955: mem := mem with [R31 + 0x5EC, el]:u32 <- 31:0[R0]
000197de: goto %0000d782

0000d40c:
0000d416: R0 := extend:64[mem[R31 + 0x5D8, el]:u32]
0000d41c: R1 := R31 + 0x3B0
0000d421: R2 := 0x1C
0000d42a: mem := mem with [R1 + R0] <- 7:0[R2]
0000d431: R0 := pad:64[mem[R31 + 0x5D8, el]:u32]
0000d437: R0 := pad:64[31:0[R0] + 1]
0000d43f: mem := mem with [R31 + 0x5D8, el]:u32 <- 31:0[R0]
000197df: goto %0000d3e6

0000dcca:
0000dccf: mem := mem with [R31 + 0x4F8, el]:u64 <- 0
0000dcd6: mem := mem with [R31 + 0x5E0, el]:u32 <- 0
0000dcdb: goto %0000dcd9

0000dcd9:
0000dce1: R0 := pad:64[mem[R31 + 0x5E0, el]:u32]
0000dce7: #104 := 31:0[R0] - 1
0000dcec: VF := extend:64[#104] <> extend:64[31:0[R0]] - 1
0000dcf1: CF := pad:64[#104] <> pad:64[31:0[R0]] + 0xFFFFFFFF
0000dcf5: ZF := #104 = 0
0000dcf9: NF := 31:31[#104]
0000dd01: when ~(NF = VF & ~ZF) goto %0000dcff
000197e0: goto %0000dd3a

0000dd3a:
0000dd3d: R0 := 0x420000
0000dd43: R0 := R0 + 0xB0
0000dd48: R1 := 1
0000dd50: mem := mem with [R0, el]:u16 <- 15:0[R1]
0000dd55: goto %0000dd53

0000dd53:
0000dd59: R0 := 0x420000
0000dd5f: R0 := R0 + 0xB0
0000dd66: R0 := pad:64[mem[R0, el]:u16]
0000dd6c: #105 := 31:0[R0] - 7
0000dd71: VF := extend:64[#105] <> extend:64[31:0[R0]] - 7
0000dd76: CF := pad:64[#105] <> pad:64[31:0[R0]] + 0xFFFFFFF9
0000dd7a: ZF := #105 = 0
0000dd7e: NF := 31:31[#105]
0000dd85: when ~(CF & ~ZF) goto %0000dd83
000197e1: goto %0000dfe6

0000dfe6:
0000dfeb: R0 := mem[R31 + 0x5C0, el]:u64
0000dff2: R2 := mem[R0, el]:u64
0000dff7: R0 := 0x421000
0000dffd: R0 := R0 + 0x778
0000e004: R19 := mem[R0, el]:u64
0000e009: R0 := 0
0000e00f: R1 := R0
0000e015: R0 := R2
0000e01a: R30 := 0x405EB4
0000e01c: call @func_55 with return %0000e01e

0000e01e:
0000e024: mem := mem with [R19, el]:u64 <- R0
0000e028: goto %0000da39

0000da39:
0000da3f: R0 := 0x421000
0000da45: R0 := R0 + 0xF40
0000da4c: R0 := mem[R0, el]:u64
0000da54: mem := mem with [R31 + 0x410, el]:u64 <- R0
0000da59: R0 := 0x420000
0000da5f: R0 := R0 + 0x58
0000da66: R0 := pad:64[mem[R0, el]:u32]
0000da6c: R1 := pad:64[31:0[R0] - 1]
0000da71: R0 := 0x420000
0000da77: R0 := R0 + 0x58
0000da7f: mem := mem with [R0, el]:u32 <- 31:0[R1]
000197e2: goto %0000cf59

0000dd83:
0000dd8d: mem := mem with [R31 + 0x4F0, el]:u64 <- 0
0000dd94: mem := mem with [R31 + 0x4E8, el]:u64 <- 0
0000dd9a: R0 := R31 + 0x3E8
0000dda2: mem := mem with [R31 + 0x4E0, el]:u64 <- R0
0000dda7: R0 := 0xB774
0000ddad: R0 := pad:64[0xA360.15:0[R0]]
0000ddb5: mem := mem with [R31 + 0x4DC, el]:u32 <- 31:0[R0]
0000ddbc: mem := mem with [R31 + 0x5DC, el]:u32 <- 0
0000ddc1: goto %0000ddbf

0000ddbf:
0000ddc7: R0 := pad:64[mem[R31 + 0x5DC, el]:u32]
0000ddcd: #106 := 31:0[R0] - 2
0000ddd2: VF := extend:64[#106] <> extend:64[31:0[R0]] - 2
0000ddd7: CF := pad:64[#106] <> pad:64[31:0[R0]] + 0xFFFFFFFE
0000dddb: ZF := #106 = 0
0000dddf: NF := 31:31[#106]
0000dde7: when ~(NF = VF & ~ZF) goto %0000dde5
000197e3: goto %0000de20

0000de20:
0000de25: R1 := mem[R31 + 0x4F8, el]:u64
0000de2a: R0 := 0x420000
0000de30: R0 := R0 + 0x54
0000de36: #107 := ~R0
0000de3b: #108 := R1 + ~R0
0000de41: VF := extend:128[#108 + 1] <> extend:128[R1] + extend:128[#107] + 1
0000de47: CF := pad:128[#108 + 1] <> pad:128[R1] + pad:128[#107] + 1
0000de4b: ZF := #108 + 1 = 0
0000de4f: NF := 63:63[#108 + 1]
0000de5b: when ZF <> 1 goto %0000de54
0000de5c: goto %0000de57

0000de57:
0000de58: R0 := 1
0000de5e: goto %0000de5a

0000de54:
0000de55: R0 := 0
0000de5d: goto %0000de5a

0000de5a:
0000de64: R0 := pad:64[7:0[R0]]
0000de6a: R19 := pad:64[31:0[R0]]
0000de6f: R0 := 0
0000de75: R1 := R0
0000de7c: R0 := mem[R31 + 0x4F0, el]:u64
0000de81: R30 := 0x405DEC
0000de83: call @func_55 with return %0000de85

0000de85:
0000de89: R1 := R0
0000de90: R0 := mem[R31 + 0x4E0, el]:u64
0000de98: mem := mem with [R0, el]:u64 <- R1
0000de9f: R0 := mem[R31 + 0x4E0, el]:u64
0000dea6: R0 := mem[R0, el]:u64
0000deab: VF := 0
0000deae: CF := 1
0000deb2: ZF := R0 = 0
0000deb6: NF := 63:63[R0]
0000dec2: when ZF goto %0000debb
0000dec3: goto %0000debe

0000debe:
0000debf: R0 := 1
0000dec5: goto %0000dec1

0000debb:
0000debc: R0 := 0
0000dec4: goto %0000dec1

0000dec1:
0000decb: R0 := pad:64[7:0[R0]]
0000ded1: R2 := pad:64[31:0[R0]]
0000ded8: R1 := pad:64[mem[R31 + 0x3CC, el]:u32]
0000dedd: R0 := 0x420000
0000dee3: R0 := R0 + 0x48
0000deea: R0 := pad:64[mem[R0, el]:u32]
0000def0: #109 := ~31:0[R0]
0000def5: #110 := 31:0[R1] + ~31:0[R0]
0000defb: VF := extend:64[#110 + 1] <> extend:64[31:0[R1]] + extend:64[#109]
          + 1
0000df01: CF := pad:64[#110 + 1] <> pad:64[31:0[R1]] + pad:64[#109] + 1
0000df05: ZF := #110 + 1 = 0
0000df09: NF := 31:31[#110 + 1]
0000df15: when ZF <> 1 goto %0000df0e
0000df16: goto %0000df11

0000df11:
0000df12: R0 := 1
0000df18: goto %0000df14

0000df0e:
0000df0f: R0 := 0
0000df17: goto %0000df14

0000df14:
0000df1e: R0 := pad:64[7:0[R0]]
0000df24: #111 := ~31:0[R0]
0000df29: #112 := 31:0[R2] + ~31:0[R0]
0000df2f: VF := extend:64[#112 + 1] <> extend:64[31:0[R2]] + extend:64[#111]
          + 1
0000df35: CF := pad:64[#112 + 1] <> pad:64[31:0[R2]] + pad:64[#111] + 1
0000df39: ZF := #112 + 1 = 0
0000df3d: NF := 31:31[#112 + 1]
0000df4a: when NF = VF goto %0000df43
0000df4b: goto %0000df46

0000df46:
0000df47: R0 := 1
0000df4d: goto %0000df49

0000df43:
0000df44: R0 := 0
0000df4c: goto %0000df49

0000df49:
0000df53: R0 := pad:64[7:0[R0]]
0000df59: #113 := ~31:0[R0]
0000df5e: #114 := 31:0[R19] + ~31:0[R0]
0000df64: VF := extend:64[#114 + 1] <> extend:64[31:0[R19]] + extend:64[#113]
          + 1
0000df6a: CF := pad:64[#114 + 1] <> pad:64[31:0[R19]] + pad:64[#113] + 1
0000df6e: ZF := #114 + 1 = 0
0000df72: NF := 31:31[#114 + 1]
0000df80: when ~(NF = VF & ~ZF) goto %0000df79
0000df81: goto %0000df7c

0000df7c:
0000df7d: R0 := 1
0000df83: goto %0000df7f

0000df79:
0000df7a: R0 := 0
0000df82: goto %0000df7f

0000df7f:
0000df89: R0 := pad:64[7:0[R0]]
0000df8f: R1 := pad:64[31:0[R0]]
0000df96: R0 := mem[R31 + 0x590, el]:u64
0000df9e: mem := mem with [R0, el]:u32 <- 31:0[R1]
0000dfa5: R0 := pad:64[mem[R31 + 0x4DC, el]:u32]
0000dfab: R0 := pad:64[31:0[R0] + 1]
0000dfb3: mem := mem with [R31 + 0x4DC, el]:u32 <- 31:0[R0]
0000dfb8: R0 := 0x420000
0000dfbe: R0 := R0 + 0xB0
0000dfc5: R0 := pad:64[mem[R0, el]:u16]
0000dfcb: R0 := pad:64[31:0[R0] + 1]
0000dfd1: R1 := pad:64[15:0[R0]]
0000dfd6: R0 := 0x420000
0000dfdc: R0 := R0 + 0xB0
0000dfe4: mem := mem with [R0, el]:u16 <- 15:0[R1]
000197e4: goto %0000dd53

0000dde5:
0000ddef: R0 := extend:64[mem[R31 + 0x5DC, el]:u32]
0000ddf5: R0 := 61:0[R0].0
0000ddfb: R1 := R31 + 0x3B8
0000de00: R2 := 0xFFFFFFFF
0000de09: mem := mem with [R1 + R0, el]:u32 <- 31:0[R2]
0000de10: R0 := pad:64[mem[R31 + 0x5DC, el]:u32]
0000de16: R0 := pad:64[31:0[R0] + 1]
0000de1e: mem := mem with [R31 + 0x5DC, el]:u32 <- 31:0[R0]
000197e5: goto %0000ddbf

0000dcff:
0000dd09: R0 := extend:64[mem[R31 + 0x5E0, el]:u32]
0000dd0f: R0 := 61:0[R0].0
0000dd15: R1 := R31 + 0x3C8
0000dd1a: R2 := 0xFFFFFFFF
0000dd23: mem := mem with [R1 + R0, el]:u32 <- 31:0[R2]
0000dd2a: R0 := pad:64[mem[R31 + 0x5E0, el]:u32]
0000dd30: R0 := pad:64[31:0[R0] + 1]
0000dd38: mem := mem with [R31 + 0x5E0, el]:u32 <- 31:0[R0]
000197e6: goto %0000dcd9

0000d1c5:
0000d1cd: R0 := 0x420000
0000d1d3: R0 := R0 + 0x88
0000d1da: mem := mem with [R0, el]:u32 <- 0
0000d1df: goto %0000d1dd

0000d1dd:
0000d1e3: R0 := 0x420000
0000d1e9: R0 := R0 + 0x88
0000d1f0: R0 := pad:64[mem[R0, el]:u32]
0000d1f6: #70 := 31:0[R0] - 4
0000d1fb: VF := extend:64[#70] <> extend:64[31:0[R0]] - 4
0000d200: CF := pad:64[#70] <> pad:64[31:0[R0]] + 0xFFFFFFFC
0000d204: ZF := #70 = 0
0000d208: NF := 31:31[#70]
0000d20f: when ~(CF & ~ZF) goto %0000d20d
000197e7: goto %0000d23d

0000d23d:
0000d240: R0 := 0x420000
0000d246: R0 := R0 + 0x8C
0000d24d: R0 := pad:64[extend:32[mem[R0, el]:u16]]
0000d253: R0 := pad:64[15:0[R0]]
0000d259: R0 := pad:64[31:0[R0] - 1]
0000d25f: R0 := pad:64[15:0[R0]]
0000d265: R1 := pad:64[extend:32[15:0[R0]]]
0000d26a: R0 := 0x420000
0000d270: R0 := R0 + 0x8C
0000d278: mem := mem with [R0, el]:u16 <- 15:0[R1]
000197e8: goto %0000d19d

0000d20d:
0000d215: R0 := 0x420000
0000d21b: R0 := R0 + 0x88
0000d222: R0 := pad:64[mem[R0, el]:u32]
0000d228: R1 := pad:64[31:0[R0] + 1]
0000d22d: R0 := 0x420000
0000d233: R0 := R0 + 0x88
0000d23b: mem := mem with [R0, el]:u32 <- 31:0[R1]
000197e9: goto %0000d1dd

0000ccca:
0000ccd4: R0 := extend:64[mem[R31 + 0x5E4, el]:u32]
0000ccda: R0 := 60:0[R0].0
0000cce0: R1 := R31 + 0x88
0000cce8: mem := mem with [R1 + R0, el]:u64 <- 0
0000ccef: R0 := pad:64[mem[R31 + 0x5E4, el]:u32]
0000ccf5: R0 := pad:64[31:0[R0] + 1]
0000ccfd: mem := mem with [R31 + 0x5E4, el]:u32 <- 31:0[R0]
000197ea: goto %0000cca4

0000ca34:
0000ca3d: R0 := R31 + 0x120
0000ca42: V0 := 0
0000ca4a: mem := mem with [R0, el]:u128 <- V0
0000ca50: mem := mem with [R0 + 0x10, el]:u128 <- V0
0000ca56: #58 := R0 + 0x20
0000ca5c: mem := mem with [#58, el]:u128 <- V0
0000ca62: mem := mem with [#58 + 0x10, el]:u128 <- V0
0000ca67: R0 := 0x420000
0000ca6d: R0 := R0 + 0x88
0000ca75: mem := mem with [R31 + 0x3F0, el]:u64 <- R0
0000ca7b: R0 := R31 + 0x3F0
0000ca83: mem := mem with [R31 + 0x4D0, el]:u64 <- R0
0000ca88: R0 := 0x420000
0000ca8e: R0 := R0 + 0x90
0000ca96: mem := mem with [R31 + 0x4C8, el]:u64 <- R0
0000ca9c: R0 := R31 + 0x220
0000caa2: R0 := R0 + 0x118
0000caaa: mem := mem with [R31 + 0x4C0, el]:u64 <- R0
0000cab0: R0 := R31 + 0x120
0000cab6: R0 := R0 + 0x20
0000cabe: mem := mem with [R31 + 0x4B8, el]:u64 <- R0
0000cac3: R0 := 1
0000cacb: mem := mem with [R31 + 0x4B4, el]:u32 <- 31:0[R0]
0000cad0: R0 := 0x420000
0000cad6: R0 := R0 + 0x70
0000cadd: R0 := pad:64[mem[R0]]
0000cae3: R0 := pad:64[31:0[R0] + 1]
0000cae9: R1 := pad:64[7:0[R0]]
0000caee: R0 := 0x420000
0000caf4: R0 := R0 + 0x70
0000cafc: mem := mem with [R0] <- 7:0[R1]
000197eb: goto %0000ca04

0000e09e:
0000e0a1: R0 := 0x420000
0000e0a7: R0 := R0 + 0x64
0000e0af: mem := mem with [R31 + 0x4A8, el]:u64 <- R0
0000e0b4: R0 := 0x420000
0000e0ba: R0 := R0 + 0x7C
0000e0c2: mem := mem with [R31 + 0x4A0, el]:u64 <- R0
0000e0c9: mem := mem with [R31 + 0x498, el]:u64 <- 0
0000e0d0: R0 := pad:64[mem[R31 + 0xC8, el]:u32]
0000e0d6: R0 := pad:64[31:0[R0] - 1]
0000e0de: mem := mem with [R31 + 0xC8, el]:u32 <- 31:0[R0]
0000e0e5: R0 := mem[R31 + 0x20, el]:u64
0000e0eb: R0 := pad:64[7:0[R0]]
0000e0f0: goto %0000e0ee

0000e0ee:
0000e0f6: R19 := mem[R31 + 0x10, el]:u64
0000e0fd: R29 := mem[R31, el]:u64
0000e102: R30 := mem[R31 + 8, el]:u64
0000e108: R31 := R31 + 0x5F0
0000e10d: call R30 with noreturn

0000c7c8:
0000c7d2: R0 := extend:64[mem[R31 + 0x5E8, el]:u32]
0000c7d8: R0 := 61:0[R0].0
0000c7de: R1 := R31 + 0x460
0000c7e3: R2 := 0x751E
0000c7e9: R2 := pad:64[0x652B.15:0[R2]]
0000c7f2: mem := mem with [R1 + R0, el]:u32 <- 31:0[R2]
0000c7f9: R0 := pad:64[mem[R31 + 0x5E8, el]:u32]
0000c7ff: R0 := pad:64[31:0[R0] + 1]
0000c807: mem := mem with [R31 + 0x5E8, el]:u32 <- 31:0[R0]
000197ec: goto %0000c7a2

000197ed: sub func_93(func_93_result)
000199bb: func_93_result :: out u32 = low:32[R0]

0000e10f:
0000e113: R31 := R31 - 0xEF0
0000e11b: mem := mem with [R31, el]:u64 <- R29
0000e121: mem := mem with [R31 + 8, el]:u64 <- R30
0000e127: R29 := R31
0000e12f: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
0000e137: mem := mem with [R31 + 0x28, el]:u32 <- 31:0[R1]
0000e13f: mem := mem with [R31 + 0x20, el]:u64 <- R2
0000e147: mem := mem with [R31 + 0x18, el]:u64 <- R3
0000e14f: mem := mem with [R31 + 0x10, el]:u64 <- R4
0000e156: mem := mem with [R31 + 0xEC8, el]:u64 <- 0
0000e15b: R0 := 2
0000e163: mem := mem with [R31 + 0xEC7] <- 7:0[R0]
0000e168: R0 := 0xFFFFFFFB
0000e170: mem := mem with [R31 + 0xD8C, el]:u32 <- 31:0[R0]
0000e175: R0 := 0xE22E
0000e17b: R0 := pad:64[0x693B.15:0[R0]]
0000e183: mem := mem with [R31 + 0xD88, el]:u32 <- 31:0[R0]
0000e188: R0 := 3
0000e190: mem := mem with [R31 + 0xD84, el]:u32 <- 31:0[R0]
0000e195: R0 := 9
0000e19d: mem := mem with [R31 + 0xD80, el]:u32 <- 31:0[R0]
0000e1a2: R0 := 0x409000
0000e1a8: R0 := R0 + 0x260
0000e1ae: R2 := R31 + 0xD68
0000e1b4: R3 := R0
0000e1bb: R0 := mem[R3, el]:u64
0000e1c0: R1 := mem[R3 + 8, el]:u64
0000e1c8: mem := mem with [R2, el]:u64 <- R0
0000e1ce: mem := mem with [R2 + 8, el]:u64 <- R1
0000e1d5: R0 := pad:64[mem[R3 + 0x10, el]:u32]
0000e1dd: mem := mem with [R2 + 0x10, el]:u32 <- 31:0[R0]
0000e1e2: R0 := 0x421000
0000e1e8: R0 := R0 + 0x770
0000e1f0: mem := mem with [R31 + 0xEB8, el]:u64 <- R0
0000e1f5: R0 := 0x420000
0000e1fb: R0 := R0 + 0x7C
0000e203: mem := mem with [R31 + 0xEB0, el]:u64 <- R0
0000e209: R0 := R31 + 0xD84
0000e211: mem := mem with [R31 + 0xEA8, el]:u64 <- R0
0000e216: R0 := 0x420000
0000e21c: R0 := R0 + 0x58
0000e224: mem := mem with [R31 + 0xEA0, el]:u64 <- R0
0000e229: R0 := 0x420000
0000e22f: R0 := R0 + 0x64
0000e237: mem := mem with [R31 + 0xE98, el]:u64 <- R0
0000e23d: R0 := R31 + 0xD8C
0000e245: mem := mem with [R31 + 0xE90, el]:u64 <- R0
0000e24b: R0 := R31 + 0xD8C
0000e253: mem := mem with [R31 + 0xE88, el]:u64 <- R0
0000e259: R0 := R31 + 0xD80
0000e261: mem := mem with [R31 + 0xE80, el]:u64 <- R0
0000e266: R0 := 0xFFFFFFFA
0000e26e: mem := mem with [R31 + 0xE7C, el]:u32 <- 31:0[R0]
0000e273: R0 := 0x409000
0000e279: R0 := R0 + 0x278
0000e27f: R2 := R31 + 0xD38
0000e285: R3 := R0
0000e28c: R0 := mem[R3, el]:u64
0000e291: R1 := mem[R3 + 8, el]:u64
0000e299: mem := mem with [R2, el]:u64 <- R0
0000e29f: mem := mem with [R2 + 8, el]:u64 <- R1
0000e2a6: R0 := mem[R3 + 0x10, el]:u64
0000e2ae: mem := mem with [R2 + 0x10, el]:u64 <- R0
0000e2b3: R0 := 0x2F53
0000e2b9: R0 := pad:64[0x163A.15:0[R0]]
0000e2c1: mem := mem with [R31 + 0xE78, el]:u32 <- 31:0[R0]
0000e2c8: mem := mem with [R31 + 0xEEC, el]:u32 <- 0
0000e2cd: goto %0000e2cb

0000e2cb:
0000e2d3: R0 := pad:64[mem[R31 + 0xEEC, el]:u32]
0000e2d9: #115 := 31:0[R0] - 2
0000e2de: VF := extend:64[#115] <> extend:64[31:0[R0]] - 2
0000e2e3: CF := pad:64[#115] <> pad:64[31:0[R0]] + 0xFFFFFFFE
0000e2e7: ZF := #115 = 0
0000e2eb: NF := 31:31[#115]
0000e2f3: when ~(NF = VF & ~ZF) goto %0000e2f1
000197ee: goto %0000e32d

0000e32d:
0000e330: R0 := 0x420000
0000e336: R0 := R0 + 0x58
0000e33b: R1 := 0x19
0000e343: mem := mem with [R0, el]:u32 <- 31:0[R1]
0000e348: goto %0000e346

0000e346:
0000e34c: R0 := 0x420000
0000e352: R0 := R0 + 0x58
0000e359: R0 := pad:64[mem[R0, el]:u32]
0000e35f: #116 := 31:0[R0] + 0x12
0000e364: VF := extend:64[#116] <> extend:64[31:0[R0]] + 0x12
0000e369: CF := pad:64[#116] <> pad:64[31:0[R0]] + 0x12
0000e36d: ZF := #116 = 0
0000e371: NF := 31:31[#116]
0000e378: when NF = VF goto %0000e376
000197ef: goto %0000faea

0000faea:
0000faed: R0 := 0xD
0000faf5: mem := mem with [R31 + 0xD80, el]:u32 <- 31:0[R0]
0000fafe: R0 := pad:64[mem[R31 + 0xD80, el]:u32]
0000fb04: #146 := 31:0[R0] + 3
0000fb09: VF := extend:64[#146] <> extend:64[31:0[R0]] + 3
0000fb0e: CF := pad:64[#146] <> pad:64[31:0[R0]] + 3
0000fb12: ZF := #146 = 0
0000fb16: NF := 31:31[#146]
0000fb1c: when ZF goto %0000fb1a
000197f0: goto %0000fb3b

0000fb1a:
0000fb24: R0 := pad:64[mem[R31 + 0xE78, el]:u32]
0000fb2a: R0 := pad:64[31:0[R0] + 1]
0000fb32: mem := mem with [R31 + 0xE78, el]:u32 <- 31:0[R0]
0000fb39: R0 := mem[R31 + 0xEB8, el]:u64
000197f1: goto %0000ec53

0000fb3b:
0000fb40: R0 := mem[R31 + 0xEB8, el]:u64
0000fb44: goto %0000ec53

0000e376:
0000e380: mem := mem with [R31 + 0xD30, el]:u64 <- 0
0000e385: R0 := 0xFFFFFFFF
0000e38d: mem := mem with [R31 + 0xE74, el]:u32 <- 31:0[R0]
0000e392: R0 := 0x7D8E
0000e398: R0 := pad:64[0xE29D.15:0[R0]]
0000e3a0: mem := mem with [R31 + 0xD14, el]:u32 <- 31:0[R0]
0000e3a5: R0 := 0xFFFFFFF9
0000e3ad: mem := mem with [R31 + 0xD10, el]:u32 <- 31:0[R0]
0000e3b2: R0 := 1
0000e3ba: mem := mem with [R31 + 0xE70, el]:u32 <- 31:0[R0]
0000e3c1: mem := mem with [R31 + 0xE68, el]:u64 <- 0
0000e3c8: mem := mem with [R31 + 0xE60, el]:u64 <- 0
0000e3cd: R0 := 0x420000
0000e3d3: R0 := R0 + 0xA0
0000e3db: mem := mem with [R31 + 0xE58, el]:u64 <- R0
0000e3e2: mem := mem with [R31 + 0xEE8, el]:u32 <- 0
0000e3e7: goto %0000e3e5

0000e3e5:
0000e3ed: R0 := pad:64[mem[R31 + 0xEE8, el]:u32]
0000e3f3: #117 := 31:0[R0] - 2
0000e3f8: VF := extend:64[#117] <> extend:64[31:0[R0]] - 2
0000e3fd: CF := pad:64[#117] <> pad:64[31:0[R0]] + 0xFFFFFFFE
0000e401: ZF := #117 = 0
0000e405: NF := 31:31[#117]
0000e40d: when ~(NF = VF & ~ZF) goto %0000e40b
000197f2: goto %0000e44c

0000e44c:
0000e451: mem := mem with [R31 + 0xEE8, el]:u32 <- 0
0000e456: goto %0000e454

0000e454:
0000e45c: R0 := pad:64[mem[R31 + 0xEE8, el]:u32]
0000e462: #118 := 31:0[R0] - 1
0000e467: VF := extend:64[#118] <> extend:64[31:0[R0]] - 1
0000e46c: CF := pad:64[#118] <> pad:64[31:0[R0]] + 0xFFFFFFFF
0000e470: ZF := #118 = 0
0000e474: NF := 31:31[#118]
0000e47c: when ~(NF = VF & ~ZF) goto %0000e47a
000197f3: goto %0000e4bb

0000e4bb:
0000e4be: R0 := 7
0000e4c6: mem := mem with [R31 + 0x28, el]:u32 <- 31:0[R0]
0000e4cb: goto %0000e4c9

0000e4c9:
0000e4d1: R0 := pad:64[mem[R31 + 0x28, el]:u32]
0000e4d6: VF := 0
0000e4d9: CF := 1
0000e4dd: ZF := 31:0[R0] = 0
0000e4e1: NF := 31:31[R0]
0000e4e9: when NF = VF & ~ZF goto %0000e4e7
000197f4: goto %0000fa23

0000fa23:
0000fa26: R0 := 0x13AF
0000fa2c: R0 := pad:64[0xB3F2.15:0[R0]]
0000fa34: mem := mem with [R31 + 0xD10, el]:u32 <- 31:0[R0]
0000fa3b: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0000fa40: VF := 0
0000fa43: CF := 1
0000fa47: ZF := 31:0[R0] = 0
0000fa4b: NF := 31:31[R0]
0000fa51: when ZF goto %0000fa4f
000197f5: goto %0000fae1

0000fa4f:
0000fa57: R0 := 0
000197f6: goto %0000fa59

0000fae1:
0000fae4: R0 := 1
0000fae8: goto %0000fa59

0000fa59:
0000fa5d: #145 := 31:0[R0] - 0xA0
0000fa62: VF := extend:64[#145] <> extend:64[31:0[R0]] - 0xA0
0000fa67: CF := pad:64[#145] <> pad:64[31:0[R0]] + 0xFFFFFF60
0000fa6b: ZF := #145 = 0
0000fa6f: NF := 31:31[#145]
0000fa7b: when ZF <> 1 goto %0000fa74
0000fa7c: goto %0000fa77

0000fa77:
0000fa78: R0 := 1
0000fa7e: goto %0000fa7a

0000fa74:
0000fa75: R0 := 0
0000fa7d: goto %0000fa7a

0000fa7a:
0000fa84: R0 := pad:64[7:0[R0]]
0000fa8a: R1 := pad:64[31:0[R0]]
0000fa91: R0 := mem[R31 + 0xE58, el]:u64
0000fa99: mem := mem with [R0, el]:u32 <- 31:0[R1]
0000faa0: R1 := pad:64[mem[R31 + 0xE74, el]:u32]
0000faa5: R0 := 0xD8
0000faac: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0000fab4: mem := mem with [R31 + 0x28, el]:u32 <- 31:0[R0]
0000fab9: R0 := 0x420000
0000fabf: R0 := R0 + 0x58
0000fac6: R0 := pad:64[mem[R0, el]:u32]
0000facc: R1 := pad:64[31:0[R0] - 1]
0000fad1: R0 := 0x420000
0000fad7: R0 := R0 + 0x58
0000fadf: mem := mem with [R0, el]:u32 <- 31:0[R1]
000197f7: goto %0000e346

0000e4e7:
0000e4ef: R0 := 0x420000
0000e4f5: R0 := R0 + 0x58
0000e4fd: mem := mem with [R31 + 0xCF8, el]:u64 <- R0
0000e503: R0 := R31 + 0xCF8
0000e50b: mem := mem with [R31 + 0xE50, el]:u64 <- R0
0000e510: R0 := 0x420000
0000e516: R0 := R0 + 0x44
0000e51e: mem := mem with [R31 + 0xE48, el]:u64 <- R0
0000e523: R0 := 0xFFFFFFFF
0000e52b: mem := mem with [R31 + 0xCF4, el]:u32 <- 31:0[R0]
0000e530: R0 := 0x9E7C
0000e536: R0 := pad:64[0xC63F.15:0[R0]]
0000e53e: mem := mem with [R31 + 0xE44, el]:u32 <- 31:0[R0]
0000e543: R0 := 0xC853
0000e549: R0 := pad:64[0x3211.15:0[R0]]
0000e551: mem := mem with [R31 + 0xE40, el]:u32 <- 31:0[R0]
0000e556: R0 := 0xFFFFFFF9
0000e55e: mem := mem with [R31 + 0xE3C, el]:u32 <- 31:0[R0]
0000e563: R0 := 1
0000e56b: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
0000e570: goto %0000e56e

0000e56e:
0000e576: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0000e57c: #119 := 31:0[R0] - 7
0000e581: VF := extend:64[#119] <> extend:64[31:0[R0]] - 7
0000e586: CF := pad:64[#119] <> pad:64[31:0[R0]] + 0xFFFFFFF9
0000e58a: ZF := #119 = 0
0000e58e: NF := 31:31[#119]
0000e596: when ~(NF = VF & ~ZF) goto %0000e594
000197f8: goto %0000e5d3

0000e5d3:
0000e5d8: mem := mem with [R31 + 0xCE0, el]:u64 <- 0
0000e5dd: R0 := 0x421000
0000e5e3: R0 := R0 + 0x670
0000e5eb: mem := mem with [R31 + 0xE30, el]:u64 <- R0
0000e5f0: R0 := 0x420000
0000e5f6: R0 := R0 + 0x58
0000e5fe: mem := mem with [R31 + 0xCD8, el]:u64 <- R0
0000e604: R0 := R31 + 0xCD8
0000e60c: mem := mem with [R31 + 0xE28, el]:u64 <- R0
0000e613: R1 := mem[R31 + 0xCE0, el]:u64
0000e61a: R0 := mem[R31 + 0xE48, el]:u64
0000e61f: R30 := 0x406654
0000e621: call @func_55 with return %0000e623

0000e623:
0000e629: mem := mem with [R31 + 0xEC8, el]:u64 <- R0
0000e630: R0 := mem[R31 + 0xE30, el]:u64
0000e637: R1 := mem[R31 + 0xEC8, el]:u64
0000e63f: mem := mem with [R0, el]:u64 <- R1
0000e646: R0 := mem[R31 + 0xE30, el]:u64
0000e64d: R1 := mem[R0, el]:u64
0000e654: R0 := mem[R31 + 0xE28, el]:u64
0000e65c: mem := mem with [R0, el]:u64 <- R1
0000e661: R0 := 0x421000
0000e667: R0 := R0 + 0x778
0000e66e: R0 := mem[R0, el]:u64
0000e675: R1 := mem[R31 + 0xE28, el]:u64
0000e67c: R1 := mem[R1, el]:u64
0000e684: mem := mem with [R0, el]:u64 <- R1
0000e689: R0 := 7
0000e691: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
0000e696: goto %0000e694

0000e694:
0000e69c: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0000e6a1: VF := 0
0000e6a4: CF := 1
0000e6a8: ZF := 31:0[R0] = 0
0000e6ac: NF := 31:31[R0]
0000e6b3: when NF = VF goto %0000e6b1
000197f9: goto %0000fa0e

0000fa0e:
0000fa13: R0 := pad:64[mem[R31 + 0x28, el]:u32]
0000fa19: R0 := pad:64[31:0[R0] - 1]
0000fa21: mem := mem with [R31 + 0x28, el]:u32 <- 31:0[R0]
000197fa: goto %0000e4c9

0000e6b1:
0000e6b9: R0 := 0xA1B
0000e6bf: R0 := pad:64[0x7F11.15:0[R0]]
0000e6c7: mem := mem with [R31 + 0xCD4, el]:u32 <- 31:0[R0]
0000e6cc: R0 := 0x420000
0000e6d2: R0 := R0 + 0x84
0000e6da: mem := mem with [R31 + 0xE20, el]:u64 <- R0
0000e6e0: R0 := R31 + 0xD30
0000e6e8: mem := mem with [R31 + 0xE18, el]:u64 <- R0
0000e6ed: R0 := 0x421000
0000e6f3: R0 := R0 + 0x770
0000e6fb: mem := mem with [R31 + 0xE10, el]:u64 <- R0
0000e702: mem := mem with [R31 + 0xEE4, el]:u32 <- 0
0000e707: goto %0000e705

0000e705:
0000e70d: R0 := pad:64[mem[R31 + 0xEE4, el]:u32]
0000e712: VF := 0
0000e715: CF := 1
0000e719: ZF := 31:0[R0] = 0
0000e71d: NF := 31:31[R0]
0000e725: when ~(NF = VF & ~ZF) goto %0000e723
000197fb: goto %0000e7c7

0000e7c7:
0000e7ca: R0 := 0x420000
0000e7d0: R0 := R0 + 0x64
0000e7d7: mem := mem with [R0, el]:u32 <- 0
0000e7dc: goto %0000e7da

0000e7da:
0000e7e0: R0 := 0x420000
0000e7e6: R0 := R0 + 0x64
0000e7ed: R0 := pad:64[mem[R0, el]:u32]
0000e7f3: #121 := 31:0[R0] - 7
0000e7f8: VF := extend:64[#121] <> extend:64[31:0[R0]] - 7
0000e7fd: CF := pad:64[#121] <> pad:64[31:0[R0]] + 0xFFFFFFF9
0000e801: ZF := #121 = 0
0000e805: NF := 31:31[#121]
0000e80d: when ~(NF = VF & ~ZF) goto %0000e80b
000197fc: goto %0000ebbd

0000e80b:
0000e813: R0 := 0x420000
0000e819: R0 := R0 + 0x70
0000e821: mem := mem with [R31 + 0xE08, el]:u64 <- R0
0000e828: mem := mem with [R31 + 0xE00, el]:u64 <- 0
0000e82d: R0 := 0x420000
0000e833: R0 := R0 + 0x7C
0000e83b: mem := mem with [R31 + 0xDF8, el]:u64 <- R0
0000e840: R0 := 0x420000
0000e846: R1 := R0 + 0xCF8
0000e84c: R0 := R31 + 0x30
0000e853: V0 := mem[R1, el]:u128
0000e858: V1 := mem[R1 + 0x10, el]:u128
0000e860: mem := mem with [R0, el]:u128 <- V0
0000e866: mem := mem with [R0 + 0x10, el]:u128 <- V1
0000e86c: #122 := R1 + 0x20
0000e871: V0 := mem[#122, el]:u128
0000e876: V1 := mem[#122 + 0x10, el]:u128
0000e87c: #123 := R0 + 0x20
0000e882: mem := mem with [#123, el]:u128 <- V0
0000e888: mem := mem with [#123 + 0x10, el]:u128 <- V1
0000e88e: #124 := R1 + 0x40
0000e893: V0 := mem[#124, el]:u128
0000e898: V1 := mem[#124 + 0x10, el]:u128
0000e89e: #125 := R0 + 0x40
0000e8a4: mem := mem with [#125, el]:u128 <- V0
0000e8aa: mem := mem with [#125 + 0x10, el]:u128 <- V1
0000e8b0: #126 := R1 + 0x60
0000e8b5: V0 := mem[#126, el]:u128
0000e8ba: V1 := mem[#126 + 0x10, el]:u128
0000e8c0: #127 := R0 + 0x60
0000e8c6: mem := mem with [#127, el]:u128 <- V0
0000e8cc: mem := mem with [#127 + 0x10, el]:u128 <- V1
0000e8d1: R0 := 0x6D
0000e8d9: mem := mem with [R31 + 0xDF7] <- 7:0[R0]
0000e8e0: mem := mem with [R31 + 0xDE8, el]:u64 <- 0
0000e8e5: R0 := 0x420000
0000e8eb: R0 := R0 + 0x88
0000e8f3: mem := mem with [R31 + 0xDE0, el]:u64 <- R0
0000e8f8: R0 := 0xFFFFF434
0000e900: mem := mem with [R31 + 0xDDE, el]:u16 <- 15:0[R0]
0000e905: R0 := 0x9A69
0000e90b: R0 := pad:64[0xACA0.15:0[R0]]
0000e913: mem := mem with [R31 + 0xDD8, el]:u32 <- 31:0[R0]
0000e91a: mem := mem with [R31 + 0xEDC, el]:u32 <- 0
0000e91f: goto %0000e91d

0000e91d:
0000e925: R0 := pad:64[mem[R31 + 0xEDC, el]:u32]
0000e92b: #128 := 31:0[R0] - 2
0000e930: VF := extend:64[#128] <> extend:64[31:0[R0]] - 2
0000e935: CF := pad:64[#128] <> pad:64[31:0[R0]] + 0xFFFFFFFE
0000e939: ZF := #128 = 0
0000e93d: NF := 31:31[#128]
0000e945: when ~(NF = VF & ~ZF) goto %0000e943
000197fd: goto %0000e97e

0000e97e:
0000e983: R0 := mem[R31 + 0xE50, el]:u64
0000e98a: R0 := mem[R0, el]:u64
0000e991: R0 := pad:64[mem[R0, el]:u32]
0000e996: VF := 0
0000e999: CF := 1
0000e99d: ZF := 31:0[R0] = 0
0000e9a1: NF := 31:31[R0]
0000e9a7: when ZF goto %0000e9a5
000197fe: goto %0000f795

0000f795:
0000f798: R0 := 0x421000
0000f79e: R0 := R0 + 0x780
0000f7a5: R0 := mem[R0, el]:u64
0000f7aa: VF := 0
0000f7ad: CF := 1
0000f7b1: ZF := R0 = 0
0000f7b5: NF := 63:63[R0]
0000f7c1: when ZF goto %0000f7ba
0000f7c2: goto %0000f7bd

0000f7bd:
0000f7be: R0 := 1
0000f7c4: goto %0000f7c0

0000f7ba:
0000f7bb: R0 := 0
0000f7c3: goto %0000f7c0

0000f7c0:
0000f7ca: R0 := pad:64[7:0[R0]]
0000f7d0: R3 := pad:64[31:0[R0]]
0000f7d7: R0 := mem[R31 + 0xE08, el]:u64
0000f7de: R0 := pad:64[mem[R0]]
0000f7e4: R0 := pad:64[31:0[R0] + 1]
0000f7ea: R1 := pad:64[7:0[R0]]
0000f7f1: R0 := mem[R31 + 0xE08, el]:u64
0000f7f9: mem := mem with [R0] <- 7:0[R1]
0000f800: R0 := mem[R31 + 0xEC8, el]:u64
0000f807: R0 := pad:64[mem[R0, el]:u32]
0000f80d: R0 := pad:64[extend:32[15:0[R0]]]
0000f813: R0 := pad:64[31:0[R0] | 1]
0000f819: R0 := pad:64[extend:32[15:0[R0]]]
0000f81f: R0 := pad:64[15:0[R0]]
0000f825: R1 := pad:64[31:0[R0]]
0000f82c: R0 := pad:64[mem[R31 + 0xE74, el]:u32]
0000f832: R0 := pad:64[15:0[R0]]
0000f839: R0 := pad:64[31:0[R1] * 31:0[R0]]
0000f840: R1 := pad:64[mem[R31 + 0x2C, el]:u32]
0000f849: R1 := pad:64[mem[R31 + 0x2C, el]:u32]
0000f850: R1 := pad:64[31:0[R2] * 31:0[R1]]
0000f857: R0 := pad:64[31:0[R0] + ~31:0[R1] + 1]
0000f85f: mem := mem with [R31 + 0xCF4, el]:u32 <- 31:0[R0]
0000f866: R1 := pad:64[mem[R31 + 0xCF4, el]:u32]
0000f86d: R0 := pad:64[mem[R31 + 0x28, el]:u32]
0000f874: R1 := pad:64[31:0[R1] + ~31:0[R0] + 1]
0000f879: R0 := 0x6FF5
0000f87f: #137 := ~31:0[R0]
0000f884: #138 := 31:0[R1] + ~31:0[R0]
0000f88a: VF := extend:64[#138 + 1] <> extend:64[31:0[R1]] + extend:64[#137]
          + 1
0000f890: CF := pad:64[#138 + 1] <> pad:64[31:0[R1]] + pad:64[#137] + 1
0000f894: ZF := #138 + 1 = 0
0000f898: NF := 31:31[#138 + 1]
0000f89f: R0 := pad:64[extend:32[mem[R31 + 0xEC7]]]
0000f8a4: VF := 0
0000f8a7: CF := 1
0000f8ab: ZF := 31:0[R0] = 0
0000f8af: NF := 31:31[R0]
0000f8b6: R1 := mem[R31 + 0xD30, el]:u64
0000f8bb: R0 := 0xF622
0000f8c2: R0 := 63:32[R0].0x7BD0.15:0[R0]
0000f8c9: R0 := 63:48[R0].0x86B2.31:0[R0]
0000f8cf: R0 := 0x186A.47:0[R0]
0000f8d5: #139 := ~R0
0000f8da: #140 := R1 + ~R0
0000f8e0: VF := extend:128[#140 + 1] <> extend:128[R1] + extend:128[#139] + 1
0000f8e6: CF := pad:128[#140 + 1] <> pad:128[R1] + pad:128[#139] + 1
0000f8ea: ZF := #140 + 1 = 0
0000f8ee: NF := 63:63[#140 + 1]
0000f8fa: when ZF goto %0000f8f3
0000f8fb: goto %0000f8f6

0000f8f6:
0000f8f7: R0 := 1
0000f8fd: goto %0000f8f9

0000f8f3:
0000f8f4: R0 := 0
0000f8fc: goto %0000f8f9

0000f8f9:
0000f903: R0 := pad:64[7:0[R0]]
0000f909: R1 := pad:64[31:0[R0]]
0000f910: R0 := mem[R31 + 0xDF8, el]:u64
0000f918: mem := mem with [R0, el]:u32 <- 31:0[R1]
0000f91f: R0 := mem[R31 + 0xDF8, el]:u64
0000f926: R0 := pad:64[mem[R0, el]:u32]
0000f92c: #141 := ~31:0[R0]
0000f931: #142 := 31:0[R3] + ~31:0[R0]
0000f937: VF := extend:64[#142 + 1] <> extend:64[31:0[R3]] + extend:64[#141]
          + 1
0000f93d: CF := pad:64[#142 + 1] <> pad:64[31:0[R3]] + pad:64[#141] + 1
0000f941: ZF := #142 + 1 = 0
0000f945: NF := 31:31[#142 + 1]
0000f952: when NF <> VF goto %0000f94b
0000f953: goto %0000f94e

0000f94e:
0000f94f: R0 := 1
0000f955: goto %0000f951

0000f94b:
0000f94c: R0 := 0
0000f954: goto %0000f951

0000f951:
0000f95b: R0 := pad:64[7:0[R0]]
0000f961: R1 := pad:64[31:0[R0]]
0000f968: R0 := pad:64[mem[R31 + 0xE74, el]:u32]
0000f96e: R0 := pad:64[7:0[R0]]
0000f976: R1 := extend:64[31:0[R0]]
0000f97d: R0 := extend:64[mem[R31 + 0x2C, el]:u32]
0000f984: R1 := R1 + ~R0 + 1
0000f98b: R0 := extend:64[mem[R31 + 0x28, el]:u32]
0000f991: #143 := ~R0
0000f996: #144 := R1 + ~R0
0000f99c: VF := extend:128[#144 + 1] <> extend:128[R1] + extend:128[#143] + 1
0000f9a2: CF := pad:128[#144 + 1] <> pad:128[R1] + pad:128[#143] + 1
0000f9a6: ZF := #144 + 1 = 0
0000f9aa: NF := 63:63[#144 + 1]
0000f9b6: when ZF <> 1 goto %0000f9af
0000f9b7: goto %0000f9b2

0000f9b2:
0000f9b3: R0 := 1
0000f9b9: goto %0000f9b5

0000f9af:
0000f9b0: R0 := 0
0000f9b8: goto %0000f9b5

0000f9b5:
0000f9bf: R0 := pad:64[7:0[R0]]
0000f9c7: mem := mem with [R31 + 0x18, el]:u16 <- 15:0[R0]
0000f9ce: R0 := pad:64[extend:32[mem[R31 + 0xDF7]]]
0000f9d3: VF := 0
0000f9d6: CF := 1
0000f9da: ZF := 31:0[R0] = 0
0000f9de: NF := 31:31[R0]
0000f9e3: when ZF goto %0000e9a5
000197ff: goto %0000f9e7

0000f9e7:
0000f9ec: R0 := pad:64[mem[R31 + 0x28, el]:u32]
0000f9f1: VF := 0
0000f9f4: CF := 1
0000f9f8: ZF := 31:0[R0] = 0
0000f9fc: NF := 31:31[R0]
0000fa01: when ZF goto %0000e9a5
00019800: goto %0000fa05

0000e9a5:
0000e9ad: R0 := 0
00019801: goto %0000e9af

0000fa05:
0000fa08: R0 := 1
0000fa0c: goto %0000e9af

0000e9af:
0000e9b3: R0 := pad:64[15:0[R0]]
0000e9b9: R0 := pad:64[31:0[R0] - 9]
0000e9bf: R0 := pad:64[15:0[R0]]
0000e9c5: R0 := pad:64[extend:32[15:0[R0]]]
0000e9cb: R1 := pad:64[31:0[R0]]
0000e9d0: R0 := 0xFFFFA52E
0000e9d7: R0 := pad:64[31:0[R1] * 31:0[R0]]
0000e9dd: R1 := pad:64[31:0[R0]]
0000e9e4: R0 := mem[R31 + 0xDE0, el]:u64
0000e9ec: mem := mem with [R0, el]:u32 <- 31:0[R1]
0000e9f1: R0 := 0x421000
0000e9f7: R0 := R0 + 0x790
0000e9fe: R0 := mem[R0, el]:u64
0000ea06: mem := mem with [R31 + 0xD20, el]:u64 <- R0
0000ea0b: R0 := 0x420000
0000ea11: R0 := R0 + 0x70
0000ea18: R0 := pad:64[mem[R0]]
0000ea1e: R1 := pad:64[31:0[R0]]
0000ea23: R0 := 0x420000
0000ea29: R0 := R0 + 0x64
0000ea30: R0 := pad:64[mem[R0, el]:u32]
0000ea36: R0 := pad:64[15:0[R0]]
0000ea3d: R0 := pad:64[31:0[R1] + ~31:0[R0] + 1]
0000ea43: R0 := pad:64[15:0[R0]]
0000ea49: R1 := pad:64[31:0[R0]]
0000ea50: R0 := mem[R31 + 0xEC8, el]:u64
0000ea57: R0 := pad:64[mem[R0, el]:u32]
0000ea5d: R0 := pad:64[15:0[R0]]
0000ea64: R0 := pad:64[31:0[R1] ~>> pad:10[4:0[R0]]]
0000ea69: VF := 0
0000ea6c: CF := 1
0000ea70: ZF := 31:0[R0] = 0
0000ea74: NF := 31:31[R0]
0000ea7a: when ZF goto %0000ea78
00019802: goto %0000ec98

0000ea78:
0000ea82: mem := mem with [R31 + 0xED8, el]:u32 <- 0
0000ea87: goto %0000ea85

0000ea85:
0000ea8d: R0 := pad:64[mem[R31 + 0xED8, el]:u32]
0000ea93: #129 := 31:0[R0] - 9
0000ea98: VF := extend:64[#129] <> extend:64[31:0[R0]] - 9
0000ea9d: CF := pad:64[#129] <> pad:64[31:0[R0]] + 0xFFFFFFF7
0000eaa1: ZF := #129 = 0
0000eaa5: NF := 31:31[#129]
0000eaad: when ~(NF = VF & ~ZF) goto %0000eaab
00019803: goto %0000eba4

0000eba4:
0000eba9: R0 := pad:64[extend:32[mem[R31 + 0x5AD]]]
0000ebae: VF := 0
0000ebb1: CF := 1
0000ebb5: ZF := 31:0[R0] = 0
0000ebb9: NF := 31:31[R0]
0000ebbf: when ZF <> 1 goto %0000ebbd
00019804: goto %0000ec4b

0000ebbd:
0000ebc7: mem := mem with [R31 + 0xD10, el]:u32 <- 0
0000ebcc: goto %0000ebca

0000ebca:
0000ebd2: R0 := pad:64[mem[R31 + 0xD10, el]:u32]
0000ebd8: #132 := 31:0[R0] - 7
0000ebdd: VF := extend:64[#132] <> extend:64[31:0[R0]] - 7
0000ebe2: CF := pad:64[#132] <> pad:64[31:0[R0]] + 0xFFFFFFF9
0000ebe6: ZF := #132 = 0
0000ebea: NF := 31:31[#132]
0000ebf2: when ~(NF = VF & ~ZF) goto %0000ebf0
00019805: goto %0000ec36

0000ec36:
0000ec3b: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0000ec41: R0 := pad:64[31:0[R0] - 1]
0000ec49: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
00019806: goto %0000e694

0000ebf0:
0000ebfa: R1 := pad:64[mem[R31 + 0xD10, el]:u32]
0000ebff: R0 := 0x421000
0000ec05: R0 := R0 + 0x630
0000ec0b: R1 := extend:64[31:0[R1]]
0000ec10: R2 := 0x421000
0000ec16: R2 := R2 + 0x628
0000ec1f: mem := mem with [R0 + (60:0[R1].0), el]:u64 <- R2
0000ec26: R0 := pad:64[mem[R31 + 0xD10, el]:u32]
0000ec2c: R0 := pad:64[31:0[R0] + 1]
0000ec34: mem := mem with [R31 + 0xD10, el]:u32 <- 31:0[R0]
00019807: goto %0000ebca

0000ec4b:
0000ec50: R0 := mem[R31 + 0xE10, el]:u64
0000ec55: goto %0000ec53

0000ec53:
0000ec5b: R29 := mem[R31, el]:u64
0000ec60: R30 := mem[R31 + 8, el]:u64
0000ec66: R31 := R31 + 0xEF0
0000ec6b: call R30 with noreturn

0000eaab:
0000eab5: mem := mem with [R31 + 0xED4, el]:u32 <- 0
0000eaba: goto %0000eab8

0000eab8:
0000eac0: R0 := pad:64[mem[R31 + 0xED4, el]:u32]
0000eac6: #130 := 31:0[R0] - 7
0000eacb: VF := extend:64[#130] <> extend:64[31:0[R0]] - 7
0000ead0: CF := pad:64[#130] <> pad:64[31:0[R0]] + 0xFFFFFFF9
0000ead4: ZF := #130 = 0
0000ead8: NF := 31:31[#130]
0000eae0: when ~(NF = VF & ~ZF) goto %0000eade
00019808: goto %0000eb8f

0000eb8f:
0000eb94: R0 := pad:64[mem[R31 + 0xED8, el]:u32]
0000eb9a: R0 := pad:64[31:0[R0] + 1]
0000eba2: mem := mem with [R31 + 0xED8, el]:u32 <- 31:0[R0]
00019809: goto %0000ea85

0000eade:
0000eae8: mem := mem with [R31 + 0xED0, el]:u32 <- 0
0000eaed: goto %0000eaeb

0000eaeb:
0000eaf3: R0 := pad:64[mem[R31 + 0xED0, el]:u32]
0000eaf9: #131 := 31:0[R0] - 1
0000eafe: VF := extend:64[#131] <> extend:64[31:0[R0]] - 1
0000eb03: CF := pad:64[#131] <> pad:64[31:0[R0]] + 0xFFFFFFFF
0000eb07: ZF := #131 = 0
0000eb0b: NF := 31:31[#131]
0000eb13: when ~(NF = VF & ~ZF) goto %0000eb11
0001980a: goto %0000eb7a

0000eb7a:
0000eb7f: R0 := pad:64[mem[R31 + 0xED4, el]:u32]
0000eb85: R0 := pad:64[31:0[R0] + 1]
0000eb8d: mem := mem with [R31 + 0xED4, el]:u32 <- 31:0[R0]
0001980b: goto %0000eab8

0000eb11:
0000eb1b: R0 := extend:64[mem[R31 + 0xED0, el]:u32]
0000eb22: R2 := extend:64[mem[R31 + 0xED8, el]:u32]
0000eb29: R1 := extend:64[mem[R31 + 0xED4, el]:u32]
0000eb2f: R2 := 60:0[R2].0
0000eb36: R1 := R2 + R1
0000eb3c: R1 := 62:0[R1].0
0000eb42: R1 := R1 + 0xEF0
0000eb49: R1 := R31 + R1
0000eb50: R0 := R1 + R0
0000eb56: R0 := R0 - 0x1000
0000eb5b: R1 := 4
0000eb63: mem := mem with [R0 + 0x620] <- 7:0[R1]
0000eb6a: R0 := pad:64[mem[R31 + 0xED0, el]:u32]
0000eb70: R0 := pad:64[31:0[R0] + 1]
0000eb78: mem := mem with [R31 + 0xED0, el]:u32 <- 31:0[R0]
0001980c: goto %0000eaeb

0000ec98:
0000ec9b: R0 := 0x420000
0000eca1: R1 := R0 + 0xD78
0000eca7: R0 := R31 + 0x510
0000ecad: R3 := R1
0000ecb2: R1 := 0x780
0000ecb8: R2 := R1
0000ecbe: R1 := R3
0000ecc3: R30 := 0x4069B8
0000ecc5: call @memcpy with return %0000ecc7

0000ecc7:
0000eccb: R0 := R31 + 0x30
0000ecd1: R0 := R0 + 8
0000ecd9: mem := mem with [R31 + 0xDD0, el]:u64 <- R0
0000ecde: R0 := 0x420000
0000ece4: R0 := R0 + 0x90
0000ecec: mem := mem with [R31 + 0xDC8, el]:u64 <- R0
0000ecf1: R0 := 0x420000
0000ecf7: R0 := R0 + 0x98
0000ecff: mem := mem with [R31 + 0xDC0, el]:u64 <- R0
0000ed04: R0 := 0x420000
0000ed0a: R0 := R0 + 0x7C
0000ed12: mem := mem with [R31 + 0xDB8, el]:u64 <- R0
0000ed18: R0 := R31 + 0xD10
0000ed20: mem := mem with [R31 + 0xDB0, el]:u64 <- R0
0000ed26: R0 := R31 + 0xD10
0000ed2e: mem := mem with [R31 + 0xDA8, el]:u64 <- R0
0000ed34: R0 := R31 + 0xCC8
0000ed3c: mem := mem with [R31 + 0xDA0, el]:u64 <- R0
0000ed41: R0 := 0x420000
0000ed47: R0 := R0 + 0x58
0000ed4f: mem := mem with [R31 + 0xB0, el]:u64 <- R0
0000ed55: R0 := R31 + 0xD14
0000ed5d: mem := mem with [R31 + 0xB8, el]:u64 <- R0
0000ed63: R0 := R31 + 0xD10
0000ed6b: mem := mem with [R31 + 0xC0, el]:u64 <- R0
0000ed71: R0 := R31 + 0xD14
0000ed79: mem := mem with [R31 + 0xC8, el]:u64 <- R0
0000ed7e: R0 := 0x420000
0000ed84: R0 := R0 + 0x48
0000ed8c: mem := mem with [R31 + 0xD0, el]:u64 <- R0
0000ed92: R0 := R31 + 0xCD4
0000ed9a: mem := mem with [R31 + 0xD8, el]:u64 <- R0
0000ed9f: R0 := 0x420000
0000eda5: R0 := R0 + 0x58
0000edad: mem := mem with [R31 + 0xE0, el]:u64 <- R0
0000edb2: R0 := 0x420000
0000edb8: R0 := R0 + 0x7C
0000edc0: mem := mem with [R31 + 0xE8, el]:u64 <- R0
0000edc6: R0 := R31 + 0xCD4
0000edce: mem := mem with [R31 + 0xF0, el]:u64 <- R0
0000edd3: R0 := 0x420000
0000edd9: R0 := R0 + 0x58
0000ede1: mem := mem with [R31 + 0xF8, el]:u64 <- R0
0000ede7: R0 := R31 + 0xCD4
0000edef: mem := mem with [R31 + 0x100, el]:u64 <- R0
0000edf4: R0 := 0x420000
0000edfa: R0 := R0 + 0x58
0000ee02: mem := mem with [R31 + 0x108, el]:u64 <- R0
0000ee07: R0 := 0x420000
0000ee0d: R0 := R0 + 0x7C
0000ee15: mem := mem with [R31 + 0x110, el]:u64 <- R0
0000ee1b: R0 := R31 + 0xCD4
0000ee23: mem := mem with [R31 + 0x118, el]:u64 <- R0
0000ee28: R0 := 0x420000
0000ee2e: R0 := R0 + 0x58
0000ee36: mem := mem with [R31 + 0x120, el]:u64 <- R0
0000ee3d: mem := mem with [R31 + 0x128, el]:u64 <- 0
0000ee43: R0 := R31 + 0xD10
0000ee4b: mem := mem with [R31 + 0x130, el]:u64 <- R0
0000ee51: R0 := R31 + 0xCD4
0000ee59: mem := mem with [R31 + 0x138, el]:u64 <- R0
0000ee5e: R0 := 0x420000
0000ee64: R0 := R0 + 0x64
0000ee6c: mem := mem with [R31 + 0x140, el]:u64 <- R0
0000ee71: R0 := 0x420000
0000ee77: R0 := R0 + 0x7C
0000ee7f: mem := mem with [R31 + 0x148, el]:u64 <- R0
0000ee84: R0 := 0x420000
0000ee8a: R0 := R0 + 0x64
0000ee92: mem := mem with [R31 + 0x150, el]:u64 <- R0
0000ee98: R0 := R31 + 0xCC8
0000eea0: mem := mem with [R31 + 0x158, el]:u64 <- R0
0000eea6: R0 := R31 + 0xCF4
0000eeae: mem := mem with [R31 + 0x160, el]:u64 <- R0
0000eeb5: mem := mem with [R31 + 0x168, el]:u64 <- 0
0000eeba: R0 := 0x420000
0000eec0: R0 := R0 + 0x48
0000eec8: mem := mem with [R31 + 0x170, el]:u64 <- R0
0000eece: R0 := R31 + 0xCC8
0000eed4: R0 := R0 + 8
0000eedc: mem := mem with [R31 + 0x178, el]:u64 <- R0
0000eee2: R0 := R31 + 0xCC8
0000eeea: mem := mem with [R31 + 0x180, el]:u64 <- R0
0000eeef: R0 := 0x420000
0000eef5: R0 := R0 + 0x48
0000eefd: mem := mem with [R31 + 0x188, el]:u64 <- R0
0000ef02: R0 := 0x420000
0000ef08: R0 := R0 + 0x78
0000ef10: mem := mem with [R31 + 0x190, el]:u64 <- R0
0000ef15: R0 := 0x420000
0000ef1b: R0 := R0 + 0x58
0000ef23: mem := mem with [R31 + 0x198, el]:u64 <- R0
0000ef29: R0 := R31 + 0xCC8
0000ef31: mem := mem with [R31 + 0x1A0, el]:u64 <- R0
0000ef37: R0 := R31 + 0xCD4
0000ef3f: mem := mem with [R31 + 0x1A8, el]:u64 <- R0
0000ef45: R0 := R31 + 0xD10
0000ef4d: mem := mem with [R31 + 0x1B0, el]:u64 <- R0
0000ef52: R0 := 0x420000
0000ef58: R0 := R0 + 0x64
0000ef60: mem := mem with [R31 + 0x1B8, el]:u64 <- R0
0000ef66: R0 := R31 + 0xCD4
0000ef6e: mem := mem with [R31 + 0x1C0, el]:u64 <- R0
0000ef74: R0 := R31 + 0xCC8
0000ef7a: R0 := R0 + 8
0000ef82: mem := mem with [R31 + 0x1C8, el]:u64 <- R0
0000ef87: R0 := 0x420000
0000ef8d: R0 := R0 + 0x48
0000ef95: mem := mem with [R31 + 0x1D0, el]:u64 <- R0
0000ef9c: mem := mem with [R31 + 0x1D8, el]:u64 <- 0
0000efa2: R0 := R31 + 0xCD4
0000efaa: mem := mem with [R31 + 0x1E0, el]:u64 <- R0
0000efaf: R0 := 0x420000
0000efb5: R0 := R0 + 0x48
0000efbd: mem := mem with [R31 + 0x1E8, el]:u64 <- R0
0000efc4: mem := mem with [R31 + 0x1F0, el]:u64 <- 0
0000efcb: mem := mem with [R31 + 0x1F8, el]:u64 <- 0
0000efd2: mem := mem with [R31 + 0x200, el]:u64 <- 0
0000efd8: R0 := R31 + 0xCD4
0000efe0: mem := mem with [R31 + 0x208, el]:u64 <- R0
0000efe6: R0 := R31 + 0xCD4
0000efee: mem := mem with [R31 + 0x210, el]:u64 <- R0
0000eff4: R0 := R31 + 0xCD4
0000effc: mem := mem with [R31 + 0x218, el]:u64 <- R0
0000f003: mem := mem with [R31 + 0x220, el]:u64 <- 0
0000f00a: mem := mem with [R31 + 0x228, el]:u64 <- 0
0000f011: mem := mem with [R31 + 0x230, el]:u64 <- 0
0000f017: R0 := R31 + 0xD10
0000f01f: mem := mem with [R31 + 0x238, el]:u64 <- R0
0000f024: R0 := 0x420000
0000f02a: R0 := R0 + 0x64
0000f032: mem := mem with [R31 + 0x240, el]:u64 <- R0
0000f039: mem := mem with [R31 + 0x248, el]:u64 <- 0
0000f03f: R0 := R31 + 0xCC8
0000f045: R0 := R0 + 8
0000f04d: mem := mem with [R31 + 0x250, el]:u64 <- R0
0000f052: R0 := 0x420000
0000f058: R0 := R0 + 0x58
0000f060: mem := mem with [R31 + 0x258, el]:u64 <- R0
0000f066: R0 := R31 + 0xCC8
0000f06e: mem := mem with [R31 + 0x260, el]:u64 <- R0
0000f074: R0 := R31 + 0xCC8
0000f07c: mem := mem with [R31 + 0x268, el]:u64 <- R0
0000f082: R0 := R31 + 0xD10
0000f08a: mem := mem with [R31 + 0x270, el]:u64 <- R0
0000f08f: R0 := 0x420000
0000f095: R0 := R0 + 0x64
0000f09d: mem := mem with [R31 + 0x278, el]:u64 <- R0
0000f0a3: R0 := R31 + 0xCC8
0000f0ab: mem := mem with [R31 + 0x280, el]:u64 <- R0
0000f0b0: R0 := 0x420000
0000f0b6: R0 := R0 + 0x48
0000f0be: mem := mem with [R31 + 0x288, el]:u64 <- R0
0000f0c5: mem := mem with [R31 + 0x290, el]:u64 <- 0
0000f0ca: R0 := 0x420000
0000f0d0: R0 := R0 + 0x58
0000f0d8: mem := mem with [R31 + 0x298, el]:u64 <- R0
0000f0de: R0 := R31 + 0xCC8
0000f0e6: mem := mem with [R31 + 0x2A0, el]:u64 <- R0
0000f0eb: R0 := 0x420000
0000f0f1: R0 := R0 + 0x58
0000f0f9: mem := mem with [R31 + 0x2A8, el]:u64 <- R0
0000f0fe: R0 := 0x420000
0000f104: R0 := R0 + 0x58
0000f10c: mem := mem with [R31 + 0x2B0, el]:u64 <- R0
0000f113: mem := mem with [R31 + 0x2B8, el]:u64 <- 0
0000f118: R0 := 0x420000
0000f11e: R0 := R0 + 0x58
0000f126: mem := mem with [R31 + 0x2C0, el]:u64 <- R0
0000f12b: R0 := 0x420000
0000f131: R0 := R0 + 0x58
0000f139: mem := mem with [R31 + 0x2C8, el]:u64 <- R0
0000f140: mem := mem with [R31 + 0x2D0, el]:u64 <- 0
0000f147: mem := mem with [R31 + 0x2D8, el]:u64 <- 0
0000f14c: R0 := 0x420000
0000f152: R0 := R0 + 0x58
0000f15a: mem := mem with [R31 + 0x2E0, el]:u64 <- R0
0000f15f: R0 := 0x420000
0000f165: R0 := R0 + 0x64
0000f16d: mem := mem with [R31 + 0x2E8, el]:u64 <- R0
0000f174: mem := mem with [R31 + 0x2F0, el]:u64 <- 0
0000f17a: R0 := R31 + 0xCD4
0000f182: mem := mem with [R31 + 0x2F8, el]:u64 <- R0
0000f187: R0 := 0x420000
0000f18d: R0 := R0 + 0x48
0000f195: mem := mem with [R31 + 0x300, el]:u64 <- R0
0000f19b: R0 := R31 + 0xCF4
0000f1a3: mem := mem with [R31 + 0x308, el]:u64 <- R0
0000f1aa: mem := mem with [R31 + 0x310, el]:u64 <- 0
0000f1b0: R0 := R31 + 0xCC8
0000f1b8: mem := mem with [R31 + 0x318, el]:u64 <- R0
0000f1be: R0 := R31 + 0xCD4
0000f1c6: mem := mem with [R31 + 0x320, el]:u64 <- R0
0000f1cd: mem := mem with [R31 + 0x328, el]:u64 <- 0
0000f1d3: R0 := R31 + 0xCC8
0000f1db: mem := mem with [R31 + 0x330, el]:u64 <- R0
0000f1e1: R0 := R31 + 0xCC8
0000f1e9: mem := mem with [R31 + 0x338, el]:u64 <- R0
0000f1ee: R0 := 0x420000
0000f1f4: R0 := R0 + 0x78
0000f1fc: mem := mem with [R31 + 0x340, el]:u64 <- R0
0000f201: R0 := 0x420000
0000f207: R0 := R0 + 0x64
0000f20f: mem := mem with [R31 + 0x348, el]:u64 <- R0
0000f214: R0 := 0x420000
0000f21a: R0 := R0 + 0x48
0000f222: mem := mem with [R31 + 0x350, el]:u64 <- R0
0000f228: R0 := R31 + 0xCC8
0000f230: mem := mem with [R31 + 0x358, el]:u64 <- R0
0000f237: mem := mem with [R31 + 0x360, el]:u64 <- 0
0000f23c: R0 := 0x420000
0000f242: R0 := R0 + 0x7C
0000f24a: mem := mem with [R31 + 0x368, el]:u64 <- R0
0000f24f: R0 := 0x420000
0000f255: R0 := R0 + 0x78
0000f25d: mem := mem with [R31 + 0x370, el]:u64 <- R0
0000f264: mem := mem with [R31 + 0x378, el]:u64 <- 0
0000f269: R0 := 0x420000
0000f26f: R0 := R0 + 0x48
0000f277: mem := mem with [R31 + 0x380, el]:u64 <- R0
0000f27e: mem := mem with [R31 + 0x388, el]:u64 <- 0
0000f283: R0 := 0x420000
0000f289: R0 := R0 + 0x7C
0000f291: mem := mem with [R31 + 0x390, el]:u64 <- R0
0000f297: R0 := R31 + 0xD10
0000f29f: mem := mem with [R31 + 0x398, el]:u64 <- R0
0000f2a4: R0 := 0x420000
0000f2aa: R0 := R0 + 0x58
0000f2b2: mem := mem with [R31 + 0x3A0, el]:u64 <- R0
0000f2b8: R0 := R31 + 0xD14
0000f2c0: mem := mem with [R31 + 0x3A8, el]:u64 <- R0
0000f2c7: mem := mem with [R31 + 0x3B0, el]:u64 <- 0
0000f2ce: mem := mem with [R31 + 0x3B8, el]:u64 <- 0
0000f2d4: R0 := R31 + 0xCC8
0000f2dc: mem := mem with [R31 + 0x3C0, el]:u64 <- R0
0000f2e1: R0 := 0x420000
0000f2e7: R0 := R0 + 0x7C
0000f2ef: mem := mem with [R31 + 0x3C8, el]:u64 <- R0
0000f2f6: mem := mem with [R31 + 0x3D0, el]:u64 <- 0
0000f2fc: R0 := R31 + 0xCC8
0000f304: mem := mem with [R31 + 0x3D8, el]:u64 <- R0
0000f30a: R0 := R31 + 0xD10
0000f312: mem := mem with [R31 + 0x3E0, el]:u64 <- R0
0000f318: R0 := R31 + 0xCF4
0000f320: mem := mem with [R31 + 0x3E8, el]:u64 <- R0
0000f327: mem := mem with [R31 + 0x3F0, el]:u64 <- 0
0000f32c: R0 := 0x420000
0000f332: R0 := R0 + 0x7C
0000f33a: mem := mem with [R31 + 0x3F8, el]:u64 <- R0
0000f33f: R0 := 0x420000
0000f345: R0 := R0 + 0x7C
0000f34d: mem := mem with [R31 + 0x400, el]:u64 <- R0
0000f354: mem := mem with [R31 + 0x408, el]:u64 <- 0
0000f35a: R0 := R31 + 0xCF4
0000f362: mem := mem with [R31 + 0x410, el]:u64 <- R0
0000f368: R0 := R31 + 0xD10
0000f370: mem := mem with [R31 + 0x418, el]:u64 <- R0
0000f377: mem := mem with [R31 + 0x420, el]:u64 <- 0
0000f37e: mem := mem with [R31 + 0x428, el]:u64 <- 0
0000f383: R0 := 0x420000
0000f389: R0 := R0 + 0x64
0000f391: mem := mem with [R31 + 0x430, el]:u64 <- R0
0000f398: mem := mem with [R31 + 0x438, el]:u64 <- 0
0000f39e: R0 := R31 + 0xCD4
0000f3a6: mem := mem with [R31 + 0x440, el]:u64 <- R0
0000f3ac: R0 := R31 + 0xCC8
0000f3b4: mem := mem with [R31 + 0x448, el]:u64 <- R0
0000f3b9: R0 := 0x420000
0000f3bf: R0 := R0 + 0x48
0000f3c7: mem := mem with [R31 + 0x450, el]:u64 <- R0
0000f3cc: R0 := 0x420000
0000f3d2: R0 := R0 + 0x48
0000f3da: mem := mem with [R31 + 0x458, el]:u64 <- R0
0000f3df: R0 := 0x420000
0000f3e5: R0 := R0 + 0x48
0000f3ed: mem := mem with [R31 + 0x460, el]:u64 <- R0
0000f3f2: R0 := 0x420000
0000f3f8: R0 := R0 + 0x48
0000f400: mem := mem with [R31 + 0x468, el]:u64 <- R0
0000f405: R0 := 0x420000
0000f40b: R0 := R0 + 0x64
0000f413: mem := mem with [R31 + 0x470, el]:u64 <- R0
0000f419: R0 := R31 + 0xCF4
0000f421: mem := mem with [R31 + 0x478, el]:u64 <- R0
0000f427: R0 := R31 + 0xD14
0000f42f: mem := mem with [R31 + 0x480, el]:u64 <- R0
0000f434: R0 := 0x420000
0000f43a: R0 := R0 + 0x48
0000f442: mem := mem with [R31 + 0x488, el]:u64 <- R0
0000f448: R0 := R31 + 0xCD4
0000f450: mem := mem with [R31 + 0x490, el]:u64 <- R0
0000f456: R0 := R31 + 0xCF4
0000f45e: mem := mem with [R31 + 0x498, el]:u64 <- R0
0000f463: R0 := 0x420000
0000f469: R0 := R0 + 0x48
0000f471: mem := mem with [R31 + 0x4A0, el]:u64 <- R0
0000f477: R0 := R31 + 0xCF4
0000f47f: mem := mem with [R31 + 0x4A8, el]:u64 <- R0
0000f485: R0 := R31 + 0xCF4
0000f48d: mem := mem with [R31 + 0x4B0, el]:u64 <- R0
0000f492: R0 := 0x420000
0000f498: R0 := R0 + 0x48
0000f4a0: mem := mem with [R31 + 0x4B8, el]:u64 <- R0
0000f4a5: R0 := 0x420000
0000f4ab: R0 := R0 + 0x58
0000f4b3: mem := mem with [R31 + 0x4C0, el]:u64 <- R0
0000f4ba: mem := mem with [R31 + 0x4C8, el]:u64 <- 0
0000f4c1: mem := mem with [R31 + 0x4D0, el]:u64 <- 0
0000f4c7: R0 := R31 + 0xCC8
0000f4cd: R0 := R0 + 8
0000f4d5: mem := mem with [R31 + 0x4D8, el]:u64 <- R0
0000f4da: R0 := 0x420000
0000f4e0: R0 := R0 + 0x48
0000f4e8: mem := mem with [R31 + 0x4E0, el]:u64 <- R0
0000f4ed: R0 := 0x420000
0000f4f3: R0 := R0 + 0x58
0000f4fb: mem := mem with [R31 + 0x4E8, el]:u64 <- R0
0000f500: R0 := 0x420000
0000f506: R0 := R0 + 0x7C
0000f50e: mem := mem with [R31 + 0x4F0, el]:u64 <- R0
0000f515: mem := mem with [R31 + 0x4F8, el]:u64 <- 0
0000f51c: mem := mem with [R31 + 0x500, el]:u64 <- 0
0000f521: R0 := 0x420000
0000f527: R0 := R0 + 0x58
0000f52f: mem := mem with [R31 + 0x508, el]:u64 <- R0
0000f534: R0 := 1
0000f53c: mem := mem with [R31 + 0xD9E, el]:u16 <- 15:0[R0]
0000f541: R0 := 0xFFFFFFFFFFFFFFFF
0000f549: mem := mem with [R31 + 0xD90, el]:u64 <- R0
0000f550: R0 := mem[R31 + 0xDD0, el]:u64
0000f557: R1 := mem[R31 + 0xE20, el]:u64
0000f55f: mem := mem with [R0, el]:u64 <- R1
0000f564: R0 := 0
0000f56a: R1 := pad:64[7:0[R0]]
0000f56f: R0 := 0x421000
0000f575: R0 := R0 + 0x780
0000f57c: R0 := mem[R0, el]:u64
0000f583: R0 := mem[R0, el]:u64
0000f589: R0 := pad:64[7:0[R0]]
0000f590: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0000f596: R0 := pad:64[7:0[R0]]
0000f59c: R0 := pad:64[extend:32[7:0[R0]]]
0000f5a1: R30 := 0x406F14
0000f5a3: call @func_68 with return %0000f5a5

0000f5a5:
0000f5aa: R1 := mem[R31 + 0x10, el]:u64
0000f5af: R0 := 0x420000
0000f5b5: R0 := R0 + 0x70
0000f5bb: #133 := ~R0
0000f5c0: #134 := R1 + ~R0
0000f5c6: VF := extend:128[#134 + 1] <> extend:128[R1] + extend:128[#133] + 1
0000f5cc: CF := pad:128[#134 + 1] <> pad:128[R1] + pad:128[#133] + 1
0000f5d0: ZF := #134 + 1 = 0
0000f5d4: NF := 63:63[#134 + 1]
0000f5e0: when ZF goto %0000f5d9
0000f5e1: goto %0000f5dc

0000f5dc:
0000f5dd: R0 := 1
0000f5e3: goto %0000f5df

0000f5d9:
0000f5da: R0 := 0
0000f5e2: goto %0000f5df

0000f5df:
0000f5e9: R0 := pad:64[7:0[R0]]
0000f5f1: mem := mem with [R31 + 0xCD4, el]:u32 <- 31:0[R0]
0000f5f6: R0 := 0x420000
0000f5fc: R0 := R0 + 0x64
0000f603: R0 := pad:64[mem[R0, el]:u32]
0000f609: R0 := pad:64[~31:0[R0]]
0000f60f: R0 := pad:64[31:31[R0]]
0000f615: R0 := pad:64[7:0[R0]]
0000f61b: R1 := pad:64[31:0[R0]]
0000f622: R0 := mem[R31 + 0xE20, el]:u64
0000f62a: mem := mem with [R0, el]:u16 <- 15:0[R1]
0000f62f: R0 := 0x420000
0000f635: R0 := R0 + 0x48
0000f63c: R0 := pad:64[mem[R0, el]:u32]
0000f642: #135 := 31:0[R0] + 1
0000f647: VF := extend:64[#135] <> extend:64[31:0[R0]] + 1
0000f64c: CF := pad:64[#135] <> pad:64[31:0[R0]] + 1
0000f650: ZF := #135 = 0
0000f654: NF := 31:31[#135]
0000f661: when NF <> VF goto %0000f65a
0000f662: goto %0000f65d

0000f65d:
0000f65e: R0 := 1
0000f664: goto %0000f660

0000f65a:
0000f65b: R0 := 0
0000f663: goto %0000f660

0000f660:
0000f66a: R0 := pad:64[7:0[R0]]
0000f670: R1 := pad:64[31:0[R0]]
0000f677: R0 := mem[R31 + 0xEC8, el]:u64
0000f67e: R0 := pad:64[mem[R0, el]:u32]
0000f684: R0 := pad:64[extend:32[7:0[R0]]]
0000f68a: R2 := pad:64[31:0[R0]]
0000f691: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0000f697: R0 := pad:64[extend:32[7:0[R0]]]
0000f69e: R0 := pad:64[31:0[R2] << pad:10[4:0[R0]]]
0000f6a5: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0000f6ac: R0 := mem[R31 + 0xDF8, el]:u64
0000f6b4: mem := mem with [R0, el]:u32 <- 31:0[R1]
0000f6bb: R0 := pad:64[extend:32[mem[R31 + 0xDDE, el]:u16]]
0000f6c2: R1 := mem[R31 + 0xDC8, el]:u64
0000f6c9: mem := mem with [R1, el]:u64 <- 0
0000f6d0: R1 := mem[R31 + 0xEC8, el]:u64
0000f6d7: R1 := pad:64[mem[R1, el]:u32]
0000f6df: mem := mem with [R31 + 0xCF4, el]:u32 <- 31:0[R1]
0000f6e6: R1 := pad:64[mem[R31 + 0xCF4, el]:u32]
0000f6ec: R1 := pad:64[extend:32[7:0[R1]]]
0000f6f2: R2 := pad:64[31:0[R1]]
0000f6f7: R1 := 0xFFFFFF8A
0000f6fe: R1 := pad:64[31:0[R2] << pad:10[4:0[R1]]]
0000f704: R2 := extend:64[31:0[R1]]
0000f70b: R1 := mem[R31 + 0xDC0, el]:u64
0000f713: mem := mem with [R1, el]:u64 <- R2
0000f71a: R1 := mem[R31 + 0xDC0, el]:u64
0000f721: R1 := mem[R1, el]:u64
0000f727: #136 := R1 - 1
0000f72c: VF := extend:128[#136] <> extend:128[R1] - 1
0000f731: CF := pad:128[#136] <> pad:128[R1] + 0xFFFFFFFFFFFFFFFF
0000f735: ZF := #136 = 0
0000f739: NF := 63:63[#136]
0000f746: when ~(CF & ~ZF) goto %0000f73f
0000f747: goto %0000f742

0000f742:
0000f743: R1 := 1
0000f749: goto %0000f745

0000f73f:
0000f740: R1 := 0
0000f748: goto %0000f745

0000f745:
0000f74f: R1 := pad:64[7:0[R1]]
0000f756: R1 := pad:64[31:0[R0] ^ 31:0[R1]]
0000f75d: R0 := mem[R31 + 0xDF8, el]:u64
0000f764: R0 := pad:64[mem[R0, el]:u32]
0000f76b: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0000f772: R0 := mem[R31 + 0xDF8, el]:u64
0000f77a: mem := mem with [R0, el]:u32 <- 31:0[R1]
0000f781: R0 := mem[R31 + 0xD90, el]:u64
0000f787: R0 := R0 - 1
0000f78f: mem := mem with [R31 + 0xD90, el]:u64 <- R0
0000f793: goto %0000ec6d

0000ec6d:
0000ec70: R0 := 0x420000
0000ec76: R0 := R0 + 0x64
0000ec7d: R0 := pad:64[mem[R0, el]:u32]
0000ec83: R1 := pad:64[31:0[R0] + 1]
0000ec88: R0 := 0x420000
0000ec8e: R0 := R0 + 0x64
0000ec96: mem := mem with [R0, el]:u32 <- 31:0[R1]
0001980d: goto %0000e7da

0000e943:
0000e94d: R0 := extend:64[mem[R31 + 0xEDC, el]:u32]
0000e953: R0 := 61:0[R0].0
0000e959: R1 := R31 + 0xCB8
0000e95e: R2 := 2
0000e967: mem := mem with [R1 + R0, el]:u32 <- 31:0[R2]
0000e96e: R0 := pad:64[mem[R31 + 0xEDC, el]:u32]
0000e974: R0 := pad:64[31:0[R0] + 1]
0000e97c: mem := mem with [R31 + 0xEDC, el]:u32 <- 31:0[R0]
0001980e: goto %0000e91d

0000e723:
0000e72d: mem := mem with [R31 + 0xEE0, el]:u32 <- 0
0000e732: goto %0000e730

0000e730:
0000e738: R0 := pad:64[mem[R31 + 0xEE0, el]:u32]
0000e73e: #120 := 31:0[R0] - 2
0000e743: VF := extend:64[#120] <> extend:64[31:0[R0]] - 2
0000e748: CF := pad:64[#120] <> pad:64[31:0[R0]] + 0xFFFFFFFE
0000e74c: ZF := #120 = 0
0000e750: NF := 31:31[#120]
0000e758: when ~(NF = VF & ~ZF) goto %0000e756
0001980f: goto %0000e7b2

0000e7b2:
0000e7b7: R0 := pad:64[mem[R31 + 0xEE4, el]:u32]
0000e7bd: R0 := pad:64[31:0[R0] + 1]
0000e7c5: mem := mem with [R31 + 0xEE4, el]:u32 <- 31:0[R0]
00019810: goto %0000e705

0000e756:
0000e760: R2 := extend:64[mem[R31 + 0xEE0, el]:u32]
0000e767: R1 := extend:64[mem[R31 + 0xEE4, el]:u32]
0000e76d: R0 := R1
0000e773: R0 := 62:0[R0].0
0000e77a: R0 := R0 + R1
0000e781: R0 := R0 + R2
0000e787: R0 := 61:0[R0].0
0000e78d: R1 := R31 + 0xCC8
0000e792: R2 := 1
0000e79b: mem := mem with [R1 + R0, el]:u32 <- 31:0[R2]
0000e7a2: R0 := pad:64[mem[R31 + 0xEE0, el]:u32]
0000e7a8: R0 := pad:64[31:0[R0] + 1]
0000e7b0: mem := mem with [R31 + 0xEE0, el]:u32 <- 31:0[R0]
00019811: goto %0000e730

0000e594:
0000e59c: R0 := 0x421000
0000e5a2: R0 := R0 + 0x768
0000e5a9: R0 := mem[R0, el]:u64
0000e5ae: R1 := 0x420000
0000e5b4: R1 := R1 + 0x48
0000e5bc: mem := mem with [R0, el]:u64 <- R1
0000e5c3: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0000e5c9: R0 := pad:64[31:0[R0] + 1]
0000e5d1: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
00019812: goto %0000e56e

0000e47a:
0000e484: R0 := extend:64[mem[R31 + 0xEE8, el]:u32]
0000e48a: R0 := 60:0[R0].0
0000e490: R1 := R31 + 0xD00
0000e495: R2 := 0x420000
0000e49b: R2 := R2 + 0x98
0000e4a4: mem := mem with [R1 + R0, el]:u64 <- R2
0000e4ab: R0 := pad:64[mem[R31 + 0xEE8, el]:u32]
0000e4b1: R0 := pad:64[31:0[R0] + 1]
0000e4b9: mem := mem with [R31 + 0xEE8, el]:u32 <- 31:0[R0]
00019813: goto %0000e454

0000e40b:
0000e415: R0 := extend:64[mem[R31 + 0xEE8, el]:u32]
0000e41b: R0 := 60:0[R0].0
0000e421: R1 := R31 + 0xD18
0000e426: R2 := 0x421000
0000e42c: R2 := R2 + 0x788
0000e435: mem := mem with [R1 + R0, el]:u64 <- R2
0000e43c: R0 := pad:64[mem[R31 + 0xEE8, el]:u32]
0000e442: R0 := pad:64[31:0[R0] + 1]
0000e44a: mem := mem with [R31 + 0xEE8, el]:u32 <- 31:0[R0]
00019814: goto %0000e3e5

0000e2f1:
0000e2fb: R0 := extend:64[mem[R31 + 0xEEC, el]:u32]
0000e301: R0 := 60:0[R0].0
0000e307: R1 := R31 + 0xD50
0000e30d: R2 := R31 + 0xD84
0000e316: mem := mem with [R1 + R0, el]:u64 <- R2
0000e31d: R0 := pad:64[mem[R31 + 0xEEC, el]:u32]
0000e323: R0 := pad:64[31:0[R0] + 1]
0000e32b: mem := mem with [R31 + 0xEEC, el]:u32 <- 31:0[R0]
00019815: goto %0000e2cb

00019816: sub main(main_argc, main_argv, main_result)
000199bc: main_argc :: in u32 = low:32[R0]
000199bd: main_argv :: in out u64 = R1
000199be: main_result :: out u32 = low:32[R0]

000083fe:
00008405: #1 := R31 - 0x30
0000840b: mem := mem with [#1, el]:u64 <- R29
00008411: mem := mem with [#1 + 8, el]:u64 <- R30
00008415: R31 := #1
0000841b: R29 := R31
00008423: mem := mem with [R31 + 0x1C, el]:u32 <- 31:0[R0]
0000842b: mem := mem with [R31 + 0x10, el]:u64 <- R1
00008432: mem := mem with [R31 + 0x20, el]:u32 <- 0
00008439: R0 := pad:64[mem[R31 + 0x1C, el]:u32]
0000843f: #2 := 31:0[R0] - 2
00008444: VF := extend:64[#2] <> extend:64[31:0[R0]] - 2
00008449: CF := pad:64[#2] <> pad:64[31:0[R0]] + 0xFFFFFFFE
0000844d: ZF := #2 = 0
00008451: NF := 31:31[#2]
00008457: when ZF <> 1 goto %00008455
00019817: goto %00017343

00017343:
00017348: R0 := mem[R31 + 0x10, el]:u64
0001734e: R0 := R0 + 8
00017355: R2 := mem[R0, el]:u64
0001735a: R0 := 0x409000
00017360: R1 := R0 + 0x290
00017366: R0 := R2
0001736b: R30 := 0x407240
0001736e: call @strcmp with return %00017370

00017370:
00017373: VF := 0
00017376: CF := 1
0001737a: ZF := 31:0[R0] = 0
0001737e: NF := 31:31[R0]
00017383: when ZF <> 1 goto %00008455
00019818: goto %00017387

00017387:
0001738a: R0 := 1
00017392: mem := mem with [R31 + 0x20, el]:u32 <- 31:0[R0]
00019819: goto %00008455

00008455:
0000845d: R30 := 0x407254
00008460: call @platform_main_begin with return %00014b0d

00014b0d:
00014b10: R30 := 0x407258
00014b12: call @crc32_gentab with return %00014b14

00014b14:
00014b17: R30 := 0x40725C
00014b19: call @func_1 with return %00014b1b

00014b1b:
00014b1e: R0 := 0x420000
00014b24: R0 := R0 + 0x44
00014b2b: R0 := pad:64[extend:32[mem[R0]]]
00014b31: R3 := extend:64[7:0[R0]]
00014b38: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00014b3d: R0 := 0x409000
00014b43: R1 := R0 + 0x298
00014b49: R0 := R3
00014b4e: R30 := 0x407280
00014b50: call @transparent_crc with return %00014b52

00014b52:
00014b55: R0 := 0x420000
00014b5b: R0 := R0 + 0x48
00014b62: R0 := pad:64[mem[R0, el]:u32]
00014b68: R3 := extend:64[31:0[R0]]
00014b6f: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00014b74: R0 := 0x409000
00014b7a: R1 := R0 + 0x2A0
00014b80: R0 := R3
00014b85: R30 := 0x4072A4
00014b87: call @transparent_crc with return %00014b89

00014b89:
00014b8e: mem := mem with [R31 + 0x2C, el]:u32 <- 0
00014b93: goto %00014b91

00014b91:
00014b99: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00014b9f: #324 := 31:0[R0] - 3
00014ba4: VF := extend:64[#324] <> extend:64[31:0[R0]] - 3
00014ba9: CF := pad:64[#324] <> pad:64[31:0[R0]] + 0xFFFFFFFD
00014bad: ZF := #324 = 0
00014bb1: NF := 31:31[#324]
00014bb9: when ~(NF = VF & ~ZF) goto %00014bb7
0001981a: goto %00014c47

00014c47:
00014c4a: R0 := 0x420000
00014c50: R0 := R0 + 0x58
00014c57: R0 := pad:64[mem[R0, el]:u32]
00014c5d: R3 := extend:64[31:0[R0]]
00014c64: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00014c69: R0 := 0x409000
00014c6f: R1 := R0 + 0x2C0
00014c75: R0 := R3
00014c7a: R30 := 0x40732C
00014c7c: call @transparent_crc with return %00014c7e

00014c7e:
00014c81: R0 := 0x423000
00014c87: R0 := R0 + 0x908
00014c8e: R0 := pad:64[extend:32[mem[R0]]]
00014c94: R3 := extend:64[7:0[R0]]
00014c9b: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00014ca0: R0 := 0x409000
00014ca6: R1 := R0 + 0x2C8
00014cac: R0 := R3
00014cb1: R30 := 0x407350
00014cb3: call @transparent_crc with return %00014cb5

00014cb5:
00014cb8: R0 := 0x420000
00014cbe: R0 := R0 + 0x5C
00014cc5: R0 := pad:64[extend:32[mem[R0, el]:u16]]
00014ccb: R3 := extend:64[15:0[R0]]
00014cd2: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00014cd7: R0 := 0x409000
00014cdd: R1 := R0 + 0x2D0
00014ce3: R0 := R3
00014ce8: R30 := 0x407374
00014cea: call @transparent_crc with return %00014cec

00014cec:
00014cef: R0 := 0x420000
00014cf5: R0 := R0 + 0x60
00014cfc: R0 := pad:64[mem[R0, el]:u32]
00014d02: R3 := extend:64[31:0[R0]]
00014d09: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00014d0e: R0 := 0x409000
00014d14: R1 := R0 + 0x2D8
00014d1a: R0 := R3
00014d1f: R30 := 0x407398
00014d21: call @transparent_crc with return %00014d23

00014d23:
00014d26: R0 := 0x420000
00014d2c: R0 := R0 + 0x64
00014d33: R0 := pad:64[mem[R0, el]:u32]
00014d39: R3 := extend:64[31:0[R0]]
00014d40: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00014d45: R0 := 0x409000
00014d4b: R1 := R0 + 0x2E0
00014d51: R0 := R3
00014d56: R30 := 0x4073BC
00014d58: call @transparent_crc with return %00014d5a

00014d5a:
00014d5d: R0 := 0x420000
00014d63: R0 := R0 + 0x68
00014d6a: R0 := mem[R0, el]:u64
00014d70: R3 := R0
00014d77: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00014d7c: R0 := 0x409000
00014d82: R1 := R0 + 0x2E8
00014d88: R0 := R3
00014d8d: R30 := 0x4073E0
00014d8f: call @transparent_crc with return %00014d91

00014d91:
00014d94: R0 := 0x420000
00014d9a: R0 := R0 + 0x70
00014da1: R0 := pad:64[mem[R0]]
00014da7: R3 := pad:64[7:0[R0]]
00014dae: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00014db3: R0 := 0x409000
00014db9: R1 := R0 + 0x2F0
00014dbf: R0 := R3
00014dc4: R30 := 0x407404
00014dc6: call @transparent_crc with return %00014dc8

00014dc8:
00014dcd: mem := mem with [R31 + 0x2C, el]:u32 <- 0
00014dd2: goto %00014dd0

00014dd0:
00014dd8: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00014dde: #325 := 31:0[R0] - 2
00014de3: VF := extend:64[#325] <> extend:64[31:0[R0]] - 2
00014de8: CF := pad:64[#325] <> pad:64[31:0[R0]] + 0xFFFFFFFE
00014dec: ZF := #325 = 0
00014df0: NF := 31:31[#325]
00014df8: when ~(NF = VF & ~ZF) goto %00014df6
0001981b: goto %00014e86

00014e86:
00014e89: R0 := 0x420000
00014e8f: R0 := R0 + 0x84
00014e96: R0 := pad:64[mem[R0, el]:u16]
00014e9c: R3 := pad:64[15:0[R0]]
00014ea3: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00014ea8: R0 := 0x409000
00014eae: R1 := R0 + 0x308
00014eb4: R0 := R3
00014eb9: R30 := 0x40748C
00014ebb: call @transparent_crc with return %00014ebd

00014ebd:
00014ec0: R0 := 0x420000
00014ec6: R0 := R0 + 0x88
00014ecd: R0 := pad:64[mem[R0, el]:u32]
00014ed3: R3 := pad:64[31:0[R0]]
00014eda: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00014edf: R0 := 0x409000
00014ee5: R1 := R0 + 0x310
00014eeb: R0 := R3
00014ef0: R30 := 0x4074B0
00014ef2: call @transparent_crc with return %00014ef4

00014ef4:
00014ef7: R0 := 0x420000
00014efd: R0 := R0 + 0x8C
00014f04: R0 := pad:64[extend:32[mem[R0, el]:u16]]
00014f0a: R3 := extend:64[15:0[R0]]
00014f11: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00014f16: R0 := 0x409000
00014f1c: R1 := R0 + 0x318
00014f22: R0 := R3
00014f27: R30 := 0x4074D4
00014f29: call @transparent_crc with return %00014f2b

00014f2b:
00014f2e: R0 := 0x420000
00014f34: R0 := R0 + 0x90
00014f3b: R3 := mem[R0, el]:u64
00014f42: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00014f47: R0 := 0x409000
00014f4d: R1 := R0 + 0x320
00014f53: R0 := R3
00014f58: R30 := 0x4074F4
00014f5a: call @transparent_crc with return %00014f5c

00014f5c:
00014f5f: R0 := 0x420000
00014f65: R0 := R0 + 0x98
00014f6c: R3 := mem[R0, el]:u64
00014f73: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00014f78: R0 := 0x409000
00014f7e: R1 := R0 + 0x328
00014f84: R0 := R3
00014f89: R30 := 0x407514
00014f8b: call @transparent_crc with return %00014f8d

00014f8d:
00014f90: R0 := 0x420000
00014f96: R0 := R0 + 0xA0
00014f9d: R0 := pad:64[mem[R0, el]:u32]
00014fa3: R3 := extend:64[31:0[R0]]
00014faa: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00014faf: R0 := 0x409000
00014fb5: R1 := R0 + 0x330
00014fbb: R0 := R3
00014fc0: R30 := 0x407538
00014fc2: call @transparent_crc with return %00014fc4

00014fc4:
00014fc7: R0 := 0x420000
00014fcd: R0 := R0 + 0xA8
00014fd4: R0 := mem[R0, el]:u64
00014fda: R3 := R0
00014fe1: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00014fe6: R0 := 0x409000
00014fec: R1 := R0 + 0x338
00014ff2: R0 := R3
00014ff7: R30 := 0x40755C
00014ff9: call @transparent_crc with return %00014ffb

00014ffb:
00014ffe: R0 := 0x420000
00015004: R0 := R0 + 0xB0
0001500b: R0 := pad:64[mem[R0, el]:u16]
00015011: R3 := pad:64[15:0[R0]]
00015018: R2 := pad:64[mem[R31 + 0x20, el]:u32]
0001501d: R0 := 0x409000
00015023: R1 := R0 + 0x340
00015029: R0 := R3
0001502e: R30 := 0x407580
00015030: call @transparent_crc with return %00015032

00015032:
00015035: R0 := 0x420000
0001503b: R0 := R0 + 0xB8
00015042: R0 := mem[R0, el]:u64
00015048: R3 := R0
0001504f: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00015054: R0 := 0x409000
0001505a: R1 := R0 + 0x348
00015060: R0 := R3
00015065: R30 := 0x4075A4
00015067: call @transparent_crc with return %00015069

00015069:
0001506c: R0 := 0x420000
00015072: R0 := R0 + 0xB8
00015079: R0 := pad:64[extend:32[mem[R0 + 8]]]
0001507f: R3 := extend:64[7:0[R0]]
00015086: R2 := pad:64[mem[R31 + 0x20, el]:u32]
0001508b: R0 := 0x409000
00015091: R1 := R0 + 0x358
00015097: R0 := R3
0001509c: R30 := 0x4075C8
0001509e: call @transparent_crc with return %000150a0

000150a0:
000150a3: R0 := 0x420000
000150a9: R0 := R0 + 0xB8
000150b0: R0 := mem[R0 + 8, el]:u64
000150b6: R0 := extend:64[25:8[R0]]
000150bc: R3 := extend:64[31:0[R0]]
000150c3: R2 := pad:64[mem[R31 + 0x20, el]:u32]
000150c8: R0 := 0x409000
000150ce: R1 := R0 + 0x368
000150d4: R0 := R3
000150d9: R30 := 0x4075F0
000150db: call @transparent_crc with return %000150dd

000150dd:
000150e0: R0 := 0x420000
000150e6: R0 := R0 + 0xB8
000150ed: R0 := pad:64[mem[R0 + 0xC, el]:u32]
000150f3: R3 := pad:64[31:0[R0]]
000150fa: R2 := pad:64[mem[R31 + 0x20, el]:u32]
000150ff: R0 := 0x409000
00015105: R1 := R0 + 0x378
0001510b: R0 := R3
00015110: R30 := 0x407614
00015112: call @transparent_crc with return %00015114

00015114:
00015117: R0 := 0x420000
0001511d: R0 := R0 + 0xC8
00015124: R0 := pad:64[mem[R0, el]:u32]
0001512a: R3 := pad:64[31:0[R0]]
00015131: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00015136: R0 := 0x409000
0001513c: R1 := R0 + 0x388
00015142: R0 := R3
00015147: R30 := 0x407638
00015149: call @transparent_crc with return %0001514b

0001514b:
0001514e: R0 := 0x420000
00015154: R0 := R0 + 0xCC
0001515b: R0 := pad:64[extend:32[mem[R0, el]:u16]]
00015161: R3 := extend:64[15:0[R0]]
00015168: R2 := pad:64[mem[R31 + 0x20, el]:u32]
0001516d: R0 := 0x409000
00015173: R1 := R0 + 0x390
00015179: R0 := R3
0001517e: R30 := 0x40765C
00015180: call @transparent_crc with return %00015182

00015182:
00015185: R0 := 0x423000
0001518b: R0 := R0 + 0x90A
00015192: R0 := pad:64[extend:32[mem[R0, el]:u16]]
00015198: R3 := extend:64[15:0[R0]]
0001519f: R2 := pad:64[mem[R31 + 0x20, el]:u32]
000151a4: R0 := 0x409000
000151aa: R1 := R0 + 0x398
000151b0: R0 := R3
000151b5: R30 := 0x407680
000151b7: call @transparent_crc with return %000151b9

000151b9:
000151be: mem := mem with [R31 + 0x2C, el]:u32 <- 0
000151c3: goto %000151c1

000151c1:
000151c9: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
000151cf: #326 := 31:0[R0] - 5
000151d4: VF := extend:64[#326] <> extend:64[31:0[R0]] - 5
000151d9: CF := pad:64[#326] <> pad:64[31:0[R0]] + 0xFFFFFFFB
000151dd: ZF := #326 = 0
000151e1: NF := 31:31[#326]
000151e9: when ~(NF = VF & ~ZF) goto %000151e7
0001981c: goto %000152da

000152da:
000152dd: R0 := 0x420000
000152e3: R0 := R0 + 0x100
000152ea: R0 := mem[R0, el]:u64
000152f0: R3 := R0
000152f7: R2 := pad:64[mem[R31 + 0x20, el]:u32]
000152fc: R0 := 0x409000
00015302: R1 := R0 + 0x3C8
00015308: R0 := R3
0001530d: R30 := 0x407738
0001530f: call @transparent_crc with return %00015311

00015311:
00015316: mem := mem with [R31 + 0x2C, el]:u32 <- 0
0001531b: goto %00015319

00015319:
00015321: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00015327: #328 := 31:0[R0] - 9
0001532c: VF := extend:64[#328] <> extend:64[31:0[R0]] - 9
00015331: CF := pad:64[#328] <> pad:64[31:0[R0]] + 0xFFFFFFF7
00015335: ZF := #328 = 0
00015339: NF := 31:31[#328]
00015341: when ~(NF = VF & ~ZF) goto %0001533f
0001981d: goto %000153cf

000153cf:
000153d2: R3 := 0xFFFFFFFFFFFFFFF6
000153d9: R2 := pad:64[mem[R31 + 0x20, el]:u32]
000153de: R0 := 0x409000
000153e4: R1 := R0 + 0x3E0
000153ea: R0 := R3
000153ef: R30 := 0x4077B4
000153f1: call @transparent_crc with return %000153f3

000153f3:
000153f6: R0 := 0x420000
000153fc: R0 := R0 + 0x108
00015403: R0 := pad:64[mem[R0, el]:u32]
00015409: R3 := pad:64[31:0[R0]]
00015410: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00015415: R0 := 0x409000
0001541b: R1 := R0 + 0x3E8
00015421: R0 := R3
00015426: R30 := 0x4077D8
00015428: call @transparent_crc with return %0001542a

0001542a:
0001542d: R0 := 0x420000
00015433: R0 := R0 + 0x110
0001543a: R0 := mem[R0, el]:u64
00015440: R3 := R0
00015447: R2 := pad:64[mem[R31 + 0x20, el]:u32]
0001544c: R0 := 0x409000
00015452: R1 := R0 + 0x3F0
00015458: R0 := R3
0001545d: R30 := 0x4077FC
0001545f: call @transparent_crc with return %00015461

00015461:
00015464: R0 := 0x420000
0001546a: R0 := R0 + 0x110
00015471: R0 := pad:64[extend:32[mem[R0 + 8]]]
00015477: R3 := extend:64[7:0[R0]]
0001547e: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00015483: R0 := 0x409000
00015489: R1 := R0 + 0x400
0001548f: R0 := R3
00015494: R30 := 0x407820
00015496: call @transparent_crc with return %00015498

00015498:
0001549b: R0 := 0x420000
000154a1: R0 := R0 + 0x110
000154a8: R0 := mem[R0 + 8, el]:u64
000154ae: R0 := extend:64[25:8[R0]]
000154b4: R3 := extend:64[31:0[R0]]
000154bb: R2 := pad:64[mem[R31 + 0x20, el]:u32]
000154c0: R0 := 0x409000
000154c6: R1 := R0 + 0x410
000154cc: R0 := R3
000154d1: R30 := 0x407848
000154d3: call @transparent_crc with return %000154d5

000154d5:
000154d8: R0 := 0x420000
000154de: R0 := R0 + 0x110
000154e5: R0 := pad:64[mem[R0 + 0xC, el]:u32]
000154eb: R3 := pad:64[31:0[R0]]
000154f2: R2 := pad:64[mem[R31 + 0x20, el]:u32]
000154f7: R0 := 0x409000
000154fd: R1 := R0 + 0x420
00015503: R0 := R3
00015508: R30 := 0x40786C
0001550a: call @transparent_crc with return %0001550c

0001550c:
00015511: mem := mem with [R31 + 0x2C, el]:u32 <- 0
00015516: goto %00015514

00015514:
0001551c: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00015522: #329 := 31:0[R0] - 7
00015527: VF := extend:64[#329] <> extend:64[31:0[R0]] - 7
0001552c: CF := pad:64[#329] <> pad:64[31:0[R0]] + 0xFFFFFFF9
00015530: ZF := #329 = 0
00015534: NF := 31:31[#329]
0001553c: when ~(NF = VF & ~ZF) goto %0001553a
0001981e: goto %00015640

00015640:
00015643: R0 := 0x420000
00015649: R0 := R0 + 0x1E0
00015650: R0 := pad:64[mem[R0, el]:u32]
00015656: R3 := pad:64[31:0[R0]]
0001565d: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00015662: R0 := 0x409000
00015668: R1 := R0 + 0x440
0001566e: R0 := R3
00015673: R30 := 0x407930
00015675: call @transparent_crc with return %00015677

00015677:
0001567a: R0 := 0x423000
00015680: R0 := R0 + 0x920
00015687: R0 := mem[R0, el]:u64
0001568d: R3 := R0
00015694: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00015699: R0 := 0x409000
0001569f: R1 := R0 + 0x448
000156a5: R0 := R3
000156aa: R30 := 0x407954
000156ac: call @transparent_crc with return %000156ae

000156ae:
000156b3: mem := mem with [R31 + 0x2C, el]:u32 <- 0
000156b8: goto %000156b6

000156b6:
000156be: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
000156c4: #331 := 31:0[R0] - 7
000156c9: VF := extend:64[#331] <> extend:64[31:0[R0]] - 7
000156ce: CF := pad:64[#331] <> pad:64[31:0[R0]] + 0xFFFFFFF9
000156d2: ZF := #331 = 0
000156d6: NF := 31:31[#331]
000156de: when ~(NF = VF & ~ZF) goto %000156dc
0001981f: goto %0001576c

0001576c:
0001576f: R0 := 0x420000
00015775: R0 := R0 + 0x1F0
0001577c: R0 := pad:64[mem[R0, el]:u32]
00015782: R3 := pad:64[31:0[R0]]
00015789: R2 := pad:64[mem[R31 + 0x20, el]:u32]
0001578e: R0 := 0x409000
00015794: R1 := R0 + 0x460
0001579a: R0 := R3
0001579f: R30 := 0x4079DC
000157a1: call @transparent_crc with return %000157a3

000157a3:
000157a6: R0 := 0x420000
000157ac: R0 := R0 + 0x1F8
000157b3: R0 := mem[R0, el]:u64
000157b9: R3 := R0
000157c0: R2 := pad:64[mem[R31 + 0x20, el]:u32]
000157c5: R0 := 0x409000
000157cb: R1 := R0 + 0x468
000157d1: R0 := R3
000157d6: R30 := 0x407A00
000157d8: call @transparent_crc with return %000157da

000157da:
000157dd: R0 := 0x420000
000157e3: R0 := R0 + 0x1F8
000157ea: R0 := pad:64[extend:32[mem[R0 + 8]]]
000157f0: R3 := extend:64[7:0[R0]]
000157f7: R2 := pad:64[mem[R31 + 0x20, el]:u32]
000157fc: R0 := 0x409000
00015802: R1 := R0 + 0x478
00015808: R0 := R3
0001580d: R30 := 0x407A24
0001580f: call @transparent_crc with return %00015811

00015811:
00015814: R0 := 0x420000
0001581a: R0 := R0 + 0x1F8
00015821: R0 := mem[R0 + 8, el]:u64
00015827: R0 := extend:64[25:8[R0]]
0001582d: R3 := extend:64[31:0[R0]]
00015834: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00015839: R0 := 0x409000
0001583f: R1 := R0 + 0x488
00015845: R0 := R3
0001584a: R30 := 0x407A4C
0001584c: call @transparent_crc with return %0001584e

0001584e:
00015851: R0 := 0x420000
00015857: R0 := R0 + 0x1F8
0001585e: R0 := pad:64[mem[R0 + 0xC, el]:u32]
00015864: R3 := pad:64[31:0[R0]]
0001586b: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00015870: R0 := 0x409000
00015876: R1 := R0 + 0x498
0001587c: R0 := R3
00015881: R30 := 0x407A70
00015883: call @transparent_crc with return %00015885

00015885:
0001588a: mem := mem with [R31 + 0x2C, el]:u32 <- 0
0001588f: goto %0001588d

0001588d:
00015895: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001589b: #332 := 31:0[R0] - 2
000158a0: VF := extend:64[#332] <> extend:64[31:0[R0]] - 2
000158a5: CF := pad:64[#332] <> pad:64[31:0[R0]] + 0xFFFFFFFE
000158a9: ZF := #332 = 0
000158ad: NF := 31:31[#332]
000158b5: when ~(NF = VF & ~ZF) goto %000158b3
00019820: goto %00015943

00015943:
00015946: R0 := 0x420000
0001594c: R0 := R0 + 0x208
00015953: R3 := mem[R0, el]:u64
0001595a: R2 := pad:64[mem[R31 + 0x20, el]:u32]
0001595f: R0 := 0x409000
00015965: R1 := R0 + 0x4B8
0001596b: R0 := R3
00015970: R30 := 0x407AF4
00015972: call @transparent_crc with return %00015974

00015974:
00015977: R0 := 0x420000
0001597d: R0 := R0 + 0x210
00015984: R0 := mem[R0, el]:u64
0001598a: R3 := R0
00015991: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00015996: R0 := 0x409000
0001599c: R1 := R0 + 0x4C0
000159a2: R0 := R3
000159a7: R30 := 0x407B18
000159a9: call @transparent_crc with return %000159ab

000159ab:
000159ae: R0 := 0x420000
000159b4: R0 := R0 + 0x210
000159bb: R0 := pad:64[extend:32[mem[R0 + 8]]]
000159c1: R3 := extend:64[7:0[R0]]
000159c8: R2 := pad:64[mem[R31 + 0x20, el]:u32]
000159cd: R0 := 0x409000
000159d3: R1 := R0 + 0x4D0
000159d9: R0 := R3
000159de: R30 := 0x407B3C
000159e0: call @transparent_crc with return %000159e2

000159e2:
000159e5: R0 := 0x420000
000159eb: R0 := R0 + 0x210
000159f2: R0 := mem[R0 + 8, el]:u64
000159f8: R0 := extend:64[25:8[R0]]
000159fe: R3 := extend:64[31:0[R0]]
00015a05: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00015a0a: R0 := 0x409000
00015a10: R1 := R0 + 0x4E0
00015a16: R0 := R3
00015a1b: R30 := 0x407B64
00015a1d: call @transparent_crc with return %00015a1f

00015a1f:
00015a22: R0 := 0x420000
00015a28: R0 := R0 + 0x210
00015a2f: R0 := pad:64[mem[R0 + 0xC, el]:u32]
00015a35: R3 := pad:64[31:0[R0]]
00015a3c: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00015a41: R0 := 0x409000
00015a47: R1 := R0 + 0x4F0
00015a4d: R0 := R3
00015a52: R30 := 0x407B88
00015a54: call @transparent_crc with return %00015a56

00015a56:
00015a59: R0 := 0x420000
00015a5f: R0 := R0 + 0x220
00015a66: R0 := mem[R0, el]:u64
00015a6c: R3 := R0
00015a73: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00015a78: R0 := 0x409000
00015a7e: R1 := R0 + 0x500
00015a84: R0 := R3
00015a89: R30 := 0x407BAC
00015a8b: call @transparent_crc with return %00015a8d

00015a8d:
00015a90: R0 := 0x420000
00015a96: R0 := R0 + 0x220
00015a9d: R0 := pad:64[mem[R0 + 8]]
00015aa3: R0 := pad:64[extend:32[7:0[R0]]]
00015aa9: R3 := extend:64[7:0[R0]]
00015ab0: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00015ab5: R0 := 0x409000
00015abb: R1 := R0 + 0x510
00015ac1: R0 := R3
00015ac6: R30 := 0x407BD4
00015ac8: call @transparent_crc with return %00015aca

00015aca:
00015acd: R0 := 0x420000
00015ad3: R0 := R0 + 0x220
00015ada: R0 := pad:64[mem[R0 + 8, el]:u32]
00015ae0: R0 := extend:64[25:8[R0]]
00015ae6: R3 := extend:64[31:0[R0]]
00015aed: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00015af2: R0 := 0x409000
00015af8: R1 := R0 + 0x520
00015afe: R0 := R3
00015b03: R30 := 0x407BFC
00015b05: call @transparent_crc with return %00015b07

00015b07:
00015b0a: R0 := 0x420000
00015b10: R0 := R0 + 0x220
00015b17: R0 := pad:64[mem[R0 + 0xC, el]:u32]
00015b1d: R3 := pad:64[31:0[R0]]
00015b24: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00015b29: R0 := 0x409000
00015b2f: R1 := R0 + 0x530
00015b35: R0 := R3
00015b3a: R30 := 0x407C20
00015b3c: call @transparent_crc with return %00015b3e

00015b3e:
00015b41: R0 := 0x420000
00015b47: R0 := R0 + 0x230
00015b4e: R0 := pad:64[extend:32[mem[R0]]]
00015b54: R3 := extend:64[7:0[R0]]
00015b5b: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00015b60: R0 := 0x409000
00015b66: R1 := R0 + 0x540
00015b6c: R0 := R3
00015b71: R30 := 0x407C44
00015b73: call @transparent_crc with return %00015b75

00015b75:
00015b7a: mem := mem with [R31 + 0x2C, el]:u32 <- 0
00015b7f: goto %00015b7d

00015b7d:
00015b85: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00015b8b: #333 := 31:0[R0] - 3
00015b90: VF := extend:64[#333] <> extend:64[31:0[R0]] - 3
00015b95: CF := pad:64[#333] <> pad:64[31:0[R0]] + 0xFFFFFFFD
00015b99: ZF := #333 = 0
00015b9d: NF := 31:31[#333]
00015ba5: when ~(NF = VF & ~ZF) goto %00015ba3
00019821: goto %00015c33

00015c33:
00015c38: mem := mem with [R31 + 0x2C, el]:u32 <- 0
00015c3d: goto %00015c3b

00015c3b:
00015c43: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00015c49: #334 := 31:0[R0] - 2
00015c4e: VF := extend:64[#334] <> extend:64[31:0[R0]] - 2
00015c53: CF := pad:64[#334] <> pad:64[31:0[R0]] + 0xFFFFFFFE
00015c57: ZF := #334 = 0
00015c5b: NF := 31:31[#334]
00015c63: when ~(NF = VF & ~ZF) goto %00015c61
00019822: goto %00015cf1

00015cf1:
00015cf4: R0 := 0x420000
00015cfa: R0 := R0 + 0x258
00015d01: R0 := mem[R0, el]:u64
00015d07: R3 := R0
00015d0e: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00015d13: R0 := 0x409000
00015d19: R1 := R0 + 0x568
00015d1f: R0 := R3
00015d24: R30 := 0x407D30
00015d26: call @transparent_crc with return %00015d28

00015d28:
00015d2b: R0 := 0x420000
00015d31: R0 := R0 + 0x258
00015d38: R0 := pad:64[extend:32[mem[R0 + 8]]]
00015d3e: R3 := extend:64[7:0[R0]]
00015d45: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00015d4a: R0 := 0x409000
00015d50: R1 := R0 + 0x578
00015d56: R0 := R3
00015d5b: R30 := 0x407D54
00015d5d: call @transparent_crc with return %00015d5f

00015d5f:
00015d62: R0 := 0x420000
00015d68: R0 := R0 + 0x258
00015d6f: R0 := mem[R0 + 8, el]:u64
00015d75: R0 := extend:64[25:8[R0]]
00015d7b: R3 := extend:64[31:0[R0]]
00015d82: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00015d87: R0 := 0x409000
00015d8d: R1 := R0 + 0x588
00015d93: R0 := R3
00015d98: R30 := 0x407D7C
00015d9a: call @transparent_crc with return %00015d9c

00015d9c:
00015d9f: R0 := 0x420000
00015da5: R0 := R0 + 0x258
00015dac: R0 := pad:64[mem[R0 + 0xC, el]:u32]
00015db2: R3 := pad:64[31:0[R0]]
00015db9: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00015dbe: R0 := 0x409000
00015dc4: R1 := R0 + 0x598
00015dca: R0 := R3
00015dcf: R30 := 0x407DA0
00015dd1: call @transparent_crc with return %00015dd3

00015dd3:
00015dd6: R0 := 0x420000
00015ddc: R0 := R0 + 0x268
00015de3: R0 := mem[R0, el]:u64
00015de9: R3 := R0
00015df0: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00015df5: R0 := 0x409000
00015dfb: R1 := R0 + 0x5A8
00015e01: R0 := R3
00015e06: R30 := 0x407DC4
00015e08: call @transparent_crc with return %00015e0a

00015e0a:
00015e0d: R0 := 0x420000
00015e13: R0 := R0 + 0x268
00015e1a: R0 := pad:64[extend:32[mem[R0 + 8]]]
00015e20: R3 := extend:64[7:0[R0]]
00015e27: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00015e2c: R0 := 0x409000
00015e32: R1 := R0 + 0x5B8
00015e38: R0 := R3
00015e3d: R30 := 0x407DE8
00015e3f: call @transparent_crc with return %00015e41

00015e41:
00015e44: R0 := 0x420000
00015e4a: R0 := R0 + 0x268
00015e51: R0 := mem[R0 + 8, el]:u64
00015e57: R0 := extend:64[25:8[R0]]
00015e5d: R3 := extend:64[31:0[R0]]
00015e64: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00015e69: R0 := 0x409000
00015e6f: R1 := R0 + 0x5C8
00015e75: R0 := R3
00015e7a: R30 := 0x407E10
00015e7c: call @transparent_crc with return %00015e7e

00015e7e:
00015e81: R0 := 0x420000
00015e87: R0 := R0 + 0x268
00015e8e: R0 := pad:64[mem[R0 + 0xC, el]:u32]
00015e94: R3 := pad:64[31:0[R0]]
00015e9b: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00015ea0: R0 := 0x409000
00015ea6: R1 := R0 + 0x5D8
00015eac: R0 := R3
00015eb1: R30 := 0x407E34
00015eb3: call @transparent_crc with return %00015eb5

00015eb5:
00015eb8: R0 := 0x420000
00015ebe: R0 := R0 + 0x278
00015ec5: R0 := pad:64[mem[R0, el]:u16]
00015ecb: R0 := pad:64[extend:32[15:0[R0]]]
00015ed1: R3 := extend:64[15:0[R0]]
00015ed8: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00015edd: R0 := 0x409000
00015ee3: R1 := R0 + 0x5E8
00015ee9: R0 := R3
00015eee: R30 := 0x407E5C
00015ef0: call @transparent_crc with return %00015ef2

00015ef2:
00015ef5: R0 := 0x420000
00015efb: R0 := R0 + 0x280
00015f02: R0 := mem[R0, el]:u64
00015f08: R3 := R0
00015f0f: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00015f14: R0 := 0x409000
00015f1a: R1 := R0 + 0x5F0
00015f20: R0 := R3
00015f25: R30 := 0x407E80
00015f27: call @transparent_crc with return %00015f29

00015f29:
00015f2c: R0 := 0x420000
00015f32: R0 := R0 + 0x280
00015f39: R0 := pad:64[mem[R0 + 8]]
00015f3f: R0 := pad:64[extend:32[7:0[R0]]]
00015f45: R3 := extend:64[7:0[R0]]
00015f4c: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00015f51: R0 := 0x409000
00015f57: R1 := R0 + 0x600
00015f5d: R0 := R3
00015f62: R30 := 0x407EA8
00015f64: call @transparent_crc with return %00015f66

00015f66:
00015f69: R0 := 0x420000
00015f6f: R0 := R0 + 0x280
00015f76: R0 := pad:64[mem[R0 + 8, el]:u32]
00015f7c: R0 := extend:64[25:8[R0]]
00015f82: R3 := extend:64[31:0[R0]]
00015f89: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00015f8e: R0 := 0x409000
00015f94: R1 := R0 + 0x610
00015f9a: R0 := R3
00015f9f: R30 := 0x407ED0
00015fa1: call @transparent_crc with return %00015fa3

00015fa3:
00015fa6: R0 := 0x420000
00015fac: R0 := R0 + 0x280
00015fb3: R0 := pad:64[mem[R0 + 0xC, el]:u32]
00015fb9: R3 := pad:64[31:0[R0]]
00015fc0: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00015fc5: R0 := 0x409000
00015fcb: R1 := R0 + 0x620
00015fd1: R0 := R3
00015fd6: R30 := 0x407EF4
00015fd8: call @transparent_crc with return %00015fda

00015fda:
00015fdd: R0 := 0x420000
00015fe3: R0 := R0 + 0x290
00015fea: R0 := pad:64[mem[R0]]
00015ff0: R3 := pad:64[7:0[R0]]
00015ff7: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00015ffc: R0 := 0x409000
00016002: R1 := R0 + 0x630
00016008: R0 := R3
0001600d: R30 := 0x407F18
0001600f: call @transparent_crc with return %00016011

00016011:
00016014: R0 := 0x420000
0001601a: R0 := R0 + 0x298
00016021: R0 := mem[R0, el]:u64
00016027: R3 := R0
0001602e: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00016033: R0 := 0x409000
00016039: R1 := R0 + 0x638
0001603f: R0 := R3
00016044: R30 := 0x407F3C
00016046: call @transparent_crc with return %00016048

00016048:
0001604b: R0 := 0x420000
00016051: R0 := R0 + 0x298
00016058: R0 := pad:64[extend:32[mem[R0 + 8]]]
0001605e: R3 := extend:64[7:0[R0]]
00016065: R2 := pad:64[mem[R31 + 0x20, el]:u32]
0001606a: R0 := 0x409000
00016070: R1 := R0 + 0x648
00016076: R0 := R3
0001607b: R30 := 0x407F60
0001607d: call @transparent_crc with return %0001607f

0001607f:
00016082: R0 := 0x420000
00016088: R0 := R0 + 0x298
0001608f: R0 := mem[R0 + 8, el]:u64
00016095: R0 := extend:64[25:8[R0]]
0001609b: R3 := extend:64[31:0[R0]]
000160a2: R2 := pad:64[mem[R31 + 0x20, el]:u32]
000160a7: R0 := 0x409000
000160ad: R1 := R0 + 0x658
000160b3: R0 := R3
000160b8: R30 := 0x407F88
000160ba: call @transparent_crc with return %000160bc

000160bc:
000160bf: R0 := 0x420000
000160c5: R0 := R0 + 0x298
000160cc: R0 := pad:64[mem[R0 + 0xC, el]:u32]
000160d2: R3 := pad:64[31:0[R0]]
000160d9: R2 := pad:64[mem[R31 + 0x20, el]:u32]
000160de: R0 := 0x409000
000160e4: R1 := R0 + 0x668
000160ea: R0 := R3
000160ef: R30 := 0x407FAC
000160f1: call @transparent_crc with return %000160f3

000160f3:
000160f6: R0 := 0x420000
000160fc: R0 := R0 + 0x2A8
00016103: R3 := mem[R0, el]:u64
0001610a: R2 := pad:64[mem[R31 + 0x20, el]:u32]
0001610f: R0 := 0x409000
00016115: R1 := R0 + 0x678
0001611b: R0 := R3
00016120: R30 := 0x407FCC
00016122: call @transparent_crc with return %00016124

00016124:
00016127: R0 := 0x420000
0001612d: R0 := R0 + 0x2B0
00016134: R0 := mem[R0, el]:u64
0001613a: R3 := R0
00016141: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00016146: R0 := 0x409000
0001614c: R1 := R0 + 0x680
00016152: R0 := R3
00016157: R30 := 0x407FF0
00016159: call @transparent_crc with return %0001615b

0001615b:
0001615e: R0 := 0x420000
00016164: R0 := R0 + 0x2B0
0001616b: R0 := pad:64[mem[R0 + 8]]
00016171: R0 := pad:64[extend:32[7:0[R0]]]
00016177: R3 := extend:64[7:0[R0]]
0001617e: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00016183: R0 := 0x409000
00016189: R1 := R0 + 0x690
0001618f: R0 := R3
00016194: R30 := 0x408018
00016196: call @transparent_crc with return %00016198

00016198:
0001619b: R0 := 0x420000
000161a1: R0 := R0 + 0x2B0
000161a8: R0 := pad:64[mem[R0 + 8, el]:u32]
000161ae: R0 := extend:64[25:8[R0]]
000161b4: R3 := extend:64[31:0[R0]]
000161bb: R2 := pad:64[mem[R31 + 0x20, el]:u32]
000161c0: R0 := 0x409000
000161c6: R1 := R0 + 0x6A0
000161cc: R0 := R3
000161d1: R30 := 0x408040
000161d3: call @transparent_crc with return %000161d5

000161d5:
000161d8: R0 := 0x420000
000161de: R0 := R0 + 0x2B0
000161e5: R0 := pad:64[mem[R0 + 0xC, el]:u32]
000161eb: R3 := pad:64[31:0[R0]]
000161f2: R2 := pad:64[mem[R31 + 0x20, el]:u32]
000161f7: R0 := 0x409000
000161fd: R1 := R0 + 0x6B0
00016203: R0 := R3
00016208: R30 := 0x408064
0001620a: call @transparent_crc with return %0001620c

0001620c:
0001620f: R0 := 0x420000
00016215: R0 := R0 + 0x2C0
0001621c: R0 := pad:64[mem[R0, el]:u32]
00016222: R3 := pad:64[31:0[R0]]
00016229: R2 := pad:64[mem[R31 + 0x20, el]:u32]
0001622e: R0 := 0x409000
00016234: R1 := R0 + 0x6C0
0001623a: R0 := R3
0001623f: R30 := 0x408088
00016241: call @transparent_crc with return %00016243

00016243:
00016248: mem := mem with [R31 + 0x2C, el]:u32 <- 0
0001624d: goto %0001624b

0001624b:
00016253: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00016258: VF := 0
0001625b: CF := 1
0001625f: ZF := 31:0[R0] = 0
00016263: NF := 31:31[R0]
0001626b: when ~(NF = VF & ~ZF) goto %00016269
00019823: goto %000163ec

000163ec:
000163ef: R0 := 0x420000
000163f5: R0 := R0 + 0x2D8
000163fc: R0 := mem[R0, el]:u64
00016402: R3 := R0
00016409: R2 := pad:64[mem[R31 + 0x20, el]:u32]
0001640e: R0 := 0x409000
00016414: R1 := R0 + 0x708
0001641a: R0 := R3
0001641f: R30 := 0x4081AC
00016421: call @transparent_crc with return %00016423

00016423:
00016426: R0 := 0x420000
0001642c: R0 := R0 + 0x2D8
00016433: R0 := pad:64[mem[R0 + 8]]
00016439: R0 := pad:64[extend:32[7:0[R0]]]
0001643f: R3 := extend:64[7:0[R0]]
00016446: R2 := pad:64[mem[R31 + 0x20, el]:u32]
0001644b: R0 := 0x409000
00016451: R1 := R0 + 0x718
00016457: R0 := R3
0001645c: R30 := 0x4081D4
0001645e: call @transparent_crc with return %00016460

00016460:
00016463: R0 := 0x420000
00016469: R0 := R0 + 0x2D8
00016470: R0 := pad:64[mem[R0 + 8, el]:u32]
00016476: R0 := extend:64[25:8[R0]]
0001647c: R3 := extend:64[31:0[R0]]
00016483: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00016488: R0 := 0x409000
0001648e: R1 := R0 + 0x728
00016494: R0 := R3
00016499: R30 := 0x4081FC
0001649b: call @transparent_crc with return %0001649d

0001649d:
000164a0: R0 := 0x420000
000164a6: R0 := R0 + 0x2D8
000164ad: R0 := pad:64[mem[R0 + 0xC, el]:u32]
000164b3: R3 := pad:64[31:0[R0]]
000164ba: R2 := pad:64[mem[R31 + 0x20, el]:u32]
000164bf: R0 := 0x409000
000164c5: R1 := R0 + 0x738
000164cb: R0 := R3
000164d0: R30 := 0x408220
000164d2: call @transparent_crc with return %000164d4

000164d4:
000164d9: mem := mem with [R31 + 0x2C, el]:u32 <- 0
000164de: goto %000164dc

000164dc:
000164e4: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
000164ea: #335 := 31:0[R0] - 4
000164ef: VF := extend:64[#335] <> extend:64[31:0[R0]] - 4
000164f4: CF := pad:64[#335] <> pad:64[31:0[R0]] + 0xFFFFFFFC
000164f8: ZF := #335 = 0
000164fc: NF := 31:31[#335]
00016504: when ~(NF = VF & ~ZF) goto %00016502
00019824: goto %000167ef

000167ef:
000167f2: R0 := 0x420000
000167f8: R0 := R0 + 0x608
000167ff: R0 := mem[R0, el]:u64
00016805: R3 := R0
0001680c: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00016811: R0 := 0x409000
00016817: R1 := R0 + 0x7C0
0001681d: R0 := R3
00016822: R30 := 0x40840C
00016824: call @transparent_crc with return %00016826

00016826:
00016829: R0 := 0x420000
0001682f: R0 := R0 + 0x608
00016836: R0 := pad:64[extend:32[mem[R0 + 8]]]
0001683c: R3 := extend:64[7:0[R0]]
00016843: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00016848: R0 := 0x409000
0001684e: R1 := R0 + 0x7D0
00016854: R0 := R3
00016859: R30 := 0x408430
0001685b: call @transparent_crc with return %0001685d

0001685d:
00016860: R0 := 0x420000
00016866: R0 := R0 + 0x608
0001686d: R0 := mem[R0 + 8, el]:u64
00016873: R0 := extend:64[25:8[R0]]
00016879: R3 := extend:64[31:0[R0]]
00016880: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00016885: R0 := 0x409000
0001688b: R1 := R0 + 0x7E0
00016891: R0 := R3
00016896: R30 := 0x408458
00016898: call @transparent_crc with return %0001689a

0001689a:
0001689d: R0 := 0x420000
000168a3: R0 := R0 + 0x608
000168aa: R0 := pad:64[mem[R0 + 0xC, el]:u32]
000168b0: R3 := pad:64[31:0[R0]]
000168b7: R2 := pad:64[mem[R31 + 0x20, el]:u32]
000168bc: R0 := 0x409000
000168c2: R1 := R0 + 0x7F0
000168c8: R0 := R3
000168cd: R30 := 0x40847C
000168cf: call @transparent_crc with return %000168d1

000168d1:
000168d4: R0 := 4
000168da: R3 := R0
000168e1: R2 := pad:64[mem[R31 + 0x20, el]:u32]
000168e6: R0 := 0x409000
000168ec: R1 := R0 + 0x800
000168f2: R0 := R3
000168f7: R30 := 0x408498
000168f9: call @transparent_crc with return %000168fb

000168fb:
000168fe: R0 := 0xFFFFFFAA
00016904: R3 := extend:64[7:0[R0]]
0001690b: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00016910: R0 := 0x409000
00016916: R1 := R0 + 0x810
0001691c: R0 := R3
00016921: R30 := 0x4084B4
00016923: call @transparent_crc with return %00016925

00016925:
00016928: R0 := 0xFFFFFE5E
0001692e: R3 := extend:64[31:0[R0]]
00016935: R2 := pad:64[mem[R31 + 0x20, el]:u32]
0001693a: R0 := 0x409000
00016940: R1 := R0 + 0x820
00016946: R0 := R3
0001694b: R30 := 0x4084D0
0001694d: call @transparent_crc with return %0001694f

0001694f:
00016952: R0 := 0x408000
00016958: R0 := R0 + 0xB88
0001695f: R0 := pad:64[mem[R0 + 0xC, el]:u32]
00016965: R3 := pad:64[31:0[R0]]
0001696c: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00016971: R0 := 0x409000
00016977: R1 := R0 + 0x830
0001697d: R0 := R3
00016982: R30 := 0x4084F4
00016984: call @transparent_crc with return %00016986

00016986:
00016989: R0 := 0x420000
0001698f: R0 := R0 + 0x618
00016996: R0 := mem[R0, el]:u64
0001699c: R3 := R0
000169a3: R2 := pad:64[mem[R31 + 0x20, el]:u32]
000169a8: R0 := 0x409000
000169ae: R1 := R0 + 0x840
000169b4: R0 := R3
000169b9: R30 := 0x408518
000169bb: call @transparent_crc with return %000169bd

000169bd:
000169c0: R0 := 0x420000
000169c6: R0 := R0 + 0x618
000169cd: R0 := pad:64[extend:32[mem[R0 + 8]]]
000169d3: R3 := extend:64[7:0[R0]]
000169da: R2 := pad:64[mem[R31 + 0x20, el]:u32]
000169df: R0 := 0x409000
000169e5: R1 := R0 + 0x850
000169eb: R0 := R3
000169f0: R30 := 0x40853C
000169f2: call @transparent_crc with return %000169f4

000169f4:
000169f7: R0 := 0x420000
000169fd: R0 := R0 + 0x618
00016a04: R0 := mem[R0 + 8, el]:u64
00016a0a: R0 := extend:64[25:8[R0]]
00016a10: R3 := extend:64[31:0[R0]]
00016a17: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00016a1c: R0 := 0x409000
00016a22: R1 := R0 + 0x860
00016a28: R0 := R3
00016a2d: R30 := 0x408564
00016a2f: call @transparent_crc with return %00016a31

00016a31:
00016a34: R0 := 0x420000
00016a3a: R0 := R0 + 0x618
00016a41: R0 := pad:64[mem[R0 + 0xC, el]:u32]
00016a47: R3 := pad:64[31:0[R0]]
00016a4e: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00016a53: R0 := 0x409000
00016a59: R1 := R0 + 0x870
00016a5f: R0 := R3
00016a64: R30 := 0x408588
00016a66: call @transparent_crc with return %00016a68

00016a68:
00016a6d: mem := mem with [R31 + 0x2C, el]:u32 <- 0
00016a72: goto %00016a70

00016a70:
00016a78: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00016a7e: #337 := 31:0[R0] - 7
00016a83: VF := extend:64[#337] <> extend:64[31:0[R0]] - 7
00016a88: CF := pad:64[#337] <> pad:64[31:0[R0]] + 0xFFFFFFF9
00016a8c: ZF := #337 = 0
00016a90: NF := 31:31[#337]
00016a98: when ~(NF = VF & ~ZF) goto %00016a96
00019825: goto %00016b26

00016b26:
00016b29: R0 := 0x423000
00016b2f: R0 := R0 + 0xA10
00016b36: R0 := pad:64[extend:32[mem[R0, el]:u16]]
00016b3c: R3 := extend:64[15:0[R0]]
00016b43: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00016b48: R0 := 0x409000
00016b4e: R1 := R0 + 0x890
00016b54: R0 := R3
00016b59: R30 := 0x408610
00016b5b: call @transparent_crc with return %00016b5d

00016b5d:
00016b60: R0 := 0x420000
00016b66: R0 := R0 + 0x648
00016b6d: R0 := pad:64[mem[R0, el]:u32]
00016b73: R3 := extend:64[31:0[R0]]
00016b7a: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00016b7f: R0 := 0x409000
00016b85: R1 := R0 + 0x898
00016b8b: R0 := R3
00016b90: R30 := 0x408634
00016b92: call @transparent_crc with return %00016b94

00016b94:
00016b97: R0 := 0x420000
00016b9d: R0 := R0 + 0x64C
00016ba4: R0 := pad:64[extend:32[mem[R0]]]
00016baa: R3 := extend:64[7:0[R0]]
00016bb1: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00016bb6: R0 := 0x409000
00016bbc: R1 := R0 + 0x8A0
00016bc2: R0 := R3
00016bc7: R30 := 0x408658
00016bc9: call @transparent_crc with return %00016bcb

00016bcb:
00016bce: R0 := 0x420000
00016bd4: R0 := R0 + 0x650
00016bdb: R0 := pad:64[mem[R0, el]:u32]
00016be1: R3 := extend:64[31:0[R0]]
00016be8: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00016bed: R0 := 0x409000
00016bf3: R1 := R0 + 0x8A8
00016bf9: R0 := R3
00016bfe: R30 := 0x40867C
00016c00: call @transparent_crc with return %00016c02

00016c02:
00016c07: mem := mem with [R31 + 0x2C, el]:u32 <- 0
00016c0c: goto %00016c0a

00016c0a:
00016c12: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00016c18: #338 := 31:0[R0] - 8
00016c1d: VF := extend:64[#338] <> extend:64[31:0[R0]] - 8
00016c22: CF := pad:64[#338] <> pad:64[31:0[R0]] + 0xFFFFFFF8
00016c26: ZF := #338 = 0
00016c2a: NF := 31:31[#338]
00016c32: when ~(NF = VF & ~ZF) goto %00016c30
00019826: goto %00016cc0

00016cc0:
00016cc3: R0 := 0x420000
00016cc9: R0 := R0 + 0x661
00016cd0: R0 := pad:64[mem[R0]]
00016cd6: R0 := pad:64[7:0[R0]]
00016cdc: R3 := pad:64[7:0[R0]]
00016ce3: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00016ce8: R0 := 0x409000
00016cee: R1 := R0 + 0x8C0
00016cf4: R0 := R3
00016cf9: R30 := 0x408708
00016cfb: call @transparent_crc with return %00016cfd

00016cfd:
00016d00: R0 := 0x420000
00016d06: R0 := R0 + 0x664
00016d0d: R0 := pad:64[mem[R0, el]:u32]
00016d13: R3 := extend:64[31:0[R0]]
00016d1a: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00016d1f: R0 := 0x409000
00016d25: R1 := R0 + 0x8C8
00016d2b: R0 := R3
00016d30: R30 := 0x40872C
00016d32: call @transparent_crc with return %00016d34

00016d34:
00016d37: R0 := 0x420000
00016d3d: R0 := R0 + 0x668
00016d44: R0 := pad:64[mem[R0, el]:u16]
00016d4a: R3 := pad:64[15:0[R0]]
00016d51: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00016d56: R0 := 0x409000
00016d5c: R1 := R0 + 0x8D0
00016d62: R0 := R3
00016d67: R30 := 0x408750
00016d69: call @transparent_crc with return %00016d6b

00016d6b:
00016d6e: R0 := 0x420000
00016d74: R0 := R0 + 0x670
00016d7b: R0 := mem[R0, el]:u64
00016d81: R3 := R0
00016d88: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00016d8d: R0 := 0x409000
00016d93: R1 := R0 + 0x8D8
00016d99: R0 := R3
00016d9e: R30 := 0x408774
00016da0: call @transparent_crc with return %00016da2

00016da2:
00016da5: R0 := 0x420000
00016dab: R0 := R0 + 0x670
00016db2: R0 := pad:64[extend:32[mem[R0 + 8]]]
00016db8: R3 := extend:64[7:0[R0]]
00016dbf: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00016dc4: R0 := 0x409000
00016dca: R1 := R0 + 0x8E8
00016dd0: R0 := R3
00016dd5: R30 := 0x408798
00016dd7: call @transparent_crc with return %00016dd9

00016dd9:
00016ddc: R0 := 0x420000
00016de2: R0 := R0 + 0x670
00016de9: R0 := mem[R0 + 8, el]:u64
00016def: R0 := extend:64[25:8[R0]]
00016df5: R3 := extend:64[31:0[R0]]
00016dfc: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00016e01: R0 := 0x409000
00016e07: R1 := R0 + 0x8F8
00016e0d: R0 := R3
00016e12: R30 := 0x4087C0
00016e14: call @transparent_crc with return %00016e16

00016e16:
00016e19: R0 := 0x420000
00016e1f: R0 := R0 + 0x670
00016e26: R0 := pad:64[mem[R0 + 0xC, el]:u32]
00016e2c: R3 := pad:64[31:0[R0]]
00016e33: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00016e38: R0 := 0x409000
00016e3e: R1 := R0 + 0x908
00016e44: R0 := R3
00016e49: R30 := 0x4087E4
00016e4b: call @transparent_crc with return %00016e4d

00016e4d:
00016e50: R0 := 0x420000
00016e56: R0 := R0 + 0x680
00016e5d: R0 := pad:64[mem[R0, el]:u32]
00016e63: R3 := pad:64[31:0[R0]]
00016e6a: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00016e6f: R0 := 0x409000
00016e75: R1 := R0 + 0x918
00016e7b: R0 := R3
00016e80: R30 := 0x408808
00016e82: call @transparent_crc with return %00016e84

00016e84:
00016e87: R0 := 0x420000
00016e8d: R0 := R0 + 0x684
00016e94: R0 := pad:64[mem[R0, el]:u32]
00016e9a: R3 := pad:64[31:0[R0]]
00016ea1: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00016ea6: R0 := 0x409000
00016eac: R1 := R0 + 0x920
00016eb2: R0 := R3
00016eb7: R30 := 0x40882C
00016eb9: call @transparent_crc with return %00016ebb

00016ebb:
00016ec0: mem := mem with [R31 + 0x2C, el]:u32 <- 0
00016ec5: goto %00016ec3

00016ec3:
00016ecb: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00016ed1: #339 := 31:0[R0] - 5
00016ed6: VF := extend:64[#339] <> extend:64[31:0[R0]] - 5
00016edb: CF := pad:64[#339] <> pad:64[31:0[R0]] + 0xFFFFFFFB
00016edf: ZF := #339 = 0
00016ee3: NF := 31:31[#339]
00016eeb: when ~(NF = VF & ~ZF) goto %00016ee9
00019827: goto %00016fe2

00016fe2:
00016fe7: mem := mem with [R31 + 0x2C, el]:u32 <- 0
00016fec: goto %00016fea

00016fea:
00016ff2: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00016ff8: #341 := 31:0[R0] - 6
00016ffd: VF := extend:64[#341] <> extend:64[31:0[R0]] - 6
00017002: CF := pad:64[#341] <> pad:64[31:0[R0]] + 0xFFFFFFFA
00017006: ZF := #341 = 0
0001700a: NF := 31:31[#341]
00017012: when ~(NF = VF & ~ZF) goto %00017010
00019828: goto %0001709a

0001709a:
0001709d: R0 := 0x420000
000170a3: R0 := R0 + 0x6F0
000170aa: R0 := pad:64[extend:32[mem[R0, el]:u16]]
000170b0: R3 := extend:64[15:0[R0]]
000170b7: R2 := pad:64[mem[R31 + 0x20, el]:u32]
000170bc: R0 := 0x409000
000170c2: R1 := R0 + 0x948
000170c8: R0 := R3
000170cd: R30 := 0x408948
000170cf: call @transparent_crc with return %000170d1

000170d1:
000170d4: R0 := 0x420000
000170da: R0 := R0 + 0x6F2
000170e1: R0 := pad:64[mem[R0, el]:u16]
000170e7: R3 := pad:64[15:0[R0]]
000170ee: R2 := pad:64[mem[R31 + 0x20, el]:u32]
000170f3: R0 := 0x409000
000170f9: R1 := R0 + 0x950
000170ff: R0 := R3
00017104: R30 := 0x40896C
00017106: call @transparent_crc with return %00017108

00017108:
0001710b: R0 := 0x420000
00017111: R0 := R0 + 0x6F8
00017118: R0 := mem[R0, el]:u64
0001711e: R3 := R0
00017125: R2 := pad:64[mem[R31 + 0x20, el]:u32]
0001712a: R0 := 0x409000
00017130: R1 := R0 + 0x958
00017136: R0 := R3
0001713b: R30 := 0x408990
0001713d: call @transparent_crc with return %0001713f

0001713f:
00017142: R0 := 0x420000
00017148: R0 := R0 + 0x6F8
0001714f: R0 := pad:64[mem[R0 + 8]]
00017155: R0 := pad:64[extend:32[7:0[R0]]]
0001715b: R3 := extend:64[7:0[R0]]
00017162: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00017167: R0 := 0x409000
0001716d: R1 := R0 + 0x968
00017173: R0 := R3
00017178: R30 := 0x4089B8
0001717a: call @transparent_crc with return %0001717c

0001717c:
0001717f: R0 := 0x420000
00017185: R0 := R0 + 0x6F8
0001718c: R0 := pad:64[mem[R0 + 8, el]:u32]
00017192: R0 := extend:64[25:8[R0]]
00017198: R3 := extend:64[31:0[R0]]
0001719f: R2 := pad:64[mem[R31 + 0x20, el]:u32]
000171a4: R0 := 0x409000
000171aa: R1 := R0 + 0x978
000171b0: R0 := R3
000171b5: R30 := 0x4089E0
000171b7: call @transparent_crc with return %000171b9

000171b9:
000171bc: R0 := 0x420000
000171c2: R0 := R0 + 0x6F8
000171c9: R0 := pad:64[mem[R0 + 0xC, el]:u32]
000171cf: R3 := pad:64[31:0[R0]]
000171d6: R2 := pad:64[mem[R31 + 0x20, el]:u32]
000171db: R0 := 0x409000
000171e1: R1 := R0 + 0x988
000171e7: R0 := R3
000171ec: R30 := 0x408A04
000171ee: call @transparent_crc with return %000171f0

000171f0:
000171f3: R0 := 0x420000
000171f9: R0 := R0 + 0x708
00017200: R0 := pad:64[mem[R0, el]:u32]
00017206: R3 := extend:64[31:0[R0]]
0001720d: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00017212: R0 := 0x409000
00017218: R1 := R0 + 0x998
0001721e: R0 := R3
00017223: R30 := 0x408A28
00017225: call @transparent_crc with return %00017227

00017227:
0001722a: R0 := 0x420000
00017230: R0 := R0 + 0x70C
00017237: R0 := pad:64[mem[R0, el]:u32]
0001723d: R3 := extend:64[31:0[R0]]
00017244: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00017249: R0 := 0x409000
0001724f: R1 := R0 + 0x9A0
00017255: R0 := R3
0001725a: R30 := 0x408A4C
0001725c: call @transparent_crc with return %0001725e

0001725e:
00017261: R0 := 0x420000
00017267: R0 := R0 + 0x710
0001726e: R0 := pad:64[mem[R0, el]:u32]
00017274: R3 := extend:64[31:0[R0]]
0001727b: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00017280: R0 := 0x409000
00017286: R1 := R0 + 0x9A8
0001728c: R0 := R3
00017291: R30 := 0x408A70
00017293: call @transparent_crc with return %00017295

00017295:
00017298: R0 := 0x420000
0001729e: R0 := R0 + 0x714
000172a5: R0 := pad:64[mem[R0, el]:u16]
000172ab: R3 := pad:64[15:0[R0]]
000172b2: R2 := pad:64[mem[R31 + 0x20, el]:u32]
000172b7: R0 := 0x409000
000172bd: R1 := R0 + 0x9B0
000172c3: R0 := R3
000172c8: R30 := 0x408A94
000172ca: call @transparent_crc with return %000172cc

000172cc:
000172cf: R0 := 0x420000
000172d5: R0 := R0 + 0x718
000172dc: R0 := pad:64[mem[R0, el]:u32]
000172e2: R3 := extend:64[31:0[R0]]
000172e9: R2 := pad:64[mem[R31 + 0x20, el]:u32]
000172ee: R0 := 0x409000
000172f4: R1 := R0 + 0x9B8
000172fa: R0 := R3
000172ff: R30 := 0x408AB8
00017301: call @transparent_crc with return %00017303

00017303:
00017306: R0 := 0x420000
0001730c: R0 := R0 + 0x40
00017313: R0 := pad:64[mem[R0, el]:u32]
00017319: R0 := pad:64[~31:0[R0]]
00017320: R1 := pad:64[mem[R31 + 0x20, el]:u32]
00017325: R30 := 0x408AD0
00017327: call @platform_main_end with return %00017329

00017329:
0001732c: R0 := 0
00017333: R29 := mem[R31, el]:u64
00017338: R30 := mem[R31 + 8, el]:u64
0001733c: R31 := R31 + 0x30
00017341: call R30 with noreturn

00017010:
00017018: R0 := 0x420000
0001701e: R0 := R0 + 0x6B8
00017025: R1 := extend:64[mem[R31 + 0x2C, el]:u32]
0001702d: R3 := mem[R0 + (60:0[R1].0), el]:u64
00017034: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00017039: R0 := 0x409000
0001703f: R1 := R0 + 0x938
00017045: R0 := R3
0001704a: R30 := 0x4088F0
0001704c: call @transparent_crc with return %0001704e

0001704e:
00017053: R0 := pad:64[mem[R31 + 0x20, el]:u32]
00017058: VF := 0
0001705b: CF := 1
0001705f: ZF := 31:0[R0] = 0
00017063: NF := 31:31[R0]
00017069: when ZF goto %00017067
00019829: goto %00017081

00017081:
00017086: R1 := pad:64[mem[R31 + 0x2C, el]:u32]
0001708b: R0 := 0x409000
00017091: R0 := R0 + 0x2B0
00017096: R30 := 0x40890C
00017098: call @printf with return %00017067

00017067:
00017071: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00017077: R0 := pad:64[31:0[R0] + 1]
0001707f: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
0001982a: goto %00016fea

00016ee9:
00016ef3: mem := mem with [R31 + 0x28, el]:u32 <- 0
00016ef8: goto %00016ef6

00016ef6:
00016efe: R0 := pad:64[mem[R31 + 0x28, el]:u32]
00016f04: #340 := 31:0[R0] - 7
00016f09: VF := extend:64[#340] <> extend:64[31:0[R0]] - 7
00016f0e: CF := pad:64[#340] <> pad:64[31:0[R0]] + 0xFFFFFFF9
00016f12: ZF := #340 = 0
00016f16: NF := 31:31[#340]
00016f1e: when ~(NF = VF & ~ZF) goto %00016f1c
0001982b: goto %00016fcd

00016fcd:
00016fd2: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00016fd8: R0 := pad:64[31:0[R0] + 1]
00016fe0: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
0001982c: goto %00016ec3

00016f1c:
00016f24: R0 := 0x420000
00016f2a: R2 := R0 + 0x688
00016f31: R0 := extend:64[mem[R31 + 0x28, el]:u32]
00016f38: R1 := extend:64[mem[R31 + 0x2C, el]:u32]
00016f3e: R1 := 60:0[R1].0
00016f45: R1 := R2 + R1
00016f4c: R0 := R1 + R0
00016f53: R0 := pad:64[mem[R0]]
00016f59: R3 := pad:64[7:0[R0]]
00016f60: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00016f65: R0 := 0x409000
00016f6b: R1 := R0 + 0x928
00016f71: R0 := R3
00016f76: R30 := 0x408874
00016f78: call @transparent_crc with return %00016f7a

00016f7a:
00016f7f: R0 := pad:64[mem[R31 + 0x20, el]:u32]
00016f84: VF := 0
00016f87: CF := 1
00016f8b: ZF := 31:0[R0] = 0
00016f8f: NF := 31:31[R0]
00016f95: when ZF goto %00016f93
0001982d: goto %00016fad

00016fad:
00016fb2: R2 := pad:64[mem[R31 + 0x28, el]:u32]
00016fb9: R1 := pad:64[mem[R31 + 0x2C, el]:u32]
00016fbe: R0 := 0x409000
00016fc4: R0 := R0 + 0x3B0
00016fc9: R30 := 0x408894
00016fcb: call @printf with return %00016f93

00016f93:
00016f9d: R0 := pad:64[mem[R31 + 0x28, el]:u32]
00016fa3: R0 := pad:64[31:0[R0] + 1]
00016fab: mem := mem with [R31 + 0x28, el]:u32 <- 31:0[R0]
0001982e: goto %00016ef6

00016c30:
00016c38: R0 := 0x420000
00016c3e: R1 := R0 + 0x658
00016c45: R0 := extend:64[mem[R31 + 0x2C, el]:u32]
00016c4d: R0 := pad:64[extend:32[mem[R1 + R0]]]
00016c53: R3 := extend:64[7:0[R0]]
00016c5a: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00016c5f: R0 := 0x409000
00016c65: R1 := R0 + 0x8B0
00016c6b: R0 := R3
00016c70: R30 := 0x4086AC
00016c72: call @transparent_crc with return %00016c74

00016c74:
00016c79: R0 := pad:64[mem[R31 + 0x20, el]:u32]
00016c7e: VF := 0
00016c81: CF := 1
00016c85: ZF := 31:0[R0] = 0
00016c89: NF := 31:31[R0]
00016c8f: when ZF goto %00016c8d
0001982f: goto %00016ca7

00016ca7:
00016cac: R1 := pad:64[mem[R31 + 0x2C, el]:u32]
00016cb1: R0 := 0x409000
00016cb7: R0 := R0 + 0x2B0
00016cbc: R30 := 0x4086C8
00016cbe: call @printf with return %00016c8d

00016c8d:
00016c97: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00016c9d: R0 := pad:64[31:0[R0] + 1]
00016ca5: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
00019830: goto %00016c0a

00016a96:
00016a9e: R0 := 0x420000
00016aa4: R0 := R0 + 0x628
00016aab: R1 := extend:64[mem[R31 + 0x2C, el]:u32]
00016ab3: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00016ab9: R3 := pad:64[31:0[R0]]
00016ac0: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00016ac5: R0 := 0x409000
00016acb: R1 := R0 + 0x880
00016ad1: R0 := R3
00016ad6: R30 := 0x4085B8
00016ad8: call @transparent_crc with return %00016ada

00016ada:
00016adf: R0 := pad:64[mem[R31 + 0x20, el]:u32]
00016ae4: VF := 0
00016ae7: CF := 1
00016aeb: ZF := 31:0[R0] = 0
00016aef: NF := 31:31[R0]
00016af5: when ZF goto %00016af3
00019831: goto %00016b0d

00016b0d:
00016b12: R1 := pad:64[mem[R31 + 0x2C, el]:u32]
00016b17: R0 := 0x409000
00016b1d: R0 := R0 + 0x2B0
00016b22: R30 := 0x4085D4
00016b24: call @printf with return %00016af3

00016af3:
00016afd: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00016b03: R0 := pad:64[31:0[R0] + 1]
00016b0b: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
00019832: goto %00016a70

00016502:
0001650c: mem := mem with [R31 + 0x28, el]:u32 <- 0
00016511: goto %0001650f

0001650f:
00016517: R0 := pad:64[mem[R31 + 0x28, el]:u32]
0001651c: VF := 0
0001651f: CF := 1
00016523: ZF := 31:0[R0] = 0
00016527: NF := 31:31[R0]
0001652f: when ~(NF = VF & ~ZF) goto %0001652d
00019833: goto %000167da

000167da:
000167df: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
000167e5: R0 := pad:64[31:0[R0] + 1]
000167ed: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
00019834: goto %000164dc

0001652d:
00016537: mem := mem with [R31 + 0x24, el]:u32 <- 0
0001653c: goto %0001653a

0001653a:
00016542: R0 := pad:64[mem[R31 + 0x24, el]:u32]
00016548: #336 := 31:0[R0] - 9
0001654d: VF := extend:64[#336] <> extend:64[31:0[R0]] - 9
00016552: CF := pad:64[#336] <> pad:64[31:0[R0]] + 0xFFFFFFF7
00016556: ZF := #336 = 0
0001655a: NF := 31:31[#336]
00016562: when ~(NF = VF & ~ZF) goto %00016560
00019835: goto %000167c5

000167c5:
000167ca: R0 := pad:64[mem[R31 + 0x28, el]:u32]
000167d0: R0 := pad:64[31:0[R0] + 1]
000167d8: mem := mem with [R31 + 0x28, el]:u32 <- 31:0[R0]
00019836: goto %0001650f

00016560:
00016568: R0 := 0x420000
0001656e: R2 := R0 + 0x2E8
00016575: R3 := extend:64[mem[R31 + 0x24, el]:u32]
0001657c: R1 := extend:64[mem[R31 + 0x2C, el]:u32]
00016583: R0 := extend:64[mem[R31 + 0x28, el]:u32]
0001658a: R1 := R1 + R0
00016590: R0 := R1
00016596: R0 := 61:0[R0].0
0001659d: R0 := R0 + R1
000165a3: R0 := 62:0[R0].0
000165aa: R0 := R0 + R3
000165b0: R0 := 59:0[R0].0
000165b7: R0 := R2 + R0
000165be: R0 := mem[R0, el]:u64
000165c4: R3 := R0
000165cb: R2 := pad:64[mem[R31 + 0x20, el]:u32]
000165d0: R0 := 0x409000
000165d6: R1 := R0 + 0x748
000165dc: R0 := R3
000165e1: R30 := 0x408288
000165e3: call @transparent_crc with return %000165e5

000165e5:
000165e8: R0 := 0x420000
000165ee: R2 := R0 + 0x2E8
000165f5: R3 := extend:64[mem[R31 + 0x24, el]:u32]
000165fc: R1 := extend:64[mem[R31 + 0x2C, el]:u32]
00016603: R0 := extend:64[mem[R31 + 0x28, el]:u32]
0001660a: R1 := R1 + R0
00016610: R0 := R1
00016616: R0 := 61:0[R0].0
0001661d: R0 := R0 + R1
00016623: R0 := 62:0[R0].0
0001662a: R0 := R0 + R3
00016630: R0 := 59:0[R0].0
00016637: R0 := R2 + R0
0001663e: R0 := pad:64[extend:32[mem[R0 + 8]]]
00016644: R3 := extend:64[7:0[R0]]
0001664b: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00016650: R0 := 0x409000
00016656: R1 := R0 + 0x760
0001665c: R0 := R3
00016661: R30 := 0x4082D8
00016663: call @transparent_crc with return %00016665

00016665:
00016668: R0 := 0x420000
0001666e: R2 := R0 + 0x2E8
00016675: R3 := extend:64[mem[R31 + 0x24, el]:u32]
0001667c: R1 := extend:64[mem[R31 + 0x2C, el]:u32]
00016683: R0 := extend:64[mem[R31 + 0x28, el]:u32]
0001668a: R1 := R1 + R0
00016690: R0 := R1
00016696: R0 := 61:0[R0].0
0001669d: R0 := R0 + R1
000166a3: R0 := 62:0[R0].0
000166aa: R0 := R0 + R3
000166b0: R0 := 59:0[R0].0
000166b7: R0 := R2 + R0
000166be: R0 := mem[R0 + 8, el]:u64
000166c4: R0 := extend:64[25:8[R0]]
000166ca: R3 := extend:64[31:0[R0]]
000166d1: R2 := pad:64[mem[R31 + 0x20, el]:u32]
000166d6: R0 := 0x409000
000166dc: R1 := R0 + 0x778
000166e2: R0 := R3
000166e7: R30 := 0x40832C
000166e9: call @transparent_crc with return %000166eb

000166eb:
000166ee: R0 := 0x420000
000166f4: R2 := R0 + 0x2E8
000166fb: R3 := extend:64[mem[R31 + 0x24, el]:u32]
00016702: R1 := extend:64[mem[R31 + 0x2C, el]:u32]
00016709: R0 := extend:64[mem[R31 + 0x28, el]:u32]
00016710: R1 := R1 + R0
00016716: R0 := R1
0001671c: R0 := 61:0[R0].0
00016723: R0 := R0 + R1
00016729: R0 := 62:0[R0].0
00016730: R0 := R0 + R3
00016736: R0 := 59:0[R0].0
0001673d: R0 := R2 + R0
00016744: R0 := pad:64[mem[R0 + 0xC, el]:u32]
0001674a: R3 := pad:64[31:0[R0]]
00016751: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00016756: R0 := 0x409000
0001675c: R1 := R0 + 0x790
00016762: R0 := R3
00016767: R30 := 0x40837C
00016769: call @transparent_crc with return %0001676b

0001676b:
00016770: R0 := pad:64[mem[R31 + 0x20, el]:u32]
00016775: VF := 0
00016778: CF := 1
0001677c: ZF := 31:0[R0] = 0
00016780: NF := 31:31[R0]
00016786: when ZF goto %00016784
00019837: goto %0001679e

0001679e:
000167a3: R3 := pad:64[mem[R31 + 0x24, el]:u32]
000167aa: R2 := pad:64[mem[R31 + 0x28, el]:u32]
000167b1: R1 := pad:64[mem[R31 + 0x2C, el]:u32]
000167b6: R0 := 0x409000
000167bc: R0 := R0 + 0x7A8
000167c1: R30 := 0x4083A0
000167c3: call @printf with return %00016784

00016784:
0001678e: R0 := pad:64[mem[R31 + 0x24, el]:u32]
00016794: R0 := pad:64[31:0[R0] + 1]
0001679c: mem := mem with [R31 + 0x24, el]:u32 <- 31:0[R0]
00019838: goto %0001653a

00016269:
00016271: R0 := 0x420000
00016277: R1 := R0 + 0x2C8
0001627e: R0 := extend:64[mem[R31 + 0x2C, el]:u32]
00016284: R0 := 59:0[R0].0
0001628b: R0 := R1 + R0
00016292: R0 := mem[R0, el]:u64
00016298: R3 := R0
0001629f: R2 := pad:64[mem[R31 + 0x20, el]:u32]
000162a4: R0 := 0x409000
000162aa: R1 := R0 + 0x6C8
000162b0: R0 := R3
000162b5: R30 := 0x4080C0
000162b7: call @transparent_crc with return %000162b9

000162b9:
000162bc: R0 := 0x420000
000162c2: R1 := R0 + 0x2C8
000162c9: R0 := extend:64[mem[R31 + 0x2C, el]:u32]
000162cf: R0 := 59:0[R0].0
000162d6: R0 := R1 + R0
000162dd: R0 := pad:64[extend:32[mem[R0 + 8]]]
000162e3: R3 := extend:64[7:0[R0]]
000162ea: R2 := pad:64[mem[R31 + 0x20, el]:u32]
000162ef: R0 := 0x409000
000162f5: R1 := R0 + 0x6D8
000162fb: R0 := R3
00016300: R30 := 0x4080F0
00016302: call @transparent_crc with return %00016304

00016304:
00016307: R0 := 0x420000
0001630d: R1 := R0 + 0x2C8
00016314: R0 := extend:64[mem[R31 + 0x2C, el]:u32]
0001631a: R0 := 59:0[R0].0
00016321: R0 := R1 + R0
00016328: R0 := mem[R0 + 8, el]:u64
0001632e: R0 := extend:64[25:8[R0]]
00016334: R3 := extend:64[31:0[R0]]
0001633b: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00016340: R0 := 0x409000
00016346: R1 := R0 + 0x6E8
0001634c: R0 := R3
00016351: R30 := 0x408124
00016353: call @transparent_crc with return %00016355

00016355:
00016358: R0 := 0x420000
0001635e: R1 := R0 + 0x2C8
00016365: R0 := extend:64[mem[R31 + 0x2C, el]:u32]
0001636b: R0 := 59:0[R0].0
00016372: R0 := R1 + R0
00016379: R0 := pad:64[mem[R0 + 0xC, el]:u32]
0001637f: R3 := pad:64[31:0[R0]]
00016386: R2 := pad:64[mem[R31 + 0x20, el]:u32]
0001638b: R0 := 0x409000
00016391: R1 := R0 + 0x6F8
00016397: R0 := R3
0001639c: R30 := 0x408154
0001639e: call @transparent_crc with return %000163a0

000163a0:
000163a5: R0 := pad:64[mem[R31 + 0x20, el]:u32]
000163aa: VF := 0
000163ad: CF := 1
000163b1: ZF := 31:0[R0] = 0
000163b5: NF := 31:31[R0]
000163bb: when ZF goto %000163b9
00019839: goto %000163d3

000163d3:
000163d8: R1 := pad:64[mem[R31 + 0x2C, el]:u32]
000163dd: R0 := 0x409000
000163e3: R0 := R0 + 0x2B0
000163e8: R30 := 0x408170
000163ea: call @printf with return %000163b9

000163b9:
000163c3: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
000163c9: R0 := pad:64[31:0[R0] + 1]
000163d1: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
0001983a: goto %0001624b

00015c61:
00015c69: R0 := 0x408000
00015c6f: R0 := R0 + 0xB70
00015c76: R1 := extend:64[mem[R31 + 0x2C, el]:u32]
00015c7e: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00015c84: R3 := pad:64[31:0[R0]]
00015c8b: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00015c90: R0 := 0x409000
00015c96: R1 := R0 + 0x558
00015c9c: R0 := R3
00015ca1: R30 := 0x407CD8
00015ca3: call @transparent_crc with return %00015ca5

00015ca5:
00015caa: R0 := pad:64[mem[R31 + 0x20, el]:u32]
00015caf: VF := 0
00015cb2: CF := 1
00015cb6: ZF := 31:0[R0] = 0
00015cba: NF := 31:31[R0]
00015cc0: when ZF goto %00015cbe
0001983b: goto %00015cd8

00015cd8:
00015cdd: R1 := pad:64[mem[R31 + 0x2C, el]:u32]
00015ce2: R0 := 0x409000
00015ce8: R0 := R0 + 0x2B0
00015ced: R30 := 0x407CF4
00015cef: call @printf with return %00015cbe

00015cbe:
00015cc8: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00015cce: R0 := pad:64[31:0[R0] + 1]
00015cd6: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
0001983c: goto %00015c3b

00015ba3:
00015bab: R0 := 0x420000
00015bb1: R0 := R0 + 0x238
00015bb8: R1 := extend:64[mem[R31 + 0x2C, el]:u32]
00015bc0: R0 := mem[R0 + (60:0[R1].0), el]:u64
00015bc6: R3 := R0
00015bcd: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00015bd2: R0 := 0x409000
00015bd8: R1 := R0 + 0x548
00015bde: R0 := R3
00015be3: R30 := 0x407C74
00015be5: call @transparent_crc with return %00015be7

00015be7:
00015bec: R0 := pad:64[mem[R31 + 0x20, el]:u32]
00015bf1: VF := 0
00015bf4: CF := 1
00015bf8: ZF := 31:0[R0] = 0
00015bfc: NF := 31:31[R0]
00015c02: when ZF goto %00015c00
0001983d: goto %00015c1a

00015c1a:
00015c1f: R1 := pad:64[mem[R31 + 0x2C, el]:u32]
00015c24: R0 := 0x409000
00015c2a: R0 := R0 + 0x2B0
00015c2f: R30 := 0x407C90
00015c31: call @printf with return %00015c00

00015c00:
00015c0a: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00015c10: R0 := pad:64[31:0[R0] + 1]
00015c18: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
0001983e: goto %00015b7d

000158b3:
000158bb: R0 := 0x423000
000158c1: R0 := R0 + 0x930
000158c8: R1 := extend:64[mem[R31 + 0x2C, el]:u32]
000158d0: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
000158d6: R3 := pad:64[31:0[R0]]
000158dd: R2 := pad:64[mem[R31 + 0x20, el]:u32]
000158e2: R0 := 0x409000
000158e8: R1 := R0 + 0x4A8
000158ee: R0 := R3
000158f3: R30 := 0x407AA0
000158f5: call @transparent_crc with return %000158f7

000158f7:
000158fc: R0 := pad:64[mem[R31 + 0x20, el]:u32]
00015901: VF := 0
00015904: CF := 1
00015908: ZF := 31:0[R0] = 0
0001590c: NF := 31:31[R0]
00015912: when ZF goto %00015910
0001983f: goto %0001592a

0001592a:
0001592f: R1 := pad:64[mem[R31 + 0x2C, el]:u32]
00015934: R0 := 0x409000
0001593a: R0 := R0 + 0x2B0
0001593f: R30 := 0x407ABC
00015941: call @printf with return %00015910

00015910:
0001591a: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00015920: R0 := pad:64[31:0[R0] + 1]
00015928: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
00019840: goto %0001588d

000156dc:
000156e4: R0 := 0x420000
000156ea: R1 := R0 + 0x1E8
000156f1: R0 := extend:64[mem[R31 + 0x2C, el]:u32]
000156f9: R0 := pad:64[extend:32[mem[R1 + R0]]]
000156ff: R3 := extend:64[7:0[R0]]
00015706: R2 := pad:64[mem[R31 + 0x20, el]:u32]
0001570b: R0 := 0x409000
00015711: R1 := R0 + 0x450
00015717: R0 := R3
0001571c: R30 := 0x407984
0001571e: call @transparent_crc with return %00015720

00015720:
00015725: R0 := pad:64[mem[R31 + 0x20, el]:u32]
0001572a: VF := 0
0001572d: CF := 1
00015731: ZF := 31:0[R0] = 0
00015735: NF := 31:31[R0]
0001573b: when ZF goto %00015739
00019841: goto %00015753

00015753:
00015758: R1 := pad:64[mem[R31 + 0x2C, el]:u32]
0001575d: R0 := 0x409000
00015763: R0 := R0 + 0x2B0
00015768: R30 := 0x4079A0
0001576a: call @printf with return %00015739

00015739:
00015743: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00015749: R0 := pad:64[31:0[R0] + 1]
00015751: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
00019842: goto %000156b6

0001553a:
00015544: mem := mem with [R31 + 0x28, el]:u32 <- 0
00015549: goto %00015547

00015547:
0001554f: R0 := pad:64[mem[R31 + 0x28, el]:u32]
00015555: #330 := 31:0[R0] - 5
0001555a: VF := extend:64[#330] <> extend:64[31:0[R0]] - 5
0001555f: CF := pad:64[#330] <> pad:64[31:0[R0]] + 0xFFFFFFFB
00015563: ZF := #330 = 0
00015567: NF := 31:31[#330]
0001556f: when ~(NF = VF & ~ZF) goto %0001556d
00019843: goto %0001562b

0001562b:
00015630: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00015636: R0 := pad:64[31:0[R0] + 1]
0001563e: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
00019844: goto %00015514

0001556d:
00015575: R0 := 0x420000
0001557b: R2 := R0 + 0x120
00015582: R3 := extend:64[mem[R31 + 0x28, el]:u32]
00015589: R1 := extend:64[mem[R31 + 0x2C, el]:u32]
0001558f: R0 := R1
00015595: R0 := 62:0[R0].0
0001559c: R0 := R0 + R1
000155a2: R0 := 62:0[R0].0
000155a9: R0 := R0 + R3
000155b1: R0 := pad:64[mem[R2 + (61:0[R0].0), el]:u32]
000155b7: R3 := pad:64[31:0[R0]]
000155be: R2 := pad:64[mem[R31 + 0x20, el]:u32]
000155c3: R0 := 0x409000
000155c9: R1 := R0 + 0x430
000155cf: R0 := R3
000155d4: R30 := 0x4078BC
000155d6: call @transparent_crc with return %000155d8

000155d8:
000155dd: R0 := pad:64[mem[R31 + 0x20, el]:u32]
000155e2: VF := 0
000155e5: CF := 1
000155e9: ZF := 31:0[R0] = 0
000155ed: NF := 31:31[R0]
000155f3: when ZF goto %000155f1
00019845: goto %0001560b

0001560b:
00015610: R2 := pad:64[mem[R31 + 0x28, el]:u32]
00015617: R1 := pad:64[mem[R31 + 0x2C, el]:u32]
0001561c: R0 := 0x409000
00015622: R0 := R0 + 0x3B0
00015627: R30 := 0x4078DC
00015629: call @printf with return %000155f1

000155f1:
000155fb: R0 := pad:64[mem[R31 + 0x28, el]:u32]
00015601: R0 := pad:64[31:0[R0] + 1]
00015609: mem := mem with [R31 + 0x28, el]:u32 <- 31:0[R0]
00019846: goto %00015547

0001533f:
00015347: R0 := 0x408000
0001534d: R0 := R0 + 0xB40
00015354: R1 := extend:64[mem[R31 + 0x2C, el]:u32]
0001535c: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00015362: R3 := pad:64[31:0[R0]]
00015369: R2 := pad:64[mem[R31 + 0x20, el]:u32]
0001536e: R0 := 0x409000
00015374: R1 := R0 + 0x3D0
0001537a: R0 := R3
0001537f: R30 := 0x407768
00015381: call @transparent_crc with return %00015383

00015383:
00015388: R0 := pad:64[mem[R31 + 0x20, el]:u32]
0001538d: VF := 0
00015390: CF := 1
00015394: ZF := 31:0[R0] = 0
00015398: NF := 31:31[R0]
0001539e: when ZF goto %0001539c
00019847: goto %000153b6

000153b6:
000153bb: R1 := pad:64[mem[R31 + 0x2C, el]:u32]
000153c0: R0 := 0x409000
000153c6: R0 := R0 + 0x2B0
000153cb: R30 := 0x407784
000153cd: call @printf with return %0001539c

0001539c:
000153a6: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
000153ac: R0 := pad:64[31:0[R0] + 1]
000153b4: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
00019848: goto %00015319

000151e7:
000151f1: mem := mem with [R31 + 0x28, el]:u32 <- 0
000151f6: goto %000151f4

000151f4:
000151fc: R0 := pad:64[mem[R31 + 0x28, el]:u32]
00015202: #327 := 31:0[R0] - 1
00015207: VF := extend:64[#327] <> extend:64[31:0[R0]] - 1
0001520c: CF := pad:64[#327] <> pad:64[31:0[R0]] + 0xFFFFFFFF
00015210: ZF := #327 = 0
00015214: NF := 31:31[#327]
0001521c: when ~(NF = VF & ~ZF) goto %0001521a
00019849: goto %000152c5

000152c5:
000152ca: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
000152d0: R0 := pad:64[31:0[R0] + 1]
000152d8: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
0001984a: goto %000151c1

0001521a:
00015222: R0 := 0x420000
00015228: R0 := R0 + 0xD0
0001522f: R1 := extend:64[mem[R31 + 0x28, el]:u32]
00015236: R2 := extend:64[mem[R31 + 0x2C, el]:u32]
0001523c: R2 := 62:0[R2].0
00015243: R1 := R2 + R1
0001524b: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00015251: R3 := pad:64[31:0[R0]]
00015258: R2 := pad:64[mem[R31 + 0x20, el]:u32]
0001525d: R0 := 0x409000
00015263: R1 := R0 + 0x3A0
00015269: R0 := R3
0001526e: R30 := 0x4076C4
00015270: call @transparent_crc with return %00015272

00015272:
00015277: R0 := pad:64[mem[R31 + 0x20, el]:u32]
0001527c: VF := 0
0001527f: CF := 1
00015283: ZF := 31:0[R0] = 0
00015287: NF := 31:31[R0]
0001528d: when ZF goto %0001528b
0001984b: goto %000152a5

000152a5:
000152aa: R2 := pad:64[mem[R31 + 0x28, el]:u32]
000152b1: R1 := pad:64[mem[R31 + 0x2C, el]:u32]
000152b6: R0 := 0x409000
000152bc: R0 := R0 + 0x3B0
000152c1: R30 := 0x4076E4
000152c3: call @printf with return %0001528b

0001528b:
00015295: R0 := pad:64[mem[R31 + 0x28, el]:u32]
0001529b: R0 := pad:64[31:0[R0] + 1]
000152a3: mem := mem with [R31 + 0x28, el]:u32 <- 31:0[R0]
0001984c: goto %000151f4

00014df6:
00014dfe: R0 := 0x420000
00014e04: R0 := R0 + 0x78
00014e0b: R1 := extend:64[mem[R31 + 0x2C, el]:u32]
00014e13: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00014e19: R3 := extend:64[31:0[R0]]
00014e20: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00014e25: R0 := 0x409000
00014e2b: R1 := R0 + 0x2F8
00014e31: R0 := R3
00014e36: R30 := 0x407434
00014e38: call @transparent_crc with return %00014e3a

00014e3a:
00014e3f: R0 := pad:64[mem[R31 + 0x20, el]:u32]
00014e44: VF := 0
00014e47: CF := 1
00014e4b: ZF := 31:0[R0] = 0
00014e4f: NF := 31:31[R0]
00014e55: when ZF goto %00014e53
0001984d: goto %00014e6d

00014e6d:
00014e72: R1 := pad:64[mem[R31 + 0x2C, el]:u32]
00014e77: R0 := 0x409000
00014e7d: R0 := R0 + 0x2B0
00014e82: R30 := 0x407450
00014e84: call @printf with return %00014e53

00014e53:
00014e5d: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00014e63: R0 := pad:64[31:0[R0] + 1]
00014e6b: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
0001984e: goto %00014dd0

00014bb7:
00014bbf: R0 := 0x420000
00014bc5: R0 := R0 + 0x50
00014bcc: R1 := extend:64[mem[R31 + 0x2C, el]:u32]
00014bd4: R0 := pad:64[extend:32[mem[R0 + (62:0[R1].0), el]:u16]]
00014bda: R3 := extend:64[15:0[R0]]
00014be1: R2 := pad:64[mem[R31 + 0x20, el]:u32]
00014be6: R0 := 0x409000
00014bec: R1 := R0 + 0x2A8
00014bf2: R0 := R3
00014bf7: R30 := 0x4072D4
00014bf9: call @transparent_crc with return %00014bfb

00014bfb:
00014c00: R0 := pad:64[mem[R31 + 0x20, el]:u32]
00014c05: VF := 0
00014c08: CF := 1
00014c0c: ZF := 31:0[R0] = 0
00014c10: NF := 31:31[R0]
00014c16: when ZF goto %00014c14
0001984f: goto %00014c2e

00014c2e:
00014c33: R1 := pad:64[mem[R31 + 0x2C, el]:u32]
00014c38: R0 := 0x409000
00014c3e: R0 := R0 + 0x2B0
00014c43: R30 := 0x4072F0
00014c45: call @printf with return %00014c14

00014c14:
00014c1e: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00014c24: R0 := pad:64[31:0[R0] + 1]
00014c2c: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
00019850: goto %00014b91

00019851: sub memcpy(memcpy_dst, memcpy_src, memcpy_n, memcpy_result)
000199bf: memcpy_dst :: in out u64 = R0
000199c0: memcpy_src :: in out u64 = R1
000199c1: memcpy_n :: in u64 = R2
000199c2: memcpy_result :: out u64 = R0

0000c48b:
0001759f: R16 := 0x420000
000175a6: R17 := mem[R16, el]:u64
000175ac: R16 := R16
000175b1: call R17 with noreturn

00019852: sub platform_main_begin(platform_main_begin_result)
000199c3: platform_main_begin_result :: out u32 = low:32[R0]

0000845e:
00008466: call R30 with noreturn

00019853: sub platform_main_end(platform_main_end_result)
000199c4: platform_main_end_result :: out u32 = low:32[R0]

00008468:
0000846c: #3 := R31 - 0x20
00008472: mem := mem with [#3, el]:u64 <- R29
00008478: mem := mem with [#3 + 8, el]:u64 <- R30
0000847c: R31 := #3
00008482: R29 := R31
0000848a: mem := mem with [R31 + 0x1C, el]:u32 <- 31:0[R0]
00008492: mem := mem with [R31 + 0x18, el]:u32 <- 31:0[R1]
00008499: R1 := pad:64[mem[R31 + 0x1C, el]:u32]
0000849e: R0 := 0x408000
000084a4: R0 := R0 + 0xAF8
000084a9: R30 := 0x4008AC
000084ac: call @printf with return %000084ae

000084ae:
000084b5: R29 := mem[R31, el]:u64
000084ba: R30 := mem[R31 + 8, el]:u64
000084be: R31 := R31 + 0x20
000084c3: call R30 with noreturn

00019854: sub printf(printf_format, printf_result)
000199c5: printf_format :: in u64 = R0
000199c6: printf_result :: out u32 = low:32[R0]

000084aa:
0001760d: R16 := 0x420000
00017614: R17 := mem[R16 + 0x28, el]:u64
0001761a: R16 := R16 + 0x28
0001761f: call R17 with noreturn

00019855: sub register_tm_clones(register_tm_clones_result)
000199c7: register_tm_clones_result :: out u32 = low:32[R0]

000173f8:
000173fb: R0 := 0x423000
00017401: R0 := R0 + 0x4F0
00017406: R1 := 0x423000
0001740c: R1 := R1 + 0x4F0
00017413: R1 := R1 + ~R0 + 1
00017419: R2 := pad:64[63:63[R1]]
00017420: R1 := R2 + (R1 ~>> 3)
00017426: R1 := extend:64[63:1[R1]]
0001742c: when R1 = 0 goto %0001742a
00019856: goto %000174a1

000174a1:
000174a4: R2 := 0x41F000
000174ab: R2 := mem[R2 + 0xFE0, el]:u64
000174b0: when R2 = 0 goto %0001742a
00019857: goto %000174b4

0001742a:
00017432: call R30 with noreturn

000174b4:
000174b8: R16 := R2
000174bd: call R16 with noreturn

00019858: sub safe_add_func_double_f_f(safe_add_func_double_f_f_result)
000199c8: safe_add_func_double_f_f_result :: out u32 = low:32[R0]

00009d8a:
00009d8e: R31 := R31 - 0x10
00009d96: mem := mem with [R31 + 8, el]:u64 <- 63:0[V0]
00009d9e: mem := mem with [R31, el]:u64 <- 63:0[V1]
00009da5: V1 := pad:128[mem[R31 + 8, el]:u64]
00009daa: V0 := 0x3FE0000000000000
00009db3: V2 := pad:128[mem[R31, el]:u64]
00009db8: V0 := 0x3FE0000000000000
00009dc2: V0 := pad:128[62:0[V0]]
00009dc7: R0 := 0x7FDFFFFFFFFFFFFF
00009dcd: V1 := pad:128[R0]
00009dd7: when NF = VF & ~ZF goto %00009dd5
00019859: goto %000133e3

00009dd5:
00009ddf: V0 := pad:128[mem[R31 + 8, el]:u64]
00009de4: goto %00009de2

000133e3:
000133e5: goto %000133d3

000133d3:
000133d8: V1 := pad:128[mem[R31 + 8, el]:u64]
000133df: V0 := pad:128[mem[R31, el]:u64]
0001985a: goto %00009de2

00009de2:
00009de9: R31 := R31 + 0x10
00009dee: call R30 with noreturn

0001985b: sub safe_add_func_float_f_f(safe_add_func_float_f_f_result)
000199c9: safe_add_func_float_f_f_result :: out u32 = low:32[R0]

00009bd1:
00009bd5: R31 := R31 - 0x10
00009bdd: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[V0]
00009be5: mem := mem with [R31 + 8, el]:u32 <- 31:0[V1]
00009bec: V1 := pad:128[mem[R31 + 0xC, el]:u32]
00009bf1: V0 := 0x3F000000
00009bfa: V2 := pad:128[mem[R31 + 8, el]:u32]
00009bff: V0 := 0x3F000000
00009c09: V1 := pad:128[30:0[V0]]
00009c0e: V0 := 0x7EFFFFFF7EFFFFFF
00009c18: when NF = VF & ~ZF goto %00009c16
0001985c: goto %000134a7

00009c16:
00009c20: V0 := pad:128[mem[R31 + 0xC, el]:u32]
00009c25: goto %00009c23

000134a7:
000134a9: goto %00013497

00013497:
0001349c: V1 := pad:128[mem[R31 + 0xC, el]:u32]
000134a3: V0 := pad:128[mem[R31 + 8, el]:u32]
0001985d: goto %00009c23

00009c23:
00009c2a: R31 := R31 + 0x10
00009c2f: call R30 with noreturn

0001985e: sub safe_add_func_int16_t_s_s(safe_add_func_int16_t_s_s_result)
000199ca: safe_add_func_int16_t_s_s_result :: out u32 = low:32[R0]

00008797:
0000879b: R31 := R31 - 0x10
000087a3: mem := mem with [R31 + 0xE, el]:u16 <- 15:0[R0]
000087ab: mem := mem with [R31 + 0xC, el]:u16 <- 15:0[R1]
000087b2: R1 := pad:64[mem[R31 + 0xE, el]:u16]
000087b9: R0 := pad:64[mem[R31 + 0xC, el]:u16]
000087c0: R0 := pad:64[31:0[R1] + 31:0[R0]]
000087c6: R0 := pad:64[15:0[R0]]
000087cc: R0 := pad:64[extend:32[15:0[R0]]]
000087d2: R31 := R31 + 0x10
000087d7: call R30 with noreturn

0001985f: sub safe_add_func_int32_t_s_s(safe_add_func_int32_t_s_s_result)
000199cb: safe_add_func_int32_t_s_s_result :: out u32 = low:32[R0]

00008a57:
00008a5b: R31 := R31 - 0x10
00008a63: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R0]
00008a6b: mem := mem with [R31 + 8, el]:u32 <- 31:0[R1]
00008a72: R0 := pad:64[mem[R31 + 0xC, el]:u32]
00008a77: VF := 0
00008a7a: CF := 1
00008a7e: ZF := 31:0[R0] = 0
00008a82: NF := 31:31[R0]
00008a8a: when ~(NF = VF & ~ZF) goto %00008a88
00019860: goto %0001452e

0001452e:
00014533: R0 := pad:64[mem[R31 + 8, el]:u32]
00014538: VF := 0
0001453b: CF := 1
0001453f: ZF := 31:0[R0] = 0
00014543: NF := 31:31[R0]
0001454a: when ~(NF = VF & ~ZF) goto %00008a88
00019861: goto %0001454e

0001454e:
00014551: R1 := 0x7FFFFFFF
00014558: R0 := pad:64[mem[R31 + 8, el]:u32]
0001455f: R0 := pad:64[31:0[R1] + ~31:0[R0] + 1]
00014566: R1 := pad:64[mem[R31 + 0xC, el]:u32]
0001456c: #298 := ~31:0[R0]
00014571: #299 := 31:0[R1] + ~31:0[R0]
00014577: VF := extend:64[#299 + 1] <> extend:64[31:0[R1]] + extend:64[#298]
          + 1
0001457d: CF := pad:64[#299 + 1] <> pad:64[31:0[R1]] + pad:64[#298] + 1
00014581: ZF := #299 + 1 = 0
00014585: NF := 31:31[#299 + 1]
0001458c: when NF = VF & ~ZF goto %000144c7
00019862: goto %00008a88

00008a88:
00008a92: R0 := pad:64[mem[R31 + 0xC, el]:u32]
00008a97: VF := 0
00008a9a: CF := 1
00008a9e: ZF := 31:0[R0] = 0
00008aa2: NF := 31:31[R0]
00008aa9: when NF = VF goto %00008aa7
00019863: goto %000144ce

000144ce:
000144d3: R0 := pad:64[mem[R31 + 8, el]:u32]
000144d8: VF := 0
000144db: CF := 1
000144df: ZF := 31:0[R0] = 0
000144e3: NF := 31:31[R0]
000144e9: when NF = VF goto %00008aa7
00019864: goto %000144ed

000144ed:
000144f0: R1 := 0x80000000
000144f7: R0 := pad:64[mem[R31 + 8, el]:u32]
000144fe: R0 := pad:64[31:0[R1] + ~31:0[R0] + 1]
00014505: R1 := pad:64[mem[R31 + 0xC, el]:u32]
0001450b: #296 := ~31:0[R0]
00014510: #297 := 31:0[R1] + ~31:0[R0]
00014516: VF := extend:64[#297 + 1] <> extend:64[31:0[R1]] + extend:64[#296]
          + 1
0001451c: CF := pad:64[#297 + 1] <> pad:64[31:0[R1]] + pad:64[#296] + 1
00014520: ZF := #297 + 1 = 0
00014524: NF := 31:31[#297 + 1]
0001452a: when NF <> VF goto %000144c7
00019865: goto %00008aa7

000144c7:
000144cc: R0 := pad:64[mem[R31 + 0xC, el]:u32]
00019866: goto %00008ac2

00008aa7:
00008ab1: R1 := pad:64[mem[R31 + 0xC, el]:u32]
00008ab8: R0 := pad:64[mem[R31 + 8, el]:u32]
00008abf: R0 := pad:64[31:0[R1] + 31:0[R0]]
00008ac4: goto %00008ac2

00008ac2:
00008ac9: R31 := R31 + 0x10
00008ace: call R30 with noreturn

00019867: sub safe_add_func_int64_t_s_s(safe_add_func_int64_t_s_s_result)
000199cc: safe_add_func_int64_t_s_s_result :: out u32 = low:32[R0]

00008e25:
00008e29: R31 := R31 - 0x10
00008e31: mem := mem with [R31 + 8, el]:u64 <- R0
00008e39: mem := mem with [R31, el]:u64 <- R1
00008e40: R0 := mem[R31 + 8, el]:u64
00008e45: VF := 0
00008e48: CF := 1
00008e4c: ZF := R0 = 0
00008e50: NF := 63:63[R0]
00008e58: when ~(NF = VF & ~ZF) goto %00008e56
00019868: goto %00013ff4

00013ff4:
00013ff9: R0 := mem[R31, el]:u64
00013ffe: VF := 0
00014001: CF := 1
00014005: ZF := R0 = 0
00014009: NF := 63:63[R0]
00014010: when ~(NF = VF & ~ZF) goto %00008e56
00019869: goto %00014014

00014014:
00014017: R1 := 0x7FFFFFFFFFFFFFFF
0001401e: R0 := mem[R31, el]:u64
00014025: R0 := R1 + ~R0 + 1
0001402c: R1 := mem[R31 + 8, el]:u64
00014032: #272 := ~R0
00014037: #273 := R1 + ~R0
0001403d: VF := extend:128[#273 + 1] <> extend:128[R1] + extend:128[#272] + 1
00014043: CF := pad:128[#273 + 1] <> pad:128[R1] + pad:128[#272] + 1
00014047: ZF := #273 + 1 = 0
0001404b: NF := 63:63[#273 + 1]
00014052: when NF = VF & ~ZF goto %00013f8d
0001986a: goto %00008e56

00008e56:
00008e60: R0 := mem[R31 + 8, el]:u64
00008e65: VF := 0
00008e68: CF := 1
00008e6c: ZF := R0 = 0
00008e70: NF := 63:63[R0]
00008e77: when NF = VF goto %00008e75
0001986b: goto %00013f94

00013f94:
00013f99: R0 := mem[R31, el]:u64
00013f9e: VF := 0
00013fa1: CF := 1
00013fa5: ZF := R0 = 0
00013fa9: NF := 63:63[R0]
00013faf: when NF = VF goto %00008e75
0001986c: goto %00013fb3

00013fb3:
00013fb6: R1 := 0x8000000000000000
00013fbd: R0 := mem[R31, el]:u64
00013fc4: R0 := R1 + ~R0 + 1
00013fcb: R1 := mem[R31 + 8, el]:u64
00013fd1: #270 := ~R0
00013fd6: #271 := R1 + ~R0
00013fdc: VF := extend:128[#271 + 1] <> extend:128[R1] + extend:128[#270] + 1
00013fe2: CF := pad:128[#271 + 1] <> pad:128[R1] + pad:128[#270] + 1
00013fe6: ZF := #271 + 1 = 0
00013fea: NF := 63:63[#271 + 1]
00013ff0: when NF <> VF goto %00013f8d
0001986d: goto %00008e75

00013f8d:
00013f92: R0 := mem[R31 + 8, el]:u64
0001986e: goto %00008e90

00008e75:
00008e7f: R1 := mem[R31 + 8, el]:u64
00008e86: R0 := mem[R31, el]:u64
00008e8d: R0 := R1 + R0
00008e92: goto %00008e90

00008e90:
00008e97: R31 := R31 + 0x10
00008e9c: call R30 with noreturn

0001986f: sub safe_add_func_int8_t_s_s(safe_add_func_int8_t_s_s_result)
000199cd: safe_add_func_int8_t_s_s_result :: out u32 = low:32[R0]

000084f7:
000084fb: R31 := R31 - 0x10
00008503: mem := mem with [R31 + 0xF] <- 7:0[R0]
0000850b: mem := mem with [R31 + 0xE] <- 7:0[R1]
00008512: R1 := pad:64[mem[R31 + 0xF]]
00008519: R0 := pad:64[mem[R31 + 0xE]]
00008520: R0 := pad:64[31:0[R1] + 31:0[R0]]
00008526: R0 := pad:64[7:0[R0]]
0000852c: R0 := pad:64[extend:32[7:0[R0]]]
00008532: R31 := R31 + 0x10
00008537: call R30 with noreturn

00019870: sub safe_add_func_uint16_t_u_u(safe_add_func_uint16_t_u_u_result)
000199ce: safe_add_func_uint16_t_u_u_result :: out u32 = low:32[R0]

00009465:
00009469: R31 := R31 - 0x10
00009471: mem := mem with [R31 + 0xE, el]:u16 <- 15:0[R0]
00009479: mem := mem with [R31 + 0xC, el]:u16 <- 15:0[R1]
00009480: R0 := pad:64[mem[R31 + 0xE, el]:u16]
00009487: R1 := pad:64[mem[R31 + 0xC, el]:u16]
0000948e: R0 := pad:64[31:0[R0] + 31:0[R1]]
00009494: R0 := pad:64[15:0[R0]]
0000949a: R31 := R31 + 0x10
0000949f: call R30 with noreturn

00019871: sub safe_add_func_uint32_t_u_u(safe_add_func_uint32_t_u_u_result)
000199cf: safe_add_func_uint32_t_u_u_result :: out u32 = low:32[R0]

000096f7:
000096fb: R31 := R31 - 0x10
00009703: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R0]
0000970b: mem := mem with [R31 + 8, el]:u32 <- 31:0[R1]
00009712: R1 := pad:64[mem[R31 + 0xC, el]:u32]
00009719: R0 := pad:64[mem[R31 + 8, el]:u32]
00009720: R0 := pad:64[31:0[R1] + 31:0[R0]]
00009726: R31 := R31 + 0x10
0000972b: call R30 with noreturn

00019872: sub safe_add_func_uint64_t_u_u(safe_add_func_uint64_t_u_u_result)
000199d0: safe_add_func_uint64_t_u_u_result :: out u32 = low:32[R0]

00009977:
0000997b: R31 := R31 - 0x10
00009983: mem := mem with [R31 + 8, el]:u64 <- R0
0000998b: mem := mem with [R31, el]:u64 <- R1
00009992: R1 := mem[R31 + 8, el]:u64
00009999: R0 := mem[R31, el]:u64
000099a0: R0 := R1 + R0
000099a6: R31 := R31 + 0x10
000099ab: call R30 with noreturn

00019873: sub safe_add_func_uint8_t_u_u(safe_add_func_uint8_t_u_u_result)
000199d1: safe_add_func_uint8_t_u_u_result :: out u32 = low:32[R0]

000091cd:
000091d1: R31 := R31 - 0x10
000091d9: mem := mem with [R31 + 0xF] <- 7:0[R0]
000091e1: mem := mem with [R31 + 0xE] <- 7:0[R1]
000091e8: R0 := pad:64[mem[R31 + 0xF]]
000091ef: R1 := pad:64[mem[R31 + 0xE]]
000091f6: R0 := pad:64[31:0[R0] + 31:0[R1]]
000091fc: R0 := pad:64[7:0[R0]]
00009202: R31 := R31 + 0x10
00009207: call R30 with noreturn

00019874: sub safe_convert_func_float_to_int32_t(safe_convert_func_float_to_int32_t_result)
000199d2: safe_convert_func_float_to_int32_t_result :: out u32 = low:32[R0]

00009f4f:
00009f53: R31 := R31 - 0x10
00009f5b: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[V0]
00009f62: V1 := pad:128[mem[R31 + 0xC, el]:u32]
00009f67: V0 := 0xCF000000CF000000
00009f76: when CF & ~ZF goto %00009f6f
00009f77: goto %00009f72

00009f72:
00009f73: R0 := 1
00009f79: goto %00009f75

00009f6f:
00009f70: R0 := 0
00009f78: goto %00009f75

00009f75:
00009f7f: R0 := pad:64[7:0[R0]]
00009f85: R0 := pad:64[31:0[R0] ^ 1]
00009f8b: R0 := pad:64[7:0[R0]]
00009f91: R0 := pad:64[0:0[R0]]
00009f96: VF := 0
00009f99: CF := 1
00009f9d: ZF := 31:0[R0] = 0
00009fa1: NF := 31:31[R0]
00009fa7: when ZF goto %00009fa5
00019875: goto %000132bd

000132bd:
000132c2: V1 := pad:128[mem[R31 + 0xC, el]:u32]
000132c7: V0 := 0x4F0000004F000000
000132d6: when NF <> VF goto %000132cf
000132d7: goto %000132d2

000132d2:
000132d3: R0 := 1
000132d9: goto %000132d5

000132cf:
000132d0: R0 := 0
000132d8: goto %000132d5

000132d5:
000132df: R0 := pad:64[7:0[R0]]
000132e5: R0 := pad:64[31:0[R0] ^ 1]
000132eb: R0 := pad:64[7:0[R0]]
000132f1: R0 := pad:64[0:0[R0]]
000132f6: VF := 0
000132f9: CF := 1
000132fd: ZF := 31:0[R0] = 0
00013301: NF := 31:31[R0]
00013306: when ZF goto %00009fa5
00019876: goto %0001330a

00009fa5:
00009fad: V0 := 0x7FFFFFFF7FFFFFFF
00019877: goto %00009faf

0001330a:
0001330f: V0 := pad:128[mem[R31 + 0xC, el]:u32]
00013315: goto %00009faf

00009faf:
00009fb3: R0 := pad:64[31:0[V0]]
00009fb9: R31 := R31 + 0x10
00009fbe: call R30 with noreturn

00019878: sub safe_div_func_double_f_f(safe_div_func_double_f_f_result)
000199d3: safe_div_func_double_f_f_result :: out u32 = low:32[R0]

00009ec8:
00009ecc: R31 := R31 - 0x10
00009ed4: mem := mem with [R31 + 8, el]:u64 <- 63:0[V0]
00009edc: mem := mem with [R31, el]:u64 <- 63:0[V1]
00009ee3: V0 := pad:128[mem[R31, el]:u64]
00009ee9: V1 := pad:128[62:0[V0]]
00009eee: V0 := 0x3FF0000000000000
00009efc: when NF <> 1 goto %00009ef5
00009efd: goto %00009ef8

00009ef8:
00009ef9: R0 := 1
00009eff: goto %00009efb

00009ef5:
00009ef6: R0 := 0
00009efe: goto %00009efb

00009efb:
00009f05: R0 := pad:64[7:0[R0]]
00009f0b: R0 := pad:64[31:0[R0] ^ 1]
00009f11: R0 := pad:64[7:0[R0]]
00009f17: R0 := pad:64[0:0[R0]]
00009f1c: VF := 0
00009f1f: CF := 1
00009f23: ZF := 31:0[R0] = 0
00009f27: NF := 31:31[R0]
00009f2d: when ZF <> 1 goto %00009f2b
00019879: goto %0001331e

0001331e:
00013323: V0 := pad:128[mem[R31, el]:u64]
0001332a: when ZF goto %00013317
0001987a: goto %0001332e

0001332e:
00013333: V0 := pad:128[mem[R31 + 8, el]:u64]
00013338: R0 := 0x310000000000000
0001333e: V1 := pad:128[R0]
00013347: V0 := pad:128[mem[R31, el]:u64]
0001334c: R0 := 0x4630000000000000
00013352: V2 := pad:128[R0]
0001335c: V0 := pad:128[62:0[V0]]
00013361: R0 := 0x3CCFFFFFFFFFFFFF
00013367: V1 := pad:128[R0]
00013377: when ~(NF = VF & ~ZF) goto %00013370
00013378: goto %00013373

00013373:
00013374: R0 := 1
0001337a: goto %00013376

00013370:
00013371: R0 := 0
00013379: goto %00013376

00013376:
00013380: R0 := pad:64[7:0[R0]]
00013386: R0 := pad:64[31:0[R0] ^ 1]
0001338c: R0 := pad:64[7:0[R0]]
00013392: R0 := pad:64[0:0[R0]]
00013397: VF := 0
0001339a: CF := 1
0001339e: ZF := 31:0[R0] = 0
000133a2: NF := 31:31[R0]
000133a7: when ZF goto %00013317
0001987b: goto %00009f2b

00013317:
0001331c: V0 := pad:128[mem[R31 + 8, el]:u64]
0001987c: goto %00009f41

00009f2b:
00009f35: V0 := pad:128[mem[R31, el]:u64]
00009f3c: V1 := pad:128[mem[R31 + 8, el]:u64]
00009f43: goto %00009f41

00009f41:
00009f48: R31 := R31 + 0x10
00009f4d: call R30 with noreturn

0001987d: sub safe_div_func_float_f_f(safe_div_func_float_f_f_result)
000199d4: safe_div_func_float_f_f_result :: out u32 = low:32[R0]

00009d03:
00009d07: R31 := R31 - 0x10
00009d0f: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[V0]
00009d17: mem := mem with [R31 + 8, el]:u32 <- 31:0[V1]
00009d1e: V0 := pad:128[mem[R31 + 8, el]:u32]
00009d24: V1 := pad:128[30:0[V0]]
00009d29: V0 := 0x3F800000
00009d37: when NF <> 1 goto %00009d30
00009d38: goto %00009d33

00009d33:
00009d34: R0 := 1
00009d3a: goto %00009d36

00009d30:
00009d31: R0 := 0
00009d39: goto %00009d36

00009d36:
00009d40: R0 := pad:64[7:0[R0]]
00009d46: R0 := pad:64[31:0[R0] ^ 1]
00009d4c: R0 := pad:64[7:0[R0]]
00009d52: R0 := pad:64[0:0[R0]]
00009d57: VF := 0
00009d5a: CF := 1
00009d5e: ZF := 31:0[R0] = 0
00009d62: NF := 31:31[R0]
00009d68: when ZF <> 1 goto %00009d66
0001987e: goto %000133ee

000133ee:
000133f3: V0 := pad:128[mem[R31 + 8, el]:u32]
000133fa: when ZF goto %000133e7
0001987f: goto %000133fe

000133fe:
00013403: V1 := pad:128[mem[R31 + 0xC, el]:u32]
00013408: V0 := 0x2700000027000000
00013411: V0 := pad:128[mem[R31 + 8, el]:u32]
00013416: R0 := 0x71800000
0001341c: V2 := pad:128[31:0[R0]]
00013426: V1 := pad:128[30:0[V0]]
0001342b: V0 := 0x34FFFFFF34FFFFFF
0001343b: when ~(NF = VF & ~ZF) goto %00013434
0001343c: goto %00013437

00013437:
00013438: R0 := 1
0001343e: goto %0001343a

00013434:
00013435: R0 := 0
0001343d: goto %0001343a

0001343a:
00013444: R0 := pad:64[7:0[R0]]
0001344a: R0 := pad:64[31:0[R0] ^ 1]
00013450: R0 := pad:64[7:0[R0]]
00013456: R0 := pad:64[0:0[R0]]
0001345b: VF := 0
0001345e: CF := 1
00013462: ZF := 31:0[R0] = 0
00013466: NF := 31:31[R0]
0001346b: when ZF goto %000133e7
00019880: goto %00009d66

000133e7:
000133ec: V0 := pad:128[mem[R31 + 0xC, el]:u32]
00019881: goto %00009d7c

00009d66:
00009d70: V0 := pad:128[mem[R31 + 8, el]:u32]
00009d77: V1 := pad:128[mem[R31 + 0xC, el]:u32]
00009d7e: goto %00009d7c

00009d7c:
00009d83: R31 := R31 + 0x10
00009d88: call R30 with noreturn

00019882: sub safe_div_func_int16_t_s_s(safe_div_func_int16_t_s_s_result)
000199d5: safe_div_func_int16_t_s_s_result :: out u32 = low:32[R0]

000088a3:
000088a7: R31 := R31 - 0x10
000088af: mem := mem with [R31 + 0xE, el]:u16 <- 15:0[R0]
000088b7: mem := mem with [R31 + 0xC, el]:u16 <- 15:0[R1]
000088be: R0 := pad:64[extend:32[mem[R31 + 0xC, el]:u16]]
000088c3: VF := 0
000088c6: CF := 1
000088ca: ZF := 31:0[R0] = 0
000088ce: NF := 31:31[R0]
000088d4: when ZF goto %000088d2
00019883: goto %0001477d

0001477d:
00014782: R0 := pad:64[extend:32[mem[R31 + 0xE, el]:u16]]
00014788: #308 := 31:0[R0] + 0x8000
0001478d: VF := extend:64[#308] <> extend:64[31:0[R0]] + 0x8000
00014792: CF := pad:64[#308] <> pad:64[31:0[R0]] + 0x8000
00014796: ZF := #308 = 0
0001479a: NF := 31:31[#308]
000147a0: when ZF <> 1 goto %0001479e
00019884: goto %000147bd

000147bd:
000147c2: R0 := pad:64[extend:32[mem[R31 + 0xC, el]:u16]]
000147c8: #309 := 31:0[R0] + 1
000147cd: VF := extend:64[#309] <> extend:64[31:0[R0]] + 1
000147d2: CF := pad:64[#309] <> pad:64[31:0[R0]] + 1
000147d6: ZF := #309 = 0
000147da: NF := 31:31[#309]
000147df: when ZF goto %000088d2
00019885: goto %0001479e

000088d2:
000088dc: R0 := pad:64[extend:32[mem[R31 + 0xE, el]:u16]]
00019886: goto %000088de

0001479e:
000147a8: R1 := pad:64[extend:32[mem[R31 + 0xE, el]:u16]]
000147af: R0 := pad:64[extend:32[mem[R31 + 0xC, el]:u16]]
000147b7: R0 := pad:64[extend:32[15:0[R0]]]
000147bb: goto %000088de

000088de:
000088e2: R31 := R31 + 0x10
000088e7: call R30 with noreturn

00019887: sub safe_div_func_int32_t_s_s(safe_div_func_int32_t_s_s_result)
000199d6: safe_div_func_int32_t_s_s_result :: out u32 = low:32[R0]

00008c71:
00008c75: R31 := R31 - 0x10
00008c7d: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R0]
00008c85: mem := mem with [R31 + 8, el]:u32 <- 31:0[R1]
00008c8c: R0 := pad:64[mem[R31 + 8, el]:u32]
00008c91: VF := 0
00008c94: CF := 1
00008c98: ZF := 31:0[R0] = 0
00008c9c: NF := 31:31[R0]
00008ca2: when ZF goto %00008ca0
00019888: goto %0001422b

0001422b:
00014230: R1 := pad:64[mem[R31 + 0xC, el]:u32]
00014235: R0 := 0x80000000
0001423b: #282 := ~31:0[R0]
00014240: #283 := 31:0[R1] + ~31:0[R0]
00014246: VF := extend:64[#283 + 1] <> extend:64[31:0[R1]] + extend:64[#282]
          + 1
0001424c: CF := pad:64[#283 + 1] <> pad:64[31:0[R1]] + pad:64[#282] + 1
00014250: ZF := #283 + 1 = 0
00014254: NF := 31:31[#283 + 1]
0001425a: when ZF <> 1 goto %00014258
00019889: goto %00014271

00014271:
00014276: R0 := pad:64[mem[R31 + 8, el]:u32]
0001427c: #284 := 31:0[R0] + 1
00014281: VF := extend:64[#284] <> extend:64[31:0[R0]] + 1
00014286: CF := pad:64[#284] <> pad:64[31:0[R0]] + 1
0001428a: ZF := #284 = 0
0001428e: NF := 31:31[#284]
00014293: when ZF goto %00008ca0
0001988a: goto %00014258

00008ca0:
00008caa: R0 := pad:64[mem[R31 + 0xC, el]:u32]
0001988b: goto %00008cac

00014258:
00014262: R1 := pad:64[mem[R31 + 0xC, el]:u32]
00014269: R0 := pad:64[mem[R31 + 8, el]:u32]
0001426f: goto %00008cac

00008cac:
00008cb0: R31 := R31 + 0x10
00008cb5: call R30 with noreturn

0001988c: sub safe_div_func_int64_t_s_s(safe_div_func_int64_t_s_s_result)
000199d7: safe_div_func_int64_t_s_s_result :: out u32 = low:32[R0]

0000903f:
00009043: R31 := R31 - 0x10
0000904b: mem := mem with [R31 + 8, el]:u64 <- R0
00009053: mem := mem with [R31, el]:u64 <- R1
0000905a: R0 := mem[R31, el]:u64
0000905f: VF := 0
00009062: CF := 1
00009066: ZF := R0 = 0
0000906a: NF := 63:63[R0]
00009070: when ZF goto %0000906e
0001988d: goto %00013cf1

00013cf1:
00013cf6: R1 := mem[R31 + 8, el]:u64
00013cfb: R0 := 0x8000000000000000
00013d01: #256 := ~R0
00013d06: #257 := R1 + ~R0
00013d0c: VF := extend:128[#257 + 1] <> extend:128[R1] + extend:128[#256] + 1
00013d12: CF := pad:128[#257 + 1] <> pad:128[R1] + pad:128[#256] + 1
00013d16: ZF := #257 + 1 = 0
00013d1a: NF := 63:63[#257 + 1]
00013d20: when ZF <> 1 goto %00013d1e
0001988e: goto %00013d37

00013d37:
00013d3c: R0 := mem[R31, el]:u64
00013d42: #258 := R0 + 1
00013d47: VF := extend:128[#258] <> extend:128[R0] + 1
00013d4c: CF := pad:128[#258] <> pad:128[R0] + 1
00013d50: ZF := #258 = 0
00013d54: NF := 63:63[#258]
00013d59: when ZF goto %0000906e
0001988f: goto %00013d1e

0000906e:
00009078: R0 := mem[R31 + 8, el]:u64
00019890: goto %0000907a

00013d1e:
00013d28: R1 := mem[R31 + 8, el]:u64
00013d2f: R0 := mem[R31, el]:u64
00013d35: goto %0000907a

0000907a:
0000907e: R31 := R31 + 0x10
00009083: call R30 with noreturn

00019891: sub safe_div_func_int8_t_s_s(safe_div_func_int8_t_s_s_result)
000199d8: safe_div_func_int8_t_s_s_result :: out u32 = low:32[R0]

00008603:
00008607: R31 := R31 - 0x10
0000860f: mem := mem with [R31 + 0xF] <- 7:0[R0]
00008617: mem := mem with [R31 + 0xE] <- 7:0[R1]
0000861e: R0 := pad:64[extend:32[mem[R31 + 0xE]]]
00008623: VF := 0
00008626: CF := 1
0000862a: ZF := 31:0[R0] = 0
0000862e: NF := 31:31[R0]
00008634: when ZF goto %00008632
00019892: goto %00014a33

00014a33:
00014a38: R0 := pad:64[extend:32[mem[R31 + 0xF]]]
00014a3e: #320 := 31:0[R0] + 0x80
00014a43: VF := extend:64[#320] <> extend:64[31:0[R0]] + 0x80
00014a48: CF := pad:64[#320] <> pad:64[31:0[R0]] + 0x80
00014a4c: ZF := #320 = 0
00014a50: NF := 31:31[#320]
00014a56: when ZF <> 1 goto %00014a54
00019893: goto %00014a73

00014a73:
00014a78: R0 := pad:64[extend:32[mem[R31 + 0xE]]]
00014a7e: #321 := 31:0[R0] + 1
00014a83: VF := extend:64[#321] <> extend:64[31:0[R0]] + 1
00014a88: CF := pad:64[#321] <> pad:64[31:0[R0]] + 1
00014a8c: ZF := #321 = 0
00014a90: NF := 31:31[#321]
00014a95: when ZF goto %00008632
00019894: goto %00014a54

00008632:
0000863c: R0 := pad:64[extend:32[mem[R31 + 0xF]]]
00019895: goto %0000863e

00014a54:
00014a5e: R1 := pad:64[extend:32[mem[R31 + 0xF]]]
00014a65: R0 := pad:64[extend:32[mem[R31 + 0xE]]]
00014a6d: R0 := pad:64[extend:32[7:0[R0]]]
00014a71: goto %0000863e

0000863e:
00008642: R31 := R31 + 0x10
00008647: call R30 with noreturn

00019896: sub safe_div_func_uint16_t_u_u(safe_div_func_uint16_t_u_u_result)
000199d9: safe_div_func_uint16_t_u_u_result :: out u32 = low:32[R0]

0000955f:
00009563: R31 := R31 - 0x10
0000956b: mem := mem with [R31 + 0xE, el]:u16 <- 15:0[R0]
00009573: mem := mem with [R31 + 0xC, el]:u16 <- 15:0[R1]
0000957a: R0 := pad:64[mem[R31 + 0xC, el]:u16]
0000957f: VF := 0
00009582: CF := 1
00009586: ZF := 31:0[R0] = 0
0000958a: NF := 31:31[R0]
00009590: when ZF goto %0000958e
00019897: goto %0001391d

0000958e:
00009598: R0 := pad:64[mem[R31 + 0xE, el]:u16]
00019898: goto %0000959a

0001391d:
00013922: R1 := pad:64[mem[R31 + 0xE, el]:u16]
00013929: R0 := pad:64[mem[R31 + 0xC, el]:u16]
00013937: when 31:0[R0] = 0 goto %0001392e
00013938: goto %00013933

00013933:
00013934: R0 := pad:64[31:0[pad:64[31:0[R1]] /$ pad:64[31:0[R0]]]]
0001393a: goto %00013936

0001392e:
0001392f: R0 := 0
00013939: goto %00013936

00013936:
00013940: R0 := pad:64[15:0[R0]]
00013944: goto %0000959a

0000959a:
0000959e: R31 := R31 + 0x10
000095a3: call R30 with noreturn

00019899: sub safe_div_func_uint32_t_u_u(safe_div_func_uint32_t_u_u_result)
000199da: safe_div_func_uint32_t_u_u_result :: out u32 = low:32[R0]

000097df:
000097e3: R31 := R31 - 0x10
000097eb: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R0]
000097f3: mem := mem with [R31 + 8, el]:u32 <- 31:0[R1]
000097fa: R0 := pad:64[mem[R31 + 8, el]:u32]
000097ff: VF := 0
00009802: CF := 1
00009806: ZF := 31:0[R0] = 0
0000980a: NF := 31:31[R0]
00009810: when ZF goto %0000980e
0001989a: goto %00013772

0000980e:
00009818: R0 := pad:64[mem[R31 + 0xC, el]:u32]
0001989b: goto %0000981a

00013772:
00013777: R1 := pad:64[mem[R31 + 0xC, el]:u32]
0001377e: R0 := pad:64[mem[R31 + 8, el]:u32]
0001378c: when 31:0[R0] = 0 goto %00013783
0001378d: goto %00013788

00013788:
00013789: R0 := pad:64[31:0[pad:64[31:0[R1]] /$ pad:64[31:0[R0]]]]
0001378f: goto %0001378b

00013783:
00013784: R0 := 0
0001378e: goto %0001378b

0001378b:
00013793: goto %0000981a

0000981a:
0000981e: R31 := R31 + 0x10
00009823: call R30 with noreturn

0001989c: sub safe_div_func_uint64_t_u_u(safe_div_func_uint64_t_u_u_result)
000199db: safe_div_func_uint64_t_u_u_result :: out u32 = low:32[R0]

00009a5f:
00009a63: R31 := R31 - 0x10
00009a6b: mem := mem with [R31 + 8, el]:u64 <- R0
00009a73: mem := mem with [R31, el]:u64 <- R1
00009a7a: R0 := mem[R31, el]:u64
00009a7f: VF := 0
00009a82: CF := 1
00009a86: ZF := R0 = 0
00009a8a: NF := 63:63[R0]
00009a90: when ZF goto %00009a8e
0001989d: goto %000135e1

00009a8e:
00009a98: R0 := mem[R31 + 8, el]:u64
0001989e: goto %00009a9a

000135e1:
000135e6: R1 := mem[R31 + 8, el]:u64
000135ed: R0 := mem[R31, el]:u64
000135fb: when R0 = 0 goto %000135f2
000135fc: goto %000135f7

000135f7:
000135f8: R0 := 63:0[pad:128[R1] /$ pad:128[R0]]
000135fe: goto %000135fa

000135f2:
000135f3: R0 := 0
000135fd: goto %000135fa

000135fa:
00013602: goto %00009a9a

00009a9a:
00009a9e: R31 := R31 + 0x10
00009aa3: call R30 with noreturn

0001989f: sub safe_div_func_uint8_t_u_u(safe_div_func_uint8_t_u_u_result)
000199dc: safe_div_func_uint8_t_u_u_result :: out u32 = low:32[R0]

000092c7:
000092cb: R31 := R31 - 0x10
000092d3: mem := mem with [R31 + 0xF] <- 7:0[R0]
000092db: mem := mem with [R31 + 0xE] <- 7:0[R1]
000092e2: R0 := pad:64[mem[R31 + 0xE]]
000092e7: VF := 0
000092ea: CF := 1
000092ee: ZF := 31:0[R0] = 0
000092f2: NF := 31:31[R0]
000092f8: when ZF goto %000092f6
000198a0: goto %00013acd

000092f6:
00009300: R0 := pad:64[mem[R31 + 0xF]]
000198a1: goto %00009302

00013acd:
00013ad2: R1 := pad:64[mem[R31 + 0xF]]
00013ad9: R0 := pad:64[mem[R31 + 0xE]]
00013ae7: when 31:0[R0] = 0 goto %00013ade
00013ae8: goto %00013ae3

00013ae3:
00013ae4: R0 := pad:64[31:0[pad:64[31:0[R1]] /$ pad:64[31:0[R0]]]]
00013aea: goto %00013ae6

00013ade:
00013adf: R0 := 0
00013ae9: goto %00013ae6

00013ae6:
00013af0: R0 := pad:64[7:0[R0]]
00013af4: goto %00009302

00009302:
00009306: R31 := R31 + 0x10
0000930b: call R30 with noreturn

000198a2: sub safe_lshift_func_int16_t_s_s(safe_lshift_func_int16_t_s_s_result)
000199dd: safe_lshift_func_int16_t_s_s_result :: out u32 = low:32[R0]

000088e9:
000088ed: R31 := R31 - 0x10
000088f5: mem := mem with [R31 + 0xE, el]:u16 <- 15:0[R0]
000088fd: mem := mem with [R31 + 8, el]:u32 <- 31:0[R1]
00008904: R0 := pad:64[extend:32[mem[R31 + 0xE, el]:u16]]
00008909: VF := 0
0000890c: CF := 1
00008910: ZF := 31:0[R0] = 0
00008914: NF := 31:31[R0]
0000891b: when NF <> VF goto %00008919
000198a3: goto %000146d5

000146d5:
000146da: R0 := pad:64[mem[R31 + 8, el]:u32]
000146df: VF := 0
000146e2: CF := 1
000146e6: ZF := 31:0[R0] = 0
000146ea: NF := 31:31[R0]
000146f0: when NF <> VF goto %00008919
000198a4: goto %000146f4

000146f4:
000146f9: R0 := pad:64[mem[R31 + 8, el]:u32]
000146ff: #305 := 31:0[R0] - 0x1F
00014704: VF := extend:64[#305] <> extend:64[31:0[R0]] - 0x1F
00014709: CF := pad:64[#305] <> pad:64[31:0[R0]] + 0xFFFFFFE1
0001470d: ZF := #305 = 0
00014711: NF := 31:31[#305]
00014718: when NF = VF & ~ZF goto %00008919
000198a5: goto %0001471c

0001471c:
00014721: R1 := pad:64[extend:32[mem[R31 + 0xE, el]:u16]]
00014728: R0 := pad:64[mem[R31 + 8, el]:u32]
0001472d: R2 := 0x7FFF
00014734: R0 := pad:64[31:0[R2] ~>> pad:10[4:0[R0]]]
0001473a: #306 := ~31:0[R0]
0001473f: #307 := 31:0[R1] + ~31:0[R0]
00014745: VF := extend:64[#307 + 1] <> extend:64[31:0[R1]] + extend:64[#306]
          + 1
0001474b: CF := pad:64[#307 + 1] <> pad:64[31:0[R1]] + pad:64[#306] + 1
0001474f: ZF := #307 + 1 = 0
00014753: NF := 31:31[#307 + 1]
0001475a: when NF = VF & ~ZF goto %00008919
000198a6: goto %0001475e

00008919:
00008923: R0 := pad:64[extend:32[mem[R31 + 0xE, el]:u16]]
000198a7: goto %00008925

0001475e:
00014763: R1 := pad:64[extend:32[mem[R31 + 0xE, el]:u16]]
0001476a: R0 := pad:64[mem[R31 + 8, el]:u32]
00014771: R0 := pad:64[31:0[R1] << pad:10[4:0[R0]]]
00014777: R0 := pad:64[extend:32[15:0[R0]]]
0001477b: goto %00008925

00008925:
00008929: R31 := R31 + 0x10
0000892e: call R30 with noreturn

000198a8: sub safe_lshift_func_int16_t_s_u(safe_lshift_func_int16_t_s_u_result)
000199de: safe_lshift_func_int16_t_s_u_result :: out u32 = low:32[R0]

00008930:
00008934: R31 := R31 - 0x10
0000893c: mem := mem with [R31 + 0xE, el]:u16 <- 15:0[R0]
00008944: mem := mem with [R31 + 8, el]:u32 <- 31:0[R1]
0000894b: R0 := pad:64[extend:32[mem[R31 + 0xE, el]:u16]]
00008950: VF := 0
00008953: CF := 1
00008957: ZF := 31:0[R0] = 0
0000895b: NF := 31:31[R0]
00008962: when NF <> VF goto %00008960
000198a9: goto %0001464d

0001464d:
00014652: R0 := pad:64[mem[R31 + 8, el]:u32]
00014658: #302 := 31:0[R0] - 0x1F
0001465d: VF := extend:64[#302] <> extend:64[31:0[R0]] - 0x1F
00014662: CF := pad:64[#302] <> pad:64[31:0[R0]] + 0xFFFFFFE1
00014666: ZF := #302 = 0
0001466a: NF := 31:31[#302]
00014670: when CF & ~ZF goto %00008960
000198aa: goto %00014674

00014674:
00014679: R1 := pad:64[extend:32[mem[R31 + 0xE, el]:u16]]
00014680: R0 := pad:64[mem[R31 + 8, el]:u32]
00014685: R2 := 0x7FFF
0001468c: R0 := pad:64[31:0[R2] ~>> pad:10[4:0[R0]]]
00014692: #303 := ~31:0[R0]
00014697: #304 := 31:0[R1] + ~31:0[R0]
0001469d: VF := extend:64[#304 + 1] <> extend:64[31:0[R1]] + extend:64[#303]
          + 1
000146a3: CF := pad:64[#304 + 1] <> pad:64[31:0[R1]] + pad:64[#303] + 1
000146a7: ZF := #304 + 1 = 0
000146ab: NF := 31:31[#304 + 1]
000146b2: when NF = VF & ~ZF goto %00008960
000198ab: goto %000146b6

00008960:
0000896a: R0 := pad:64[extend:32[mem[R31 + 0xE, el]:u16]]
000198ac: goto %0000896c

000146b6:
000146bb: R1 := pad:64[extend:32[mem[R31 + 0xE, el]:u16]]
000146c2: R0 := pad:64[mem[R31 + 8, el]:u32]
000146c9: R0 := pad:64[31:0[R1] << pad:10[4:0[R0]]]
000146cf: R0 := pad:64[extend:32[15:0[R0]]]
000146d3: goto %0000896c

0000896c:
00008970: R31 := R31 + 0x10
00008975: call R30 with noreturn

000198ad: sub safe_lshift_func_int32_t_s_s(safe_lshift_func_int32_t_s_s_result)
000199df: safe_lshift_func_int32_t_s_s_result :: out u32 = low:32[R0]

00008cb7:
00008cbb: R31 := R31 - 0x10
00008cc3: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R0]
00008ccb: mem := mem with [R31 + 8, el]:u32 <- 31:0[R1]
00008cd2: R0 := pad:64[mem[R31 + 0xC, el]:u32]
00008cd7: VF := 0
00008cda: CF := 1
00008cde: ZF := 31:0[R0] = 0
00008ce2: NF := 31:31[R0]
00008ce9: when NF <> VF goto %00008ce7
000198ae: goto %00014189

00014189:
0001418e: R0 := pad:64[mem[R31 + 8, el]:u32]
00014193: VF := 0
00014196: CF := 1
0001419a: ZF := 31:0[R0] = 0
0001419e: NF := 31:31[R0]
000141a4: when NF <> VF goto %00008ce7
000198af: goto %000141a8

000141a8:
000141ad: R0 := pad:64[mem[R31 + 8, el]:u32]
000141b3: #279 := 31:0[R0] - 0x1F
000141b8: VF := extend:64[#279] <> extend:64[31:0[R0]] - 0x1F
000141bd: CF := pad:64[#279] <> pad:64[31:0[R0]] + 0xFFFFFFE1
000141c1: ZF := #279 = 0
000141c5: NF := 31:31[#279]
000141cc: when NF = VF & ~ZF goto %00008ce7
000198b0: goto %000141d0

000141d0:
000141d5: R0 := pad:64[mem[R31 + 8, el]:u32]
000141da: R1 := 0x7FFFFFFF
000141e1: R0 := pad:64[31:0[R1] ~>> pad:10[4:0[R0]]]
000141e8: R1 := pad:64[mem[R31 + 0xC, el]:u32]
000141ee: #280 := ~31:0[R0]
000141f3: #281 := 31:0[R1] + ~31:0[R0]
000141f9: VF := extend:64[#281 + 1] <> extend:64[31:0[R1]] + extend:64[#280]
          + 1
000141ff: CF := pad:64[#281 + 1] <> pad:64[31:0[R1]] + pad:64[#280] + 1
00014203: ZF := #281 + 1 = 0
00014207: NF := 31:31[#281 + 1]
0001420e: when NF = VF & ~ZF goto %00008ce7
000198b1: goto %00014212

00008ce7:
00008cf1: R0 := pad:64[mem[R31 + 0xC, el]:u32]
000198b2: goto %00008cf3

00014212:
00014217: R0 := pad:64[mem[R31 + 8, el]:u32]
0001421e: R1 := pad:64[mem[R31 + 0xC, el]:u32]
00014225: R0 := pad:64[31:0[R1] << pad:10[4:0[R0]]]
00014229: goto %00008cf3

00008cf3:
00008cf7: R31 := R31 + 0x10
00008cfc: call R30 with noreturn

000198b3: sub safe_lshift_func_int32_t_s_u(safe_lshift_func_int32_t_s_u_result)
000199e0: safe_lshift_func_int32_t_s_u_result :: out u32 = low:32[R0]

00008cfe:
00008d02: R31 := R31 - 0x10
00008d0a: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R0]
00008d12: mem := mem with [R31 + 8, el]:u32 <- 31:0[R1]
00008d19: R0 := pad:64[mem[R31 + 0xC, el]:u32]
00008d1e: VF := 0
00008d21: CF := 1
00008d25: ZF := 31:0[R0] = 0
00008d29: NF := 31:31[R0]
00008d30: when NF <> VF goto %00008d2e
000198b4: goto %00014107

00014107:
0001410c: R0 := pad:64[mem[R31 + 8, el]:u32]
00014112: #276 := 31:0[R0] - 0x1F
00014117: VF := extend:64[#276] <> extend:64[31:0[R0]] - 0x1F
0001411c: CF := pad:64[#276] <> pad:64[31:0[R0]] + 0xFFFFFFE1
00014120: ZF := #276 = 0
00014124: NF := 31:31[#276]
0001412a: when CF & ~ZF goto %00008d2e
000198b5: goto %0001412e

0001412e:
00014133: R0 := pad:64[mem[R31 + 8, el]:u32]
00014138: R1 := 0x7FFFFFFF
0001413f: R0 := pad:64[31:0[R1] ~>> pad:10[4:0[R0]]]
00014146: R1 := pad:64[mem[R31 + 0xC, el]:u32]
0001414c: #277 := ~31:0[R0]
00014151: #278 := 31:0[R1] + ~31:0[R0]
00014157: VF := extend:64[#278 + 1] <> extend:64[31:0[R1]] + extend:64[#277]
          + 1
0001415d: CF := pad:64[#278 + 1] <> pad:64[31:0[R1]] + pad:64[#277] + 1
00014161: ZF := #278 + 1 = 0
00014165: NF := 31:31[#278 + 1]
0001416c: when NF = VF & ~ZF goto %00008d2e
000198b6: goto %00014170

00008d2e:
00008d38: R0 := pad:64[mem[R31 + 0xC, el]:u32]
000198b7: goto %00008d3a

00014170:
00014175: R0 := pad:64[mem[R31 + 8, el]:u32]
0001417c: R1 := pad:64[mem[R31 + 0xC, el]:u32]
00014183: R0 := pad:64[31:0[R1] << pad:10[4:0[R0]]]
00014187: goto %00008d3a

00008d3a:
00008d3e: R31 := R31 + 0x10
00008d43: call R30 with noreturn

000198b8: sub safe_lshift_func_int64_t_s_s(safe_lshift_func_int64_t_s_s_result)
000199e1: safe_lshift_func_int64_t_s_s_result :: out u32 = low:32[R0]

00009085:
00009089: R31 := R31 - 0x10
00009091: mem := mem with [R31 + 8, el]:u64 <- R0
00009099: mem := mem with [R31 + 4, el]:u32 <- 31:0[R1]
000090a0: R0 := mem[R31 + 8, el]:u64
000090a5: VF := 0
000090a8: CF := 1
000090ac: ZF := R0 = 0
000090b0: NF := 63:63[R0]
000090b7: when NF <> VF goto %000090b5
000198b9: goto %00013c4f

00013c4f:
00013c54: R0 := pad:64[mem[R31 + 4, el]:u32]
00013c59: VF := 0
00013c5c: CF := 1
00013c60: ZF := 31:0[R0] = 0
00013c64: NF := 31:31[R0]
00013c6a: when NF <> VF goto %000090b5
000198ba: goto %00013c6e

00013c6e:
00013c73: R0 := pad:64[mem[R31 + 4, el]:u32]
00013c79: #253 := 31:0[R0] - 0x1F
00013c7e: VF := extend:64[#253] <> extend:64[31:0[R0]] - 0x1F
00013c83: CF := pad:64[#253] <> pad:64[31:0[R0]] + 0xFFFFFFE1
00013c87: ZF := #253 = 0
00013c8b: NF := 31:31[#253]
00013c92: when NF = VF & ~ZF goto %000090b5
000198bb: goto %00013c96

00013c96:
00013c9b: R0 := pad:64[mem[R31 + 4, el]:u32]
00013ca0: R1 := 0x7FFFFFFFFFFFFFFF
00013ca7: R0 := R1 ~>> pad:12[5:0[R0]]
00013cae: R1 := mem[R31 + 8, el]:u64
00013cb4: #254 := ~R0
00013cb9: #255 := R1 + ~R0
00013cbf: VF := extend:128[#255 + 1] <> extend:128[R1] + extend:128[#254] + 1
00013cc5: CF := pad:128[#255 + 1] <> pad:128[R1] + pad:128[#254] + 1
00013cc9: ZF := #255 + 1 = 0
00013ccd: NF := 63:63[#255 + 1]
00013cd4: when NF = VF & ~ZF goto %000090b5
000198bc: goto %00013cd8

000090b5:
000090bf: R0 := mem[R31 + 8, el]:u64
000198bd: goto %000090c1

00013cd8:
00013cdd: R0 := pad:64[mem[R31 + 4, el]:u32]
00013ce4: R1 := mem[R31 + 8, el]:u64
00013ceb: R0 := R1 << pad:12[5:0[R0]]
00013cef: goto %000090c1

000090c1:
000090c5: R31 := R31 + 0x10
000090ca: call R30 with noreturn

000198be: sub safe_lshift_func_int64_t_s_u(safe_lshift_func_int64_t_s_u_result)
000199e2: safe_lshift_func_int64_t_s_u_result :: out u32 = low:32[R0]

000090cc:
000090d0: R31 := R31 - 0x10
000090d8: mem := mem with [R31 + 8, el]:u64 <- R0
000090e0: mem := mem with [R31 + 4, el]:u32 <- 31:0[R1]
000090e7: R0 := mem[R31 + 8, el]:u64
000090ec: VF := 0
000090ef: CF := 1
000090f3: ZF := R0 = 0
000090f7: NF := 63:63[R0]
000090fe: when NF <> VF goto %000090fc
000198bf: goto %00013bcd

00013bcd:
00013bd2: R0 := pad:64[mem[R31 + 4, el]:u32]
00013bd8: #250 := 31:0[R0] - 0x1F
00013bdd: VF := extend:64[#250] <> extend:64[31:0[R0]] - 0x1F
00013be2: CF := pad:64[#250] <> pad:64[31:0[R0]] + 0xFFFFFFE1
00013be6: ZF := #250 = 0
00013bea: NF := 31:31[#250]
00013bf0: when CF & ~ZF goto %000090fc
000198c0: goto %00013bf4

00013bf4:
00013bf9: R0 := pad:64[mem[R31 + 4, el]:u32]
00013bfe: R1 := 0x7FFFFFFFFFFFFFFF
00013c05: R0 := R1 ~>> pad:12[5:0[R0]]
00013c0c: R1 := mem[R31 + 8, el]:u64
00013c12: #251 := ~R0
00013c17: #252 := R1 + ~R0
00013c1d: VF := extend:128[#252 + 1] <> extend:128[R1] + extend:128[#251] + 1
00013c23: CF := pad:128[#252 + 1] <> pad:128[R1] + pad:128[#251] + 1
00013c27: ZF := #252 + 1 = 0
00013c2b: NF := 63:63[#252 + 1]
00013c32: when NF = VF & ~ZF goto %000090fc
000198c1: goto %00013c36

000090fc:
00009106: R0 := mem[R31 + 8, el]:u64
000198c2: goto %00009108

00013c36:
00013c3b: R0 := pad:64[mem[R31 + 4, el]:u32]
00013c42: R1 := mem[R31 + 8, el]:u64
00013c49: R0 := R1 << pad:12[5:0[R0]]
00013c4d: goto %00009108

00009108:
0000910c: R31 := R31 + 0x10
00009111: call R30 with noreturn

000198c3: sub safe_lshift_func_int8_t_s_s(safe_lshift_func_int8_t_s_s_result)
000199e3: safe_lshift_func_int8_t_s_s_result :: out u32 = low:32[R0]

00008649:
0000864d: R31 := R31 - 0x10
00008655: mem := mem with [R31 + 0xF] <- 7:0[R0]
0000865d: mem := mem with [R31 + 8, el]:u32 <- 31:0[R1]
00008664: R0 := pad:64[extend:32[mem[R31 + 0xF]]]
00008669: VF := 0
0000866c: CF := 1
00008670: ZF := 31:0[R0] = 0
00008674: NF := 31:31[R0]
0000867b: when NF <> VF goto %00008679
000198c4: goto %0001498b

0001498b:
00014990: R0 := pad:64[mem[R31 + 8, el]:u32]
00014995: VF := 0
00014998: CF := 1
0001499c: ZF := 31:0[R0] = 0
000149a0: NF := 31:31[R0]
000149a6: when NF <> VF goto %00008679
000198c5: goto %000149aa

000149aa:
000149af: R0 := pad:64[mem[R31 + 8, el]:u32]
000149b5: #317 := 31:0[R0] - 0x1F
000149ba: VF := extend:64[#317] <> extend:64[31:0[R0]] - 0x1F
000149bf: CF := pad:64[#317] <> pad:64[31:0[R0]] + 0xFFFFFFE1
000149c3: ZF := #317 = 0
000149c7: NF := 31:31[#317]
000149ce: when NF = VF & ~ZF goto %00008679
000198c6: goto %000149d2

000149d2:
000149d7: R1 := pad:64[extend:32[mem[R31 + 0xF]]]
000149de: R0 := pad:64[mem[R31 + 8, el]:u32]
000149e3: R2 := 0x7F
000149ea: R0 := pad:64[31:0[R2] ~>> pad:10[4:0[R0]]]
000149f0: #318 := ~31:0[R0]
000149f5: #319 := 31:0[R1] + ~31:0[R0]
000149fb: VF := extend:64[#319 + 1] <> extend:64[31:0[R1]] + extend:64[#318]
          + 1
00014a01: CF := pad:64[#319 + 1] <> pad:64[31:0[R1]] + pad:64[#318] + 1
00014a05: ZF := #319 + 1 = 0
00014a09: NF := 31:31[#319 + 1]
00014a10: when NF = VF & ~ZF goto %00008679
000198c7: goto %00014a14

00008679:
00008683: R0 := pad:64[extend:32[mem[R31 + 0xF]]]
000198c8: goto %00008685

00014a14:
00014a19: R1 := pad:64[extend:32[mem[R31 + 0xF]]]
00014a20: R0 := pad:64[mem[R31 + 8, el]:u32]
00014a27: R0 := pad:64[31:0[R1] << pad:10[4:0[R0]]]
00014a2d: R0 := pad:64[extend:32[7:0[R0]]]
00014a31: goto %00008685

00008685:
00008689: R31 := R31 + 0x10
0000868e: call R30 with noreturn

000198c9: sub safe_lshift_func_int8_t_s_u(safe_lshift_func_int8_t_s_u_result)
000199e4: safe_lshift_func_int8_t_s_u_result :: out u32 = low:32[R0]

00008690:
00008694: R31 := R31 - 0x10
0000869c: mem := mem with [R31 + 0xF] <- 7:0[R0]
000086a4: mem := mem with [R31 + 8, el]:u32 <- 31:0[R1]
000086ab: R0 := pad:64[extend:32[mem[R31 + 0xF]]]
000086b0: VF := 0
000086b3: CF := 1
000086b7: ZF := 31:0[R0] = 0
000086bb: NF := 31:31[R0]
000086c2: when NF <> VF goto %000086c0
000198ca: goto %00014903

00014903:
00014908: R0 := pad:64[mem[R31 + 8, el]:u32]
0001490e: #314 := 31:0[R0] - 0x1F
00014913: VF := extend:64[#314] <> extend:64[31:0[R0]] - 0x1F
00014918: CF := pad:64[#314] <> pad:64[31:0[R0]] + 0xFFFFFFE1
0001491c: ZF := #314 = 0
00014920: NF := 31:31[#314]
00014926: when CF & ~ZF goto %000086c0
000198cb: goto %0001492a

0001492a:
0001492f: R1 := pad:64[extend:32[mem[R31 + 0xF]]]
00014936: R0 := pad:64[mem[R31 + 8, el]:u32]
0001493b: R2 := 0x7F
00014942: R0 := pad:64[31:0[R2] ~>> pad:10[4:0[R0]]]
00014948: #315 := ~31:0[R0]
0001494d: #316 := 31:0[R1] + ~31:0[R0]
00014953: VF := extend:64[#316 + 1] <> extend:64[31:0[R1]] + extend:64[#315]
          + 1
00014959: CF := pad:64[#316 + 1] <> pad:64[31:0[R1]] + pad:64[#315] + 1
0001495d: ZF := #316 + 1 = 0
00014961: NF := 31:31[#316 + 1]
00014968: when NF = VF & ~ZF goto %000086c0
000198cc: goto %0001496c

000086c0:
000086ca: R0 := pad:64[extend:32[mem[R31 + 0xF]]]
000198cd: goto %000086cc

0001496c:
00014971: R1 := pad:64[extend:32[mem[R31 + 0xF]]]
00014978: R0 := pad:64[mem[R31 + 8, el]:u32]
0001497f: R0 := pad:64[31:0[R1] << pad:10[4:0[R0]]]
00014985: R0 := pad:64[extend:32[7:0[R0]]]
00014989: goto %000086cc

000086cc:
000086d0: R31 := R31 + 0x10
000086d5: call R30 with noreturn

000198ce: sub safe_lshift_func_uint16_t_u_s(safe_lshift_func_uint16_t_u_s_result)
000199e5: safe_lshift_func_uint16_t_u_s_result :: out u32 = low:32[R0]

000095a5:
000095a9: R31 := R31 - 0x10
000095b1: mem := mem with [R31 + 0xE, el]:u16 <- 15:0[R0]
000095b9: mem := mem with [R31 + 8, el]:u32 <- 31:0[R1]
000095c0: R0 := pad:64[mem[R31 + 8, el]:u32]
000095c5: VF := 0
000095c8: CF := 1
000095cc: ZF := 31:0[R0] = 0
000095d0: NF := 31:31[R0]
000095d7: when NF <> VF goto %000095d5
000198cf: goto %00013894

00013894:
00013899: R0 := pad:64[mem[R31 + 8, el]:u32]
0001389f: #239 := 31:0[R0] - 0x1F
000138a4: VF := extend:64[#239] <> extend:64[31:0[R0]] - 0x1F
000138a9: CF := pad:64[#239] <> pad:64[31:0[R0]] + 0xFFFFFFE1
000138ad: ZF := #239 = 0
000138b1: NF := 31:31[#239]
000138b8: when NF = VF & ~ZF goto %000095d5
000198d0: goto %000138bc

000138bc:
000138c1: R1 := pad:64[mem[R31 + 0xE, el]:u16]
000138c8: R0 := pad:64[mem[R31 + 8, el]:u32]
000138cd: R2 := 0xFFFF
000138d4: R0 := pad:64[31:0[R2] ~>> pad:10[4:0[R0]]]
000138da: #240 := ~31:0[R0]
000138df: #241 := 31:0[R1] + ~31:0[R0]
000138e5: VF := extend:64[#241 + 1] <> extend:64[31:0[R1]] + extend:64[#240]
          + 1
000138eb: CF := pad:64[#241 + 1] <> pad:64[31:0[R1]] + pad:64[#240] + 1
000138ef: ZF := #241 + 1 = 0
000138f3: NF := 31:31[#241 + 1]
000138fa: when NF = VF & ~ZF goto %000095d5
000198d1: goto %000138fe

000095d5:
000095df: R0 := pad:64[mem[R31 + 0xE, el]:u16]
000198d2: goto %000095e1

000138fe:
00013903: R1 := pad:64[mem[R31 + 0xE, el]:u16]
0001390a: R0 := pad:64[mem[R31 + 8, el]:u32]
00013911: R0 := pad:64[31:0[R1] << pad:10[4:0[R0]]]
00013917: R0 := pad:64[15:0[R0]]
0001391b: goto %000095e1

000095e1:
000095e5: R31 := R31 + 0x10
000095ea: call R30 with noreturn

000198d3: sub safe_lshift_func_uint16_t_u_u(safe_lshift_func_uint16_t_u_u_result)
000199e6: safe_lshift_func_uint16_t_u_u_result :: out u32 = low:32[R0]

000095ec:
000095f0: R31 := R31 - 0x10
000095f8: mem := mem with [R31 + 0xE, el]:u16 <- 15:0[R0]
00009600: mem := mem with [R31 + 8, el]:u32 <- 31:0[R1]
00009607: R0 := pad:64[mem[R31 + 8, el]:u32]
0000960d: #10 := 31:0[R0] - 0x1F
00009612: VF := extend:64[#10] <> extend:64[31:0[R0]] - 0x1F
00009617: CF := pad:64[#10] <> pad:64[31:0[R0]] + 0xFFFFFFE1
0000961b: ZF := #10 = 0
0000961f: NF := 31:31[#10]
00009626: when CF & ~ZF goto %00009624
000198d4: goto %00013833

00013833:
00013838: R1 := pad:64[mem[R31 + 0xE, el]:u16]
0001383f: R0 := pad:64[mem[R31 + 8, el]:u32]
00013844: R2 := 0xFFFF
0001384b: R0 := pad:64[31:0[R2] ~>> pad:10[4:0[R0]]]
00013851: #237 := ~31:0[R0]
00013856: #238 := 31:0[R1] + ~31:0[R0]
0001385c: VF := extend:64[#238 + 1] <> extend:64[31:0[R1]] + extend:64[#237]
          + 1
00013862: CF := pad:64[#238 + 1] <> pad:64[31:0[R1]] + pad:64[#237] + 1
00013866: ZF := #238 + 1 = 0
0001386a: NF := 31:31[#238 + 1]
00013871: when NF = VF & ~ZF goto %00009624
000198d5: goto %00013875

00009624:
0000962e: R0 := pad:64[mem[R31 + 0xE, el]:u16]
000198d6: goto %00009630

00013875:
0001387a: R1 := pad:64[mem[R31 + 0xE, el]:u16]
00013881: R0 := pad:64[mem[R31 + 8, el]:u32]
00013888: R0 := pad:64[31:0[R1] << pad:10[4:0[R0]]]
0001388e: R0 := pad:64[15:0[R0]]
00013892: goto %00009630

00009630:
00009634: R31 := R31 + 0x10
00009639: call R30 with noreturn

000198d7: sub safe_lshift_func_uint32_t_u_s(safe_lshift_func_uint32_t_u_s_result)
000199e7: safe_lshift_func_uint32_t_u_s_result :: out u32 = low:32[R0]

00009825:
00009829: R31 := R31 - 0x10
00009831: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R0]
00009839: mem := mem with [R31 + 8, el]:u32 <- 31:0[R1]
00009840: R0 := pad:64[mem[R31 + 8, el]:u32]
00009845: VF := 0
00009848: CF := 1
0000984c: ZF := 31:0[R0] = 0
00009850: NF := 31:31[R0]
00009857: when NF <> VF goto %00009855
000198d8: goto %000136f0

000136f0:
000136f5: R0 := pad:64[mem[R31 + 8, el]:u32]
000136fb: #233 := 31:0[R0] - 0x1F
00013700: VF := extend:64[#233] <> extend:64[31:0[R0]] - 0x1F
00013705: CF := pad:64[#233] <> pad:64[31:0[R0]] + 0xFFFFFFE1
00013709: ZF := #233 = 0
0001370d: NF := 31:31[#233]
00013714: when NF = VF & ~ZF goto %00009855
000198d9: goto %00013718

00013718:
0001371d: R0 := pad:64[mem[R31 + 8, el]:u32]
00013722: R1 := 0xFFFFFFFF
00013729: R0 := pad:64[31:0[R1] >> pad:10[4:0[R0]]]
00013730: R1 := pad:64[mem[R31 + 0xC, el]:u32]
00013736: #234 := ~31:0[R0]
0001373b: #235 := 31:0[R1] + ~31:0[R0]
00013741: VF := extend:64[#235 + 1] <> extend:64[31:0[R1]] + extend:64[#234]
          + 1
00013747: CF := pad:64[#235 + 1] <> pad:64[31:0[R1]] + pad:64[#234] + 1
0001374b: ZF := #235 + 1 = 0
0001374f: NF := 31:31[#235 + 1]
00013755: when CF & ~ZF goto %00009855
000198da: goto %00013759

00009855:
0000985f: R0 := pad:64[mem[R31 + 0xC, el]:u32]
000198db: goto %00009861

00013759:
0001375e: R0 := pad:64[mem[R31 + 8, el]:u32]
00013765: R1 := pad:64[mem[R31 + 0xC, el]:u32]
0001376c: R0 := pad:64[31:0[R1] << pad:10[4:0[R0]]]
00013770: goto %00009861

00009861:
00009865: R31 := R31 + 0x10
0000986a: call R30 with noreturn

000198dc: sub safe_lshift_func_uint32_t_u_u(safe_lshift_func_uint32_t_u_u_result)
000199e8: safe_lshift_func_uint32_t_u_u_result :: out u32 = low:32[R0]

0000986c:
00009870: R31 := R31 - 0x10
00009878: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R0]
00009880: mem := mem with [R31 + 8, el]:u32 <- 31:0[R1]
00009887: R0 := pad:64[mem[R31 + 8, el]:u32]
0000988d: #12 := 31:0[R0] - 0x1F
00009892: VF := extend:64[#12] <> extend:64[31:0[R0]] - 0x1F
00009897: CF := pad:64[#12] <> pad:64[31:0[R0]] + 0xFFFFFFE1
0000989b: ZF := #12 = 0
0000989f: NF := 31:31[#12]
000098a6: when CF & ~ZF goto %000098a4
000198dd: goto %00013696

00013696:
0001369b: R0 := pad:64[mem[R31 + 8, el]:u32]
000136a0: R1 := 0xFFFFFFFF
000136a7: R0 := pad:64[31:0[R1] >> pad:10[4:0[R0]]]
000136ae: R1 := pad:64[mem[R31 + 0xC, el]:u32]
000136b4: #231 := ~31:0[R0]
000136b9: #232 := 31:0[R1] + ~31:0[R0]
000136bf: VF := extend:64[#232 + 1] <> extend:64[31:0[R1]] + extend:64[#231]
          + 1
000136c5: CF := pad:64[#232 + 1] <> pad:64[31:0[R1]] + pad:64[#231] + 1
000136c9: ZF := #232 + 1 = 0
000136cd: NF := 31:31[#232 + 1]
000136d3: when CF & ~ZF goto %000098a4
000198de: goto %000136d7

000098a4:
000098ae: R0 := pad:64[mem[R31 + 0xC, el]:u32]
000198df: goto %000098b0

000136d7:
000136dc: R0 := pad:64[mem[R31 + 8, el]:u32]
000136e3: R1 := pad:64[mem[R31 + 0xC, el]:u32]
000136ea: R0 := pad:64[31:0[R1] << pad:10[4:0[R0]]]
000136ee: goto %000098b0

000098b0:
000098b4: R31 := R31 + 0x10
000098b9: call R30 with noreturn

000198e0: sub safe_lshift_func_uint64_t_u_s(safe_lshift_func_uint64_t_u_s_result)
000199e9: safe_lshift_func_uint64_t_u_s_result :: out u32 = low:32[R0]

00009aa5:
00009aa9: R31 := R31 - 0x10
00009ab1: mem := mem with [R31 + 8, el]:u64 <- R0
00009ab9: mem := mem with [R31 + 4, el]:u32 <- 31:0[R1]
00009ac0: R0 := pad:64[mem[R31 + 4, el]:u32]
00009ac5: VF := 0
00009ac8: CF := 1
00009acc: ZF := 31:0[R0] = 0
00009ad0: NF := 31:31[R0]
00009ad7: when NF <> VF goto %00009ad5
000198e1: goto %0001355f

0001355f:
00013564: R0 := pad:64[mem[R31 + 4, el]:u32]
0001356a: #227 := 31:0[R0] - 0x1F
0001356f: VF := extend:64[#227] <> extend:64[31:0[R0]] - 0x1F
00013574: CF := pad:64[#227] <> pad:64[31:0[R0]] + 0xFFFFFFE1
00013578: ZF := #227 = 0
0001357c: NF := 31:31[#227]
00013583: when NF = VF & ~ZF goto %00009ad5
000198e2: goto %00013587

00013587:
0001358c: R0 := pad:64[mem[R31 + 4, el]:u32]
00013591: R1 := 0xFFFFFFFFFFFFFFFF
00013598: R0 := R1 >> pad:12[5:0[R0]]
0001359f: R1 := mem[R31 + 8, el]:u64
000135a5: #228 := ~R0
000135aa: #229 := R1 + ~R0
000135b0: VF := extend:128[#229 + 1] <> extend:128[R1] + extend:128[#228] + 1
000135b6: CF := pad:128[#229 + 1] <> pad:128[R1] + pad:128[#228] + 1
000135ba: ZF := #229 + 1 = 0
000135be: NF := 63:63[#229 + 1]
000135c4: when CF & ~ZF goto %00009ad5
000198e3: goto %000135c8

00009ad5:
00009adf: R0 := mem[R31 + 8, el]:u64
000198e4: goto %00009ae1

000135c8:
000135cd: R0 := pad:64[mem[R31 + 4, el]:u32]
000135d4: R1 := mem[R31 + 8, el]:u64
000135db: R0 := R1 << pad:12[5:0[R0]]
000135df: goto %00009ae1

00009ae1:
00009ae5: R31 := R31 + 0x10
00009aea: call R30 with noreturn

000198e5: sub safe_lshift_func_uint64_t_u_u(safe_lshift_func_uint64_t_u_u_result)
000199ea: safe_lshift_func_uint64_t_u_u_result :: out u32 = low:32[R0]

00009aec:
00009af0: R31 := R31 - 0x10
00009af8: mem := mem with [R31 + 8, el]:u64 <- R0
00009b00: mem := mem with [R31 + 4, el]:u32 <- 31:0[R1]
00009b07: R0 := pad:64[mem[R31 + 4, el]:u32]
00009b0d: #14 := 31:0[R0] - 0x1F
00009b12: VF := extend:64[#14] <> extend:64[31:0[R0]] - 0x1F
00009b17: CF := pad:64[#14] <> pad:64[31:0[R0]] + 0xFFFFFFE1
00009b1b: ZF := #14 = 0
00009b1f: NF := 31:31[#14]
00009b26: when CF & ~ZF goto %00009b24
000198e6: goto %00013505

00013505:
0001350a: R0 := pad:64[mem[R31 + 4, el]:u32]
0001350f: R1 := 0xFFFFFFFFFFFFFFFF
00013516: R0 := R1 >> pad:12[5:0[R0]]
0001351d: R1 := mem[R31 + 8, el]:u64
00013523: #225 := ~R0
00013528: #226 := R1 + ~R0
0001352e: VF := extend:128[#226 + 1] <> extend:128[R1] + extend:128[#225] + 1
00013534: CF := pad:128[#226 + 1] <> pad:128[R1] + pad:128[#225] + 1
00013538: ZF := #226 + 1 = 0
0001353c: NF := 63:63[#226 + 1]
00013542: when CF & ~ZF goto %00009b24
000198e7: goto %00013546

00009b24:
00009b2e: R0 := mem[R31 + 8, el]:u64
000198e8: goto %00009b30

00013546:
0001354b: R0 := pad:64[mem[R31 + 4, el]:u32]
00013552: R1 := mem[R31 + 8, el]:u64
00013559: R0 := R1 << pad:12[5:0[R0]]
0001355d: goto %00009b30

00009b30:
00009b34: R31 := R31 + 0x10
00009b39: call R30 with noreturn

000198e9: sub safe_lshift_func_uint8_t_u_s(safe_lshift_func_uint8_t_u_s_result)
000199eb: safe_lshift_func_uint8_t_u_s_result :: out u32 = low:32[R0]

0000930d:
00009311: R31 := R31 - 0x10
00009319: mem := mem with [R31 + 0xF] <- 7:0[R0]
00009321: mem := mem with [R31 + 8, el]:u32 <- 31:0[R1]
00009328: R0 := pad:64[mem[R31 + 8, el]:u32]
0000932d: VF := 0
00009330: CF := 1
00009334: ZF := 31:0[R0] = 0
00009338: NF := 31:31[R0]
0000933f: when NF <> VF goto %0000933d
000198ea: goto %00013a44

00013a44:
00013a49: R0 := pad:64[mem[R31 + 8, el]:u32]
00013a4f: #245 := 31:0[R0] - 0x1F
00013a54: VF := extend:64[#245] <> extend:64[31:0[R0]] - 0x1F
00013a59: CF := pad:64[#245] <> pad:64[31:0[R0]] + 0xFFFFFFE1
00013a5d: ZF := #245 = 0
00013a61: NF := 31:31[#245]
00013a68: when NF = VF & ~ZF goto %0000933d
000198eb: goto %00013a6c

00013a6c:
00013a71: R1 := pad:64[mem[R31 + 0xF]]
00013a78: R0 := pad:64[mem[R31 + 8, el]:u32]
00013a7d: R2 := 0xFF
00013a84: R0 := pad:64[31:0[R2] ~>> pad:10[4:0[R0]]]
00013a8a: #246 := ~31:0[R0]
00013a8f: #247 := 31:0[R1] + ~31:0[R0]
00013a95: VF := extend:64[#247 + 1] <> extend:64[31:0[R1]] + extend:64[#246]
          + 1
00013a9b: CF := pad:64[#247 + 1] <> pad:64[31:0[R1]] + pad:64[#246] + 1
00013a9f: ZF := #247 + 1 = 0
00013aa3: NF := 31:31[#247 + 1]
00013aaa: when NF = VF & ~ZF goto %0000933d
000198ec: goto %00013aae

0000933d:
00009347: R0 := pad:64[mem[R31 + 0xF]]
000198ed: goto %00009349

00013aae:
00013ab3: R1 := pad:64[mem[R31 + 0xF]]
00013aba: R0 := pad:64[mem[R31 + 8, el]:u32]
00013ac1: R0 := pad:64[31:0[R1] << pad:10[4:0[R0]]]
00013ac7: R0 := pad:64[7:0[R0]]
00013acb: goto %00009349

00009349:
0000934d: R31 := R31 + 0x10
00009352: call R30 with noreturn

000198ee: sub safe_lshift_func_uint8_t_u_u(safe_lshift_func_uint8_t_u_u_result)
000199ec: safe_lshift_func_uint8_t_u_u_result :: out u32 = low:32[R0]

00009354:
00009358: R31 := R31 - 0x10
00009360: mem := mem with [R31 + 0xF] <- 7:0[R0]
00009368: mem := mem with [R31 + 8, el]:u32 <- 31:0[R1]
0000936f: R0 := pad:64[mem[R31 + 8, el]:u32]
00009375: #8 := 31:0[R0] - 0x1F
0000937a: VF := extend:64[#8] <> extend:64[31:0[R0]] - 0x1F
0000937f: CF := pad:64[#8] <> pad:64[31:0[R0]] + 0xFFFFFFE1
00009383: ZF := #8 = 0
00009387: NF := 31:31[#8]
0000938e: when CF & ~ZF goto %0000938c
000198ef: goto %000139e3

000139e3:
000139e8: R1 := pad:64[mem[R31 + 0xF]]
000139ef: R0 := pad:64[mem[R31 + 8, el]:u32]
000139f4: R2 := 0xFF
000139fb: R0 := pad:64[31:0[R2] ~>> pad:10[4:0[R0]]]
00013a01: #243 := ~31:0[R0]
00013a06: #244 := 31:0[R1] + ~31:0[R0]
00013a0c: VF := extend:64[#244 + 1] <> extend:64[31:0[R1]] + extend:64[#243]
          + 1
00013a12: CF := pad:64[#244 + 1] <> pad:64[31:0[R1]] + pad:64[#243] + 1
00013a16: ZF := #244 + 1 = 0
00013a1a: NF := 31:31[#244 + 1]
00013a21: when NF = VF & ~ZF goto %0000938c
000198f0: goto %00013a25

0000938c:
00009396: R0 := pad:64[mem[R31 + 0xF]]
000198f1: goto %00009398

00013a25:
00013a2a: R1 := pad:64[mem[R31 + 0xF]]
00013a31: R0 := pad:64[mem[R31 + 8, el]:u32]
00013a38: R0 := pad:64[31:0[R1] << pad:10[4:0[R0]]]
00013a3e: R0 := pad:64[7:0[R0]]
00013a42: goto %00009398

00009398:
0000939c: R31 := R31 + 0x10
000093a1: call R30 with noreturn

000198f2: sub safe_mod_func_int16_t_s_s(safe_mod_func_int16_t_s_s_result)
000199ed: safe_mod_func_int16_t_s_s_result :: out u32 = low:32[R0]

0000885d:
00008861: R31 := R31 - 0x10
00008869: mem := mem with [R31 + 0xE, el]:u16 <- 15:0[R0]
00008871: mem := mem with [R31 + 0xC, el]:u16 <- 15:0[R1]
00008878: R0 := pad:64[extend:32[mem[R31 + 0xC, el]:u16]]
0000887d: VF := 0
00008880: CF := 1
00008884: ZF := 31:0[R0] = 0
00008888: NF := 31:31[R0]
0000888e: when ZF goto %0000888c
000198f3: goto %000147e3

000147e3:
000147e8: R0 := pad:64[extend:32[mem[R31 + 0xE, el]:u16]]
000147ee: #310 := 31:0[R0] + 0x8000
000147f3: VF := extend:64[#310] <> extend:64[31:0[R0]] + 0x8000
000147f8: CF := pad:64[#310] <> pad:64[31:0[R0]] + 0x8000
000147fc: ZF := #310 = 0
00014800: NF := 31:31[#310]
00014806: when ZF <> 1 goto %00014804
000198f4: goto %00014831

00014831:
00014836: R0 := pad:64[extend:32[mem[R31 + 0xC, el]:u16]]
0001483c: #311 := 31:0[R0] + 1
00014841: VF := extend:64[#311] <> extend:64[31:0[R0]] + 1
00014846: CF := pad:64[#311] <> pad:64[31:0[R0]] + 1
0001484a: ZF := #311 = 0
0001484e: NF := 31:31[#311]
00014853: when ZF goto %0000888c
000198f5: goto %00014804

0000888c:
00008896: R0 := pad:64[extend:32[mem[R31 + 0xE, el]:u16]]
000198f6: goto %00008898

00014804:
0001480e: R0 := pad:64[extend:32[mem[R31 + 0xE, el]:u16]]
00014815: R1 := pad:64[extend:32[mem[R31 + 0xC, el]:u16]]
0001481e: R1 := pad:64[31:0[R2] * 31:0[R1]]
00014825: R0 := pad:64[31:0[R0] + ~31:0[R1] + 1]
0001482b: R0 := pad:64[extend:32[15:0[R0]]]
0001482f: goto %00008898

00008898:
0000889c: R31 := R31 + 0x10
000088a1: call R30 with noreturn

000198f7: sub safe_mod_func_int32_t_s_s(safe_mod_func_int32_t_s_s_result)
000199ee: safe_mod_func_int32_t_s_s_result :: out u32 = low:32[R0]

00008c2b:
00008c2f: R31 := R31 - 0x10
00008c37: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R0]
00008c3f: mem := mem with [R31 + 8, el]:u32 <- 31:0[R1]
00008c46: R0 := pad:64[mem[R31 + 8, el]:u32]
00008c4b: VF := 0
00008c4e: CF := 1
00008c52: ZF := 31:0[R0] = 0
00008c56: NF := 31:31[R0]
00008c5c: when ZF goto %00008c5a
000198f8: goto %00014297

00014297:
0001429c: R1 := pad:64[mem[R31 + 0xC, el]:u32]
000142a1: R0 := 0x80000000
000142a7: #285 := ~31:0[R0]
000142ac: #286 := 31:0[R1] + ~31:0[R0]
000142b2: VF := extend:64[#286 + 1] <> extend:64[31:0[R1]] + extend:64[#285]
          + 1
000142b8: CF := pad:64[#286 + 1] <> pad:64[31:0[R1]] + pad:64[#285] + 1
000142bc: ZF := #286 + 1 = 0
000142c0: NF := 31:31[#286 + 1]
000142c6: when ZF <> 1 goto %000142c4
000198f9: goto %000142f2

000142f2:
000142f7: R0 := pad:64[mem[R31 + 8, el]:u32]
000142fd: #287 := 31:0[R0] + 1
00014302: VF := extend:64[#287] <> extend:64[31:0[R0]] + 1
00014307: CF := pad:64[#287] <> pad:64[31:0[R0]] + 1
0001430b: ZF := #287 = 0
0001430f: NF := 31:31[#287]
00014314: when ZF goto %00008c5a
000198fa: goto %000142c4

00008c5a:
00008c64: R0 := pad:64[mem[R31 + 0xC, el]:u32]
000198fb: goto %00008c66

000142c4:
000142ce: R0 := pad:64[mem[R31 + 0xC, el]:u32]
000142d5: R1 := pad:64[mem[R31 + 8, el]:u32]
000142de: R1 := pad:64[mem[R31 + 8, el]:u32]
000142e5: R1 := pad:64[31:0[R2] * 31:0[R1]]
000142ec: R0 := pad:64[31:0[R0] + ~31:0[R1] + 1]
000142f0: goto %00008c66

00008c66:
00008c6a: R31 := R31 + 0x10
00008c6f: call R30 with noreturn

000198fc: sub safe_mod_func_int64_t_s_s(safe_mod_func_int64_t_s_s_result)
000199ef: safe_mod_func_int64_t_s_s_result :: out u32 = low:32[R0]

00008ff9:
00008ffd: R31 := R31 - 0x10
00009005: mem := mem with [R31 + 8, el]:u64 <- R0
0000900d: mem := mem with [R31, el]:u64 <- R1
00009014: R0 := mem[R31, el]:u64
00009019: VF := 0
0000901c: CF := 1
00009020: ZF := R0 = 0
00009024: NF := 63:63[R0]
0000902a: when ZF goto %00009028
000198fd: goto %00013d5d

00013d5d:
00013d62: R1 := mem[R31 + 8, el]:u64
00013d67: R0 := 0x8000000000000000
00013d6d: #259 := ~R0
00013d72: #260 := R1 + ~R0
00013d78: VF := extend:128[#260 + 1] <> extend:128[R1] + extend:128[#259] + 1
00013d7e: CF := pad:128[#260 + 1] <> pad:128[R1] + pad:128[#259] + 1
00013d82: ZF := #260 + 1 = 0
00013d86: NF := 63:63[#260 + 1]
00013d8c: when ZF <> 1 goto %00013d8a
000198fe: goto %00013db8

00013db8:
00013dbd: R0 := mem[R31, el]:u64
00013dc3: #261 := R0 + 1
00013dc8: VF := extend:128[#261] <> extend:128[R0] + 1
00013dcd: CF := pad:128[#261] <> pad:128[R0] + 1
00013dd1: ZF := #261 = 0
00013dd5: NF := 63:63[#261]
00013dda: when ZF goto %00009028
000198ff: goto %00013d8a

00009028:
00009032: R0 := mem[R31 + 8, el]:u64
00019900: goto %00009034

00013d8a:
00013d94: R0 := mem[R31 + 8, el]:u64
00013d9b: R1 := mem[R31, el]:u64
00013da4: R1 := mem[R31, el]:u64
00013dab: R1 := R2 * R1
00013db2: R0 := R0 + ~R1 + 1
00013db6: goto %00009034

00009034:
00009038: R31 := R31 + 0x10
0000903d: call R30 with noreturn

00019901: sub safe_mod_func_int8_t_s_s(safe_mod_func_int8_t_s_s_result)
000199f0: safe_mod_func_int8_t_s_s_result :: out u32 = low:32[R0]

000085bd:
000085c1: R31 := R31 - 0x10
000085c9: mem := mem with [R31 + 0xF] <- 7:0[R0]
000085d1: mem := mem with [R31 + 0xE] <- 7:0[R1]
000085d8: R0 := pad:64[extend:32[mem[R31 + 0xE]]]
000085dd: VF := 0
000085e0: CF := 1
000085e4: ZF := 31:0[R0] = 0
000085e8: NF := 31:31[R0]
000085ee: when ZF goto %000085ec
00019902: goto %00014a99

00014a99:
00014a9e: R0 := pad:64[extend:32[mem[R31 + 0xF]]]
00014aa4: #322 := 31:0[R0] + 0x80
00014aa9: VF := extend:64[#322] <> extend:64[31:0[R0]] + 0x80
00014aae: CF := pad:64[#322] <> pad:64[31:0[R0]] + 0x80
00014ab2: ZF := #322 = 0
00014ab6: NF := 31:31[#322]
00014abc: when ZF <> 1 goto %00014aba
00019903: goto %00014ae7

00014ae7:
00014aec: R0 := pad:64[extend:32[mem[R31 + 0xE]]]
00014af2: #323 := 31:0[R0] + 1
00014af7: VF := extend:64[#323] <> extend:64[31:0[R0]] + 1
00014afc: CF := pad:64[#323] <> pad:64[31:0[R0]] + 1
00014b00: ZF := #323 = 0
00014b04: NF := 31:31[#323]
00014b09: when ZF goto %000085ec
00019904: goto %00014aba

000085ec:
000085f6: R0 := pad:64[extend:32[mem[R31 + 0xF]]]
00019905: goto %000085f8

00014aba:
00014ac4: R0 := pad:64[extend:32[mem[R31 + 0xF]]]
00014acb: R1 := pad:64[extend:32[mem[R31 + 0xE]]]
00014ad4: R1 := pad:64[31:0[R2] * 31:0[R1]]
00014adb: R0 := pad:64[31:0[R0] + ~31:0[R1] + 1]
00014ae1: R0 := pad:64[extend:32[7:0[R0]]]
00014ae5: goto %000085f8

000085f8:
000085fc: R31 := R31 + 0x10
00008601: call R30 with noreturn

00019906: sub safe_mod_func_uint16_t_u_u(safe_mod_func_uint16_t_u_u_result)
000199f1: safe_mod_func_uint16_t_u_u_result :: out u32 = low:32[R0]

00009519:
0000951d: R31 := R31 - 0x10
00009525: mem := mem with [R31 + 0xE, el]:u16 <- 15:0[R0]
0000952d: mem := mem with [R31 + 0xC, el]:u16 <- 15:0[R1]
00009534: R0 := pad:64[mem[R31 + 0xC, el]:u16]
00009539: VF := 0
0000953c: CF := 1
00009540: ZF := 31:0[R0] = 0
00009544: NF := 31:31[R0]
0000954a: when ZF goto %00009548
00019907: goto %00013946

00009548:
00009552: R0 := pad:64[mem[R31 + 0xE, el]:u16]
00019908: goto %00009554

00013946:
0001394b: R0 := pad:64[mem[R31 + 0xE, el]:u16]
00013952: R1 := pad:64[mem[R31 + 0xC, el]:u16]
00013960: when 31:0[R1] = 0 goto %00013957
00013961: goto %0001395c

0001395c:
0001395d: R2 := pad:64[31:0[pad:64[31:0[R0]] /$ pad:64[31:0[R1]]]]
00013963: goto %0001395f

00013957:
00013958: R2 := 0
00013962: goto %0001395f

0001395f:
0001396a: R1 := pad:64[31:0[R2] * 31:0[R1]]
00013971: R0 := pad:64[31:0[R0] + ~31:0[R1] + 1]
00013977: R0 := pad:64[15:0[R0]]
0001397b: goto %00009554

00009554:
00009558: R31 := R31 + 0x10
0000955d: call R30 with noreturn

00019909: sub safe_mod_func_uint32_t_u_u(safe_mod_func_uint32_t_u_u_result)
000199f2: safe_mod_func_uint32_t_u_u_result :: out u32 = low:32[R0]

00009799:
0000979d: R31 := R31 - 0x10
000097a5: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R0]
000097ad: mem := mem with [R31 + 8, el]:u32 <- 31:0[R1]
000097b4: R0 := pad:64[mem[R31 + 8, el]:u32]
000097b9: VF := 0
000097bc: CF := 1
000097c0: ZF := 31:0[R0] = 0
000097c4: NF := 31:31[R0]
000097ca: when ZF goto %000097c8
0001990a: goto %00013795

000097c8:
000097d2: R0 := pad:64[mem[R31 + 0xC, el]:u32]
0001990b: goto %000097d4

00013795:
0001379a: R0 := pad:64[mem[R31 + 0xC, el]:u32]
000137a1: R1 := pad:64[mem[R31 + 8, el]:u32]
000137af: when 31:0[R1] = 0 goto %000137a6
000137b0: goto %000137ab

000137ab:
000137ac: R2 := pad:64[31:0[pad:64[31:0[R0]] /$ pad:64[31:0[R1]]]]
000137b2: goto %000137ae

000137a6:
000137a7: R2 := 0
000137b1: goto %000137ae

000137ae:
000137b9: R1 := pad:64[mem[R31 + 8, el]:u32]
000137c0: R1 := pad:64[31:0[R2] * 31:0[R1]]
000137c7: R0 := pad:64[31:0[R0] + ~31:0[R1] + 1]
000137cb: goto %000097d4

000097d4:
000097d8: R31 := R31 + 0x10
000097dd: call R30 with noreturn

0001990c: sub safe_mod_func_uint64_t_u_u(safe_mod_func_uint64_t_u_u_result)
000199f3: safe_mod_func_uint64_t_u_u_result :: out u32 = low:32[R0]

00009a19:
00009a1d: R31 := R31 - 0x10
00009a25: mem := mem with [R31 + 8, el]:u64 <- R0
00009a2d: mem := mem with [R31, el]:u64 <- R1
00009a34: R0 := mem[R31, el]:u64
00009a39: VF := 0
00009a3c: CF := 1
00009a40: ZF := R0 = 0
00009a44: NF := 63:63[R0]
00009a4a: when ZF goto %00009a48
0001990d: goto %00013604

00009a48:
00009a52: R0 := mem[R31 + 8, el]:u64
0001990e: goto %00009a54

00013604:
00013609: R0 := mem[R31 + 8, el]:u64
00013610: R1 := mem[R31, el]:u64
0001361e: when R1 = 0 goto %00013615
0001361f: goto %0001361a

0001361a:
0001361b: R2 := 63:0[pad:128[R0] /$ pad:128[R1]]
00013621: goto %0001361d

00013615:
00013616: R2 := 0
00013620: goto %0001361d

0001361d:
00013628: R1 := mem[R31, el]:u64
0001362f: R1 := R2 * R1
00013636: R0 := R0 + ~R1 + 1
0001363a: goto %00009a54

00009a54:
00009a58: R31 := R31 + 0x10
00009a5d: call R30 with noreturn

0001990f: sub safe_mod_func_uint8_t_u_u(safe_mod_func_uint8_t_u_u_result)
000199f4: safe_mod_func_uint8_t_u_u_result :: out u32 = low:32[R0]

00009281:
00009285: R31 := R31 - 0x10
0000928d: mem := mem with [R31 + 0xF] <- 7:0[R0]
00009295: mem := mem with [R31 + 0xE] <- 7:0[R1]
0000929c: R0 := pad:64[mem[R31 + 0xE]]
000092a1: VF := 0
000092a4: CF := 1
000092a8: ZF := 31:0[R0] = 0
000092ac: NF := 31:31[R0]
000092b2: when ZF goto %000092b0
00019910: goto %00013af6

000092b0:
000092ba: R0 := pad:64[mem[R31 + 0xF]]
00019911: goto %000092bc

00013af6:
00013afb: R0 := pad:64[mem[R31 + 0xF]]
00013b02: R1 := pad:64[mem[R31 + 0xE]]
00013b10: when 31:0[R1] = 0 goto %00013b07
00013b11: goto %00013b0c

00013b0c:
00013b0d: R2 := pad:64[31:0[pad:64[31:0[R0]] /$ pad:64[31:0[R1]]]]
00013b13: goto %00013b0f

00013b07:
00013b08: R2 := 0
00013b12: goto %00013b0f

00013b0f:
00013b1a: R1 := pad:64[31:0[R2] * 31:0[R1]]
00013b21: R0 := pad:64[31:0[R0] + ~31:0[R1] + 1]
00013b27: R0 := pad:64[7:0[R0]]
00013b2b: goto %000092bc

000092bc:
000092c0: R31 := R31 + 0x10
000092c5: call R30 with noreturn

00019912: sub safe_mul_func_double_f_f(safe_mul_func_double_f_f_result)
000199f5: safe_mul_func_double_f_f_result :: out u32 = low:32[R0]

00009e56:
00009e5a: R31 := R31 - 0x10
00009e62: mem := mem with [R31 + 8, el]:u64 <- 63:0[V0]
00009e6a: mem := mem with [R31, el]:u64 <- 63:0[V1]
00009e71: V0 := pad:128[mem[R31 + 8, el]:u64]
00009e76: R0 := 0x39B0000000000000
00009e7c: V1 := pad:128[R0]
00009e85: V0 := pad:128[mem[R31, el]:u64]
00009e8a: R0 := 0x630000000000000
00009e90: V2 := pad:128[R0]
00009e9a: V0 := pad:128[62:0[V0]]
00009e9f: R0 := 0x3FEFFFFFFFFFFFFF
00009ea5: V1 := pad:128[R0]
00009eaf: when NF = VF & ~ZF goto %00009ead
00019913: goto %000133bb

00009ead:
00009eb7: V0 := pad:128[mem[R31 + 8, el]:u64]
00009ebc: goto %00009eba

000133bb:
000133bd: goto %000133ab

000133ab:
000133b0: V1 := pad:128[mem[R31 + 8, el]:u64]
000133b7: V0 := pad:128[mem[R31, el]:u64]
00019914: goto %00009eba

00009eba:
00009ec1: R31 := R31 + 0x10
00009ec6: call R30 with noreturn

00019915: sub safe_mul_func_float_f_f(safe_mul_func_float_f_f_result)
000199f6: safe_mul_func_float_f_f_result :: out u32 = low:32[R0]

00009c91:
00009c95: R31 := R31 - 0x10
00009c9d: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[V0]
00009ca5: mem := mem with [R31 + 8, el]:u32 <- 31:0[V1]
00009cac: V0 := pad:128[mem[R31 + 0xC, el]:u32]
00009cb1: R0 := 0xD800000
00009cb7: V1 := pad:128[31:0[R0]]
00009cc0: V0 := pad:128[mem[R31 + 8, el]:u32]
00009cc5: R0 := 0x31800000
00009ccb: V2 := pad:128[31:0[R0]]
00009cd5: V0 := pad:128[30:0[V0]]
00009cda: R0 := 0x3F7FFFFF
00009ce0: V1 := pad:128[31:0[R0]]
00009cea: when NF = VF & ~ZF goto %00009ce8
00019916: goto %0001347f

00009ce8:
00009cf2: V0 := pad:128[mem[R31 + 0xC, el]:u32]
00009cf7: goto %00009cf5

0001347f:
00013481: goto %0001346f

0001346f:
00013474: V1 := pad:128[mem[R31 + 0xC, el]:u32]
0001347b: V0 := pad:128[mem[R31 + 8, el]:u32]
00019917: goto %00009cf5

00009cf5:
00009cfc: R31 := R31 + 0x10
00009d01: call R30 with noreturn

00019918: sub safe_mul_func_int16_t_s_s(safe_mul_func_int16_t_s_s_result)
000199f7: safe_mul_func_int16_t_s_s_result :: out u32 = low:32[R0]

0000881b:
0000881f: R31 := R31 - 0x10
00008827: mem := mem with [R31 + 0xE, el]:u16 <- 15:0[R0]
0000882f: mem := mem with [R31 + 0xC, el]:u16 <- 15:0[R1]
00008836: R1 := pad:64[mem[R31 + 0xE, el]:u16]
0000883d: R0 := pad:64[mem[R31 + 0xC, el]:u16]
00008844: R0 := pad:64[31:0[R1] * 31:0[R0]]
0000884a: R0 := pad:64[15:0[R0]]
00008850: R0 := pad:64[extend:32[15:0[R0]]]
00008856: R31 := R31 + 0x10
0000885b: call R30 with noreturn

00019919: sub safe_mul_func_int32_t_s_s(safe_mul_func_int32_t_s_s_result)
000199f8: safe_mul_func_int32_t_s_s_result :: out u32 = low:32[R0]

00008b71:
00008b75: R31 := R31 - 0x10
00008b7d: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R0]
00008b85: mem := mem with [R31 + 8, el]:u32 <- 31:0[R1]
00008b8c: R0 := pad:64[mem[R31 + 0xC, el]:u32]
00008b91: VF := 0
00008b94: CF := 1
00008b98: ZF := 31:0[R0] = 0
00008b9c: NF := 31:31[R0]
00008ba4: when ~(NF = VF & ~ZF) goto %00008ba2
0001991a: goto %00014451

00014451:
00014456: R0 := pad:64[mem[R31 + 8, el]:u32]
0001445b: VF := 0
0001445e: CF := 1
00014462: ZF := 31:0[R0] = 0
00014466: NF := 31:31[R0]
0001446d: when ~(NF = VF & ~ZF) goto %00008ba2
0001991b: goto %00014471

00014471:
00014474: R1 := 0x7FFFFFFF
0001447b: R0 := pad:64[mem[R31 + 8, el]:u32]
00014484: R1 := pad:64[mem[R31 + 0xC, el]:u32]
0001448a: #294 := ~31:0[R0]
0001448f: #295 := 31:0[R1] + ~31:0[R0]
00014495: VF := extend:64[#295 + 1] <> extend:64[31:0[R1]] + extend:64[#294]
          + 1
0001449b: CF := pad:64[#295 + 1] <> pad:64[31:0[R1]] + pad:64[#294] + 1
0001449f: ZF := #295 + 1 = 0
000144a3: NF := 31:31[#295 + 1]
000144aa: when NF = VF & ~ZF goto %00014318
0001991c: goto %00008ba2

00008ba2:
00008bac: R0 := pad:64[mem[R31 + 0xC, el]:u32]
00008bb1: VF := 0
00008bb4: CF := 1
00008bb8: ZF := 31:0[R0] = 0
00008bbc: NF := 31:31[R0]
00008bc4: when ~(NF = VF & ~ZF) goto %00008bc2
0001991d: goto %000143f5

000143f5:
000143fa: R0 := pad:64[mem[R31 + 8, el]:u32]
000143ff: VF := 0
00014402: CF := 1
00014406: ZF := 31:0[R0] = 0
0001440a: NF := 31:31[R0]
00014411: when NF = VF & ~ZF goto %00008bc2
0001991e: goto %00014415

00014415:
00014418: R1 := 0x80000000
0001441f: R0 := pad:64[mem[R31 + 0xC, el]:u32]
00014428: R1 := pad:64[mem[R31 + 8, el]:u32]
0001442e: #292 := ~31:0[R0]
00014433: #293 := 31:0[R1] + ~31:0[R0]
00014439: VF := extend:64[#293 + 1] <> extend:64[31:0[R1]] + extend:64[#292]
          + 1
0001443f: CF := pad:64[#293 + 1] <> pad:64[31:0[R1]] + pad:64[#292] + 1
00014443: ZF := #293 + 1 = 0
00014447: NF := 31:31[#293 + 1]
0001444d: when NF <> VF goto %00014318
0001991f: goto %00008bc2

00008bc2:
00008bcc: R0 := pad:64[mem[R31 + 0xC, el]:u32]
00008bd1: VF := 0
00008bd4: CF := 1
00008bd8: ZF := 31:0[R0] = 0
00008bdc: NF := 31:31[R0]
00008be4: when NF = VF & ~ZF goto %00008be2
00019920: goto %00014399

00014399:
0001439e: R0 := pad:64[mem[R31 + 8, el]:u32]
000143a3: VF := 0
000143a6: CF := 1
000143aa: ZF := 31:0[R0] = 0
000143ae: NF := 31:31[R0]
000143b5: when ~(NF = VF & ~ZF) goto %00008be2
00019921: goto %000143b9

000143b9:
000143bc: R1 := 0x80000000
000143c3: R0 := pad:64[mem[R31 + 8, el]:u32]
000143cc: R1 := pad:64[mem[R31 + 0xC, el]:u32]
000143d2: #290 := ~31:0[R0]
000143d7: #291 := 31:0[R1] + ~31:0[R0]
000143dd: VF := extend:64[#291 + 1] <> extend:64[31:0[R1]] + extend:64[#290]
          + 1
000143e3: CF := pad:64[#291 + 1] <> pad:64[31:0[R1]] + pad:64[#290] + 1
000143e7: ZF := #291 + 1 = 0
000143eb: NF := 31:31[#291 + 1]
000143f1: when NF <> VF goto %00014318
00019922: goto %00008be2

00008be2:
00008bec: R0 := pad:64[mem[R31 + 0xC, el]:u32]
00008bf1: VF := 0
00008bf4: CF := 1
00008bf8: ZF := 31:0[R0] = 0
00008bfc: NF := 31:31[R0]
00008c04: when NF = VF & ~ZF goto %00008c02
00019923: goto %0001431f

0001431f:
00014324: R0 := pad:64[mem[R31 + 8, el]:u32]
00014329: VF := 0
0001432c: CF := 1
00014330: ZF := 31:0[R0] = 0
00014334: NF := 31:31[R0]
0001433b: when NF = VF & ~ZF goto %00008c02
00019924: goto %0001433f

0001433f:
00014344: R0 := pad:64[mem[R31 + 0xC, el]:u32]
00014349: VF := 0
0001434c: CF := 1
00014350: ZF := 31:0[R0] = 0
00014354: NF := 31:31[R0]
00014359: when ZF goto %00008c02
00019925: goto %0001435d

0001435d:
00014360: R1 := 0x7FFFFFFF
00014367: R0 := pad:64[mem[R31 + 0xC, el]:u32]
00014370: R1 := pad:64[mem[R31 + 8, el]:u32]
00014376: #288 := ~31:0[R0]
0001437b: #289 := 31:0[R1] + ~31:0[R0]
00014381: VF := extend:64[#289 + 1] <> extend:64[31:0[R1]] + extend:64[#288]
          + 1
00014387: CF := pad:64[#289 + 1] <> pad:64[31:0[R1]] + pad:64[#288] + 1
0001438b: ZF := #289 + 1 = 0
0001438f: NF := 31:31[#289 + 1]
00014395: when NF <> VF goto %00014318
00019926: goto %00008c02

00014318:
0001431d: R0 := pad:64[mem[R31 + 0xC, el]:u32]
00019927: goto %00008c1d

00008c02:
00008c0c: R1 := pad:64[mem[R31 + 0xC, el]:u32]
00008c13: R0 := pad:64[mem[R31 + 8, el]:u32]
00008c1a: R0 := pad:64[31:0[R1] * 31:0[R0]]
00008c1f: goto %00008c1d

00008c1d:
00008c24: R31 := R31 + 0x10
00008c29: call R30 with noreturn

00019928: sub safe_mul_func_int64_t_s_s(safe_mul_func_int64_t_s_s_result)
000199f9: safe_mul_func_int64_t_s_s_result :: out u32 = low:32[R0]

00008f3f:
00008f43: R31 := R31 - 0x10
00008f4b: mem := mem with [R31 + 8, el]:u64 <- R0
00008f53: mem := mem with [R31, el]:u64 <- R1
00008f5a: R0 := mem[R31 + 8, el]:u64
00008f5f: VF := 0
00008f62: CF := 1
00008f66: ZF := R0 = 0
00008f6a: NF := 63:63[R0]
00008f72: when ~(NF = VF & ~ZF) goto %00008f70
00019929: goto %00013f17

00013f17:
00013f1c: R0 := mem[R31, el]:u64
00013f21: VF := 0
00013f24: CF := 1
00013f28: ZF := R0 = 0
00013f2c: NF := 63:63[R0]
00013f33: when ~(NF = VF & ~ZF) goto %00008f70
0001992a: goto %00013f37

00013f37:
00013f3a: R1 := 0x7FFFFFFFFFFFFFFF
00013f41: R0 := mem[R31, el]:u64
00013f4a: R1 := mem[R31 + 8, el]:u64
00013f50: #268 := ~R0
00013f55: #269 := R1 + ~R0
00013f5b: VF := extend:128[#269 + 1] <> extend:128[R1] + extend:128[#268] + 1
00013f61: CF := pad:128[#269 + 1] <> pad:128[R1] + pad:128[#268] + 1
00013f65: ZF := #269 + 1 = 0
00013f69: NF := 63:63[#269 + 1]
00013f70: when NF = VF & ~ZF goto %00013dde
0001992b: goto %00008f70

00008f70:
00008f7a: R0 := mem[R31 + 8, el]:u64
00008f7f: VF := 0
00008f82: CF := 1
00008f86: ZF := R0 = 0
00008f8a: NF := 63:63[R0]
00008f92: when ~(NF = VF & ~ZF) goto %00008f90
0001992c: goto %00013ebb

00013ebb:
00013ec0: R0 := mem[R31, el]:u64
00013ec5: VF := 0
00013ec8: CF := 1
00013ecc: ZF := R0 = 0
00013ed0: NF := 63:63[R0]
00013ed7: when NF = VF & ~ZF goto %00008f90
0001992d: goto %00013edb

00013edb:
00013ede: R1 := 0x8000000000000000
00013ee5: R0 := mem[R31 + 8, el]:u64
00013eee: R1 := mem[R31, el]:u64
00013ef4: #266 := ~R0
00013ef9: #267 := R1 + ~R0
00013eff: VF := extend:128[#267 + 1] <> extend:128[R1] + extend:128[#266] + 1
00013f05: CF := pad:128[#267 + 1] <> pad:128[R1] + pad:128[#266] + 1
00013f09: ZF := #267 + 1 = 0
00013f0d: NF := 63:63[#267 + 1]
00013f13: when NF <> VF goto %00013dde
0001992e: goto %00008f90

00008f90:
00008f9a: R0 := mem[R31 + 8, el]:u64
00008f9f: VF := 0
00008fa2: CF := 1
00008fa6: ZF := R0 = 0
00008faa: NF := 63:63[R0]
00008fb2: when NF = VF & ~ZF goto %00008fb0
0001992f: goto %00013e5f

00013e5f:
00013e64: R0 := mem[R31, el]:u64
00013e69: VF := 0
00013e6c: CF := 1
00013e70: ZF := R0 = 0
00013e74: NF := 63:63[R0]
00013e7b: when ~(NF = VF & ~ZF) goto %00008fb0
00019930: goto %00013e7f

00013e7f:
00013e82: R1 := 0x8000000000000000
00013e89: R0 := mem[R31, el]:u64
00013e92: R1 := mem[R31 + 8, el]:u64
00013e98: #264 := ~R0
00013e9d: #265 := R1 + ~R0
00013ea3: VF := extend:128[#265 + 1] <> extend:128[R1] + extend:128[#264] + 1
00013ea9: CF := pad:128[#265 + 1] <> pad:128[R1] + pad:128[#264] + 1
00013ead: ZF := #265 + 1 = 0
00013eb1: NF := 63:63[#265 + 1]
00013eb7: when NF <> VF goto %00013dde
00019931: goto %00008fb0

00008fb0:
00008fba: R0 := mem[R31 + 8, el]:u64
00008fbf: VF := 0
00008fc2: CF := 1
00008fc6: ZF := R0 = 0
00008fca: NF := 63:63[R0]
00008fd2: when NF = VF & ~ZF goto %00008fd0
00019932: goto %00013de5

00013de5:
00013dea: R0 := mem[R31, el]:u64
00013def: VF := 0
00013df2: CF := 1
00013df6: ZF := R0 = 0
00013dfa: NF := 63:63[R0]
00013e01: when NF = VF & ~ZF goto %00008fd0
00019933: goto %00013e05

00013e05:
00013e0a: R0 := mem[R31 + 8, el]:u64
00013e0f: VF := 0
00013e12: CF := 1
00013e16: ZF := R0 = 0
00013e1a: NF := 63:63[R0]
00013e1f: when ZF goto %00008fd0
00019934: goto %00013e23

00013e23:
00013e26: R1 := 0x7FFFFFFFFFFFFFFF
00013e2d: R0 := mem[R31 + 8, el]:u64
00013e36: R1 := mem[R31, el]:u64
00013e3c: #262 := ~R0
00013e41: #263 := R1 + ~R0
00013e47: VF := extend:128[#263 + 1] <> extend:128[R1] + extend:128[#262] + 1
00013e4d: CF := pad:128[#263 + 1] <> pad:128[R1] + pad:128[#262] + 1
00013e51: ZF := #263 + 1 = 0
00013e55: NF := 63:63[#263 + 1]
00013e5b: when NF <> VF goto %00013dde
00019935: goto %00008fd0

00013dde:
00013de3: R0 := mem[R31 + 8, el]:u64
00019936: goto %00008feb

00008fd0:
00008fda: R1 := mem[R31 + 8, el]:u64
00008fe1: R0 := mem[R31, el]:u64
00008fe8: R0 := R1 * R0
00008fed: goto %00008feb

00008feb:
00008ff2: R31 := R31 + 0x10
00008ff7: call R30 with noreturn

00019937: sub safe_mul_func_int8_t_s_s(safe_mul_func_int8_t_s_s_result)
000199fa: safe_mul_func_int8_t_s_s_result :: out u32 = low:32[R0]

0000857b:
0000857f: R31 := R31 - 0x10
00008587: mem := mem with [R31 + 0xF] <- 7:0[R0]
0000858f: mem := mem with [R31 + 0xE] <- 7:0[R1]
00008596: R1 := pad:64[mem[R31 + 0xF]]
0000859d: R0 := pad:64[mem[R31 + 0xE]]
000085a4: R0 := pad:64[31:0[R1] * 31:0[R0]]
000085aa: R0 := pad:64[7:0[R0]]
000085b0: R0 := pad:64[extend:32[7:0[R0]]]
000085b6: R31 := R31 + 0x10
000085bb: call R30 with noreturn

00019938: sub safe_mul_func_uint16_t_u_u(safe_mul_func_uint16_t_u_u_result)
000199fb: safe_mul_func_uint16_t_u_u_result :: out u32 = low:32[R0]

000094dd:
000094e1: R31 := R31 - 0x10
000094e9: mem := mem with [R31 + 0xE, el]:u16 <- 15:0[R0]
000094f1: mem := mem with [R31 + 0xC, el]:u16 <- 15:0[R1]
000094f8: R1 := pad:64[mem[R31 + 0xE, el]:u16]
000094ff: R0 := pad:64[mem[R31 + 0xC, el]:u16]
00009506: R0 := pad:64[31:0[R1] * 31:0[R0]]
0000950c: R0 := pad:64[15:0[R0]]
00009512: R31 := R31 + 0x10
00009517: call R30 with noreturn

00019939: sub safe_mul_func_uint32_t_u_u(safe_mul_func_uint32_t_u_u_result)
000199fc: safe_mul_func_uint32_t_u_u_result :: out u32 = low:32[R0]

00009763:
00009767: R31 := R31 - 0x10
0000976f: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R0]
00009777: mem := mem with [R31 + 8, el]:u32 <- 31:0[R1]
0000977e: R1 := pad:64[mem[R31 + 0xC, el]:u32]
00009785: R0 := pad:64[mem[R31 + 8, el]:u32]
0000978c: R0 := pad:64[31:0[R1] * 31:0[R0]]
00009792: R31 := R31 + 0x10
00009797: call R30 with noreturn

0001993a: sub safe_mul_func_uint64_t_u_u(safe_mul_func_uint64_t_u_u_result)
000199fd: safe_mul_func_uint64_t_u_u_result :: out u32 = low:32[R0]

000099e3:
000099e7: R31 := R31 - 0x10
000099ef: mem := mem with [R31 + 8, el]:u64 <- R0
000099f7: mem := mem with [R31, el]:u64 <- R1
000099fe: R1 := mem[R31 + 8, el]:u64
00009a05: R0 := mem[R31, el]:u64
00009a0c: R0 := R1 * R0
00009a12: R31 := R31 + 0x10
00009a17: call R30 with noreturn

0001993b: sub safe_mul_func_uint8_t_u_u(safe_mul_func_uint8_t_u_u_result)
000199fe: safe_mul_func_uint8_t_u_u_result :: out u32 = low:32[R0]

00009245:
00009249: R31 := R31 - 0x10
00009251: mem := mem with [R31 + 0xF] <- 7:0[R0]
00009259: mem := mem with [R31 + 0xE] <- 7:0[R1]
00009260: R1 := pad:64[mem[R31 + 0xF]]
00009267: R0 := pad:64[mem[R31 + 0xE]]
0000926e: R0 := pad:64[31:0[R1] * 31:0[R0]]
00009274: R0 := pad:64[7:0[R0]]
0000927a: R31 := R31 + 0x10
0000927f: call R30 with noreturn

0001993c: sub safe_rshift_func_int16_t_s_s(safe_rshift_func_int16_t_s_s_result)
000199ff: safe_rshift_func_int16_t_s_s_result :: out u32 = low:32[R0]

00008977:
0000897b: R31 := R31 - 0x10
00008983: mem := mem with [R31 + 0xE, el]:u16 <- 15:0[R0]
0000898b: mem := mem with [R31 + 8, el]:u32 <- 31:0[R1]
00008992: R0 := pad:64[extend:32[mem[R31 + 0xE, el]:u16]]
00008997: VF := 0
0000899a: CF := 1
0000899e: ZF := 31:0[R0] = 0
000089a2: NF := 31:31[R0]
000089a9: when NF <> VF goto %000089a7
0001993d: goto %000145e7

000145e7:
000145ec: R0 := pad:64[mem[R31 + 8, el]:u32]
000145f1: VF := 0
000145f4: CF := 1
000145f8: ZF := 31:0[R0] = 0
000145fc: NF := 31:31[R0]
00014602: when NF <> VF goto %000089a7
0001993e: goto %00014606

00014606:
0001460b: R0 := pad:64[mem[R31 + 8, el]:u32]
00014611: #301 := 31:0[R0] - 0x1F
00014616: VF := extend:64[#301] <> extend:64[31:0[R0]] - 0x1F
0001461b: CF := pad:64[#301] <> pad:64[31:0[R0]] + 0xFFFFFFE1
0001461f: ZF := #301 = 0
00014623: NF := 31:31[#301]
0001462a: when NF = VF & ~ZF goto %000089a7
0001993f: goto %0001462e

000089a7:
000089b1: R0 := pad:64[extend:32[mem[R31 + 0xE, el]:u16]]
00019940: goto %000089b3

0001462e:
00014633: R1 := pad:64[extend:32[mem[R31 + 0xE, el]:u16]]
0001463a: R0 := pad:64[mem[R31 + 8, el]:u32]
00014641: R0 := pad:64[31:0[R1] ~>> pad:10[4:0[R0]]]
00014647: R0 := pad:64[extend:32[15:0[R0]]]
0001464b: goto %000089b3

000089b3:
000089b7: R31 := R31 + 0x10
000089bc: call R30 with noreturn

00019941: sub safe_rshift_func_int16_t_s_u(safe_rshift_func_int16_t_s_u_result)
00019a00: safe_rshift_func_int16_t_s_u_result :: out u32 = low:32[R0]

000089be:
000089c2: R31 := R31 - 0x10
000089ca: mem := mem with [R31 + 0xE, el]:u16 <- 15:0[R0]
000089d2: mem := mem with [R31 + 8, el]:u32 <- 31:0[R1]
000089d9: R0 := pad:64[extend:32[mem[R31 + 0xE, el]:u16]]
000089de: VF := 0
000089e1: CF := 1
000089e5: ZF := 31:0[R0] = 0
000089e9: NF := 31:31[R0]
000089f0: when NF <> VF goto %000089ee
00019942: goto %000145a1

000145a1:
000145a6: R0 := pad:64[mem[R31 + 8, el]:u32]
000145ac: #300 := 31:0[R0] - 0x1F
000145b1: VF := extend:64[#300] <> extend:64[31:0[R0]] - 0x1F
000145b6: CF := pad:64[#300] <> pad:64[31:0[R0]] + 0xFFFFFFE1
000145ba: ZF := #300 = 0
000145be: NF := 31:31[#300]
000145c4: when CF & ~ZF goto %000089ee
00019943: goto %000145c8

000089ee:
000089f8: R0 := pad:64[extend:32[mem[R31 + 0xE, el]:u16]]
00019944: goto %000089fa

000145c8:
000145cd: R1 := pad:64[extend:32[mem[R31 + 0xE, el]:u16]]
000145d4: R0 := pad:64[mem[R31 + 8, el]:u32]
000145db: R0 := pad:64[31:0[R1] ~>> pad:10[4:0[R0]]]
000145e1: R0 := pad:64[extend:32[15:0[R0]]]
000145e5: goto %000089fa

000089fa:
000089fe: R31 := R31 + 0x10
00008a03: call R30 with noreturn

00019945: sub safe_rshift_func_int32_t_s_s(safe_rshift_func_int32_t_s_s_result)
00019a01: safe_rshift_func_int32_t_s_s_result :: out u32 = low:32[R0]

00008d45:
00008d49: R31 := R31 - 0x10
00008d51: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R0]
00008d59: mem := mem with [R31 + 8, el]:u32 <- 31:0[R1]
00008d60: R0 := pad:64[mem[R31 + 0xC, el]:u32]
00008d65: VF := 0
00008d68: CF := 1
00008d6c: ZF := 31:0[R0] = 0
00008d70: NF := 31:31[R0]
00008d77: when NF <> VF goto %00008d75
00019946: goto %000140a7

000140a7:
000140ac: R0 := pad:64[mem[R31 + 8, el]:u32]
000140b1: VF := 0
000140b4: CF := 1
000140b8: ZF := 31:0[R0] = 0
000140bc: NF := 31:31[R0]
000140c2: when NF <> VF goto %00008d75
00019947: goto %000140c6

000140c6:
000140cb: R0 := pad:64[mem[R31 + 8, el]:u32]
000140d1: #275 := 31:0[R0] - 0x1F
000140d6: VF := extend:64[#275] <> extend:64[31:0[R0]] - 0x1F
000140db: CF := pad:64[#275] <> pad:64[31:0[R0]] + 0xFFFFFFE1
000140df: ZF := #275 = 0
000140e3: NF := 31:31[#275]
000140ea: when NF = VF & ~ZF goto %00008d75
00019948: goto %000140ee

00008d75:
00008d7f: R0 := pad:64[mem[R31 + 0xC, el]:u32]
00019949: goto %00008d81

000140ee:
000140f3: R0 := pad:64[mem[R31 + 8, el]:u32]
000140fa: R1 := pad:64[mem[R31 + 0xC, el]:u32]
00014101: R0 := pad:64[31:0[R1] ~>> pad:10[4:0[R0]]]
00014105: goto %00008d81

00008d81:
00008d85: R31 := R31 + 0x10
00008d8a: call R30 with noreturn

0001994a: sub safe_rshift_func_int32_t_s_u(safe_rshift_func_int32_t_s_u_result)
00019a02: safe_rshift_func_int32_t_s_u_result :: out u32 = low:32[R0]

00008d8c:
00008d90: R31 := R31 - 0x10
00008d98: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R0]
00008da0: mem := mem with [R31 + 8, el]:u32 <- 31:0[R1]
00008da7: R0 := pad:64[mem[R31 + 0xC, el]:u32]
00008dac: VF := 0
00008daf: CF := 1
00008db3: ZF := 31:0[R0] = 0
00008db7: NF := 31:31[R0]
00008dbe: when NF <> VF goto %00008dbc
0001994b: goto %00014067

00014067:
0001406c: R0 := pad:64[mem[R31 + 8, el]:u32]
00014072: #274 := 31:0[R0] - 0x1F
00014077: VF := extend:64[#274] <> extend:64[31:0[R0]] - 0x1F
0001407c: CF := pad:64[#274] <> pad:64[31:0[R0]] + 0xFFFFFFE1
00014080: ZF := #274 = 0
00014084: NF := 31:31[#274]
0001408a: when CF & ~ZF goto %00008dbc
0001994c: goto %0001408e

00008dbc:
00008dc6: R0 := pad:64[mem[R31 + 0xC, el]:u32]
0001994d: goto %00008dc8

0001408e:
00014093: R0 := pad:64[mem[R31 + 8, el]:u32]
0001409a: R1 := pad:64[mem[R31 + 0xC, el]:u32]
000140a1: R0 := pad:64[31:0[R1] ~>> pad:10[4:0[R0]]]
000140a5: goto %00008dc8

00008dc8:
00008dcc: R31 := R31 + 0x10
00008dd1: call R30 with noreturn

0001994e: sub safe_rshift_func_int64_t_s_s(safe_rshift_func_int64_t_s_s_result)
00019a03: safe_rshift_func_int64_t_s_s_result :: out u32 = low:32[R0]

00009113:
00009117: R31 := R31 - 0x10
0000911f: mem := mem with [R31 + 8, el]:u64 <- R0
00009127: mem := mem with [R31 + 4, el]:u32 <- 31:0[R1]
0000912e: R0 := mem[R31 + 8, el]:u64
00009133: VF := 0
00009136: CF := 1
0000913a: ZF := R0 = 0
0000913e: NF := 63:63[R0]
00009145: when NF <> VF goto %00009143
0001994f: goto %00013b6d

00013b6d:
00013b72: R0 := pad:64[mem[R31 + 4, el]:u32]
00013b77: VF := 0
00013b7a: CF := 1
00013b7e: ZF := 31:0[R0] = 0
00013b82: NF := 31:31[R0]
00013b88: when NF <> VF goto %00009143
00019950: goto %00013b8c

00013b8c:
00013b91: R0 := pad:64[mem[R31 + 4, el]:u32]
00013b97: #249 := 31:0[R0] - 0x1F
00013b9c: VF := extend:64[#249] <> extend:64[31:0[R0]] - 0x1F
00013ba1: CF := pad:64[#249] <> pad:64[31:0[R0]] + 0xFFFFFFE1
00013ba5: ZF := #249 = 0
00013ba9: NF := 31:31[#249]
00013bb0: when NF = VF & ~ZF goto %00009143
00019951: goto %00013bb4

00009143:
0000914d: R0 := mem[R31 + 8, el]:u64
00019952: goto %0000914f

00013bb4:
00013bb9: R0 := pad:64[mem[R31 + 4, el]:u32]
00013bc0: R1 := mem[R31 + 8, el]:u64
00013bc7: R0 := R1 ~>> pad:12[5:0[R0]]
00013bcb: goto %0000914f

0000914f:
00009153: R31 := R31 + 0x10
00009158: call R30 with noreturn

00019953: sub safe_rshift_func_int64_t_s_u(safe_rshift_func_int64_t_s_u_result)
00019a04: safe_rshift_func_int64_t_s_u_result :: out u32 = low:32[R0]

0000915a:
0000915e: R31 := R31 - 0x10
00009166: mem := mem with [R31 + 8, el]:u64 <- R0
0000916e: mem := mem with [R31 + 4, el]:u32 <- 31:0[R1]
00009175: R0 := mem[R31 + 8, el]:u64
0000917a: VF := 0
0000917d: CF := 1
00009181: ZF := R0 = 0
00009185: NF := 63:63[R0]
0000918c: when NF <> VF goto %0000918a
00019954: goto %00013b2d

00013b2d:
00013b32: R0 := pad:64[mem[R31 + 4, el]:u32]
00013b38: #248 := 31:0[R0] - 0x1F
00013b3d: VF := extend:64[#248] <> extend:64[31:0[R0]] - 0x1F
00013b42: CF := pad:64[#248] <> pad:64[31:0[R0]] + 0xFFFFFFE1
00013b46: ZF := #248 = 0
00013b4a: NF := 31:31[#248]
00013b50: when CF & ~ZF goto %0000918a
00019955: goto %00013b54

0000918a:
00009194: R0 := mem[R31 + 8, el]:u64
00019956: goto %00009196

00013b54:
00013b59: R0 := pad:64[mem[R31 + 4, el]:u32]
00013b60: R1 := mem[R31 + 8, el]:u64
00013b67: R0 := R1 ~>> pad:12[5:0[R0]]
00013b6b: goto %00009196

00009196:
0000919a: R31 := R31 + 0x10
0000919f: call R30 with noreturn

00019957: sub safe_rshift_func_int8_t_s_s(safe_rshift_func_int8_t_s_s_result)
00019a05: safe_rshift_func_int8_t_s_s_result :: out u32 = low:32[R0]

000086d7:
000086db: R31 := R31 - 0x10
000086e3: mem := mem with [R31 + 0xF] <- 7:0[R0]
000086eb: mem := mem with [R31 + 8, el]:u32 <- 31:0[R1]
000086f2: R0 := pad:64[extend:32[mem[R31 + 0xF]]]
000086f7: VF := 0
000086fa: CF := 1
000086fe: ZF := 31:0[R0] = 0
00008702: NF := 31:31[R0]
00008709: when NF <> VF goto %00008707
00019958: goto %0001489d

0001489d:
000148a2: R0 := pad:64[mem[R31 + 8, el]:u32]
000148a7: VF := 0
000148aa: CF := 1
000148ae: ZF := 31:0[R0] = 0
000148b2: NF := 31:31[R0]
000148b8: when NF <> VF goto %00008707
00019959: goto %000148bc

000148bc:
000148c1: R0 := pad:64[mem[R31 + 8, el]:u32]
000148c7: #313 := 31:0[R0] - 0x1F
000148cc: VF := extend:64[#313] <> extend:64[31:0[R0]] - 0x1F
000148d1: CF := pad:64[#313] <> pad:64[31:0[R0]] + 0xFFFFFFE1
000148d5: ZF := #313 = 0
000148d9: NF := 31:31[#313]
000148e0: when NF = VF & ~ZF goto %00008707
0001995a: goto %000148e4

00008707:
00008711: R0 := pad:64[extend:32[mem[R31 + 0xF]]]
0001995b: goto %00008713

000148e4:
000148e9: R1 := pad:64[extend:32[mem[R31 + 0xF]]]
000148f0: R0 := pad:64[mem[R31 + 8, el]:u32]
000148f7: R0 := pad:64[31:0[R1] ~>> pad:10[4:0[R0]]]
000148fd: R0 := pad:64[extend:32[7:0[R0]]]
00014901: goto %00008713

00008713:
00008717: R31 := R31 + 0x10
0000871c: call R30 with noreturn

0001995c: sub safe_rshift_func_int8_t_s_u(safe_rshift_func_int8_t_s_u_result)
00019a06: safe_rshift_func_int8_t_s_u_result :: out u32 = low:32[R0]

0000871e:
00008722: R31 := R31 - 0x10
0000872a: mem := mem with [R31 + 0xF] <- 7:0[R0]
00008732: mem := mem with [R31 + 8, el]:u32 <- 31:0[R1]
00008739: R0 := pad:64[extend:32[mem[R31 + 0xF]]]
0000873e: VF := 0
00008741: CF := 1
00008745: ZF := 31:0[R0] = 0
00008749: NF := 31:31[R0]
00008750: when NF <> VF goto %0000874e
0001995d: goto %00014857

00014857:
0001485c: R0 := pad:64[mem[R31 + 8, el]:u32]
00014862: #312 := 31:0[R0] - 0x1F
00014867: VF := extend:64[#312] <> extend:64[31:0[R0]] - 0x1F
0001486c: CF := pad:64[#312] <> pad:64[31:0[R0]] + 0xFFFFFFE1
00014870: ZF := #312 = 0
00014874: NF := 31:31[#312]
0001487a: when CF & ~ZF goto %0000874e
0001995e: goto %0001487e

0000874e:
00008758: R0 := pad:64[extend:32[mem[R31 + 0xF]]]
0001995f: goto %0000875a

0001487e:
00014883: R1 := pad:64[extend:32[mem[R31 + 0xF]]]
0001488a: R0 := pad:64[mem[R31 + 8, el]:u32]
00014891: R0 := pad:64[31:0[R1] ~>> pad:10[4:0[R0]]]
00014897: R0 := pad:64[extend:32[7:0[R0]]]
0001489b: goto %0000875a

0000875a:
0000875e: R31 := R31 + 0x10
00008763: call R30 with noreturn

00019960: sub safe_rshift_func_uint16_t_u_s(safe_rshift_func_uint16_t_u_s_result)
00019a07: safe_rshift_func_uint16_t_u_s_result :: out u32 = low:32[R0]

0000963b:
0000963f: R31 := R31 - 0x10
00009647: mem := mem with [R31 + 0xE, el]:u16 <- 15:0[R0]
0000964f: mem := mem with [R31 + 8, el]:u32 <- 31:0[R1]
00009656: R0 := pad:64[mem[R31 + 8, el]:u32]
0000965b: VF := 0
0000965e: CF := 1
00009662: ZF := 31:0[R0] = 0
00009666: NF := 31:31[R0]
0000966d: when NF <> VF goto %0000966b
00019961: goto %000137ec

000137ec:
000137f1: R0 := pad:64[mem[R31 + 8, el]:u32]
000137f7: #236 := 31:0[R0] - 0x1F
000137fc: VF := extend:64[#236] <> extend:64[31:0[R0]] - 0x1F
00013801: CF := pad:64[#236] <> pad:64[31:0[R0]] + 0xFFFFFFE1
00013805: ZF := #236 = 0
00013809: NF := 31:31[#236]
00013810: when NF = VF & ~ZF goto %0000966b
00019962: goto %00013814

0000966b:
00009675: R0 := pad:64[mem[R31 + 0xE, el]:u16]
00019963: goto %00009677

00013814:
00013819: R1 := pad:64[mem[R31 + 0xE, el]:u16]
00013820: R0 := pad:64[mem[R31 + 8, el]:u32]
00013827: R0 := pad:64[31:0[R1] ~>> pad:10[4:0[R0]]]
0001382d: R0 := pad:64[15:0[R0]]
00013831: goto %00009677

00009677:
0000967b: R31 := R31 + 0x10
00009680: call R30 with noreturn

00019964: sub safe_rshift_func_uint16_t_u_u(safe_rshift_func_uint16_t_u_u_result)
00019a08: safe_rshift_func_uint16_t_u_u_result :: out u32 = low:32[R0]

00009682:
00009686: R31 := R31 - 0x10
0000968e: mem := mem with [R31 + 0xE, el]:u16 <- 15:0[R0]
00009696: mem := mem with [R31 + 8, el]:u32 <- 31:0[R1]
0000969d: R0 := pad:64[mem[R31 + 8, el]:u32]
000096a3: #11 := 31:0[R0] - 0x1F
000096a8: VF := extend:64[#11] <> extend:64[31:0[R0]] - 0x1F
000096ad: CF := pad:64[#11] <> pad:64[31:0[R0]] + 0xFFFFFFE1
000096b1: ZF := #11 = 0
000096b5: NF := 31:31[#11]
000096bc: when CF & ~ZF goto %000096ba
00019965: goto %000137cd

000096ba:
000096c4: R0 := pad:64[mem[R31 + 0xE, el]:u16]
00019966: goto %000096c6

000137cd:
000137d2: R1 := pad:64[mem[R31 + 0xE, el]:u16]
000137d9: R0 := pad:64[mem[R31 + 8, el]:u32]
000137e0: R0 := pad:64[31:0[R1] ~>> pad:10[4:0[R0]]]
000137e6: R0 := pad:64[15:0[R0]]
000137ea: goto %000096c6

000096c6:
000096ca: R31 := R31 + 0x10
000096cf: call R30 with noreturn

00019967: sub safe_rshift_func_uint32_t_u_s(safe_rshift_func_uint32_t_u_s_result)
00019a09: safe_rshift_func_uint32_t_u_s_result :: out u32 = low:32[R0]

000098bb:
000098bf: R31 := R31 - 0x10
000098c7: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R0]
000098cf: mem := mem with [R31 + 8, el]:u32 <- 31:0[R1]
000098d6: R0 := pad:64[mem[R31 + 8, el]:u32]
000098db: VF := 0
000098de: CF := 1
000098e2: ZF := 31:0[R0] = 0
000098e6: NF := 31:31[R0]
000098ed: when NF <> VF goto %000098eb
00019968: goto %00013655

00013655:
0001365a: R0 := pad:64[mem[R31 + 8, el]:u32]
00013660: #230 := 31:0[R0] - 0x1F
00013665: VF := extend:64[#230] <> extend:64[31:0[R0]] - 0x1F
0001366a: CF := pad:64[#230] <> pad:64[31:0[R0]] + 0xFFFFFFE1
0001366e: ZF := #230 = 0
00013672: NF := 31:31[#230]
00013679: when NF = VF & ~ZF goto %000098eb
00019969: goto %0001367d

000098eb:
000098f5: R0 := pad:64[mem[R31 + 0xC, el]:u32]
0001996a: goto %000098f7

0001367d:
00013682: R0 := pad:64[mem[R31 + 8, el]:u32]
00013689: R1 := pad:64[mem[R31 + 0xC, el]:u32]
00013690: R0 := pad:64[31:0[R1] >> pad:10[4:0[R0]]]
00013694: goto %000098f7

000098f7:
000098fb: R31 := R31 + 0x10
00009900: call R30 with noreturn

0001996b: sub safe_rshift_func_uint32_t_u_u(safe_rshift_func_uint32_t_u_u_result)
00019a0a: safe_rshift_func_uint32_t_u_u_result :: out u32 = low:32[R0]

00009902:
00009906: R31 := R31 - 0x10
0000990e: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R0]
00009916: mem := mem with [R31 + 8, el]:u32 <- 31:0[R1]
0000991d: R0 := pad:64[mem[R31 + 8, el]:u32]
00009923: #13 := 31:0[R0] - 0x1F
00009928: VF := extend:64[#13] <> extend:64[31:0[R0]] - 0x1F
0000992d: CF := pad:64[#13] <> pad:64[31:0[R0]] + 0xFFFFFFE1
00009931: ZF := #13 = 0
00009935: NF := 31:31[#13]
0000993c: when CF & ~ZF goto %0000993a
0001996c: goto %0001363c

0000993a:
00009944: R0 := pad:64[mem[R31 + 0xC, el]:u32]
0001996d: goto %00009946

0001363c:
00013641: R0 := pad:64[mem[R31 + 8, el]:u32]
00013648: R1 := pad:64[mem[R31 + 0xC, el]:u32]
0001364f: R0 := pad:64[31:0[R1] >> pad:10[4:0[R0]]]
00013653: goto %00009946

00009946:
0000994a: R31 := R31 + 0x10
0000994f: call R30 with noreturn

0001996e: sub safe_rshift_func_uint64_t_u_s(safe_rshift_func_uint64_t_u_s_result)
00019a0b: safe_rshift_func_uint64_t_u_s_result :: out u32 = low:32[R0]

00009b3b:
00009b3f: R31 := R31 - 0x10
00009b47: mem := mem with [R31 + 8, el]:u64 <- R0
00009b4f: mem := mem with [R31 + 4, el]:u32 <- 31:0[R1]
00009b56: R0 := pad:64[mem[R31 + 4, el]:u32]
00009b5b: VF := 0
00009b5e: CF := 1
00009b62: ZF := 31:0[R0] = 0
00009b66: NF := 31:31[R0]
00009b6d: when NF <> VF goto %00009b6b
0001996f: goto %000134c4

000134c4:
000134c9: R0 := pad:64[mem[R31 + 4, el]:u32]
000134cf: #224 := 31:0[R0] - 0x1F
000134d4: VF := extend:64[#224] <> extend:64[31:0[R0]] - 0x1F
000134d9: CF := pad:64[#224] <> pad:64[31:0[R0]] + 0xFFFFFFE1
000134dd: ZF := #224 = 0
000134e1: NF := 31:31[#224]
000134e8: when NF = VF & ~ZF goto %00009b6b
00019970: goto %000134ec

00009b6b:
00009b75: R0 := mem[R31 + 8, el]:u64
00019971: goto %00009b77

000134ec:
000134f1: R0 := pad:64[mem[R31 + 4, el]:u32]
000134f8: R1 := mem[R31 + 8, el]:u64
000134ff: R0 := R1 >> pad:12[5:0[R0]]
00013503: goto %00009b77

00009b77:
00009b7b: R31 := R31 + 0x10
00009b80: call R30 with noreturn

00019972: sub safe_rshift_func_uint64_t_u_u(safe_rshift_func_uint64_t_u_u_result)
00019a0c: safe_rshift_func_uint64_t_u_u_result :: out u32 = low:32[R0]

00009b82:
00009b86: R31 := R31 - 0x10
00009b8e: mem := mem with [R31 + 8, el]:u64 <- R0
00009b96: mem := mem with [R31 + 4, el]:u32 <- 31:0[R1]
00009b9d: R0 := pad:64[mem[R31 + 4, el]:u32]
00009ba3: #15 := 31:0[R0] - 0x1F
00009ba8: VF := extend:64[#15] <> extend:64[31:0[R0]] - 0x1F
00009bad: CF := pad:64[#15] <> pad:64[31:0[R0]] + 0xFFFFFFE1
00009bb1: ZF := #15 = 0
00009bb5: NF := 31:31[#15]
00009bbc: when CF & ~ZF goto %00009bba
00019973: goto %000134ab

00009bba:
00009bc4: R0 := mem[R31 + 8, el]:u64
00019974: goto %00009bc6

000134ab:
000134b0: R0 := pad:64[mem[R31 + 4, el]:u32]
000134b7: R1 := mem[R31 + 8, el]:u64
000134be: R0 := R1 >> pad:12[5:0[R0]]
000134c2: goto %00009bc6

00009bc6:
00009bca: R31 := R31 + 0x10
00009bcf: call R30 with noreturn

00019975: sub safe_rshift_func_uint8_t_u_s(safe_rshift_func_uint8_t_u_s_result)
00019a0d: safe_rshift_func_uint8_t_u_s_result :: out u32 = low:32[R0]

000093a3:
000093a7: R31 := R31 - 0x10
000093af: mem := mem with [R31 + 0xF] <- 7:0[R0]
000093b7: mem := mem with [R31 + 8, el]:u32 <- 31:0[R1]
000093be: R0 := pad:64[mem[R31 + 8, el]:u32]
000093c3: VF := 0
000093c6: CF := 1
000093ca: ZF := 31:0[R0] = 0
000093ce: NF := 31:31[R0]
000093d5: when NF <> VF goto %000093d3
00019976: goto %0001399c

0001399c:
000139a1: R0 := pad:64[mem[R31 + 8, el]:u32]
000139a7: #242 := 31:0[R0] - 0x1F
000139ac: VF := extend:64[#242] <> extend:64[31:0[R0]] - 0x1F
000139b1: CF := pad:64[#242] <> pad:64[31:0[R0]] + 0xFFFFFFE1
000139b5: ZF := #242 = 0
000139b9: NF := 31:31[#242]
000139c0: when NF = VF & ~ZF goto %000093d3
00019977: goto %000139c4

000093d3:
000093dd: R0 := pad:64[mem[R31 + 0xF]]
00019978: goto %000093df

000139c4:
000139c9: R1 := pad:64[mem[R31 + 0xF]]
000139d0: R0 := pad:64[mem[R31 + 8, el]:u32]
000139d7: R0 := pad:64[31:0[R1] ~>> pad:10[4:0[R0]]]
000139dd: R0 := pad:64[7:0[R0]]
000139e1: goto %000093df

000093df:
000093e3: R31 := R31 + 0x10
000093e8: call R30 with noreturn

00019979: sub safe_rshift_func_uint8_t_u_u(safe_rshift_func_uint8_t_u_u_result)
00019a0e: safe_rshift_func_uint8_t_u_u_result :: out u32 = low:32[R0]

000093ea:
000093ee: R31 := R31 - 0x10
000093f6: mem := mem with [R31 + 0xF] <- 7:0[R0]
000093fe: mem := mem with [R31 + 8, el]:u32 <- 31:0[R1]
00009405: R0 := pad:64[mem[R31 + 8, el]:u32]
0000940b: #9 := 31:0[R0] - 0x1F
00009410: VF := extend:64[#9] <> extend:64[31:0[R0]] - 0x1F
00009415: CF := pad:64[#9] <> pad:64[31:0[R0]] + 0xFFFFFFE1
00009419: ZF := #9 = 0
0000941d: NF := 31:31[#9]
00009424: when CF & ~ZF goto %00009422
0001997a: goto %0001397d

00009422:
0000942c: R0 := pad:64[mem[R31 + 0xF]]
0001997b: goto %0000942e

0001397d:
00013982: R1 := pad:64[mem[R31 + 0xF]]
00013989: R0 := pad:64[mem[R31 + 8, el]:u32]
00013990: R0 := pad:64[31:0[R1] ~>> pad:10[4:0[R0]]]
00013996: R0 := pad:64[7:0[R0]]
0001399a: goto %0000942e

0000942e:
00009432: R31 := R31 + 0x10
00009437: call R30 with noreturn

0001997c: sub safe_sub_func_double_f_f(safe_sub_func_double_f_f_result)
00019a0f: safe_sub_func_double_f_f_result :: out u32 = low:32[R0]

00009df0:
00009df4: R31 := R31 - 0x10
00009dfc: mem := mem with [R31 + 8, el]:u64 <- 63:0[V0]
00009e04: mem := mem with [R31, el]:u64 <- 63:0[V1]
00009e0b: V1 := pad:128[mem[R31 + 8, el]:u64]
00009e10: V0 := 0x3FE0000000000000
00009e19: V2 := pad:128[mem[R31, el]:u64]
00009e1e: V0 := 0x3FE0000000000000
00009e28: V0 := pad:128[62:0[V0]]
00009e2d: R0 := 0x7FDFFFFFFFFFFFFF
00009e33: V1 := pad:128[R0]
00009e3d: when NF = VF & ~ZF goto %00009e3b
0001997d: goto %000133cf

00009e3b:
00009e45: V0 := pad:128[mem[R31 + 8, el]:u64]
00009e4a: goto %00009e48

000133cf:
000133d1: goto %000133bf

000133bf:
000133c4: V1 := pad:128[mem[R31 + 8, el]:u64]
000133cb: V0 := pad:128[mem[R31, el]:u64]
0001997e: goto %00009e48

00009e48:
00009e4f: R31 := R31 + 0x10
00009e54: call R30 with noreturn

0001997f: sub safe_sub_func_float_f_f(safe_sub_func_float_f_f_result)
00019a10: safe_sub_func_float_f_f_result :: out u32 = low:32[R0]

00009c31:
00009c35: R31 := R31 - 0x10
00009c3d: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[V0]
00009c45: mem := mem with [R31 + 8, el]:u32 <- 31:0[V1]
00009c4c: V1 := pad:128[mem[R31 + 0xC, el]:u32]
00009c51: V0 := 0x3F000000
00009c5a: V2 := pad:128[mem[R31 + 8, el]:u32]
00009c5f: V0 := 0x3F000000
00009c69: V1 := pad:128[30:0[V0]]
00009c6e: V0 := 0x7EFFFFFF7EFFFFFF
00009c78: when NF = VF & ~ZF goto %00009c76
00019980: goto %00013493

00009c76:
00009c80: V0 := pad:128[mem[R31 + 0xC, el]:u32]
00009c85: goto %00009c83

00013493:
00013495: goto %00013483

00013483:
00013488: V1 := pad:128[mem[R31 + 0xC, el]:u32]
0001348f: V0 := pad:128[mem[R31 + 8, el]:u32]
00019981: goto %00009c83

00009c83:
00009c8a: R31 := R31 + 0x10
00009c8f: call R30 with noreturn

00019982: sub safe_sub_func_int16_t_s_s(safe_sub_func_int16_t_s_s_result)
00019a11: safe_sub_func_int16_t_s_s_result :: out u32 = low:32[R0]

000087d9:
000087dd: R31 := R31 - 0x10
000087e5: mem := mem with [R31 + 0xE, el]:u16 <- 15:0[R0]
000087ed: mem := mem with [R31 + 0xC, el]:u16 <- 15:0[R1]
000087f4: R1 := pad:64[mem[R31 + 0xE, el]:u16]
000087fb: R0 := pad:64[mem[R31 + 0xC, el]:u16]
00008802: R0 := pad:64[31:0[R1] + ~31:0[R0] + 1]
00008808: R0 := pad:64[15:0[R0]]
0000880e: R0 := pad:64[extend:32[15:0[R0]]]
00008814: R31 := R31 + 0x10
00008819: call R30 with noreturn

00019983: sub safe_sub_func_int32_t_s_s(safe_sub_func_int32_t_s_s_result)
00019a12: safe_sub_func_int32_t_s_s_result :: out u32 = low:32[R0]

00008ad0:
00008ad4: R31 := R31 - 0x10
00008adc: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R0]
00008ae4: mem := mem with [R31 + 8, el]:u32 <- 31:0[R1]
00008aeb: R1 := pad:64[mem[R31 + 0xC, el]:u32]
00008af2: R0 := pad:64[mem[R31 + 8, el]:u32]
00008af9: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
00008b00: R2 := pad:64[mem[R31 + 0xC, el]:u32]
00008b07: R0 := pad:64[mem[R31 + 8, el]:u32]
00008b0e: R0 := pad:64[31:0[R2] ^ 31:0[R0]]
00008b14: R2 := pad:64[31:31[R0].0]
00008b1b: R0 := pad:64[mem[R31 + 0xC, el]:u32]
00008b22: R2 := pad:64[31:0[R2] ^ 31:0[R0]]
00008b29: R0 := pad:64[mem[R31 + 8, el]:u32]
00008b30: R2 := pad:64[31:0[R2] + ~31:0[R0] + 1]
00008b37: R0 := pad:64[mem[R31 + 8, el]:u32]
00008b3e: R0 := pad:64[31:0[R2] ^ 31:0[R0]]
00008b45: R0 := pad:64[31:0[R1] & 31:0[R0]]
00008b4a: VF := 0
00008b4d: CF := 1
00008b51: ZF := 31:0[R0] = 0
00008b55: NF := 31:31[R0]
00008b5c: when NF <> VF goto %00008b5a
00019984: goto %000144ae

00008b5a:
00008b64: R0 := pad:64[mem[R31 + 0xC, el]:u32]
00019985: goto %00008b66

000144ae:
000144b3: R1 := pad:64[mem[R31 + 0xC, el]:u32]
000144ba: R0 := pad:64[mem[R31 + 8, el]:u32]
000144c1: R0 := pad:64[31:0[R1] + ~31:0[R0] + 1]
000144c5: goto %00008b66

00008b66:
00008b6a: R31 := R31 + 0x10
00008b6f: call R30 with noreturn

00019986: sub safe_sub_func_int64_t_s_s(safe_sub_func_int64_t_s_s_result)
00019a13: safe_sub_func_int64_t_s_s_result :: out u32 = low:32[R0]

00008e9e:
00008ea2: R31 := R31 - 0x10
00008eaa: mem := mem with [R31 + 8, el]:u64 <- R0
00008eb2: mem := mem with [R31, el]:u64 <- R1
00008eb9: R1 := mem[R31 + 8, el]:u64
00008ec0: R0 := mem[R31, el]:u64
00008ec7: R1 := R1 ^ R0
00008ece: R2 := mem[R31 + 8, el]:u64
00008ed5: R0 := mem[R31, el]:u64
00008edc: R0 := R2 ^ R0
00008ee2: R2 := 63:63[R0].0
00008ee9: R0 := mem[R31 + 8, el]:u64
00008ef0: R2 := R2 ^ R0
00008ef7: R0 := mem[R31, el]:u64
00008efe: R2 := R2 + ~R0 + 1
00008f05: R0 := mem[R31, el]:u64
00008f0c: R0 := R2 ^ R0
00008f13: R0 := R1 & R0
00008f18: VF := 0
00008f1b: CF := 1
00008f1f: ZF := R0 = 0
00008f23: NF := 63:63[R0]
00008f2a: when NF <> VF goto %00008f28
00019987: goto %00013f74

00008f28:
00008f32: R0 := mem[R31 + 8, el]:u64
00019988: goto %00008f34

00013f74:
00013f79: R1 := mem[R31 + 8, el]:u64
00013f80: R0 := mem[R31, el]:u64
00013f87: R0 := R1 + ~R0 + 1
00013f8b: goto %00008f34

00008f34:
00008f38: R31 := R31 + 0x10
00008f3d: call R30 with noreturn

00019989: sub safe_sub_func_int8_t_s_s(safe_sub_func_int8_t_s_s_result)
00019a14: safe_sub_func_int8_t_s_s_result :: out u32 = low:32[R0]

00008539:
0000853d: R31 := R31 - 0x10
00008545: mem := mem with [R31 + 0xF] <- 7:0[R0]
0000854d: mem := mem with [R31 + 0xE] <- 7:0[R1]
00008554: R1 := pad:64[mem[R31 + 0xF]]
0000855b: R0 := pad:64[mem[R31 + 0xE]]
00008562: R0 := pad:64[31:0[R1] + ~31:0[R0] + 1]
00008568: R0 := pad:64[7:0[R0]]
0000856e: R0 := pad:64[extend:32[7:0[R0]]]
00008574: R31 := R31 + 0x10
00008579: call R30 with noreturn

0001998a: sub safe_sub_func_uint16_t_u_u(safe_sub_func_uint16_t_u_u_result)
00019a15: safe_sub_func_uint16_t_u_u_result :: out u32 = low:32[R0]

000094a1:
000094a5: R31 := R31 - 0x10
000094ad: mem := mem with [R31 + 0xE, el]:u16 <- 15:0[R0]
000094b5: mem := mem with [R31 + 0xC, el]:u16 <- 15:0[R1]
000094bc: R1 := pad:64[mem[R31 + 0xE, el]:u16]
000094c3: R0 := pad:64[mem[R31 + 0xC, el]:u16]
000094ca: R0 := pad:64[31:0[R1] + ~31:0[R0] + 1]
000094d0: R0 := pad:64[15:0[R0]]
000094d6: R31 := R31 + 0x10
000094db: call R30 with noreturn

0001998b: sub safe_sub_func_uint32_t_u_u(safe_sub_func_uint32_t_u_u_result)
00019a16: safe_sub_func_uint32_t_u_u_result :: out u32 = low:32[R0]

0000972d:
00009731: R31 := R31 - 0x10
00009739: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R0]
00009741: mem := mem with [R31 + 8, el]:u32 <- 31:0[R1]
00009748: R1 := pad:64[mem[R31 + 0xC, el]:u32]
0000974f: R0 := pad:64[mem[R31 + 8, el]:u32]
00009756: R0 := pad:64[31:0[R1] + ~31:0[R0] + 1]
0000975c: R31 := R31 + 0x10
00009761: call R30 with noreturn

0001998c: sub safe_sub_func_uint64_t_u_u(safe_sub_func_uint64_t_u_u_result)
00019a17: safe_sub_func_uint64_t_u_u_result :: out u32 = low:32[R0]

000099ad:
000099b1: R31 := R31 - 0x10
000099b9: mem := mem with [R31 + 8, el]:u64 <- R0
000099c1: mem := mem with [R31, el]:u64 <- R1
000099c8: R1 := mem[R31 + 8, el]:u64
000099cf: R0 := mem[R31, el]:u64
000099d6: R0 := R1 + ~R0 + 1
000099dc: R31 := R31 + 0x10
000099e1: call R30 with noreturn

0001998d: sub safe_sub_func_uint8_t_u_u(safe_sub_func_uint8_t_u_u_result)
00019a18: safe_sub_func_uint8_t_u_u_result :: out u32 = low:32[R0]

00009209:
0000920d: R31 := R31 - 0x10
00009215: mem := mem with [R31 + 0xF] <- 7:0[R0]
0000921d: mem := mem with [R31 + 0xE] <- 7:0[R1]
00009224: R1 := pad:64[mem[R31 + 0xF]]
0000922b: R0 := pad:64[mem[R31 + 0xE]]
00009232: R0 := pad:64[31:0[R1] + ~31:0[R0] + 1]
00009238: R0 := pad:64[7:0[R0]]
0000923e: R31 := R31 + 0x10
00009243: call R30 with noreturn

0001998e: sub safe_unary_minus_func_int16_t_s(safe_unary_minus_func_int16_t_s_result)
00019a19: safe_unary_minus_func_int16_t_s_result :: out u32 = low:32[R0]

00008765:
00008769: R31 := R31 - 0x10
00008771: mem := mem with [R31 + 0xE, el]:u16 <- 15:0[R0]
00008778: R0 := pad:64[mem[R31 + 0xE, el]:u16]
0000877e: R0 := pad:64[~31:0[R0] + 1]
00008784: R0 := pad:64[15:0[R0]]
0000878a: R0 := pad:64[extend:32[15:0[R0]]]
00008790: R31 := R31 + 0x10
00008795: call R30 with noreturn

0001998f: sub safe_unary_minus_func_int32_t_s(safe_unary_minus_func_int32_t_s_result)
00019a1a: safe_unary_minus_func_int32_t_s_result :: out u32 = low:32[R0]

00008a05:
00008a09: R31 := R31 - 0x10
00008a11: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R0]
00008a18: R1 := pad:64[mem[R31 + 0xC, el]:u32]
00008a1d: R0 := 0x80000000
00008a23: #4 := ~31:0[R0]
00008a28: #5 := 31:0[R1] + ~31:0[R0]
00008a2e: VF := extend:64[#5 + 1] <> extend:64[31:0[R1]] + extend:64[#4] + 1
00008a34: CF := pad:64[#5 + 1] <> pad:64[31:0[R1]] + pad:64[#4] + 1
00008a38: ZF := #5 + 1 = 0
00008a3c: NF := 31:31[#5 + 1]
00008a42: when ZF goto %00008a40
00019990: goto %00014590

00008a40:
00008a4a: R0 := pad:64[mem[R31 + 0xC, el]:u32]
00019991: goto %00008a4c

00014590:
00014595: R0 := pad:64[mem[R31 + 0xC, el]:u32]
0001459b: R0 := pad:64[~31:0[R0] + 1]
0001459f: goto %00008a4c

00008a4c:
00008a50: R31 := R31 + 0x10
00008a55: call R30 with noreturn

00019992: sub safe_unary_minus_func_int64_t_s(safe_unary_minus_func_int64_t_s_result)
00019a1b: safe_unary_minus_func_int64_t_s_result :: out u32 = low:32[R0]

00008dd3:
00008dd7: R31 := R31 - 0x10
00008ddf: mem := mem with [R31 + 8, el]:u64 <- R0
00008de6: R1 := mem[R31 + 8, el]:u64
00008deb: R0 := 0x8000000000000000
00008df1: #6 := ~R0
00008df6: #7 := R1 + ~R0
00008dfc: VF := extend:128[#7 + 1] <> extend:128[R1] + extend:128[#6] + 1
00008e02: CF := pad:128[#7 + 1] <> pad:128[R1] + pad:128[#6] + 1
00008e06: ZF := #7 + 1 = 0
00008e0a: NF := 63:63[#7 + 1]
00008e10: when ZF goto %00008e0e
00019993: goto %00014056

00008e0e:
00008e18: R0 := mem[R31 + 8, el]:u64
00019994: goto %00008e1a

00014056:
0001405b: R0 := mem[R31 + 8, el]:u64
00014061: R0 := ~R0 + 1
00014065: goto %00008e1a

00008e1a:
00008e1e: R31 := R31 + 0x10
00008e23: call R30 with noreturn

00019995: sub safe_unary_minus_func_int8_t_s(safe_unary_minus_func_int8_t_s_result)
00019a1c: safe_unary_minus_func_int8_t_s_result :: out u32 = low:32[R0]

000084c5:
000084c9: R31 := R31 - 0x10
000084d1: mem := mem with [R31 + 0xF] <- 7:0[R0]
000084d8: R0 := pad:64[mem[R31 + 0xF]]
000084de: R0 := pad:64[~31:0[R0] + 1]
000084e4: R0 := pad:64[7:0[R0]]
000084ea: R0 := pad:64[extend:32[7:0[R0]]]
000084f0: R31 := R31 + 0x10
000084f5: call R30 with noreturn

00019996: sub safe_unary_minus_func_uint16_t_u(safe_unary_minus_func_uint16_t_u_result)
00019a1d: safe_unary_minus_func_uint16_t_u_result :: out u32 = low:32[R0]

00009439:
0000943d: R31 := R31 - 0x10
00009445: mem := mem with [R31 + 0xE, el]:u16 <- 15:0[R0]
0000944c: R0 := pad:64[mem[R31 + 0xE, el]:u16]
00009452: R0 := pad:64[~31:0[R0] + 1]
00009458: R0 := pad:64[15:0[R0]]
0000945e: R31 := R31 + 0x10
00009463: call R30 with noreturn

00019997: sub safe_unary_minus_func_uint32_t_u(safe_unary_minus_func_uint32_t_u_result)
00019a1e: safe_unary_minus_func_uint32_t_u_result :: out u32 = low:32[R0]

000096d1:
000096d5: R31 := R31 - 0x10
000096dd: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R0]
000096e4: R0 := pad:64[mem[R31 + 0xC, el]:u32]
000096ea: R0 := pad:64[~31:0[R0] + 1]
000096f0: R31 := R31 + 0x10
000096f5: call R30 with noreturn

00019998: sub safe_unary_minus_func_uint64_t_u(safe_unary_minus_func_uint64_t_u_result)
00019a1f: safe_unary_minus_func_uint64_t_u_result :: out u32 = low:32[R0]

00009951:
00009955: R31 := R31 - 0x10
0000995d: mem := mem with [R31 + 8, el]:u64 <- R0
00009964: R0 := mem[R31 + 8, el]:u64
0000996a: R0 := ~R0 + 1
00009970: R31 := R31 + 0x10
00009975: call R30 with noreturn

00019999: sub safe_unary_minus_func_uint8_t_u(safe_unary_minus_func_uint8_t_u_result)
00019a20: safe_unary_minus_func_uint8_t_u_result :: out u32 = low:32[R0]

000091a1:
000091a5: R31 := R31 - 0x10
000091ad: mem := mem with [R31 + 0xF] <- 7:0[R0]
000091b4: R0 := pad:64[mem[R31 + 0xF]]
000091ba: R0 := pad:64[~31:0[R0] + 1]
000091c0: R0 := pad:64[7:0[R0]]
000091c6: R31 := R31 + 0x10
000091cb: call R30 with noreturn

0001999a: sub strcmp(strcmp_s1, strcmp_s2, strcmp_result)
00019a21: strcmp_s1 :: in u64 = R0
00019a22: strcmp_s2 :: in u64 = R1
00019a23: strcmp_result :: out u32 = low:32[R0]

0001736c:
000175f7: R16 := 0x420000
000175fe: R17 := mem[R16 + 0x20, el]:u64
00017604: R16 := R16 + 0x20
00017609: call R17 with noreturn

0001999b: sub transparent_crc(transparent_crc_result)
00019a24: transparent_crc_result :: out u32 = low:32[R0]

0000a298:
0000a29c: #18 := R31 - 0x30
0000a2a2: mem := mem with [#18, el]:u64 <- R29
0000a2a8: mem := mem with [#18 + 8, el]:u64 <- R30
0000a2ac: R31 := #18
0000a2b2: R29 := R31
0000a2ba: mem := mem with [R31 + 0x28, el]:u64 <- R0
0000a2c2: mem := mem with [R31 + 0x20, el]:u64 <- R1
0000a2ca: mem := mem with [R31 + 0x1C, el]:u32 <- 31:0[R2]
0000a2d1: R0 := mem[R31 + 0x28, el]:u64
0000a2d6: R30 := 0x40240C
0000a2d8: call @crc32_8bytes with return %0000a2da

0000a2da:
0000a2df: R0 := pad:64[mem[R31 + 0x1C, el]:u32]
0000a2e4: VF := 0
0000a2e7: CF := 1
0000a2eb: ZF := 31:0[R0] = 0
0000a2ef: NF := 31:31[R0]
0000a2f5: when ZF goto %0000a2f3
0001999c: goto %00013280

00013280:
00013283: R0 := 0x420000
00013289: R0 := R0 + 0x40
00013290: R0 := pad:64[mem[R0, el]:u32]
00013296: R0 := pad:64[~31:0[R0]]
0001329c: R0 := pad:64[31:0[R0]]
000132a2: R2 := R0
000132a9: R1 := mem[R31 + 0x20, el]:u64
000132ae: R0 := 0x408000
000132b4: R0 := R0 + 0xB08
000132b9: R30 := 0x402440
000132bb: call @printf with return %0000a2f3

0000a2f3:
0000a2ff: R29 := mem[R31, el]:u64
0000a304: R30 := mem[R31 + 8, el]:u64
0000a308: R31 := R31 + 0x30
0000a30d: call R30 with noreturn

0001999d: sub transparent_crc_bytes(transparent_crc_bytes_result)
00019a25: transparent_crc_bytes_result :: out u32 = low:32[R0]

0000a30f:
0000a313: #19 := R31 - 0x40
0000a319: mem := mem with [#19, el]:u64 <- R29
0000a31f: mem := mem with [#19 + 8, el]:u64 <- R30
0000a323: R31 := #19
0000a329: R29 := R31
0000a331: mem := mem with [R31 + 0x28, el]:u64 <- R0
0000a339: mem := mem with [R31 + 0x24, el]:u32 <- 31:0[R1]
0000a341: mem := mem with [R31 + 0x18, el]:u64 <- R2
0000a349: mem := mem with [R31 + 0x20, el]:u32 <- 31:0[R3]
0000a350: mem := mem with [R31 + 0x3C, el]:u32 <- 0
0000a355: goto %0000a353

0000a353:
0000a35b: R1 := pad:64[mem[R31 + 0x3C, el]:u32]
0000a362: R0 := pad:64[mem[R31 + 0x24, el]:u32]
0000a368: #20 := ~31:0[R0]
0000a36d: #21 := 31:0[R1] + ~31:0[R0]
0000a373: VF := extend:64[#21 + 1] <> extend:64[31:0[R1]] + extend:64[#20] +
          1
0000a379: CF := pad:64[#21 + 1] <> pad:64[31:0[R1]] + pad:64[#20] + 1
0000a37d: ZF := #21 + 1 = 0
0000a381: NF := 31:31[#21 + 1]
0000a388: when NF <> VF goto %0000a386
0001999e: goto %0000a3c3

0000a3c3:
0000a3c8: R0 := pad:64[mem[R31 + 0x20, el]:u32]
0000a3cd: VF := 0
0000a3d0: CF := 1
0000a3d4: ZF := 31:0[R0] = 0
0000a3d8: NF := 31:31[R0]
0000a3de: when ZF goto %0000a3dc
0001999f: goto %00013243

00013243:
00013246: R0 := 0x420000
0001324c: R0 := R0 + 0x40
00013253: R0 := pad:64[mem[R0, el]:u32]
00013259: R0 := pad:64[~31:0[R0]]
0001325f: R0 := pad:64[31:0[R0]]
00013265: R2 := R0
0001326c: R1 := mem[R31 + 0x18, el]:u64
00013271: R0 := 0x408000
00013277: R0 := R0 + 0xB08
0001327c: R30 := 0x4024D0
0001327e: call @printf with return %0000a3dc

0000a3dc:
0000a3e8: R29 := mem[R31, el]:u64
0000a3ed: R30 := mem[R31 + 8, el]:u64
0000a3f1: R31 := R31 + 0x40
0000a3f6: call R30 with noreturn

0000a386:
0000a390: R0 := extend:64[mem[R31 + 0x3C, el]:u32]
0000a397: R1 := mem[R31 + 0x28, el]:u64
0000a39e: R0 := R1 + R0
0000a3a5: R0 := pad:64[mem[R0]]
0000a3aa: R30 := 0x402480
0000a3ac: call @crc32_byte with return %0000a3ae

0000a3ae:
0000a3b3: R0 := pad:64[mem[R31 + 0x3C, el]:u32]
0000a3b9: R0 := pad:64[31:0[R0] + 1]
0000a3c1: mem := mem with [R31 + 0x3C, el]:u32 <- 31:0[R0]
000199a0: goto %0000a353
