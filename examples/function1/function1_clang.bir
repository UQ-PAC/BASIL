00000949: program
0000092c: sub __cxa_finalize(__cxa_finalize_result)
0000094a: __cxa_finalize_result :: out u32 = low:32[R0]

00000650:
00000741: R16 := 0x11000
00000748: R17 := mem[R16, el]:u64
0000074e: R16 := R16
00000753: call R17 with noreturn

0000092d: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
0000094b: __do_global_dtors_aux_result :: out u32 = low:32[R0]

00000387:
0000038b: #5 := R31 - 0x20
00000391: mem := mem with [#5, el]:u64 <- R29
00000397: mem := mem with [#5 + 8, el]:u64 <- R30
0000039b: R31 := #5
000003a1: R29 := R31
000003a9: mem := mem with [R31 + 0x10, el]:u64 <- R19
000003ae: R19 := 0x11000
000003b5: R0 := pad:64[mem[R19 + 0x38]]
000003bc: when 31:0[R0] <> 0 goto %000003ba
0000092e: goto %00000619

00000619:
0000061c: R0 := 0x10000
00000623: R0 := mem[R0 + 0xFC0, el]:u64
00000629: when R0 = 0 goto %00000627
0000092f: goto %00000640

00000640:
00000643: R0 := 0x11000
0000064a: R0 := mem[R0 + 0x30, el]:u64
0000064f: R30 := 0x750
00000652: call @__cxa_finalize with return %00000627

00000627:
0000062f: R30 := 0x754
00000631: call @deregister_tm_clones with return %00000633

00000633:
00000636: R0 := 1
0000063e: mem := mem with [R19 + 0x38] <- 7:0[R0]
00000930: goto %000003ba

000003ba:
000003c4: R19 := mem[R31 + 0x10, el]:u64
000003cb: R29 := mem[R31, el]:u64
000003d0: R30 := mem[R31 + 8, el]:u64
000003d4: R31 := R31 + 0x20
000003d9: call R30 with noreturn

00000931: sub __libc_csu_fini(__libc_csu_fini_result)
0000094c: __libc_csu_fini_result :: out u32 = low:32[R0]

000005b9:
000005bc: call R30 with noreturn

00000932: sub __libc_csu_init(__libc_csu_init_result)
0000094d: __libc_csu_init_result :: out u32 = low:32[R0]

000004c6:
000004ca: #7 := R31 - 0x40
000004d0: mem := mem with [#7, el]:u64 <- R29
000004d6: mem := mem with [#7 + 8, el]:u64 <- R30
000004da: R31 := #7
000004e0: R29 := R31
000004e6: #8 := R31 + 0x10
000004ec: mem := mem with [#8, el]:u64 <- R19
000004f2: mem := mem with [#8 + 8, el]:u64 <- R20
000004f7: R20 := 0x10000
000004fd: R20 := R20 + 0xDC0
00000503: #9 := R31 + 0x20
00000509: mem := mem with [#9, el]:u64 <- R21
0000050f: mem := mem with [#9 + 8, el]:u64 <- R22
00000514: R21 := 0x10000
0000051a: R21 := R21 + 0xDB8
00000521: R20 := R20 + ~R21 + 1
00000527: R22 := pad:64[31:0[R0]]
0000052d: #10 := R31 + 0x30
00000533: mem := mem with [#10, el]:u64 <- R23
00000539: mem := mem with [#10 + 8, el]:u64 <- R24
0000053f: R23 := R1
00000545: R24 := R2
0000054a: R30 := 0x828
0000054d: call @_init with return %0000054f

0000054f:
00000553: #11 := ~(R20 ~>> 3)
00000557: #12 := ~(R20 ~>> 3) + 1
0000055c: VF := extend:65[#12] <> extend:65[#11] + 1
00000561: CF := pad:65[#12] <> pad:65[#11] + 1
00000565: ZF := #12 = 0
00000569: NF := 63:63[#12]
0000056f: when ZF goto %0000056d
00000933: goto %000005be

000005be:
000005c4: R20 :=

          >> 3 | R20 << 0x3D]
000005c9: R19 := 0
00000934: goto %000005cb

000005cb:
000005d1: R3 := mem[R21 + (60:0[R19].0), el]:u64
000005d7: R2 := R24
000005dd: R19 := R19 + 1
000005e3: R1 := R23
000005e9: R0 := pad:64[31:0[R22]]
000005ee: R30 := 0x850
000005f1: call R3 with return %000005f3

000005f3:
000005f7: #16 := ~R19
000005fc: #17 := R20 + ~R19 + 1
00000602: VF := extend:65[#17] <> extend:65[R20] + extend:65[#16] + 1
00000608: CF := pad:65[#17] <> pad:65[R20] + pad:65[#16] + 1
0000060c: ZF := #17 = 0
00000610: NF := 63:63[#17]
00000615: when ZF <> 1 goto %000005cb
00000935: goto %0000056d

0000056d:
00000576: #13 := R31 + 0x10
0000057b: R19 := mem[#13, el]:u64
00000580: R20 := mem[#13 + 8, el]:u64
00000586: #14 := R31 + 0x20
0000058b: R21 := mem[#14, el]:u64
00000590: R22 := mem[#14 + 8, el]:u64
00000596: #15 := R31 + 0x30
0000059b: R23 := mem[#15, el]:u64
000005a0: R24 := mem[#15 + 8, el]:u64
000005a7: R29 := mem[R31, el]:u64
000005ac: R30 := mem[R31 + 8, el]:u64
000005b0: R31 := R31 + 0x40
000005b5: call R30 with noreturn

00000936: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
0000094e: __libc_start_main_main :: in u64 = R0
0000094f: __libc_start_main_arg2 :: in u32 = low:32[R1]
00000950: __libc_start_main_arg3 :: in out u64 = R2
00000951: __libc_start_main_auxv :: in out u64 = R3
00000952: __libc_start_main_result :: out u32 = low:32[R0]

000002c5:
00000757: R16 := 0x11000
0000075e: R17 := mem[R16 + 8, el]:u64
00000764: R16 := R16 + 8
00000769: call R17 with noreturn

00000937: sub _fini(_fini_result)
00000953: _fini_result :: out u32 = low:32[R0]

00000033:
00000037: #0 := R31 - 0x10
0000003d: mem := mem with [#0, el]:u64 <- R29
00000043: mem := mem with [#0 + 8, el]:u64 <- R30
00000047: R31 := #0
0000004d: R29 := R31
00000054: R29 := mem[R31, el]:u64
00000059: R30 := mem[R31 + 8, el]:u64
0000005d: R31 := R31 + 0x10
00000062: call R30 with noreturn

00000938: sub _init(_init_result)
00000954: _init_result :: out u32 = low:32[R0]

0000054b:
00000851: #19 := R31 - 0x10
00000857: mem := mem with [#19, el]:u64 <- R29
0000085d: mem := mem with [#19 + 8, el]:u64 <- R30
00000861: R31 := #19
00000867: R29 := R31
0000086c: R30 := 0x5DC
0000086e: call @call_weak_fn with return %00000870

00000870:
00000875: R29 := mem[R31, el]:u64
0000087a: R30 := mem[R31 + 8, el]:u64
0000087e: R31 := R31 + 0x10
00000883: call R30 with noreturn

00000939: sub _start(_start_result)
00000955: _start_result :: out u32 = low:32[R0]

0000027a:
0000027d: R29 := 0
00000282: R30 := 0
00000288: R5 := R0
0000028f: R1 := mem[R31, el]:u64
00000295: R2 := R31 + 8
0000029b: R6 := R31
000002a0: R0 := 0x10000
000002a7: R0 := mem[R0 + 0xFD8, el]:u64
000002ac: R3 := 0x10000
000002b3: R3 := mem[R3 + 0xFD0, el]:u64
000002b8: R4 := 0x10000
000002bf: R4 := mem[R4 + 0xFB0, el]:u64
000002c4: R30 := 0x694
000002c7: call @__libc_start_main with return %000002c9

000002c9:
000002cc: R30 := 0x698
000002cf: call @abort with return %0000093a

0000093a:
0000093b: call @call_weak_fn with noreturn

0000093c: sub abort()


000002cd:
00000783: R16 := 0x11000
0000078a: R17 := mem[R16 + 0x18, el]:u64
00000790: R16 := R16 + 0x18
00000795: call R17 with noreturn

0000093d: sub call_weak_fn(call_weak_fn_result)
00000956: call_weak_fn_result :: out u32 = low:32[R0]

000002d1:
000002d4: R0 := 0x10000
000002db: R0 := mem[R0 + 0xFC8, el]:u64
000002e1: when R0 = 0 goto %000002df
0000093e: goto %00000690

000002df:
000002e7: call R30 with noreturn

00000690:
00000693: goto @__gmon_start__

00000691:
0000076d: R16 := 0x11000
00000774: R17 := mem[R16 + 0x10, el]:u64
0000077a: R16 := R16 + 0x10
0000077f: call R17 with noreturn

0000093f: sub deregister_tm_clones(deregister_tm_clones_result)
00000957: deregister_tm_clones_result :: out u32 = low:32[R0]

000002eb:
000002ee: R0 := 0x11000
000002f4: R0 := R0 + 0x38
000002f9: R1 := 0x11000
000002ff: R1 := R1 + 0x38
00000305: #1 := ~R0
0000030a: #2 := R1 + ~R0 + 1
00000310: VF := extend:65[#2] <> extend:65[R1] + extend:65[#1] + 1
00000316: CF := pad:65[#2] <> pad:65[R1] + pad:65[#1] + 1
0000031a: ZF := #2 = 0
0000031e: NF := 63:63[#2]
00000324: when ZF goto %00000322
00000940: goto %00000672

00000672:
00000675: R1 := 0x10000
0000067c: R1 := mem[R1 + 0xFB8, el]:u64
00000681: when R1 = 0 goto %00000322
00000941: goto %00000685

00000322:
0000032a: call R30 with noreturn

00000685:
00000689: R16 := R1
0000068e: call R16 with noreturn

00000942: sub frame_dummy(frame_dummy_result)
00000958: frame_dummy_result :: out u32 = low:32[R0]

000003db:
000003dd: call @register_tm_clones with noreturn

00000943: sub get_two(get_two_result)
00000959: get_two_result :: out u32 = low:32[R0]

000003df:
000003e3: R31 := R31 - 0x10
000003eb: mem := mem with [R31 + 0xF] <- 7:0[R0]
000003f3: mem := mem with [R31 + 8, el]:u32 <- 31:0[R1]
000003fb: mem := mem with [R31, el]:u64 <- R2
00000402: R8 := pad:64[mem[R31 + 0xF]]
00000409: R9 := pad:64[mem[R31 + 8, el]:u32]
00000410: R9 := pad:64[31:0[R8] + 31:0[R9]]
00000417: R8 := mem[R31, el]:u64
0000041e: R8 := R8 + extend:64[31:0[R9]]
00000424: R0 := pad:64[31:0[R8]]
0000042a: R31 := R31 + 0x10
0000042f: call R30 with noreturn

00000944: sub main(main_argc, main_argv, main_result)
0000095a: main_argc :: in u32 = low:32[R0]
0000095b: main_argv :: in out u64 = R1
0000095c: main_result :: out u32 = low:32[R0]

00000431:
00000435: #6 := R31 - 0x10
0000043b: mem := mem with [#6, el]:u64 <- R29
00000441: mem := mem with [#6 + 8, el]:u64 <- R30
00000445: R31 := #6
0000044b: R29 := R31
00000450: R9 := 0x11000
00000455: R8 := 1
0000045d: mem := mem with [R9 + 0x3C, el]:u32 <- 31:0[R8]
00000462: R0 := 0x61
00000467: R1 := 0xA
0000046c: R2 := 0xE400
00000473: R2 := 63:32[R2].0x540B.15:0[R2]
0000047a: R2 := 63:48[R2].2.31:0[R2]
0000047f: R30 := 0x7C8
00000481: call @get_two with return %00000483

00000483:
00000486: R8 := 0x11000
0000048e: mem := mem with [R8 + 0x40, el]:u32 <- 31:0[R0]
00000495: R1 := pad:64[mem[R8 + 0x40, el]:u32]
0000049a: R0 := 0
000004a0: R0 := R0 + 0x888
000004a5: R30 := 0x7E0
000004a8: call @printf with return %000004aa

000004aa:
000004ad: R0 := 0
000004b4: R29 := mem[R31, el]:u64
000004b9: R30 := mem[R31 + 8, el]:u64
000004bd: R31 := R31 + 0x10
000004c2: call R30 with noreturn

00000945: sub printf(printf_format, printf_result)
0000095d: printf_format :: in u64 = R0
0000095e: printf_result :: out u32 = low:32[R0]

000004a6:
00000799: R16 := 0x11000
000007a0: R17 := mem[R16 + 0x20, el]:u64
000007a6: R16 := R16 + 0x20
000007ab: call R17 with noreturn

00000946: sub register_tm_clones(register_tm_clones_result)
0000095f: register_tm_clones_result :: out u32 = low:32[R0]

0000032c:
0000032f: R0 := 0x11000
00000335: R0 := R0 + 0x38
0000033a: R1 := 0x11000
00000340: R1 := R1 + 0x38
00000347: R1 := R1 + ~R0 + 1
0000034e: R2 := 0.0:0[R1 >> 0x3F | R1 << 1]
00000355: R1 := R2 + (R1 ~>> 3)
0000035b: #3 := ~(R1 ~>> 1)
0000035f: #4 := ~(R1 ~>> 1) + 1
00000364: VF := extend:65[#4] <> extend:65[#3] + 1
00000369: CF := pad:65[#4] <> pad:65[#3] + 1
0000036d: ZF := #4 = 0
00000371: NF := 63:63[#4]
00000379: R1 :=

          >> 1 | R1 << 0x3F]
0000037f: when ZF goto %0000037d
00000947: goto %00000654

00000654:
00000657: R2 := 0x10000
0000065e: R2 := mem[R2 + 0xFE0, el]:u64
00000663: when R2 = 0 goto %0000037d
00000948: goto %00000667

0000037d:
00000385: call R30 with noreturn

00000667:
0000066b: R16 := R2
00000670: call R16 with noreturn
