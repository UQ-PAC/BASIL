00000aac: program
00000a8b: sub __cxa_finalize(__cxa_finalize_result)
00000aad: __cxa_finalize_result :: out u32 = low:32[R0]

000007a5:
00000886: R16 := 0x11000
0000088d: R17 := mem[R16, el]:u64
00000893: R16 := R16
00000898: call R17 with noreturn

00000a8c: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
00000aae: __do_global_dtors_aux_result :: out u32 = low:32[R0]

000003ec:
000003f0: #5 := R31 - 0x20
000003f6: mem := mem with [#5, el]:u64 <- R29
000003fc: mem := mem with [#5 + 8, el]:u64 <- R30
00000400: R31 := #5
00000406: R29 := R31
0000040e: mem := mem with [R31 + 0x10, el]:u64 <- R19
00000413: R19 := 0x11000
0000041a: R0 := pad:64[mem[R19 + 0x30]]
00000421: when 31:0[R0] <> 0 goto %0000041f
00000a8d: goto %0000076e

0000076e:
00000771: R0 := 0x10000
00000778: R0 := mem[R0 + 0xFA0, el]:u64
0000077e: when R0 = 0 goto %0000077c
00000a8e: goto %00000795

00000795:
00000798: R0 := 0x11000
0000079f: R0 := mem[R0 + 0x28, el]:u64
000007a4: R30 := 0x760
000007a7: call @__cxa_finalize with return %0000077c

0000077c:
00000784: R30 := 0x764
00000786: call @deregister_tm_clones with return %00000788

00000788:
0000078b: R0 := 1
00000793: mem := mem with [R19 + 0x30] <- 7:0[R0]
00000a8f: goto %0000041f

0000041f:
00000429: R19 := mem[R31 + 0x10, el]:u64
00000430: R29 := mem[R31, el]:u64
00000435: R30 := mem[R31 + 8, el]:u64
00000439: R31 := R31 + 0x20
0000043e: call R30 with noreturn

00000a90: sub __libc_csu_fini(__libc_csu_fini_result)
00000aaf: __libc_csu_fini_result :: out u32 = low:32[R0]

00000648:
0000064b: call R30 with noreturn

00000a91: sub __libc_csu_init(__libc_csu_init_result)
00000ab0: __libc_csu_init_result :: out u32 = low:32[R0]

00000555:
00000559: #9 := R31 - 0x40
0000055f: mem := mem with [#9, el]:u64 <- R29
00000565: mem := mem with [#9 + 8, el]:u64 <- R30
00000569: R31 := #9
0000056f: R29 := R31
00000575: #10 := R31 + 0x10
0000057b: mem := mem with [#10, el]:u64 <- R19
00000581: mem := mem with [#10 + 8, el]:u64 <- R20
00000586: R20 := 0x10000
0000058c: R20 := R20 + 0xDA0
00000592: #11 := R31 + 0x20
00000598: mem := mem with [#11, el]:u64 <- R21
0000059e: mem := mem with [#11 + 8, el]:u64 <- R22
000005a3: R21 := 0x10000
000005a9: R21 := R21 + 0xD98
000005b0: R20 := R20 + ~R21 + 1
000005b6: R22 := pad:64[31:0[R0]]
000005bc: #12 := R31 + 0x30
000005c2: mem := mem with [#12, el]:u64 <- R23
000005c8: mem := mem with [#12 + 8, el]:u64 <- R24
000005ce: R23 := R1
000005d4: R24 := R2
000005d9: R30 := 0x8A0
000005dc: call @_init with return %000005de

000005de:
000005e2: #13 := ~(R20 ~>> 3)
000005e6: #14 := ~(R20 ~>> 3) + 1
000005eb: VF := extend:65[#14] <> extend:65[#13] + 1
000005f0: CF := pad:65[#14] <> pad:65[#13] + 1
000005f4: ZF := #14 = 0
000005f8: NF := 63:63[#14]
000005fe: when ZF goto %000005fc
00000a92: goto %0000064d

0000064d:
00000653: R20 :=

          >> 3 | R20 << 0x3D]
00000658: R19 := 0
00000a93: goto %0000065a

0000065a:
00000660: R3 := mem[R21 + (60:0[R19].0), el]:u64
00000666: R2 := R24
0000066c: R19 := R19 + 1
00000672: R1 := R23
00000678: R0 := pad:64[31:0[R22]]
0000067d: R30 := 0x8C8
00000680: call R3 with return %00000682

00000682:
00000686: #18 := ~R19
0000068b: #19 := R20 + ~R19 + 1
00000691: VF := extend:65[#19] <> extend:65[R20] + extend:65[#18] + 1
00000697: CF := pad:65[#19] <> pad:65[R20] + pad:65[#18] + 1
0000069b: ZF := #19 = 0
0000069f: NF := 63:63[#19]
000006a4: when ZF <> 1 goto %0000065a
00000a94: goto %000005fc

000005fc:
00000605: #15 := R31 + 0x10
0000060a: R19 := mem[#15, el]:u64
0000060f: R20 := mem[#15 + 8, el]:u64
00000615: #16 := R31 + 0x20
0000061a: R21 := mem[#16, el]:u64
0000061f: R22 := mem[#16 + 8, el]:u64
00000625: #17 := R31 + 0x30
0000062a: R23 := mem[#17, el]:u64
0000062f: R24 := mem[#17 + 8, el]:u64
00000636: R29 := mem[R31, el]:u64
0000063b: R30 := mem[R31 + 8, el]:u64
0000063f: R31 := R31 + 0x40
00000644: call R30 with noreturn

00000a95: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
00000ab1: __libc_start_main_main :: in u64 = R0
00000ab2: __libc_start_main_arg2 :: in u32 = low:32[R1]
00000ab3: __libc_start_main_arg3 :: in out u64 = R2
00000ab4: __libc_start_main_auxv :: in out u64 = R3
00000ab5: __libc_start_main_result :: out u32 = low:32[R0]

0000032a:
0000089c: R16 := 0x11000
000008a3: R17 := mem[R16 + 8, el]:u64
000008a9: R16 := R16 + 8
000008ae: call R17 with noreturn

00000a96: sub _fini(_fini_result)
00000ab6: _fini_result :: out u32 = low:32[R0]

00000030:
00000034: #0 := R31 - 0x10
0000003a: mem := mem with [#0, el]:u64 <- R29
00000040: mem := mem with [#0 + 8, el]:u64 <- R30
00000044: R31 := #0
0000004a: R29 := R31
00000051: R29 := mem[R31, el]:u64
00000056: R30 := mem[R31 + 8, el]:u64
0000005a: R31 := R31 + 0x10
0000005f: call R30 with noreturn

00000a97: sub _init(_init_result)
00000ab7: _init_result :: out u32 = low:32[R0]

000005da:
0000099a: #23 := R31 - 0x10
000009a0: mem := mem with [#23, el]:u64 <- R29
000009a6: mem := mem with [#23 + 8, el]:u64 <- R30
000009aa: R31 := #23
000009b0: R29 := R31
000009b5: R30 := 0x604
000009b7: call @call_weak_fn with return %000009b9

000009b9:
000009be: R29 := mem[R31, el]:u64
000009c3: R30 := mem[R31 + 8, el]:u64
000009c7: R31 := R31 + 0x10
000009cc: call R30 with noreturn

00000a98: sub _start(_start_result)
00000ab8: _start_result :: out u32 = low:32[R0]

000002df:
000002e2: R29 := 0
000002e7: R30 := 0
000002ed: R5 := R0
000002f4: R1 := mem[R31, el]:u64
000002fa: R2 := R31 + 8
00000300: R6 := R31
00000305: R0 := 0x10000
0000030c: R0 := mem[R0 + 0xFD0, el]:u64
00000311: R3 := 0x10000
00000318: R3 := mem[R3 + 0xFB8, el]:u64
0000031d: R4 := 0x10000
00000324: R4 := mem[R4 + 0xF90, el]:u64
00000329: R30 := 0x6A4
0000032c: call @__libc_start_main with return %0000032e

0000032e:
00000331: R30 := 0x6A8
00000334: call @abort with return %00000a99

00000a99:
00000a9a: call @call_weak_fn with noreturn

00000a9b: sub abort()


00000332:
000008c8: R16 := 0x11000
000008cf: R17 := mem[R16 + 0x18, el]:u64
000008d5: R16 := R16 + 0x18
000008da: call R17 with noreturn

00000a9c: sub call_weak_fn(call_weak_fn_result)
00000ab9: call_weak_fn_result :: out u32 = low:32[R0]

00000336:
00000339: R0 := 0x10000
00000340: R0 := mem[R0 + 0xFB0, el]:u64
00000346: when R0 = 0 goto %00000344
00000a9d: goto %000007e5

00000344:
0000034c: call R30 with noreturn

000007e5:
000007e8: goto @__gmon_start__

000007e6:
000008b2: R16 := 0x11000
000008b9: R17 := mem[R16 + 0x10, el]:u64
000008bf: R16 := R16 + 0x10
000008c4: call R17 with noreturn

00000a9e: sub deregister_tm_clones(deregister_tm_clones_result)
00000aba: deregister_tm_clones_result :: out u32 = low:32[R0]

00000350:
00000353: R0 := 0x11000
00000359: R0 := R0 + 0x30
0000035e: R1 := 0x11000
00000364: R1 := R1 + 0x30
0000036a: #1 := ~R0
0000036f: #2 := R1 + ~R0 + 1
00000375: VF := extend:65[#2] <> extend:65[R1] + extend:65[#1] + 1
0000037b: CF := pad:65[#2] <> pad:65[R1] + pad:65[#1] + 1
0000037f: ZF := #2 = 0
00000383: NF := 63:63[#2]
00000389: when ZF goto %00000387
00000a9f: goto %000007c7

000007c7:
000007ca: R1 := 0x10000
000007d1: R1 := mem[R1 + 0xF98, el]:u64
000007d6: when R1 = 0 goto %00000387
00000aa0: goto %000007da

00000387:
0000038f: call R30 with noreturn

000007da:
000007de: R16 := R1
000007e3: call R16 with noreturn

00000aa1: sub frame_dummy(frame_dummy_result)
00000abb: frame_dummy_result :: out u32 = low:32[R0]

00000440:
00000442: call @register_tm_clones with noreturn

00000aa2: sub main(main_argc, main_argv, main_result)
00000abc: main_argc :: in u32 = low:32[R0]
00000abd: main_argv :: in out u64 = R1
00000abe: main_result :: out u32 = low:32[R0]

0000049e:
000004a2: R31 := R31 - 0x30
000004a8: #6 := R31 + 0x20
000004ae: mem := mem with [#6, el]:u64 <- R29
000004b4: mem := mem with [#6 + 8, el]:u64 <- R30
000004ba: R29 := R31 + 0x20
000004c1: mem := mem with [R29 - 4, el]:u32 <- 0
000004c9: mem := mem with [R29 - 8, el]:u32 <- 31:0[R0]
000004d0: R8 := pad:64[mem[R29 - 8, el]:u32]
000004d8: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R8]
000004de: #7 := 31:0[R8] + 0
000004e3: VF := extend:33[#7] <> extend:33[31:0[R8]] + 0
000004e8: CF := pad:33[#7] <> pad:33[31:0[R8]] - 0x100000000
000004ec: ZF := #7 = 0
000004f0: NF := 31:31[#7]
000004f4: R8 := pad:64[#7]
00000500: when ZF <> 1 goto %000004f9
00000501: goto %000004fc

000004fc:
000004fd: R8 := 1
00000503: goto %000004ff

000004f9:
000004fa: R8 := 0
00000502: goto %000004ff

000004ff:
00000509: when 0:0[R8] goto %00000507
00000aa3: goto %000006f0

00000507:
0000050f: R8 := 0x10000
00000516: R8 := mem[R8 + 0xFC0, el]:u64
0000051e: mem := mem with [R31 + 0x10, el]:u64 <- R8
00000523: goto %00000521

000006f0:
000006f3: goto %000006f1

000006f1:
000006f9: R8 := pad:64[mem[R31 + 0xC, el]:u32]
000006ff: #20 := 31:0[R8] - 1
00000704: VF := extend:33[#20] <> extend:33[31:0[R8]] - 1
00000709: CF := pad:33[#20] <> pad:33[31:0[R8]] + 0xFFFFFFFF
0000070d: ZF := #20 = 0
00000711: NF := 31:31[#20]
00000715: R8 := pad:64[#20]
00000721: when ZF <> 1 goto %0000071a
00000722: goto %0000071d

0000071d:
0000071e: R8 := 1
00000724: goto %00000720

0000071a:
0000071b: R8 := 0
00000723: goto %00000720

00000720:
00000729: when 0:0[R8] goto %000006a8
00000aa4: goto %0000072d

000006a8:
000006ab: R8 := 0x10000
000006b2: R8 := mem[R8 + 0xFC8, el]:u64
000006ba: mem := mem with [R31 + 0x10, el]:u64 <- R8
000006be: goto %00000521

0000072d:
00000730: goto %0000072e

0000072e:
00000736: R8 := pad:64[mem[R31 + 0xC, el]:u32]
0000073c: #21 := 31:0[R8] - 2
00000741: VF := extend:33[#21] <> extend:33[31:0[R8]] - 2
00000746: CF := pad:33[#21] <> pad:33[31:0[R8]] + 0xFFFFFFFE
0000074a: ZF := #21 = 0
0000074e: NF := 31:31[#21]
00000752: R8 := pad:64[#21]
0000075e: when ZF <> 1 goto %00000757
0000075f: goto %0000075a

0000075a:
0000075b: R8 := 1
00000761: goto %0000075d

00000757:
00000758: R8 := 0
00000760: goto %0000075d

0000075d:
00000766: when 0:0[R8] goto %000006c0
00000aa5: goto %0000076a

000006c0:
000006c3: R8 := 0x10000
000006ca: R8 := mem[R8 + 0xFD8, el]:u64
000006d2: mem := mem with [R31 + 0x10, el]:u64 <- R8
000006d6: goto %00000521

0000076a:
0000076c: goto %000006d8

000006d8:
000006db: R8 := 0x10000
000006e2: R8 := mem[R8 + 0xFC0, el]:u64
000006ea: mem := mem with [R31 + 0x10, el]:u64 <- R8
000006ee: goto %00000521

00000521:
00000529: R8 := mem[R31 + 0x10, el]:u64
0000052e: R30 := 0x854
00000531: call R8 with return %00000533

00000533:
00000536: R0 := 0
0000053c: #8 := R31 + 0x20
00000541: R29 := mem[#8, el]:u64
00000546: R30 := mem[#8 + 8, el]:u64
0000054c: R31 := R31 + 0x30
00000551: call R30 with noreturn

00000aa6: sub register_tm_clones(register_tm_clones_result)
00000abf: register_tm_clones_result :: out u32 = low:32[R0]

00000391:
00000394: R0 := 0x11000
0000039a: R0 := R0 + 0x30
0000039f: R1 := 0x11000
000003a5: R1 := R1 + 0x30
000003ac: R1 := R1 + ~R0 + 1
000003b3: R2 := 0.0:0[R1 >> 0x3F | R1 << 1]
000003ba: R1 := R2 + (R1 ~>> 3)
000003c0: #3 := ~(R1 ~>> 1)
000003c4: #4 := ~(R1 ~>> 1) + 1
000003c9: VF := extend:65[#4] <> extend:65[#3] + 1
000003ce: CF := pad:65[#4] <> pad:65[#3] + 1
000003d2: ZF := #4 = 0
000003d6: NF := 63:63[#4]
000003de: R1 :=

          >> 1 | R1 << 0x3F]
000003e4: when ZF goto %000003e2
00000aa7: goto %000007a9

000007a9:
000007ac: R2 := 0x10000
000007b3: R2 := mem[R2 + 0xFE0, el]:u64
000007b8: when R2 = 0 goto %000003e2
00000aa8: goto %000007bc

000003e2:
000003ea: call R30 with noreturn

000007bc:
000007c0: R16 := R2
000007c5: call R16 with noreturn

00000aa9: sub set_seven(set_seven_result)
00000ac0: set_seven_result :: out u32 = low:32[R0]

00000480:
00000483: R9 := 0x10000
0000048a: R9 := mem[R9 + 0xFA8, el]:u64
0000048f: R8 := 7
00000497: mem := mem with [R9, el]:u32 <- 31:0[R8]
0000049c: call R30 with noreturn

00000aaa: sub set_six(set_six_result)
00000ac1: set_six_result :: out u32 = low:32[R0]

00000462:
00000465: R9 := 0x10000
0000046c: R9 := mem[R9 + 0xFA8, el]:u64
00000471: R8 := 6
00000479: mem := mem with [R9, el]:u32 <- 31:0[R8]
0000047e: call R30 with noreturn

00000aab: sub set_two(set_two_result)
00000ac2: set_two_result :: out u32 = low:32[R0]

00000444:
00000447: R9 := 0x10000
0000044e: R9 := mem[R9 + 0xFA8, el]:u64
00000453: R8 := 2
0000045b: mem := mem with [R9, el]:u32 <- 31:0[R8]
00000460: call R30 with noreturn
