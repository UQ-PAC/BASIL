00000a65: program
00000a42: sub __cxa_finalize(__cxa_finalize_result)
00000a66: __cxa_finalize_result :: out u32 = low:32[R0]

00000764:
00000845: R16 := 0x10000
0000084c: R17 := mem[R16 + 0xFA0, el]:u64
00000852: R16 := R16 + 0xFA0
00000857: call R17 with noreturn

00000a43: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
00000a67: __do_global_dtors_aux_result :: out u32 = low:32[R0]

000003e0:
000003e4: #5 := R31 - 0x20
000003ea: mem := mem with [#5, el]:u64 <- R29
000003f0: mem := mem with [#5 + 8, el]:u64 <- R30
000003f4: R31 := #5
000003fa: R29 := R31
00000402: mem := mem with [R31 + 0x10, el]:u64 <- R19
00000407: R19 := 0x11000
0000040e: R0 := pad:64[mem[R19 + 0x10]]
00000415: when 31:0[R0] <> 0 goto %00000413
00000a44: goto %0000072d

0000072d:
00000730: R0 := 0x10000
00000737: R0 := mem[R0 + 0xFD8, el]:u64
0000073d: when R0 = 0 goto %0000073b
00000a45: goto %00000754

00000754:
00000757: R0 := 0x11000
0000075e: R0 := mem[R0 + 8, el]:u64
00000763: R30 := 0x700
00000766: call @__cxa_finalize with return %0000073b

0000073b:
00000743: R30 := 0x704
00000745: call @deregister_tm_clones with return %00000747

00000747:
0000074a: R0 := 1
00000752: mem := mem with [R19 + 0x10] <- 7:0[R0]
00000a46: goto %00000413

00000413:
0000041d: R19 := mem[R31 + 0x10, el]:u64
00000424: R29 := mem[R31, el]:u64
00000429: R30 := mem[R31 + 8, el]:u64
0000042d: R31 := R31 + 0x20
00000432: call R30 with noreturn

00000a47: sub __libc_csu_fini(__libc_csu_fini_result)
00000a68: __libc_csu_fini_result :: out u32 = low:32[R0]

00000612:
00000615: call R30 with noreturn

00000a48: sub __libc_csu_init(__libc_csu_init_result)
00000a69: __libc_csu_init_result :: out u32 = low:32[R0]

0000051f:
00000523: #8 := R31 - 0x40
00000529: mem := mem with [#8, el]:u64 <- R29
0000052f: mem := mem with [#8 + 8, el]:u64 <- R30
00000533: R31 := #8
00000539: R29 := R31
0000053f: #9 := R31 + 0x10
00000545: mem := mem with [#9, el]:u64 <- R19
0000054b: mem := mem with [#9 + 8, el]:u64 <- R20
00000550: R20 := 0x10000
00000556: R20 := R20 + 0xD90
0000055c: #10 := R31 + 0x20
00000562: mem := mem with [#10, el]:u64 <- R21
00000568: mem := mem with [#10 + 8, el]:u64 <- R22
0000056d: R21 := 0x10000
00000573: R21 := R21 + 0xD88
0000057a: R20 := R20 + ~R21 + 1
00000580: R22 := pad:64[31:0[R0]]
00000586: #11 := R31 + 0x30
0000058c: mem := mem with [#11, el]:u64 <- R23
00000592: mem := mem with [#11 + 8, el]:u64 <- R24
00000598: R23 := R1
0000059e: R24 := R2
000005a3: R30 := 0x830
000005a6: call @_init with return %000005a8

000005a8:
000005ac: #12 := ~(R20 ~>> 3)
000005b0: #13 := ~(R20 ~>> 3) + 1
000005b5: VF := extend:65[#13] <> extend:65[#12] + 1
000005ba: CF := pad:65[#13] <> pad:65[#12] + 1
000005be: ZF := #13 = 0
000005c2: NF := 63:63[#13]
000005c8: when ZF goto %000005c6
00000a49: goto %00000617

00000617:
0000061d: R20 :=

          >> 3 | R20 << 0x3D]
00000622: R19 := 0
00000a4a: goto %00000624

00000624:
0000062a: R3 := mem[R21 + (60:0[R19].0), el]:u64
00000630: R2 := R24
00000636: R19 := R19 + 1
0000063c: R1 := R23
00000642: R0 := pad:64[31:0[R22]]
00000647: R30 := 0x858
0000064a: call R3 with return %0000064c

0000064c:
00000650: #17 := ~R19
00000655: #18 := R20 + ~R19 + 1
0000065b: VF := extend:65[#18] <> extend:65[R20] + extend:65[#17] + 1
00000661: CF := pad:65[#18] <> pad:65[R20] + pad:65[#17] + 1
00000665: ZF := #18 = 0
00000669: NF := 63:63[#18]
0000066e: when ZF <> 1 goto %00000624
00000a4b: goto %000005c6

000005c6:
000005cf: #14 := R31 + 0x10
000005d4: R19 := mem[#14, el]:u64
000005d9: R20 := mem[#14 + 8, el]:u64
000005df: #15 := R31 + 0x20
000005e4: R21 := mem[#15, el]:u64
000005e9: R22 := mem[#15 + 8, el]:u64
000005ef: #16 := R31 + 0x30
000005f4: R23 := mem[#16, el]:u64
000005f9: R24 := mem[#16 + 8, el]:u64
00000600: R29 := mem[R31, el]:u64
00000605: R30 := mem[R31 + 8, el]:u64
00000609: R31 := R31 + 0x40
0000060e: call R30 with noreturn

00000a4c: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
00000a6a: __libc_start_main_main :: in u64 = R0
00000a6b: __libc_start_main_arg2 :: in u32 = low:32[R1]
00000a6c: __libc_start_main_arg3 :: in out u64 = R2
00000a6d: __libc_start_main_auxv :: in out u64 = R3
00000a6e: __libc_start_main_result :: out u32 = low:32[R0]

0000031e:
0000085b: R16 := 0x10000
00000862: R17 := mem[R16 + 0xFA8, el]:u64
00000868: R16 := R16 + 0xFA8
0000086d: call R17 with noreturn

00000a4d: sub _fini(_fini_result)
00000a6f: _fini_result :: out u32 = low:32[R0]

00000034:
00000038: #0 := R31 - 0x10
0000003e: mem := mem with [#0, el]:u64 <- R29
00000044: mem := mem with [#0 + 8, el]:u64 <- R30
00000048: R31 := #0
0000004e: R29 := R31
00000055: R29 := mem[R31, el]:u64
0000005a: R30 := mem[R31 + 8, el]:u64
0000005e: R31 := R31 + 0x10
00000063: call R30 with noreturn

00000a4e: sub _init(_init_result)
00000a70: _init_result :: out u32 = low:32[R0]

000005a4:
00000955: #23 := R31 - 0x10
0000095b: mem := mem with [#23, el]:u64 <- R29
00000961: mem := mem with [#23 + 8, el]:u64 <- R30
00000965: R31 := #23
0000096b: R29 := R31
00000970: R30 := 0x5A4
00000972: call @call_weak_fn with return %00000974

00000974:
00000979: R29 := mem[R31, el]:u64
0000097e: R30 := mem[R31 + 8, el]:u64
00000982: R31 := R31 + 0x10
00000987: call R30 with noreturn

00000a4f: sub _start(_start_result)
00000a71: _start_result :: out u32 = low:32[R0]

000002d3:
000002d6: R29 := 0
000002db: R30 := 0
000002e1: R5 := R0
000002e8: R1 := mem[R31, el]:u64
000002ee: R2 := R31 + 8
000002f4: R6 := R31
000002f9: R0 := 0x10000
00000300: R0 := mem[R0 + 0xFF0, el]:u64
00000305: R3 := 0x10000
0000030c: R3 := mem[R3 + 0xFE8, el]:u64
00000311: R4 := 0x10000
00000318: R4 := mem[R4 + 0xFC8, el]:u64
0000031d: R30 := 0x644
00000320: call @__libc_start_main with return %00000322

00000322:
00000325: R30 := 0x648
00000328: call @abort with return %00000a50

00000a50:
00000a51: call @call_weak_fn with noreturn

00000a52: sub abort()


00000326:
00000887: R16 := 0x10000
0000088e: R17 := mem[R16 + 0xFB8, el]:u64
00000894: R16 := R16 + 0xFB8
00000899: call R17 with noreturn

00000a53: sub call_weak_fn(call_weak_fn_result)
00000a72: call_weak_fn_result :: out u32 = low:32[R0]

0000032a:
0000032d: R0 := 0x10000
00000334: R0 := mem[R0 + 0xFE0, el]:u64
0000033a: when R0 = 0 goto %00000338
00000a54: goto %000007a4

00000338:
00000340: call R30 with noreturn

000007a4:
000007a7: goto @__gmon_start__

000007a5:
00000871: R16 := 0x10000
00000878: R17 := mem[R16 + 0xFB0, el]:u64
0000087e: R16 := R16 + 0xFB0
00000883: call R17 with noreturn

00000a55: sub deregister_tm_clones(deregister_tm_clones_result)
00000a73: deregister_tm_clones_result :: out u32 = low:32[R0]

00000344:
00000347: R0 := 0x11000
0000034d: R0 := R0 + 0x10
00000352: R1 := 0x11000
00000358: R1 := R1 + 0x10
0000035e: #1 := ~R0
00000363: #2 := R1 + ~R0 + 1
00000369: VF := extend:65[#2] <> extend:65[R1] + extend:65[#1] + 1
0000036f: CF := pad:65[#2] <> pad:65[R1] + pad:65[#1] + 1
00000373: ZF := #2 = 0
00000377: NF := 63:63[#2]
0000037d: when ZF goto %0000037b
00000a56: goto %00000786

00000786:
00000789: R1 := 0x10000
00000790: R1 := mem[R1 + 0xFD0, el]:u64
00000795: when R1 = 0 goto %0000037b
00000a57: goto %00000799

0000037b:
00000383: call R30 with noreturn

00000799:
0000079d: R16 := R1
000007a2: call R16 with noreturn

00000a58: sub frame_dummy(frame_dummy_result)
00000a74: frame_dummy_result :: out u32 = low:32[R0]

00000434:
00000436: call @register_tm_clones with noreturn

00000a59: sub main(main_argc, main_argv, main_result)
00000a75: main_argc :: in u32 = low:32[R0]
00000a76: main_argv :: in out u64 = R1
00000a77: main_result :: out u32 = low:32[R0]

00000495:
00000499: #6 := R31 - 0x30
0000049f: mem := mem with [#6, el]:u64 <- R29
000004a5: mem := mem with [#6 + 8, el]:u64 <- R30
000004a9: R31 := #6
000004af: R29 := R31
000004b7: mem := mem with [R31 + 0x1C, el]:u32 <- 31:0[R0]
000004be: R0 := pad:64[mem[R31 + 0x1C, el]:u32]
000004c4: #7 := 31:0[R0] - 2
000004c9: VF := extend:33[#7] <> extend:33[31:0[R0]] - 2
000004ce: CF := pad:33[#7] <> pad:33[31:0[R0]] + 0xFFFFFFFE
000004d2: ZF := #7 = 0
000004d6: NF := 31:31[#7]
000004dc: when ZF goto %000004da
00000a5a: goto %00000687

000004da:
000004e2: R0 := 0
000004e8: R0 := R0 + 0x74C
000004f0: mem := mem with [R31 + 0x28, el]:u64 <- R0
000004f5: goto %000004f3

00000687:
0000068c: R0 := pad:64[mem[R31 + 0x1C, el]:u32]
00000692: #19 := 31:0[R0] - 2
00000697: VF := extend:33[#19] <> extend:33[31:0[R0]] - 2
0000069c: CF := pad:33[#19] <> pad:33[31:0[R0]] + 0xFFFFFFFE
000006a0: ZF := #19 = 0
000006a4: NF := 31:31[#19]
000006ab: when NF = VF & ~ZF goto %00000672
00000a5b: goto %000006af

000006af:
000006b4: R0 := pad:64[mem[R31 + 0x1C, el]:u32]
000006ba: #20 := 31:0[R0] + 0
000006bf: VF := extend:33[#20] <> extend:33[31:0[R0]] + 0
000006c4: CF := pad:33[#20] <> pad:33[31:0[R0]] - 0x100000000
000006c8: ZF := #20 = 0
000006cc: NF := 31:31[#20]
000006d2: when ZF goto %000006d0
00000a5c: goto %00000703

000006d0:
000006d8: R0 := 0
000006de: R0 := R0 + 0x71C
000006e6: mem := mem with [R31 + 0x28, el]:u64 <- R0
000006ea: goto %000004f3

00000703:
00000708: R0 := pad:64[mem[R31 + 0x1C, el]:u32]
0000070e: #21 := 31:0[R0] - 1
00000713: VF := extend:33[#21] <> extend:33[31:0[R0]] - 1
00000718: CF := pad:33[#21] <> pad:33[31:0[R0]] + 0xFFFFFFFF
0000071c: ZF := #21 = 0
00000720: NF := 31:31[#21]
00000725: when ZF goto %000006ec
00000a5d: goto %00000729

000006ec:
000006ef: R0 := 0
000006f5: R0 := R0 + 0x734
000006fd: mem := mem with [R31 + 0x28, el]:u64 <- R0
00000701: goto %000004f3

00000729:
0000072b: goto %00000672

00000672:
00000675: R0 := 0
0000067b: R0 := R0 + 0x71C
00000683: mem := mem with [R31 + 0x28, el]:u64 <- R0
00000a5e: goto %000004f3

000004f3:
000004fb: R0 := mem[R31 + 0x28, el]:u64
00000500: R30 := 0x7EC
00000503: call R0 with return %00000505

00000505:
00000508: R0 := 0
0000050f: R29 := mem[R31, el]:u64
00000514: R30 := mem[R31 + 8, el]:u64
00000518: R31 := R31 + 0x30
0000051d: call R30 with noreturn

00000a5f: sub register_tm_clones(register_tm_clones_result)
00000a78: register_tm_clones_result :: out u32 = low:32[R0]

00000385:
00000388: R0 := 0x11000
0000038e: R0 := R0 + 0x10
00000393: R1 := 0x11000
00000399: R1 := R1 + 0x10
000003a0: R1 := R1 + ~R0 + 1
000003a7: R2 := 0.0:0[R1 >> 0x3F | R1 << 1]
000003ae: R1 := R2 + (R1 ~>> 3)
000003b4: #3 := ~(R1 ~>> 1)
000003b8: #4 := ~(R1 ~>> 1) + 1
000003bd: VF := extend:65[#4] <> extend:65[#3] + 1
000003c2: CF := pad:65[#4] <> pad:65[#3] + 1
000003c6: ZF := #4 = 0
000003ca: NF := 63:63[#4]
000003d2: R1 :=
          63:63[63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1].63:63[R1]].62:0[R1
          >> 1 | R1 << 0x3F]
000003d8: when ZF goto %000003d6
00000a60: goto %00000768

00000768:
0000076b: R2 := 0x10000
00000772: R2 := mem[R2 + 0xFF8, el]:u64
00000777: when R2 = 0 goto %000003d6
00000a61: goto %0000077b

000003d6:
000003de: call R30 with noreturn

0000077b:
0000077f: R16 := R2
00000784: call R16 with noreturn

00000a62: sub set_seven(set_seven_result)
00000a79: set_seven_result :: out u32 = low:32[R0]

00000476:
00000479: R0 := 0x11000
0000047f: R0 := R0 + 0x14
00000484: R1 := 7
0000048c: mem := mem with [R0, el]:u32 <- 31:0[R1]
00000493: call R30 with noreturn

00000a63: sub set_six(set_six_result)
00000a7a: set_six_result :: out u32 = low:32[R0]

00000457:
0000045a: R0 := 0x11000
00000460: R0 := R0 + 0x14
00000465: R1 := 6
0000046d: mem := mem with [R0, el]:u32 <- 31:0[R1]
00000474: call R30 with noreturn

00000a64: sub set_two(set_two_result)
00000a7b: set_two_result :: out u32 = low:32[R0]

00000438:
0000043b: R0 := 0x11000
00000441: R0 := R0 + 0x14
00000446: R1 := 2
0000044e: mem := mem with [R0, el]:u32 <- 31:0[R1]
00000455: call R30 with noreturn
