000462ac: program
00045b6f: sub __assert_fail(__assert_fail_result)
000462ad: __assert_fail_result :: out u32 = low:32[R0]

000205d7:
0003fff2: R16 := 0x430000
0003fff9: R17 := mem[R16 + 0x2D8, el]:u64
0003ffff: R16 := R16 + 0x2D8
00040004: call R17 with noreturn

00045b70: sub __ctype_b_loc(__ctype_b_loc_result)
000462ae: __ctype_b_loc_result :: out u32 = low:32[R0]

0001682d:
0003fd5e: R16 := 0x430000
0003fd65: R17 := mem[R16 + 0x1E8, el]:u64
0003fd6b: R16 := R16 + 0x1E8
0003fd70: call R17 with noreturn

00045b71: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
000462af: __do_global_dtors_aux_result :: out u32 = low:32[R0]

0003f0a7:
0003f0ab: #498 := R31 - 0x20
0003f0b1: mem := mem with [#498, el]:u64 <- R29
0003f0b7: mem := mem with [#498 + 8, el]:u64 <- R30
0003f0bb: R31 := #498
0003f0c1: R29 := R31
0003f0c9: mem := mem with [R31 + 0x10, el]:u64 <- R19
0003f0ce: R19 := 0x430000
0003f0d5: R0 := pad:64[mem[R19 + 0x388]]
0003f0db: when 0:0[R0] goto %0003f0d9
00045b72: goto %0003f0fe

0003f0fe:
0003f101: R30 := 0x4028EC
0003f103: call @deregister_tm_clones with return %0003f105

0003f105:
0003f108: R0 := 1
0003f110: mem := mem with [R19 + 0x388] <- 7:0[R0]
00045b73: goto %0003f0d9

0003f0d9:
0003f0e3: R19 := mem[R31 + 0x10, el]:u64
0003f0ea: R29 := mem[R31, el]:u64
0003f0ef: R30 := mem[R31 + 8, el]:u64
0003f0f3: R31 := R31 + 0x20
0003f0f8: call R30 with noreturn

00045b74: sub __errno_location(__errno_location_result)
000462b0: __errno_location_result :: out u64 = R0

00020e87:
00040008: R16 := 0x430000
0004000f: R17 := mem[R16 + 0x2E0, el]:u64
00040015: R16 := R16 + 0x2E0
0004001a: call R17 with noreturn

00045b75: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
000462b1: __libc_start_main_main :: in u64 = R0
000462b2: __libc_start_main_arg2 :: in u32 = low:32[R1]
000462b3: __libc_start_main_arg3 :: in out u64 = R2
000462b4: __libc_start_main_auxv :: in out u64 = R3
000462b5: __libc_start_main_result :: out u32 = low:32[R0]

00016273:
0003f8e6: R16 := 0x430000
0003f8ed: R17 := mem[R16 + 0x48, el]:u64
0003f8f3: R16 := R16 + 0x48
0003f8f8: call R17 with noreturn

00045b76: sub __posix_getopt(__posix_getopt_result)
000462b6: __posix_getopt_result :: out u32 = low:32[R0]

00039392:
0003fb4e: R16 := 0x430000
0003fb55: R17 := mem[R16 + 0x128, el]:u64
0003fb5b: R16 := R16 + 0x128
0003fb60: call R17 with noreturn

00045b77: sub _dl_relocate_static_pie(_dl_relocate_static_pie_result)
000462b7: _dl_relocate_static_pie_result :: out u32 = low:32[R0]

0003f007:
0003f00a: call R30 with noreturn

00045b78: sub _fini(_fini_result)
000462b8: _fini_result :: out u32 = low:32[R0]

00000020:
00000026: #0 := R31 - 0x10
0000002c: mem := mem with [#0, el]:u64 <- R29
00000032: mem := mem with [#0 + 8, el]:u64 <- R30
00000036: R31 := #0
0000003c: R29 := R31
00000043: R29 := mem[R31, el]:u64
00000048: R30 := mem[R31 + 8, el]:u64
0000004c: R31 := R31 + 0x10
00000051: call R30 with noreturn

00045b79: sub _init(_init_result)
000462b9: _init_result :: out u32 = low:32[R0]

00040112:
00040118: #500 := R31 - 0x10
0004011e: mem := mem with [#500, el]:u64 <- R29
00040124: mem := mem with [#500 + 8, el]:u64 <- R30
00040128: R31 := #500
0004012e: R29 := R31
00040133: R30 := 0x402148
00040135: call @call_weak_fn with return %00040137

00040137:
0004013c: R29 := mem[R31, el]:u64
00040141: R30 := mem[R31 + 8, el]:u64
00040145: R31 := R31 + 0x10
0004014a: call R30 with noreturn

00045b7a: sub _start(_start_result)
000462ba: _start_result :: out u32 = low:32[R0]

00016235:
0001623a: R29 := 0
0001623f: R30 := 0
00016245: R5 := R0
0001624c: R1 := mem[R31, el]:u64
00016252: R2 := R31 + 8
00016258: R6 := R31
0001625d: R0 := 0x402000
00016263: R0 := R0 + 0x834
00016268: R3 := 0
0001626d: R4 := 0
00016272: R30 := 0x402830
00016275: call @__libc_start_main with return %00016277

00016277:
0001627a: R30 := 0x402834
0001627d: call @abort with return %0001627f

0001627f:
00016284: call @main with noreturn

00045b7b: sub abort()


0001627b:
0003fc98: R16 := 0x430000
0003fc9f: R17 := mem[R16 + 0x1A0, el]:u64
0003fca5: R16 := R16 + 0x1A0
0003fcaa: call R17 with noreturn

00045b7c: sub accept(accept_fd, accept_addr, accept_len_ptr, accept_result)
000462bb: accept_fd :: in u32 = low:32[R0]
000462bc: accept_addr :: in u64 = R1
000462bd: accept_len_ptr :: in out u64 = R2
000462be: accept_result :: out u32 = low:32[R0]

0003b7b5:
0003fb64: R16 := 0x430000
0003fb6b: R17 := mem[R16 + 0x130, el]:u64
0003fb71: R16 := R16 + 0x130
0003fb76: call R17 with noreturn

00045b7d: sub acl_add(acl_add_result)
000462bf: acl_add_result :: out u32 = low:32[R0]

0003948a:
00039491: #459 := R31 - 0x80
00039497: mem := mem with [#459, el]:u64 <- R29
0003949d: mem := mem with [#459 + 8, el]:u64 <- R30
000394a1: R31 := #459
000394a7: R29 := R31
000394af: mem := mem with [R31 + 0x10, el]:u64 <- R19
000394b7: mem := mem with [R31 + 0x38, el]:u64 <- R0
000394bf: mem := mem with [R31 + 0x30, el]:u64 <- R1
000394c7: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R2]
000394ce: mem := mem with [R31 + 0x50, el]:u64 <- 0
000394d5: mem := mem with [R31 + 0x78, el]:u64 <- 0
000394da: R0 := 0x20
000394e2: mem := mem with [R31 + 0x74, el]:u32 <- 31:0[R0]
000394e9: R0 := mem[R31 + 0x38, el]:u64
000394ee: VF := 0
000394f1: CF := 1
000394f5: ZF := R0 = 0
000394f9: NF := 63:63[R0]
000394ff: when ZF <> 1 goto %000394fd
00045b7e: goto %00039df9

000394fd:
00039507: R0 := mem[R31 + 0x30, el]:u64
0003950c: R30 := 0x402948
0003950e: call @strdup with return %00039510

00039510:
00039516: mem := mem with [R31 + 0x30, el]:u64 <- R0
0003951b: R0 := 8
00039520: R30 := 0x402954
00039522: call @zmalloc with return %00039524

00039524:
0003952a: mem := mem with [R31 + 0x60, el]:u64 <- R0
0003952f: R0 := 0x418000
00039535: R1 := R0 + 0xA00
0003953c: R0 := mem[R31 + 0x30, el]:u64
00039541: R30 := 0x402968
00039543: call @strcspn with return %00039545

00039545:
0003954b: mem := mem with [R31 + 0x58, el]:u64 <- R0
00039552: R0 := mem[R31 + 0x30, el]:u64
00039557: R30 := 0x402974
00039559: call @strlen with return %0003955b

0003955b:
0003955f: R1 := R0
00039566: R0 := mem[R31 + 0x58, el]:u64
0003956c: #460 := ~R1
00039571: #461 := R0 + ~R1
00039577: VF := extend:128[#461 + 1] <> extend:128[R0] + extend:128[#460] + 1
0003957d: CF := pad:128[#461 + 1] <> pad:128[R0] + pad:128[#460] + 1
00039581: ZF := #461 + 1 = 0
00039585: NF := 63:63[#461 + 1]
0003958b: when CF goto %00039589
00045b7f: goto %00039cc0

00039cc0:
00039cc5: R1 := mem[R31 + 0x30, el]:u64
00039ccc: R0 := mem[R31 + 0x58, el]:u64
00039cd3: R0 := R1 + R0
00039cda: mem := mem with [R0] <- 0
00039ce1: R0 := mem[R31 + 0x58, el]:u64
00039ce7: R0 := R0 + 1
00039cee: R1 := mem[R31 + 0x30, el]:u64
00039cf5: R0 := R1 + R0
00039cfb: R1 := R31 + 0x48
00039d00: R2 := 0xA
00039d05: R30 := 0x4029B0
00039d07: call @strtol with return %00039d09

00039d09:
00039d0f: mem := mem with [R31 + 0x74, el]:u32 <- 31:0[R0]
00039d16: R0 := pad:64[mem[R31 + 0x74, el]:u32]
00039d1b: VF := 0
00039d1e: CF := 1
00039d22: ZF := 31:0[R0] = 0
00039d26: NF := 31:31[R0]
00039d2d: when NF <> VF goto %00039d2b
00045b80: goto %00039d73

00039d73:
00039d78: R0 := pad:64[mem[R31 + 0x74, el]:u32]
00039d7e: #468 := 31:0[R0] - 0x20
00039d83: VF := extend:64[#468] <> extend:64[31:0[R0]] - 0x20
00039d88: CF := pad:64[#468] <> pad:64[31:0[R0]] + 0xFFFFFFE0
00039d8c: ZF := #468 = 0
00039d90: NF := 31:31[#468]
00039d97: when NF = VF & ~ZF goto %00039d2b
00045b81: goto %00039d9b

00039d9b:
00039da0: R0 := mem[R31 + 0x58, el]:u64
00039da6: R0 := R0 + 1
00039dad: R1 := mem[R31 + 0x30, el]:u64
00039db4: R0 := R1 + R0
00039dbb: R0 := pad:64[mem[R0]]
00039dc0: VF := 0
00039dc3: CF := 1
00039dc7: ZF := 31:0[R0] = 0
00039dcb: NF := 31:31[R0]
00039dd0: when ZF goto %00039d2b
00045b82: goto %00039dd4

00039dd4:
00039dd9: R0 := mem[R31 + 0x48, el]:u64
00039de0: R0 := pad:64[mem[R0]]
00039de5: VF := 0
00039de8: CF := 1
00039dec: ZF := 31:0[R0] = 0
00039df0: NF := 31:31[R0]
00039df5: when ZF goto %00039589
00045b83: goto %00039d2b

00039589:
00039593: R1 := mem[R31 + 0x30, el]:u64
00039598: R0 := 0x418000
0003959e: R0 := R0 + 0xA28
000395a3: R30 := 0x402A34
000395a5: call @strcmp with return %000395a7

000395a7:
000395aa: VF := 0
000395ad: CF := 1
000395b1: ZF := 31:0[R0] = 0
000395b5: NF := 31:31[R0]
000395bb: when ZF <> 1 goto %000395b9
00045b84: goto %00039ca7

000395b9:
000395c3: R1 := mem[R31 + 0x30, el]:u64
000395c8: R0 := 0x418000
000395ce: R0 := R0 + 0xA30
000395d3: R30 := 0x402A5C
000395d5: call @strcmp with return %000395d7

000395d7:
000395da: VF := 0
000395dd: CF := 1
000395e1: ZF := 31:0[R0] = 0
000395e5: NF := 31:31[R0]
000395eb: when ZF <> 1 goto %000395e9
00045b85: goto %00039c95

000395e9:
000395f2: R0 := R31 + 0x50
000395f7: R2 := 0
000395fe: R1 := mem[R31 + 0x30, el]:u64
00039603: R30 := 0x402A80
00039605: call @so_resolv with return %00039607

00039607:
0003960a: VF := 0
0003960d: CF := 1
00039611: ZF := 31:0[R0] = 0
00039615: NF := 31:31[R0]
0003961b: when ZF <> 1 goto %00039619
00045b86: goto %00039c52

00039c52:
00039c57: R2 := mem[R31 + 0x30, el]:u64
00039c5c: R0 := 0x418000
00039c62: R1 := R0 + 0xA38
00039c67: R0 := 3
00039c6c: R30 := 0x402A9C
00039c6e: call @syslog with return %00039c70

00039c70:
00039c75: R0 := mem[R31 + 0x60, el]:u64
00039c7a: R30 := 0x402AA4
00039c7c: call @free with return %00039c7e

00039c7e:
00039c83: R0 := mem[R31 + 0x30, el]:u64
00039c88: R30 := 0x402AAC
00039c8a: call @free with return %00039c8c

00039c8c:
00039c8f: R0 := 0
00039c93: goto %00039855

00039c95:
00039c9a: R0 := mem[R31 + 0x60, el]:u64
00039ca1: mem := mem with [R0, el]:u32 <- 0
00039ca5: goto %00039619

00039ca7:
00039cac: R0 := mem[R31 + 0x60, el]:u64
00039cb3: mem := mem with [R0, el]:u32 <- 0
00039cba: mem := mem with [R31 + 0x74, el]:u32 <- 0
00039cbe: goto %00039619

00039619:
00039623: R0 := mem[R31 + 0x50, el]:u64
00039628: VF := 0
0003962b: CF := 1
0003962f: ZF := R0 = 0
00039633: NF := 63:63[R0]
00039639: when ZF goto %00039637
00045b87: goto %00039b38

00039b38:
00039b3d: R0 := mem[R31 + 0x50, el]:u64
00039b45: mem := mem with [R31 + 0x68, el]:u64 <- R0
00039b4a: goto %00039b48

00039b48:
00039b50: R0 := mem[R31 + 0x68, el]:u64
00039b55: VF := 0
00039b58: CF := 1
00039b5c: ZF := R0 = 0
00039b60: NF := 63:63[R0]
00039b66: when ZF <> 1 goto %00039b64
00045b88: goto %00039bc3

00039b64:
00039b6e: R0 := mem[R31 + 0x68, el]:u64
00039b75: R0 := pad:64[mem[R0 + 4, el]:u32]
00039b7b: #467 := 31:0[R0] - 2
00039b80: VF := extend:64[#467] <> extend:64[31:0[R0]] - 2
00039b85: CF := pad:64[#467] <> pad:64[31:0[R0]] + 0xFFFFFFFE
00039b89: ZF := #467 = 0
00039b8d: NF := 31:31[#467]
00039b93: when ZF <> 1 goto %00039b91
00045b89: goto %00039bac

00039b91:
00039b9b: R0 := mem[R31 + 0x68, el]:u64
00039ba2: R0 := mem[R0 + 0x28, el]:u64
00039baa: mem := mem with [R31 + 0x68, el]:u64 <- R0
00045b8a: goto %00039b48

00039bac:
00039bb1: R0 := mem[R31 + 0x68, el]:u64
00039bb8: R0 := mem[R0 + 0x18, el]:u64
00039bc0: mem := mem with [R31 + 0x78, el]:u64 <- R0
00039bc5: goto %00039bc3

00039bc3:
00039bcb: R0 := mem[R31 + 0x78, el]:u64
00039bd0: VF := 0
00039bd3: CF := 1
00039bd7: ZF := R0 = 0
00039bdb: NF := 63:63[R0]
00039be1: when ZF <> 1 goto %00039bdf
00045b8b: goto %00039c01

00039bdf:
00039be9: R0 := mem[R31 + 0x78, el]:u64
00039bf0: R1 := pad:64[mem[R0 + 4, el]:u32]
00039bf7: R0 := mem[R31 + 0x60, el]:u64
00039bff: mem := mem with [R0, el]:u32 <- 31:0[R1]
00045b8c: goto %00039637

00039637:
00039641: R0 := mem[R31 + 0x60, el]:u64
00039648: R1 := pad:64[mem[R31 + 0x74, el]:u32]
00039650: mem := mem with [R0 + 4, el]:u32 <- 31:0[R1]
00039655: R1 := 0x20
0003965c: R0 := pad:64[mem[R31 + 0x74, el]:u32]
00039663: R0 := pad:64[31:0[R1] + ~31:0[R0] + 1]
00039668: R1 := 1
0003966f: R0 := R1 << pad:12[5:0[R0]]
00039675: R0 := pad:64[~31:0[R0] + 1]
0003967b: R1 := pad:64[7:0[R0].0]
00039680: R2 := 0x20
00039687: R0 := pad:64[mem[R31 + 0x74, el]:u32]
0003968e: R0 := pad:64[31:0[R2] + ~31:0[R0] + 1]
00039693: R2 := 1
0003969a: R0 := R2 << pad:12[5:0[R0]]
000396a0: R0 := pad:64[~31:0[R0] + 1]
000396a6: R0 := pad:64[23:0[R0].0]
000396ac: R0 := pad:64[23:16[R0].0]
000396b3: R1 := pad:64[31:0[R1] | 31:0[R0]]
000396b8: R2 := 0x20
000396bf: R0 := pad:64[mem[R31 + 0x74, el]:u32]
000396c6: R0 := pad:64[31:0[R2] + ~31:0[R0] + 1]
000396cb: R2 := 1
000396d2: R0 := R2 << pad:12[5:0[R0]]
000396d8: R0 := pad:64[~31:0[R0] + 1]
000396de: R0 := pad:64[31:8[R0]]
000396e4: R0 := pad:64[15:8[R0].0]
000396eb: R1 := pad:64[31:0[R1] | 31:0[R0]]
000396f0: R2 := 0x20
000396f7: R0 := pad:64[mem[R31 + 0x74, el]:u32]
000396fe: R0 := pad:64[31:0[R2] + ~31:0[R0] + 1]
00039703: R2 := 1
0003970a: R0 := R2 << pad:12[5:0[R0]]
00039710: R0 := pad:64[~31:0[R0] + 1]
00039716: R0 := pad:64[31:24[R0]]
0003971d: R0 := pad:64[31:0[R1] | 31:0[R0]]
00039725: mem := mem with [R31 + 0x74, el]:u32 <- 31:0[R0]
0003972c: R0 := mem[R31 + 0x60, el]:u64
00039733: R1 := pad:64[mem[R0, el]:u32]
0003973a: R0 := pad:64[mem[R31 + 0x74, el]:u32]
00039741: R1 := pad:64[31:0[R1] & 31:0[R0]]
00039748: R0 := mem[R31 + 0x60, el]:u64
0003974f: R0 := pad:64[mem[R0, el]:u32]
00039755: #462 := ~31:0[R0]
0003975a: #463 := 31:0[R1] + ~31:0[R0]
00039760: VF := extend:64[#463 + 1] <> extend:64[31:0[R1]] + extend:64[#462]
          + 1
00039766: CF := pad:64[#463 + 1] <> pad:64[31:0[R1]] + pad:64[#462] + 1
0003976a: ZF := #463 + 1 = 0
0003976e: NF := 31:31[#463 + 1]
00039774: when ZF goto %00039772
00045b8d: goto %00039ac9

00039ac9:
00039ace: R0 := mem[R31 + 0x78, el]:u64
00039ad3: VF := 0
00039ad6: CF := 1
00039ada: ZF := R0 = 0
00039ade: NF := 63:63[R0]
00039ae4: when ZF goto %00039ae2
00045b8e: goto %00039b1f

00039ae2:
00039aec: R0 := mem[R31 + 0x30, el]:u64
00045b8f: goto %00039aee

00039b1f:
00039b24: R0 := mem[R31 + 0x78, el]:u64
00039b2b: R0 := pad:64[mem[R0 + 4, el]:u32]
00039b30: R30 := 0x402C20
00039b32: call @inet_ntoa with return %00039b34

00039b34:
00039b36: goto %00039aee

00039aee:
00039af3: R1 := mem[R31 + 0x60, el]:u64
00039afa: R1 := pad:64[mem[R1 + 4, el]:u32]
00039b00: R3 := pad:64[31:0[R1]]
00039b06: R2 := R0
00039b0b: R0 := 0x418000
00039b11: R1 := R0 + 0xA98
00039b16: R0 := 4
00039b1b: R30 := 0x402C48
00039b1d: call @syslog with return %00039772

00039772:
0003977c: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00039781: VF := 0
00039784: CF := 1
00039788: ZF := 31:0[R0] = 0
0003978c: NF := 31:31[R0]
00039792: when ZF <> 1 goto %00039790
00045b90: goto %00039aba

00039790:
00039798: R0 := 0x418000
0003979e: R19 := R0 + 0xAD0
00045b91: goto %000397a0

00039aba:
00039abd: R0 := 0x418000
00039ac3: R19 := R0 + 0xAC8
00039ac7: goto %000397a0

000397a0:
000397a5: R0 := mem[R31 + 0x78, el]:u64
000397aa: VF := 0
000397ad: CF := 1
000397b1: ZF := R0 = 0
000397b5: NF := 63:63[R0]
000397bb: when ZF goto %000397b9
00045b92: goto %00039aa0

000397b9:
000397c3: R0 := mem[R31 + 0x30, el]:u64
00045b93: goto %000397c5

00039aa0:
00039aa5: R0 := mem[R31 + 0x78, el]:u64
00039aac: R0 := pad:64[mem[R0 + 4, el]:u32]
00039ab1: R30 := 0x402C80
00039ab4: call @inet_ntoa with return %00039ab6

00039ab6:
00039ab8: goto %000397c5

000397c5:
000397ca: R1 := mem[R31 + 0x60, el]:u64
000397d1: R1 := pad:64[mem[R1 + 4, el]:u32]
000397d7: R4 := pad:64[31:0[R1]]
000397dd: R3 := R0
000397e3: R2 := R19
000397e8: R0 := 0x418000
000397ee: R1 := R0 + 0xAD8
000397f3: R0 := 6
000397f8: R30 := 0x402CAC
000397fa: call @syslog with return %000397fc

000397fc:
00039801: R0 := mem[R31 + 0x38, el]:u64
00039808: R0 := mem[R0, el]:u64
0003980f: R1 := pad:64[mem[R31 + 0x2C, el]:u32]
00039816: R2 := mem[R31 + 0x60, el]:u64
0003981b: R30 := 0x402CC0
0003981d: call @plist_add with return %0003981f

0003981f:
00039823: R1 := R0
0003982a: R0 := mem[R31 + 0x38, el]:u64
00039832: mem := mem with [R0, el]:u64 <- R1
00039839: R0 := mem[R31 + 0x30, el]:u64
0003983e: R30 := 0x402CD4
00039840: call @free with return %00039842

00039842:
00039847: R0 := mem[R31 + 0x50, el]:u64
0003984c: R30 := 0x402CDC
0003984e: call @freeaddrinfo with return %00039850

00039850:
00039853: R0 := 1
00045b94: goto %00039855

00039c01:
00039c06: R2 := mem[R31 + 0x30, el]:u64
00039c0b: R0 := 0x418000
00039c11: R1 := R0 + 0xA60
00039c16: R0 := 3
00039c1b: R30 := 0x402B24
00039c1d: call @syslog with return %00039c1f

00039c1f:
00039c24: R0 := mem[R31 + 0x60, el]:u64
00039c29: R30 := 0x402B2C
00039c2b: call @free with return %00039c2d

00039c2d:
00039c32: R0 := mem[R31 + 0x30, el]:u64
00039c37: R30 := 0x402B34
00039c39: call @free with return %00039c3b

00039c3b:
00039c40: R0 := mem[R31 + 0x50, el]:u64
00039c45: R30 := 0x402B3C
00039c47: call @freeaddrinfo with return %00039c49

00039c49:
00039c4c: R0 := 0
00039c50: goto %00039855

00039d2b:
00039d35: R2 := mem[R31 + 0x30, el]:u64
00039d3a: R0 := 0x418000
00039d40: R1 := R0 + 0xA08
00039d45: R0 := 3
00039d4a: R30 := 0x402A0C
00039d4c: call @syslog with return %00039d4e

00039d4e:
00039d53: R0 := mem[R31 + 0x60, el]:u64
00039d58: R30 := 0x402A14
00039d5a: call @free with return %00039d5c

00039d5c:
00039d61: R0 := mem[R31 + 0x30, el]:u64
00039d66: R30 := 0x402A1C
00039d68: call @free with return %00039d6a

00039d6a:
00039d6d: R0 := 0
00039d71: goto %00039855

00039df9:
00039dfc: R0 := 0
00039e00: goto %00039855

00039855:
0003985a: R19 := mem[R31 + 0x10, el]:u64
00039861: R29 := mem[R31, el]:u64
00039866: R30 := mem[R31 + 8, el]:u64
0003986a: R31 := R31 + 0x80
0003986f: call R30 with noreturn

00045b95: sub acl_check(acl_check_result)
000462c0: acl_check_result :: out u32 = low:32[R0]

00039871:
00039875: R31 := R31 - 0x30
0003987d: mem := mem with [R31 + 8, el]:u64 <- R0
00039885: mem := mem with [R31, el]:u64 <- R1
0003988c: R0 := mem[R31 + 8, el]:u64
00039891: VF := 0
00039894: CF := 1
00039898: ZF := R0 = 0
0003989c: NF := 63:63[R0]
000398a2: when ZF goto %000398a0
00045b96: goto %000398b5

000398b5:
000398ba: R0 := mem[R31, el]:u64
000398c1: R0 := pad:64[mem[R0, el]:u16]
000398c7: #464 := 31:0[R0] - 2
000398cc: VF := extend:64[#464] <> extend:64[31:0[R0]] - 2
000398d1: CF := pad:64[#464] <> pad:64[31:0[R0]] + 0xFFFFFFFE
000398d5: ZF := #464 = 0
000398d9: NF := 31:31[#464]
000398de: when ZF <> 1 goto %000398a0
00045b97: goto %000398e2

000398e2:
000398e7: R0 := mem[R31, el]:u64
000398ef: mem := mem with [R31 + 0x28, el]:u64 <- R0
000398f4: goto %000398f2

000398f2:
000398fa: R0 := mem[R31 + 8, el]:u64
000398ff: VF := 0
00039902: CF := 1
00039906: ZF := R0 = 0
0003990a: NF := 63:63[R0]
00039910: when ZF <> 1 goto %0003990e
00045b98: goto %000398a0

000398a0:
000398a8: R0 := 0
00045b99: goto %000398aa

0003990e:
00039918: R0 := mem[R31 + 8, el]:u64
0003991f: R0 := mem[R0 + 8, el]:u64
00039927: mem := mem with [R31 + 0x20, el]:u64 <- R0
0003992e: R0 := mem[R31 + 0x20, el]:u64
00039935: R0 := pad:64[mem[R0 + 4, el]:u32]
0003993a: R1 := 0x20
00039941: R0 := pad:64[31:0[R1] + ~31:0[R0] + 1]
00039946: R1 := 1
0003994d: R0 := R1 << pad:12[5:0[R0]]
00039953: R0 := pad:64[~31:0[R0] + 1]
00039959: R1 := pad:64[7:0[R0].0]
00039960: R0 := mem[R31 + 0x20, el]:u64
00039967: R0 := pad:64[mem[R0 + 4, el]:u32]
0003996c: R2 := 0x20
00039973: R0 := pad:64[31:0[R2] + ~31:0[R0] + 1]
00039978: R2 := 1
0003997f: R0 := R2 << pad:12[5:0[R0]]
00039985: R0 := pad:64[~31:0[R0] + 1]
0003998b: R0 := pad:64[23:0[R0].0]
00039991: R0 := pad:64[23:16[R0].0]
00039998: R1 := pad:64[31:0[R1] | 31:0[R0]]
0003999f: R0 := mem[R31 + 0x20, el]:u64
000399a6: R0 := pad:64[mem[R0 + 4, el]:u32]
000399ab: R2 := 0x20
000399b2: R0 := pad:64[31:0[R2] + ~31:0[R0] + 1]
000399b7: R2 := 1
000399be: R0 := R2 << pad:12[5:0[R0]]
000399c4: R0 := pad:64[~31:0[R0] + 1]
000399ca: R0 := pad:64[31:8[R0]]
000399d0: R0 := pad:64[15:8[R0].0]
000399d7: R1 := pad:64[31:0[R1] | 31:0[R0]]
000399de: R0 := mem[R31 + 0x20, el]:u64
000399e5: R0 := pad:64[mem[R0 + 4, el]:u32]
000399ea: R2 := 0x20
000399f1: R0 := pad:64[31:0[R2] + ~31:0[R0] + 1]
000399f6: R2 := 1
000399fd: R0 := R2 << pad:12[5:0[R0]]
00039a03: R0 := pad:64[~31:0[R0] + 1]
00039a09: R0 := pad:64[31:24[R0]]
00039a10: R0 := pad:64[31:0[R1] | 31:0[R0]]
00039a18: mem := mem with [R31 + 0x1C, el]:u32 <- 31:0[R0]
00039a1f: R0 := mem[R31 + 0x28, el]:u64
00039a26: R1 := pad:64[mem[R0 + 4, el]:u32]
00039a2d: R0 := pad:64[mem[R31 + 0x1C, el]:u32]
00039a34: R1 := pad:64[31:0[R1] & 31:0[R0]]
00039a3b: R0 := mem[R31 + 0x20, el]:u64
00039a42: R2 := pad:64[mem[R0, el]:u32]
00039a49: R0 := pad:64[mem[R31 + 0x1C, el]:u32]
00039a50: R0 := pad:64[31:0[R2] & 31:0[R0]]
00039a56: #465 := ~31:0[R0]
00039a5b: #466 := 31:0[R1] + ~31:0[R0]
00039a61: VF := extend:64[#466 + 1] <> extend:64[31:0[R1]] + extend:64[#465]
          + 1
00039a67: CF := pad:64[#466 + 1] <> pad:64[31:0[R1]] + pad:64[#465] + 1
00039a6b: ZF := #466 + 1 = 0
00039a6f: NF := 31:31[#466 + 1]
00039a75: when ZF <> 1 goto %00039a73
00045b9a: goto %00039a8e

00039a73:
00039a7d: R0 := mem[R31 + 8, el]:u64
00039a84: R0 := mem[R0 + 0x10, el]:u64
00039a8c: mem := mem with [R31 + 8, el]:u64 <- R0
00045b9b: goto %000398f2

00039a8e:
00039a93: R0 := mem[R31 + 8, el]:u64
00039a9a: R0 := mem[R0, el]:u64
00039a9e: goto %000398aa

000398aa:
000398ae: R31 := R31 + 0x30
000398b3: call R30 with noreturn

00045b9c: sub atoi(atoi_arg1, atoi_result)
000462c1: atoi_arg1 :: in u64 = R0
000462c2: atoi_result :: out u32 = low:32[R0]

0002825a:
0003fa30: R16 := 0x430000
0003fa37: R17 := mem[R16 + 0xC0, el]:u64
0003fa3d: R16 := R16 + 0xC0
0003fa42: call R17 with noreturn

00045b9d: sub atol(atol_arg1, atol_result)
000462c3: atol_arg1 :: in u64 = R0
000462c4: atol_result :: out u64 = R0

0002e9bb:
0003fc40: R16 := 0x430000
0003fc47: R17 := mem[R16 + 0x180, el]:u64
0003fc4d: R16 := R16 + 0x180
0003fc52: call R17 with noreturn

00045b9e: sub atoll(atoll_arg1, atoll_result)
000462c5: atoll_arg1 :: in u64 = R0
000462c6: atoll_result :: out u64 = R0

00035380:
0003f8a4: R16 := 0x430000
0003f8ab: R17 := mem[R16 + 0x30, el]:u64
0003f8b1: R16 := R16 + 0x30
0003f8b6: call R17 with noreturn

00045b9f: sub bind(bind_fd, bind_addr, bind_len, bind_result)
000462c7: bind_fd :: in u32 = low:32[R0]
000462c8: bind_addr :: in u64 = R1
000462c9: bind_len :: in u64 = R2
000462ca: bind_result :: out u32 = low:32[R0]

000248a7:
0003f954: R16 := 0x430000
0003f95b: R17 := mem[R16 + 0x70, el]:u64
0003f961: R16 := R16 + 0x70
0003f966: call R17 with noreturn

00045ba0: sub call_weak_fn(call_weak_fn_result)
000462cb: call_weak_fn_result :: out u32 = low:32[R0]

0003f00c:
0003f00f: R0 := 0x42F000
0003f016: R0 := mem[R0 + 0xFD8, el]:u64
0003f01c: when R0 = 0 goto %0003f01a
00045ba1: goto %0003f14e

0003f01a:
0003f022: call R30 with noreturn

0003f14e:
0003f151: goto @__gmon_start__

0003f14f:
0003fc6c: R16 := 0x430000
0003fc73: R17 := mem[R16 + 0x190, el]:u64
0003fc79: R16 := R16 + 0x190
0003fc7e: call R17 with noreturn

00045ba2: sub calloc(calloc_nmemb, calloc_size, calloc_result)
000462cc: calloc_nmemb :: in u64 = R0
000462cd: calloc_size :: in u64 = R1
000462ce: calloc_result :: out u64 = R0

00016393:
0003fba6: R16 := 0x430000
0003fbad: R17 := mem[R16 + 0x148, el]:u64
0003fbb3: R16 := R16 + 0x148
0003fbb8: call R17 with noreturn

00045ba3: sub chdir(chdir_arg1, chdir_result)
000462cf: chdir_arg1 :: in u64 = R0
000462d0: chdir_result :: out u32 = low:32[R0]

0003c4e9:
0003fdb6: R16 := 0x430000
0003fdbd: R17 := mem[R16 + 0x208, el]:u64
0003fdc3: R16 := R16 + 0x208
0003fdc8: call R17 with noreturn

00045ba4: sub chunked_data_send(chunked_data_send_result)
000462d1: chunked_data_send_result :: out u32 = low:32[R0]

00028f46:
00028f4a: #228 := R31 - 0x60
00028f50: mem := mem with [#228, el]:u64 <- R29
00028f56: mem := mem with [#228 + 8, el]:u64 <- R30
00028f5a: R31 := #228
00028f60: R29 := R31
00028f68: mem := mem with [R31 + 0x10, el]:u64 <- R19
00028f70: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
00028f78: mem := mem with [R31 + 0x28, el]:u32 <- 31:0[R1]
00028f7f: mem := mem with [R31 + 0x38, el]:u64 <- 0
00028f84: R0 := 0x1000
00028f8c: mem := mem with [R31 + 0x44, el]:u32 <- 31:0[R0]
00028f93: R0 := pad:64[mem[R31 + 0x44, el]:u32]
00028f99: R0 := extend:64[31:0[R0]]
00028f9e: R30 := 0x407B74
00028fa0: call @zmalloc with return %00028fa2

00028fa2:
00028fa8: mem := mem with [R31 + 0x48, el]:u64 <- R0
00045ba5: goto %00028faa

00028faa:
00028fae: R1 := R31 + 0x44
00028fb4: R0 := R31 + 0x48
00028fba: R2 := R1
00028fc0: R1 := R0
00028fc7: R0 := pad:64[mem[R31 + 0x28, el]:u32]
00028fcc: R30 := 0x407B90
00028fce: call @so_recvln with return %00028fd0

00028fd0:
00028fd6: mem := mem with [R31 + 0x54, el]:u32 <- 31:0[R0]
00028fdd: R0 := pad:64[mem[R31 + 0x54, el]:u32]
00028fe2: VF := 0
00028fe5: CF := 1
00028fe9: ZF := 31:0[R0] = 0
00028fed: NF := 31:31[R0]
00028ff5: when NF = VF & ~ZF goto %00028ff3
00045ba6: goto %000297d9

00028ff3:
00028ffd: R0 := mem[R31 + 0x48, el]:u64
00029003: R1 := R31 + 0x38
00029008: R2 := 0x10
0002900d: R30 := 0x407BE0
00029010: call @strtol with return %00029012

00029012:
00029018: mem := mem with [R31 + 0x50, el]:u32 <- 31:0[R0]
0002901d: R30 := 0x407BE8
0002901f: call @__ctype_b_loc with return %00029021

00029021:
00029026: R1 := mem[R0, el]:u64
0002902d: R0 := mem[R31 + 0x38, el]:u64
00029034: R0 := pad:64[mem[R0]]
0002903a: R0 := pad:64[7:0[R0]]
00029040: R0 := 62:0[R0].0
00029047: R0 := R1 + R0
0002904e: R0 := pad:64[mem[R0, el]:u16]
00029054: R0 := pad:64[13:13[R0].0]
00029059: VF := 0
0002905c: CF := 1
00029060: ZF := 31:0[R0] = 0
00029064: NF := 31:31[R0]
0002906a: when ZF <> 1 goto %00029068
00045ba7: goto %0002975a

0002975a:
0002975f: R0 := mem[R31 + 0x38, el]:u64
00029766: R0 := pad:64[mem[R0]]
0002976c: #235 := 31:0[R0] - 0x3B
00029771: VF := extend:64[#235] <> extend:64[31:0[R0]] - 0x3B
00029776: CF := pad:64[#235] <> pad:64[31:0[R0]] + 0xFFFFFFC5
0002977a: ZF := #235 = 0
0002977e: NF := 31:31[#235]
00029783: when ZF goto %00029068
00045ba8: goto %00029787

00029068:
00029072: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00029077: VF := 0
0002907a: CF := 1
0002907e: ZF := 31:0[R0] = 0
00029082: NF := 31:31[R0]
00029089: when NF <> VF goto %00029087
00045ba9: goto %0002972b

0002972b:
00029730: R19 := mem[R31 + 0x48, el]:u64
00029737: R0 := mem[R31 + 0x48, el]:u64
0002973c: R30 := 0x407C68
0002973e: call @strlen with return %00029740

00029740:
00029744: R2 := R0
0002974a: R1 := R19
00029751: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00029756: R30 := 0x407C78
00029758: call @write_wrapper with return %00029087

00029087:
00029091: R0 := pad:64[mem[R31 + 0x50, el]:u32]
00029096: VF := 0
00029099: CF := 1
0002909d: ZF := 31:0[R0] = 0
000290a1: NF := 31:31[R0]
000290a7: when ZF goto %000290a5
00045baa: goto %00029694

00029694:
00029699: R0 := pad:64[mem[R31 + 0x50, el]:u32]
0002969f: R0 := pad:64[31:0[R0] + 2]
000296a5: R0 := extend:64[31:0[R0]]
000296ab: R2 := R0
000296b2: R1 := pad:64[mem[R31 + 0x28, el]:u32]
000296b9: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
000296be: R30 := 0x407CA0
000296c0: call @data_send with return %000296c2

000296c2:
000296c5: VF := 0
000296c8: CF := 1
000296cc: ZF := 31:0[R0] = 0
000296d0: NF := 31:31[R0]
000296d5: when ZF <> 1 goto %000290a5
00045bab: goto %000296d9

000290a5:
000290af: R0 := pad:64[mem[R31 + 0x50, el]:u32]
000290b4: VF := 0
000290b7: CF := 1
000290bb: ZF := 31:0[R0] = 0
000290bf: NF := 31:31[R0]
000290c4: when ZF <> 1 goto %00028faa
00045bac: goto %000290c8

000290c8:
000290cd: mem := mem with [R31 + 0x54, el]:u32 <- 0
000290d4: R0 := pad:64[mem[R31 + 0x54, el]:u32]
000290dc: mem := mem with [R31 + 0x5C, el]:u32 <- 31:0[R0]
000290e3: R0 := pad:64[mem[R31 + 0x5C, el]:u32]
000290eb: mem := mem with [R31 + 0x58, el]:u32 <- 31:0[R0]
00045bad: goto %000290ed

000290ed:
000290f1: R1 := R31 + 0x44
000290f7: R0 := R31 + 0x48
000290fd: R2 := R1
00029103: R1 := R0
0002910a: R0 := pad:64[mem[R31 + 0x28, el]:u32]
0002910f: R30 := 0x407D10
00029111: call @so_recvln with return %00029113

00029113:
00029119: mem := mem with [R31 + 0x54, el]:u32 <- 31:0[R0]
00029120: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00029125: VF := 0
00029128: CF := 1
0002912c: ZF := 31:0[R0] = 0
00029130: NF := 31:31[R0]
00029137: when NF <> VF goto %00029135
00045bae: goto %0002962e

0002962e:
00029633: R0 := pad:64[mem[R31 + 0x54, el]:u32]
00029638: VF := 0
0002963b: CF := 1
0002963f: ZF := 31:0[R0] = 0
00029643: NF := 31:31[R0]
0002964a: when ~(NF = VF & ~ZF) goto %00029135
00045baf: goto %0002964e

0002964e:
00029653: R0 := mem[R31 + 0x48, el]:u64
00029658: R30 := 0x407D34
0002965a: call @strlen with return %0002965c

0002965c:
00029662: mem := mem with [R31 + 0x5C, el]:u32 <- 31:0[R0]
00029669: R0 := mem[R31 + 0x48, el]:u64
00029670: R1 := extend:64[mem[R31 + 0x5C, el]:u32]
00029676: R2 := R1
0002967c: R1 := R0
00029683: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00029688: R30 := 0x407D50
0002968a: call @write_wrapper with return %0002968c

0002968c:
00029692: mem := mem with [R31 + 0x58, el]:u32 <- 31:0[R0]
00045bb0: goto %00029135

00029135:
0002913f: R1 := pad:64[mem[R31 + 0x58, el]:u32]
00029146: R0 := pad:64[mem[R31 + 0x5C, el]:u32]
0002914c: #229 := ~31:0[R0]
00029151: #230 := 31:0[R1] + ~31:0[R0]
00029157: VF := extend:64[#230 + 1] <> extend:64[31:0[R1]] + extend:64[#229]
          + 1
0002915d: CF := pad:64[#230 + 1] <> pad:64[31:0[R1]] + pad:64[#229] + 1
00029161: ZF := #230 + 1 = 0
00029165: NF := 31:31[#230 + 1]
0002916b: when ZF <> 1 goto %00029169
00045bb1: goto %000295b4

000295b4:
000295b9: R0 := pad:64[mem[R31 + 0x54, el]:u32]
000295be: VF := 0
000295c1: CF := 1
000295c5: ZF := 31:0[R0] = 0
000295c9: NF := 31:31[R0]
000295d0: when ~(NF = VF & ~ZF) goto %00029169
00045bb2: goto %000295d4

000295d4:
000295d9: R0 := mem[R31 + 0x48, el]:u64
000295e0: R0 := pad:64[mem[R0]]
000295e6: #233 := 31:0[R0] - 0xD
000295eb: VF := extend:64[#233] <> extend:64[31:0[R0]] - 0xD
000295f0: CF := pad:64[#233] <> pad:64[31:0[R0]] + 0xFFFFFFF3
000295f4: ZF := #233 = 0
000295f8: NF := 31:31[#233]
000295fd: when ZF goto %00029169
00045bb3: goto %00029601

00029601:
00029606: R0 := mem[R31 + 0x48, el]:u64
0002960d: R0 := pad:64[mem[R0]]
00029613: #234 := 31:0[R0] - 0xA
00029618: VF := extend:64[#234] <> extend:64[31:0[R0]] - 0xA
0002961d: CF := pad:64[#234] <> pad:64[31:0[R0]] + 0xFFFFFFF6
00029621: ZF := #234 = 0
00029625: NF := 31:31[#234]
0002962a: when ZF <> 1 goto %000290ed
00045bb4: goto %00029169

00029169:
00029173: R0 := mem[R31 + 0x48, el]:u64
00029178: R30 := 0x407D98
0002917a: call @free with return %0002917c

0002917c:
0002917f: R0 := 1
00045bb5: goto %00029181

000296d9:
000296dc: R0 := 0x430000
000296e2: R0 := R0 + 0x390
000296e9: R0 := pad:64[mem[R0, el]:u32]
000296ee: VF := 0
000296f1: CF := 1
000296f5: ZF := 31:0[R0] = 0
000296f9: NF := 31:31[R0]
000296ff: when ZF goto %000296fd
00045bb6: goto %00029719

00029719:
0002971c: R0 := 0x419000
00029722: R0 := R0 + 0xCA0
00029727: R30 := 0x407CC8
00029729: call @puts with return %000296fd

000296fd:
00029707: R0 := mem[R31 + 0x48, el]:u64
0002970c: R30 := 0x407CD0
0002970e: call @free with return %00029710

00029710:
00029713: R0 := 0
00029717: goto %00029181

00029787:
0002978a: R0 := 0x430000
00029790: R0 := R0 + 0x390
00029797: R0 := pad:64[mem[R0, el]:u32]
0002979c: VF := 0
0002979f: CF := 1
000297a3: ZF := 31:0[R0] = 0
000297a7: NF := 31:31[R0]
000297ad: when ZF goto %000297ab
00045bb7: goto %000297c7

000297c7:
000297ca: R0 := 0x419000
000297d0: R0 := R0 + 0xC68
000297d5: R30 := 0x407C40
000297d7: call @puts with return %000297ab

000297ab:
000297b5: R0 := mem[R31 + 0x48, el]:u64
000297ba: R30 := 0x407C48
000297bc: call @free with return %000297be

000297be:
000297c1: R0 := 0
000297c5: goto %00029181

000297d9:
000297dc: R0 := 0x430000
000297e2: R0 := R0 + 0x390
000297e9: R0 := pad:64[mem[R0, el]:u32]
000297ee: VF := 0
000297f1: CF := 1
000297f5: ZF := 31:0[R0] = 0
000297f9: NF := 31:31[R0]
000297ff: when ZF goto %000297fd
00045bb8: goto %00029819

00029819:
0002981c: R0 := 0x419000
00029822: R0 := R0 + 0xC40
00029827: R30 := 0x407BC0
00029829: call @puts with return %000297fd

000297fd:
00029807: R0 := mem[R31 + 0x48, el]:u64
0002980c: R30 := 0x407BC8
0002980e: call @free with return %00029810

00029810:
00029813: R0 := 0
00029817: goto %00029181

00029181:
00029186: R19 := mem[R31 + 0x10, el]:u64
0002918d: R29 := mem[R31, el]:u64
00029192: R30 := mem[R31 + 8, el]:u64
00029196: R31 := R31 + 0x60
0002919b: call R30 with noreturn

00045bb9: sub close(close_fd, close_result)
000462d2: close_fd :: in u32 = low:32[R0]
000462d3: close_result :: out u32 = low:32[R0]

00025675:
0003fc14: R16 := 0x430000
0003fc1b: R17 := mem[R16 + 0x170, el]:u64
0003fc21: R16 := R16 + 0x170
0003fc26: call R17 with noreturn

00045bba: sub config_close(config_close_result)
000462d4: config_close_result :: out u32 = low:32[R0]

000241bc:
000241c0: #136 := R31 - 0x20
000241c6: mem := mem with [#136, el]:u64 <- R29
000241cc: mem := mem with [#136 + 8, el]:u64 <- R30
000241d0: R31 := #136
000241d6: R29 := R31
000241de: mem := mem with [R31 + 0x18, el]:u64 <- R0
000241e5: R0 := mem[R31 + 0x18, el]:u64
000241ea: VF := 0
000241ed: CF := 1
000241f1: ZF := R0 = 0
000241f5: NF := 63:63[R0]
000241fb: when ZF goto %000241f9
00045bbb: goto %000385d1

000241f9:
00045bbc: goto %00024200

000385d1:
000385d6: R0 := mem[R31 + 0x18, el]:u64
000385dd: R0 := mem[R0, el]:u64
000385e2: R30 := 0x4038E0
000385e4: call @hlist_free with return %000385e6

000385e6:
000385ea: R1 := R0
000385f1: R0 := mem[R31 + 0x18, el]:u64
000385f9: mem := mem with [R0, el]:u64 <- R1
00038600: R0 := mem[R31 + 0x18, el]:u64
00038605: R30 := 0x4038F4
00038607: call @free with return %00038609

00038609:
0003860b: goto %00024200

00024200:
00024205: R29 := mem[R31, el]:u64
0002420a: R30 := mem[R31 + 8, el]:u64
0002420e: R31 := R31 + 0x20
00024213: call R30 with noreturn

00045bbd: sub config_count(config_count_result)
000462d5: config_count_result :: out u32 = low:32[R0]

0002416e:
00024172: #135 := R31 - 0x20
00024178: mem := mem with [#135, el]:u64 <- R29
0002417e: mem := mem with [#135 + 8, el]:u64 <- R30
00024182: R31 := #135
00024188: R29 := R31
00024190: mem := mem with [R31 + 0x18, el]:u64 <- R0
00024197: R0 := mem[R31 + 0x18, el]:u64
0002419e: R0 := mem[R0, el]:u64
000241a3: R30 := 0x4038B4
000241a5: call @hlist_count with return %000241a7

000241a7:
000241ac: R29 := mem[R31, el]:u64
000241b1: R30 := mem[R31 + 8, el]:u64
000241b5: R31 := R31 + 0x20
000241ba: call R30 with noreturn

00045bbe: sub config_open(config_open_result)
000462d6: config_open_result :: out u32 = low:32[R0]

0002206b:
0002206f: #108 := R31 - 0xA0
00022075: mem := mem with [#108, el]:u64 <- R29
0002207b: mem := mem with [#108 + 8, el]:u64 <- R30
0002207f: R31 := #108
00022085: R29 := R31
0002208d: mem := mem with [R31 + 0x18, el]:u64 <- R0
00022092: R0 := 0x6C67
00022099: R0 := 63:32[R0].0x626F.15:0[R0]
000220a0: R0 := 63:48[R0].0x6C61.31:0[R0]
000220a5: R1 := 0
000220ab: #109 := R31 + 0x20
000220b1: mem := mem with [#109, el]:u64 <- R0
000220b7: mem := mem with [#109 + 8, el]:u64 <- R1
000220bd: #110 := R31 + 0x30
000220c2: mem := mem with [#110, el]:u64 <- 0
000220c7: mem := mem with [#110 + 8, el]:u64 <- 0
000220cd: #111 := R31 + 0x40
000220d2: mem := mem with [#111, el]:u64 <- 0
000220d7: mem := mem with [#111 + 8, el]:u64 <- 0
000220de: mem := mem with [R31 + 0x50, el]:u16 <- 0
000220e3: R0 := 0x418000
000220e9: R1 := R0 + 0xBD8
000220f0: R0 := mem[R31 + 0x18, el]:u64
000220f5: R30 := 0x40328C
000220f7: call @fopen with return %000220f9

000220f9:
000220ff: mem := mem with [R31 + 0x88, el]:u64 <- R0
00022106: R0 := mem[R31 + 0x88, el]:u64
0002210b: VF := 0
0002210e: CF := 1
00022112: ZF := R0 = 0
00022116: NF := 63:63[R0]
0002211c: when ZF <> 1 goto %0002211a
00045bbf: goto %00039089

0002211a:
00022122: R0 := 0x1000
00022127: R30 := 0x4032AC
00022129: call @zmalloc with return %0002212b

0002212b:
00022131: mem := mem with [R31 + 0x80, el]:u64 <- R0
00022136: R0 := 8
0002213b: R30 := 0x4032B8
0002213d: call @zmalloc with return %0002213f

0002213f:
00022145: mem := mem with [R31 + 0x78, el]:u64 <- R0
0002214c: R0 := mem[R31 + 0x78, el]:u64
00022153: mem := mem with [R0, el]:u64 <- 0
00022158: goto %00022156

00022156:
0002215e: R0 := mem[R31 + 0x88, el]:u64
00022163: R30 := 0x4037C8
00022165: call @feof with return %00022167

00022167:
0002216a: VF := 0
0002216d: CF := 1
00022171: ZF := 31:0[R0] = 0
00022175: NF := 31:31[R0]
0002217b: when ZF goto %00022179
00045bc0: goto %00039085

00039085:
00039087: goto %000221c8

00022179:
00022183: mem := mem with [R31 + 0x94, el]:u32 <- 0
0002218a: R2 := mem[R31 + 0x88, el]:u64
0002218f: R1 := 0x1000
00022196: R0 := mem[R31 + 0x80, el]:u64
0002219b: R30 := 0x4032DC
0002219e: call @fgets with return %000221a0

000221a0:
000221a6: mem := mem with [R31 + 0x70, el]:u64 <- R0
000221ad: R0 := mem[R31 + 0x70, el]:u64
000221b2: VF := 0
000221b5: CF := 1
000221b9: ZF := R0 = 0
000221bd: NF := 63:63[R0]
000221c3: when ZF goto %000221c1
00045bc1: goto %00038654

000221c1:
00045bc2: goto %000221c8

000221c8:
000221cd: R0 := mem[R31 + 0x80, el]:u64
000221d2: R30 := 0x4037E0
000221d4: call @free with return %000221d6

000221d6:
000221db: R0 := mem[R31 + 0x88, el]:u64
000221e0: R30 := 0x4037E8
000221e2: call @fclose with return %000221e4

000221e4:
000221e9: R0 := mem[R31 + 0x78, el]:u64
00045bc3: goto %000221eb

00038654:
00038659: R0 := mem[R31 + 0x80, el]:u64
0003865e: R30 := 0x4032F4
00038660: call @strlen with return %00038662

00038662:
00038666: #424 := R0 - 0x1000
0003866b: VF := extend:128[#424] <> extend:128[R0] - 0x1000
00038670: CF := pad:128[#424] <> pad:128[R0] + 0xFFFFFFFFFFFFF000
00038674: ZF := #424 = 0
00038678: NF := 63:63[#424]
0003867f: when CF & ~ZF goto %0003867d
00045bc4: goto %00039073

0003867d:
00038685: R0 := 0x1000
00045bc5: goto %00038687

00039073:
00039078: R0 := mem[R31 + 0x80, el]:u64
0003907d: R30 := 0x403304
0003907f: call @strlen with return %00039081

00039081:
00039083: goto %00038687

00038687:
0003868d: mem := mem with [R31 + 0x6C, el]:u32 <- 31:0[R0]
00038694: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
00038699: VF := 0
0003869c: CF := 1
000386a0: ZF := 31:0[R0] = 0
000386a4: NF := 31:31[R0]
000386aa: when ZF goto %000386a8
00045bc6: goto %000386c1

000386c1:
000386c6: R0 := mem[R31 + 0x88, el]:u64
000386cb: R30 := 0x403324
000386cd: call @feof with return %000386cf

000386cf:
000386d2: VF := 0
000386d5: CF := 1
000386d9: ZF := 31:0[R0] = 0
000386dd: NF := 31:31[R0]
000386e2: when ZF <> 1 goto %000386a8
00045bc7: goto %000386e6

000386a8:
000386b1: goto %00022156

000386e6:
000386eb: mem := mem with [R31 + 0x98, el]:u32 <- 0
000386f2: R0 := pad:64[mem[R31 + 0x98, el]:u32]
000386fa: mem := mem with [R31 + 0x9C, el]:u32 <- 31:0[R0]
000386ff: goto %000386fd

000386fd:
00038705: R1 := pad:64[mem[R31 + 0x98, el]:u32]
0003870c: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
00038712: #425 := ~31:0[R0]
00038717: #426 := 31:0[R1] + ~31:0[R0]
0003871d: VF := extend:64[#426 + 1] <> extend:64[31:0[R1]] + extend:64[#425]
          + 1
00038723: CF := pad:64[#426 + 1] <> pad:64[31:0[R1]] + pad:64[#425] + 1
00038727: ZF := #426 + 1 = 0
0003872b: NF := 31:31[#426 + 1]
00038732: when NF = VF goto %00038730
00045bc8: goto %00038ffd

00038ffd:
00039000: R30 := 0x40335C
00039002: call @__ctype_b_loc with return %00039004

00039004:
00039009: R1 := mem[R0, el]:u64
00039010: R0 := extend:64[mem[R31 + 0x98, el]:u32]
00039017: R2 := mem[R31 + 0x80, el]:u64
0003901e: R0 := R2 + R0
00039025: R0 := pad:64[mem[R0]]
0003902b: R0 := pad:64[7:0[R0]]
00039031: R0 := 62:0[R0].0
00039038: R0 := R1 + R0
0003903f: R0 := pad:64[mem[R0, el]:u16]
00039045: R0 := pad:64[13:13[R0].0]
0003904a: VF := 0
0003904d: CF := 1
00039051: ZF := 31:0[R0] = 0
00039055: NF := 31:31[R0]
0003905b: when ZF <> 1 goto %00039059
00045bc9: goto %00038730

00038730:
0003873a: R1 := pad:64[mem[R31 + 0x98, el]:u32]
00038741: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
00038747: #427 := ~31:0[R0]
0003874c: #428 := 31:0[R1] + ~31:0[R0]
00038752: VF := extend:64[#428 + 1] <> extend:64[31:0[R1]] + extend:64[#427]
          + 1
00038758: CF := pad:64[#428 + 1] <> pad:64[31:0[R1]] + pad:64[#427] + 1
0003875c: ZF := #428 + 1 = 0
00038760: NF := 31:31[#428 + 1]
00038766: when NF = VF goto %000386b3
00045bca: goto %0003876a

0003876a:
0003876f: R0 := extend:64[mem[R31 + 0x98, el]:u32]
00038776: R1 := mem[R31 + 0x80, el]:u64
0003877d: R0 := R1 + R0
00038784: R0 := pad:64[mem[R0]]
0003878a: #429 := 31:0[R0] - 0x23
0003878f: VF := extend:64[#429] <> extend:64[31:0[R0]] - 0x23
00038794: CF := pad:64[#429] <> pad:64[31:0[R0]] + 0xFFFFFFDD
00038798: ZF := #429 = 0
0003879c: NF := 31:31[#429]
000387a1: when ZF goto %000386b3
00045bcb: goto %000387a5

000387a5:
000387aa: R0 := extend:64[mem[R31 + 0x98, el]:u32]
000387b1: R1 := mem[R31 + 0x80, el]:u64
000387b8: R0 := R1 + R0
000387bf: R0 := pad:64[mem[R0]]
000387c5: #430 := 31:0[R0] - 0x3B
000387ca: VF := extend:64[#430] <> extend:64[31:0[R0]] - 0x3B
000387cf: CF := pad:64[#430] <> pad:64[31:0[R0]] + 0xFFFFFFC5
000387d3: ZF := #430 = 0
000387d7: NF := 31:31[#430]
000387dc: when ZF goto %000386b3
00045bcc: goto %000387e0

000386b3:
000386b7: goto %00022156

000387e0:
000387e5: R0 := pad:64[mem[R31 + 0x98, el]:u32]
000387ed: mem := mem with [R31 + 0x9C, el]:u32 <- 31:0[R0]
000387f2: goto %000387f0

000387f0:
000387f8: R1 := pad:64[mem[R31 + 0x98, el]:u32]
000387ff: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
00038805: #431 := ~31:0[R0]
0003880a: #432 := 31:0[R1] + ~31:0[R0]
00038810: VF := extend:64[#432 + 1] <> extend:64[31:0[R1]] + extend:64[#431]
          + 1
00038816: CF := pad:64[#432 + 1] <> pad:64[31:0[R1]] + pad:64[#431] + 1
0003881a: ZF := #432 + 1 = 0
0003881e: NF := 31:31[#432 + 1]
00038825: when NF = VF goto %00038823
00045bcd: goto %00038f87

00038f87:
00038f8a: R30 := 0x4033F8
00038f8c: call @__ctype_b_loc with return %00038f8e

00038f8e:
00038f93: R1 := mem[R0, el]:u64
00038f9a: R0 := extend:64[mem[R31 + 0x98, el]:u32]
00038fa1: R2 := mem[R31 + 0x80, el]:u64
00038fa8: R0 := R2 + R0
00038faf: R0 := pad:64[mem[R0]]
00038fb5: R0 := pad:64[7:0[R0]]
00038fbb: R0 := 62:0[R0].0
00038fc2: R0 := R1 + R0
00038fc9: R0 := pad:64[mem[R0, el]:u16]
00038fcf: R0 := pad:64[3:3[R0].0]
00038fd4: VF := 0
00038fd7: CF := 1
00038fdb: ZF := 31:0[R0] = 0
00038fdf: NF := 31:31[R0]
00038fe5: when ZF <> 1 goto %00038fe3
00045bce: goto %00038823

00038823:
0003882d: R1 := pad:64[mem[R31 + 0x98, el]:u32]
00038834: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
0003883a: #433 := ~31:0[R0]
0003883f: #434 := 31:0[R1] + ~31:0[R0]
00038845: VF := extend:64[#434 + 1] <> extend:64[31:0[R1]] + extend:64[#433]
          + 1
0003884b: CF := pad:64[#434 + 1] <> pad:64[31:0[R1]] + pad:64[#433] + 1
0003884f: ZF := #434 + 1 = 0
00038853: NF := 31:31[#434 + 1]
00038859: when NF = VF goto %000386b9
00045bcf: goto %0003885d

000386b9:
000386bd: goto %00022156

0003885d:
00038862: R0 := extend:64[mem[R31 + 0x98, el]:u32]
00038869: R1 := mem[R31 + 0x80, el]:u64
00038870: R0 := R1 + R0
00038877: R0 := pad:64[mem[R0]]
0003887d: #435 := 31:0[R0] - 0x5B
00038882: VF := extend:64[#435] <> extend:64[31:0[R0]] - 0x5B
00038887: CF := pad:64[#435] <> pad:64[31:0[R0]] + 0xFFFFFFA5
0003888b: ZF := #435 = 0
0003888f: NF := 31:31[#435]
00038895: when ZF <> 1 goto %00038893
00045bd0: goto %00038d13

00038893:
0003889d: R1 := pad:64[mem[R31 + 0x98, el]:u32]
000388a4: R0 := pad:64[mem[R31 + 0x9C, el]:u32]
000388ab: R0 := pad:64[31:0[R1] + ~31:0[R0] + 1]
000388b1: R2 := pad:64[31:0[R0]]
000388b8: R1 := pad:64[mem[R31 + 0x9C, el]:u32]
000388bf: R0 := mem[R31 + 0x80, el]:u64
000388c4: R30 := 0x40359C
000388c6: call @substr with return %000388c8

000388c8:
000388ce: mem := mem with [R31 + 0x60, el]:u64 <- R0
000388d5: R0 := pad:64[mem[R31 + 0x98, el]:u32]
000388dd: mem := mem with [R31 + 0x9C, el]:u32 <- 31:0[R0]
000388e2: goto %000388e0

000388e0:
000388e8: R1 := pad:64[mem[R31 + 0x98, el]:u32]
000388ef: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
000388f5: #436 := ~31:0[R0]
000388fa: #437 := 31:0[R1] + ~31:0[R0]
00038900: VF := extend:64[#437 + 1] <> extend:64[31:0[R1]] + extend:64[#436]
          + 1
00038906: CF := pad:64[#437 + 1] <> pad:64[31:0[R1]] + pad:64[#436] + 1
0003890a: ZF := #437 + 1 = 0
0003890e: NF := 31:31[#437 + 1]
00038915: when NF = VF goto %00038913
00045bd1: goto %00038c9d

00038c9d:
00038ca0: R30 := 0x4035CC
00038ca2: call @__ctype_b_loc with return %00038ca4

00038ca4:
00038ca9: R1 := mem[R0, el]:u64
00038cb0: R0 := extend:64[mem[R31 + 0x98, el]:u32]
00038cb7: R2 := mem[R31 + 0x80, el]:u64
00038cbe: R0 := R2 + R0
00038cc5: R0 := pad:64[mem[R0]]
00038ccb: R0 := pad:64[7:0[R0]]
00038cd1: R0 := 62:0[R0].0
00038cd8: R0 := R1 + R0
00038cdf: R0 := pad:64[mem[R0, el]:u16]
00038ce5: R0 := pad:64[13:13[R0].0]
00038cea: VF := 0
00038ced: CF := 1
00038cf1: ZF := 31:0[R0] = 0
00038cf5: NF := 31:31[R0]
00038cfb: when ZF <> 1 goto %00038cf9
00045bd2: goto %00038913

00038913:
0003891d: R1 := pad:64[mem[R31 + 0x98, el]:u32]
00038924: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
0003892a: #438 := ~31:0[R0]
0003892f: #439 := 31:0[R1] + ~31:0[R0]
00038935: VF := extend:64[#439 + 1] <> extend:64[31:0[R1]] + extend:64[#438]
          + 1
0003893b: CF := pad:64[#439 + 1] <> pad:64[31:0[R1]] + pad:64[#438] + 1
0003893f: ZF := #439 + 1 = 0
00038943: NF := 31:31[#439 + 1]
0003894a: when NF = VF goto %00038948
00045bd3: goto %00038c27

00038c27:
00038c2c: R0 := extend:64[mem[R31 + 0x98, el]:u32]
00038c33: R1 := mem[R31 + 0x80, el]:u64
00038c3a: R0 := R1 + R0
00038c41: R0 := pad:64[mem[R0]]
00038c47: #448 := 31:0[R0] - 0x23
00038c4c: VF := extend:64[#448] <> extend:64[31:0[R0]] - 0x23
00038c51: CF := pad:64[#448] <> pad:64[31:0[R0]] + 0xFFFFFFDD
00038c55: ZF := #448 = 0
00038c59: NF := 31:31[#448]
00038c5e: when ZF goto %00038948
00045bd4: goto %00038c62

00038c62:
00038c67: R0 := extend:64[mem[R31 + 0x98, el]:u32]
00038c6e: R1 := mem[R31 + 0x80, el]:u64
00038c75: R0 := R1 + R0
00038c7c: R0 := pad:64[mem[R0]]
00038c82: #449 := 31:0[R0] - 0x3B
00038c87: VF := extend:64[#449] <> extend:64[31:0[R0]] - 0x3B
00038c8c: CF := pad:64[#449] <> pad:64[31:0[R0]] + 0xFFFFFFC5
00038c90: ZF := #449 = 0
00038c94: NF := 31:31[#449]
00038c99: when ZF <> 1 goto %0003895f
00045bd5: goto %00038948

0003895f:
00038964: R0 := extend:64[mem[R31 + 0x98, el]:u32]
0003896b: R1 := mem[R31 + 0x80, el]:u64
00038972: R0 := R1 + R0
00038979: R0 := pad:64[mem[R0]]
0003897f: #440 := 31:0[R0] - 0x22
00038984: VF := extend:64[#440] <> extend:64[31:0[R0]] - 0x22
00038989: CF := pad:64[#440] <> pad:64[31:0[R0]] + 0xFFFFFFDE
0003898d: ZF := #440 = 0
00038991: NF := 31:31[#440]
00038997: when ZF <> 1 goto %00038995
00045bd6: goto %00038b26

00038995:
0003899f: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
000389a7: mem := mem with [R31 + 0x9C, el]:u32 <- 31:0[R0]
00045bd7: goto %000389a9

00038b26:
00038b29: R0 := 1
00038b31: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
00038b38: R0 := pad:64[mem[R31 + 0x98, el]:u32]
00038b3e: R0 := pad:64[31:0[R0] + 1]
00038b46: mem := mem with [R31 + 0x98, el]:u32 <- 31:0[R0]
00038b4d: R0 := pad:64[mem[R31 + 0x98, el]:u32]
00038b55: mem := mem with [R31 + 0x9C, el]:u32 <- 31:0[R0]
00038b5a: goto %00038b58

00038b58:
00038b60: R1 := pad:64[mem[R31 + 0x98, el]:u32]
00038b67: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
00038b6d: #443 := ~31:0[R0]
00038b72: #444 := 31:0[R1] + ~31:0[R0]
00038b78: VF := extend:64[#444 + 1] <> extend:64[31:0[R1]] + extend:64[#443]
          + 1
00038b7e: CF := pad:64[#444 + 1] <> pad:64[31:0[R1]] + pad:64[#443] + 1
00038b82: ZF := #444 + 1 = 0
00038b86: NF := 31:31[#444 + 1]
00038b8d: when NF = VF goto %00038b8b
00045bd8: goto %00038bd7

00038bd7:
00038bdc: R0 := extend:64[mem[R31 + 0x9C, el]:u32]
00038be3: R1 := mem[R31 + 0x80, el]:u64
00038bea: R0 := R1 + R0
00038bf1: R0 := pad:64[mem[R0]]
00038bf7: #447 := 31:0[R0] - 0x22
00038bfc: VF := extend:64[#447] <> extend:64[31:0[R0]] - 0x22
00038c01: CF := pad:64[#447] <> pad:64[31:0[R0]] + 0xFFFFFFDE
00038c05: ZF := #447 = 0
00038c09: NF := 31:31[#447]
00038c0f: when ZF <> 1 goto %00038c0d
00045bd9: goto %00038b8b

00038b8b:
00038b95: R1 := pad:64[mem[R31 + 0x9C, el]:u32]
00038b9c: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
00038ba2: #445 := ~31:0[R0]
00038ba7: #446 := 31:0[R1] + ~31:0[R0]
00038bad: VF := extend:64[#446 + 1] <> extend:64[31:0[R1]] + extend:64[#445]
          + 1
00038bb3: CF := pad:64[#446 + 1] <> pad:64[31:0[R1]] + pad:64[#445] + 1
00038bb7: ZF := #446 + 1 = 0
00038bbb: NF := 31:31[#446 + 1]
00038bc1: when NF <> VF goto %000389a9
00045bda: goto %00038bc5

000389a9:
000389ae: R1 := pad:64[mem[R31 + 0x9C, el]:u32]
000389b5: R0 := pad:64[mem[R31 + 0x98, el]:u32]
000389bc: R0 := pad:64[31:0[R1] + ~31:0[R0] + 1]
000389c2: R2 := pad:64[31:0[R0]]
000389c9: R1 := pad:64[mem[R31 + 0x98, el]:u32]
000389d0: R0 := mem[R31 + 0x80, el]:u64
000389d5: R30 := 0x4036F4
000389d7: call @substr with return %000389d9

000389d9:
000389df: mem := mem with [R31 + 0x58, el]:u64 <- R0
000389e6: R0 := pad:64[mem[R31 + 0x94, el]:u32]
000389eb: VF := 0
000389ee: CF := 1
000389f2: ZF := 31:0[R0] = 0
000389f6: NF := 31:31[R0]
000389fc: when ZF <> 1 goto %000389fa
00045bdb: goto %00038a9a

00038a9a:
00038a9d: R0 := 0x418000
00038aa3: R1 := R0 + 0xBE0
00038aaa: R0 := mem[R31 + 0x58, el]:u64
00038aaf: R30 := 0x403714
00038ab1: call @strcspn with return %00038ab3

00038ab3:
00038ab9: mem := mem with [R31 + 0x9C, el]:u32 <- 31:0[R0]
00038ac0: R0 := mem[R31 + 0x58, el]:u64
00038ac5: R30 := 0x403720
00038ac7: call @strlen with return %00038ac9

00038ac9:
00038acd: R1 := pad:64[31:0[R0]]
00038ad4: R0 := pad:64[mem[R31 + 0x9C, el]:u32]
00038ada: #441 := ~31:0[R1]
00038adf: #442 := 31:0[R0] + ~31:0[R1]
00038ae5: VF := extend:64[#442 + 1] <> extend:64[31:0[R0]] + extend:64[#441]
          + 1
00038aeb: CF := pad:64[#442 + 1] <> pad:64[31:0[R0]] + pad:64[#441] + 1
00038aef: ZF := #442 + 1 = 0
00038af3: NF := 31:31[#442 + 1]
00038af9: when ZF goto %00038af7
00045bdc: goto %00038b0a

00038b0a:
00038b0f: R0 := extend:64[mem[R31 + 0x9C, el]:u32]
00038b16: R1 := mem[R31 + 0x58, el]:u64
00038b1d: R0 := R1 + R0
00038b24: mem := mem with [R0] <- 0
00045bdd: goto %00038af7

00038af7:
00038b01: R0 := mem[R31 + 0x58, el]:u64
00038b06: R30 := 0x403748
00038b08: call @trimr with return %000389fa

000389fa:
00038a02: R0 := 0x430000
00038a08: R0 := R0 + 0x390
00038a0f: R0 := pad:64[mem[R0, el]:u32]
00038a14: VF := 0
00038a17: CF := 1
00038a1b: ZF := 31:0[R0] = 0
00038a1f: NF := 31:31[R0]
00038a25: when ZF goto %00038a23
00045bde: goto %00038a6e

00038a6e:
00038a72: R0 := R31 + 0x20
00038a79: R3 := mem[R31 + 0x58, el]:u64
00038a80: R2 := mem[R31 + 0x60, el]:u64
00038a86: R1 := R0
00038a8b: R0 := 0x418000
00038a91: R0 := R0 + 0xBE8
00038a96: R30 := 0x403778
00038a98: call @printf with return %00038a23

00038a23:
00038a2d: R0 := mem[R31 + 0x78, el]:u64
00038a34: R0 := mem[R0, el]:u64
00038a39: R4 := 0
00038a3e: R3 := 0
00038a45: R2 := mem[R31 + 0x58, el]:u64
00038a4c: R1 := mem[R31 + 0x60, el]:u64
00038a51: R30 := 0x403794
00038a53: call @hlist_add with return %00038a55

00038a55:
00038a59: R1 := R0
00038a60: R0 := mem[R31 + 0x78, el]:u64
00038a68: mem := mem with [R0, el]:u64 <- R1
00038a6c: goto %00022156

00038bc5:
00038bca: R0 := mem[R31 + 0x60, el]:u64
00038bcf: R30 := 0x4036CC
00038bd1: call @free with return %00038bd3

00038bd3:
00038bd5: goto %00022156

00038c0d:
00038c17: R0 := pad:64[mem[R31 + 0x9C, el]:u32]
00038c1d: R0 := pad:64[31:0[R0] + 1]
00038c25: mem := mem with [R31 + 0x9C, el]:u32 <- 31:0[R0]
00045bdf: goto %00038b58

00038948:
00038952: R0 := mem[R31 + 0x60, el]:u64
00038957: R30 := 0x403644
00038959: call @free with return %0003895b

0003895b:
0003895d: goto %00022156

00038cf9:
00038d03: R0 := pad:64[mem[R31 + 0x98, el]:u32]
00038d09: R0 := pad:64[31:0[R0] + 1]
00038d11: mem := mem with [R31 + 0x98, el]:u32 <- 31:0[R0]
00045be0: goto %000388e0

00038d13:
00038d18: R0 := pad:64[mem[R31 + 0x98, el]:u32]
00038d1e: R0 := pad:64[31:0[R0] + 1]
00038d26: mem := mem with [R31 + 0x98, el]:u32 <- 31:0[R0]
00038d2b: goto %00038d29

00038d29:
00038d31: R1 := pad:64[mem[R31 + 0x98, el]:u32]
00038d38: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
00038d3e: #450 := ~31:0[R0]
00038d43: #451 := 31:0[R1] + ~31:0[R0]
00038d49: VF := extend:64[#451 + 1] <> extend:64[31:0[R1]] + extend:64[#450]
          + 1
00038d4f: CF := pad:64[#451 + 1] <> pad:64[31:0[R1]] + pad:64[#450] + 1
00038d53: ZF := #451 + 1 = 0
00038d57: NF := 31:31[#451 + 1]
00038d5e: when NF = VF goto %00038d5c
00045be1: goto %00038f11

00038f11:
00038f14: R30 := 0x403480
00038f16: call @__ctype_b_loc with return %00038f18

00038f18:
00038f1d: R1 := mem[R0, el]:u64
00038f24: R0 := extend:64[mem[R31 + 0x98, el]:u32]
00038f2b: R2 := mem[R31 + 0x80, el]:u64
00038f32: R0 := R2 + R0
00038f39: R0 := pad:64[mem[R0]]
00038f3f: R0 := pad:64[7:0[R0]]
00038f45: R0 := 62:0[R0].0
00038f4c: R0 := R1 + R0
00038f53: R0 := pad:64[mem[R0, el]:u16]
00038f59: R0 := pad:64[13:13[R0].0]
00038f5e: VF := 0
00038f61: CF := 1
00038f65: ZF := 31:0[R0] = 0
00038f69: NF := 31:31[R0]
00038f6f: when ZF <> 1 goto %00038f6d
00045be2: goto %00038d5c

00038d5c:
00038d66: R0 := pad:64[mem[R31 + 0x98, el]:u32]
00038d6e: mem := mem with [R31 + 0x54, el]:u32 <- 31:0[R0]
00038d73: goto %00038d71

00038d71:
00038d79: R1 := pad:64[mem[R31 + 0x98, el]:u32]
00038d80: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
00038d86: #452 := ~31:0[R0]
00038d8b: #453 := 31:0[R1] + ~31:0[R0]
00038d91: VF := extend:64[#453 + 1] <> extend:64[31:0[R1]] + extend:64[#452]
          + 1
00038d97: CF := pad:64[#453 + 1] <> pad:64[31:0[R1]] + pad:64[#452] + 1
00038d9b: ZF := #453 + 1 = 0
00038d9f: NF := 31:31[#453 + 1]
00038da6: when NF = VF goto %00038da4
00045be3: goto %00038e2a

00038e2a:
00038e2f: R1 := pad:64[mem[R31 + 0x98, el]:u32]
00038e36: R0 := pad:64[mem[R31 + 0x54, el]:u32]
00038e3d: R0 := pad:64[31:0[R1] + ~31:0[R0] + 1]
00038e43: #454 := 31:0[R0] - 0x30
00038e48: VF := extend:64[#454] <> extend:64[31:0[R0]] - 0x30
00038e4d: CF := pad:64[#454] <> pad:64[31:0[R0]] + 0xFFFFFFD0
00038e51: ZF := #454 = 0
00038e55: NF := 31:31[#454]
00038e5c: when NF = VF & ~ZF goto %00038da4
00045be4: goto %00038e60

00038e60:
00038e65: R0 := extend:64[mem[R31 + 0x98, el]:u32]
00038e6c: R1 := mem[R31 + 0x80, el]:u64
00038e73: R0 := R1 + R0
00038e7a: R0 := pad:64[mem[R0]]
00038e80: #455 := 31:0[R0] - 0x5D
00038e85: VF := extend:64[#455] <> extend:64[31:0[R0]] - 0x5D
00038e8a: CF := pad:64[#455] <> pad:64[31:0[R0]] + 0xFFFFFFA3
00038e8e: ZF := #455 = 0
00038e92: NF := 31:31[#455]
00038e97: when ZF goto %00038da4
00045be5: goto %00038e9b

00038e9b:
00038e9e: R30 := 0x403508
00038ea0: call @__ctype_b_loc with return %00038ea2

00038ea2:
00038ea7: R1 := mem[R0, el]:u64
00038eae: R0 := extend:64[mem[R31 + 0x98, el]:u32]
00038eb5: R2 := mem[R31 + 0x80, el]:u64
00038ebc: R0 := R2 + R0
00038ec3: R0 := pad:64[mem[R0]]
00038ec9: R0 := pad:64[7:0[R0]]
00038ecf: R0 := 62:0[R0].0
00038ed6: R0 := R1 + R0
00038edd: R0 := pad:64[mem[R0, el]:u16]
00038ee3: R0 := pad:64[13:13[R0].0]
00038ee8: VF := 0
00038eeb: CF := 1
00038eef: ZF := 31:0[R0] = 0
00038ef3: NF := 31:31[R0]
00038ef9: when ZF goto %00038ef7
00045be6: goto %00038da4

00038da4:
00038dae: R1 := pad:64[mem[R31 + 0x98, el]:u32]
00038db5: R0 := pad:64[mem[R31 + 0x54, el]:u32]
00038dbc: R0 := pad:64[31:0[R1] + ~31:0[R0] + 1]
00038dc1: VF := 0
00038dc4: CF := 1
00038dc8: ZF := 31:0[R0] = 0
00038dcc: NF := 31:31[R0]
00038dd3: when ~(NF = VF & ~ZF) goto %000386bf
00045be7: goto %00038dd7

00038dd7:
00038ddc: R0 := extend:64[mem[R31 + 0x54, el]:u32]
00038de3: R1 := mem[R31 + 0x80, el]:u64
00038dea: R3 := R1 + R0
00038df1: R1 := pad:64[mem[R31 + 0x98, el]:u32]
00038df8: R0 := pad:64[mem[R31 + 0x54, el]:u32]
00038dff: R0 := pad:64[31:0[R1] + ~31:0[R0] + 1]
00038e05: R0 := pad:64[31:0[R0] + 1]
00038e0b: R1 := extend:64[31:0[R0]]
00038e11: R0 := R31 + 0x20
00038e17: R2 := R1
00038e1d: R1 := R3
00038e22: R30 := 0x40357C
00038e24: call @strlcpy with return %00038e26

00038e26:
00038e28: goto %000386bf

000386bf:
00045be8: goto %00022156

00038ef7:
00038f01: R0 := pad:64[mem[R31 + 0x98, el]:u32]
00038f07: R0 := pad:64[31:0[R0] + 1]
00038f0f: mem := mem with [R31 + 0x98, el]:u32 <- 31:0[R0]
00045be9: goto %00038d71

00038f6d:
00038f77: R0 := pad:64[mem[R31 + 0x98, el]:u32]
00038f7d: R0 := pad:64[31:0[R0] + 1]
00038f85: mem := mem with [R31 + 0x98, el]:u32 <- 31:0[R0]
00045bea: goto %00038d29

00038fe3:
00038fed: R0 := pad:64[mem[R31 + 0x98, el]:u32]
00038ff3: R0 := pad:64[31:0[R0] + 1]
00038ffb: mem := mem with [R31 + 0x98, el]:u32 <- 31:0[R0]
00045beb: goto %000387f0

00039059:
00039063: R0 := pad:64[mem[R31 + 0x98, el]:u32]
00039069: R0 := pad:64[31:0[R0] + 1]
00039071: mem := mem with [R31 + 0x98, el]:u32 <- 31:0[R0]
00045bec: goto %000386fd

00039089:
0003908c: R0 := 0
00039090: goto %000221eb

000221eb:
000221f0: R29 := mem[R31, el]:u64
000221f5: R30 := mem[R31 + 8, el]:u64
000221f9: R31 := R31 + 0xA0
000221fe: call R30 with noreturn

00045bed: sub config_pop(config_pop_result)
000462d7: config_pop_result :: out u32 = low:32[R0]

000240e4:
000240e8: #134 := R31 - 0x30
000240ee: mem := mem with [#134, el]:u64 <- R29
000240f4: mem := mem with [#134 + 8, el]:u64 <- R30
000240f8: R31 := #134
000240fe: R29 := R31
00024106: mem := mem with [R31 + 0x18, el]:u64 <- R0
0002410e: mem := mem with [R31 + 0x10, el]:u64 <- R1
00024115: R0 := mem[R31 + 0x18, el]:u64
0002411c: R0 := mem[R0, el]:u64
00024123: R1 := mem[R31 + 0x10, el]:u64
00024128: R30 := 0x403858
0002412a: call @hlist_get with return %0002412c

0002412c:
00024132: mem := mem with [R31 + 0x28, el]:u64 <- R0
00024139: R0 := mem[R31 + 0x28, el]:u64
0002413e: VF := 0
00024141: CF := 1
00024145: ZF := R0 = 0
00024149: NF := 63:63[R0]
0002414f: when ZF goto %0002414d
00045bee: goto %0003860d

0003860d:
00038612: R0 := mem[R31 + 0x28, el]:u64
00038617: R30 := 0x403870
00038619: call @strdup with return %0003861b

0003861b:
00038621: mem := mem with [R31 + 0x28, el]:u64 <- R0
00038628: R0 := mem[R31 + 0x18, el]:u64
0003862f: R0 := mem[R0, el]:u64
00038636: R1 := mem[R31 + 0x10, el]:u64
0003863b: R30 := 0x403884
0003863d: call @hlist_del with return %0003863f

0003863f:
00038643: R1 := R0
0003864a: R0 := mem[R31 + 0x18, el]:u64
00038652: mem := mem with [R0, el]:u64 <- R1
00045bef: goto %0002414d

0002414d:
00024157: R0 := mem[R31 + 0x28, el]:u64
0002415e: R29 := mem[R31, el]:u64
00024163: R30 := mem[R31 + 8, el]:u64
00024167: R31 := R31 + 0x30
0002416c: call R30 with noreturn

00045bf0: sub config_set(config_set_result)
000462d8: config_set_result :: out u32 = low:32[R0]

00022200:
00022204: #112 := R31 - 0x30
0002220a: mem := mem with [#112, el]:u64 <- R29
00022210: mem := mem with [#112 + 8, el]:u64 <- R30
00022214: R31 := #112
0002221a: R29 := R31
00022222: mem := mem with [R31 + 0x28, el]:u64 <- R0
0002222a: mem := mem with [R31 + 0x20, el]:u64 <- R1
00022232: mem := mem with [R31 + 0x18, el]:u64 <- R2
00022239: R0 := mem[R31 + 0x28, el]:u64
00022240: R0 := mem[R0, el]:u64
00022245: R3 := 1
0002224c: R2 := mem[R31 + 0x18, el]:u64
00022253: R1 := mem[R31 + 0x20, el]:u64
00022258: R30 := 0x403820
0002225b: call @hlist_mod with return %000240b8

000240b8:
000240bc: R1 := R0
000240c3: R0 := mem[R31 + 0x28, el]:u64
000240cb: mem := mem with [R0, el]:u64 <- R1
000240d4: R29 := mem[R31, el]:u64
000240d9: R30 := mem[R31 + 8, el]:u64
000240dd: R31 := R31 + 0x30
000240e2: call R30 with noreturn

00045bf1: sub connect(connect_fd, connect_addr, connect_len, connect_result)
000462d9: connect_fd :: in u32 = low:32[R0]
000462da: connect_addr :: in u64 = R1
000462db: connect_len :: in u64 = R2
000462dc: connect_result :: out u32 = low:32[R0]

000245c3:
0003fe24: R16 := 0x430000
0003fe2b: R17 := mem[R16 + 0x230, el]:u64
0003fe31: R16 := R16 + 0x230
0003fe36: call R17 with noreturn

00045bf2: sub copy_auth(copy_auth_result)
000462dd: copy_auth_result :: out u32 = low:32[R0]

00021c2e:
00021c32: #105 := R31 - 0x30
00021c38: mem := mem with [#105, el]:u64 <- R29
00021c3e: mem := mem with [#105 + 8, el]:u64 <- R30
00021c42: R31 := #105
00021c48: R29 := R31
00021c50: mem := mem with [R31 + 0x28, el]:u64 <- R0
00021c58: mem := mem with [R31 + 0x20, el]:u64 <- R1
00021c60: mem := mem with [R31 + 0x1C, el]:u32 <- 31:0[R2]
00021c67: R0 := mem[R31 + 0x20, el]:u64
00021c6e: R1 := pad:64[mem[R0 + 0x12C, el]:u32]
00021c75: R0 := mem[R31 + 0x28, el]:u64
00021c7d: mem := mem with [R0 + 0x12C, el]:u32 <- 31:0[R1]
00021c84: R0 := mem[R31 + 0x20, el]:u64
00021c8b: R1 := pad:64[mem[R0 + 0x130, el]:u32]
00021c92: R0 := mem[R31 + 0x28, el]:u64
00021c9a: mem := mem with [R0 + 0x130, el]:u32 <- 31:0[R1]
00021ca1: R0 := mem[R31 + 0x20, el]:u64
00021ca8: R1 := pad:64[mem[R0 + 0x134, el]:u32]
00021caf: R0 := mem[R31 + 0x28, el]:u64
00021cb7: mem := mem with [R0 + 0x134, el]:u32 <- 31:0[R1]
00021cbe: R0 := mem[R31 + 0x20, el]:u64
00021cc5: R1 := pad:64[mem[R0 + 0x138, el]:u32]
00021ccc: R0 := mem[R31 + 0x28, el]:u64
00021cd4: mem := mem with [R0 + 0x138, el]:u32 <- 31:0[R1]
00021cdb: R0 := mem[R31 + 0x28, el]:u64
00021ce1: R3 := R0 + 0x32
00021ce8: R0 := mem[R31 + 0x20, el]:u64
00021cee: R0 := R0 + 0x32
00021cf3: R2 := 0x32
00021cf9: R1 := R0
00021cff: R0 := R3
00021d04: R30 := 0x402F5C
00021d07: call @strlcpy with return %00021d09

00021d09:
00021d0e: R0 := mem[R31 + 0x28, el]:u64
00021d14: R3 := R0 + 0x64
00021d1b: R0 := mem[R31 + 0x20, el]:u64
00021d21: R0 := R0 + 0x64
00021d26: R2 := 0x32
00021d2c: R1 := R0
00021d32: R0 := R3
00021d37: R30 := 0x402F7C
00021d39: call @strlcpy with return %00021d3b

00021d3b:
00021d40: R0 := pad:64[mem[R31 + 0x1C, el]:u32]
00021d45: VF := 0
00021d48: CF := 1
00021d4c: ZF := 31:0[R0] = 0
00021d50: NF := 31:31[R0]
00021d56: when ZF goto %00021d54
00045bf3: goto %00039198

00021d54:
00021d5e: R0 := mem[R31 + 0x28, el]:u64
00021d63: R2 := 0x32
00021d68: R1 := 0
00021d6d: R30 := 0x40300C
00021d6f: call @memset with return %00021d71

00021d71:
00021d76: R0 := mem[R31 + 0x28, el]:u64
00021d7c: R0 := R0 + 0xFA
00021d81: R2 := 0x32
00021d86: R1 := 0
00021d8b: R30 := 0x403020
00021d8d: call @memset with return %00021d8f

00021d8f:
00021d94: R0 := mem[R31 + 0x28, el]:u64
00021d9a: R0 := R0 + 0xC8
00021d9f: R2 := 0x32
00021da4: R1 := 0
00021da9: R30 := 0x403034
00021dab: call @memset with return %00021dad

00021dad:
00021db2: R0 := mem[R31 + 0x28, el]:u64
00021db8: R0 := R0 + 0x96
00021dbd: R2 := 0x32
00021dc2: R1 := 0
00021dc7: R30 := 0x403048
00021dc9: call @memset with return %00021dcb

00039198:
0003919d: R0 := mem[R31 + 0x28, el]:u64
000391a4: R1 := mem[R31 + 0x20, el]:u64
000391a9: R2 := 0x32
000391ae: R30 := 0x402F98
000391b0: call @strlcpy with return %000391b2

000391b2:
000391b7: R0 := mem[R31 + 0x28, el]:u64
000391bd: R3 := R0 + 0xFA
000391c4: R0 := mem[R31 + 0x20, el]:u64
000391ca: R0 := R0 + 0xFA
000391cf: R2 := 0x32
000391d5: R1 := R0
000391db: R0 := R3
000391e0: R30 := 0x402FB8
000391e2: call @memcpy with return %000391e4

000391e4:
000391e9: R0 := mem[R31 + 0x28, el]:u64
000391ef: R3 := R0 + 0xC8
000391f6: R0 := mem[R31 + 0x20, el]:u64
000391fc: R0 := R0 + 0xC8
00039201: R2 := 0x32
00039207: R1 := R0
0003920d: R0 := R3
00039212: R30 := 0x402FD8
00039214: call @memcpy with return %00039216

00039216:
0003921b: R0 := mem[R31 + 0x28, el]:u64
00039221: R3 := R0 + 0x96
00039228: R0 := mem[R31 + 0x20, el]:u64
0003922e: R0 := R0 + 0x96
00039233: R2 := 0x32
00039239: R1 := R0
0003923f: R0 := R3
00039244: R30 := 0x402FF8
00039246: call @memcpy with return %00039248

00039248:
0003924a: goto %00021dcb

00021dcb:
00021dd0: R0 := mem[R31 + 0x28, el]:u64
00021dd7: R29 := mem[R31, el]:u64
00021ddc: R30 := mem[R31 + 8, el]:u64
00021de0: R31 := R31 + 0x30
00021de5: call R30 with noreturn

00045bf4: sub copy_rr_data(copy_rr_data_result)
000462de: copy_rr_data_result :: out u32 = low:32[R0]

00022c51:
00022c55: #124 := R31 - 0x20
00022c5b: mem := mem with [#124, el]:u64 <- R29
00022c61: mem := mem with [#124 + 8, el]:u64 <- R30
00022c65: R31 := #124
00022c6b: R29 := R31
00022c73: mem := mem with [R31 + 0x18, el]:u64 <- R0
00022c7b: mem := mem with [R31 + 0x10, el]:u64 <- R1
00022c82: R0 := mem[R31 + 0x18, el]:u64
00022c87: VF := 0
00022c8a: CF := 1
00022c8e: ZF := R0 = 0
00022c92: NF := 63:63[R0]
00022c98: when ZF <> 1 goto %00022c96
00045bf5: goto %00023df5

00023df5:
00023df8: R0 := 0x430000
00023dfe: R0 := R0 + 0x350
00023e05: R0 := mem[R0, el]:u64
00023e0b: R3 := R0
00023e10: R2 := 0x34
00023e15: R1 := 1
00023e1a: R0 := 0x41C000
00023e20: R0 := R0 + 0xB88
00023e25: R30 := 0x411BDC
00023e27: call @fwrite with return %00023e29

00023e29:
00023e2c: R0 := 0x41D000
00023e32: R3 := R0 + 8
00023e37: R2 := 0x228
00023e3c: R0 := 0x41C000
00023e42: R1 := R0 + 0xAF0
00023e47: R0 := 0x41C000
00023e4d: R0 := R0 + 0xBC0
00023e52: R30 := 0x411BFC
00023e54: call @__assert_fail with return %00022c96

00022c96:
00022ca0: R0 := mem[R31 + 0x10, el]:u64
00022ca5: VF := 0
00022ca8: CF := 1
00022cac: ZF := R0 = 0
00022cb0: NF := 63:63[R0]
00022cb6: when ZF <> 1 goto %00022cb4
00045bf6: goto %00023d94

00023d94:
00023d97: R0 := 0x430000
00023d9d: R0 := R0 + 0x350
00023da4: R0 := mem[R0, el]:u64
00023daa: R3 := R0
00023daf: R2 := 0x34
00023db4: R1 := 1
00023db9: R0 := 0x41C000
00023dbf: R0 := R0 + 0xBC8
00023dc4: R30 := 0x411C2C
00023dc6: call @fwrite with return %00023dc8

00023dc8:
00023dcb: R0 := 0x41D000
00023dd1: R3 := R0 + 8
00023dd6: R2 := 0x22D
00023ddb: R0 := 0x41C000
00023de1: R1 := R0 + 0xAF0
00023de6: R0 := 0x41C000
00023dec: R0 := R0 + 0xBC0
00023df1: R30 := 0x411C4C
00023df3: call @__assert_fail with return %00022cb4

00022cb4:
00022cbe: R0 := mem[R31 + 0x18, el]:u64
00022cc3: R30 := 0x411C54
00022cc6: call @reset_rr_data with return %00023494

00023494:
00023499: R0 := mem[R31 + 0x10, el]:u64
000234a0: R1 := pad:64[mem[R0, el]:u32]
000234a7: R0 := mem[R31 + 0x18, el]:u64
000234af: mem := mem with [R0, el]:u32 <- 31:0[R1]
000234b6: R0 := mem[R31 + 0x10, el]:u64
000234bd: R1 := pad:64[mem[R0 + 0x10, el]:u32]
000234c4: R0 := mem[R31 + 0x18, el]:u64
000234cc: mem := mem with [R0 + 0x10, el]:u32 <- 31:0[R1]
000234d3: R0 := mem[R31 + 0x10, el]:u64
000234da: R1 := pad:64[mem[R0 + 0x14, el]:u32]
000234e1: R0 := mem[R31 + 0x18, el]:u64
000234e9: mem := mem with [R0 + 0x14, el]:u32 <- 31:0[R1]
000234f0: R0 := mem[R31 + 0x10, el]:u64
000234f7: R1 := pad:64[mem[R0 + 0x18, el]:u32]
000234fe: R0 := mem[R31 + 0x18, el]:u64
00023506: mem := mem with [R0 + 0x18, el]:u32 <- 31:0[R1]
0002350d: R0 := mem[R31 + 0x10, el]:u64
00023514: R1 := pad:64[mem[R0 + 0x1C, el]:u32]
0002351b: R0 := mem[R31 + 0x18, el]:u64
00023523: mem := mem with [R0 + 0x1C, el]:u32 <- 31:0[R1]
0002352a: R0 := mem[R31 + 0x10, el]:u64
00023531: R1 := pad:64[mem[R0 + 0x20, el]:u32]
00023538: R0 := mem[R31 + 0x18, el]:u64
00023540: mem := mem with [R0 + 0x20, el]:u32 <- 31:0[R1]
00023547: R0 := mem[R31 + 0x10, el]:u64
0002354e: R1 := pad:64[mem[R0 + 0x24, el]:u32]
00023555: R0 := mem[R31 + 0x18, el]:u64
0002355d: mem := mem with [R0 + 0x24, el]:u32 <- 31:0[R1]
00023564: R0 := mem[R31 + 0x10, el]:u64
0002356b: R0 := mem[R0 + 8, el]:u64
00023570: VF := 0
00023573: CF := 1
00023577: ZF := R0 = 0
0002357b: NF := 63:63[R0]
00023581: when ZF goto %0002357f
00045bf7: goto %00023915

00023915:
0002391a: R0 := mem[R31 + 0x10, el]:u64
00023921: R0 := mem[R0 + 8, el]:u64
00023926: R30 := 0x411CE0
00023929: call @hlist_dup with return %00023d7f

00023d7f:
00023d83: R1 := R0
00023d8a: R0 := mem[R31 + 0x18, el]:u64
00023d92: mem := mem with [R0 + 8, el]:u64 <- R1
00045bf8: goto %0002357f

0002357f:
00023589: R0 := mem[R31 + 0x10, el]:u64
00023590: R0 := mem[R0 + 0x28, el]:u64
00023595: VF := 0
00023598: CF := 1
0002359c: ZF := R0 = 0
000235a0: NF := 63:63[R0]
000235a6: when ZF goto %000235a4
00045bf9: goto %000238eb

000238eb:
000238f0: R0 := mem[R31 + 0x10, el]:u64
000238f7: R0 := mem[R0 + 0x28, el]:u64
000238fc: R30 := 0x411D08
000238fe: call @strdup with return %00023900

00023900:
00023904: R1 := R0
0002390b: R0 := mem[R31 + 0x18, el]:u64
00023913: mem := mem with [R0 + 0x28, el]:u64 <- R1
00045bfa: goto %000235a4

000235a4:
000235ae: R0 := mem[R31 + 0x10, el]:u64
000235b5: R0 := mem[R0 + 0x30, el]:u64
000235ba: VF := 0
000235bd: CF := 1
000235c1: ZF := R0 = 0
000235c5: NF := 63:63[R0]
000235cb: when ZF goto %000235c9
00045bfb: goto %000238c1

000238c1:
000238c6: R0 := mem[R31 + 0x10, el]:u64
000238cd: R0 := mem[R0 + 0x30, el]:u64
000238d2: R30 := 0x411D30
000238d4: call @strdup with return %000238d6

000238d6:
000238da: R1 := R0
000238e1: R0 := mem[R31 + 0x18, el]:u64
000238e9: mem := mem with [R0 + 0x30, el]:u64 <- R1
00045bfc: goto %000235c9

000235c9:
000235d3: R0 := mem[R31 + 0x10, el]:u64
000235da: R0 := mem[R0 + 0x38, el]:u64
000235df: VF := 0
000235e2: CF := 1
000235e6: ZF := R0 = 0
000235ea: NF := 63:63[R0]
000235f0: when ZF goto %000235ee
00045bfd: goto %00023897

00023897:
0002389c: R0 := mem[R31 + 0x10, el]:u64
000238a3: R0 := mem[R0 + 0x38, el]:u64
000238a8: R30 := 0x411D58
000238aa: call @strdup with return %000238ac

000238ac:
000238b0: R1 := R0
000238b7: R0 := mem[R31 + 0x18, el]:u64
000238bf: mem := mem with [R0 + 0x38, el]:u64 <- R1
00045bfe: goto %000235ee

000235ee:
000235f8: R0 := mem[R31 + 0x10, el]:u64
000235ff: R0 := mem[R0 + 0x40, el]:u64
00023604: VF := 0
00023607: CF := 1
0002360b: ZF := R0 = 0
0002360f: NF := 63:63[R0]
00023615: when ZF goto %00023613
00045bff: goto %0002386d

0002386d:
00023872: R0 := mem[R31 + 0x10, el]:u64
00023879: R0 := mem[R0 + 0x40, el]:u64
0002387e: R30 := 0x411D80
00023880: call @strdup with return %00023882

00023882:
00023886: R1 := R0
0002388d: R0 := mem[R31 + 0x18, el]:u64
00023895: mem := mem with [R0 + 0x40, el]:u64 <- R1
00045c00: goto %00023613

00023613:
0002361d: R0 := mem[R31 + 0x10, el]:u64
00023624: R0 := mem[R0 + 0x48, el]:u64
00023629: VF := 0
0002362c: CF := 1
00023630: ZF := R0 = 0
00023634: NF := 63:63[R0]
0002363a: when ZF goto %00023638
00045c01: goto %00023843

00023843:
00023848: R0 := mem[R31 + 0x10, el]:u64
0002384f: R0 := mem[R0 + 0x48, el]:u64
00023854: R30 := 0x411DA8
00023856: call @strdup with return %00023858

00023858:
0002385c: R1 := R0
00023863: R0 := mem[R31 + 0x18, el]:u64
0002386b: mem := mem with [R0 + 0x48, el]:u64 <- R1
00045c02: goto %00023638

00023638:
00023642: R0 := mem[R31 + 0x10, el]:u64
00023649: R0 := mem[R0 + 0x50, el]:u64
0002364e: VF := 0
00023651: CF := 1
00023655: ZF := R0 = 0
00023659: NF := 63:63[R0]
0002365f: when ZF goto %0002365d
00045c03: goto %00023819

00023819:
0002381e: R0 := mem[R31 + 0x10, el]:u64
00023825: R0 := mem[R0 + 0x50, el]:u64
0002382a: R30 := 0x411DD0
0002382c: call @strdup with return %0002382e

0002382e:
00023832: R1 := R0
00023839: R0 := mem[R31 + 0x18, el]:u64
00023841: mem := mem with [R0 + 0x50, el]:u64 <- R1
00045c04: goto %0002365d

0002365d:
00023667: R0 := mem[R31 + 0x10, el]:u64
0002366e: R0 := mem[R0 + 0x58, el]:u64
00023673: VF := 0
00023676: CF := 1
0002367a: ZF := R0 = 0
0002367e: NF := 63:63[R0]
00023684: when ZF goto %00023682
00045c05: goto %0002377f

0002377f:
00023784: R0 := mem[R31 + 0x10, el]:u64
0002378b: R0 := pad:64[mem[R0 + 0x18, el]:u32]
00023790: VF := 0
00023793: CF := 1
00023797: ZF := 31:0[R0] = 0
0002379b: NF := 31:31[R0]
000237a2: when ~(NF = VF & ~ZF) goto %00023682
00045c06: goto %000237a6

000237a6:
000237ab: R0 := mem[R31 + 0x10, el]:u64
000237b2: R0 := pad:64[mem[R0 + 0x18, el]:u32]
000237b8: R0 := extend:64[31:0[R0]]
000237bd: R30 := 0x411E0C
000237bf: call @zmalloc with return %000237c1

000237c1:
000237c5: R1 := R0
000237cc: R0 := mem[R31 + 0x18, el]:u64
000237d4: mem := mem with [R0 + 0x58, el]:u64 <- R1
000237db: R0 := mem[R31 + 0x18, el]:u64
000237e2: R3 := mem[R0 + 0x58, el]:u64
000237e9: R0 := mem[R31 + 0x10, el]:u64
000237f0: R1 := mem[R0 + 0x58, el]:u64
000237f7: R0 := mem[R31 + 0x10, el]:u64
000237fe: R0 := pad:64[mem[R0 + 0x18, el]:u32]
00023804: R0 := extend:64[31:0[R0]]
0002380a: R2 := R0
00023810: R0 := R3
00023815: R30 := 0x411E40
00023817: call @memcpy with return %00023682

00023682:
0002368c: R0 := mem[R31 + 0x18, el]:u64
00023693: R29 := mem[R31, el]:u64
00023698: R30 := mem[R31 + 8, el]:u64
0002369c: R31 := R31 + 0x20
000236a1: call R30 with noreturn

00045c07: sub croak(croak_result)
000462df: croak_result :: out u32 = low:32[R0]

000252c2:
000252c6: #164 := R31 - 0x20
000252cc: mem := mem with [#164, el]:u64 <- R29
000252d2: mem := mem with [#164 + 8, el]:u64 <- R30
000252d6: R31 := #164
000252dc: R29 := R31
000252e4: mem := mem with [R31 + 0x18, el]:u64 <- R0
000252ec: mem := mem with [R31 + 0x14, el]:u32 <- 31:0[R1]
000252f3: R0 := pad:64[mem[R31 + 0x14, el]:u32]
000252f8: VF := 0
000252fb: CF := 1
000252ff: ZF := 31:0[R0] = 0
00025303: NF := 31:31[R0]
00025309: when ZF goto %00025307
00045c08: goto %00025336

00025307:
00025311: R2 := mem[R31 + 0x18, el]:u64
00025316: R0 := 0x41C000
0002531c: R1 := R0 + 0xAC8
00025321: R0 := 3
00025326: R30 := 0x410ED8
00025328: call @syslog with return %0002532a

00025336:
0002533b: R1 := mem[R31 + 0x18, el]:u64
00025340: R0 := 0x41C000
00025346: R0 := R0 + 0xAC8
0002534b: R30 := 0x410EC0
0002534d: call @printf with return %0002534f

0002534f:
00025351: goto %0002532a

0002532a:
0002532d: R0 := 1
00025332: R30 := 0x410EE0
00025334: call @myexit with return %00045c09

00045c09:
00045c0a: call @plist_add with noreturn

00045c0b: sub data_send(data_send_result)
000462e0: data_send_result :: out u32 = low:32[R0]

00028d3f:
00028d43: #226 := R31 - 0x40
00028d49: mem := mem with [#226, el]:u64 <- R29
00028d4f: mem := mem with [#226 + 8, el]:u64 <- R30
00028d53: R31 := #226
00028d59: R29 := R31
00028d61: mem := mem with [R31 + 0x1C, el]:u32 <- 31:0[R0]
00028d69: mem := mem with [R31 + 0x18, el]:u32 <- 31:0[R1]
00028d71: mem := mem with [R31 + 0x10, el]:u64 <- R2
00028d78: mem := mem with [R31 + 0x38, el]:u32 <- 0
00028d7d: R0 := 1
00028d85: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
00028d8c: R0 := mem[R31 + 0x10, el]:u64
00028d91: VF := 0
00028d94: CF := 1
00028d98: ZF := R0 = 0
00028d9c: NF := 63:63[R0]
00028da2: when ZF <> 1 goto %00028da0
00045c0c: goto %00029b51

00028da0:
00028da8: R0 := 0x800
00028dad: R30 := 0x407920
00028daf: call @zmalloc with return %00028db1

00028db1:
00028db7: mem := mem with [R31 + 0x28, el]:u64 <- R0
00045c0d: goto %00028db9

00028db9:
00028dbe: R0 := mem[R31 + 0x10, el]:u64
00028dc4: #227 := R0 + 1
00028dc9: VF := extend:128[#227] <> extend:128[R0] + 1
00028dce: CF := pad:128[#227] <> pad:128[R0] + 1
00028dd2: ZF := #227 = 0
00028dd6: NF := 63:63[#227]
00028ddc: when ZF goto %00028dda
00045c0e: goto %00029afc

00029afc:
00029b01: R0 := extend:64[mem[R31 + 0x38, el]:u32]
00029b08: R1 := mem[R31 + 0x10, el]:u64
00029b0f: R0 := R1 + ~R0 + 1
00029b15: #242 := R0 - 0x800
00029b1a: VF := extend:128[#242] <> extend:128[R0] - 0x800
00029b1f: CF := pad:128[#242] <> pad:128[R0] + 0xFFFFFFFFFFFFF800
00029b23: ZF := #242 = 0
00029b27: NF := 63:63[#242]
00029b2e: when NF = VF & ~ZF goto %00028dda
00045c0f: goto %00029b32

00028dda:
00028de2: R0 := 0x800
00045c10: goto %00028de4

00029b32:
00029b37: R0 := mem[R31 + 0x10, el]:u64
00029b3d: R1 := pad:64[31:0[R0]]
00029b44: R0 := pad:64[mem[R31 + 0x38, el]:u32]
00029b4b: R0 := pad:64[31:0[R1] + ~31:0[R0] + 1]
00029b4f: goto %00028de4

00028de4:
00028dea: mem := mem with [R31 + 0x24, el]:u32 <- 31:0[R0]
00028df1: R0 := extend:64[mem[R31 + 0x24, el]:u32]
00028df7: R2 := R0
00028dfe: R1 := mem[R31 + 0x28, el]:u64
00028e05: R0 := pad:64[mem[R31 + 0x18, el]:u32]
00028e0a: R30 := 0x407974
00028e0c: call @read with return %00028e0e

00028e0e:
00028e14: mem := mem with [R31 + 0x3C, el]:u32 <- 31:0[R0]
00028e1b: R0 := pad:64[mem[R31 + 0x3C, el]:u32]
00028e20: VF := 0
00028e23: CF := 1
00028e27: ZF := 31:0[R0] = 0
00028e2b: NF := 31:31[R0]
00028e33: when ~(NF = VF & ~ZF) goto %00028e31
00045c11: goto %00029adf

00029adf:
00029ae4: R1 := pad:64[mem[R31 + 0x38, el]:u32]
00029aeb: R0 := pad:64[mem[R31 + 0x3C, el]:u32]
00029af2: R0 := pad:64[31:0[R1] + 31:0[R0]]
00029afa: mem := mem with [R31 + 0x38, el]:u32 <- 31:0[R0]
00045c12: goto %00028e31

00028e31:
00028e3b: R0 := pad:64[mem[R31 + 0x1C, el]:u32]
00028e40: VF := 0
00028e43: CF := 1
00028e47: ZF := 31:0[R0] = 0
00028e4b: NF := 31:31[R0]
00028e52: when NF <> VF goto %00028e50
00045c13: goto %00029a3f

00029a3f:
00029a42: R0 := 0x430000
00029a48: R0 := R0 + 0x390
00029a4f: R0 := pad:64[mem[R0, el]:u32]
00029a54: VF := 0
00029a57: CF := 1
00029a5b: ZF := 31:0[R0] = 0
00029a5f: NF := 31:31[R0]
00029a64: when ZF goto %00028e50
00045c14: goto %00029a68

00029a68:
00029a6d: R0 := pad:64[mem[R31 + 0x3C, el]:u32]
00029a72: VF := 0
00029a75: CF := 1
00029a79: ZF := 31:0[R0] = 0
00029a7d: NF := 31:31[R0]
00029a84: when NF = VF goto %00029a82
00045c15: goto %00029ac6

00029a82:
00029a8a: R0 := 0x419000
00029a90: R0 := R0 + 0xBA8
00045c16: goto %00029a92

00029ac6:
00029ac9: R30 := 0x4079C4
00029acb: call @__errno_location with return %00029acd

00029acd:
00029ad2: R0 := pad:64[mem[R0, el]:u32]
00029ad7: R30 := 0x4079CC
00029ad9: call @strerror with return %00029adb

00029adb:
00029add: goto %00029a92

00029a92:
00029a96: R5 := R0
00029a9d: R4 := mem[R31 + 0x10, el]:u64
00029aa4: R3 := pad:64[mem[R31 + 0x38, el]:u32]
00029aab: R2 := pad:64[mem[R31 + 0x24, el]:u32]
00029ab2: R1 := pad:64[mem[R31 + 0x3C, el]:u32]
00029ab7: R0 := 0x419000
00029abd: R0 := R0 + 0xBB0
00029ac2: R30 := 0x4079F8
00029ac4: call @printf with return %00028e50

00028e50:
00028e5a: R0 := pad:64[mem[R31 + 0x1C, el]:u32]
00028e5f: VF := 0
00028e62: CF := 1
00028e66: ZF := 31:0[R0] = 0
00028e6a: NF := 31:31[R0]
00028e71: when NF <> VF goto %00028e6f
00045c17: goto %00029a09

00029a09:
00029a0e: R0 := pad:64[mem[R31 + 0x1C, el]:u32]
00029a13: R30 := 0x407A0C
00029a15: call @so_closed with return %00029a17

00029a17:
00029a1a: VF := 0
00029a1d: CF := 1
00029a21: ZF := 31:0[R0] = 0
00029a25: NF := 31:31[R0]
00029a2a: when ZF goto %00028e6f
00045c18: goto %00029a2e

00028e6f:
00028e79: R0 := pad:64[mem[R31 + 0x1C, el]:u32]
00028e7e: VF := 0
00028e81: CF := 1
00028e85: ZF := 31:0[R0] = 0
00028e89: NF := 31:31[R0]
00028e90: when NF <> VF goto %00028e8e
00045c19: goto %00029976

00029976:
0002997b: R0 := pad:64[mem[R31 + 0x3C, el]:u32]
00029980: VF := 0
00029983: CF := 1
00029987: ZF := 31:0[R0] = 0
0002998b: NF := 31:31[R0]
00029992: when ~(NF = VF & ~ZF) goto %00028e8e
00045c1a: goto %00029996

00029996:
0002999b: R0 := extend:64[mem[R31 + 0x3C, el]:u32]
000299a1: R2 := R0
000299a8: R1 := mem[R31 + 0x28, el]:u64
000299af: R0 := pad:64[mem[R31 + 0x1C, el]:u32]
000299b4: R30 := 0x407A4C
000299b6: call @write_wrapper with return %000299b8

000299b8:
000299be: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
000299c3: R0 := 0x430000
000299c9: R0 := R0 + 0x390
000299d0: R0 := pad:64[mem[R0, el]:u32]
000299d5: VF := 0
000299d8: CF := 1
000299dc: ZF := 31:0[R0] = 0
000299e0: NF := 31:31[R0]
000299e5: when ZF goto %00028e8e
00045c1b: goto %000299e9

000299e9:
000299ee: R2 := pad:64[mem[R31 + 0x3C, el]:u32]
000299f5: R1 := pad:64[mem[R31 + 0x34, el]:u32]
000299fa: R0 := 0x419000
00029a00: R0 := R0 + 0xBE8
00029a05: R30 := 0x407A78
00029a07: call @printf with return %00028e8e

00028e8e:
00028e98: R0 := pad:64[mem[R31 + 0x3C, el]:u32]
00028e9d: VF := 0
00028ea0: CF := 1
00028ea4: ZF := 31:0[R0] = 0
00028ea8: NF := 31:31[R0]
00028eb0: when ~(NF = VF & ~ZF) goto %00028eae
00045c1c: goto %000298fa

000298fa:
000298ff: R0 := pad:64[mem[R31 + 0x34, el]:u32]
00029904: VF := 0
00029907: CF := 1
0002990b: ZF := 31:0[R0] = 0
0002990f: NF := 31:31[R0]
00029916: when ~(NF = VF & ~ZF) goto %00028eae
00045c1d: goto %0002991a

0002991a:
0002991f: R0 := mem[R31 + 0x10, el]:u64
00029925: #239 := R0 + 1
0002992a: VF := extend:128[#239] <> extend:128[R0] + 1
0002992f: CF := pad:128[#239] <> pad:128[R0] + 1
00029933: ZF := #239 = 0
00029937: NF := 63:63[#239]
0002993c: when ZF goto %00028db9
00045c1e: goto %00029940

00029940:
00029945: R0 := extend:64[mem[R31 + 0x38, el]:u32]
0002994c: R1 := mem[R31 + 0x10, el]:u64
00029952: #240 := ~R0
00029957: #241 := R1 + ~R0
0002995d: VF := extend:128[#241 + 1] <> extend:128[R1] + extend:128[#240] + 1
00029963: CF := pad:128[#241 + 1] <> pad:128[R1] + pad:128[#240] + 1
00029967: ZF := #241 + 1 = 0
0002996b: NF := 63:63[#241 + 1]
00029972: when NF = VF & ~ZF goto %00028db9
00045c1f: goto %00028eae

00029a2e:
00029a31: R0 := 0xFFFFFC19
00029a39: mem := mem with [R31 + 0x3C, el]:u32 <- 31:0[R0]
00029a3d: goto %00028eae

00028eae:
00028eb8: R0 := mem[R31 + 0x28, el]:u64
00028ebd: R30 := 0x407AB4
00028ebf: call @free with return %00028ec1

00028ec1:
00028ec6: R0 := pad:64[mem[R31 + 0x3C, el]:u32]
00028ecb: VF := 0
00028ece: CF := 1
00028ed2: ZF := 31:0[R0] = 0
00028ed6: NF := 31:31[R0]
00028ede: when ~(NF = VF & ~ZF) goto %00028edc
00045c20: goto %000298da

000298da:
000298df: R0 := pad:64[mem[R31 + 0x34, el]:u32]
000298e4: VF := 0
000298e7: CF := 1
000298eb: ZF := 31:0[R0] = 0
000298ef: NF := 31:31[R0]
000298f6: when NF = VF & ~ZF goto %0002982b
00045c21: goto %00028edc

0002982b:
0002982e: R0 := 1
00045c22: goto %00028f2e

00028edc:
00028ee6: R0 := pad:64[mem[R31 + 0x3C, el]:u32]
00028eeb: VF := 0
00028eee: CF := 1
00028ef2: ZF := 31:0[R0] = 0
00028ef6: NF := 31:31[R0]
00028efc: when ZF <> 1 goto %00028efa
00045c23: goto %00029857

00029857:
0002985c: R0 := pad:64[mem[R31 + 0x34, el]:u32]
00029861: VF := 0
00029864: CF := 1
00029868: ZF := 31:0[R0] = 0
0002986c: NF := 31:31[R0]
00029873: when ~(NF = VF & ~ZF) goto %00028efa
00045c24: goto %00029877

00029877:
0002987c: R0 := mem[R31 + 0x10, el]:u64
00029882: #236 := R0 + 1
00029887: VF := extend:128[#236] <> extend:128[R0] + 1
0002988c: CF := pad:128[#236] <> pad:128[R0] + 1
00029890: ZF := #236 = 0
00029894: NF := 63:63[#236]
0002989a: when ZF goto %00029898
00045c25: goto %000298a6

000298a6:
000298ab: R0 := extend:64[mem[R31 + 0x38, el]:u32]
000298b2: R1 := mem[R31 + 0x10, el]:u64
000298b8: #237 := ~R0
000298bd: #238 := R1 + ~R0
000298c3: VF := extend:128[#238 + 1] <> extend:128[R1] + extend:128[#237] + 1
000298c9: CF := pad:128[#238 + 1] <> pad:128[R1] + pad:128[#237] + 1
000298cd: ZF := #238 + 1 = 0
000298d1: NF := 63:63[#238 + 1]
000298d6: when ZF <> 1 goto %00028efa
00045c26: goto %00029898

00028efa:
00028f02: R0 := 0x430000
00028f08: R0 := R0 + 0x390
00028f0f: R0 := pad:64[mem[R0, el]:u32]
00028f14: VF := 0
00028f17: CF := 1
00028f1b: ZF := 31:0[R0] = 0
00028f1f: NF := 31:31[R0]
00028f25: when ZF goto %00028f23
00045c27: goto %00029830

00029830:
00029835: R3 := pad:64[mem[R31 + 0x3C, el]:u32]
0002983c: R2 := pad:64[mem[R31 + 0x18, el]:u32]
00029843: R1 := pad:64[mem[R31 + 0x1C, el]:u32]
00029848: R0 := 0x419000
0002984e: R0 := R0 + 0xC08
00029853: R30 := 0x407B34
00029855: call @printf with return %00028f23

00028f23:
00028f2b: R0 := 0
00028f30: goto %00028f2e

00029898:
000298a0: R0 := 1
000298a4: goto %00028f2e

00029b51:
00029b54: R0 := 1
00029b58: goto %00028f2e

00028f2e:
00028f36: R29 := mem[R31, el]:u64
00028f3b: R30 := mem[R31 + 8, el]:u64
00028f3f: R31 := R31 + 0x40
00028f44: call R30 with noreturn

00045c28: sub deregister_tm_clones(deregister_tm_clones_result)
000462e1: deregister_tm_clones_result :: out u32 = low:32[R0]

0003f028:
0003f02b: R0 := 0x430000
0003f031: R0 := R0 + 0x348
0003f036: R1 := 0x430000
0003f03c: R1 := R1 + 0x348
0003f042: #496 := ~R0
0003f047: #497 := R1 + ~R0
0003f04d: VF := extend:128[#497 + 1] <> extend:128[R1] + extend:128[#496] + 1
0003f053: CF := pad:128[#497 + 1] <> pad:128[R1] + pad:128[#496] + 1
0003f057: ZF := #497 + 1 = 0
0003f05b: NF := 63:63[#497 + 1]
0003f061: when ZF goto %0003f05f
00045c29: goto %0003f130

0003f130:
0003f133: R1 := 0x42F000
0003f13a: R1 := mem[R1 + 0xFD0, el]:u64
0003f13f: when R1 = 0 goto %0003f05f
00045c2a: goto %0003f143

0003f05f:
0003f067: call R30 with noreturn

0003f143:
0003f147: R16 := R1
0003f14c: call R16 with noreturn

00045c2b: sub des_key_schedule(des_key_schedule_result)
000462e2: des_key_schedule_result :: out u32 = low:32[R0]

000173da:
000173de: R31 := R31 - 0x30
000173e6: mem := mem with [R31 + 8, el]:u64 <- R0
000173ee: mem := mem with [R31, el]:u64 <- R1
000173f5: R0 := mem[R31 + 8, el]:u64
000173fd: mem := mem with [R31 + 0x18, el]:u64 <- R0
00017404: R0 := mem[R31 + 0x18, el]:u64
0001740b: R0 := pad:64[mem[R0]]
00017411: R1 := pad:64[7:0[R0].0]
00017418: R0 := mem[R31 + 0x18, el]:u64
0001741e: R0 := R0 + 1
00017425: R0 := pad:64[mem[R0]]
0001742b: R0 := pad:64[15:0[R0].0]
00017432: R1 := pad:64[31:0[R1] | 31:0[R0]]
00017439: R0 := mem[R31 + 0x18, el]:u64
0001743f: R0 := R0 + 2
00017446: R0 := pad:64[mem[R0]]
0001744c: R0 := pad:64[23:0[R0].0]
00017453: R0 := pad:64[31:0[R1] | 31:0[R0]]
0001745a: R1 := mem[R31 + 0x18, el]:u64
00017460: R1 := R1 + 3
00017467: R1 := pad:64[mem[R1]]
0001746e: R0 := pad:64[31:0[R0] | 31:0[R1]]
00017476: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
0001747d: R0 := mem[R31 + 0x18, el]:u64
00017483: R0 := R0 + 4
0001748a: R0 := pad:64[mem[R0]]
00017490: R1 := pad:64[7:0[R0].0]
00017497: R0 := mem[R31 + 0x18, el]:u64
0001749d: R0 := R0 + 5
000174a4: R0 := pad:64[mem[R0]]
000174aa: R0 := pad:64[15:0[R0].0]
000174b1: R1 := pad:64[31:0[R1] | 31:0[R0]]
000174b8: R0 := mem[R31 + 0x18, el]:u64
000174be: R0 := R0 + 6
000174c5: R0 := pad:64[mem[R0]]
000174cb: R0 := pad:64[23:0[R0].0]
000174d2: R0 := pad:64[31:0[R1] | 31:0[R0]]
000174d9: R1 := mem[R31 + 0x18, el]:u64
000174df: R1 := R1 + 7
000174e6: R1 := pad:64[mem[R1]]
000174ed: R0 := pad:64[31:0[R0] | 31:0[R1]]
000174f5: mem := mem with [R31 + 0x28, el]:u32 <- 31:0[R0]
000174fc: R0 := pad:64[mem[R31 + 0x28, el]:u32]
00017502: R1 := pad:64[31:4[R0]]
00017509: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00017510: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00017516: R0 := pad:64[31:0[R0] & 0xF0F0F0F]
0001751e: mem := mem with [R31 + 0x14, el]:u32 <- 31:0[R0]
00017525: R1 := pad:64[mem[R31 + 0x2C, el]:u32]
0001752c: R0 := pad:64[mem[R31 + 0x14, el]:u32]
00017533: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001753b: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
00017542: R0 := pad:64[mem[R31 + 0x14, el]:u32]
00017548: R0 := pad:64[27:0[R0].0]
0001754f: R1 := pad:64[mem[R31 + 0x28, el]:u32]
00017556: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001755e: mem := mem with [R31 + 0x28, el]:u32 <- 31:0[R0]
00017565: R1 := pad:64[mem[R31 + 0x28, el]:u32]
0001756c: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00017573: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00017579: R0 := pad:64[31:0[R0] & 0x10101010]
00017581: mem := mem with [R31 + 0x14, el]:u32 <- 31:0[R0]
00017588: R1 := pad:64[mem[R31 + 0x2C, el]:u32]
0001758f: R0 := pad:64[mem[R31 + 0x14, el]:u32]
00017596: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001759e: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
000175a5: R1 := pad:64[mem[R31 + 0x28, el]:u32]
000175ac: R0 := pad:64[mem[R31 + 0x14, el]:u32]
000175b3: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
000175bb: mem := mem with [R31 + 0x28, el]:u32 <- 31:0[R0]
000175c2: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
000175c8: R1 := pad:64[3:0[R0]]
000175cd: R0 := 0x41D000
000175d3: R0 := R0 + 0x8C0
000175d9: R1 := pad:64[31:0[R1]]
000175e1: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
000175e7: R1 := pad:64[28:0[R0].0]
000175ee: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
000175f4: R0 := pad:64[31:8[R0]]
000175fa: R2 := pad:64[3:0[R0]]
000175ff: R0 := 0x41D000
00017605: R0 := R0 + 0x8C0
0001760b: R2 := pad:64[31:0[R2]]
00017613: R0 := pad:64[mem[R0 + (61:0[R2].0), el]:u32]
00017619: R0 := pad:64[29:0[R0].0]
00017620: R1 := pad:64[31:0[R1] | 31:0[R0]]
00017627: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001762d: R0 := pad:64[31:16[R0]]
00017633: R2 := pad:64[3:0[R0]]
00017638: R0 := 0x41D000
0001763e: R0 := R0 + 0x8C0
00017644: R2 := pad:64[31:0[R2]]
0001764c: R0 := pad:64[mem[R0 + (61:0[R2].0), el]:u32]
00017652: R0 := pad:64[30:0[R0].0]
00017659: R1 := pad:64[31:0[R1] | 31:0[R0]]
00017660: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00017666: R0 := pad:64[31:24[R0]]
0001766c: R2 := pad:64[3:0[R0]]
00017671: R0 := 0x41D000
00017677: R0 := R0 + 0x8C0
0001767d: R2 := pad:64[31:0[R2]]
00017685: R0 := pad:64[mem[R0 + (61:0[R2].0), el]:u32]
0001768c: R1 := pad:64[31:0[R1] | 31:0[R0]]
00017693: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00017699: R0 := pad:64[31:5[R0]]
0001769f: R2 := pad:64[3:0[R0]]
000176a4: R0 := 0x41D000
000176aa: R0 := R0 + 0x8C0
000176b0: R2 := pad:64[31:0[R2]]
000176b8: R0 := pad:64[mem[R0 + (61:0[R2].0), el]:u32]
000176be: R0 := pad:64[24:0[R0].0]
000176c5: R1 := pad:64[31:0[R1] | 31:0[R0]]
000176cc: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
000176d2: R0 := pad:64[31:13[R0]]
000176d8: R2 := pad:64[3:0[R0]]
000176dd: R0 := 0x41D000
000176e3: R0 := R0 + 0x8C0
000176e9: R2 := pad:64[31:0[R2]]
000176f1: R0 := pad:64[mem[R0 + (61:0[R2].0), el]:u32]
000176f7: R0 := pad:64[25:0[R0].0]
000176fe: R1 := pad:64[31:0[R1] | 31:0[R0]]
00017705: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001770b: R0 := pad:64[31:21[R0]]
00017711: R2 := pad:64[3:0[R0]]
00017716: R0 := 0x41D000
0001771c: R0 := R0 + 0x8C0
00017722: R2 := pad:64[31:0[R2]]
0001772a: R0 := pad:64[mem[R0 + (61:0[R2].0), el]:u32]
00017730: R0 := pad:64[26:0[R0].0]
00017737: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001773e: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00017744: R2 := pad:64[31:29[R0]]
00017749: R0 := 0x41D000
0001774f: R0 := R0 + 0x8C0
00017755: R2 := pad:64[31:0[R2]]
0001775d: R0 := pad:64[mem[R0 + (61:0[R2].0), el]:u32]
00017763: R0 := pad:64[27:0[R0].0]
0001776a: R0 := pad:64[31:0[R1] | 31:0[R0]]
00017772: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
00017779: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001777f: R0 := pad:64[27:0[R0]]
00017787: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
0001778e: R0 := pad:64[mem[R31 + 0x28, el]:u32]
00017794: R0 := pad:64[31:1[R0]]
0001779a: R1 := pad:64[3:0[R0]]
0001779f: R0 := 0x41D000
000177a5: R0 := R0 + 0x900
000177ab: R1 := pad:64[31:0[R1]]
000177b3: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
000177b9: R1 := pad:64[28:0[R0].0]
000177c0: R0 := pad:64[mem[R31 + 0x28, el]:u32]
000177c6: R0 := pad:64[31:9[R0]]
000177cc: R2 := pad:64[3:0[R0]]
000177d1: R0 := 0x41D000
000177d7: R0 := R0 + 0x900
000177dd: R2 := pad:64[31:0[R2]]
000177e5: R0 := pad:64[mem[R0 + (61:0[R2].0), el]:u32]
000177eb: R0 := pad:64[29:0[R0].0]
000177f2: R1 := pad:64[31:0[R1] | 31:0[R0]]
000177f9: R0 := pad:64[mem[R31 + 0x28, el]:u32]
000177ff: R0 := pad:64[31:17[R0]]
00017805: R2 := pad:64[3:0[R0]]
0001780a: R0 := 0x41D000
00017810: R0 := R0 + 0x900
00017816: R2 := pad:64[31:0[R2]]
0001781e: R0 := pad:64[mem[R0 + (61:0[R2].0), el]:u32]
00017824: R0 := pad:64[30:0[R0].0]
0001782b: R1 := pad:64[31:0[R1] | 31:0[R0]]
00017832: R0 := pad:64[mem[R31 + 0x28, el]:u32]
00017838: R0 := pad:64[31:25[R0]]
0001783e: R2 := pad:64[3:0[R0]]
00017843: R0 := 0x41D000
00017849: R0 := R0 + 0x900
0001784f: R2 := pad:64[31:0[R2]]
00017857: R0 := pad:64[mem[R0 + (61:0[R2].0), el]:u32]
0001785e: R1 := pad:64[31:0[R1] | 31:0[R0]]
00017865: R0 := pad:64[mem[R31 + 0x28, el]:u32]
0001786b: R0 := pad:64[31:4[R0]]
00017871: R2 := pad:64[3:0[R0]]
00017876: R0 := 0x41D000
0001787c: R0 := R0 + 0x900
00017882: R2 := pad:64[31:0[R2]]
0001788a: R0 := pad:64[mem[R0 + (61:0[R2].0), el]:u32]
00017890: R0 := pad:64[24:0[R0].0]
00017897: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001789e: R0 := pad:64[mem[R31 + 0x28, el]:u32]
000178a4: R0 := pad:64[31:12[R0]]
000178aa: R2 := pad:64[3:0[R0]]
000178af: R0 := 0x41D000
000178b5: R0 := R0 + 0x900
000178bb: R2 := pad:64[31:0[R2]]
000178c3: R0 := pad:64[mem[R0 + (61:0[R2].0), el]:u32]
000178c9: R0 := pad:64[25:0[R0].0]
000178d0: R1 := pad:64[31:0[R1] | 31:0[R0]]
000178d7: R0 := pad:64[mem[R31 + 0x28, el]:u32]
000178dd: R0 := pad:64[31:20[R0]]
000178e3: R2 := pad:64[3:0[R0]]
000178e8: R0 := 0x41D000
000178ee: R0 := R0 + 0x900
000178f4: R2 := pad:64[31:0[R2]]
000178fc: R0 := pad:64[mem[R0 + (61:0[R2].0), el]:u32]
00017902: R0 := pad:64[26:0[R0].0]
00017909: R1 := pad:64[31:0[R1] | 31:0[R0]]
00017910: R0 := pad:64[mem[R31 + 0x28, el]:u32]
00017916: R2 := pad:64[31:28[R0]]
0001791b: R0 := 0x41D000
00017921: R0 := R0 + 0x900
00017927: R2 := pad:64[31:0[R2]]
0001792f: R0 := pad:64[mem[R0 + (61:0[R2].0), el]:u32]
00017935: R0 := pad:64[27:0[R0].0]
0001793c: R0 := pad:64[31:0[R1] | 31:0[R0]]
00017944: mem := mem with [R31 + 0x28, el]:u32 <- 31:0[R0]
0001794b: R0 := pad:64[mem[R31 + 0x28, el]:u32]
00017951: R0 := pad:64[27:0[R0]]
00017959: mem := mem with [R31 + 0x28, el]:u32 <- 31:0[R0]
00017960: mem := mem with [R31 + 0x24, el]:u32 <- 0
00017965: goto %00017963

00017963:
0001796b: R0 := pad:64[mem[R31 + 0x24, el]:u32]
00017971: #40 := 31:0[R0] - 0xF
00017976: VF := extend:64[#40] <> extend:64[31:0[R0]] - 0xF
0001797b: CF := pad:64[#40] <> pad:64[31:0[R0]] + 0xFFFFFFF1
0001797f: ZF := #40 = 0
00017983: NF := 31:31[#40]
0001798b: when ~(NF = VF & ~ZF) goto %00017989
00045c2c: goto %00017f4d

00017f4d:
00017f55: R31 := R31 + 0x30
00017f5a: call R30 with noreturn

00017989:
00017991: R0 := 0x41D000
00017997: R1 := R0 + 0x940
0001799e: R0 := extend:64[mem[R31 + 0x24, el]:u32]
000179a6: R0 := pad:64[mem[R1 + R0]]
000179ac: R1 := pad:64[31:0[R0]]
000179b3: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
000179ba: R1 := pad:64[31:0[R0] << pad:10[4:0[R1]]]
000179bf: R0 := 0x41D000
000179c5: R2 := R0 + 0x940
000179cc: R0 := extend:64[mem[R31 + 0x24, el]:u32]
000179d4: R0 := pad:64[mem[R2 + R0]]
000179da: R2 := pad:64[31:0[R0]]
000179df: R0 := 0x1C
000179e6: R0 := pad:64[31:0[R0] + ~31:0[R2] + 1]
000179ed: R2 := pad:64[mem[R31 + 0x2C, el]:u32]
000179f4: R0 := pad:64[31:0[R2] >> pad:10[4:0[R0]]]
000179fb: R0 := pad:64[31:0[R1] | 31:0[R0]]
00017a01: R0 := pad:64[27:0[R0]]
00017a09: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
00017a0e: R0 := 0x41D000
00017a14: R1 := R0 + 0x940
00017a1b: R0 := extend:64[mem[R31 + 0x24, el]:u32]
00017a23: R0 := pad:64[mem[R1 + R0]]
00017a29: R1 := pad:64[31:0[R0]]
00017a30: R0 := pad:64[mem[R31 + 0x28, el]:u32]
00017a37: R1 := pad:64[31:0[R0] << pad:10[4:0[R1]]]
00017a3c: R0 := 0x41D000
00017a42: R2 := R0 + 0x940
00017a49: R0 := extend:64[mem[R31 + 0x24, el]:u32]
00017a51: R0 := pad:64[mem[R2 + R0]]
00017a57: R2 := pad:64[31:0[R0]]
00017a5c: R0 := 0x1C
00017a63: R0 := pad:64[31:0[R0] + ~31:0[R2] + 1]
00017a6a: R2 := pad:64[mem[R31 + 0x28, el]:u32]
00017a71: R0 := pad:64[31:0[R2] >> pad:10[4:0[R0]]]
00017a78: R0 := pad:64[31:0[R1] | 31:0[R0]]
00017a7e: R0 := pad:64[27:0[R0]]
00017a86: mem := mem with [R31 + 0x28, el]:u32 <- 31:0[R0]
00017a8d: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00017a93: R1 := pad:64[27:0[R0].0]
00017a98: R0 := 0x24000000
00017a9f: R1 := pad:64[31:0[R1] & 31:0[R0]]
00017aa6: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00017aac: R0 := pad:64[3:0[R0].0]
00017ab2: R0 := pad:64[28:28[R0].0]
00017ab9: R1 := pad:64[31:0[R1] | 31:0[R0]]
00017ac0: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00017ac6: R0 := pad:64[17:0[R0].0]
00017acc: R0 := pad:64[27:27[R0].0]
00017ad3: R1 := pad:64[31:0[R1] | 31:0[R0]]
00017ada: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00017ae0: R2 := pad:64[13:0[R0].0]
00017ae5: R0 := 0x2080000
00017aec: R0 := pad:64[31:0[R2] & 31:0[R0]]
00017af3: R1 := pad:64[31:0[R1] | 31:0[R0]]
00017afa: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00017b00: R0 := pad:64[25:0[R0].0]
00017b06: R0 := pad:64[24:24[R0].0]
00017b0d: R1 := pad:64[31:0[R1] | 31:0[R0]]
00017b14: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00017b1a: R0 := pad:64[22:0[R0].0]
00017b20: R0 := pad:64[21:21[R0].0]
00017b27: R1 := pad:64[31:0[R1] | 31:0[R0]]
00017b2e: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00017b34: R0 := pad:64[31:1[R0]]
00017b3a: R0 := pad:64[20:20[R0].0]
00017b41: R1 := pad:64[31:0[R1] | 31:0[R0]]
00017b48: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00017b4e: R0 := pad:64[21:0[R0].0]
00017b54: R0 := pad:64[18:18[R0].0]
00017b5b: R1 := pad:64[31:0[R1] | 31:0[R0]]
00017b62: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00017b68: R0 := pad:64[29:0[R0].0]
00017b6e: R0 := pad:64[17:17[R0].0]
00017b75: R1 := pad:64[31:0[R1] | 31:0[R0]]
00017b7c: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00017b82: R0 := pad:64[31:10[R0]]
00017b88: R0 := pad:64[16:16[R0].0]
00017b8f: R1 := pad:64[31:0[R1] | 31:0[R0]]
00017b96: R0 := pad:64[mem[R31 + 0x28, el]:u32]
00017b9c: R0 := pad:64[31:13[R0]]
00017ba2: R0 := pad:64[13:13[R0].0]
00017ba9: R1 := pad:64[31:0[R1] | 31:0[R0]]
00017bb0: R0 := pad:64[mem[R31 + 0x28, el]:u32]
00017bb6: R0 := pad:64[31:4[R0]]
00017bbc: R0 := pad:64[12:12[R0].0]
00017bc3: R1 := pad:64[31:0[R1] | 31:0[R0]]
00017bca: R0 := pad:64[mem[R31 + 0x28, el]:u32]
00017bd0: R0 := pad:64[25:0[R0].0]
00017bd6: R0 := pad:64[11:11[R0].0]
00017bdd: R1 := pad:64[31:0[R1] | 31:0[R0]]
00017be4: R0 := pad:64[mem[R31 + 0x28, el]:u32]
00017bea: R0 := pad:64[31:1[R0]]
00017bf0: R0 := pad:64[10:10[R0].0]
00017bf7: R1 := pad:64[31:0[R1] | 31:0[R0]]
00017bfe: R0 := pad:64[mem[R31 + 0x28, el]:u32]
00017c04: R0 := pad:64[31:14[R0]]
00017c0a: R0 := pad:64[9:9[R0].0]
00017c11: R1 := pad:64[31:0[R1] | 31:0[R0]]
00017c18: R0 := pad:64[mem[R31 + 0x28, el]:u32]
00017c1e: R0 := pad:64[8:8[R0].0]
00017c25: R1 := pad:64[31:0[R1] | 31:0[R0]]
00017c2c: R0 := pad:64[mem[R31 + 0x28, el]:u32]
00017c32: R0 := pad:64[31:5[R0]]
00017c38: R0 := pad:64[5:5[R0].0]
00017c3f: R1 := pad:64[31:0[R1] | 31:0[R0]]
00017c46: R0 := pad:64[mem[R31 + 0x28, el]:u32]
00017c4c: R0 := pad:64[31:10[R0]]
00017c52: R0 := pad:64[4:4[R0].0]
00017c59: R1 := pad:64[31:0[R1] | 31:0[R0]]
00017c60: R0 := pad:64[mem[R31 + 0x28, el]:u32]
00017c66: R0 := pad:64[31:3[R0]]
00017c6c: R0 := pad:64[3:3[R0].0]
00017c73: R1 := pad:64[31:0[R1] | 31:0[R0]]
00017c7a: R0 := pad:64[mem[R31 + 0x28, el]:u32]
00017c80: R0 := pad:64[31:18[R0]]
00017c86: R0 := pad:64[2:2[R0].0]
00017c8d: R1 := pad:64[31:0[R1] | 31:0[R0]]
00017c94: R0 := pad:64[mem[R31 + 0x28, el]:u32]
00017c9a: R0 := pad:64[31:26[R0]]
00017ca0: R0 := pad:64[1:1[R0].0]
00017ca7: R2 := pad:64[31:0[R1] | 31:0[R0]]
00017cae: R0 := pad:64[mem[R31 + 0x28, el]:u32]
00017cb4: R0 := pad:64[31:24[R0]]
00017cba: R1 := pad:64[0:0[R0]]
00017cc1: R0 := mem[R31, el]:u64
00017cc7: R3 := R0 + 4
00017ccf: mem := mem with [R31, el]:u64 <- R3
00017cd6: R1 := pad:64[31:0[R2] | 31:0[R1]]
00017cde: mem := mem with [R0, el]:u32 <- 31:0[R1]
00017ce5: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00017ceb: R0 := pad:64[16:0[R0].0]
00017cf1: R1 := pad:64[29:29[R0].0]
00017cf8: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00017cfe: R0 := pad:64[14:0[R0].0]
00017d04: R0 := pad:64[28:28[R0].0]
00017d0b: R1 := pad:64[31:0[R1] | 31:0[R0]]
00017d12: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00017d18: R0 := pad:64[21:0[R0].0]
00017d1e: R0 := pad:64[27:27[R0].0]
00017d25: R1 := pad:64[31:0[R1] | 31:0[R0]]
00017d2c: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00017d32: R0 := pad:64[9:0[R0].0]
00017d38: R0 := pad:64[26:26[R0].0]
00017d3f: R1 := pad:64[31:0[R1] | 31:0[R0]]
00017d46: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00017d4c: R0 := pad:64[31:2[R0]]
00017d52: R0 := pad:64[25:25[R0].0]
00017d59: R1 := pad:64[31:0[R1] | 31:0[R0]]
00017d60: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00017d66: R0 := pad:64[30:0[R0].0]
00017d6c: R0 := pad:64[24:24[R0].0]
00017d73: R1 := pad:64[31:0[R1] | 31:0[R0]]
00017d7a: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00017d80: R0 := pad:64[15:0[R0].0]
00017d86: R0 := pad:64[21:21[R0].0]
00017d8d: R1 := pad:64[31:0[R1] | 31:0[R0]]
00017d94: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00017d9a: R0 := pad:64[20:0[R0].0]
00017da0: R0 := pad:64[20:20[R0].0]
00017da7: R1 := pad:64[31:0[R1] | 31:0[R0]]
00017dae: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00017db4: R0 := pad:64[28:0[R0].0]
00017dba: R0 := pad:64[19:19[R0].0]
00017dc1: R1 := pad:64[31:0[R1] | 31:0[R0]]
00017dc8: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00017dce: R0 := pad:64[31:6[R0]]
00017dd4: R0 := pad:64[18:18[R0].0]
00017ddb: R1 := pad:64[31:0[R1] | 31:0[R0]]
00017de2: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00017de8: R0 := pad:64[16:0[R0].0]
00017dee: R0 := pad:64[17:17[R0].0]
00017df5: R1 := pad:64[31:0[R1] | 31:0[R0]]
00017dfc: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00017e02: R0 := pad:64[31:4[R0]]
00017e08: R0 := pad:64[16:16[R0].0]
00017e0f: R1 := pad:64[31:0[R1] | 31:0[R0]]
00017e16: R0 := pad:64[mem[R31 + 0x28, el]:u32]
00017e1c: R0 := pad:64[31:2[R0]]
00017e22: R0 := pad:64[13:13[R0].0]
00017e29: R1 := pad:64[31:0[R1] | 31:0[R0]]
00017e30: R0 := pad:64[mem[R31 + 0x28, el]:u32]
00017e36: R0 := pad:64[23:0[R0].0]
00017e3c: R0 := pad:64[12:12[R0].0]
00017e43: R1 := pad:64[31:0[R1] | 31:0[R0]]
00017e4a: R0 := pad:64[mem[R31 + 0x28, el]:u32]
00017e50: R2 := pad:64[31:14[R0]]
00017e55: R0 := 0x808
00017e5c: R0 := pad:64[31:0[R2] & 31:0[R0]]
00017e63: R1 := pad:64[31:0[R1] | 31:0[R0]]
00017e6a: R0 := pad:64[mem[R31 + 0x28, el]:u32]
00017e70: R0 := pad:64[31:9[R0]]
00017e76: R0 := pad:64[10:10[R0].0]
00017e7d: R1 := pad:64[31:0[R1] | 31:0[R0]]
00017e84: R0 := pad:64[mem[R31 + 0x28, el]:u32]
00017e8a: R0 := pad:64[9:9[R0].0]
00017e91: R1 := pad:64[31:0[R1] | 31:0[R0]]
00017e98: R0 := pad:64[mem[R31 + 0x28, el]:u32]
00017e9e: R0 := pad:64[24:0[R0].0]
00017ea4: R0 := pad:64[8:8[R0].0]
00017eab: R1 := pad:64[31:0[R1] | 31:0[R0]]
00017eb2: R0 := pad:64[mem[R31 + 0x28, el]:u32]
00017eb8: R0 := pad:64[31:7[R0]]
00017ebe: R0 := pad:64[5:5[R0].0]
00017ec5: R1 := pad:64[31:0[R1] | 31:0[R0]]
00017ecc: R0 := pad:64[mem[R31 + 0x28, el]:u32]
00017ed2: R2 := pad:64[31:3[R0]]
00017ed7: R0 := 0x11
00017ede: R0 := pad:64[31:0[R2] & 31:0[R0]]
00017ee5: R1 := pad:64[31:0[R1] | 31:0[R0]]
00017eec: R0 := pad:64[mem[R31 + 0x28, el]:u32]
00017ef2: R0 := pad:64[29:0[R0].0]
00017ef8: R0 := pad:64[2:2[R0].0]
00017eff: R2 := pad:64[31:0[R1] | 31:0[R0]]
00017f06: R0 := pad:64[mem[R31 + 0x28, el]:u32]
00017f0c: R0 := pad:64[31:21[R0]]
00017f12: R1 := pad:64[1:1[R0].0]
00017f19: R0 := mem[R31, el]:u64
00017f1f: R3 := R0 + 4
00017f27: mem := mem with [R31, el]:u64 <- R3
00017f2e: R1 := pad:64[31:0[R2] | 31:0[R1]]
00017f36: mem := mem with [R0, el]:u32 <- 31:0[R1]
00017f3d: R0 := pad:64[mem[R31 + 0x24, el]:u32]
00017f43: R0 := pad:64[31:0[R0] + 1]
00017f4b: mem := mem with [R31 + 0x24, el]:u32 <- 31:0[R0]
00045c2d: goto %00017963

00045c2e: sub direct_request(direct_request_result)
000462e3: direct_request_result :: out u32 = low:32[R0]

00031a76:
00031a7d: #355 := R31 - 0xD0
00031a83: mem := mem with [#355, el]:u64 <- R29
00031a89: mem := mem with [#355 + 8, el]:u64 <- R30
00031a8d: R31 := #355
00031a93: R29 := R31
00031a99: #356 := R31 + 0x10
00031a9f: mem := mem with [#356, el]:u64 <- R19
00031aa5: mem := mem with [#356 + 8, el]:u64 <- R20
00031aad: mem := mem with [R31 + 0x28, el]:u64 <- R0
00031ab5: mem := mem with [R31 + 0x20, el]:u64 <- R1
00031abc: mem := mem with [R31 + 0x90, el]:u64 <- 0
00031ac3: mem := mem with [R31 + 0x98, el]:u64 <- 0
00031aca: mem := mem with [R31 + 0xC8, el]:u64 <- 0
00031ad1: mem := mem with [R31 + 0xC0, el]:u64 <- 0
00031ad8: mem := mem with [R31 + 0xB8, el]:u32 <- 0
00031adf: mem := mem with [R31 + 0xB0, el]:u64 <- 0
00031ae6: mem := mem with [R31 + 0xA8, el]:u32 <- 0
00031aed: mem := mem with [R31 + 0xAC, el]:u32 <- 0
00031af4: R0 := mem[R31 + 0x28, el]:u64
00031afb: R0 := pad:64[mem[R0, el]:u32]
00031b03: mem := mem with [R31 + 0x68, el]:u32 <- 31:0[R0]
00031b09: R0 := R31 + 0x38
00031b0e: V0 := 0
00031b16: mem := mem with [R0, el]:u128 <- V0
00031b1c: mem := mem with [R0 + 0x10, el]:u128 <- V0
00031b24: mem := mem with [R0 + 0x1E, el]:u128 <- V0
00031b2b: R0 := mem[R31 + 0x28, el]:u64
00031b31: R0 := R0 + 0x10
00031b38: R0 := pad:64[mem[R0, el]:u16]
00031b3e: R4 := pad:64[31:0[R0]]
00031b45: R0 := mem[R31 + 0x28, el]:u64
00031b4b: R0 := R0 + 0x10
00031b52: R0 := pad:64[mem[R0, el]:u16]
00031b58: #357 := 31:0[R0] - 2
00031b5d: VF := extend:64[#357] <> extend:64[31:0[R0]] - 2
00031b62: CF := pad:64[#357] <> pad:64[31:0[R0]] + 0xFFFFFFFE
00031b66: ZF := #357 = 0
00031b6a: NF := 31:31[#357]
00031b70: when ZF <> 1 goto %00031b6e
00045c2f: goto %00033580

00031b6e:
00031b78: R0 := mem[R31 + 0x28, el]:u64
00031b7e: R0 := R0 + 0x10
00031b84: R0 := R0 + 8
00045c30: goto %00031b86

00033580:
00033585: R0 := mem[R31 + 0x28, el]:u64
0003358b: R0 := R0 + 0x10
00033591: R0 := R0 + 4
00033595: goto %00031b86

00031b86:
00031b8a: R1 := R31 + 0x38
00031b8f: R3 := 0x2E
00031b95: R2 := R1
00031b9b: R1 := R0
00031ba1: R0 := pad:64[31:0[R4]]
00031ba6: R30 := 0x403EF4
00031ba8: call @inet_ntop with return %00031baa

00031baa:
00031bad: R0 := 0x430000
00031bb3: R0 := R0 + 0x390
00031bba: R0 := pad:64[mem[R0, el]:u32]
00031bbf: VF := 0
00031bc2: CF := 1
00031bc6: ZF := 31:0[R0] = 0
00031bca: NF := 31:31[R0]
00031bd0: when ZF goto %00031bce
00045c31: goto %0003356e

0003356e:
00033571: R0 := 0x418000
00033577: R0 := R0 + 0xDD0
0003357c: R30 := 0x403F14
0003357e: call @puts with return %00031bce

00031bce:
00031bd8: R0 := mem[R31 + 0x20, el]:u64
00031bdf: R2 := mem[R0 + 0x40, el]:u64
00031be6: R0 := mem[R31 + 0x20, el]:u64
00031bed: R0 := pad:64[mem[R0 + 0x20, el]:u32]
00031bf3: R1 := pad:64[31:0[R0]]
00031bf9: R0 := R2
00031bfe: R30 := 0x403F30
00031c00: call @host_connect with return %00031c02

00031c02:
00031c08: mem := mem with [R31 + 0x6C, el]:u32 <- 31:0[R0]
00031c0f: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
00031c14: VF := 0
00031c17: CF := 1
00031c1b: ZF := 31:0[R0] = 0
00031c1f: NF := 31:31[R0]
00031c26: when NF = VF goto %00031c24
00045c32: goto %00033488

00031c24:
00031c2c: R0 := 0x430000
00031c32: R0 := R0 + 0x398
00031c39: R0 := mem[R0, el]:u64
00031c3e: R1 := 1
00031c43: R30 := 0x403FE0
00031c45: call @dup_auth with return %00031c47

00031c47:
00031c4d: mem := mem with [R31 + 0xC0, el]:u64 <- R0
00031c54: R0 := mem[R31 + 0x20, el]:u64
00031c5b: R0 := mem[R0 + 0x40, el]:u64
00031c60: VF := 0
00031c63: CF := 1
00031c67: ZF := R0 = 0
00031c6b: NF := 63:63[R0]
00031c71: when ZF goto %00031c6f
00045c33: goto %00033451

00031c6f:
00031c79: R0 := mem[R31 + 0x20, el]:u64
00031c80: R2 := mem[R0 + 0x48, el]:u64
00031c85: R0 := 0x418000
00031c8b: R1 := R0 + 0xE18
00031c91: R0 := R2
00031c96: R30 := 0x40402C
00031c98: call @gen_502_page with return %00031c9a

00031c9a:
00031ca0: mem := mem with [R31 + 0xA0, el]:u64 <- R0
00031ca7: R19 := pad:64[mem[R31 + 0x68, el]:u32]
00031cae: R0 := mem[R31 + 0xA0, el]:u64
00031cb3: R30 := 0x40403C
00031cb5: call @strlen with return %00031cb7

00031cb7:
00031cbb: R2 := R0
00031cc2: R1 := mem[R31 + 0xA0, el]:u64
00031cc8: R0 := pad:64[31:0[R19]]
00031ccd: R30 := 0x40404C
00031ccf: call @write_wrapper with return %00031cd1

00031cd1:
00031cd6: R0 := mem[R31 + 0xA0, el]:u64
00031cdb: R30 := 0x404054
00031cdd: call @free with return %00031cdf

00031cdf:
00031ce2: R0 := 0xFFFFFFFFFFFFFFFF
00031cea: mem := mem with [R31 + 0xC8, el]:u64 <- R0
00031cef: goto %00031ced

00033451:
00033456: R0 := mem[R31 + 0x20, el]:u64
0003345d: R0 := mem[R0 + 0x40, el]:u64
00033462: R30 := 0x404000
00033464: call @strdup with return %00033466

00033466:
0003346c: mem := mem with [R31 + 0xB0, el]:u64 <- R0
00033473: R0 := mem[R31 + 0x20, el]:u64
0003347a: R0 := pad:64[mem[R0 + 0x20, el]:u32]
00033482: mem := mem with [R31 + 0xA8, el]:u32 <- 31:0[R0]
00033486: goto %00031da1

00031da1:
00031da6: R0 := mem[R31 + 0x20, el]:u64
00031dab: VF := 0
00031dae: CF := 1
00031db2: ZF := R0 = 0
00031db6: NF := 63:63[R0]
00031dbc: when ZF goto %00031dba
00045c34: goto %00033370

00031dba:
00031dc2: R30 := 0x4040E4
00031dc4: call @new_rr_data with return %00031dc6

00031dc6:
00031dcc: mem := mem with [R31 + 0x90, el]:u64 <- R0
00045c35: goto %00031dce

00033370:
00033375: R0 := mem[R31 + 0x20, el]:u64
0003337a: VF := 0
0003337d: CF := 1
00033381: ZF := R0 = 0
00033385: NF := 63:63[R0]
0003338b: when ZF goto %00033389
00045c36: goto %000333ef

000333ef:
000333f4: R0 := mem[R31 + 0x20, el]:u64
000333fb: R0 := pad:64[mem[R0, el]:u32]
00033400: VF := 0
00033403: CF := 1
00033407: ZF := 31:0[R0] = 0
0003340b: NF := 31:31[R0]
00033410: when ZF goto %00033389
00045c37: goto %00033414

00033414:
00033419: R0 := mem[R31 + 0x20, el]:u64
00033420: R0 := mem[R0 + 0x28, el]:u64
00033426: R1 := R0
0003342b: R0 := 0x418000
00033431: R0 := R0 + 0xE30
00033436: R30 := 0x4040A0
00033438: call @strcasecmp with return %0003343a

0003343a:
0003343d: VF := 0
00033440: CF := 1
00033444: ZF := 31:0[R0] = 0
00033448: NF := 31:31[R0]
0003344d: when ZF goto %000333b3
00045c38: goto %00033389

00033389:
00033391: R1 := 0
00033398: R0 := mem[R31 + 0x20, el]:u64
0003339d: R30 := 0x4040B4
0003339f: call @http_has_body with return %000333a1

000333a1:
000333a4: VF := 0
000333a7: CF := 1
000333ab: ZF := R0 = 0
000333af: NF := 63:63[R0]
000333b5: when ZF goto %000333b3
00045c39: goto %000333e6

000333b3:
000333bb: R0 := 0
00045c3a: goto %000333bd

000333e6:
000333e9: R0 := 1
000333ed: goto %000333bd

000333bd:
000333c3: mem := mem with [R31 + 0xB8, el]:u32 <- 31:0[R0]
000333ca: R0 := mem[R31 + 0x20, el]:u64
000333cf: R30 := 0x4040D4
000333d1: call @dup_rr_data with return %000333d3

000333d3:
000333d9: mem := mem with [R31 + 0x90, el]:u64 <- R0
000333e0: mem := mem with [R31 + 0x20, el]:u64 <- 0
000333e4: goto %00031dce

00031dce:
00031dd1: R30 := 0x4040EC
00031dd3: call @new_rr_data with return %00031dd5

00031dd5:
00031ddb: mem := mem with [R31 + 0x98, el]:u64 <- R0
00031de1: R0 := R31 + 0x68
00031de9: mem := mem with [R31 + 0x78, el]:u64 <- R0
00031df0: R0 := mem[R31 + 0x78, el]:u64
00031df8: mem := mem with [R31 + 0x80, el]:u64 <- R0
00031dfe: R0 := R31 + 0x6C
00031e06: mem := mem with [R31 + 0x70, el]:u64 <- R0
00031e0d: R0 := mem[R31 + 0x70, el]:u64
00031e15: mem := mem with [R31 + 0x88, el]:u64 <- R0
00031e1c: mem := mem with [R31 + 0xAC, el]:u32 <- 0
00031e23: mem := mem with [R31 + 0xBC, el]:u32 <- 0
00031e28: goto %00031e26

00031e26:
00031e2e: R0 := pad:64[mem[R31 + 0xBC, el]:u32]
00031e34: #359 := 31:0[R0] - 1
00031e39: VF := extend:64[#359] <> extend:64[31:0[R0]] - 1
00031e3e: CF := pad:64[#359] <> pad:64[31:0[R0]] + 0xFFFFFFFF
00031e42: ZF := #359 = 0
00031e46: NF := 31:31[#359]
00031e4e: when ~(NF = VF & ~ZF) goto %00031e4c
00045c3b: goto %000332bd

000332bd:
000332c1: R0 := R31 + 0x90
000332c6: R30 := 0x404C5C
000332c8: call @free_rr_data with return %000332ca

000332ca:
000332ce: R0 := R31 + 0x90
000332d4: R0 := R0 + 8
000332d9: R30 := 0x404C68
000332db: call @free_rr_data with return %000332dd

000332dd:
000332e2: R0 := pad:64[mem[R31 + 0xAC, el]:u32]
000332e7: VF := 0
000332ea: CF := 1
000332ee: ZF := 31:0[R0] = 0
000332f2: NF := 31:31[R0]
000332f8: when ZF goto %000332f6
00045c3c: goto %000332fd

000332fd:
00033302: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
00033307: R30 := 0x404C7C
00033309: call @so_closed with return %0003330b

0003330b:
0003330e: VF := 0
00033311: CF := 1
00033315: ZF := 31:0[R0] = 0
00033319: NF := 31:31[R0]
0003331e: when ZF <> 1 goto %000332f6
00045c3d: goto %00033322

00033322:
00033327: R0 := pad:64[mem[R31 + 0x68, el]:u32]
0003332c: R30 := 0x404C8C
0003332e: call @so_closed with return %00033330

00033330:
00033333: VF := 0
00033336: CF := 1
0003333a: ZF := 31:0[R0] = 0
0003333e: NF := 31:31[R0]
00033343: when ZF <> 1 goto %000332f6
00045c3e: goto %00033347

00033347:
0003334a: R0 := 0x430000
00033350: R0 := R0 + 0x3A8
00033357: R0 := pad:64[mem[R0, el]:u32]
0003335c: VF := 0
0003335f: CF := 1
00033363: ZF := 31:0[R0] = 0
00033367: NF := 31:31[R0]
0003336c: when ZF goto %00031da1
00045c3f: goto %000332f6

000332f6:
00045c40: goto %00031ced

00031e4c:
00031e56: R0 := extend:64[mem[R31 + 0xBC, el]:u32]
00031e5c: R0 := 60:0[R0].0
00031e62: R1 := R31 + 0x90
00031e6a: R0 := mem[R1 + R0, el]:u64
00031e71: R0 := pad:64[mem[R0 + 0x1C, el]:u32]
00031e76: VF := 0
00031e79: CF := 1
00031e7d: ZF := 31:0[R0] = 0
00031e81: NF := 31:31[R0]
00031e87: when ZF goto %00031e85
00045c41: goto %00033183

00033183:
00033186: R0 := 0x430000
0003318c: R0 := R0 + 0x390
00033193: R0 := pad:64[mem[R0, el]:u32]
00033198: VF := 0
0003319b: CF := 1
0003319f: ZF := 31:0[R0] = 0
000331a3: NF := 31:31[R0]
000331a9: when ZF goto %000331a7
00045c42: goto %00033244

00033244:
00033249: R0 := pad:64[mem[R31 + 0xBC, el]:u32]
0003324f: R0 := pad:64[31:0[R0] + 1]
00033256: R1 := pad:64[mem[R31 + 0x68, el]:u32]
0003325d: R2 := pad:64[mem[R31 + 0x6C, el]:u32]
00033263: R3 := pad:64[31:0[R2]]
00033269: R2 := pad:64[31:0[R1]]
0003326f: R1 := pad:64[31:0[R0]]
00033274: R0 := 0x418000
0003327a: R0 := R0 + 0xE38
0003327f: R30 := 0x404174
00033281: call @printf with return %00033283

00033283:
00033288: R0 := extend:64[mem[R31 + 0xBC, el]:u32]
0003328e: R0 := 60:0[R0].0
00033294: R1 := R31 + 0x80
0003329c: R0 := mem[R1 + R0, el]:u64
000332a3: R0 := pad:64[mem[R0, el]:u32]
000332a9: R1 := pad:64[31:0[R0]]
000332ae: R0 := 0x418000
000332b4: R0 := R0 + 0xE60
000332b9: R30 := 0x404198
000332bb: call @printf with return %000331a7

000331a7:
000331b1: R0 := extend:64[mem[R31 + 0xBC, el]:u32]
000331b7: R0 := 60:0[R0].0
000331bd: R1 := R31 + 0x80
000331c5: R0 := mem[R1 + R0, el]:u64
000331cc: R2 := pad:64[mem[R0, el]:u32]
000331d3: R0 := extend:64[mem[R31 + 0xBC, el]:u32]
000331d9: R0 := 60:0[R0].0
000331df: R1 := R31 + 0x90
000331e7: R0 := mem[R1 + R0, el]:u64
000331ed: R1 := R0
000331f3: R0 := pad:64[31:0[R2]]
000331f8: R30 := 0x4041C8
000331fa: call @headers_recv with return %000331fc

000331fc:
000331ff: VF := 0
00033202: CF := 1
00033206: ZF := 31:0[R0] = 0
0003320a: NF := 31:31[R0]
0003320f: when ZF <> 1 goto %00031e85
00045c43: goto %00033213

00031e85:
00031e8f: R0 := pad:64[mem[R31 + 0xBC, el]:u32]
00031e94: VF := 0
00031e97: CF := 1
00031e9b: ZF := 31:0[R0] = 0
00031e9f: NF := 31:31[R0]
00031ea5: when ZF <> 1 goto %00031ea3
00045c44: goto %00033043

00033043:
00033048: R0 := mem[R31 + 0xB0, el]:u64
0003304d: VF := 0
00033050: CF := 1
00033054: ZF := R0 = 0
00033058: NF := 63:63[R0]
0003305d: when ZF goto %00031ea3
00045c45: goto %00033061

00033061:
00033066: R0 := mem[R31 + 0x90, el]:u64
0003306d: R0 := mem[R0 + 0x40, el]:u64
00033072: VF := 0
00033075: CF := 1
00033079: ZF := R0 = 0
0003307d: NF := 63:63[R0]
00033082: when ZF goto %00031ea3
00045c46: goto %00033086

00033086:
0003308b: R0 := mem[R31 + 0x90, el]:u64
00033092: R0 := mem[R0 + 0x40, el]:u64
00033098: R1 := R0
0003309f: R0 := mem[R31 + 0xB0, el]:u64
000330a4: R30 := 0x40422C
000330a6: call @strcasecmp with return %000330a8

000330a8:
000330ab: VF := 0
000330ae: CF := 1
000330b2: ZF := 31:0[R0] = 0
000330b6: NF := 31:31[R0]
000330bc: when ZF <> 1 goto %000330ba
00045c47: goto %00033148

00033148:
0003314d: R0 := mem[R31 + 0x90, el]:u64
00033154: R0 := pad:64[mem[R0 + 0x20, el]:u32]
0003315b: R1 := pad:64[mem[R31 + 0xA8, el]:u32]
00033161: #368 := ~31:0[R0]
00033166: #369 := 31:0[R1] + ~31:0[R0]
0003316c: VF := extend:64[#369 + 1] <> extend:64[31:0[R1]] + extend:64[#368]
          + 1
00033172: CF := pad:64[#369 + 1] <> pad:64[31:0[R1]] + pad:64[#368] + 1
00033176: ZF := #369 + 1 = 0
0003317a: NF := 31:31[#369 + 1]
0003317f: when ZF goto %00031ea3
00045c48: goto %000330ba

00031ea3:
00031eab: R0 := 0x430000
00031eb1: R0 := R0 + 0x390
00031eb8: R0 := pad:64[mem[R0, el]:u32]
00031ebd: VF := 0
00031ec0: CF := 1
00031ec4: ZF := 31:0[R0] = 0
00031ec8: NF := 31:31[R0]
00031ece: when ZF goto %00031ecc
00045c49: goto %0003301a

0003301a:
0003301f: R0 := extend:64[mem[R31 + 0xBC, el]:u32]
00033025: R0 := 60:0[R0].0
0003302b: R1 := R31 + 0x90
00033033: R0 := mem[R1 + R0, el]:u64
0003303a: R0 := mem[R0 + 8, el]:u64
0003303f: R30 := 0x4042C4
00033041: call @hlist_dump with return %00031ecc

00031ecc:
00031ed6: R0 := pad:64[mem[R31 + 0xBC, el]:u32]
00031edb: VF := 0
00031ede: CF := 1
00031ee2: ZF := 31:0[R0] = 0
00031ee6: NF := 31:31[R0]
00031eec: when ZF <> 1 goto %00031eea
00045c4a: goto %00032d59

00032d59:
00032d5e: R0 := mem[R31 + 0x90, el]:u64
00032d65: R0 := pad:64[mem[R0, el]:u32]
00032d6a: VF := 0
00032d6d: CF := 1
00032d71: ZF := 31:0[R0] = 0
00032d75: NF := 31:31[R0]
00032d7a: when ZF goto %00031eea
00045c4b: goto %00032d7e

00032d7e:
00032d83: R0 := mem[R31 + 0x90, el]:u64
00032d8a: R1 := mem[R0 + 0x28, el]:u64
00032d91: R0 := mem[R31 + 0x90, el]:u64
00032d98: R2 := mem[R0 + 0x30, el]:u64
00032d9e: R0 := R31 + 0x38
00032da4: R4 := R2
00032daa: R3 := R1
00032db0: R2 := R0
00032db5: R0 := 0x418000
00032dbb: R1 := R0 + 0xEA0
00032dc0: R0 := 7
00032dc5: R30 := 0x404310
00032dc7: call @syslog with return %00032dc9

00032dc9:
00032dce: R0 := mem[R31 + 0x90, el]:u64
00032dd5: R0 := mem[R0 + 0x38, el]:u64
00032dda: VF := 0
00032ddd: CF := 1
00032de1: ZF := R0 = 0
00032de5: NF := 63:63[R0]
00032deb: when ZF goto %00032de9
00045c4c: goto %00032fbc

00032fbc:
00032fc1: R0 := mem[R31 + 0x90, el]:u64
00032fc8: R0 := mem[R0 + 0x30, el]:u64
00032fcd: VF := 0
00032fd0: CF := 1
00032fd4: ZF := R0 = 0
00032fd8: NF := 63:63[R0]
00032fde: when ZF goto %00032fdc
00045c4d: goto %00033005

00033005:
0003300a: R0 := mem[R31 + 0x90, el]:u64
00033011: R0 := mem[R0 + 0x30, el]:u64
00033016: R30 := 0x40433C
00033018: call @free with return %00032fdc

00032fdc:
00032fe6: R0 := mem[R31 + 0x90, el]:u64
00032fed: R0 := mem[R0 + 0x38, el]:u64
00032ff4: R19 := mem[R31 + 0x90, el]:u64
00032ff9: R30 := 0x40434C
00032ffb: call @strdup with return %00032ffd

00032ffd:
00033003: mem := mem with [R19 + 0x30, el]:u64 <- R0
00045c4e: goto %00032de9

00032de9:
00032df3: R0 := mem[R31 + 0x90, el]:u64
00032dfa: R0 := pad:64[mem[R0 + 0x24, el]:u32]
00032e00: #367 := 31:0[R0] - 0xA
00032e05: VF := extend:64[#367] <> extend:64[31:0[R0]] - 0xA
00032e0a: CF := pad:64[#367] <> pad:64[31:0[R0]] + 0xFFFFFFF6
00032e0e: ZF := #367 = 0
00032e12: NF := 31:31[#367]
00032e1a: when ~(NF = VF & ~ZF) goto %00032e18
00045c4f: goto %00032f73

00032f73:
00032f78: R0 := mem[R31 + 0x90, el]:u64
00032f7f: R4 := mem[R0 + 8, el]:u64
00032f86: R19 := mem[R31 + 0x90, el]:u64
00032f8b: R3 := 1
00032f90: R0 := 0x418000
00032f96: R2 := R0 + 0xC08
00032f9b: R0 := 0x418000
00032fa1: R1 := R0 + 0xC18
00032fa7: R0 := R4
00032fac: R30 := 0x404388
00032fae: call @hlist_mod with return %00032fb0

00032fb0:
00032fb6: mem := mem with [R19 + 8, el]:u64 <- R0
00032fba: goto %00032e18

00032e18:
00032e22: R0 := extend:64[mem[R31 + 0xBC, el]:u32]
00032e28: R0 := 60:0[R0].0
00032e2e: R1 := R31 + 0x90
00032e36: R0 := mem[R1 + R0, el]:u64
00032e3d: R2 := mem[R0 + 8, el]:u64
00032e42: R0 := 0x418000
00032e48: R1 := R0 + 0xEB0
00032e4e: R0 := R2
00032e53: R30 := 0x4043EC
00032e55: call @hlist_get with return %00032e57

00032e57:
00032e5a: VF := 0
00032e5d: CF := 1
00032e61: ZF := R0 = 0
00032e65: NF := 63:63[R0]
00032e6b: when ZF <> 1 goto %00032e69
00045c50: goto %00032ecb

00032ecb:
00032ed0: R0 := mem[R31 + 0x90, el]:u64
00032ed7: R3 := mem[R0 + 8, el]:u64
00032ede: R2 := mem[R31 + 0xC0, el]:u64
00032ee3: R0 := 0x418000
00032ee9: R1 := R0 + 0xC28
00032eef: R0 := R3
00032ef4: R30 := 0x404410
00032ef6: call @http_parse_basic with return %00032ef8

00032ef8:
00032efb: VF := 0
00032efe: CF := 1
00032f02: ZF := 31:0[R0] = 0
00032f06: NF := 31:31[R0]
00032f0d: when ~(NF = VF & ~ZF) goto %00031eea
00045c51: goto %00032f11

00032f11:
00032f14: R0 := 0x430000
00032f1a: R0 := R0 + 0x390
00032f21: R0 := pad:64[mem[R0, el]:u32]
00032f26: VF := 0
00032f29: CF := 1
00032f2d: ZF := 31:0[R0] = 0
00032f31: NF := 31:31[R0]
00032f36: when ZF goto %00031eea
00045c52: goto %00032f3a

00032f3a:
00032f3f: R0 := mem[R31 + 0xC0, el]:u64
00032f45: R1 := R0 + 0x32
00032f4c: R2 := mem[R31 + 0xC0, el]:u64
00032f53: R0 := mem[R31 + 0xC0, el]:u64
00032f59: R0 := R0 + 0x64
00032f5f: R3 := R0
00032f64: R0 := 0x418000
00032f6a: R0 := R0 + 0xEC8
00032f6f: R30 := 0x404450
00032f71: call @printf with return %00031eea

00031eea:
00031ef4: R0 := pad:64[mem[R31 + 0xBC, el]:u32]
00031ef9: VF := 0
00031efc: CF := 1
00031f00: ZF := 31:0[R0] = 0
00031f04: NF := 31:31[R0]
00031f0a: when ZF <> 1 goto %00031f08
00045c53: goto %00032bb7

00032bb7:
00032bbc: R0 := mem[R31 + 0x90, el]:u64
00032bc1: VF := 0
00032bc4: CF := 1
00032bc8: ZF := R0 = 0
00032bcc: NF := 63:63[R0]
00032bd1: when ZF goto %00031f08
00045c54: goto %00032bd5

00032bd5:
00032bda: R0 := mem[R31 + 0x90, el]:u64
00032be1: R0 := pad:64[mem[R0, el]:u32]
00032be6: VF := 0
00032be9: CF := 1
00032bed: ZF := 31:0[R0] = 0
00032bf1: NF := 31:31[R0]
00032bf6: when ZF goto %00031f08
00045c55: goto %00032bfa

00032bfa:
00032bff: R0 := mem[R31 + 0x90, el]:u64
00032c06: R0 := mem[R0 + 0x28, el]:u64
00032c0c: R1 := R0
00032c11: R0 := 0x418000
00032c17: R0 := R0 + 0xE30
00032c1c: R30 := 0x404490
00032c1e: call @strcasecmp with return %00032c20

00032c20:
00032c23: VF := 0
00032c26: CF := 1
00032c2a: ZF := 31:0[R0] = 0
00032c2e: NF := 31:31[R0]
00032c33: when ZF <> 1 goto %00031f08
00045c56: goto %00032c37

00031f08:
00031f12: R0 := pad:64[mem[R31 + 0xBC, el]:u32]
00031f18: #360 := 31:0[R0] - 1
00031f1d: VF := extend:64[#360] <> extend:64[31:0[R0]] - 1
00031f22: CF := pad:64[#360] <> pad:64[31:0[R0]] + 0xFFFFFFFF
00031f26: ZF := #360 = 0
00031f2a: NF := 31:31[#360]
00031f30: when ZF <> 1 goto %00031f2e
00045c57: goto %00032711

00032711:
00032716: R0 := mem[R31 + 0x98, el]:u64
0003271d: R0 := pad:64[mem[R0 + 0x10, el]:u32]
00032723: #365 := 31:0[R0] - 0x191
00032728: VF := extend:64[#365] <> extend:64[31:0[R0]] - 0x191
0003272d: CF := pad:64[#365] <> pad:64[31:0[R0]] + 0xFFFFFE6F
00032731: ZF := #365 = 0
00032735: NF := 31:31[#365]
0003273a: when ZF <> 1 goto %00031f2e
00045c58: goto %0003273e

0003273e:
00032743: R0 := mem[R31 + 0x98, el]:u64
0003274a: R3 := mem[R0 + 8, el]:u64
0003274f: R0 := 0x418000
00032755: R2 := R0 + 0xF20
0003275a: R0 := 0x418000
00032760: R1 := R0 + 0xCA8
00032766: R0 := R3
0003276b: R30 := 0x404578
0003276d: call @hlist_subcmp_all with return %0003276f

0003276f:
00032772: VF := 0
00032775: CF := 1
00032779: ZF := 31:0[R0] = 0
0003277d: NF := 31:31[R0]
00032782: when ZF goto %00031f2e
00045c59: goto %00032786

00032786:
0003278b: R0 := mem[R31 + 0x98, el]:u64
00032792: R3 := mem[R0 + 8, el]:u64
00032797: R0 := 0x418000
0003279d: R2 := R0 + 0xF28
000327a2: R0 := 0x418000
000327a8: R1 := R0 + 0xC18
000327ae: R0 := R3
000327b3: R30 := 0x4045A0
000327b5: call @hlist_subcmp with return %000327b7

000327b7:
000327ba: VF := 0
000327bd: CF := 1
000327c1: ZF := 31:0[R0] = 0
000327c5: NF := 31:31[R0]
000327cb: when ZF goto %000327c9
00045c5a: goto %00032a37

00032a37:
00032a3a: R0 := 0x430000
00032a40: R0 := R0 + 0x390
00032a47: R0 := pad:64[mem[R0, el]:u32]
00032a4c: VF := 0
00032a4f: CF := 1
00032a53: ZF := 31:0[R0] = 0
00032a57: NF := 31:31[R0]
00032a5d: when ZF goto %00032a5b
00045c5b: goto %00032ba5

00032ba5:
00032ba8: R0 := 0x418000
00032bae: R0 := R0 + 0xF30
00032bb3: R30 := 0x4045C8
00032bb5: call @puts with return %00032a5b

00032a5b:
00032a65: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
00032a6a: R30 := 0x4045D0
00032a6c: call @close with return %00032a6e

00032a6e:
00032a73: R0 := mem[R31 + 0x98, el]:u64
00032a7a: R4 := mem[R0 + 8, el]:u64
00032a81: R19 := mem[R31 + 0x98, el]:u64
00032a86: R3 := 1
00032a8b: R0 := 0x418000
00032a91: R2 := R0 + 0xC38
00032a96: R0 := 0x418000
00032a9c: R1 := R0 + 0xC40
00032aa2: R0 := R4
00032aa7: R30 := 0x4045F8
00032aa9: call @hlist_mod with return %00032aab

00032aab:
00032ab1: mem := mem with [R19 + 8, el]:u64 <- R0
00032ab8: R0 := mem[R31 + 0x90, el]:u64
00032abf: R2 := mem[R0 + 0x40, el]:u64
00032ac6: R0 := mem[R31 + 0x90, el]:u64
00032acd: R0 := pad:64[mem[R0 + 0x20, el]:u32]
00032ad3: R1 := pad:64[31:0[R0]]
00032ad9: R0 := R2
00032ade: R30 := 0x404618
00032ae0: call @host_connect with return %00032ae2

00032ae2:
00032ae8: mem := mem with [R31 + 0x6C, el]:u32 <- 31:0[R0]
00032aef: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
00032af4: VF := 0
00032af7: CF := 1
00032afb: ZF := 31:0[R0] = 0
00032aff: NF := 31:31[R0]
00032b05: when NF = VF goto %000327c9
00045c5c: goto %00032b09

000327c9:
000327d3: R0 := mem[R31 + 0x70, el]:u64
000327da: R6 := pad:64[mem[R0, el]:u32]
000327e1: R0 := mem[R31 + 0x80, el]:u64
000327e8: R0 := pad:64[mem[R0, el]:u32]
000327ef: R1 := mem[R31 + 0x90, el]:u64
000327f6: R2 := mem[R31 + 0x98, el]:u64
000327fd: R5 := pad:64[mem[R31 + 0xB8, el]:u32]
00032804: R4 := mem[R31 + 0xC0, el]:u64
0003280a: R3 := R2
00032810: R2 := R1
00032816: R1 := pad:64[31:0[R0]]
0003281c: R0 := pad:64[31:0[R6]]
00032821: R30 := 0x4046BC
00032823: call @www_authenticate with return %00032825

00032825:
00032828: VF := 0
0003282b: CF := 1
0003282f: ZF := 31:0[R0] = 0
00032833: NF := 31:31[R0]
00032839: when ZF <> 1 goto %00032837
00045c5d: goto %00032923

00032837:
00032841: R0 := mem[R31 + 0x98, el]:u64
00032848: R0 := pad:64[mem[R0 + 0x10, el]:u32]
0003284e: #366 := 31:0[R0] - 0x191
00032853: VF := extend:64[#366] <> extend:64[31:0[R0]] - 0x191
00032858: CF := pad:64[#366] <> pad:64[31:0[R0]] + 0xFFFFFE6F
0003285c: ZF := #366 = 0
00032860: NF := 31:31[#366]
00032866: when ZF <> 1 goto %00032864
00045c5e: goto %00032870

00032864:
0003286e: mem := mem with [R31 + 0xB8, el]:u32 <- 0
00045c5f: goto %00031f2e

00031f2e:
00031f38: R0 := pad:64[mem[R31 + 0xBC, el]:u32]
00031f3e: #361 := 31:0[R0] - 1
00031f43: VF := extend:64[#361] <> extend:64[31:0[R0]] - 1
00031f48: CF := pad:64[#361] <> pad:64[31:0[R0]] + 0xFFFFFFFF
00031f4c: ZF := #361 = 0
00031f50: NF := 31:31[#361]
00031f56: when ZF <> 1 goto %00031f54
00045c60: goto %0003259b

0003259b:
000325a0: R0 := pad:64[mem[R31 + 0xB8, el]:u32]
000325a5: VF := 0
000325a8: CF := 1
000325ac: ZF := 31:0[R0] = 0
000325b0: NF := 31:31[R0]
000325b5: when ZF goto %00031f54
00045c61: goto %000325b9

000325b9:
000325be: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
000325c3: R30 := 0x404804
000325c5: call @so_closed with return %000325c7

000325c7:
000325ca: VF := 0
000325cd: CF := 1
000325d1: ZF := 31:0[R0] = 0
000325d5: NF := 31:31[R0]
000325db: when ZF goto %000325d9
00045c62: goto %000325fa

000325fa:
000325ff: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
00032604: R30 := 0x404814
00032606: call @close with return %00032608

00032608:
0003260d: R0 := mem[R31 + 0x90, el]:u64
00032614: R2 := mem[R0 + 0x40, el]:u64
0003261b: R0 := mem[R31 + 0x90, el]:u64
00032622: R0 := pad:64[mem[R0 + 0x20, el]:u32]
00032628: R1 := pad:64[31:0[R0]]
0003262e: R0 := R2
00032633: R30 := 0x404830
00032635: call @host_connect with return %00032637

00032637:
0003263d: mem := mem with [R31 + 0x6C, el]:u32 <- 31:0[R0]
00032644: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
00032649: VF := 0
0003264c: CF := 1
00032650: ZF := 31:0[R0] = 0
00032654: NF := 31:31[R0]
0003265b: when NF = VF goto %00032659
00045c63: goto %00032675

00032659:
00032661: R0 := 0x418000
00032667: R1 := R0 + 0xFE0
0003266c: R0 := 7
00032671: R30 := 0x4048B0
00032673: call @syslog with return %000325d9

000325d9:
000325e3: R0 := mem[R31 + 0x98, el]:u64
000325e8: R30 := 0x4048B8
000325ea: call @reset_rr_data with return %000325ec

000325ec:
000325f1: mem := mem with [R31 + 0xB8, el]:u32 <- 0
000325f8: mem := mem with [R31 + 0xBC, el]:u32 <- 0
00045c64: goto %00031f54

00031f54:
00031f5e: R0 := pad:64[mem[R31 + 0xBC, el]:u32]
00031f64: #362 := 31:0[R0] - 1
00031f69: VF := extend:64[#362] <> extend:64[31:0[R0]] - 1
00031f6e: CF := pad:64[#362] <> pad:64[31:0[R0]] + 0xFFFFFFFF
00031f72: ZF := #362 = 0
00031f76: NF := 31:31[#362]
00031f7c: when ZF <> 1 goto %00031f7a
00045c65: goto %00032397

00032397:
0003239c: R0 := mem[R31 + 0x98, el]:u64
000323a3: R3 := mem[R0 + 8, el]:u64
000323a8: R0 := 0x418000
000323ae: R2 := R0 + 0xF28
000323b3: R0 := 0x418000
000323b9: R1 := R0 + 0xC18
000323bf: R0 := R3
000323c4: R30 := 0x4048EC
000323c6: call @hlist_subcmp with return %000323c8

000323c8:
000323cb: VF := 0
000323ce: CF := 1
000323d2: ZF := 31:0[R0] = 0
000323d6: NF := 31:31[R0]
000323dc: when ZF <> 1 goto %000323da
00045c66: goto %0003252f

0003252f:
00032534: R0 := mem[R31 + 0x90, el]:u64
0003253b: R1 := mem[R31 + 0x98, el]:u64
00032540: R30 := 0x404900
00032542: call @http_has_body with return %00032544

00032544:
00032548: #363 := R0 + 1
0003254d: VF := extend:128[#363] <> extend:128[R0] + 1
00032552: CF := pad:128[#363] <> pad:128[R0] + 1
00032556: ZF := #363 = 0
0003255a: NF := 63:63[#363]
0003255f: when ZF goto %000323da
00045c67: goto %00032563

00032563:
00032568: R0 := mem[R31 + 0x90, el]:u64
0003256f: R0 := pad:64[mem[R0 + 0x24, el]:u32]
00032575: #364 := 31:0[R0] - 0xA
0003257a: VF := extend:64[#364] <> extend:64[31:0[R0]] - 0xA
0003257f: CF := pad:64[#364] <> pad:64[31:0[R0]] + 0xFFFFFFF6
00032583: ZF := #364 = 0
00032587: NF := 31:31[#364]
0003258e: when ~(NF = VF & ~ZF) goto %000323da
00045c68: goto %00032592

000323da:
000323e2: R0 := 0
00045c69: goto %000323e4

00032592:
00032595: R0 := 1
00032599: goto %000323e4

000323e4:
000323ea: mem := mem with [R31 + 0xAC, el]:u32 <- 31:0[R0]
000323f1: R0 := pad:64[mem[R31 + 0xAC, el]:u32]
000323f6: VF := 0
000323f9: CF := 1
000323fd: ZF := 31:0[R0] = 0
00032401: NF := 31:31[R0]
00032407: when ZF goto %00032405
00045c6a: goto %000324a1

00032405:
0003240f: R0 := mem[R31 + 0x98, el]:u64
00032416: R4 := mem[R0 + 8, el]:u64
0003241d: R19 := mem[R31 + 0x98, el]:u64
00032422: R3 := 1
00032427: R0 := 0x418000
0003242d: R2 := R0 + 0xF28
00032432: R0 := 0x419000
00032438: R1 := R0
0003243e: R0 := R4
00032443: R30 := 0x4049B8
00032445: call @hlist_mod with return %00032447

00032447:
0003244d: mem := mem with [R19 + 8, el]:u64 <- R0
00032454: R0 := mem[R31 + 0x98, el]:u64
0003245b: R4 := mem[R0 + 8, el]:u64
00032462: R19 := mem[R31 + 0x98, el]:u64
00032467: R3 := 1
0003246c: R0 := 0x418000
00032472: R2 := R0 + 0xF28
00032477: R0 := 0x418000
0003247d: R1 := R0 + 0xC18
00032483: R0 := R4
00032488: R30 := 0x4049E4
0003248a: call @hlist_mod with return %0003248c

0003248c:
00032492: mem := mem with [R19 + 8, el]:u64 <- R0
00032497: R0 := 0xFFFFFFFFFFFFFFFF
0003249f: mem := mem with [R31 + 0xC8, el]:u64 <- R0
00045c6b: goto %00031f7a

000324a1:
000324a6: R0 := mem[R31 + 0x98, el]:u64
000324ad: R4 := mem[R0 + 8, el]:u64
000324b4: R19 := mem[R31 + 0x98, el]:u64
000324b9: R3 := 1
000324be: R0 := 0x418000
000324c4: R2 := R0 + 0xC08
000324c9: R0 := 0x419000
000324cf: R1 := R0
000324d5: R0 := R4
000324da: R30 := 0x40495C
000324dc: call @hlist_mod with return %000324de

000324de:
000324e4: mem := mem with [R19 + 8, el]:u64 <- R0
000324eb: R0 := mem[R31 + 0x98, el]:u64
000324f2: R4 := mem[R0 + 8, el]:u64
000324f9: R19 := mem[R31 + 0x98, el]:u64
000324fe: R3 := 1
00032503: R0 := 0x418000
00032509: R2 := R0 + 0xC08
0003250e: R0 := 0x418000
00032514: R1 := R0 + 0xC18
0003251a: R0 := R4
0003251f: R30 := 0x404988
00032521: call @hlist_mod with return %00032523

00032523:
00032529: mem := mem with [R19 + 8, el]:u64 <- R0
0003252d: goto %00031f7a

00031f7a:
00031f82: R0 := 0x430000
00031f88: R0 := R0 + 0x390
00031f8f: R0 := pad:64[mem[R0, el]:u32]
00031f94: VF := 0
00031f97: CF := 1
00031f9b: ZF := 31:0[R0] = 0
00031f9f: NF := 31:31[R0]
00031fa5: when ZF goto %00031fa3
00045c6c: goto %00032292

00032292:
00032297: R0 := extend:64[mem[R31 + 0xBC, el]:u32]
0003229d: R0 := 60:0[R0].0
000322a3: R1 := R31 + 0x70
000322ab: R0 := mem[R1 + R0, el]:u64
000322b2: R0 := pad:64[mem[R0, el]:u32]
000322b8: R1 := pad:64[31:0[R0]]
000322bd: R0 := 0x419000
000322c3: R0 := R0 + 0x18
000322c8: R30 := 0x404A28
000322ca: call @printf with return %000322cc

000322cc:
000322d1: R0 := pad:64[mem[R31 + 0xBC, el]:u32]
000322d6: VF := 0
000322d9: CF := 1
000322dd: ZF := 31:0[R0] = 0
000322e1: NF := 31:31[R0]
000322e6: when ZF <> 1 goto %00031fa3
00045c6d: goto %000322ea

000322ea:
000322ef: R0 := extend:64[mem[R31 + 0xBC, el]:u32]
000322f5: R0 := 60:0[R0].0
000322fb: R1 := R31 + 0x90
00032303: R0 := mem[R1 + R0, el]:u64
0003230a: R4 := mem[R0 + 0x28, el]:u64
00032311: R0 := extend:64[mem[R31 + 0xBC, el]:u32]
00032317: R0 := 60:0[R0].0
0003231d: R1 := R31 + 0x90
00032325: R0 := mem[R1 + R0, el]:u64
0003232c: R2 := mem[R0 + 0x30, el]:u64
00032333: R0 := extend:64[mem[R31 + 0xBC, el]:u32]
00032339: R0 := 60:0[R0].0
0003233f: R1 := R31 + 0x90
00032347: R0 := mem[R1 + R0, el]:u64
0003234e: R0 := mem[R0 + 0x48, el]:u64
00032354: R3 := R0
0003235a: R1 := R4
0003235f: R0 := 0x419000
00032365: R0 := R0 + 0x38
0003236a: R30 := 0x404A84
0003236c: call @printf with return %0003236e

0003236e:
00032373: R0 := extend:64[mem[R31 + 0xBC, el]:u32]
00032379: R0 := 60:0[R0].0
0003237f: R1 := R31 + 0x90
00032387: R0 := mem[R1 + R0, el]:u64
0003238e: R0 := mem[R0 + 8, el]:u64
00032393: R30 := 0x404A9C
00032395: call @hlist_dump with return %00031fa3

00031fa3:
00031fad: R0 := pad:64[mem[R31 + 0xBC, el]:u32]
00031fb2: VF := 0
00031fb5: CF := 1
00031fb9: ZF := 31:0[R0] = 0
00031fbd: NF := 31:31[R0]
00031fc3: when ZF <> 1 goto %00031fc1
00045c6e: goto %0003212c

0003212c:
00032131: R0 := pad:64[mem[R31 + 0xB8, el]:u32]
00032136: VF := 0
00032139: CF := 1
0003213d: ZF := 31:0[R0] = 0
00032141: NF := 31:31[R0]
00032146: when ZF goto %00031fc1
00045c6f: goto %0003214a

00031fc1:
00031fcb: R0 := extend:64[mem[R31 + 0xBC, el]:u32]
00031fd1: R0 := 60:0[R0].0
00031fd7: R1 := R31 + 0x70
00031fdf: R0 := mem[R1 + R0, el]:u64
00031fe6: R2 := pad:64[mem[R0, el]:u32]
00031fed: R0 := extend:64[mem[R31 + 0xBC, el]:u32]
00031ff3: R0 := 60:0[R0].0
00031ff9: R1 := R31 + 0x90
00032001: R0 := mem[R1 + R0, el]:u64
00032007: R1 := R0
0003200d: R0 := pad:64[31:0[R2]]
00032012: R30 := 0x404BA8
00032014: call @headers_send with return %00032016

00032016:
00032019: VF := 0
0003201c: CF := 1
00032020: ZF := 31:0[R0] = 0
00032024: NF := 31:31[R0]
0003202a: when ZF <> 1 goto %00032028
00045c70: goto %000320fb

00032028:
00032032: R0 := extend:64[mem[R31 + 0xBC, el]:u32]
00032038: R0 := 60:0[R0].0
0003203e: R1 := R31 + 0x70
00032046: R0 := mem[R1 + R0, el]:u64
0003204d: R4 := pad:64[mem[R0, el]:u32]
00032054: R0 := extend:64[mem[R31 + 0xBC, el]:u32]
0003205a: R0 := 60:0[R0].0
00032060: R1 := R31 + 0x80
00032068: R0 := mem[R1 + R0, el]:u64
0003206f: R0 := pad:64[mem[R0, el]:u32]
00032076: R1 := mem[R31 + 0x90, el]:u64
0003207d: R2 := mem[R31 + 0x98, el]:u64
00032083: R3 := R2
00032089: R2 := R1
0003208f: R1 := pad:64[31:0[R0]]
00032095: R0 := pad:64[31:0[R4]]
0003209a: R30 := 0x404C14
0003209c: call @http_body_send with return %0003209e

0003209e:
000320a1: VF := 0
000320a4: CF := 1
000320a8: ZF := 31:0[R0] = 0
000320ac: NF := 31:31[R0]
000320b2: when ZF <> 1 goto %000320b0
00045c71: goto %000320ca

000320ca:
000320ce: R0 := R31 + 0x90
000320d3: R30 := 0x404C24
000320d5: call @free_rr_data with return %000320d7

000320d7:
000320db: R0 := R31 + 0x90
000320e1: R0 := R0 + 8
000320e6: R30 := 0x404C30
000320e8: call @free_rr_data with return %000320ea

000320ea:
000320ed: R0 := 0xFFFFFFFFFFFFFFFF
000320f5: mem := mem with [R31 + 0xC8, el]:u64 <- R0
000320f9: goto %00031ced

000320fb:
000320ff: R0 := R31 + 0x90
00032104: R30 := 0x404BB8
00032106: call @free_rr_data with return %00032108

00032108:
0003210c: R0 := R31 + 0x90
00032112: R0 := R0 + 8
00032117: R30 := 0x404BC4
00032119: call @free_rr_data with return %0003211b

0003211b:
0003211e: R0 := 0xFFFFFFFFFFFFFFFF
00032126: mem := mem with [R31 + 0xC8, el]:u64 <- R0
0003212a: goto %00031ced

0003214a:
0003214f: R0 := mem[R31 + 0x90, el]:u64
00032154: R30 := 0x404ABC
00032156: call @dup_rr_data with return %00032158

00032158:
0003215e: mem := mem with [R31 + 0x30, el]:u64 <- R0
00032165: R0 := mem[R31 + 0x30, el]:u64
0003216c: R0 := mem[R0 + 0x28, el]:u64
00032171: R30 := 0x404ACC
00032173: call @free with return %00032175

00032175:
0003217a: R19 := mem[R31 + 0x30, el]:u64
0003217f: R0 := 0x419000
00032185: R0 := R0 + 0x48
0003218a: R30 := 0x404ADC
0003218c: call @strdup with return %0003218e

0003218e:
00032194: mem := mem with [R19 + 0x28, el]:u64 <- R0
0003219b: R0 := mem[R31 + 0x30, el]:u64
000321a2: R4 := mem[R0 + 8, el]:u64
000321a9: R19 := mem[R31 + 0x30, el]:u64
000321ae: R3 := 1
000321b3: R0 := 0x418000
000321b9: R2 := R0 + 0xC38
000321be: R0 := 0x418000
000321c4: R1 := R0 + 0xC40
000321ca: R0 := R4
000321cf: R30 := 0x404B08
000321d1: call @hlist_mod with return %000321d3

000321d3:
000321d9: mem := mem with [R19 + 8, el]:u64 <- R0
000321e0: R0 := mem[R31 + 0x30, el]:u64
000321e7: R2 := mem[R0 + 8, el]:u64
000321ee: R19 := mem[R31 + 0x30, el]:u64
000321f3: R0 := 0x418000
000321f9: R1 := R0 + 0xC50
000321ff: R0 := R2
00032204: R30 := 0x404B28
00032206: call @hlist_del with return %00032208

00032208:
0003220e: mem := mem with [R19 + 8, el]:u64 <- R0
00032215: R0 := mem[R31 + 0x70, el]:u64
0003221c: R0 := pad:64[mem[R0, el]:u32]
00032223: R1 := mem[R31 + 0x30, el]:u64
00032228: R30 := 0x404B3C
0003222a: call @headers_send with return %0003222c

0003222c:
0003222f: VF := 0
00032232: CF := 1
00032236: ZF := 31:0[R0] = 0
0003223a: NF := 31:31[R0]
00032240: when ZF <> 1 goto %0003223e
00045c72: goto %00032254

0003223e:
00032247: R0 := R31 + 0x30
0003224c: R30 := 0x404B74
0003224e: call @free_rr_data with return %00032250

00032250:
00032252: goto %000320b0

000320b0:
000320ba: R0 := pad:64[mem[R31 + 0xBC, el]:u32]
000320c0: R0 := pad:64[31:0[R0] + 1]
000320c8: mem := mem with [R31 + 0xBC, el]:u32 <- 31:0[R0]
00045c73: goto %00031e26

00032254:
00032258: R0 := R31 + 0x30
0003225d: R30 := 0x404B4C
0003225f: call @free_rr_data with return %00032261

00032261:
00032265: R0 := R31 + 0x90
0003226a: R30 := 0x404B54
0003226c: call @free_rr_data with return %0003226e

0003226e:
00032272: R0 := R31 + 0x90
00032278: R0 := R0 + 8
0003227d: R30 := 0x404B60
0003227f: call @free_rr_data with return %00032281

00032281:
00032284: R0 := 0xFFFFFFFFFFFFFFFF
0003228c: mem := mem with [R31 + 0xC8, el]:u64 <- R0
00032290: goto %00031ced

00032675:
0003267a: R0 := mem[R31 + 0x90, el]:u64
00032681: R2 := mem[R0 + 0x48, el]:u64
00032686: R0 := 0x418000
0003268c: R1 := R0 + 0xFB8
00032692: R0 := R2
00032697: R30 := 0x404858
00032699: call @gen_502_page with return %0003269b

0003269b:
000326a1: mem := mem with [R31 + 0xA0, el]:u64 <- R0
000326a8: R19 := pad:64[mem[R31 + 0x68, el]:u32]
000326af: R0 := mem[R31 + 0xA0, el]:u64
000326b4: R30 := 0x404868
000326b6: call @strlen with return %000326b8

000326b8:
000326bc: R2 := R0
000326c3: R1 := mem[R31 + 0xA0, el]:u64
000326c9: R0 := pad:64[31:0[R19]]
000326ce: R30 := 0x404878
000326d0: call @write_wrapper with return %000326d2

000326d2:
000326d7: R0 := mem[R31 + 0xA0, el]:u64
000326dc: R30 := 0x404880
000326de: call @free with return %000326e0

000326e0:
000326e4: R0 := R31 + 0x90
000326e9: R30 := 0x404888
000326eb: call @free_rr_data with return %000326ed

000326ed:
000326f1: R0 := R31 + 0x90
000326f7: R0 := R0 + 8
000326fc: R30 := 0x404894
000326fe: call @free_rr_data with return %00032700

00032700:
00032703: R0 := 0xFFFFFFFFFFFFFFFF
0003270b: mem := mem with [R31 + 0xC8, el]:u64 <- R0
0003270f: goto %00031ced

00032870:
00032875: R0 := mem[R31 + 0x98, el]:u64
0003287c: R3 := mem[R0 + 0x48, el]:u64
00032883: R0 := mem[R31 + 0x90, el]:u64
0003288a: R1 := mem[R0 + 0x40, el]:u64
00032891: R0 := mem[R31 + 0x90, el]:u64
00032898: R0 := pad:64[mem[R0 + 0x20, el]:u32]
0003289e: R2 := pad:64[31:0[R0]]
000328a4: R0 := R3
000328a9: R30 := 0x404798
000328ab: call @gen_401_page with return %000328ad

000328ad:
000328b3: mem := mem with [R31 + 0xA0, el]:u64 <- R0
000328ba: R19 := pad:64[mem[R31 + 0x68, el]:u32]
000328c1: R0 := mem[R31 + 0xA0, el]:u64
000328c6: R30 := 0x4047A8
000328c8: call @strlen with return %000328ca

000328ca:
000328ce: R2 := R0
000328d5: R1 := mem[R31 + 0xA0, el]:u64
000328db: R0 := pad:64[31:0[R19]]
000328e0: R30 := 0x4047B8
000328e2: call @write_wrapper with return %000328e4

000328e4:
000328e9: R0 := mem[R31 + 0xA0, el]:u64
000328ee: R30 := 0x4047C0
000328f0: call @free with return %000328f2

000328f2:
000328f6: R0 := R31 + 0x90
000328fb: R30 := 0x4047C8
000328fd: call @free_rr_data with return %000328ff

000328ff:
00032903: R0 := R31 + 0x90
00032909: R0 := R0 + 8
0003290e: R30 := 0x4047D4
00032910: call @free_rr_data with return %00032912

00032912:
00032915: R0 := 0xFFFFFFFFFFFFFFFF
0003291d: mem := mem with [R31 + 0xC8, el]:u64 <- R0
00032921: goto %00031ced

00032923:
00032926: R0 := 0x430000
0003292c: R0 := R0 + 0x390
00032933: R0 := pad:64[mem[R0, el]:u32]
00032938: VF := 0
0003293b: CF := 1
0003293f: ZF := 31:0[R0] = 0
00032943: NF := 31:31[R0]
00032949: when ZF goto %00032947
00045c74: goto %00032a25

00032a25:
00032a28: R0 := 0x418000
00032a2e: R0 := R0 + 0xF78
00032a33: R30 := 0x4046E4
00032a35: call @puts with return %00032947

00032947:
00032951: R0 := mem[R31 + 0x98, el]:u64
00032958: R2 := mem[R0 + 0x48, el]:u64
0003295f: R0 := mem[R31 + 0x98, el]:u64
00032966: R0 := mem[R0 + 0x60, el]:u64
0003296b: VF := 0
0003296e: CF := 1
00032972: ZF := R0 = 0
00032976: NF := 63:63[R0]
0003297c: when ZF goto %0003297a
00045c75: goto %00032a13

0003297a:
00032982: R0 := 0x418000
00032988: R0 := R0 + 0xF98
00045c76: goto %0003298a

00032a13:
00032a18: R0 := mem[R31 + 0x98, el]:u64
00032a1f: R0 := mem[R0 + 0x60, el]:u64
00032a23: goto %0003298a

0003298a:
0003298e: R1 := R0
00032994: R0 := R2
00032999: R30 := 0x40471C
0003299b: call @gen_502_page with return %0003299d

0003299d:
000329a3: mem := mem with [R31 + 0xA0, el]:u64 <- R0
000329aa: R19 := pad:64[mem[R31 + 0x68, el]:u32]
000329b1: R0 := mem[R31 + 0xA0, el]:u64
000329b6: R30 := 0x40472C
000329b8: call @strlen with return %000329ba

000329ba:
000329be: R2 := R0
000329c5: R1 := mem[R31 + 0xA0, el]:u64
000329cb: R0 := pad:64[31:0[R19]]
000329d0: R30 := 0x40473C
000329d2: call @write_wrapper with return %000329d4

000329d4:
000329d9: R0 := mem[R31 + 0xA0, el]:u64
000329de: R30 := 0x404744
000329e0: call @free with return %000329e2

000329e2:
000329e6: R0 := R31 + 0x90
000329eb: R30 := 0x40474C
000329ed: call @free_rr_data with return %000329ef

000329ef:
000329f3: R0 := R31 + 0x90
000329f9: R0 := R0 + 8
000329fe: R30 := 0x404758
00032a00: call @free_rr_data with return %00032a02

00032a02:
00032a05: R0 := 0xFFFFFFFFFFFFFFFF
00032a0d: mem := mem with [R31 + 0xC8, el]:u64 <- R0
00032a11: goto %00031ced

00032b09:
00032b0e: R0 := mem[R31 + 0x90, el]:u64
00032b15: R2 := mem[R0 + 0x48, el]:u64
00032b1a: R0 := 0x418000
00032b20: R1 := R0 + 0xF50
00032b26: R0 := R2
00032b2b: R30 := 0x404640
00032b2d: call @gen_502_page with return %00032b2f

00032b2f:
00032b35: mem := mem with [R31 + 0xA0, el]:u64 <- R0
00032b3c: R19 := pad:64[mem[R31 + 0x68, el]:u32]
00032b43: R0 := mem[R31 + 0xA0, el]:u64
00032b48: R30 := 0x404650
00032b4a: call @strlen with return %00032b4c

00032b4c:
00032b50: R2 := R0
00032b57: R1 := mem[R31 + 0xA0, el]:u64
00032b5d: R0 := pad:64[31:0[R19]]
00032b62: R30 := 0x404660
00032b64: call @write_wrapper with return %00032b66

00032b66:
00032b6b: R0 := mem[R31 + 0xA0, el]:u64
00032b70: R30 := 0x404668
00032b72: call @free with return %00032b74

00032b74:
00032b78: R0 := R31 + 0x90
00032b7d: R30 := 0x404670
00032b7f: call @free_rr_data with return %00032b81

00032b81:
00032b85: R0 := R31 + 0x90
00032b8b: R0 := R0 + 8
00032b90: R30 := 0x40467C
00032b92: call @free_rr_data with return %00032b94

00032b94:
00032b97: R0 := 0xFFFFFFFFFFFFFFFF
00032b9f: mem := mem with [R31 + 0xC8, el]:u64 <- R0
00032ba3: goto %00031ced

00032c37:
00032c3a: R0 := 0x430000
00032c40: R0 := R0 + 0x390
00032c47: R0 := pad:64[mem[R0, el]:u32]
00032c4c: VF := 0
00032c4f: CF := 1
00032c53: ZF := 31:0[R0] = 0
00032c57: NF := 31:31[R0]
00032c5d: when ZF goto %00032c5b
00045c77: goto %00032d47

00032d47:
00032d4a: R0 := 0x418000
00032d50: R0 := R0 + 0xEF8
00032d55: R30 := 0x4044B8
00032d57: call @puts with return %00032c5b

00032c5b:
00032c65: R0 := mem[R31 + 0x98, el]:u64
00032c6c: mem := mem with [R0 + 0x1C, el]:u32 <- 0
00032c73: R0 := mem[R31 + 0x98, el]:u64
00032c7a: mem := mem with [R0, el]:u32 <- 0
00032c81: R0 := mem[R31 + 0x98, el]:u64
00032c86: R1 := 0xC8
00032c8e: mem := mem with [R0 + 0x10, el]:u32 <- 31:0[R1]
00032c95: R19 := mem[R31 + 0x98, el]:u64
00032c9a: R0 := 0x418000
00032ca0: R0 := R0 + 0xF08
00032ca5: R30 := 0x4044E4
00032ca7: call @strdup with return %00032ca9

00032ca9:
00032caf: mem := mem with [R19 + 0x50, el]:u64 <- R0
00032cb6: R0 := mem[R31 + 0x90, el]:u64
00032cbd: R0 := mem[R0 + 0x48, el]:u64
00032cc4: R19 := mem[R31 + 0x98, el]:u64
00032cc9: R30 := 0x4044F8
00032ccb: call @strdup with return %00032ccd

00032ccd:
00032cd3: mem := mem with [R19 + 0x48, el]:u64 <- R0
00032cda: R0 := pad:64[mem[R31 + 0x68, el]:u32]
00032ce1: R1 := mem[R31 + 0x98, el]:u64
00032ce6: R30 := 0x404508
00032ce8: call @headers_send with return %00032cea

00032cea:
00032ced: VF := 0
00032cf0: CF := 1
00032cf4: ZF := 31:0[R0] = 0
00032cf8: NF := 31:31[R0]
00032cfe: when ZF goto %00032cfc
00045c78: goto %00032d32

00032d32:
00032d37: R0 := pad:64[mem[R31 + 0x68, el]:u32]
00032d3e: R1 := pad:64[mem[R31 + 0x6C, el]:u32]
00032d43: R30 := 0x40451C
00032d45: call @tunnel with return %00032cfc

00032cfc:
00032d05: R0 := R31 + 0x90
00032d0a: R30 := 0x404524
00032d0c: call @free_rr_data with return %00032d0e

00032d0e:
00032d12: R0 := R31 + 0x90
00032d18: R0 := R0 + 8
00032d1d: R30 := 0x404530
00032d1f: call @free_rr_data with return %00032d21

00032d21:
00032d24: R0 := 0xFFFFFFFFFFFFFFFF
00032d2c: mem := mem with [R31 + 0xC8, el]:u64 <- R0
00032d30: goto %00031ced

00032e69:
00032e73: R0 := extend:64[mem[R31 + 0xBC, el]:u32]
00032e79: R0 := 60:0[R0].0
00032e7f: R1 := R31 + 0x90
00032e87: R0 := mem[R1 + R0, el]:u64
00032e8e: R2 := mem[R0 + 8, el]:u64
00032e95: R0 := extend:64[mem[R31 + 0xBC, el]:u32]
00032e9b: R0 := 60:0[R0].0
00032ea1: R1 := R31 + 0x90
00032ea9: R19 := mem[R1 + R0, el]:u64
00032eae: R0 := 0x418000
00032eb4: R1 := R0 + 0xEB0
00032eba: R0 := R2
00032ebf: R30 := 0x4043C4
00032ec1: call @hlist_del with return %00032ec3

00032ec3:
00032ec9: mem := mem with [R19 + 8, el]:u64 <- R0
00045c79: goto %00032e18

000330ba:
000330c2: R0 := 0x430000
000330c8: R0 := R0 + 0x390
000330cf: R0 := pad:64[mem[R0, el]:u32]
000330d4: VF := 0
000330d7: CF := 1
000330db: ZF := 31:0[R0] = 0
000330df: NF := 31:31[R0]
000330e5: when ZF goto %000330e3
00045c7a: goto %00033122

00033122:
00033127: R0 := mem[R31 + 0x90, el]:u64
0003312e: R0 := mem[R0 + 0x30, el]:u64
00033134: R1 := R0
00033139: R0 := 0x418000
0003313f: R0 := R0 + 0xE80
00033144: R30 := 0x404274
00033146: call @printf with return %000330e3

000330e3:
000330ed: R0 := mem[R31 + 0x90, el]:u64
000330f2: R30 := 0x40427C
000330f4: call @dup_rr_data with return %000330f6

000330f6:
000330fc: mem := mem with [R31 + 0xC8, el]:u64 <- R0
00033102: R0 := R31 + 0x90
00033107: R30 := 0x404288
00033109: call @free_rr_data with return %0003310b

0003310b:
0003310f: R0 := R31 + 0x90
00033115: R0 := R0 + 8
0003311a: R30 := 0x404294
0003311c: call @free_rr_data with return %0003311e

0003311e:
00033120: goto %00031ced

00033213:
00033217: R0 := R31 + 0x90
0003321c: R30 := 0x4041D8
0003321e: call @free_rr_data with return %00033220

00033220:
00033224: R0 := R31 + 0x90
0003322a: R0 := R0 + 8
0003322f: R30 := 0x4041E4
00033231: call @free_rr_data with return %00033233

00033233:
00033236: R0 := 0xFFFFFFFFFFFFFFFF
0003323e: mem := mem with [R31 + 0xC8, el]:u64 <- R0
00033242: goto %00031ced

00033488:
0003348d: R0 := mem[R31 + 0x20, el]:u64
00033494: R19 := mem[R0 + 0x40, el]:u64
0003349b: R0 := mem[R31 + 0x20, el]:u64
000334a2: R20 := pad:64[mem[R0 + 0x20, el]:u32]
000334a7: R30 := 0x403F54
000334a9: call @__errno_location with return %000334ab

000334ab:
000334b0: R0 := pad:64[mem[R0, el]:u32]
000334b5: R30 := 0x403F5C
000334b7: call @strerror with return %000334b9

000334b9:
000334bd: R4 := R0
000334c3: R3 := pad:64[31:0[R20]]
000334c9: R2 := R19
000334ce: R0 := 0x418000
000334d4: R1 := R0 + 0xDF0
000334d9: R0 := 4
000334de: R30 := 0x403F78
000334e0: call @syslog with return %000334e2

000334e2:
000334e7: R0 := mem[R31 + 0x20, el]:u64
000334ee: R19 := mem[R0 + 0x48, el]:u64
000334f3: R30 := 0x403F84
000334f5: call @__errno_location with return %000334f7

000334f7:
000334fc: R0 := pad:64[mem[R0, el]:u32]
00033501: R30 := 0x403F8C
00033503: call @strerror with return %00033505

00033505:
00033509: R1 := R0
0003350f: R0 := R19
00033514: R30 := 0x403F98
00033516: call @gen_502_page with return %00033518

00033518:
0003351e: mem := mem with [R31 + 0xA0, el]:u64 <- R0
00033525: R19 := pad:64[mem[R31 + 0x68, el]:u32]
0003352c: R0 := mem[R31 + 0xA0, el]:u64
00033531: R30 := 0x403FA8
00033533: call @strlen with return %00033535

00033535:
00033539: R2 := R0
00033540: R1 := mem[R31 + 0xA0, el]:u64
00033546: R0 := pad:64[31:0[R19]]
0003354b: R30 := 0x403FB8
0003354d: call @write_wrapper with return %0003354f

0003354f:
00033554: R0 := mem[R31 + 0xA0, el]:u64
00033559: R30 := 0x403FC0
0003355b: call @free with return %0003355d

0003355d:
00033560: R0 := 0xFFFFFFFFFFFFFFFF
00033568: mem := mem with [R31 + 0xC8, el]:u64 <- R0
0003356c: goto %00031ced

00031ced:
00031cf5: R0 := mem[R31 + 0xC0, el]:u64
00031cfa: VF := 0
00031cfd: CF := 1
00031d01: ZF := R0 = 0
00031d05: NF := 63:63[R0]
00031d0b: when ZF goto %00031d09
00045c7b: goto %00031d93

00031d93:
00031d98: R0 := mem[R31 + 0xC0, el]:u64
00031d9d: R30 := 0x404CC0
00031d9f: call @free with return %00031d09

00031d09:
00031d13: R0 := mem[R31 + 0xB0, el]:u64
00031d18: VF := 0
00031d1b: CF := 1
00031d1f: ZF := R0 = 0
00031d23: NF := 63:63[R0]
00031d29: when ZF goto %00031d27
00045c7c: goto %00031d85

00031d85:
00031d8a: R0 := mem[R31 + 0xB0, el]:u64
00031d8f: R30 := 0x404CD4
00031d91: call @free with return %00031d27

00031d27:
00031d31: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
00031d36: VF := 0
00031d39: CF := 1
00031d3d: ZF := 31:0[R0] = 0
00031d41: NF := 31:31[R0]
00031d48: when NF <> VF goto %00031d46
00045c7d: goto %00031d77

00031d77:
00031d7c: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
00031d81: R30 := 0x404CE8
00031d83: call @close with return %00031d46

00031d46:
00031d50: R0 := mem[R31 + 0xC8, el]:u64
00031d56: #358 := R31 + 0x10
00031d5b: R19 := mem[#358, el]:u64
00031d60: R20 := mem[#358 + 8, el]:u64
00031d67: R29 := mem[R31, el]:u64
00031d6c: R30 := mem[R31 + 8, el]:u64
00031d70: R31 := R31 + 0xD0
00031d75: call R30 with noreturn

00045c7e: sub direct_tunnel(direct_tunnel_result)
000462e4: direct_tunnel_result :: out u32 = low:32[R0]

00031649:
00031650: #351 := R31 - 0x80
00031656: mem := mem with [#351, el]:u64 <- R29
0003165c: mem := mem with [#351 + 8, el]:u64 <- R30
00031660: R31 := #351
00031666: R29 := R31
0003166e: mem := mem with [R31 + 0x18, el]:u64 <- R0
00031675: mem := mem with [R31 + 0x7C, el]:u32 <- 0
0003167c: R0 := mem[R31 + 0x18, el]:u64
00031683: R0 := pad:64[mem[R0, el]:u32]
0003168b: mem := mem with [R31 + 0x78, el]:u32 <- 31:0[R0]
00031692: R0 := mem[R31 + 0x18, el]:u64
00031699: R0 := mem[R0 + 8, el]:u64
000316a1: mem := mem with [R31 + 0x70, el]:u64 <- R0
000316a7: R0 := R31 + 0x28
000316ac: V0 := 0
000316b4: mem := mem with [R0, el]:u128 <- V0
000316ba: mem := mem with [R0 + 0x10, el]:u128 <- V0
000316c2: mem := mem with [R0 + 0x1E, el]:u128 <- V0
000316c9: R0 := mem[R31 + 0x18, el]:u64
000316cf: R0 := R0 + 0x10
000316d6: R0 := pad:64[mem[R0, el]:u16]
000316dc: R4 := pad:64[31:0[R0]]
000316e3: R0 := mem[R31 + 0x18, el]:u64
000316e9: R0 := R0 + 0x10
000316f0: R0 := pad:64[mem[R0, el]:u16]
000316f6: #352 := 31:0[R0] - 2
000316fb: VF := extend:64[#352] <> extend:64[31:0[R0]] - 2
00031700: CF := pad:64[#352] <> pad:64[31:0[R0]] + 0xFFFFFFFE
00031704: ZF := #352 = 0
00031708: NF := 31:31[#352]
0003170e: when ZF <> 1 goto %0003170c
00045c7f: goto %000318fb

0003170c:
00031716: R0 := mem[R31 + 0x18, el]:u64
0003171c: R0 := R0 + 0x10
00031722: R0 := R0 + 8
00045c80: goto %00031724

000318fb:
00031900: R0 := mem[R31 + 0x18, el]:u64
00031906: R0 := R0 + 0x10
0003190c: R0 := R0 + 4
00031910: goto %00031724

00031724:
00031728: R1 := R31 + 0x28
0003172d: R3 := 0x2E
00031733: R2 := R1
00031739: R1 := R0
0003173f: R0 := pad:64[31:0[R4]]
00031744: R30 := 0x404D88
00031746: call @inet_ntop with return %00031748

00031748:
0003174d: R0 := mem[R31 + 0x70, el]:u64
00031752: R30 := 0x404D90
00031754: call @strdup with return %00031756

00031756:
0003175c: mem := mem with [R31 + 0x68, el]:u64 <- R0
00031761: R1 := 0x3A
00031768: R0 := mem[R31 + 0x68, el]:u64
0003176d: R30 := 0x404DA0
0003176f: call @strchr with return %00031771

00031771:
00031777: mem := mem with [R31 + 0x60, el]:u64 <- R0
0003177e: R0 := mem[R31 + 0x60, el]:u64
00031783: VF := 0
00031786: CF := 1
0003178a: ZF := R0 = 0
0003178e: NF := 63:63[R0]
00031794: when ZF goto %00031792
00045c81: goto %000318c2

000318c2:
000318c7: R0 := mem[R31 + 0x60, el]:u64
000318ce: mem := mem with [R0] <- 0
000318d5: R0 := mem[R31 + 0x60, el]:u64
000318db: R0 := R0 + 1
000318e3: mem := mem with [R31 + 0x60, el]:u64 <- R0
000318ea: R0 := mem[R31 + 0x60, el]:u64
000318ef: R30 := 0x404DCC
000318f1: call @atoi with return %000318f3

000318f3:
000318f9: mem := mem with [R31 + 0x7C, el]:u32 <- 31:0[R0]
00045c82: goto %00031792

00031792:
0003179c: R1 := pad:64[mem[R31 + 0x7C, el]:u32]
000317a3: R0 := mem[R31 + 0x68, el]:u64
000317a8: R30 := 0x404DDC
000317aa: call @host_connect with return %000317ac

000317ac:
000317b2: mem := mem with [R31 + 0x5C, el]:u32 <- 31:0[R0]
000317b9: R0 := pad:64[mem[R31 + 0x5C, el]:u32]
000317be: VF := 0
000317c1: CF := 1
000317c5: ZF := 31:0[R0] = 0
000317c9: NF := 31:31[R0]
000317d1: when ~(NF = VF & ~ZF) goto %000317cf
00045c83: goto %00031836

000317cf:
00045c84: goto %000317d6

00031836:
0003183a: R0 := R31 + 0x28
00031841: R3 := mem[R31 + 0x70, el]:u64
00031847: R2 := R0
0003184c: R0 := 0x419000
00031852: R1 := R0 + 0x50
00031857: R0 := 7
0003185c: R30 := 0x404E08
0003185e: call @syslog with return %00031860

00031860:
00031863: R0 := 0x430000
00031869: R0 := R0 + 0x390
00031870: R0 := pad:64[mem[R0, el]:u32]
00031875: VF := 0
00031878: CF := 1
0003187c: ZF := 31:0[R0] = 0
00031880: NF := 31:31[R0]
00031886: when ZF goto %00031884
00045c85: goto %000318a2

000318a2:
000318a7: R2 := pad:64[mem[R31 + 0x78, el]:u32]
000318ae: R1 := mem[R31 + 0x70, el]:u64
000318b3: R0 := 0x419000
000318b9: R0 := R0 + 0x60
000318be: R30 := 0x404E30
000318c0: call @printf with return %00031884

00031884:
0003188e: R1 := pad:64[mem[R31 + 0x5C, el]:u32]
00031895: R0 := pad:64[mem[R31 + 0x78, el]:u32]
0003189a: R30 := 0x404E3C
0003189c: call @tunnel with return %0003189e

0003189e:
000318a0: goto %000317d6

000317d6:
000317db: R0 := mem[R31 + 0x68, el]:u64
000317e0: R30 := 0x404E4C
000317e2: call @free with return %000317e4

000317e4:
000317e9: R0 := pad:64[mem[R31 + 0x5C, el]:u32]
000317ee: VF := 0
000317f1: CF := 1
000317f5: ZF := 31:0[R0] = 0
000317f9: NF := 31:31[R0]
00031800: when NF <> VF goto %000317fe
00045c86: goto %00031828

00031828:
0003182d: R0 := pad:64[mem[R31 + 0x5C, el]:u32]
00031832: R30 := 0x404E60
00031834: call @close with return %000317fe

000317fe:
00031808: R0 := pad:64[mem[R31 + 0x78, el]:u32]
0003180d: R30 := 0x404E68
0003180f: call @close with return %00031811

00031811:
00031818: R29 := mem[R31, el]:u64
0003181d: R30 := mem[R31 + 8, el]:u64
00031821: R31 := R31 + 0x80
00031826: call R30 with noreturn

00045c87: sub dump_auth(dump_auth_result)
000462e5: dump_auth_result :: out u32 = low:32[R0]

00021e71:
00021e75: #107 := R31 - 0x30
00021e7b: mem := mem with [#107, el]:u64 <- R29
00021e81: mem := mem with [#107 + 8, el]:u64 <- R30
00021e85: R31 := #107
00021e8b: R29 := R31
00021e93: mem := mem with [R31 + 0x18, el]:u64 <- R0
00021e98: R0 := 0x418000
00021e9e: R0 := R0 + 0xAF0
00021ea3: R30 := 0x4030B0
00021ea5: call @puts with return %00021ea7

00021ea7:
00021eac: R0 := mem[R31 + 0x18, el]:u64
00021eb1: VF := 0
00021eb4: CF := 1
00021eb8: ZF := R0 = 0
00021ebc: NF := 63:63[R0]
00021ec2: when ZF <> 1 goto %00021ec0
00045c88: goto %00039179

00021ec0:
00021eca: R0 := mem[R31 + 0x18, el]:u64
00021ed0: R1 := R0
00021ed5: R0 := 0x418000
00021edb: R0 := R0 + 0xB30
00021ee0: R30 := 0x4030E0
00021ee2: call @printf with return %00021ee4

00021ee4:
00021ee9: R0 := mem[R31 + 0x18, el]:u64
00021eef: R0 := R0 + 0x32
00021ef5: R1 := R0
00021efa: R0 := 0x418000
00021f00: R0 := R0 + 0xB40
00021f05: R30 := 0x4030F8
00021f07: call @printf with return %00021f09

00021f09:
00021f0e: R0 := mem[R31 + 0x18, el]:u64
00021f14: R0 := R0 + 0x64
00021f1a: R1 := R0
00021f1f: R0 := 0x418000
00021f25: R0 := R0 + 0xB50
00021f2a: R30 := 0x403110
00021f2c: call @printf with return %00021f2e

00021f2e:
00021f33: R0 := mem[R31 + 0x18, el]:u64
00021f3a: R0 := pad:64[mem[R0 + 0x12C, el]:u32]
00021f40: R1 := pad:64[31:0[R0]]
00021f45: R0 := 0x418000
00021f4b: R0 := R0 + 0xB60
00021f50: R30 := 0x403128
00021f52: call @printf with return %00021f54

00021f54:
00021f59: R0 := mem[R31 + 0x18, el]:u64
00021f60: R0 := pad:64[mem[R0 + 0x130, el]:u32]
00021f66: R1 := pad:64[31:0[R0]]
00021f6b: R0 := 0x418000
00021f71: R0 := R0 + 0xB70
00021f76: R30 := 0x403140
00021f78: call @printf with return %00021f7a

00021f7a:
00021f7f: R0 := mem[R31 + 0x18, el]:u64
00021f86: R0 := pad:64[mem[R0 + 0x134, el]:u32]
00021f8c: R1 := pad:64[31:0[R0]]
00021f91: R0 := 0x418000
00021f97: R0 := R0 + 0xB80
00021f9c: R30 := 0x403158
00021f9e: call @printf with return %00021fa0

00021fa0:
00021fa5: R0 := mem[R31 + 0x18, el]:u64
00021fac: R0 := pad:64[mem[R0 + 0x138, el]:u32]
00021fb2: R1 := pad:64[31:0[R0]]
00021fb7: R0 := 0x418000
00021fbd: R0 := R0 + 0xB90
00021fc2: R30 := 0x403170
00021fc4: call @printf with return %00021fc6

00021fc6:
00021fcb: R0 := mem[R31 + 0x18, el]:u64
00021fd1: R0 := R0 + 0xFA
00021fd6: R1 := 0x32
00021fdb: R30 := 0x403180
00021fdd: call @is_memory_all_zero with return %00021fdf

00021fdf:
00021fe2: VF := 0
00021fe5: CF := 1
00021fe9: ZF := 31:0[R0] = 0
00021fed: NF := 31:31[R0]
00021ff3: when ZF <> 1 goto %00021ff1
00045c89: goto %0003912c

0003912c:
00039131: R0 := mem[R31 + 0x18, el]:u64
00039137: R0 := R0 + 0xFA
0003913c: R2 := 8
00039141: R1 := 0x10
00039146: R30 := 0x40319C
00039148: call @printmem with return %0003914a

0003914a:
00039150: mem := mem with [R31 + 0x28, el]:u64 <- R0
00039157: R1 := mem[R31 + 0x28, el]:u64
0003915c: R0 := 0x418000
00039162: R0 := R0 + 0xBA0
00039167: R30 := 0x4031B0
00039169: call @printf with return %0003916b

0003916b:
00039170: R0 := mem[R31 + 0x28, el]:u64
00039175: R30 := 0x4031B8
00039177: call @free with return %00021ff1

00021ff1:
00021ffb: R0 := mem[R31 + 0x18, el]:u64
00022001: R0 := R0 + 0xC8
00022006: R1 := 0x32
0002200b: R30 := 0x4031C8
0002200d: call @is_memory_all_zero with return %0002200f

0002200f:
00022012: VF := 0
00022015: CF := 1
00022019: ZF := 31:0[R0] = 0
0002201d: NF := 31:31[R0]
00022023: when ZF <> 1 goto %00022021
00045c8a: goto %000390df

000390df:
000390e4: R0 := mem[R31 + 0x18, el]:u64
000390ea: R0 := R0 + 0xC8
000390ef: R2 := 8
000390f4: R1 := 0x10
000390f9: R30 := 0x4031E4
000390fb: call @printmem with return %000390fd

000390fd:
00039103: mem := mem with [R31 + 0x28, el]:u64 <- R0
0003910a: R1 := mem[R31 + 0x28, el]:u64
0003910f: R0 := 0x418000
00039115: R0 := R0 + 0xBB0
0003911a: R30 := 0x4031F8
0003911c: call @printf with return %0003911e

0003911e:
00039123: R0 := mem[R31 + 0x28, el]:u64
00039128: R30 := 0x403200
0003912a: call @free with return %00022021

00022021:
0002202b: R0 := mem[R31 + 0x18, el]:u64
00022031: R0 := R0 + 0x96
00022036: R1 := 0x32
0002203b: R30 := 0x403210
0002203d: call @is_memory_all_zero with return %0002203f

0002203f:
00022042: VF := 0
00022045: CF := 1
00022049: ZF := 31:0[R0] = 0
0002204d: NF := 31:31[R0]
00022053: when ZF <> 1 goto %00022051
00045c8b: goto %00039092

00039092:
00039097: R0 := mem[R31 + 0x18, el]:u64
0003909d: R0 := R0 + 0x96
000390a2: R2 := 8
000390a7: R1 := 0x10
000390ac: R30 := 0x40322C
000390ae: call @printmem with return %000390b0

000390b0:
000390b6: mem := mem with [R31 + 0x28, el]:u64 <- R0
000390bd: R1 := mem[R31 + 0x28, el]:u64
000390c2: R0 := 0x418000
000390c8: R0 := R0 + 0xBC0
000390cd: R30 := 0x403240
000390cf: call @printf with return %000390d1

000390d1:
000390d6: R0 := mem[R31 + 0x28, el]:u64
000390db: R30 := 0x403248
000390dd: call @free with return %00022051

00039179:
0003917c: R0 := 0x418000
00039182: R0 := R0 + 0xB10
00039187: R30 := 0x4030C8
00039189: call @puts with return %0003918b

0003918b:
0003918d: goto %00022051

00022051:
0002205b: R29 := mem[R31, el]:u64
00022060: R30 := mem[R31 + 8, el]:u64
00022064: R31 := R31 + 0x30
00022069: call R30 with noreturn

00045c8c: sub dup2(dup2_fd, dup2_fd2, dup2_result)
000462e6: dup2_fd :: in u32 = low:32[R0]
000462e7: dup2_fd2 :: in u32 = low:32[R1]
000462e8: dup2_result :: out u32 = low:32[R0]

0003a5e2:
0003ff6e: R16 := 0x430000
0003ff75: R17 := mem[R16 + 0x2A8, el]:u64
0003ff7b: R16 := R16 + 0x2A8
0003ff80: call R17 with noreturn

00045c8d: sub dup_auth(dup_auth_result)
000462e9: dup_auth_result :: out u32 = low:32[R0]

00021de7:
00021deb: #106 := R31 - 0x30
00021df1: mem := mem with [#106, el]:u64 <- R29
00021df7: mem := mem with [#106 + 8, el]:u64 <- R30
00021dfb: R31 := #106
00021e01: R29 := R31
00021e09: mem := mem with [R31 + 0x18, el]:u64 <- R0
00021e11: mem := mem with [R31 + 0x14, el]:u32 <- 31:0[R1]
00021e16: R30 := 0x403068
00021e18: call @new_auth with return %00021e1a

00021e1a:
00021e20: mem := mem with [R31 + 0x28, el]:u64 <- R0
00021e27: R0 := mem[R31 + 0x28, el]:u64
00021e2c: VF := 0
00021e2f: CF := 1
00021e33: ZF := R0 = 0
00021e37: NF := 63:63[R0]
00021e3d: when ZF <> 1 goto %00021e3b
00045c8e: goto %0003918f

00021e3b:
00021e45: R2 := pad:64[mem[R31 + 0x14, el]:u32]
00021e4c: R1 := mem[R31 + 0x18, el]:u64
00021e53: R0 := mem[R31 + 0x28, el]:u64
00021e58: R30 := 0x403090
00021e5a: call @copy_auth with return %00021e5c

0003918f:
00039192: R0 := 0
00039196: goto %00021e5c

00021e5c:
00021e61: R29 := mem[R31, el]:u64
00021e66: R30 := mem[R31 + 8, el]:u64
00021e6a: R31 := R31 + 0x30
00021e6f: call R30 with noreturn

00045c8f: sub dup_rr_data(dup_rr_data_result)
000462ea: dup_rr_data_result :: out u32 = low:32[R0]

000236a3:
000236a7: #128 := R31 - 0x30
000236ad: mem := mem with [#128, el]:u64 <- R29
000236b3: mem := mem with [#128 + 8, el]:u64 <- R30
000236b7: R31 := #128
000236bd: R29 := R31
000236c5: mem := mem with [R31 + 0x18, el]:u64 <- R0
000236cc: R0 := mem[R31 + 0x18, el]:u64
000236d1: VF := 0
000236d4: CF := 1
000236d8: ZF := R0 = 0
000236dc: NF := 63:63[R0]
000236e2: when ZF <> 1 goto %000236e0
00045c90: goto %0002371e

0002371e:
00023721: R0 := 0x430000
00023727: R0 := R0 + 0x350
0002372e: R0 := mem[R0, el]:u64
00023734: R3 := R0
00023739: R2 := 0x34
0002373e: R1 := 1
00023743: R0 := 0x41C000
00023749: R0 := R0 + 0xC00
0002374e: R30 := 0x411E88
00023750: call @fwrite with return %00023752

00023752:
00023755: R0 := 0x41D000
0002375b: R3 := R0 + 0x18
00023760: R2 := 0x258
00023765: R0 := 0x41C000
0002376b: R1 := R0 + 0xAF0
00023770: R0 := 0x41C000
00023776: R0 := R0 + 0xBC0
0002377b: R30 := 0x411EA8
0002377d: call @__assert_fail with return %000236e0

000236e0:
000236e8: R30 := 0x411EAC
000236ea: call @new_rr_data with return %000236ec

000236ec:
000236f2: mem := mem with [R31 + 0x28, el]:u64 <- R0
000236f9: R1 := mem[R31 + 0x18, el]:u64
00023700: R0 := mem[R31 + 0x28, el]:u64
00023705: R30 := 0x411EBC
00023707: call @copy_rr_data with return %00023709

00023709:
0002370e: R29 := mem[R31, el]:u64
00023713: R30 := mem[R31 + 8, el]:u64
00023717: R31 := R31 + 0x30
0002371c: call R30 with noreturn

00045c91: sub exit(exit_code)
000462eb: exit_code :: in u32 = low:32[R0]

000252be:
0003f8d0: R16 := 0x430000
0003f8d7: R17 := mem[R16 + 0x40, el]:u64
0003f8dd: R16 := R16 + 0x40
0003f8e2: call R17 with noreturn

00045c92: sub fclose(fclose_fp, fclose_result)
000462ec: fclose_fp :: in out u64 = R0
000462ed: fclose_result :: out u32 = low:32[R0]

00021095:
0003fa1a: R16 := 0x430000
0003fa21: R17 := mem[R16 + 0xB8, el]:u64
0003fa27: R16 := R16 + 0xB8
0003fa2c: call R17 with noreturn

00045c93: sub fcntl(fcntl_result)
000462ee: fcntl_result :: out u32 = low:32[R0]

0002456b:
0003fe92: R16 := 0x430000
0003fe99: R17 := mem[R16 + 0x258, el]:u64
0003fe9f: R16 := R16 + 0x258
0003fea4: call R17 with noreturn

00045c94: sub feof(feof_stream, feof_result)
000462ef: feof_stream :: in out u64 = R0
000462f0: feof_result :: out u32 = low:32[R0]

00020533:
0003fcda: R16 := 0x430000
0003fce1: R17 := mem[R16 + 0x1B8, el]:u64
0003fce7: R16 := R16 + 0x1B8
0003fcec: call R17 with noreturn

00045c95: sub ferror(ferror_stream, ferror_result)
000462f1: ferror_stream :: in out u64 = R0
000462f2: ferror_result :: out u32 = low:32[R0]

0002055d:
000400ce: R16 := 0x430000
000400d5: R17 := mem[R16 + 0x328, el]:u64
000400db: R16 := R16 + 0x328
000400e0: call R17 with noreturn

00045c96: sub fgets(fgets_s, fgets_size, fgets_stream, fgets_result)
000462f3: fgets_s :: in out u64 = R0
000462f4: fgets_size :: in u32 = low:32[R1]
000462f5: fgets_stream :: in out u64 = R2
000462f6: fgets_result :: out u64 = R0

0002219c:
000400a2: R16 := 0x430000
000400a9: R17 := mem[R16 + 0x318, el]:u64
000400af: R16 := R16 + 0x318
000400b4: call R17 with noreturn

00045c97: sub fnmatch(fnmatch_result)
000462f7: fnmatch_result :: out u32 = low:32[R0]

0002874e:
0003fe7c: R16 := 0x430000
0003fe83: R17 := mem[R16 + 0x250, el]:u64
0003fe89: R16 := R16 + 0x250
0003fe8e: call R17 with noreturn

00045c98: sub fopen(fopen_path, fopen_mode, fopen_result)
000462f8: fopen_path :: in u64 = R0
000462f9: fopen_mode :: in u64 = R1
000462fa: fopen_result :: out u64 = R0

000170c0:
0003fa72: R16 := 0x430000
0003fa79: R17 := mem[R16 + 0xD8, el]:u64
0003fa7f: R16 := R16 + 0xD8
0003fa84: call R17 with noreturn

00045c99: sub fork(fork_result)
000462fb: fork_result :: out u32 = low:32[R0]

0003c476:
0003f9c2: R16 := 0x430000
0003f9c9: R17 := mem[R16 + 0x98, el]:u64
0003f9cf: R16 := R16 + 0x98
0003f9d4: call R17 with noreturn

00045c9a: sub forward_request(forward_request_result)
000462fc: forward_request_result :: out u32 = low:32[R0]

0002b16c:
0002b173: #261 := R31 - 0xF0
0002b179: mem := mem with [#261, el]:u64 <- R29
0002b17f: mem := mem with [#261 + 8, el]:u64 <- R30
0002b183: R31 := #261
0002b189: R29 := R31
0002b191: mem := mem with [R31 + 0x10, el]:u64 <- R19
0002b199: mem := mem with [R31 + 0x28, el]:u64 <- R0
0002b1a1: mem := mem with [R31 + 0x20, el]:u64 <- R1
0002b1a8: mem := mem with [R31 + 0xE4, el]:u32 <- 0
0002b1af: mem := mem with [R31 + 0x78, el]:u64 <- 0
0002b1b6: mem := mem with [R31 + 0x80, el]:u64 <- 0
0002b1bd: mem := mem with [R31 + 0xD8, el]:u64 <- 0
0002b1c4: mem := mem with [R31 + 0x70, el]:u64 <- 0
0002b1cb: mem := mem with [R31 + 0xC8, el]:u64 <- 0
0002b1d2: R0 := mem[R31 + 0x28, el]:u64
0002b1d7: VF := 0
0002b1da: CF := 1
0002b1de: ZF := R0 = 0
0002b1e2: NF := 63:63[R0]
0002b1e8: when ZF <> 1 goto %0002b1e6
00045c9b: goto %0002ff1f

0002ff1f:
0002ff22: R0 := 0x419000
0002ff28: R3 := R0 + 0x9D0
0002ff2d: R2 := 0x60
0002ff32: R0 := 0x419000
0002ff38: R1 := R0 + 0x88
0002ff3d: R0 := 0x419000
0002ff43: R0 := R0 + 0xC8
0002ff48: R30 := 0x404ECC
0002ff4a: call @__assert_fail with return %0002b1e6

0002b1e6:
0002b1f0: R0 := mem[R31 + 0x28, el]:u64
0002b1f7: R0 := pad:64[mem[R0, el]:u32]
0002b1ff: mem := mem with [R31 + 0x68, el]:u32 <- 31:0[R0]
0002b205: R0 := R31 + 0x38
0002b20a: V0 := 0
0002b212: mem := mem with [R0, el]:u128 <- V0
0002b218: mem := mem with [R0 + 0x10, el]:u128 <- V0
0002b220: mem := mem with [R0 + 0x1E, el]:u128 <- V0
0002b227: R0 := mem[R31 + 0x28, el]:u64
0002b22d: R0 := R0 + 0x10
0002b234: R0 := pad:64[mem[R0, el]:u16]
0002b23a: R4 := pad:64[31:0[R0]]
0002b241: R0 := mem[R31 + 0x28, el]:u64
0002b247: R0 := R0 + 0x10
0002b24e: R0 := pad:64[mem[R0, el]:u16]
0002b254: #262 := 31:0[R0] - 2
0002b259: VF := extend:64[#262] <> extend:64[31:0[R0]] - 2
0002b25e: CF := pad:64[#262] <> pad:64[31:0[R0]] + 0xFFFFFFFE
0002b262: ZF := #262 = 0
0002b266: NF := 31:31[#262]
0002b26c: when ZF <> 1 goto %0002b26a
00045c9c: goto %0002ff08

0002b26a:
0002b274: R0 := mem[R31 + 0x28, el]:u64
0002b27a: R0 := R0 + 0x10
0002b280: R0 := R0 + 8
00045c9d: goto %0002b282

0002ff08:
0002ff0d: R0 := mem[R31 + 0x28, el]:u64
0002ff13: R0 := R0 + 0x10
0002ff19: R0 := R0 + 4
0002ff1d: goto %0002b282

0002b282:
0002b286: R1 := R31 + 0x38
0002b28b: R3 := 0x2E
0002b291: R2 := R1
0002b297: R1 := R0
0002b29d: R0 := pad:64[31:0[R4]]
0002b2a2: R30 := 0x404F40
0002b2a4: call @inet_ntop with return %0002b2a6

0002b2a6:
0002b2ab: mem := mem with [R31 + 0x6C, el]:u32 <- 0
0002b2b2: mem := mem with [R31 + 0xC4, el]:u32 <- 0
0002b2b9: R0 := pad:64[mem[R31 + 0xC4, el]:u32]
0002b2c1: mem := mem with [R31 + 0xC0, el]:u32 <- 31:0[R0]
0002b2c8: R0 := pad:64[mem[R31 + 0xC0, el]:u32]
0002b2d0: mem := mem with [R31 + 0xBC, el]:u32 <- 31:0[R0]
0002b2d7: R0 := pad:64[mem[R31 + 0xBC, el]:u32]
0002b2df: mem := mem with [R31 + 0xB8, el]:u32 <- 31:0[R0]
0002b2e6: R0 := pad:64[mem[R31 + 0xB8, el]:u32]
0002b2ee: mem := mem with [R31 + 0xB4, el]:u32 <- 31:0[R0]
0002b2f4: R0 := R31 + 0x68
0002b2fc: mem := mem with [R31 + 0x90, el]:u64 <- R0
0002b303: R0 := mem[R31 + 0x90, el]:u64
0002b30b: mem := mem with [R31 + 0x98, el]:u64 <- R0
0002b311: R0 := R31 + 0x6C
0002b319: mem := mem with [R31 + 0x88, el]:u64 <- R0
0002b320: R0 := mem[R31 + 0x88, el]:u64
0002b328: mem := mem with [R31 + 0xA0, el]:u64 <- R0
0002b32d: R0 := 0x430000
0002b333: R0 := R0 + 0x390
0002b33a: R0 := pad:64[mem[R0, el]:u32]
0002b33f: VF := 0
0002b342: CF := 1
0002b346: ZF := 31:0[R0] = 0
0002b34a: NF := 31:31[R0]
0002b350: when ZF goto %0002b34e
00045c9e: goto %0002fe7b

0002fe7b:
0002fe80: R0 := pad:64[mem[R31 + 0xE4, el]:u32]
0002fe85: VF := 0
0002fe88: CF := 1
0002fe8c: ZF := 31:0[R0] = 0
0002fe90: NF := 31:31[R0]
0002fe96: when ZF goto %0002fe94
00045c9f: goto %0002fef9

0002fe94:
0002fe9c: R0 := 0x419000
0002fea2: R0 := R0 + 0xF0
00045ca0: goto %0002fea4

0002fef9:
0002fefc: R0 := 0x419000
0002ff02: R0 := R0 + 0xE0
0002ff06: goto %0002fea4

0002fea4:
0002fea8: R1 := R0
0002fead: R0 := 0x419000
0002feb3: R0 := R0 + 0xF8
0002feb8: R30 := 0x404FCC
0002feba: call @printf with return %0002febc

0002febc:
0002febf: R0 := 0x430000
0002fec5: R0 := R0 + 0x3F8
0002feca: R30 := 0x404FD8
0002fecc: call @pthread_mutex_lock with return %0002fece

0002fece:
0002fed1: R0 := 0x430000
0002fed7: R0 := R0 + 0x3F0
0002fede: R0 := mem[R0, el]:u64
0002fee3: R30 := 0x404FE8
0002fee5: call @plist_dump with return %0002fee7

0002fee7:
0002feea: R0 := 0x430000
0002fef0: R0 := R0 + 0x3F8
0002fef5: R30 := 0x404FF4
0002fef7: call @pthread_mutex_unlock with return %0002b34e

0002b34e:
0002b356: R0 := 0x430000
0002b35c: R0 := R0 + 0x3F8
0002b361: R30 := 0x405000
0002b363: call @pthread_mutex_lock with return %0002b365

0002b365:
0002b369: R0 := R31 + 0x70
0002b36f: R1 := R0
0002b374: R0 := 0x430000
0002b37a: R0 := R0 + 0x3F0
0002b37f: R30 := 0x405014
0002b381: call @plist_pop with return %0002b383

0002b383:
0002b389: mem := mem with [R31 + 0xB0, el]:u32 <- 31:0[R0]
0002b38e: R0 := 0x430000
0002b394: R0 := R0 + 0x3F8
0002b399: R30 := 0x405024
0002b39b: call @pthread_mutex_unlock with return %0002b39d

0002b39d:
0002b3a2: R0 := pad:64[mem[R31 + 0xB0, el]:u32]
0002b3a7: VF := 0
0002b3aa: CF := 1
0002b3ae: ZF := 31:0[R0] = 0
0002b3b2: NF := 31:31[R0]
0002b3b8: when ZF goto %0002b3b6
00045ca1: goto %0002fe0c

0002b3b6:
0002b3be: R30 := 0x405074
0002b3c0: call @new_auth with return %0002b3c2

0002b3c2:
0002b3c8: mem := mem with [R31 + 0x70, el]:u64 <- R0
0002b3cf: R3 := mem[R31 + 0x70, el]:u64
0002b3d6: R0 := mem[R31 + 0x20, el]:u64
0002b3dd: R1 := mem[R0 + 0x30, el]:u64
0002b3e4: R0 := mem[R31 + 0x20, el]:u64
0002b3eb: R0 := mem[R0 + 0x40, el]:u64
0002b3f1: R2 := R0
0002b3f7: R0 := R3
0002b3fc: R30 := 0x405098
0002b3fe: call @proxy_connect with return %0002b400

0002b400:
0002b406: mem := mem with [R31 + 0x6C, el]:u32 <- 31:0[R0]
0002b40d: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
0002b413: #263 := 31:0[R0] + 2
0002b418: VF := extend:64[#263] <> extend:64[31:0[R0]] + 2
0002b41d: CF := pad:64[#263] <> pad:64[31:0[R0]] + 2
0002b421: ZF := #263 = 0
0002b425: NF := 31:31[#263]
0002b42b: when ZF <> 1 goto %0002b429
00045ca2: goto %0002fdfb

0002b429:
0002b433: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
0002b438: VF := 0
0002b43b: CF := 1
0002b43f: ZF := 31:0[R0] = 0
0002b443: NF := 31:31[R0]
0002b44a: when NF = VF goto %0002b448
00045ca3: goto %0002fd7f

0002fd7f:
0002fd84: R0 := mem[R31 + 0x20, el]:u64
0002fd8b: R2 := mem[R0 + 0x48, el]:u64
0002fd90: R0 := 0x419000
0002fd96: R1 := R0 + 0x138
0002fd9c: R0 := R2
0002fda1: R30 := 0x4050D8
0002fda3: call @gen_502_page with return %0002fda5

0002fda5:
0002fdab: mem := mem with [R31 + 0xA8, el]:u64 <- R0
0002fdb2: R19 := pad:64[mem[R31 + 0x68, el]:u32]
0002fdb9: R0 := mem[R31 + 0xA8, el]:u64
0002fdbe: R30 := 0x4050E8
0002fdc0: call @strlen with return %0002fdc2

0002fdc2:
0002fdc6: R2 := R0
0002fdcd: R1 := mem[R31 + 0xA8, el]:u64
0002fdd3: R0 := pad:64[31:0[R19]]
0002fdd8: R30 := 0x4050F8
0002fdda: call @write_wrapper with return %0002fddc

0002fddc:
0002fde1: R0 := mem[R31 + 0xA8, el]:u64
0002fde6: R30 := 0x405100
0002fde8: call @free with return %0002fdea

0002fdea:
0002fded: R0 := 0xFFFFFFFFFFFFFFFF
0002fdf5: mem := mem with [R31 + 0xD8, el]:u64 <- R0
0002fdf9: goto %0002b9da

0002fdfb:
0002fdfe: R0 := 0xFFFFFFFFFFFFFFFE
0002fe06: mem := mem with [R31 + 0xD8, el]:u64 <- R0
0002fe0a: goto %0002b9da

0002fe0c:
0002fe0f: R0 := 0x430000
0002fe15: R0 := R0 + 0x390
0002fe1c: R0 := pad:64[mem[R0, el]:u32]
0002fe21: VF := 0
0002fe24: CF := 1
0002fe28: ZF := 31:0[R0] = 0
0002fe2c: NF := 31:31[R0]
0002fe32: when ZF goto %0002fe30
00045ca4: goto %0002fe62

0002fe62:
0002fe67: R1 := pad:64[mem[R31 + 0xB0, el]:u32]
0002fe6c: R0 := 0x419000
0002fe72: R0 := R0 + 0x110
0002fe77: R30 := 0x405054
0002fe79: call @printf with return %0002fe30

0002fe30:
0002fe3a: R0 := pad:64[mem[R31 + 0xB0, el]:u32]
0002fe42: mem := mem with [R31 + 0x6C, el]:u32 <- 31:0[R0]
0002fe47: R0 := 1
0002fe4f: mem := mem with [R31 + 0xBC, el]:u32 <- 31:0[R0]
0002fe54: R0 := 1
0002fe5c: mem := mem with [R31 + 0xB4, el]:u32 <- 31:0[R0]
0002fe60: goto %0002b448

0002b448:
0002b452: R0 := mem[R31 + 0xC8, el]:u64
0002b457: VF := 0
0002b45a: CF := 1
0002b45e: ZF := R0 = 0
0002b462: NF := 63:63[R0]
0002b468: when ZF <> 1 goto %0002b466
00045ca5: goto %0002fd3d

0002fd3d:
0002fd42: R0 := mem[R31 + 0x20, el]:u64
0002fd49: R0 := mem[R0 + 0x40, el]:u64
0002fd4e: VF := 0
0002fd51: CF := 1
0002fd55: ZF := R0 = 0
0002fd59: NF := 63:63[R0]
0002fd5e: when ZF goto %0002b466
00045ca6: goto %0002fd62

0002fd62:
0002fd67: R0 := mem[R31 + 0x20, el]:u64
0002fd6e: R0 := mem[R0 + 0x40, el]:u64
0002fd73: R30 := 0x405134
0002fd75: call @strdup with return %0002fd77

0002fd77:
0002fd7d: mem := mem with [R31 + 0xC8, el]:u64 <- R0
00045ca7: goto %0002b466

0002b466:
0002b470: R0 := mem[R31 + 0x20, el]:u64
0002b475: VF := 0
0002b478: CF := 1
0002b47c: ZF := R0 = 0
0002b480: NF := 63:63[R0]
0002b486: when ZF goto %0002b484
00045ca8: goto %0002fceb

0002b484:
0002b48c: R30 := 0x405174
0002b48e: call @new_rr_data with return %0002b490

0002b490:
0002b496: mem := mem with [R31 + 0x78, el]:u64 <- R0
00045ca9: goto %0002b498

0002fceb:
0002fcf0: R0 := pad:64[mem[R31 + 0xE4, el]:u32]
0002fcf5: VF := 0
0002fcf8: CF := 1
0002fcfc: ZF := 31:0[R0] = 0
0002fd00: NF := 31:31[R0]
0002fd06: when ZF goto %0002fd04
00045caa: goto %0002fd2a

0002fd04:
0002fd0e: R0 := mem[R31 + 0x20, el]:u64
0002fd13: R30 := 0x405164
0002fd15: call @dup_rr_data with return %0002fd17

0002fd17:
0002fd1d: mem := mem with [R31 + 0x78, el]:u64 <- R0
00045cab: goto %0002fd1f

0002fd2a:
0002fd2f: R0 := mem[R31 + 0x20, el]:u64
0002fd37: mem := mem with [R31 + 0x78, el]:u64 <- R0
0002fd3b: goto %0002fd1f

0002fd1f:
0002fd24: mem := mem with [R31 + 0x20, el]:u64 <- 0
0002fd28: goto %0002b498

0002b498:
0002b49b: R30 := 0x40517C
0002b49d: call @new_rr_data with return %0002b49f

0002b49f:
0002b4a5: mem := mem with [R31 + 0x80, el]:u64 <- R0
0002b4ac: mem := mem with [R31 + 0xE4, el]:u32 <- 0
0002b4b3: mem := mem with [R31 + 0xC4, el]:u32 <- 0
0002b4ba: mem := mem with [R31 + 0xC0, el]:u32 <- 0
0002b4c1: mem := mem with [R31 + 0xEC, el]:u32 <- 0
0002b4c6: goto %0002b4c4

0002b4c4:
0002b4cc: R0 := pad:64[mem[R31 + 0xEC, el]:u32]
0002b4d2: #264 := 31:0[R0] - 1
0002b4d7: VF := extend:64[#264] <> extend:64[31:0[R0]] - 1
0002b4dc: CF := pad:64[#264] <> pad:64[31:0[R0]] + 0xFFFFFFFF
0002b4e0: ZF := #264 = 0
0002b4e4: NF := 31:31[#264]
0002b4ec: when ~(NF = VF & ~ZF) goto %0002b4ea
00045cac: goto %0002fc1a

0002fc1a:
0002fc1e: R0 := R31 + 0x78
0002fc23: R30 := 0x405D34
0002fc25: call @free_rr_data with return %0002fc27

0002fc27:
0002fc2b: R0 := R31 + 0x78
0002fc31: R0 := R0 + 8
0002fc36: R30 := 0x405D40
0002fc38: call @free_rr_data with return %0002fc3a

0002fc3a:
0002fc3f: R0 := pad:64[mem[R31 + 0xC0, el]:u32]
0002fc44: VF := 0
0002fc47: CF := 1
0002fc4b: ZF := 31:0[R0] = 0
0002fc4f: NF := 31:31[R0]
0002fc55: when ZF goto %0002fc53
00045cad: goto %0002fc5a

0002fc5a:
0002fc5f: R0 := pad:64[mem[R31 + 0xC4, el]:u32]
0002fc64: VF := 0
0002fc67: CF := 1
0002fc6b: ZF := 31:0[R0] = 0
0002fc6f: NF := 31:31[R0]
0002fc74: when ZF goto %0002fc53
00045cae: goto %0002fc78

0002fc78:
0002fc7d: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
0002fc82: R30 := 0x405D60
0002fc84: call @so_closed with return %0002fc86

0002fc86:
0002fc89: VF := 0
0002fc8c: CF := 1
0002fc90: ZF := 31:0[R0] = 0
0002fc94: NF := 31:31[R0]
0002fc99: when ZF <> 1 goto %0002fc53
00045caf: goto %0002fc9d

0002fc9d:
0002fca2: R0 := pad:64[mem[R31 + 0x68, el]:u32]
0002fca7: R30 := 0x405D70
0002fca9: call @so_closed with return %0002fcab

0002fcab:
0002fcae: VF := 0
0002fcb1: CF := 1
0002fcb5: ZF := 31:0[R0] = 0
0002fcb9: NF := 31:31[R0]
0002fcbe: when ZF <> 1 goto %0002fc53
00045cb0: goto %0002fcc2

0002fcc2:
0002fcc5: R0 := 0x430000
0002fccb: R0 := R0 + 0x3A8
0002fcd2: R0 := pad:64[mem[R0, el]:u32]
0002fcd7: VF := 0
0002fcda: CF := 1
0002fcde: ZF := 31:0[R0] = 0
0002fce2: NF := 31:31[R0]
0002fce7: when ZF goto %0002b466
00045cb1: goto %0002fc53

0002fc53:
00045cb2: goto %0002b9da

0002b4ea:
0002b4f4: R0 := extend:64[mem[R31 + 0xEC, el]:u32]
0002b4fa: R0 := 60:0[R0].0
0002b500: R1 := R31 + 0x78
0002b508: R0 := mem[R1 + R0, el]:u64
0002b50f: R0 := pad:64[mem[R0 + 0x1C, el]:u32]
0002b514: VF := 0
0002b517: CF := 1
0002b51b: ZF := 31:0[R0] = 0
0002b51f: NF := 31:31[R0]
0002b525: when ZF goto %0002b523
00045cb3: goto %0002fad2

0002fad2:
0002fad5: R0 := 0x430000
0002fadb: R0 := R0 + 0x390
0002fae2: R0 := pad:64[mem[R0, el]:u32]
0002fae7: VF := 0
0002faea: CF := 1
0002faee: ZF := 31:0[R0] = 0
0002faf2: NF := 31:31[R0]
0002faf8: when ZF goto %0002faf6
00045cb4: goto %0002fb93

0002fb93:
0002fb98: R0 := pad:64[mem[R31 + 0xEC, el]:u32]
0002fb9e: R0 := pad:64[31:0[R0] + 1]
0002fba5: R1 := pad:64[mem[R31 + 0x68, el]:u32]
0002fbac: R2 := pad:64[mem[R31 + 0x6C, el]:u32]
0002fbb3: R5 := pad:64[mem[R31 + 0xB8, el]:u32]
0002fbba: R4 := pad:64[mem[R31 + 0xBC, el]:u32]
0002fbc0: R3 := pad:64[31:0[R2]]
0002fbc6: R2 := pad:64[31:0[R1]]
0002fbcc: R1 := pad:64[31:0[R0]]
0002fbd1: R0 := 0x419000
0002fbd7: R0 := R0 + 0x158
0002fbdc: R30 := 0x4051F4
0002fbde: call @printf with return %0002fbe0

0002fbe0:
0002fbe5: R0 := extend:64[mem[R31 + 0xEC, el]:u32]
0002fbeb: R0 := 60:0[R0].0
0002fbf1: R1 := R31 + 0x98
0002fbf9: R0 := mem[R1 + R0, el]:u64
0002fc00: R0 := pad:64[mem[R0, el]:u32]
0002fc06: R1 := pad:64[31:0[R0]]
0002fc0b: R0 := 0x419000
0002fc11: R0 := R0 + 0x198
0002fc16: R30 := 0x405218
0002fc18: call @printf with return %0002faf6

0002faf6:
0002fb00: R0 := extend:64[mem[R31 + 0xEC, el]:u32]
0002fb06: R0 := 60:0[R0].0
0002fb0c: R1 := R31 + 0x98
0002fb14: R0 := mem[R1 + R0, el]:u64
0002fb1b: R2 := pad:64[mem[R0, el]:u32]
0002fb22: R0 := extend:64[mem[R31 + 0xEC, el]:u32]
0002fb28: R0 := 60:0[R0].0
0002fb2e: R1 := R31 + 0x78
0002fb36: R0 := mem[R1 + R0, el]:u64
0002fb3c: R1 := R0
0002fb42: R0 := pad:64[31:0[R2]]
0002fb47: R30 := 0x405248
0002fb49: call @headers_recv with return %0002fb4b

0002fb4b:
0002fb4e: VF := 0
0002fb51: CF := 1
0002fb55: ZF := 31:0[R0] = 0
0002fb59: NF := 31:31[R0]
0002fb5e: when ZF <> 1 goto %0002b523
00045cb5: goto %0002fb62

0002b523:
0002b52d: R0 := pad:64[mem[R31 + 0xEC, el]:u32]
0002b532: VF := 0
0002b535: CF := 1
0002b539: ZF := 31:0[R0] = 0
0002b53d: NF := 31:31[R0]
0002b543: when ZF <> 1 goto %0002b541
00045cb6: goto %0002f8e3

0002f8e3:
0002f8e8: R0 := mem[R31 + 0xC8, el]:u64
0002f8ed: VF := 0
0002f8f0: CF := 1
0002f8f4: ZF := R0 = 0
0002f8f8: NF := 63:63[R0]
0002f8fd: when ZF goto %0002b541
00045cb7: goto %0002f901

0002f901:
0002f906: R0 := mem[R31 + 0x78, el]:u64
0002f90d: R0 := mem[R0 + 0x40, el]:u64
0002f912: VF := 0
0002f915: CF := 1
0002f919: ZF := R0 = 0
0002f91d: NF := 63:63[R0]
0002f922: when ZF goto %0002b541
00045cb8: goto %0002f926

0002f926:
0002f92b: R0 := mem[R31 + 0x78, el]:u64
0002f932: R0 := mem[R0 + 0x40, el]:u64
0002f938: R1 := R0
0002f93f: R0 := mem[R31 + 0xC8, el]:u64
0002f944: R30 := 0x4052AC
0002f946: call @strcasecmp with return %0002f948

0002f948:
0002f94b: VF := 0
0002f94e: CF := 1
0002f952: ZF := 31:0[R0] = 0
0002f956: NF := 31:31[R0]
0002f95b: when ZF goto %0002b541
00045cb9: goto %0002f95f

0002b541:
0002b549: R0 := 0x430000
0002b54f: R0 := R0 + 0x390
0002b556: R0 := pad:64[mem[R0, el]:u32]
0002b55b: VF := 0
0002b55e: CF := 1
0002b562: ZF := 31:0[R0] = 0
0002b566: NF := 31:31[R0]
0002b56c: when ZF goto %0002b56a
00045cba: goto %0002f8ba

0002f8ba:
0002f8bf: R0 := extend:64[mem[R31 + 0xEC, el]:u32]
0002f8c5: R0 := 60:0[R0].0
0002f8cb: R1 := R31 + 0x78
0002f8d3: R0 := mem[R1 + R0, el]:u64
0002f8da: R0 := mem[R0 + 8, el]:u64
0002f8df: R30 := 0x4053A4
0002f8e1: call @hlist_dump with return %0002b56a

0002b56a:
0002b574: R0 := pad:64[mem[R31 + 0xEC, el]:u32]
0002b579: VF := 0
0002b57c: CF := 1
0002b580: ZF := 31:0[R0] = 0
0002b584: NF := 31:31[R0]
0002b58a: when ZF <> 1 goto %0002b588
00045cbb: goto %0002f846

0002f846:
0002f84b: R0 := mem[R31 + 0x78, el]:u64
0002f852: R0 := pad:64[mem[R0, el]:u32]
0002f857: VF := 0
0002f85a: CF := 1
0002f85e: ZF := 31:0[R0] = 0
0002f862: NF := 31:31[R0]
0002f867: when ZF goto %0002b588
00045cbc: goto %0002f86b

0002b588:
00045cbd: goto %0002b58f

0002f86b:
0002f870: R0 := mem[R31 + 0x78, el]:u64
0002f877: R1 := mem[R0 + 0x28, el]:u64
0002f87e: R0 := mem[R31 + 0x78, el]:u64
0002f885: R2 := mem[R0 + 0x30, el]:u64
0002f88b: R0 := R31 + 0x38
0002f891: R4 := R2
0002f897: R3 := R1
0002f89d: R2 := R0
0002f8a2: R0 := 0x419000
0002f8a8: R1 := R0 + 0x210
0002f8ad: R0 := 7
0002f8b2: R30 := 0x4053F0
0002f8b4: call @syslog with return %0002f8b6

0002f8b6:
0002f8b8: goto %0002b58f

0002b58f:
0002b594: R0 := pad:64[mem[R31 + 0xEC, el]:u32]
0002b599: VF := 0
0002b59c: CF := 1
0002b5a0: ZF := 31:0[R0] = 0
0002b5a4: NF := 31:31[R0]
0002b5aa: when ZF <> 1 goto %0002b5a8
00045cbe: goto %0002f489

0002f489:
0002f48e: R0 := mem[R31 + 0x78, el]:u64
0002f495: R0 := pad:64[mem[R0, el]:u32]
0002f49a: VF := 0
0002f49d: CF := 1
0002f4a1: ZF := 31:0[R0] = 0
0002f4a5: NF := 31:31[R0]
0002f4aa: when ZF goto %0002b5a8
00045cbf: goto %0002f4ae

0002f4ae:
0002f4b3: R0 := extend:64[mem[R31 + 0xEC, el]:u32]
0002f4b9: R0 := 60:0[R0].0
0002f4bf: R1 := R31 + 0x78
0002f4c7: R0 := mem[R1 + R0, el]:u64
0002f4ce: R3 := mem[R0 + 8, el]:u64
0002f4d5: R0 := mem[R31 + 0x70, el]:u64
0002f4db: R2 := R0
0002f4e0: R0 := 0x419000
0002f4e6: R1 := R0 + 0x220
0002f4ec: R0 := R3
0002f4f1: R30 := 0x405440
0002f4f3: call @http_parse_basic with return %0002f4f5

0002f4f5:
0002f4f8: VF := 0
0002f4fb: CF := 1
0002f4ff: ZF := 31:0[R0] = 0
0002f503: NF := 31:31[R0]
0002f50b: when ~(NF = VF & ~ZF) goto %0002f509
00045cc0: goto %0002f7da

0002f509:
0002f511: R0 := 0x430000
0002f517: R0 := R0 + 0x3A4
0002f51e: R0 := pad:64[mem[R0, el]:u32]
0002f523: VF := 0
0002f526: CF := 1
0002f52a: ZF := 31:0[R0] = 0
0002f52e: NF := 31:31[R0]
0002f534: when ZF goto %0002f532
00045cc1: goto %0002f700

0002f700:
0002f703: R0 := 0x430000
0002f709: R0 := R0 + 0x390
0002f710: R0 := pad:64[mem[R0, el]:u32]
0002f715: VF := 0
0002f718: CF := 1
0002f71c: ZF := 31:0[R0] = 0
0002f720: NF := 31:31[R0]
0002f726: when ZF goto %0002f724
00045cc2: goto %0002f7c8

0002f7c8:
0002f7cb: R0 := 0x419000
0002f7d1: R0 := R0 + 0x268
0002f7d6: R30 := 0x4054BC
0002f7d8: call @puts with return %0002f724

0002f724:
0002f72e: R0 := extend:64[mem[R31 + 0xEC, el]:u32]
0002f734: R0 := 60:0[R0].0
0002f73a: R1 := R31 + 0x78
0002f742: R0 := mem[R1 + R0, el]:u64
0002f749: R0 := mem[R0 + 0x48, el]:u64
0002f74e: R30 := 0x4054D4
0002f750: call @gen_407_page with return %0002f752

0002f752:
0002f758: mem := mem with [R31 + 0xA8, el]:u64 <- R0
0002f75f: R19 := pad:64[mem[R31 + 0x68, el]:u32]
0002f766: R0 := mem[R31 + 0xA8, el]:u64
0002f76b: R30 := 0x4054E4
0002f76d: call @strlen with return %0002f76f

0002f76f:
0002f773: R2 := R0
0002f77a: R1 := mem[R31 + 0xA8, el]:u64
0002f780: R0 := pad:64[31:0[R19]]
0002f785: R30 := 0x4054F4
0002f787: call @write_wrapper with return %0002f789

0002f789:
0002f78e: R0 := mem[R31 + 0xA8, el]:u64
0002f793: R30 := 0x4054FC
0002f795: call @free with return %0002f797

0002f797:
0002f79b: R0 := R31 + 0x78
0002f7a0: R30 := 0x405504
0002f7a2: call @free_rr_data with return %0002f7a4

0002f7a4:
0002f7a8: R0 := R31 + 0x78
0002f7ae: R0 := R0 + 8
0002f7b3: R30 := 0x405510
0002f7b5: call @free_rr_data with return %0002f7b7

0002f7b7:
0002f7ba: R0 := 0xFFFFFFFFFFFFFFFF
0002f7c2: mem := mem with [R31 + 0xD8, el]:u64 <- R0
0002f7c6: goto %0002b9da

0002f7da:
0002f7dd: R0 := 0x430000
0002f7e3: R0 := R0 + 0x390
0002f7ea: R0 := pad:64[mem[R0, el]:u32]
0002f7ef: VF := 0
0002f7f2: CF := 1
0002f7f6: ZF := 31:0[R0] = 0
0002f7fa: NF := 31:31[R0]
0002f7ff: when ZF goto %0002f532
00045cc3: goto %0002f803

0002f803:
0002f808: R0 := mem[R31 + 0x70, el]:u64
0002f80e: R1 := R0 + 0x32
0002f815: R0 := mem[R31 + 0x70, el]:u64
0002f81b: R2 := R0
0002f822: R0 := mem[R31 + 0x70, el]:u64
0002f828: R0 := R0 + 0x64
0002f82e: R3 := R0
0002f833: R0 := 0x419000
0002f839: R0 := R0 + 0x238
0002f83e: R30 := 0x405484
0002f840: call @printf with return %0002f842

0002f842:
0002f844: goto %0002f532

0002f532:
0002f53a: R0 := 0x430000
0002f540: R0 := R0 + 0x428
0002f547: R0 := mem[R0, el]:u64
0002f54f: mem := mem with [R31 + 0xD0, el]:u64 <- R0
0002f554: goto %0002f552

0002f552:
0002f55a: R0 := mem[R31 + 0xD0, el]:u64
0002f55f: VF := 0
0002f562: CF := 1
0002f566: ZF := R0 = 0
0002f56a: NF := 63:63[R0]
0002f570: when ZF <> 1 goto %0002f56e
00045cc4: goto %0002f5da

0002f5da:
0002f5df: R0 := mem[R31 + 0x78, el]:u64
0002f5e6: R0 := pad:64[mem[R0 + 0x24, el]:u32]
0002f5ec: #312 := 31:0[R0] - 0xA
0002f5f1: VF := extend:64[#312] <> extend:64[31:0[R0]] - 0xA
0002f5f6: CF := pad:64[#312] <> pad:64[31:0[R0]] + 0xFFFFFFF6
0002f5fa: ZF := #312 = 0
0002f5fe: NF := 31:31[#312]
0002f606: when ~(NF = VF & ~ZF) goto %0002f604
00045cc5: goto %0002f6b7

0002f6b7:
0002f6bc: R0 := mem[R31 + 0x78, el]:u64
0002f6c3: R4 := mem[R0 + 8, el]:u64
0002f6ca: R19 := mem[R31 + 0x78, el]:u64
0002f6cf: R3 := 1
0002f6d4: R0 := 0x419000
0002f6da: R2 := R0 + 0x1D8
0002f6df: R0 := 0x419000
0002f6e5: R1 := R0 + 0x1E8
0002f6eb: R0 := R4
0002f6f0: R30 := 0x4055B0
0002f6f2: call @hlist_mod with return %0002f6f4

0002f6f4:
0002f6fa: mem := mem with [R19 + 8, el]:u64 <- R0
0002f6fe: goto %0002f604

0002f604:
0002f60e: R0 := extend:64[mem[R31 + 0xEC, el]:u32]
0002f614: R0 := 60:0[R0].0
0002f61a: R1 := R31 + 0x78
0002f622: R0 := mem[R1 + R0, el]:u64
0002f629: R2 := mem[R0 + 8, el]:u64
0002f62e: R0 := 0x419000
0002f634: R1 := R0 + 0x220
0002f63a: R0 := R2
0002f63f: R30 := 0x405614
0002f641: call @hlist_get with return %0002f643

0002f643:
0002f646: VF := 0
0002f649: CF := 1
0002f64d: ZF := R0 = 0
0002f651: NF := 63:63[R0]
0002f657: when ZF <> 1 goto %0002f655
00045cc6: goto %0002b5a8

0002b5a8:
0002b5b2: R0 := pad:64[mem[R31 + 0xEC, el]:u32]
0002b5b7: VF := 0
0002b5ba: CF := 1
0002b5be: ZF := 31:0[R0] = 0
0002b5c2: NF := 31:31[R0]
0002b5c8: when ZF <> 1 goto %0002b5c6
00045cc7: goto %0002f2bf

0002f2bf:
0002f2c4: R0 := mem[R31 + 0x78, el]:u64
0002f2cb: R0 := pad:64[mem[R0, el]:u32]
0002f2d0: VF := 0
0002f2d3: CF := 1
0002f2d7: ZF := 31:0[R0] = 0
0002f2db: NF := 31:31[R0]
0002f2e0: when ZF goto %0002b5c6
00045cc8: goto %0002f2e4

0002f2e4:
0002f2e9: R0 := pad:64[mem[R31 + 0xBC, el]:u32]
0002f2ee: VF := 0
0002f2f1: CF := 1
0002f2f5: ZF := 31:0[R0] = 0
0002f2f9: NF := 31:31[R0]
0002f2fe: when ZF <> 1 goto %0002b5c6
00045cc9: goto %0002f302

0002f302:
0002f307: R0 := pad:64[mem[R31 + 0xB8, el]:u32]
0002f30c: VF := 0
0002f30f: CF := 1
0002f313: ZF := 31:0[R0] = 0
0002f317: NF := 31:31[R0]
0002f31c: when ZF <> 1 goto %0002b5c6
00045cca: goto %0002f320

0002f320:
0002f325: R0 := mem[R31 + 0x88, el]:u64
0002f32c: R1 := mem[R31 + 0x78, el]:u64
0002f333: R2 := mem[R31 + 0x80, el]:u64
0002f33a: R3 := mem[R31 + 0x70, el]:u64
0002f33f: R30 := 0x405664
0002f341: call @proxy_authenticate with return %0002f343

0002f343:
0002f346: VF := 0
0002f349: CF := 1
0002f34d: ZF := 31:0[R0] = 0
0002f351: NF := 31:31[R0]
0002f357: when ZF <> 1 goto %0002f355
00045ccb: goto %0002f41d

0002f355:
0002f35f: R0 := mem[R31 + 0x80, el]:u64
0002f366: R0 := pad:64[mem[R0 + 0x10, el]:u32]
0002f36c: #310 := 31:0[R0] - 0x197
0002f371: VF := extend:64[#310] <> extend:64[31:0[R0]] - 0x197
0002f376: CF := pad:64[#310] <> pad:64[31:0[R0]] + 0xFFFFFE69
0002f37a: ZF := #310 = 0
0002f37e: NF := 31:31[#310]
0002f384: when ZF goto %0002f382
00045ccc: goto %0002f395

0002f382:
0002f38c: R0 := mem[R31 + 0x80, el]:u64
0002f391: R30 := 0x405708
0002f393: call @reset_rr_data with return %0002b5c6

0002b5c6:
0002b5d0: R0 := pad:64[mem[R31 + 0xEC, el]:u32]
0002b5d6: #265 := 31:0[R0] - 1
0002b5db: VF := extend:64[#265] <> extend:64[31:0[R0]] - 1
0002b5e0: CF := pad:64[#265] <> pad:64[31:0[R0]] + 0xFFFFFFFF
0002b5e4: ZF := #265 = 0
0002b5e8: NF := 31:31[#265]
0002b5ee: when ZF <> 1 goto %0002b5ec
00045ccd: goto %0002f1a0

0002f1a0:
0002f1a5: R0 := mem[R31 + 0x80, el]:u64
0002f1ac: R0 := pad:64[mem[R0 + 0x10, el]:u32]
0002f1b2: #309 := 31:0[R0] - 0x197
0002f1b7: VF := extend:64[#309] <> extend:64[31:0[R0]] - 0x197
0002f1bc: CF := pad:64[#309] <> pad:64[31:0[R0]] + 0xFFFFFE69
0002f1c0: ZF := #309 = 0
0002f1c4: NF := 31:31[#309]
0002f1c9: when ZF <> 1 goto %0002b5ec
00045cce: goto %0002f1cd

0002f1cd:
0002f1d2: R0 := pad:64[mem[R31 + 0xB4, el]:u32]
0002f1d7: VF := 0
0002f1da: CF := 1
0002f1de: ZF := 31:0[R0] = 0
0002f1e2: NF := 31:31[R0]
0002f1e8: when ZF <> 1 goto %0002f1e6
00045ccf: goto %0002f2a1

0002f2a1:
0002f2a6: R0 := pad:64[mem[R31 + 0xB8, el]:u32]
0002f2ab: VF := 0
0002f2ae: CF := 1
0002f2b2: ZF := 31:0[R0] = 0
0002f2b6: NF := 31:31[R0]
0002f2bb: when ZF goto %0002b5ec
00045cd0: goto %0002f1e6

0002b5ec:
0002b5f6: R0 := pad:64[mem[R31 + 0xEC, el]:u32]
0002b5fc: #266 := 31:0[R0] - 1
0002b601: VF := extend:64[#266] <> extend:64[31:0[R0]] - 1
0002b606: CF := pad:64[#266] <> pad:64[31:0[R0]] + 0xFFFFFFFF
0002b60a: ZF := #266 = 0
0002b60e: NF := 31:31[#266]
0002b614: when ZF <> 1 goto %0002b612
00045cd1: goto %0002f148

0002f148:
0002f14d: R0 := pad:64[mem[R31 + 0xB8, el]:u32]
0002f152: VF := 0
0002f155: CF := 1
0002f159: ZF := 31:0[R0] = 0
0002f15d: NF := 31:31[R0]
0002f162: when ZF <> 1 goto %0002b612
00045cd2: goto %0002f166

0002f166:
0002f16b: R0 := mem[R31 + 0x80, el]:u64
0002f172: R0 := pad:64[mem[R0 + 0x10, el]:u32]
0002f178: #308 := 31:0[R0] - 0x197
0002f17d: VF := extend:64[#308] <> extend:64[31:0[R0]] - 0x197
0002f182: CF := pad:64[#308] <> pad:64[31:0[R0]] + 0xFFFFFE69
0002f186: ZF := #308 = 0
0002f18a: NF := 31:31[#308]
0002f18f: when ZF goto %0002b612
00045cd3: goto %0002f193

0002f193:
0002f196: R0 := 1
0002f19e: mem := mem with [R31 + 0xBC, el]:u32 <- 31:0[R0]
00045cd4: goto %0002b612

0002b612:
0002b61a: R0 := 0x7FFF
0002b622: mem := mem with [R31 + 0xE8, el]:u32 <- 31:0[R0]
0002b629: R0 := pad:64[mem[R31 + 0xEC, el]:u32]
0002b62f: #267 := 31:0[R0] - 1
0002b634: VF := extend:64[#267] <> extend:64[31:0[R0]] - 1
0002b639: CF := pad:64[#267] <> pad:64[31:0[R0]] + 0xFFFFFFFF
0002b63d: ZF := #267 = 0
0002b641: NF := 31:31[#267]
0002b647: when ZF <> 1 goto %0002b645
00045cd5: goto %0002d836

0002d836:
0002d839: R0 := 0x430000
0002d83f: R0 := R0 + 0x3AC
0002d846: R0 := pad:64[mem[R0, el]:u32]
0002d84b: VF := 0
0002d84e: CF := 1
0002d852: ZF := 31:0[R0] = 0
0002d856: NF := 31:31[R0]
0002d85b: when ZF goto %0002b645
00045cd6: goto %0002d85f

0002d85f:
0002d864: R6 := mem[R31 + 0x78, el]:u64
0002d86b: R7 := mem[R31 + 0x80, el]:u64
0002d872: R2 := mem[R31 + 0x70, el]:u64
0002d879: R0 := extend:64[mem[R31 + 0xEC, el]:u32]
0002d87f: R0 := 60:0[R0].0
0002d885: R1 := R31 + 0x88
0002d88d: R0 := mem[R1 + R0, el]:u64
0002d894: R3 := pad:64[mem[R0, el]:u32]
0002d89b: R0 := extend:64[mem[R31 + 0xEC, el]:u32]
0002d8a1: R0 := 60:0[R0].0
0002d8a7: R1 := R31 + 0x98
0002d8af: R1 := mem[R1 + R0, el]:u64
0002d8b4: R0 := 0x430000
0002d8ba: R0 := R0 + 0x3B0
0002d8c1: R0 := mem[R0, el]:u64
0002d8c7: R5 := R0
0002d8cd: R4 := R1
0002d8d3: R1 := R7
0002d8d9: R0 := R6
0002d8de: R30 := 0x405848
0002d8e1: call @scanner_hook with return %0002f140

0002f140:
0002f146: mem := mem with [R31 + 0xE8, el]:u32 <- 31:0[R0]
00045cd7: goto %0002b645

0002b645:
0002b64f: R0 := pad:64[mem[R31 + 0xEC, el]:u32]
0002b655: #268 := 31:0[R0] - 1
0002b65a: VF := extend:64[#268] <> extend:64[31:0[R0]] - 1
0002b65f: CF := pad:64[#268] <> pad:64[31:0[R0]] + 0xFFFFFFFF
0002b663: ZF := #268 = 0
0002b667: NF := 31:31[#268]
0002b66d: when ZF <> 1 goto %0002b66b
00045cd8: goto %0002d5c9

0002d5c9:
0002d5ce: R0 := mem[R31 + 0x80, el]:u64
0002d5d5: R3 := mem[R0 + 8, el]:u64
0002d5da: R0 := 0x419000
0002d5e0: R2 := R0 + 0x1D8
0002d5e5: R0 := 0x419000
0002d5eb: R1 := R0 + 0x200
0002d5f1: R0 := R3
0002d5f6: R30 := 0x405878
0002d5f8: call @hlist_subcmp with return %0002d5fa

0002d5fa:
0002d600: mem := mem with [R31 + 0xC0, el]:u32 <- 31:0[R0]
0002d607: R0 := pad:64[mem[R31 + 0xC0, el]:u32]
0002d60c: VF := 0
0002d60f: CF := 1
0002d613: ZF := 31:0[R0] = 0
0002d617: NF := 31:31[R0]
0002d61d: when ZF <> 1 goto %0002d61b
00045cd9: goto %0002d740

0002d740:
0002d745: R0 := mem[R31 + 0x78, el]:u64
0002d74a: VF := 0
0002d74d: CF := 1
0002d751: ZF := R0 = 0
0002d755: NF := 63:63[R0]
0002d75b: when ZF goto %0002d759
00045cda: goto %0002d7a7

0002d7a7:
0002d7ac: R0 := mem[R31 + 0x78, el]:u64
0002d7b3: R0 := pad:64[mem[R0, el]:u32]
0002d7b8: VF := 0
0002d7bb: CF := 1
0002d7bf: ZF := 31:0[R0] = 0
0002d7c3: NF := 31:31[R0]
0002d7c8: when ZF goto %0002d759
00045cdb: goto %0002d7cc

0002d7cc:
0002d7d1: R0 := mem[R31 + 0x78, el]:u64
0002d7d8: R0 := mem[R0 + 0x28, el]:u64
0002d7de: R1 := R0
0002d7e3: R0 := 0x419000
0002d7e9: R0 := R0 + 0x320
0002d7ee: R30 := 0x4058BC
0002d7f0: call @strcasecmp with return %0002d7f2

0002d7f2:
0002d7f5: VF := 0
0002d7f8: CF := 1
0002d7fc: ZF := 31:0[R0] = 0
0002d800: NF := 31:31[R0]
0002d805: when ZF <> 1 goto %0002d759
00045cdc: goto %0002d809

0002d809:
0002d80e: R0 := mem[R31 + 0x80, el]:u64
0002d815: R0 := pad:64[mem[R0 + 0x10, el]:u32]
0002d81b: #290 := 31:0[R0] - 0xC8
0002d820: VF := extend:64[#290] <> extend:64[31:0[R0]] - 0xC8
0002d825: CF := pad:64[#290] <> pad:64[31:0[R0]] + 0xFFFFFF38
0002d829: ZF := #290 = 0
0002d82d: NF := 31:31[#290]
0002d832: when ZF goto %0002d61b
00045cdd: goto %0002d759

0002d759:
0002d763: R0 := mem[R31 + 0x80, el]:u64
0002d76a: R4 := mem[R0 + 8, el]:u64
0002d771: R19 := mem[R31 + 0x80, el]:u64
0002d776: R3 := 1
0002d77b: R0 := 0x419000
0002d781: R2 := R0 + 0x328
0002d786: R0 := 0x419000
0002d78c: R1 := R0 + 0x200
0002d792: R0 := R4
0002d797: R30 := 0x4058FC
0002d799: call @hlist_mod with return %0002d79b

0002d79b:
0002d7a1: mem := mem with [R19 + 8, el]:u64 <- R0
0002d7a5: goto %0002d61b

0002d61b:
0002d625: R0 := extend:64[mem[R31 + 0xEC, el]:u32]
0002d62b: R0 := 60:0[R0].0
0002d631: R1 := R31 + 0x78
0002d639: R0 := mem[R1 + R0, el]:u64
0002d640: R2 := mem[R0 + 8, el]:u64
0002d645: R0 := 0x419000
0002d64b: R1 := R0 + 0x330
0002d651: R0 := R2
0002d656: R30 := 0x405960
0002d658: call @hlist_get with return %0002d65a

0002d65a:
0002d65d: VF := 0
0002d660: CF := 1
0002d664: ZF := R0 = 0
0002d668: NF := 63:63[R0]
0002d66e: when ZF <> 1 goto %0002d66c
00045cde: goto %0002d6ce

0002d6ce:
0002d6d3: R0 := mem[R31 + 0x80, el]:u64
0002d6da: R0 := pad:64[mem[R0 + 0x10, el]:u32]
0002d6e0: #289 := 31:0[R0] - 0x197
0002d6e5: VF := extend:64[#289] <> extend:64[31:0[R0]] - 0x197
0002d6ea: CF := pad:64[#289] <> pad:64[31:0[R0]] + 0xFFFFFE69
0002d6ee: ZF := #289 = 0
0002d6f2: NF := 31:31[#289]
0002d6f7: when ZF <> 1 goto %0002b66b
00045cdf: goto %0002d6fb

0002d6fb:
0002d700: R0 := mem[R31 + 0x80, el]:u64
0002d707: R4 := mem[R0 + 8, el]:u64
0002d70e: R19 := mem[R31 + 0x80, el]:u64
0002d713: R3 := 1
0002d718: R0 := 0x419000
0002d71e: R2 := R0 + 0x348
0002d723: R0 := 0x419000
0002d729: R1 := R0 + 0x330
0002d72f: R0 := R4
0002d734: R30 := 0x4059A0
0002d736: call @hlist_mod with return %0002d738

0002d738:
0002d73e: mem := mem with [R19 + 8, el]:u64 <- R0
00045ce0: goto %0002b66b

0002b66b:
0002b675: R0 := pad:64[mem[R31 + 0xE8, el]:u32]
0002b67b: R0 := pad:64[0:0[R0]]
0002b680: VF := 0
0002b683: CF := 1
0002b687: ZF := 31:0[R0] = 0
0002b68b: NF := 31:31[R0]
0002b691: when ZF goto %0002b68f
00045ce1: goto %0002d403

0002d403:
0002d406: R0 := 0x430000
0002d40c: R0 := R0 + 0x390
0002d413: R0 := pad:64[mem[R0, el]:u32]
0002d418: VF := 0
0002d41b: CF := 1
0002d41f: ZF := 31:0[R0] = 0
0002d423: NF := 31:31[R0]
0002d429: when ZF goto %0002d427
00045ce2: goto %0002d4c4

0002d4c4:
0002d4c9: R0 := extend:64[mem[R31 + 0xEC, el]:u32]
0002d4cf: R0 := 60:0[R0].0
0002d4d5: R1 := R31 + 0x88
0002d4dd: R0 := mem[R1 + R0, el]:u64
0002d4e4: R0 := pad:64[mem[R0, el]:u32]
0002d4ea: R1 := pad:64[31:0[R0]]
0002d4ef: R0 := 0x419000
0002d4f5: R0 := R0 + 0x388
0002d4fa: R30 := 0x4059EC
0002d4fc: call @printf with return %0002d4fe

0002d4fe:
0002d503: R0 := pad:64[mem[R31 + 0xEC, el]:u32]
0002d508: VF := 0
0002d50b: CF := 1
0002d50f: ZF := 31:0[R0] = 0
0002d513: NF := 31:31[R0]
0002d518: when ZF <> 1 goto %0002d427
00045ce3: goto %0002d51c

0002d51c:
0002d521: R0 := extend:64[mem[R31 + 0xEC, el]:u32]
0002d527: R0 := 60:0[R0].0
0002d52d: R1 := R31 + 0x78
0002d535: R0 := mem[R1 + R0, el]:u64
0002d53c: R4 := mem[R0 + 0x28, el]:u64
0002d543: R0 := extend:64[mem[R31 + 0xEC, el]:u32]
0002d549: R0 := 60:0[R0].0
0002d54f: R1 := R31 + 0x78
0002d557: R0 := mem[R1 + R0, el]:u64
0002d55e: R2 := mem[R0 + 0x30, el]:u64
0002d565: R0 := extend:64[mem[R31 + 0xEC, el]:u32]
0002d56b: R0 := 60:0[R0].0
0002d571: R1 := R31 + 0x78
0002d579: R0 := mem[R1 + R0, el]:u64
0002d580: R0 := mem[R0 + 0x48, el]:u64
0002d586: R3 := R0
0002d58c: R1 := R4
0002d591: R0 := 0x419000
0002d597: R0 := R0 + 0x3A8
0002d59c: R30 := 0x405A48
0002d59e: call @printf with return %0002d5a0

0002d5a0:
0002d5a5: R0 := extend:64[mem[R31 + 0xEC, el]:u32]
0002d5ab: R0 := 60:0[R0].0
0002d5b1: R1 := R31 + 0x78
0002d5b9: R0 := mem[R1 + R0, el]:u64
0002d5c0: R0 := mem[R0 + 8, el]:u64
0002d5c5: R30 := 0x405A60
0002d5c7: call @hlist_dump with return %0002d427

0002d427:
0002d431: R0 := extend:64[mem[R31 + 0xEC, el]:u32]
0002d437: R0 := 60:0[R0].0
0002d43d: R1 := R31 + 0x88
0002d445: R0 := mem[R1 + R0, el]:u64
0002d44c: R2 := pad:64[mem[R0, el]:u32]
0002d453: R0 := extend:64[mem[R31 + 0xEC, el]:u32]
0002d459: R0 := 60:0[R0].0
0002d45f: R1 := R31 + 0x78
0002d467: R0 := mem[R1 + R0, el]:u64
0002d46d: R1 := R0
0002d473: R0 := pad:64[31:0[R2]]
0002d478: R30 := 0x405A90
0002d47a: call @headers_send with return %0002d47c

0002d47c:
0002d47f: VF := 0
0002d482: CF := 1
0002d486: ZF := 31:0[R0] = 0
0002d48a: NF := 31:31[R0]
0002d48f: when ZF <> 1 goto %0002b68f
00045ce4: goto %0002d493

0002b68f:
0002b699: R0 := pad:64[mem[R31 + 0xEC, el]:u32]
0002b69f: #269 := 31:0[R0] - 1
0002b6a4: VF := extend:64[#269] <> extend:64[31:0[R0]] - 1
0002b6a9: CF := pad:64[#269] <> pad:64[31:0[R0]] + 0xFFFFFFFF
0002b6ad: ZF := #269 = 0
0002b6b1: NF := 31:31[#269]
0002b6b7: when ZF <> 1 goto %0002b6b5
00045ce5: goto %0002d2d5

0002d2d5:
0002d2da: R0 := mem[R31 + 0x78, el]:u64
0002d2df: VF := 0
0002d2e2: CF := 1
0002d2e6: ZF := R0 = 0
0002d2ea: NF := 63:63[R0]
0002d2ef: when ZF goto %0002b6b5
00045ce6: goto %0002d2f3

0002d2f3:
0002d2f8: R0 := mem[R31 + 0x78, el]:u64
0002d2ff: R0 := pad:64[mem[R0, el]:u32]
0002d304: VF := 0
0002d307: CF := 1
0002d30b: ZF := 31:0[R0] = 0
0002d30f: NF := 31:31[R0]
0002d314: when ZF goto %0002b6b5
00045ce7: goto %0002d318

0002d318:
0002d31d: R0 := mem[R31 + 0x78, el]:u64
0002d324: R0 := mem[R0 + 0x28, el]:u64
0002d32a: R1 := R0
0002d32f: R0 := 0x419000
0002d335: R0 := R0 + 0x320
0002d33a: R30 := 0x405AF8
0002d33c: call @strcasecmp with return %0002d33e

0002d33e:
0002d341: VF := 0
0002d344: CF := 1
0002d348: ZF := 31:0[R0] = 0
0002d34c: NF := 31:31[R0]
0002d351: when ZF <> 1 goto %0002b6b5
00045ce8: goto %0002d355

0002d355:
0002d35a: R0 := mem[R31 + 0x80, el]:u64
0002d361: R0 := pad:64[mem[R0 + 0x10, el]:u32]
0002d367: #288 := 31:0[R0] - 0xC8
0002d36c: VF := extend:64[#288] <> extend:64[31:0[R0]] - 0xC8
0002d371: CF := pad:64[#288] <> pad:64[31:0[R0]] + 0xFFFFFF38
0002d375: ZF := #288 = 0
0002d379: NF := 31:31[#288]
0002d37e: when ZF <> 1 goto %0002b6b5
00045ce9: goto %0002d382

0002b6b5:
0002b6bf: R0 := pad:64[mem[R31 + 0xE8, el]:u32]
0002b6c5: R0 := pad:64[1:1[R0].0]
0002b6ca: VF := 0
0002b6cd: CF := 1
0002b6d1: ZF := 31:0[R0] = 0
0002b6d5: NF := 31:31[R0]
0002b6db: when ZF goto %0002b6d9
00045cea: goto %0002b924

0002b924:
0002b929: R0 := extend:64[mem[R31 + 0xEC, el]:u32]
0002b92f: R0 := 60:0[R0].0
0002b935: R1 := R31 + 0x88
0002b93d: R0 := mem[R1 + R0, el]:u64
0002b944: R4 := pad:64[mem[R0, el]:u32]
0002b94b: R0 := extend:64[mem[R31 + 0xEC, el]:u32]
0002b951: R0 := 60:0[R0].0
0002b957: R1 := R31 + 0x98
0002b95f: R0 := mem[R1 + R0, el]:u64
0002b966: R0 := pad:64[mem[R0, el]:u32]
0002b96d: R1 := mem[R31 + 0x78, el]:u64
0002b974: R2 := mem[R31 + 0x80, el]:u64
0002b97a: R3 := R2
0002b980: R2 := R1
0002b986: R1 := pad:64[31:0[R0]]
0002b98c: R0 := pad:64[31:0[R4]]
0002b991: R30 := 0x405BB0
0002b993: call @http_body_send with return %0002b995

0002b995:
0002b998: VF := 0
0002b99b: CF := 1
0002b99f: ZF := 31:0[R0] = 0
0002b9a3: NF := 31:31[R0]
0002b9a8: when ZF <> 1 goto %0002b6d9
00045ceb: goto %0002b9ac

0002b6d9:
0002b6e3: R0 := pad:64[mem[R31 + 0xEC, el]:u32]
0002b6e9: #270 := 31:0[R0] - 1
0002b6ee: VF := extend:64[#270] <> extend:64[31:0[R0]] - 1
0002b6f3: CF := pad:64[#270] <> pad:64[31:0[R0]] + 0xFFFFFFFF
0002b6f7: ZF := #270 = 0
0002b6fb: NF := 31:31[#270]
0002b701: when ZF <> 1 goto %0002b6ff
00045cec: goto %0002b719

0002b719:
0002b71e: R0 := mem[R31 + 0x80, el]:u64
0002b725: R3 := mem[R0 + 8, el]:u64
0002b72a: R0 := 0x419000
0002b730: R2 := R0 + 0x1D8
0002b735: R0 := 0x419000
0002b73b: R1 := R0 + 0x1E8
0002b741: R0 := R3
0002b746: R30 := 0x405C04
0002b748: call @hlist_subcmp with return %0002b74a

0002b74a:
0002b74d: VF := 0
0002b750: CF := 1
0002b754: ZF := 31:0[R0] = 0
0002b758: NF := 31:31[R0]
0002b75e: when ZF goto %0002b75c
00045ced: goto %0002b8ec

0002b8ec:
0002b8f1: R0 := mem[R31 + 0x78, el]:u64
0002b8f8: R0 := pad:64[mem[R0 + 0x24, el]:u32]
0002b8fe: #271 := 31:0[R0] - 0xA
0002b903: VF := extend:64[#271] <> extend:64[31:0[R0]] - 0xA
0002b908: CF := pad:64[#271] <> pad:64[31:0[R0]] + 0xFFFFFFF6
0002b90c: ZF := #271 = 0
0002b910: NF := 31:31[#271]
0002b917: when ~(NF = VF & ~ZF) goto %0002b75c
00045cee: goto %0002b91b

0002b75c:
0002b764: R0 := 0
00045cef: goto %0002b766

0002b91b:
0002b91e: R0 := 1
0002b922: goto %0002b766

0002b766:
0002b76c: mem := mem with [R31 + 0xC4, el]:u32 <- 31:0[R0]
0002b773: R0 := pad:64[mem[R31 + 0xC4, el]:u32]
0002b778: VF := 0
0002b77b: CF := 1
0002b77f: ZF := 31:0[R0] = 0
0002b783: NF := 31:31[R0]
0002b789: when ZF goto %0002b787
00045cf0: goto %0002b85e

0002b787:
0002b791: R0 := mem[R31 + 0x80, el]:u64
0002b798: R4 := mem[R0 + 8, el]:u64
0002b79f: R19 := mem[R31 + 0x80, el]:u64
0002b7a4: R3 := 1
0002b7a9: R0 := 0x419000
0002b7af: R2 := R0 + 0x328
0002b7b4: R0 := 0x419000
0002b7ba: R1 := R0 + 0x1E8
0002b7c0: R0 := R4
0002b7c5: R30 := 0x405CBC
0002b7c7: call @hlist_mod with return %0002b7c9

0002b7c9:
0002b7cf: mem := mem with [R19 + 8, el]:u64 <- R0
0002b7d6: R0 := mem[R31 + 0x80, el]:u64
0002b7dd: R4 := mem[R0 + 8, el]:u64
0002b7e4: R19 := mem[R31 + 0x80, el]:u64
0002b7e9: R3 := 1
0002b7ee: R0 := 0x419000
0002b7f4: R2 := R0 + 0x328
0002b7f9: R0 := 0x419000
0002b7ff: R1 := R0 + 0x200
0002b805: R0 := R4
0002b80a: R30 := 0x405CE8
0002b80c: call @hlist_mod with return %0002b80e

0002b80e:
0002b814: mem := mem with [R19 + 8, el]:u64 <- R0
0002b819: R0 := 0x430000
0002b81f: R0 := R0 + 0x390
0002b826: R0 := pad:64[mem[R0, el]:u32]
0002b82b: VF := 0
0002b82e: CF := 1
0002b832: ZF := 31:0[R0] = 0
0002b836: NF := 31:31[R0]
0002b83c: when ZF goto %0002b83a
00045cf1: goto %0002b84c

0002b84c:
0002b84f: R0 := 0x419000
0002b855: R0 := R0 + 0x3E0
0002b85a: R30 := 0x405D0C
0002b85c: call @puts with return %0002b83a

0002b83a:
0002b842: R0 := 0xFFFFFFFFFFFFFFFF
0002b84a: mem := mem with [R31 + 0xD8, el]:u64 <- R0
00045cf2: goto %0002b6ff

0002b85e:
0002b863: R0 := mem[R31 + 0x80, el]:u64
0002b86a: R4 := mem[R0 + 8, el]:u64
0002b871: R19 := mem[R31 + 0x80, el]:u64
0002b876: R3 := 1
0002b87b: R0 := 0x419000
0002b881: R2 := R0 + 0x1D8
0002b886: R0 := 0x419000
0002b88c: R1 := R0 + 0x1E8
0002b892: R0 := R4
0002b897: R30 := 0x405C60
0002b899: call @hlist_mod with return %0002b89b

0002b89b:
0002b8a1: mem := mem with [R19 + 8, el]:u64 <- R0
0002b8a8: R0 := mem[R31 + 0x80, el]:u64
0002b8af: R4 := mem[R0 + 8, el]:u64
0002b8b6: R19 := mem[R31 + 0x80, el]:u64
0002b8bb: R3 := 1
0002b8c0: R0 := 0x419000
0002b8c6: R2 := R0 + 0x1D8
0002b8cb: R0 := 0x419000
0002b8d1: R1 := R0 + 0x200
0002b8d7: R0 := R4
0002b8dc: R30 := 0x405C8C
0002b8de: call @hlist_mod with return %0002b8e0

0002b8e0:
0002b8e6: mem := mem with [R19 + 8, el]:u64 <- R0
0002b8ea: goto %0002b6ff

0002b6ff:
0002b709: R0 := pad:64[mem[R31 + 0xEC, el]:u32]
0002b70f: R0 := pad:64[31:0[R0] + 1]
0002b717: mem := mem with [R31 + 0xEC, el]:u32 <- 31:0[R0]
00045cf3: goto %0002b4c4

0002b9ac:
0002b9b0: R0 := R31 + 0x78
0002b9b5: R30 := 0x405BC0
0002b9b7: call @free_rr_data with return %0002b9b9

0002b9b9:
0002b9bd: R0 := R31 + 0x78
0002b9c3: R0 := R0 + 8
0002b9c8: R30 := 0x405BCC
0002b9ca: call @free_rr_data with return %0002b9cc

0002b9cc:
0002b9cf: R0 := 0xFFFFFFFFFFFFFFFF
0002b9d7: mem := mem with [R31 + 0xD8, el]:u64 <- R0
0002b9dc: goto %0002b9da

0002d382:
0002d385: R0 := 0x430000
0002d38b: R0 := R0 + 0x390
0002d392: R0 := pad:64[mem[R0, el]:u32]
0002d397: VF := 0
0002d39a: CF := 1
0002d39e: ZF := 31:0[R0] = 0
0002d3a2: NF := 31:31[R0]
0002d3a8: when ZF goto %0002d3a6
00045cf4: goto %0002d3f1

0002d3f1:
0002d3f4: R0 := 0x419000
0002d3fa: R0 := R0 + 0x3B8
0002d3ff: R30 := 0x405B30
0002d401: call @puts with return %0002d3a6

0002d3a6:
0002d3b0: R0 := pad:64[mem[R31 + 0x68, el]:u32]
0002d3b7: R1 := pad:64[mem[R31 + 0x6C, el]:u32]
0002d3bc: R30 := 0x405B3C
0002d3be: call @tunnel with return %0002d3c0

0002d3c0:
0002d3c4: R0 := R31 + 0x78
0002d3c9: R30 := 0x405B44
0002d3cb: call @free_rr_data with return %0002d3cd

0002d3cd:
0002d3d1: R0 := R31 + 0x78
0002d3d7: R0 := R0 + 8
0002d3dc: R30 := 0x405B50
0002d3de: call @free_rr_data with return %0002d3e0

0002d3e0:
0002d3e3: R0 := 0xFFFFFFFFFFFFFFFF
0002d3eb: mem := mem with [R31 + 0xD8, el]:u64 <- R0
0002d3ef: goto %0002b9da

0002d493:
0002d497: R0 := R31 + 0x78
0002d49c: R30 := 0x405AA0
0002d49e: call @free_rr_data with return %0002d4a0

0002d4a0:
0002d4a4: R0 := R31 + 0x78
0002d4aa: R0 := R0 + 8
0002d4af: R30 := 0x405AAC
0002d4b1: call @free_rr_data with return %0002d4b3

0002d4b3:
0002d4b6: R0 := 0xFFFFFFFFFFFFFFFF
0002d4be: mem := mem with [R31 + 0xD8, el]:u64 <- R0
0002d4c2: goto %0002b9da

0002d66c:
0002d676: R0 := extend:64[mem[R31 + 0xEC, el]:u32]
0002d67c: R0 := 60:0[R0].0
0002d682: R1 := R31 + 0x78
0002d68a: R0 := mem[R1 + R0, el]:u64
0002d691: R2 := mem[R0 + 8, el]:u64
0002d698: R0 := extend:64[mem[R31 + 0xEC, el]:u32]
0002d69e: R0 := 60:0[R0].0
0002d6a4: R1 := R31 + 0x78
0002d6ac: R19 := mem[R1 + R0, el]:u64
0002d6b1: R0 := 0x419000
0002d6b7: R1 := R0 + 0x330
0002d6bd: R0 := R2
0002d6c2: R30 := 0x405938
0002d6c4: call @hlist_del with return %0002d6c6

0002d6c6:
0002d6cc: mem := mem with [R19 + 8, el]:u64 <- R0
00045cf5: goto %0002d61b

0002f1e6:
0002f1ee: R0 := 0x430000
0002f1f4: R0 := R0 + 0x390
0002f1fb: R0 := pad:64[mem[R0, el]:u32]
0002f200: VF := 0
0002f203: CF := 1
0002f207: ZF := 31:0[R0] = 0
0002f20b: NF := 31:31[R0]
0002f211: when ZF goto %0002f20f
00045cf6: goto %0002f281

0002f281:
0002f286: R2 := pad:64[mem[R31 + 0xB8, el]:u32]
0002f28d: R1 := pad:64[mem[R31 + 0xB4, el]:u32]
0002f292: R0 := 0x419000
0002f298: R0 := R0 + 0x2E8
0002f29d: R30 := 0x405764
0002f29f: call @printf with return %0002f20f

0002f20f:
0002f219: R0 := mem[R31 + 0x70, el]:u64
0002f21e: VF := 0
0002f221: CF := 1
0002f225: ZF := R0 = 0
0002f229: NF := 63:63[R0]
0002f22f: when ZF goto %0002f22d
00045cf7: goto %0002f273

0002f273:
0002f278: R0 := mem[R31 + 0x70, el]:u64
0002f27d: R30 := 0x405778
0002f27f: call @free with return %0002f22d

0002f22d:
0002f235: R0 := 1
0002f23d: mem := mem with [R31 + 0xE4, el]:u32 <- 31:0[R0]
0002f244: R0 := mem[R31 + 0x78, el]:u64
0002f24c: mem := mem with [R31 + 0x20, el]:u64 <- R0
0002f252: R0 := R31 + 0x78
0002f258: R0 := R0 + 8
0002f25d: R30 := 0x405794
0002f25f: call @free_rr_data with return %0002f261

0002f261:
0002f266: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
0002f26b: R30 := 0x40579C
0002f26d: call @close with return %0002f26f

0002f26f:
0002f271: goto %0002b2a6

0002f395:
0002f398: R0 := 0x430000
0002f39e: R0 := R0 + 0x390
0002f3a5: R0 := pad:64[mem[R0, el]:u32]
0002f3aa: VF := 0
0002f3ad: CF := 1
0002f3b1: ZF := 31:0[R0] = 0
0002f3b5: NF := 31:31[R0]
0002f3bb: when ZF goto %0002f3b9
00045cf8: goto %0002f40b

0002f40b:
0002f40e: R0 := 0x419000
0002f414: R0 := R0 + 0x2B8
0002f419: R30 := 0x4056DC
0002f41b: call @puts with return %0002f3b9

0002f3b9:
0002f3c3: R0 := mem[R31 + 0x80, el]:u64
0002f3ca: R0 := pad:64[mem[R0 + 0x10, el]:u32]
0002f3d0: #311 := 31:0[R0] - 0x18F
0002f3d5: VF := extend:64[#311] <> extend:64[31:0[R0]] - 0x18F
0002f3da: CF := pad:64[#311] <> pad:64[31:0[R0]] + 0xFFFFFE71
0002f3de: ZF := #311 = 0
0002f3e2: NF := 31:31[#311]
0002f3ea: when NF = VF & ~ZF goto %0002f3e8
00045cf9: goto %0002f3fe

0002f3fe:
0002f401: R0 := 1
0002f409: mem := mem with [R31 + 0xB8, el]:u32 <- 31:0[R0]
00045cfa: goto %0002f3e8

0002f3e8:
0002f3f0: R0 := 1
0002f3f8: mem := mem with [R31 + 0xEC, el]:u32 <- 31:0[R0]
0002f3fc: goto %0002b58f

0002f41d:
0002f420: R0 := 0x430000
0002f426: R0 := R0 + 0x390
0002f42d: R0 := pad:64[mem[R0, el]:u32]
0002f432: VF := 0
0002f435: CF := 1
0002f439: ZF := 31:0[R0] = 0
0002f43d: NF := 31:31[R0]
0002f443: when ZF goto %0002f441
00045cfb: goto %0002f477

0002f477:
0002f47a: R0 := 0x419000
0002f480: R0 := R0 + 0x298
0002f485: R30 := 0x40568C
0002f487: call @puts with return %0002f441

0002f441:
0002f44a: R0 := R31 + 0x78
0002f44f: R30 := 0x405694
0002f451: call @free_rr_data with return %0002f453

0002f453:
0002f457: R0 := R31 + 0x78
0002f45d: R0 := R0 + 8
0002f462: R30 := 0x4056A0
0002f464: call @free_rr_data with return %0002f466

0002f466:
0002f469: R0 := 0xFFFFFFFFFFFFFFFF
0002f471: mem := mem with [R31 + 0xD8, el]:u64 <- R0
0002f475: goto %0002b9da

0002f655:
0002f65f: R0 := extend:64[mem[R31 + 0xEC, el]:u32]
0002f665: R0 := 60:0[R0].0
0002f66b: R1 := R31 + 0x78
0002f673: R0 := mem[R1 + R0, el]:u64
0002f67a: R2 := mem[R0 + 8, el]:u64
0002f681: R0 := extend:64[mem[R31 + 0xEC, el]:u32]
0002f687: R0 := 60:0[R0].0
0002f68d: R1 := R31 + 0x78
0002f695: R19 := mem[R1 + R0, el]:u64
0002f69a: R0 := 0x419000
0002f6a0: R1 := R0 + 0x220
0002f6a6: R0 := R2
0002f6ab: R30 := 0x4055EC
0002f6ad: call @hlist_del with return %0002f6af

0002f6af:
0002f6b5: mem := mem with [R19 + 8, el]:u64 <- R0
00045cfc: goto %0002f604

0002f56e:
0002f578: R0 := mem[R31 + 0x78, el]:u64
0002f57f: R4 := mem[R0 + 8, el]:u64
0002f586: R0 := mem[R31 + 0xD0, el]:u64
0002f58d: R1 := mem[R0, el]:u64
0002f594: R0 := mem[R31 + 0xD0, el]:u64
0002f59b: R0 := mem[R0 + 8, el]:u64
0002f5a2: R19 := mem[R31 + 0x78, el]:u64
0002f5a7: R3 := 1
0002f5ad: R2 := R0
0002f5b3: R0 := R4
0002f5b8: R30 := 0x40555C
0002f5ba: call @hlist_mod with return %0002f5bc

0002f5bc:
0002f5c2: mem := mem with [R19 + 8, el]:u64 <- R0
0002f5c9: R0 := mem[R31 + 0xD0, el]:u64
0002f5d0: R0 := mem[R0 + 0x18, el]:u64
0002f5d8: mem := mem with [R31 + 0xD0, el]:u64 <- R0
00045cfd: goto %0002f552

0002f95f:
0002f962: R0 := 0x430000
0002f968: R0 := R0 + 0x390
0002f96f: R0 := pad:64[mem[R0, el]:u32]
0002f974: VF := 0
0002f977: CF := 1
0002f97b: ZF := 31:0[R0] = 0
0002f97f: NF := 31:31[R0]
0002f985: when ZF goto %0002f983
00045cfe: goto %0002faac

0002faac:
0002fab1: R0 := mem[R31 + 0x78, el]:u64
0002fab8: R0 := mem[R0 + 0x30, el]:u64
0002fabe: R1 := R0
0002fac3: R0 := 0x419000
0002fac9: R0 := R0 + 0x1B8
0002face: R30 := 0x4052E0
0002fad0: call @printf with return %0002f983

0002f983:
0002f98d: R0 := pad:64[mem[R31 + 0xBC, el]:u32]
0002f992: VF := 0
0002f995: CF := 1
0002f999: ZF := 31:0[R0] = 0
0002f99d: NF := 31:31[R0]
0002f9a3: when ZF goto %0002f9a1
00045cff: goto %0002f9e0

0002f9e0:
0002f9e5: R0 := mem[R31 + 0x78, el]:u64
0002f9ec: R0 := pad:64[mem[R0 + 0x24, el]:u32]
0002f9f2: #313 := 31:0[R0] - 0xA
0002f9f7: VF := extend:64[#313] <> extend:64[31:0[R0]] - 0xA
0002f9fc: CF := pad:64[#313] <> pad:64[31:0[R0]] + 0xFFFFFFF6
0002fa00: ZF := #313 = 0
0002fa04: NF := 31:31[#313]
0002fa0b: when ~(NF = VF & ~ZF) goto %0002f9a1
00045d00: goto %0002fa0f

0002fa0f:
0002fa14: R0 := mem[R31 + 0x78, el]:u64
0002fa1b: R3 := mem[R0 + 8, el]:u64
0002fa20: R0 := 0x419000
0002fa26: R2 := R0 + 0x1D8
0002fa2b: R0 := 0x419000
0002fa31: R1 := R0 + 0x1E8
0002fa37: R0 := R3
0002fa3c: R30 := 0x40531C
0002fa3e: call @hlist_subcmp with return %0002fa40

0002fa40:
0002fa43: VF := 0
0002fa46: CF := 1
0002fa4a: ZF := 31:0[R0] = 0
0002fa4e: NF := 31:31[R0]
0002fa54: when ZF <> 1 goto %0002fa52
00045d01: goto %0002fa64

0002fa64:
0002fa69: R0 := mem[R31 + 0x78, el]:u64
0002fa70: R3 := mem[R0 + 8, el]:u64
0002fa75: R0 := 0x419000
0002fa7b: R2 := R0 + 0x1D8
0002fa80: R0 := 0x419000
0002fa86: R1 := R0 + 0x200
0002fa8c: R0 := R3
0002fa91: R30 := 0x405344
0002fa93: call @hlist_subcmp with return %0002fa95

0002fa95:
0002fa98: VF := 0
0002fa9b: CF := 1
0002fa9f: ZF := 31:0[R0] = 0
0002faa3: NF := 31:31[R0]
0002faa8: when ZF goto %0002f9a1
00045d02: goto %0002fa52

0002fa52:
0002fa5a: R0 := 1
0002fa62: mem := mem with [R31 + 0xC4, el]:u32 <- 31:0[R0]
00045d03: goto %0002f9a1

0002f9a1:
0002f9ab: R0 := mem[R31 + 0x78, el]:u64
0002f9b0: R30 := 0x40535C
0002f9b2: call @dup_rr_data with return %0002f9b4

0002f9b4:
0002f9ba: mem := mem with [R31 + 0xD8, el]:u64 <- R0
0002f9c0: R0 := R31 + 0x78
0002f9c5: R30 := 0x405368
0002f9c7: call @free_rr_data with return %0002f9c9

0002f9c9:
0002f9cd: R0 := R31 + 0x78
0002f9d3: R0 := R0 + 8
0002f9d8: R30 := 0x405374
0002f9da: call @free_rr_data with return %0002f9dc

0002f9dc:
0002f9de: goto %0002b9da

0002fb62:
0002fb66: R0 := R31 + 0x78
0002fb6b: R30 := 0x405258
0002fb6d: call @free_rr_data with return %0002fb6f

0002fb6f:
0002fb73: R0 := R31 + 0x78
0002fb79: R0 := R0 + 8
0002fb7e: R30 := 0x405264
0002fb80: call @free_rr_data with return %0002fb82

0002fb82:
0002fb85: R0 := 0xFFFFFFFFFFFFFFFF
0002fb8d: mem := mem with [R31 + 0xD8, el]:u64 <- R0
0002fb91: goto %0002b9da

0002b9da:
0002b9e2: R0 := mem[R31 + 0xC8, el]:u64
0002b9e7: VF := 0
0002b9ea: CF := 1
0002b9ee: ZF := R0 = 0
0002b9f2: NF := 63:63[R0]
0002b9f8: when ZF goto %0002b9f6
00045d04: goto %0002d2c7

0002d2c7:
0002d2cc: R0 := mem[R31 + 0xC8, el]:u64
0002d2d1: R30 := 0x405DA4
0002d2d3: call @free with return %0002b9f6

0002b9f6:
0002b9fe: R0 := 0x430000
0002ba04: R0 := R0 + 0x390
0002ba0b: R0 := pad:64[mem[R0, el]:u32]
0002ba10: VF := 0
0002ba13: CF := 1
0002ba17: ZF := 31:0[R0] = 0
0002ba1b: NF := 31:31[R0]
0002ba21: when ZF goto %0002ba1f
00045d05: goto %0002d269

0002d269:
0002d26c: R0 := 0x430000
0002d272: R0 := R0 + 0x3A4
0002d279: R19 := pad:64[mem[R0, el]:u32]
0002d280: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
0002d285: R30 := 0x405DCC
0002d287: call @so_closed with return %0002d289

0002d289:
0002d28d: R4 := pad:64[31:0[R0]]
0002d293: R3 := pad:64[31:0[R19]]
0002d29a: R2 := pad:64[mem[R31 + 0xBC, el]:u32]
0002d2a1: R1 := pad:64[mem[R31 + 0xC4, el]:u32]
0002d2a6: R0 := 0x419000
0002d2ac: R0 := R0 + 0x400
0002d2b1: R30 := 0x405DE8
0002d2b3: call @printf with return %0002d2b5

0002d2b5:
0002d2b8: R0 := 0x419000
0002d2be: R0 := R0 + 0x440
0002d2c3: R30 := 0x405DF4
0002d2c5: call @puts with return %0002ba1f

0002ba1f:
0002ba29: R0 := pad:64[mem[R31 + 0xC4, el]:u32]
0002ba2e: VF := 0
0002ba31: CF := 1
0002ba35: ZF := 31:0[R0] = 0
0002ba39: NF := 31:31[R0]
0002ba3f: when ZF goto %0002ba3d
00045d06: goto %0002d13a

0002d13a:
0002d13f: R0 := pad:64[mem[R31 + 0xBC, el]:u32]
0002d144: VF := 0
0002d147: CF := 1
0002d14b: ZF := 31:0[R0] = 0
0002d14f: NF := 31:31[R0]
0002d154: when ZF goto %0002ba3d
00045d07: goto %0002d158

0002d158:
0002d15b: R0 := 0x430000
0002d161: R0 := R0 + 0x3A4
0002d168: R0 := pad:64[mem[R0, el]:u32]
0002d16d: VF := 0
0002d170: CF := 1
0002d174: ZF := 31:0[R0] = 0
0002d178: NF := 31:31[R0]
0002d17d: when ZF <> 1 goto %0002ba3d
00045d08: goto %0002d181

0002d181:
0002d186: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
0002d18b: R30 := 0x405E28
0002d18d: call @so_closed with return %0002d18f

0002d18f:
0002d192: VF := 0
0002d195: CF := 1
0002d199: ZF := 31:0[R0] = 0
0002d19d: NF := 31:31[R0]
0002d1a2: when ZF <> 1 goto %0002ba3d
00045d09: goto %0002d1a6

0002ba3d:
0002ba47: R0 := mem[R31 + 0x70, el]:u64
0002ba4c: R30 := 0x405EB0
0002ba4e: call @free with return %0002ba50

0002ba50:
0002ba55: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
0002ba5a: VF := 0
0002ba5d: CF := 1
0002ba61: ZF := 31:0[R0] = 0
0002ba65: NF := 31:31[R0]
0002ba6c: when NF <> VF goto %0002ba6a
00045d0a: goto %0002d12c

0002d12c:
0002d131: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
0002d136: R30 := 0x405EC4
0002d138: call @close with return %0002ba6a

0002d1a6:
0002d1a9: R0 := 0x430000
0002d1af: R0 := R0 + 0x390
0002d1b6: R0 := pad:64[mem[R0, el]:u32]
0002d1bb: VF := 0
0002d1be: CF := 1
0002d1c2: ZF := 31:0[R0] = 0
0002d1c6: NF := 31:31[R0]
0002d1cc: when ZF goto %0002d1ca
00045d0b: goto %0002d23d

0002d23d:
0002d242: R0 := pad:64[mem[R31 + 0x68, el]:u32]
0002d249: R1 := pad:64[mem[R31 + 0x6C, el]:u32]
0002d24f: R2 := pad:64[31:0[R1]]
0002d255: R1 := pad:64[31:0[R0]]
0002d25a: R0 := 0x419000
0002d260: R0 := R0 + 0x458
0002d265: R30 := 0x405E60
0002d267: call @printf with return %0002d1ca

0002d1ca:
0002d1d2: R0 := 0x430000
0002d1d8: R0 := R0 + 0x3F8
0002d1dd: R30 := 0x405E6C
0002d1df: call @pthread_mutex_lock with return %0002d1e1

0002d1e1:
0002d1e4: R0 := 0x430000
0002d1ea: R0 := R0 + 0x3F0
0002d1f1: R0 := mem[R0, el]:u64
0002d1f8: R1 := pad:64[mem[R31 + 0x6C, el]:u32]
0002d1fe: R1 := extend:64[31:0[R1]]
0002d205: R2 := mem[R31 + 0x70, el]:u64
0002d20a: R30 := 0x405E88
0002d20c: call @plist_add with return %0002d20e

0002d20e:
0002d212: R1 := R0
0002d217: R0 := 0x430000
0002d21d: R0 := R0 + 0x3F0
0002d225: mem := mem with [R0, el]:u64 <- R1
0002d22a: R0 := 0x430000
0002d230: R0 := R0 + 0x3F8
0002d235: R30 := 0x405EA4
0002d237: call @pthread_mutex_unlock with return %0002d239

0002d239:
0002d23b: goto %0002ba6a

0002ba6a:
0002ba74: R0 := mem[R31 + 0xD8, el]:u64
0002ba7b: R19 := mem[R31 + 0x10, el]:u64
0002ba82: R29 := mem[R31, el]:u64
0002ba87: R30 := mem[R31 + 8, el]:u64
0002ba8b: R31 := R31 + 0xF0
0002ba90: call R30 with noreturn

00045d0c: sub forward_tunnel(forward_tunnel_result)
000462fd: forward_tunnel_result :: out u32 = low:32[R0]

0002bb18:
0002bb1c: #273 := R31 - 0x80
0002bb22: mem := mem with [#273, el]:u64 <- R29
0002bb28: mem := mem with [#273 + 8, el]:u64 <- R30
0002bb2c: R31 := #273
0002bb32: R29 := R31
0002bb3a: mem := mem with [R31 + 0x18, el]:u64 <- R0
0002bb41: R0 := mem[R31 + 0x18, el]:u64
0002bb46: VF := 0
0002bb49: CF := 1
0002bb4d: ZF := R0 = 0
0002bb51: NF := 63:63[R0]
0002bb57: when ZF <> 1 goto %0002bb55
00045d0d: goto %0002cb68

0002cb68:
0002cb6b: R0 := 0x419000
0002cb71: R3 := R0 + 0x9E0
0002cb76: R2 := 0x250
0002cb7b: R0 := 0x419000
0002cb81: R1 := R0 + 0x88
0002cb86: R0 := 0x419000
0002cb8c: R0 := R0 + 0xC8
0002cb91: R30 := 0x406250
0002cb93: call @__assert_fail with return %0002bb55

0002bb55:
0002bb5f: R0 := mem[R31 + 0x18, el]:u64
0002bb66: R0 := pad:64[mem[R0, el]:u32]
0002bb6e: mem := mem with [R31 + 0x7C, el]:u32 <- 31:0[R0]
0002bb75: R0 := mem[R31 + 0x18, el]:u64
0002bb7c: R0 := mem[R0 + 8, el]:u64
0002bb84: mem := mem with [R31 + 0x70, el]:u64 <- R0
0002bb8b: R0 := mem[R31 + 0x70, el]:u64
0002bb90: R30 := 0x406270
0002bb92: call @strdup with return %0002bb94

0002bb94:
0002bb9a: mem := mem with [R31 + 0x68, el]:u64 <- R0
0002bba0: R0 := R31 + 0x20
0002bba5: V0 := 0
0002bbad: mem := mem with [R0, el]:u128 <- V0
0002bbb3: mem := mem with [R0 + 0x10, el]:u128 <- V0
0002bbbb: mem := mem with [R0 + 0x1E, el]:u128 <- V0
0002bbc2: R0 := mem[R31 + 0x18, el]:u64
0002bbc8: R0 := R0 + 0x10
0002bbcf: R0 := pad:64[mem[R0, el]:u16]
0002bbd5: R4 := pad:64[31:0[R0]]
0002bbdc: R0 := mem[R31 + 0x18, el]:u64
0002bbe2: R0 := R0 + 0x10
0002bbe9: R0 := pad:64[mem[R0, el]:u16]
0002bbef: #274 := 31:0[R0] - 2
0002bbf4: VF := extend:64[#274] <> extend:64[31:0[R0]] - 2
0002bbf9: CF := pad:64[#274] <> pad:64[31:0[R0]] + 0xFFFFFFFE
0002bbfd: ZF := #274 = 0
0002bc01: NF := 31:31[#274]
0002bc07: when ZF <> 1 goto %0002bc05
00045d0e: goto %0002cb51

0002bc05:
0002bc0f: R0 := mem[R31 + 0x18, el]:u64
0002bc15: R0 := R0 + 0x10
0002bc1b: R0 := R0 + 8
00045d0f: goto %0002bc1d

0002cb51:
0002cb56: R0 := mem[R31 + 0x18, el]:u64
0002cb5c: R0 := R0 + 0x10
0002cb62: R0 := R0 + 4
0002cb66: goto %0002bc1d

0002bc1d:
0002bc21: R1 := R31 + 0x20
0002bc26: R3 := 0x2E
0002bc2c: R2 := R1
0002bc32: R1 := R0
0002bc38: R0 := pad:64[31:0[R4]]
0002bc3d: R30 := 0x4062DC
0002bc3f: call @inet_ntop with return %0002bc41

0002bc41:
0002bc44: R30 := 0x4062E0
0002bc46: call @new_auth with return %0002bc48

0002bc48:
0002bc4e: mem := mem with [R31 + 0x60, el]:u64 <- R0
0002bc53: R1 := 0x3A
0002bc5a: R0 := mem[R31 + 0x68, el]:u64
0002bc5f: R30 := 0x4062F0
0002bc61: call @strchr with return %0002bc63

0002bc63:
0002bc69: mem := mem with [R31 + 0x58, el]:u64 <- R0
0002bc70: R0 := mem[R31 + 0x58, el]:u64
0002bc75: VF := 0
0002bc78: CF := 1
0002bc7c: ZF := R0 = 0
0002bc80: NF := 63:63[R0]
0002bc86: when ZF goto %0002bc84
00045d10: goto %0002cb43

0002cb43:
0002cb48: R0 := mem[R31 + 0x58, el]:u64
0002cb4f: mem := mem with [R0] <- 0
00045d11: goto %0002bc84

0002bc84:
0002bc8e: R2 := mem[R31 + 0x68, el]:u64
0002bc95: R1 := mem[R31 + 0x70, el]:u64
0002bc9c: R0 := mem[R31 + 0x60, el]:u64
0002bca1: R30 := 0x406318
0002bca3: call @proxy_connect with return %0002bca5

0002bca5:
0002bcab: mem := mem with [R31 + 0x54, el]:u32 <- 31:0[R0]
0002bcb2: R0 := pad:64[mem[R31 + 0x54, el]:u32]
0002bcb7: VF := 0
0002bcba: CF := 1
0002bcbe: ZF := 31:0[R0] = 0
0002bcc2: NF := 31:31[R0]
0002bcc9: when NF <> VF goto %0002bcc7
00045d12: goto %0002ca84

0002bcc7:
0002bcd1: goto %0002bccf

0002ca84:
0002ca88: R0 := R31 + 0x20
0002ca8f: R3 := mem[R31 + 0x70, el]:u64
0002ca95: R2 := R0
0002ca9a: R0 := 0x419000
0002caa0: R1 := R0 + 0x590
0002caa5: R0 := 7
0002caaa: R30 := 0x406344
0002caac: call @syslog with return %0002caae

0002caae:
0002cab1: R0 := 0x430000
0002cab7: R0 := R0 + 0x390
0002cabe: R0 := pad:64[mem[R0, el]:u32]
0002cac3: VF := 0
0002cac6: CF := 1
0002caca: ZF := 31:0[R0] = 0
0002cace: NF := 31:31[R0]
0002cad4: when ZF goto %0002cad2
00045d13: goto %0002cb23

0002cb23:
0002cb28: R2 := pad:64[mem[R31 + 0x7C, el]:u32]
0002cb2f: R1 := mem[R31 + 0x70, el]:u64
0002cb34: R0 := 0x419000
0002cb3a: R0 := R0 + 0x5A0
0002cb3f: R30 := 0x40636C
0002cb41: call @printf with return %0002cad2

0002cad2:
0002cadc: R2 := mem[R31 + 0x70, el]:u64
0002cae3: R1 := mem[R31 + 0x60, el]:u64
0002caea: R0 := pad:64[mem[R31 + 0x54, el]:u32]
0002caef: R30 := 0x40637C
0002caf1: call @prepare_http_connect with return %0002caf3

0002caf3:
0002caf6: VF := 0
0002caf9: CF := 1
0002cafd: ZF := 31:0[R0] = 0
0002cb01: NF := 31:31[R0]
0002cb06: when ZF goto %0002ca82
00045d14: goto %0002cb0a

0002ca82:
00045d15: goto %0002bccf

0002cb0a:
0002cb0f: R1 := pad:64[mem[R31 + 0x54, el]:u32]
0002cb16: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0002cb1b: R30 := 0x406390
0002cb1d: call @tunnel with return %0002cb1f

0002cb1f:
0002cb21: goto %0002bccf

0002bccf:
0002bcd7: R0 := pad:64[mem[R31 + 0x54, el]:u32]
0002bcdc: VF := 0
0002bcdf: CF := 1
0002bce3: ZF := 31:0[R0] = 0
0002bce7: NF := 31:31[R0]
0002bcee: when NF <> VF goto %0002bcec
00045d16: goto %0002ca74

0002ca74:
0002ca79: R0 := pad:64[mem[R31 + 0x54, el]:u32]
0002ca7e: R30 := 0x4063B4
0002ca80: call @close with return %0002bcec

0002bcec:
0002bcf6: R0 := pad:64[mem[R31 + 0x54, el]:u32]
0002bcfc: #275 := 31:0[R0] + 2
0002bd01: VF := extend:64[#275] <> extend:64[31:0[R0]] + 2
0002bd06: CF := pad:64[#275] <> pad:64[31:0[R0]] + 2
0002bd0a: ZF := #275 = 0
0002bd0e: NF := 31:31[#275]
0002bd14: when ZF goto %0002bd12
00045d17: goto %0002ca66

0002ca66:
0002ca6b: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0002ca70: R30 := 0x4063C8
0002ca72: call @close with return %0002bd12

0002bd12:
0002bd1c: R0 := mem[R31 + 0x60, el]:u64
0002bd21: R30 := 0x4063D0
0002bd23: call @free with return %0002bd25

0002bd25:
0002bd2a: R0 := mem[R31 + 0x68, el]:u64
0002bd2f: R30 := 0x4063D8
0002bd31: call @free with return %0002bd33

0002bd33:
0002bd38: R0 := pad:64[mem[R31 + 0x54, el]:u32]
0002bd3f: R29 := mem[R31, el]:u64
0002bd44: R30 := mem[R31 + 8, el]:u64
0002bd48: R31 := R31 + 0x80
0002bd4d: call R30 with noreturn

00045d18: sub fprintf(fprintf_stream, fprintf_format, fprintf_result)
000462fe: fprintf_stream :: in out u64 = R0
000462ff: fprintf_format :: in u64 = R1
00046300: fprintf_result :: out u32 = low:32[R0]

0002bf27:
0004008c: R16 := 0x430000
00040093: R17 := mem[R16 + 0x310, el]:u64
00040099: R16 := R16 + 0x310
0004009e: call R17 with noreturn

00045d19: sub fputc(fputc_c, fputc_stream, fputc_result)
00046301: fputc_c :: in u32 = low:32[R0]
00046302: fputc_stream :: in out u64 = R1
00046303: fputc_result :: out u32 = low:32[R0]

0003efcc:
0003f996: R16 := 0x430000
0003f99d: R17 := mem[R16 + 0x88, el]:u64
0003f9a3: R16 := R16 + 0x88
0003f9a8: call R17 with noreturn

00045d1a: sub frame_dummy(frame_dummy_result)
00046304: frame_dummy_result :: out u32 = low:32[R0]

0003f0fa:
0003f0fc: call @register_tm_clones with noreturn

00045d1b: sub fread(fread_ptr, fread_size, fread_nmemb, fread_stream, fread_result)
00046305: fread_ptr :: in out u64 = R0
00046306: fread_size :: in u64 = R1
00046307: fread_nmemb :: in u64 = R2
00046308: fread_stream :: in out u64 = R3
00046309: fread_result :: out u64 = R0

0001cadc:
0003fd8a: R16 := 0x430000
0003fd91: R17 := mem[R16 + 0x1F8, el]:u64
0003fd97: R16 := R16 + 0x1F8
0003fd9c: call R17 with noreturn

00045d1c: sub free(free_ptr)
0004630a: free_ptr :: in out u64 = R0

00016e7e:
0003fdcc: R16 := 0x430000
0003fdd3: R17 := mem[R16 + 0x210, el]:u64
0003fdd9: R16 := R16 + 0x210
0003fdde: call R17 with noreturn

00045d1d: sub free_rr_data(free_rr_data_result)
0004630b: free_rr_data_result :: out u32 = low:32[R0]

00022f39:
00022f3d: #126 := R31 - 0x30
00022f43: mem := mem with [#126, el]:u64 <- R29
00022f49: mem := mem with [#126 + 8, el]:u64 <- R30
00022f4d: R31 := #126
00022f53: R29 := R31
00022f5b: mem := mem with [R31 + 0x18, el]:u64 <- R0
00022f62: R0 := mem[R31 + 0x18, el]:u64
00022f67: VF := 0
00022f6a: CF := 1
00022f6e: ZF := R0 = 0
00022f72: NF := 63:63[R0]
00022f78: when ZF <> 1 goto %00022f76
00045d1e: goto %00023329

00023329:
0002332c: R0 := 0x430000
00023332: R0 := R0 + 0x350
00023339: R0 := mem[R0, el]:u64
0002333f: R3 := R0
00023344: R2 := 0x36
00023349: R1 := 1
0002334e: R0 := 0x41C000
00023354: R0 := R0 + 0xC70
00023359: R30 := 0x4120D0
0002335c: call @fwrite with return %0002335e

0002335e:
00023361: R0 := 0x41D000
00023367: R3 := R0 + 0x38
0002336c: R2 := 0x28F
00023371: R0 := 0x41C000
00023377: R1 := R0 + 0xAF0
0002337c: R0 := 0x41C000
00023382: R0 := R0 + 0xBC0
00023387: R30 := 0x4120F0
00023389: call @__assert_fail with return %00022f76

00022f76:
00022f80: R0 := mem[R31 + 0x18, el]:u64
00022f87: R0 := mem[R0, el]:u64
00022f8f: mem := mem with [R31 + 0x28, el]:u64 <- R0
00022f96: R0 := mem[R31 + 0x28, el]:u64
00022f9b: VF := 0
00022f9e: CF := 1
00022fa2: ZF := R0 = 0
00022fa6: NF := 63:63[R0]
00022fac: when ZF goto %00022faa
00045d1f: goto %00023128

00022faa:
00045d20: goto %00022fb1

00023128:
0002312d: R0 := mem[R31 + 0x28, el]:u64
00023134: R0 := mem[R0 + 8, el]:u64
00023139: VF := 0
0002313c: CF := 1
00023140: ZF := R0 = 0
00023144: NF := 63:63[R0]
0002314a: when ZF goto %00023148
00045d21: goto %00023314

00023314:
00023319: R0 := mem[R31 + 0x28, el]:u64
00023320: R0 := mem[R0 + 8, el]:u64
00023325: R30 := 0x412124
00023327: call @hlist_free with return %00023148

00023148:
00023152: R0 := mem[R31 + 0x28, el]:u64
00023159: R0 := mem[R0 + 0x28, el]:u64
0002315e: VF := 0
00023161: CF := 1
00023165: ZF := R0 = 0
00023169: NF := 63:63[R0]
0002316f: when ZF goto %0002316d
00045d22: goto %000232ff

000232ff:
00023304: R0 := mem[R31 + 0x28, el]:u64
0002330b: R0 := mem[R0 + 0x28, el]:u64
00023310: R30 := 0x412140
00023312: call @free with return %0002316d

0002316d:
00023177: R0 := mem[R31 + 0x28, el]:u64
0002317e: R0 := mem[R0 + 0x30, el]:u64
00023183: VF := 0
00023186: CF := 1
0002318a: ZF := R0 = 0
0002318e: NF := 63:63[R0]
00023194: when ZF goto %00023192
00045d23: goto %000232ea

000232ea:
000232ef: R0 := mem[R31 + 0x28, el]:u64
000232f6: R0 := mem[R0 + 0x30, el]:u64
000232fb: R30 := 0x41215C
000232fd: call @free with return %00023192

00023192:
0002319c: R0 := mem[R31 + 0x28, el]:u64
000231a3: R0 := mem[R0 + 0x38, el]:u64
000231a8: VF := 0
000231ab: CF := 1
000231af: ZF := R0 = 0
000231b3: NF := 63:63[R0]
000231b9: when ZF goto %000231b7
00045d24: goto %000232d5

000232d5:
000232da: R0 := mem[R31 + 0x28, el]:u64
000232e1: R0 := mem[R0 + 0x38, el]:u64
000232e6: R30 := 0x412178
000232e8: call @free with return %000231b7

000231b7:
000231c1: R0 := mem[R31 + 0x28, el]:u64
000231c8: R0 := mem[R0 + 0x40, el]:u64
000231cd: VF := 0
000231d0: CF := 1
000231d4: ZF := R0 = 0
000231d8: NF := 63:63[R0]
000231de: when ZF goto %000231dc
00045d25: goto %000232c0

000232c0:
000232c5: R0 := mem[R31 + 0x28, el]:u64
000232cc: R0 := mem[R0 + 0x40, el]:u64
000232d1: R30 := 0x412194
000232d3: call @free with return %000231dc

000231dc:
000231e6: R0 := mem[R31 + 0x28, el]:u64
000231ed: R0 := mem[R0 + 0x48, el]:u64
000231f2: VF := 0
000231f5: CF := 1
000231f9: ZF := R0 = 0
000231fd: NF := 63:63[R0]
00023203: when ZF goto %00023201
00045d26: goto %000232ab

000232ab:
000232b0: R0 := mem[R31 + 0x28, el]:u64
000232b7: R0 := mem[R0 + 0x48, el]:u64
000232bc: R30 := 0x4121B0
000232be: call @free with return %00023201

00023201:
0002320b: R0 := mem[R31 + 0x28, el]:u64
00023212: R0 := mem[R0 + 0x50, el]:u64
00023217: VF := 0
0002321a: CF := 1
0002321e: ZF := R0 = 0
00023222: NF := 63:63[R0]
00023228: when ZF goto %00023226
00045d27: goto %00023296

00023296:
0002329b: R0 := mem[R31 + 0x28, el]:u64
000232a2: R0 := mem[R0 + 0x50, el]:u64
000232a7: R30 := 0x4121CC
000232a9: call @free with return %00023226

00023226:
00023230: R0 := mem[R31 + 0x28, el]:u64
00023237: R0 := mem[R0 + 0x58, el]:u64
0002323c: VF := 0
0002323f: CF := 1
00023243: ZF := R0 = 0
00023247: NF := 63:63[R0]
0002324d: when ZF goto %0002324b
00045d28: goto %00023281

00023281:
00023286: R0 := mem[R31 + 0x28, el]:u64
0002328d: R0 := mem[R0 + 0x58, el]:u64
00023292: R30 := 0x4121E8
00023294: call @free with return %0002324b

0002324b:
00023253: R2 := 0x68
00023258: R1 := 0
0002325f: R0 := mem[R31 + 0x28, el]:u64
00023264: R30 := 0x4121F8
00023266: call @memset with return %00023268

00023268:
0002326d: R0 := mem[R31 + 0x28, el]:u64
00023272: R30 := 0x412200
00023274: call @free with return %00023276

00023276:
0002327b: mem := mem with [R31 + 0x28, el]:u64 <- 0
0002327f: goto %00022fb1

00022fb1:
00022fb6: R29 := mem[R31, el]:u64
00022fbb: R30 := mem[R31 + 8, el]:u64
00022fbf: R31 := R31 + 0x30
00022fc4: call R30 with noreturn

00045d29: sub freeaddrinfo(freeaddrinfo_result)
0004630c: freeaddrinfo_result :: out u32 = low:32[R0]

00025f6d:
0003f84c: R16 := 0x430000
0003f853: R17 := mem[R16 + 0x10, el]:u64
0003f859: R16 := R16 + 0x10
0003f85e: call R17 with noreturn

00045d2a: sub from_base64(from_base64_result)
0004630d: from_base64_result :: out u32 = low:32[R0]

00016fdb:
00016fdf: #31 := R31 - 0x40
00016fe5: mem := mem with [#31, el]:u64 <- R19
00016feb: mem := mem with [#31 + 8, el]:u64 <- R20
00016fef: R31 := #31
00016ff5: #32 := R31 + 0x10
00016ffb: mem := mem with [#32, el]:u64 <- R21
00017001: mem := mem with [#32 + 8, el]:u64 <- R22
00017009: mem := mem with [R31 + 0x28, el]:u64 <- R0
00017011: mem := mem with [R31 + 0x20, el]:u64 <- R1
00017018: mem := mem with [R31 + 0x3C, el]:u32 <- 0
00045d2b: goto %0001701a

0001701a:
0001701f: R0 := mem[R31 + 0x20, el]:u64
00017026: R22 := pad:64[mem[R0]]
0001702c: R0 := pad:64[extend:32[7:0[R22]]]
00017031: VF := 0
00017034: CF := 1
00017038: ZF := 31:0[R0] = 0
0001703c: NF := 31:31[R0]
00017043: when NF <> VF goto %00017041
00045d2c: goto %00021500

00021500:
00021504: R1 := pad:64[31:0[R22]]
00021509: R0 := 0x41C000
0002150f: R0 := R0 + 0xD10
00021515: R1 := pad:64[31:0[R1]]
0002151d: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00021523: #99 := 31:0[R0] + 1
00021528: VF := extend:64[#99] <> extend:64[31:0[R0]] + 1
0002152d: CF := pad:64[#99] <> pad:64[31:0[R0]] + 1
00021531: ZF := #99 = 0
00021535: NF := 31:31[#99]
0002153a: when ZF <> 1 goto %000210dc
00045d2d: goto %00017041

000210dc:
000210e1: R0 := mem[R31 + 0x20, el]:u64
000210e7: R0 := R0 + 1
000210ee: R21 := pad:64[mem[R0]]
000210f4: R0 := pad:64[extend:32[7:0[R21]]]
000210f9: VF := 0
000210fc: CF := 1
00021100: ZF := 31:0[R0] = 0
00021104: NF := 31:31[R0]
0002110b: when NF <> VF goto %00021109
00045d2e: goto %000214c2

000214c2:
000214c6: R1 := pad:64[31:0[R21]]
000214cb: R0 := 0x41C000
000214d1: R0 := R0 + 0xD10
000214d7: R1 := pad:64[31:0[R1]]
000214df: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
000214e5: #98 := 31:0[R0] + 1
000214ea: VF := extend:64[#98] <> extend:64[31:0[R0]] + 1
000214ef: CF := pad:64[#98] <> pad:64[31:0[R0]] + 1
000214f3: ZF := #98 = 0
000214f7: NF := 31:31[#98]
000214fc: when ZF <> 1 goto %00021117
00045d2f: goto %00021109

00021117:
0002111c: R0 := mem[R31 + 0x20, el]:u64
00021122: R0 := R0 + 2
00021129: R20 := pad:64[mem[R0]]
0002112f: R0 := pad:64[extend:32[7:0[R20]]]
00021134: VF := 0
00021137: CF := 1
0002113b: ZF := 31:0[R0] = 0
0002113f: NF := 31:31[R0]
00021146: when NF <> VF goto %00021144
00045d30: goto %00021465

00021465:
00021469: #96 := 31:0[R20] - 0x3D
0002146e: VF := extend:64[#96] <> extend:64[31:0[R20]] - 0x3D
00021473: CF := pad:64[#96] <> pad:64[31:0[R20]] + 0xFFFFFFC3
00021477: ZF := #96 = 0
0002147b: NF := 31:31[#96]
00021480: when ZF goto %00021152
00045d31: goto %00021484

00021484:
00021488: R1 := pad:64[31:0[R20]]
0002148d: R0 := 0x41C000
00021493: R0 := R0 + 0xD10
00021499: R1 := pad:64[31:0[R1]]
000214a1: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
000214a7: #97 := 31:0[R0] + 1
000214ac: VF := extend:64[#97] <> extend:64[31:0[R0]] + 1
000214b1: CF := pad:64[#97] <> pad:64[31:0[R0]] + 1
000214b5: ZF := #97 = 0
000214b9: NF := 31:31[#97]
000214be: when ZF <> 1 goto %00021152
00045d32: goto %00021144

00021152:
00021157: R0 := mem[R31 + 0x20, el]:u64
0002115d: R0 := R0 + 3
00021164: R19 := pad:64[mem[R0]]
0002116a: R0 := pad:64[extend:32[7:0[R19]]]
0002116f: VF := 0
00021172: CF := 1
00021176: ZF := 31:0[R0] = 0
0002117a: NF := 31:31[R0]
00021181: when NF <> VF goto %0002117f
00045d33: goto %00021408

00021408:
0002140c: #94 := 31:0[R19] - 0x3D
00021411: VF := extend:64[#94] <> extend:64[31:0[R19]] - 0x3D
00021416: CF := pad:64[#94] <> pad:64[31:0[R19]] + 0xFFFFFFC3
0002141a: ZF := #94 = 0
0002141e: NF := 31:31[#94]
00021423: when ZF goto %0002118d
00045d34: goto %00021427

00021427:
0002142b: R1 := pad:64[31:0[R19]]
00021430: R0 := 0x41C000
00021436: R0 := R0 + 0xD10
0002143c: R1 := pad:64[31:0[R1]]
00021444: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0002144a: #95 := 31:0[R0] + 1
0002144f: VF := extend:64[#95] <> extend:64[31:0[R0]] + 1
00021454: CF := pad:64[#95] <> pad:64[31:0[R0]] + 1
00021458: ZF := #95 = 0
0002145c: NF := 31:31[#95]
00021461: when ZF <> 1 goto %0002118d
00045d35: goto %0002117f

0002118d:
00021192: R0 := mem[R31 + 0x20, el]:u64
00021198: R0 := R0 + 4
000211a0: mem := mem with [R31 + 0x20, el]:u64 <- R0
000211a6: R1 := pad:64[31:0[R22]]
000211ab: R0 := 0x41C000
000211b1: R0 := R0 + 0xD10
000211b7: R1 := pad:64[31:0[R1]]
000211bf: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
000211c5: R0 := pad:64[extend:32[7:0[R0]]]
000211cb: R0 := pad:64[5:0[R0].0]
000211d1: R1 := pad:64[extend:32[7:0[R0]]]
000211d7: R2 := pad:64[31:0[R21]]
000211dc: R0 := 0x41C000
000211e2: R0 := R0 + 0xD10
000211e8: R2 := pad:64[31:0[R2]]
000211f0: R0 := pad:64[mem[R0 + (61:0[R2].0), el]:u32]
000211f6: R0 := pad:64[extend:32[31:4[R0]]]
000211fc: R0 := pad:64[extend:32[7:0[R0]]]
00021203: R0 := pad:64[31:0[R1] | 31:0[R0]]
00021209: R2 := pad:64[extend:32[7:0[R0]]]
00021210: R0 := mem[R31 + 0x28, el]:u64
00021216: R1 := R0 + 1
0002121e: mem := mem with [R31 + 0x28, el]:u64 <- R1
00021224: R1 := pad:64[7:0[R2]]
0002122c: mem := mem with [R0] <- 7:0[R1]
00021233: R0 := pad:64[mem[R31 + 0x3C, el]:u32]
00021239: R0 := pad:64[31:0[R0] + 1]
00021241: mem := mem with [R31 + 0x3C, el]:u32 <- 31:0[R0]
00021247: #91 := 31:0[R20] - 0x3D
0002124c: VF := extend:64[#91] <> extend:64[31:0[R20]] - 0x3D
00021251: CF := pad:64[#91] <> pad:64[31:0[R20]] + 0xFFFFFFC3
00021255: ZF := #91 = 0
00021259: NF := 31:31[#91]
0002125f: when ZF goto %0002125d
00045d36: goto %000212ad

000212ad:
000212b1: R1 := pad:64[31:0[R21]]
000212b6: R0 := 0x41C000
000212bc: R0 := R0 + 0xD10
000212c2: R1 := pad:64[31:0[R1]]
000212ca: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
000212d0: R0 := pad:64[extend:32[7:0[R0]]]
000212d6: R0 := pad:64[3:0[R0].0]
000212dc: R1 := pad:64[extend:32[7:0[R0]]]
000212e2: R2 := pad:64[31:0[R20]]
000212e7: R0 := 0x41C000
000212ed: R0 := R0 + 0xD10
000212f3: R2 := pad:64[31:0[R2]]
000212fb: R0 := pad:64[mem[R0 + (61:0[R2].0), el]:u32]
00021301: R0 := pad:64[extend:32[31:2[R0]]]
00021307: R0 := pad:64[extend:32[7:0[R0]]]
0002130e: R0 := pad:64[31:0[R1] | 31:0[R0]]
00021314: R2 := pad:64[extend:32[7:0[R0]]]
0002131b: R0 := mem[R31 + 0x28, el]:u64
00021321: R1 := R0 + 1
00021329: mem := mem with [R31 + 0x28, el]:u64 <- R1
0002132f: R1 := pad:64[7:0[R2]]
00021337: mem := mem with [R0] <- 7:0[R1]
0002133e: R0 := pad:64[mem[R31 + 0x3C, el]:u32]
00021344: R0 := pad:64[31:0[R0] + 1]
0002134c: mem := mem with [R31 + 0x3C, el]:u32 <- 31:0[R0]
00021352: #93 := 31:0[R19] - 0x3D
00021357: VF := extend:64[#93] <> extend:64[31:0[R19]] - 0x3D
0002135c: CF := pad:64[#93] <> pad:64[31:0[R19]] + 0xFFFFFFC3
00021360: ZF := #93 = 0
00021364: NF := 31:31[#93]
00021369: when ZF goto %0002125d
00045d37: goto %0002136d

0002136d:
00021371: R1 := pad:64[31:0[R20]]
00021376: R0 := 0x41C000
0002137c: R0 := R0 + 0xD10
00021382: R1 := pad:64[31:0[R1]]
0002138a: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00021390: R0 := pad:64[extend:32[7:0[R0]]]
00021396: R0 := pad:64[1:0[R0].0]
0002139c: R1 := pad:64[extend:32[7:0[R0]]]
000213a2: R2 := pad:64[31:0[R19]]
000213a7: R0 := 0x41C000
000213ad: R0 := R0 + 0xD10
000213b3: R2 := pad:64[31:0[R2]]
000213bb: R0 := pad:64[mem[R0 + (61:0[R2].0), el]:u32]
000213c1: R0 := pad:64[extend:32[7:0[R0]]]
000213c8: R0 := pad:64[31:0[R1] | 31:0[R0]]
000213ce: R2 := pad:64[extend:32[7:0[R0]]]
000213d5: R0 := mem[R31 + 0x28, el]:u64
000213db: R1 := R0 + 1
000213e3: mem := mem with [R31 + 0x28, el]:u64 <- R1
000213e9: R1 := pad:64[7:0[R2]]
000213f1: mem := mem with [R0] <- 7:0[R1]
000213f8: R0 := pad:64[mem[R31 + 0x3C, el]:u32]
000213fe: R0 := pad:64[31:0[R0] + 1]
00021406: mem := mem with [R31 + 0x3C, el]:u32 <- 31:0[R0]
00045d38: goto %0002125d

0002125d:
00021267: R0 := mem[R31 + 0x20, el]:u64
0002126e: R0 := pad:64[mem[R0]]
00021273: VF := 0
00021276: CF := 1
0002127a: ZF := 31:0[R0] = 0
0002127e: NF := 31:31[R0]
00021284: when ZF goto %00021282
00045d39: goto %0002128e

0002128e:
00021292: #92 := 31:0[R19] - 0x3D
00021297: VF := extend:64[#92] <> extend:64[31:0[R19]] - 0x3D
0002129c: CF := pad:64[#92] <> pad:64[31:0[R19]] + 0xFFFFFFC3
000212a0: ZF := #92 = 0
000212a4: NF := 31:31[#92]
000212a9: when ZF <> 1 goto %0001701a
00045d3a: goto %00021282

00021282:
0002128c: R0 := pad:64[mem[R31 + 0x3C, el]:u32]
00045d3b: goto %0001704c

0002117f:
00021187: R0 := 0xFFFFFFFF
0002118b: goto %0001704c

00021144:
0002114c: R0 := 0xFFFFFFFF
00021150: goto %0001704c

00021109:
00021111: R0 := 0xFFFFFFFF
00021115: goto %0001704c

00017041:
00017049: R0 := 0xFFFFFFFF
0001704e: goto %0001704c

0001704c:
00017053: #33 := R31 + 0x10
00017058: R21 := mem[#33, el]:u64
0001705d: R22 := mem[#33 + 8, el]:u64
00017064: R19 := mem[R31, el]:u64
00017069: R20 := mem[R31 + 8, el]:u64
0001706d: R31 := R31 + 0x40
00017072: call R30 with noreturn

00045d3c: sub fwrite(fwrite_ptr, fwrite_size, fwrite_nmemb, fwrite_stream, fwrite_result)
0004630e: fwrite_ptr :: in out u64 = R0
0004630f: fwrite_size :: in u64 = R1
00046310: fwrite_nmemb :: in u64 = R2
00046311: fwrite_stream :: in out u64 = R3
00046312: fwrite_result :: out u64 = R0

0002335a:
0003fe50: R16 := 0x430000
0003fe57: R17 := mem[R16 + 0x240, el]:u64
0003fe5d: R16 := R16 + 0x240
0003fe62: call R17 with noreturn

00045d3d: sub gai_strerror(gai_strerror_result)
00046313: gai_strerror_result :: out u32 = low:32[R0]

00025f0b:
0003f836: R16 := 0x430000
0003f83d: R17 := mem[R16 + 8, el]:u64
0003f843: R16 := R16 + 8
0003f848: call R17 with noreturn

00045d3e: sub gen_401_page(gen_401_page_result)
00046314: gen_401_page_result :: out u32 = low:32[R0]

00026c99:
00026c9d: #185 := R31 - 0x40
00026ca3: mem := mem with [#185, el]:u64 <- R29
00026ca9: mem := mem with [#185 + 8, el]:u64 <- R30
00026cad: R31 := #185
00026cb3: R29 := R31
00026cbb: mem := mem with [R31 + 0x28, el]:u64 <- R0
00026cc3: mem := mem with [R31 + 0x20, el]:u64 <- R1
00026ccb: mem := mem with [R31 + 0x1C, el]:u32 <- 31:0[R2]
00026cd2: R0 := mem[R31 + 0x28, el]:u64
00026cd7: VF := 0
00026cda: CF := 1
00026cde: ZF := R0 = 0
00026ce2: NF := 63:63[R0]
00026ce8: when ZF <> 1 goto %00026ce6
00045d3f: goto %000372a5

000372a5:
000372a8: R0 := 0x41B000
000372ae: R0 := R0 + 0xB10
000372b6: mem := mem with [R31 + 0x28, el]:u64 <- R0
00045d40: goto %00026ce6

00026ce6:
00026cee: R0 := 0x1000
00026cf3: R30 := 0x40E288
00026cf5: call @zmalloc with return %00026cf7

00026cf7:
00026cfd: mem := mem with [R31 + 0x38, el]:u64 <- R0
00026d04: R5 := pad:64[mem[R31 + 0x1C, el]:u32]
00026d0b: R4 := mem[R31 + 0x20, el]:u64
00026d12: R3 := mem[R31 + 0x28, el]:u64
00026d17: R0 := 0x41B000
00026d1d: R2 := R0 + 0xC10
00026d22: R1 := 0xFFF
00026d29: R0 := mem[R31 + 0x38, el]:u64
00026d2e: R30 := 0x40E2AC
00026d30: call @snprintf with return %00026d32

00026d32:
00026d37: R0 := mem[R31 + 0x38, el]:u64
00026d3e: R29 := mem[R31, el]:u64
00026d43: R30 := mem[R31 + 8, el]:u64
00026d47: R31 := R31 + 0x40
00026d4c: call R30 with noreturn

00045d41: sub gen_407_page(gen_407_page_result)
00046315: gen_407_page_result :: out u32 = low:32[R0]

00026c02:
00026c06: #184 := R31 - 0x30
00026c0c: mem := mem with [#184, el]:u64 <- R29
00026c12: mem := mem with [#184 + 8, el]:u64 <- R30
00026c16: R31 := #184
00026c1c: R29 := R31
00026c24: mem := mem with [R31 + 0x18, el]:u64 <- R0
00026c2b: R0 := mem[R31 + 0x18, el]:u64
00026c30: VF := 0
00026c33: CF := 1
00026c37: ZF := R0 = 0
00026c3b: NF := 63:63[R0]
00026c41: when ZF <> 1 goto %00026c3f
00045d42: goto %000372b8

000372b8:
000372bb: R0 := 0x41B000
000372c1: R0 := R0 + 0xB10
000372c9: mem := mem with [R31 + 0x18, el]:u64 <- R0
00045d43: goto %00026c3f

00026c3f:
00026c47: R0 := 0x1000
00026c4c: R30 := 0x40E22C
00026c4e: call @zmalloc with return %00026c50

00026c50:
00026c56: mem := mem with [R31 + 0x28, el]:u64 <- R0
00026c5d: R3 := mem[R31 + 0x18, el]:u64
00026c62: R0 := 0x41B000
00026c68: R2 := R0 + 0xB20
00026c6d: R1 := 0xFFF
00026c74: R0 := mem[R31 + 0x28, el]:u64
00026c79: R30 := 0x40E248
00026c7b: call @snprintf with return %00026c7d

00026c7d:
00026c82: R0 := mem[R31 + 0x28, el]:u64
00026c89: R29 := mem[R31, el]:u64
00026c8e: R30 := mem[R31 + 8, el]:u64
00026c92: R31 := R31 + 0x30
00026c97: call R30 with noreturn

00045d44: sub gen_502_page(gen_502_page_result)
00046316: gen_502_page_result :: out u32 = low:32[R0]

00026de5:
00026de9: #187 := R31 - 0x30
00026def: mem := mem with [#187, el]:u64 <- R29
00026df5: mem := mem with [#187 + 8, el]:u64 <- R30
00026df9: R31 := #187
00026dff: R29 := R31
00026e07: mem := mem with [R31 + 0x18, el]:u64 <- R0
00026e0f: mem := mem with [R31 + 0x10, el]:u64 <- R1
00026e16: R0 := mem[R31 + 0x18, el]:u64
00026e1b: VF := 0
00026e1e: CF := 1
00026e22: ZF := R0 = 0
00026e26: NF := 63:63[R0]
00026e2c: when ZF <> 1 goto %00026e2a
00045d45: goto %0003727f

0003727f:
00037282: R0 := 0x41B000
00037288: R0 := R0 + 0xB10
00037290: mem := mem with [R31 + 0x18, el]:u64 <- R0
00045d46: goto %00026e2a

00026e2a:
00026e34: R0 := mem[R31 + 0x10, el]:u64
00026e39: VF := 0
00026e3c: CF := 1
00026e40: ZF := R0 = 0
00026e44: NF := 63:63[R0]
00026e4a: when ZF <> 1 goto %00026e48
00045d47: goto %0003726c

0003726c:
0003726f: R0 := 0x41B000
00037275: R0 := R0 + 0xDB8
0003727d: mem := mem with [R31 + 0x10, el]:u64 <- R0
00045d48: goto %00026e48

00026e48:
00026e50: R0 := 0x1000
00026e55: R30 := 0x40E354
00026e57: call @zmalloc with return %00026e59

00026e59:
00026e5f: mem := mem with [R31 + 0x28, el]:u64 <- R0
00026e66: R5 := mem[R31 + 0x10, el]:u64
00026e6d: R4 := mem[R31 + 0x10, el]:u64
00026e74: R3 := mem[R31 + 0x18, el]:u64
00026e79: R0 := 0x41B000
00026e7f: R2 := R0 + 0xDC8
00026e84: R1 := 0xFFF
00026e8b: R0 := mem[R31 + 0x28, el]:u64
00026e90: R30 := 0x40E378
00026e92: call @snprintf with return %00026e94

00026e94:
00026e99: R0 := mem[R31 + 0x28, el]:u64
00026ea0: R29 := mem[R31, el]:u64
00026ea5: R30 := mem[R31 + 8, el]:u64
00026ea9: R31 := R31 + 0x30
00026eae: call R30 with noreturn

00045d49: sub gen_denied_page(gen_denied_page_result)
00046317: gen_denied_page_result :: out u32 = low:32[R0]

00026d4e:
00026d52: #186 := R31 - 0x30
00026d58: mem := mem with [#186, el]:u64 <- R29
00026d5e: mem := mem with [#186 + 8, el]:u64 <- R30
00026d62: R31 := #186
00026d68: R29 := R31
00026d70: mem := mem with [R31 + 0x18, el]:u64 <- R0
00026d77: R0 := mem[R31 + 0x18, el]:u64
00026d7c: VF := 0
00026d7f: CF := 1
00026d83: ZF := R0 = 0
00026d87: NF := 63:63[R0]
00026d8d: when ZF <> 1 goto %00026d8b
00045d4a: goto %00037292

00037292:
00037295: R0 := 0x41B000
0003729b: R0 := R0 + 0xD00
000372a3: mem := mem with [R31 + 0x18, el]:u64 <- R0
00045d4b: goto %00026d8b

00026d8b:
00026d93: R0 := 0x1000
00026d98: R30 := 0x40E2E4
00026d9a: call @zmalloc with return %00026d9c

00026d9c:
00026da2: mem := mem with [R31 + 0x28, el]:u64 <- R0
00026da9: R3 := mem[R31 + 0x18, el]:u64
00026dae: R0 := 0x41B000
00026db4: R2 := R0 + 0xD08
00026db9: R1 := 0xFFF
00026dc0: R0 := mem[R31 + 0x28, el]:u64
00026dc5: R30 := 0x40E300
00026dc7: call @snprintf with return %00026dc9

00026dc9:
00026dce: R0 := mem[R31 + 0x28, el]:u64
00026dd5: R29 := mem[R31, el]:u64
00026dda: R30 := mem[R31 + 8, el]:u64
00026dde: R31 := R31 + 0x30
00026de3: call R30 with noreturn

00045d4c: sub get_http_header_name(get_http_header_name_result)
00046318: get_http_header_name_result :: out u32 = low:32[R0]

0002a48f:
0002a493: #250 := R31 - 0x30
0002a499: mem := mem with [#250, el]:u64 <- R29
0002a49f: mem := mem with [#250 + 8, el]:u64 <- R30
0002a4a3: R31 := #250
0002a4a9: R29 := R31
0002a4b1: mem := mem with [R31 + 0x18, el]:u64 <- R0
0002a4b6: R0 := 0x419000
0002a4bc: R1 := R0 + 0xA08
0002a4c3: R0 := mem[R31 + 0x18, el]:u64
0002a4c8: R30 := 0x406B80
0002a4ca: call @strcspn with return %0002a4cc

0002a4cc:
0002a4d2: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
0002a4d9: R0 := mem[R31 + 0x18, el]:u64
0002a4de: R30 := 0x406B8C
0002a4e0: call @strlen with return %0002a4e2

0002a4e2:
0002a4e6: R1 := pad:64[31:0[R0]]
0002a4ed: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0002a4f3: #251 := ~31:0[R1]
0002a4f8: #252 := 31:0[R0] + ~31:0[R1]
0002a4fe: VF := extend:64[#252 + 1] <> extend:64[31:0[R0]] + extend:64[#251]
          + 1
0002a504: CF := pad:64[#252 + 1] <> pad:64[31:0[R0]] + pad:64[#251] + 1
0002a508: ZF := #252 + 1 = 0
0002a50c: NF := 31:31[#252 + 1]
0002a512: when ZF goto %0002a510
00045d4d: goto %0002a613

0002a510:
0002a518: R0 := 0
00045d4e: goto %0002a51a

0002a613:
0002a618: R2 := pad:64[mem[R31 + 0x2C, el]:u32]
0002a61d: R1 := 0
0002a624: R0 := mem[R31 + 0x18, el]:u64
0002a629: R30 := 0x406BAC
0002a62b: call @substr with return %0002a62d

0002a62d:
0002a62f: goto %0002a51a

0002a51a:
0002a51f: R29 := mem[R31, el]:u64
0002a524: R30 := mem[R31 + 8, el]:u64
0002a528: R31 := R31 + 0x30
0002a52d: call R30 with noreturn

00045d4f: sub get_http_header_value(get_http_header_value_result)
00046319: get_http_header_value_result :: out u32 = low:32[R0]

0002a52f:
0002a533: #253 := R31 - 0x30
0002a539: mem := mem with [#253, el]:u64 <- R29
0002a53f: mem := mem with [#253 + 8, el]:u64 <- R30
0002a543: R31 := #253
0002a549: R29 := R31
0002a551: mem := mem with [R31 + 0x18, el]:u64 <- R0
0002a556: R1 := 0x3A
0002a55d: R0 := mem[R31 + 0x18, el]:u64
0002a562: R30 := 0x406BD4
0002a564: call @strchr with return %0002a566

0002a566:
0002a56c: mem := mem with [R31 + 0x28, el]:u64 <- R0
0002a573: R0 := mem[R31 + 0x28, el]:u64
0002a578: VF := 0
0002a57b: CF := 1
0002a57f: ZF := R0 = 0
0002a583: NF := 63:63[R0]
0002a589: when ZF goto %0002a587
00045d50: goto %0002a5a6

0002a587:
0002a58f: R0 := 0
00045d51: goto %0002a591

0002a5a6:
0002a5ab: R0 := mem[R31 + 0x28, el]:u64
0002a5b1: R0 := R0 + 1
0002a5b9: mem := mem with [R31 + 0x28, el]:u64 <- R0
0002a5be: goto %0002a5bc

0002a5bc:
0002a5c4: R0 := mem[R31 + 0x28, el]:u64
0002a5cb: R0 := pad:64[mem[R0]]
0002a5d1: #254 := 31:0[R0] - 0x20
0002a5d6: VF := extend:64[#254] <> extend:64[31:0[R0]] - 0x20
0002a5db: CF := pad:64[#254] <> pad:64[31:0[R0]] + 0xFFFFFFE0
0002a5df: ZF := #254 = 0
0002a5e3: NF := 31:31[#254]
0002a5e9: when ZF goto %0002a5e7
00045d52: goto %0002a601

0002a601:
0002a606: R0 := mem[R31 + 0x28, el]:u64
0002a60b: R30 := 0x406C18
0002a60d: call @strdup with return %0002a60f

0002a60f:
0002a611: goto %0002a591

0002a591:
0002a596: R29 := mem[R31, el]:u64
0002a59b: R30 := mem[R31 + 8, el]:u64
0002a59f: R31 := R31 + 0x30
0002a5a4: call R30 with noreturn

0002a5e7:
0002a5f1: R0 := mem[R31 + 0x28, el]:u64
0002a5f7: R0 := R0 + 1
0002a5ff: mem := mem with [R31 + 0x28, el]:u64 <- R0
00045d53: goto %0002a5bc

00045d54: sub getaddrinfo(getaddrinfo_result)
0004631a: getaddrinfo_result :: out u32 = low:32[R0]

00024316:
0003febe: R16 := 0x430000
0003fec5: R17 := mem[R16 + 0x268, el]:u64
0003fecb: R16 := R16 + 0x268
0003fed0: call R17 with noreturn

00045d55: sub geteuid(geteuid_result)
0004631b: geteuid_result :: out u32 = low:32[R0]

0003c3ab:
0003f93e: R16 := 0x430000
0003f945: R17 := mem[R16 + 0x68, el]:u64
0003f94b: R16 := R16 + 0x68
0003f950: call R17 with noreturn

00045d56: sub getgid(getgid_result)
0004631c: getgid_result :: out u32 = low:32[R0]

0003c3d7:
0003fde2: R16 := 0x430000
0003fde9: R17 := mem[R16 + 0x218, el]:u64
0003fdef: R16 := R16 + 0x218
0003fdf4: call R17 with noreturn

00045d57: sub gethostname(gethostname_buf, gethostname_len, gethostname_result)
0004631d: gethostname_buf :: in out u64 = R0
0004631e: gethostname_len :: in u64 = R1
0004631f: gethostname_result :: out u32 = low:32[R0]

0003d434:
0003ff00: R16 := 0x430000
0003ff07: R17 := mem[R16 + 0x280, el]:u64
0003ff0d: R16 := R16 + 0x280
0003ff12: call R17 with noreturn

00045d58: sub getpid(getpid_result)
00046320: getpid_result :: out u32 = low:32[R0]

0003bfec:
0003fa46: R16 := 0x430000
0003fa4d: R17 := mem[R16 + 0xC8, el]:u64
0003fa53: R16 := R16 + 0xC8
0003fa58: call R17 with noreturn

00045d59: sub getpwnam(getpwnam_result)
00046321: getpwnam_result :: out u32 = low:32[R0]

0003c187:
0003fb38: R16 := 0x430000
0003fb3f: R17 := mem[R16 + 0x120, el]:u64
0003fb45: R16 := R16 + 0x120
0003fb4a: call R17 with noreturn

00045d5a: sub getrandom64(getrandom64_result)
00046322: getrandom64_result :: out u32 = low:32[R0]

00017074:
00017078: #34 := R31 - 0x40
0001707e: mem := mem with [#34, el]:u64 <- R29
00017084: mem := mem with [#34 + 8, el]:u64 <- R30
00017088: R31 := #34
0001708e: R29 := R31
00017096: mem := mem with [R31 + 0x10, el]:u64 <- R19
0001709d: mem := mem with [R31 + 0x20, el]:u64 <- 0
000170a4: mem := mem with [R31 + 0x3C, el]:u32 <- 0
000170a9: R0 := 0x41C000
000170af: R1 := R0 + 0xF10
000170b4: R0 := 0x41C000
000170ba: R0 := R0 + 0xF18
000170bf: R30 := 0x412EC0
000170c2: call @fopen with return %000170c4

000170c4:
000170ca: mem := mem with [R31 + 0x30, el]:u64 <- R0
000170d1: R0 := mem[R31 + 0x30, el]:u64
000170d6: VF := 0
000170d9: CF := 1
000170dd: ZF := R0 = 0
000170e1: NF := 63:63[R0]
000170e7: when ZF goto %000170e5
00045d5b: goto %00021015

000170e5:
000170ed: R0 := 0x430000
000170f3: R0 := R0 + 0x390
000170fa: R0 := pad:64[mem[R0, el]:u32]
000170ff: VF := 0
00017102: CF := 1
00017106: ZF := 31:0[R0] = 0
0001710a: NF := 31:31[R0]
00017110: when ZF goto %0001710e
00045d5c: goto %00021002

00021002:
00021005: R0 := 0x41C000
0002100b: R0 := R0 + 0xF50
00021010: R30 := 0x412F5C
00021013: call @puts with return %0001710e

00021015:
00021019: R0 := R31 + 0x20
00021020: R3 := mem[R31 + 0x30, el]:u64
00021025: R2 := 1
0002102a: R1 := 8
0002102f: R30 := 0x412EE4
00021031: call @fread with return %00021033

00021033:
00021039: mem := mem with [R31 + 0x28, el]:u64 <- R0
00021040: R0 := mem[R31 + 0x28, el]:u64
00021046: #90 := R0 - 1
0002104b: VF := extend:128[#90] <> extend:128[R0] - 1
00021050: CF := pad:128[#90] <> pad:128[R0] + 0xFFFFFFFFFFFFFFFF
00021054: ZF := #90 = 0
00021058: NF := 63:63[#90]
0002105e: when ZF <> 1 goto %0002105c
00045d5d: goto %000210cb

0002105c:
00021064: R0 := 0x430000
0002106a: R0 := R0 + 0x390
00021071: R0 := pad:64[mem[R0, el]:u32]
00021076: VF := 0
00021079: CF := 1
0002107d: ZF := 31:0[R0] = 0
00021081: NF := 31:31[R0]
00021087: when ZF goto %00021085
00045d5e: goto %0002109d

0002109d:
000210a0: R30 := 0x412F18
000210a2: call @__errno_location with return %000210a4

000210a4:
000210a9: R0 := pad:64[mem[R0, el]:u32]
000210ae: R30 := 0x412F20
000210b0: call @strerror with return %000210b2

000210b2:
000210b6: R1 := R0
000210bb: R0 := 0x41C000
000210c1: R0 := R0 + 0xF28
000210c6: R30 := 0x412F30
000210c9: call @printf with return %00021085

000210cb:
000210ce: R0 := 1
000210d6: mem := mem with [R31 + 0x3C, el]:u32 <- 31:0[R0]
000210da: goto %00021085

00021085:
0002108f: R0 := mem[R31 + 0x30, el]:u64
00021094: R30 := 0x412F38
00021097: call @fclose with return %00021099

00021099:
0002109b: goto %0001710e

0001710e:
00017118: R0 := pad:64[mem[R31 + 0x3C, el]:u32]
0001711d: VF := 0
00017120: CF := 1
00017124: ZF := 31:0[R0] = 0
00017128: NF := 31:31[R0]
0001712e: when ZF <> 1 goto %0001712c
00045d5f: goto %00020fde

00020fde:
00020fe1: R30 := 0x412F6C
00020fe4: call @random with return %00020fe6

00020fe6:
00020fea: R19 := 31:0[R0].0
00020fef: R30 := 0x412F74
00020ff1: call @random with return %00020ff3

00020ff3:
00020ff8: R0 := R19 | R0
00021000: mem := mem with [R31 + 0x20, el]:u64 <- R0
00045d60: goto %0001712c

0001712c:
00017136: R0 := mem[R31 + 0x20, el]:u64
0001713d: R19 := mem[R31 + 0x10, el]:u64
00017144: R29 := mem[R31, el]:u64
00017149: R30 := mem[R31 + 8, el]:u64
0001714d: R31 := R31 + 0x40
00017152: call R30 with noreturn

00045d61: sub getuid(getuid_result)
00046323: getuid_result :: out u32 = low:32[R0]

0003c10e:
0003f96a: R16 := 0x430000
0003f971: R17 := mem[R16 + 0x78, el]:u64
0003f977: R16 := R16 + 0x78
0003f97c: call R17 with noreturn

00045d62: sub gl_des_ecb_crypt(gl_des_ecb_crypt_result)
00046324: gl_des_ecb_crypt_result :: out u32 = low:32[R0]

0001816f:
00018173: R31 := R31 - 0x50
0001817b: mem := mem with [R31 + 0x18, el]:u64 <- R0
00018183: mem := mem with [R31 + 0x10, el]:u64 <- R1
0001818b: mem := mem with [R31 + 8, el]:u64 <- R2
00018193: mem := mem with [R31 + 4, el]:u32 <- 31:0[R3]
0001819a: R0 := mem[R31 + 0x10, el]:u64
000181a2: mem := mem with [R31 + 0x48, el]:u64 <- R0
000181a9: R0 := mem[R31 + 8, el]:u64
000181b1: mem := mem with [R31 + 0x40, el]:u64 <- R0
000181b8: R0 := pad:64[mem[R31 + 4, el]:u32]
000181bd: VF := 0
000181c0: CF := 1
000181c4: ZF := 31:0[R0] = 0
000181c8: NF := 31:31[R0]
000181ce: when ZF goto %000181cc
00045d63: goto %00020d8f

000181cc:
000181d6: R0 := mem[R31 + 0x18, el]:u64
00045d64: goto %000181d8

00020d8f:
00020d94: R0 := mem[R31 + 0x18, el]:u64
00020d9a: R0 := R0 + 0x80
00020d9e: goto %000181d8

000181d8:
000181de: mem := mem with [R31 + 0x38, el]:u64 <- R0
000181e5: R0 := mem[R31 + 0x48, el]:u64
000181ec: R0 := pad:64[mem[R0]]
000181f2: R1 := pad:64[7:0[R0].0]
000181f9: R0 := mem[R31 + 0x48, el]:u64
000181ff: R0 := R0 + 1
00018206: R0 := pad:64[mem[R0]]
0001820c: R0 := pad:64[15:0[R0].0]
00018213: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001821a: R0 := mem[R31 + 0x48, el]:u64
00018220: R0 := R0 + 2
00018227: R0 := pad:64[mem[R0]]
0001822d: R0 := pad:64[23:0[R0].0]
00018234: R0 := pad:64[31:0[R1] | 31:0[R0]]
0001823b: R1 := mem[R31 + 0x48, el]:u64
00018241: R1 := R1 + 3
00018248: R1 := pad:64[mem[R1]]
0001824f: R0 := pad:64[31:0[R0] | 31:0[R1]]
00018257: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
0001825e: R0 := mem[R31 + 0x48, el]:u64
00018264: R0 := R0 + 4
0001826b: R0 := pad:64[mem[R0]]
00018271: R1 := pad:64[7:0[R0].0]
00018278: R0 := mem[R31 + 0x48, el]:u64
0001827e: R0 := R0 + 5
00018285: R0 := pad:64[mem[R0]]
0001828b: R0 := pad:64[15:0[R0].0]
00018292: R1 := pad:64[31:0[R1] | 31:0[R0]]
00018299: R0 := mem[R31 + 0x48, el]:u64
0001829f: R0 := R0 + 6
000182a6: R0 := pad:64[mem[R0]]
000182ac: R0 := pad:64[23:0[R0].0]
000182b3: R0 := pad:64[31:0[R1] | 31:0[R0]]
000182ba: R1 := mem[R31 + 0x48, el]:u64
000182c0: R1 := R1 + 7
000182c7: R1 := pad:64[mem[R1]]
000182ce: R0 := pad:64[31:0[R0] | 31:0[R1]]
000182d6: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
000182dd: R0 := pad:64[mem[R31 + 0x34, el]:u32]
000182e3: R1 := pad:64[31:4[R0]]
000182ea: R0 := pad:64[mem[R31 + 0x30, el]:u32]
000182f1: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
000182f7: R0 := pad:64[31:0[R0] & 0xF0F0F0F]
000182ff: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
00018306: R1 := pad:64[mem[R31 + 0x30, el]:u32]
0001830d: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00018314: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001831c: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
00018323: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00018329: R0 := pad:64[27:0[R0].0]
00018330: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00018337: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001833f: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
00018346: R0 := pad:64[mem[R31 + 0x34, el]:u32]
0001834c: R1 := pad:64[31:16[R0]]
00018353: R0 := pad:64[mem[R31 + 0x30, el]:u32]
0001835a: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00018360: R0 := pad:64[15:0[R0]]
00018368: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
0001836f: R1 := pad:64[mem[R31 + 0x30, el]:u32]
00018376: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001837d: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00018385: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
0001838c: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00018392: R0 := pad:64[15:0[R0].0]
00018399: R1 := pad:64[mem[R31 + 0x34, el]:u32]
000183a0: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
000183a8: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
000183af: R0 := pad:64[mem[R31 + 0x30, el]:u32]
000183b5: R1 := pad:64[31:2[R0]]
000183bc: R0 := pad:64[mem[R31 + 0x34, el]:u32]
000183c3: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
000183c9: R0 := pad:64[31:0[R0] & 0x33333333]
000183d1: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
000183d8: R1 := pad:64[mem[R31 + 0x34, el]:u32]
000183df: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
000183e6: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
000183ee: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
000183f5: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
000183fb: R0 := pad:64[29:0[R0].0]
00018402: R1 := pad:64[mem[R31 + 0x30, el]:u32]
00018409: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00018411: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
00018418: R0 := pad:64[mem[R31 + 0x30, el]:u32]
0001841e: R1 := pad:64[31:8[R0]]
00018425: R0 := pad:64[mem[R31 + 0x34, el]:u32]
0001842c: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00018432: R0 := pad:64[31:0[R0] & 0xFF00FF]
0001843a: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
00018441: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00018448: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001844f: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00018457: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
0001845e: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00018464: R0 := pad:64[23:0[R0].0]
0001846b: R1 := pad:64[mem[R31 + 0x30, el]:u32]
00018472: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001847a: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
00018481: R0 := pad:64[mem[R31 + 0x30, el]:u32]
00018488: R0 := pad:64[30:0[R0].31:31[R0]]
00018490: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
00018497: R1 := pad:64[mem[R31 + 0x34, el]:u32]
0001849e: R0 := pad:64[mem[R31 + 0x30, el]:u32]
000184a5: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
000184ab: R0 := pad:64[31:0[R0] & 0xAAAAAAAA]
000184b3: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
000184ba: R1 := pad:64[mem[R31 + 0x30, el]:u32]
000184c1: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
000184c8: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
000184d0: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
000184d7: R1 := pad:64[mem[R31 + 0x34, el]:u32]
000184de: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
000184e5: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
000184ed: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
000184f4: R0 := pad:64[mem[R31 + 0x34, el]:u32]
000184fb: R0 := pad:64[30:0[R0].31:31[R0]]
00018503: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
0001850a: R0 := mem[R31 + 0x38, el]:u64
00018510: R1 := R0 + 4
00018518: mem := mem with [R31 + 0x38, el]:u64 <- R1
0001851f: R0 := pad:64[mem[R0, el]:u32]
00018526: R1 := pad:64[mem[R31 + 0x30, el]:u32]
0001852d: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00018535: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
0001853c: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00018542: R1 := pad:64[5:0[R0]]
00018547: R0 := 0x41D000
0001854d: R0 := R0 + 0x7C0
00018553: R1 := pad:64[31:0[R1]]
0001855b: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00018562: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00018569: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00018571: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
00018578: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001857e: R0 := pad:64[31:8[R0]]
00018584: R1 := pad:64[5:0[R0]]
00018589: R0 := 0x41D000
0001858f: R0 := R0 + 0x5C0
00018595: R1 := pad:64[31:0[R1]]
0001859d: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
000185a4: R1 := pad:64[mem[R31 + 0x34, el]:u32]
000185ab: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
000185b3: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
000185ba: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
000185c0: R0 := pad:64[31:16[R0]]
000185c6: R1 := pad:64[5:0[R0]]
000185cb: R0 := 0x41D000
000185d1: R0 := R0 + 0x3C0
000185d7: R1 := pad:64[31:0[R1]]
000185df: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
000185e6: R1 := pad:64[mem[R31 + 0x34, el]:u32]
000185ed: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
000185f5: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
000185fc: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00018602: R0 := pad:64[31:24[R0]]
00018608: R1 := pad:64[5:0[R0]]
0001860d: R0 := 0x41D000
00018613: R0 := R0 + 0x1C0
00018619: R1 := pad:64[31:0[R1]]
00018621: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00018628: R1 := pad:64[mem[R31 + 0x34, el]:u32]
0001862f: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00018637: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
0001863e: R0 := pad:64[mem[R31 + 0x30, el]:u32]
00018645: R1 := pad:64[3:0[R0].31:4[R0]]
0001864c: R0 := mem[R31 + 0x38, el]:u64
00018652: R2 := R0 + 4
0001865a: mem := mem with [R31 + 0x38, el]:u64 <- R2
00018661: R0 := pad:64[mem[R0, el]:u32]
00018668: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00018670: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
00018677: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001867d: R1 := pad:64[5:0[R0]]
00018682: R0 := 0x41D000
00018688: R0 := R0 + 0x6C0
0001868e: R1 := pad:64[31:0[R1]]
00018696: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001869d: R1 := pad:64[mem[R31 + 0x34, el]:u32]
000186a4: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
000186ac: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
000186b3: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
000186b9: R0 := pad:64[31:8[R0]]
000186bf: R1 := pad:64[5:0[R0]]
000186c4: R0 := 0x41D000
000186ca: R0 := R0 + 0x4C0
000186d0: R1 := pad:64[31:0[R1]]
000186d8: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
000186df: R1 := pad:64[mem[R31 + 0x34, el]:u32]
000186e6: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
000186ee: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
000186f5: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
000186fb: R0 := pad:64[31:16[R0]]
00018701: R1 := pad:64[5:0[R0]]
00018706: R0 := 0x41D000
0001870c: R0 := R0 + 0x2C0
00018712: R1 := pad:64[31:0[R1]]
0001871a: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00018721: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00018728: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00018730: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
00018737: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001873d: R0 := pad:64[31:24[R0]]
00018743: R1 := pad:64[5:0[R0]]
00018748: R0 := 0x41D000
0001874e: R0 := R0 + 0xC0
00018754: R1 := pad:64[31:0[R1]]
0001875c: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00018763: R1 := pad:64[mem[R31 + 0x34, el]:u32]
0001876a: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00018772: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
00018779: R0 := mem[R31 + 0x38, el]:u64
0001877f: R1 := R0 + 4
00018787: mem := mem with [R31 + 0x38, el]:u64 <- R1
0001878e: R0 := pad:64[mem[R0, el]:u32]
00018795: R1 := pad:64[mem[R31 + 0x34, el]:u32]
0001879c: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
000187a4: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
000187ab: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
000187b1: R1 := pad:64[5:0[R0]]
000187b6: R0 := 0x41D000
000187bc: R0 := R0 + 0x7C0
000187c2: R1 := pad:64[31:0[R1]]
000187ca: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
000187d1: R1 := pad:64[mem[R31 + 0x30, el]:u32]
000187d8: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
000187e0: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
000187e7: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
000187ed: R0 := pad:64[31:8[R0]]
000187f3: R1 := pad:64[5:0[R0]]
000187f8: R0 := 0x41D000
000187fe: R0 := R0 + 0x5C0
00018804: R1 := pad:64[31:0[R1]]
0001880c: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00018813: R1 := pad:64[mem[R31 + 0x30, el]:u32]
0001881a: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00018822: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
00018829: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001882f: R0 := pad:64[31:16[R0]]
00018835: R1 := pad:64[5:0[R0]]
0001883a: R0 := 0x41D000
00018840: R0 := R0 + 0x3C0
00018846: R1 := pad:64[31:0[R1]]
0001884e: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00018855: R1 := pad:64[mem[R31 + 0x30, el]:u32]
0001885c: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00018864: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
0001886b: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00018871: R0 := pad:64[31:24[R0]]
00018877: R1 := pad:64[5:0[R0]]
0001887c: R0 := 0x41D000
00018882: R0 := R0 + 0x1C0
00018888: R1 := pad:64[31:0[R1]]
00018890: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00018897: R1 := pad:64[mem[R31 + 0x30, el]:u32]
0001889e: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
000188a6: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
000188ad: R0 := pad:64[mem[R31 + 0x34, el]:u32]
000188b4: R1 := pad:64[3:0[R0].31:4[R0]]
000188bb: R0 := mem[R31 + 0x38, el]:u64
000188c1: R2 := R0 + 4
000188c9: mem := mem with [R31 + 0x38, el]:u64 <- R2
000188d0: R0 := pad:64[mem[R0, el]:u32]
000188d7: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
000188df: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
000188e6: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
000188ec: R1 := pad:64[5:0[R0]]
000188f1: R0 := 0x41D000
000188f7: R0 := R0 + 0x6C0
000188fd: R1 := pad:64[31:0[R1]]
00018905: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001890c: R1 := pad:64[mem[R31 + 0x30, el]:u32]
00018913: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001891b: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
00018922: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00018928: R0 := pad:64[31:8[R0]]
0001892e: R1 := pad:64[5:0[R0]]
00018933: R0 := 0x41D000
00018939: R0 := R0 + 0x4C0
0001893f: R1 := pad:64[31:0[R1]]
00018947: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001894e: R1 := pad:64[mem[R31 + 0x30, el]:u32]
00018955: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001895d: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
00018964: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001896a: R0 := pad:64[31:16[R0]]
00018970: R1 := pad:64[5:0[R0]]
00018975: R0 := 0x41D000
0001897b: R0 := R0 + 0x2C0
00018981: R1 := pad:64[31:0[R1]]
00018989: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00018990: R1 := pad:64[mem[R31 + 0x30, el]:u32]
00018997: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001899f: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
000189a6: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
000189ac: R0 := pad:64[31:24[R0]]
000189b2: R1 := pad:64[5:0[R0]]
000189b7: R0 := 0x41D000
000189bd: R0 := R0 + 0xC0
000189c3: R1 := pad:64[31:0[R1]]
000189cb: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
000189d2: R1 := pad:64[mem[R31 + 0x30, el]:u32]
000189d9: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
000189e1: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
000189e8: R0 := mem[R31 + 0x38, el]:u64
000189ee: R1 := R0 + 4
000189f6: mem := mem with [R31 + 0x38, el]:u64 <- R1
000189fd: R0 := pad:64[mem[R0, el]:u32]
00018a04: R1 := pad:64[mem[R31 + 0x30, el]:u32]
00018a0b: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00018a13: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
00018a1a: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00018a20: R1 := pad:64[5:0[R0]]
00018a25: R0 := 0x41D000
00018a2b: R0 := R0 + 0x7C0
00018a31: R1 := pad:64[31:0[R1]]
00018a39: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00018a40: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00018a47: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00018a4f: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
00018a56: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00018a5c: R0 := pad:64[31:8[R0]]
00018a62: R1 := pad:64[5:0[R0]]
00018a67: R0 := 0x41D000
00018a6d: R0 := R0 + 0x5C0
00018a73: R1 := pad:64[31:0[R1]]
00018a7b: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00018a82: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00018a89: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00018a91: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
00018a98: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00018a9e: R0 := pad:64[31:16[R0]]
00018aa4: R1 := pad:64[5:0[R0]]
00018aa9: R0 := 0x41D000
00018aaf: R0 := R0 + 0x3C0
00018ab5: R1 := pad:64[31:0[R1]]
00018abd: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00018ac4: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00018acb: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00018ad3: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
00018ada: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00018ae0: R0 := pad:64[31:24[R0]]
00018ae6: R1 := pad:64[5:0[R0]]
00018aeb: R0 := 0x41D000
00018af1: R0 := R0 + 0x1C0
00018af7: R1 := pad:64[31:0[R1]]
00018aff: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00018b06: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00018b0d: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00018b15: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
00018b1c: R0 := pad:64[mem[R31 + 0x30, el]:u32]
00018b23: R1 := pad:64[3:0[R0].31:4[R0]]
00018b2a: R0 := mem[R31 + 0x38, el]:u64
00018b30: R2 := R0 + 4
00018b38: mem := mem with [R31 + 0x38, el]:u64 <- R2
00018b3f: R0 := pad:64[mem[R0, el]:u32]
00018b46: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00018b4e: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
00018b55: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00018b5b: R1 := pad:64[5:0[R0]]
00018b60: R0 := 0x41D000
00018b66: R0 := R0 + 0x6C0
00018b6c: R1 := pad:64[31:0[R1]]
00018b74: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00018b7b: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00018b82: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00018b8a: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
00018b91: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00018b97: R0 := pad:64[31:8[R0]]
00018b9d: R1 := pad:64[5:0[R0]]
00018ba2: R0 := 0x41D000
00018ba8: R0 := R0 + 0x4C0
00018bae: R1 := pad:64[31:0[R1]]
00018bb6: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00018bbd: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00018bc4: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00018bcc: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
00018bd3: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00018bd9: R0 := pad:64[31:16[R0]]
00018bdf: R1 := pad:64[5:0[R0]]
00018be4: R0 := 0x41D000
00018bea: R0 := R0 + 0x2C0
00018bf0: R1 := pad:64[31:0[R1]]
00018bf8: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00018bff: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00018c06: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00018c0e: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
00018c15: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00018c1b: R0 := pad:64[31:24[R0]]
00018c21: R1 := pad:64[5:0[R0]]
00018c26: R0 := 0x41D000
00018c2c: R0 := R0 + 0xC0
00018c32: R1 := pad:64[31:0[R1]]
00018c3a: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00018c41: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00018c48: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00018c50: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
00018c57: R0 := mem[R31 + 0x38, el]:u64
00018c5d: R1 := R0 + 4
00018c65: mem := mem with [R31 + 0x38, el]:u64 <- R1
00018c6c: R0 := pad:64[mem[R0, el]:u32]
00018c73: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00018c7a: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00018c82: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
00018c89: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00018c8f: R1 := pad:64[5:0[R0]]
00018c94: R0 := 0x41D000
00018c9a: R0 := R0 + 0x7C0
00018ca0: R1 := pad:64[31:0[R1]]
00018ca8: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00018caf: R1 := pad:64[mem[R31 + 0x30, el]:u32]
00018cb6: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00018cbe: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
00018cc5: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00018ccb: R0 := pad:64[31:8[R0]]
00018cd1: R1 := pad:64[5:0[R0]]
00018cd6: R0 := 0x41D000
00018cdc: R0 := R0 + 0x5C0
00018ce2: R1 := pad:64[31:0[R1]]
00018cea: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00018cf1: R1 := pad:64[mem[R31 + 0x30, el]:u32]
00018cf8: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00018d00: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
00018d07: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00018d0d: R0 := pad:64[31:16[R0]]
00018d13: R1 := pad:64[5:0[R0]]
00018d18: R0 := 0x41D000
00018d1e: R0 := R0 + 0x3C0
00018d24: R1 := pad:64[31:0[R1]]
00018d2c: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00018d33: R1 := pad:64[mem[R31 + 0x30, el]:u32]
00018d3a: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00018d42: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
00018d49: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00018d4f: R0 := pad:64[31:24[R0]]
00018d55: R1 := pad:64[5:0[R0]]
00018d5a: R0 := 0x41D000
00018d60: R0 := R0 + 0x1C0
00018d66: R1 := pad:64[31:0[R1]]
00018d6e: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00018d75: R1 := pad:64[mem[R31 + 0x30, el]:u32]
00018d7c: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00018d84: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
00018d8b: R0 := pad:64[mem[R31 + 0x34, el]:u32]
00018d92: R1 := pad:64[3:0[R0].31:4[R0]]
00018d99: R0 := mem[R31 + 0x38, el]:u64
00018d9f: R2 := R0 + 4
00018da7: mem := mem with [R31 + 0x38, el]:u64 <- R2
00018dae: R0 := pad:64[mem[R0, el]:u32]
00018db5: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00018dbd: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
00018dc4: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00018dca: R1 := pad:64[5:0[R0]]
00018dcf: R0 := 0x41D000
00018dd5: R0 := R0 + 0x6C0
00018ddb: R1 := pad:64[31:0[R1]]
00018de3: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00018dea: R1 := pad:64[mem[R31 + 0x30, el]:u32]
00018df1: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00018df9: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
00018e00: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00018e06: R0 := pad:64[31:8[R0]]
00018e0c: R1 := pad:64[5:0[R0]]
00018e11: R0 := 0x41D000
00018e17: R0 := R0 + 0x4C0
00018e1d: R1 := pad:64[31:0[R1]]
00018e25: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00018e2c: R1 := pad:64[mem[R31 + 0x30, el]:u32]
00018e33: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00018e3b: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
00018e42: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00018e48: R0 := pad:64[31:16[R0]]
00018e4e: R1 := pad:64[5:0[R0]]
00018e53: R0 := 0x41D000
00018e59: R0 := R0 + 0x2C0
00018e5f: R1 := pad:64[31:0[R1]]
00018e67: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00018e6e: R1 := pad:64[mem[R31 + 0x30, el]:u32]
00018e75: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00018e7d: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
00018e84: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00018e8a: R0 := pad:64[31:24[R0]]
00018e90: R1 := pad:64[5:0[R0]]
00018e95: R0 := 0x41D000
00018e9b: R0 := R0 + 0xC0
00018ea1: R1 := pad:64[31:0[R1]]
00018ea9: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00018eb0: R1 := pad:64[mem[R31 + 0x30, el]:u32]
00018eb7: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00018ebf: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
00018ec6: R0 := mem[R31 + 0x38, el]:u64
00018ecc: R1 := R0 + 4
00018ed4: mem := mem with [R31 + 0x38, el]:u64 <- R1
00018edb: R0 := pad:64[mem[R0, el]:u32]
00018ee2: R1 := pad:64[mem[R31 + 0x30, el]:u32]
00018ee9: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00018ef1: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
00018ef8: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00018efe: R1 := pad:64[5:0[R0]]
00018f03: R0 := 0x41D000
00018f09: R0 := R0 + 0x7C0
00018f0f: R1 := pad:64[31:0[R1]]
00018f17: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00018f1e: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00018f25: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00018f2d: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
00018f34: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00018f3a: R0 := pad:64[31:8[R0]]
00018f40: R1 := pad:64[5:0[R0]]
00018f45: R0 := 0x41D000
00018f4b: R0 := R0 + 0x5C0
00018f51: R1 := pad:64[31:0[R1]]
00018f59: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00018f60: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00018f67: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00018f6f: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
00018f76: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00018f7c: R0 := pad:64[31:16[R0]]
00018f82: R1 := pad:64[5:0[R0]]
00018f87: R0 := 0x41D000
00018f8d: R0 := R0 + 0x3C0
00018f93: R1 := pad:64[31:0[R1]]
00018f9b: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00018fa2: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00018fa9: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00018fb1: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
00018fb8: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00018fbe: R0 := pad:64[31:24[R0]]
00018fc4: R1 := pad:64[5:0[R0]]
00018fc9: R0 := 0x41D000
00018fcf: R0 := R0 + 0x1C0
00018fd5: R1 := pad:64[31:0[R1]]
00018fdd: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00018fe4: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00018feb: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00018ff3: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
00018ffa: R0 := pad:64[mem[R31 + 0x30, el]:u32]
00019001: R1 := pad:64[3:0[R0].31:4[R0]]
00019008: R0 := mem[R31 + 0x38, el]:u64
0001900e: R2 := R0 + 4
00019016: mem := mem with [R31 + 0x38, el]:u64 <- R2
0001901d: R0 := pad:64[mem[R0, el]:u32]
00019024: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001902c: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
00019033: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00019039: R1 := pad:64[5:0[R0]]
0001903e: R0 := 0x41D000
00019044: R0 := R0 + 0x6C0
0001904a: R1 := pad:64[31:0[R1]]
00019052: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00019059: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00019060: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00019068: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
0001906f: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00019075: R0 := pad:64[31:8[R0]]
0001907b: R1 := pad:64[5:0[R0]]
00019080: R0 := 0x41D000
00019086: R0 := R0 + 0x4C0
0001908c: R1 := pad:64[31:0[R1]]
00019094: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001909b: R1 := pad:64[mem[R31 + 0x34, el]:u32]
000190a2: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
000190aa: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
000190b1: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
000190b7: R0 := pad:64[31:16[R0]]
000190bd: R1 := pad:64[5:0[R0]]
000190c2: R0 := 0x41D000
000190c8: R0 := R0 + 0x2C0
000190ce: R1 := pad:64[31:0[R1]]
000190d6: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
000190dd: R1 := pad:64[mem[R31 + 0x34, el]:u32]
000190e4: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
000190ec: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
000190f3: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
000190f9: R0 := pad:64[31:24[R0]]
000190ff: R1 := pad:64[5:0[R0]]
00019104: R0 := 0x41D000
0001910a: R0 := R0 + 0xC0
00019110: R1 := pad:64[31:0[R1]]
00019118: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001911f: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00019126: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001912e: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
00019135: R0 := mem[R31 + 0x38, el]:u64
0001913b: R1 := R0 + 4
00019143: mem := mem with [R31 + 0x38, el]:u64 <- R1
0001914a: R0 := pad:64[mem[R0, el]:u32]
00019151: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00019158: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00019160: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
00019167: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001916d: R1 := pad:64[5:0[R0]]
00019172: R0 := 0x41D000
00019178: R0 := R0 + 0x7C0
0001917e: R1 := pad:64[31:0[R1]]
00019186: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001918d: R1 := pad:64[mem[R31 + 0x30, el]:u32]
00019194: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001919c: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
000191a3: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
000191a9: R0 := pad:64[31:8[R0]]
000191af: R1 := pad:64[5:0[R0]]
000191b4: R0 := 0x41D000
000191ba: R0 := R0 + 0x5C0
000191c0: R1 := pad:64[31:0[R1]]
000191c8: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
000191cf: R1 := pad:64[mem[R31 + 0x30, el]:u32]
000191d6: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
000191de: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
000191e5: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
000191eb: R0 := pad:64[31:16[R0]]
000191f1: R1 := pad:64[5:0[R0]]
000191f6: R0 := 0x41D000
000191fc: R0 := R0 + 0x3C0
00019202: R1 := pad:64[31:0[R1]]
0001920a: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00019211: R1 := pad:64[mem[R31 + 0x30, el]:u32]
00019218: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00019220: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
00019227: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001922d: R0 := pad:64[31:24[R0]]
00019233: R1 := pad:64[5:0[R0]]
00019238: R0 := 0x41D000
0001923e: R0 := R0 + 0x1C0
00019244: R1 := pad:64[31:0[R1]]
0001924c: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00019253: R1 := pad:64[mem[R31 + 0x30, el]:u32]
0001925a: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00019262: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
00019269: R0 := pad:64[mem[R31 + 0x34, el]:u32]
00019270: R1 := pad:64[3:0[R0].31:4[R0]]
00019277: R0 := mem[R31 + 0x38, el]:u64
0001927d: R2 := R0 + 4
00019285: mem := mem with [R31 + 0x38, el]:u64 <- R2
0001928c: R0 := pad:64[mem[R0, el]:u32]
00019293: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001929b: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
000192a2: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
000192a8: R1 := pad:64[5:0[R0]]
000192ad: R0 := 0x41D000
000192b3: R0 := R0 + 0x6C0
000192b9: R1 := pad:64[31:0[R1]]
000192c1: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
000192c8: R1 := pad:64[mem[R31 + 0x30, el]:u32]
000192cf: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
000192d7: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
000192de: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
000192e4: R0 := pad:64[31:8[R0]]
000192ea: R1 := pad:64[5:0[R0]]
000192ef: R0 := 0x41D000
000192f5: R0 := R0 + 0x4C0
000192fb: R1 := pad:64[31:0[R1]]
00019303: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001930a: R1 := pad:64[mem[R31 + 0x30, el]:u32]
00019311: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00019319: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
00019320: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00019326: R0 := pad:64[31:16[R0]]
0001932c: R1 := pad:64[5:0[R0]]
00019331: R0 := 0x41D000
00019337: R0 := R0 + 0x2C0
0001933d: R1 := pad:64[31:0[R1]]
00019345: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001934c: R1 := pad:64[mem[R31 + 0x30, el]:u32]
00019353: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001935b: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
00019362: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00019368: R0 := pad:64[31:24[R0]]
0001936e: R1 := pad:64[5:0[R0]]
00019373: R0 := 0x41D000
00019379: R0 := R0 + 0xC0
0001937f: R1 := pad:64[31:0[R1]]
00019387: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001938e: R1 := pad:64[mem[R31 + 0x30, el]:u32]
00019395: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001939d: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
000193a4: R0 := mem[R31 + 0x38, el]:u64
000193aa: R1 := R0 + 4
000193b2: mem := mem with [R31 + 0x38, el]:u64 <- R1
000193b9: R0 := pad:64[mem[R0, el]:u32]
000193c0: R1 := pad:64[mem[R31 + 0x30, el]:u32]
000193c7: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
000193cf: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
000193d6: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
000193dc: R1 := pad:64[5:0[R0]]
000193e1: R0 := 0x41D000
000193e7: R0 := R0 + 0x7C0
000193ed: R1 := pad:64[31:0[R1]]
000193f5: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
000193fc: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00019403: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001940b: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
00019412: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00019418: R0 := pad:64[31:8[R0]]
0001941e: R1 := pad:64[5:0[R0]]
00019423: R0 := 0x41D000
00019429: R0 := R0 + 0x5C0
0001942f: R1 := pad:64[31:0[R1]]
00019437: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001943e: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00019445: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001944d: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
00019454: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001945a: R0 := pad:64[31:16[R0]]
00019460: R1 := pad:64[5:0[R0]]
00019465: R0 := 0x41D000
0001946b: R0 := R0 + 0x3C0
00019471: R1 := pad:64[31:0[R1]]
00019479: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00019480: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00019487: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001948f: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
00019496: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001949c: R0 := pad:64[31:24[R0]]
000194a2: R1 := pad:64[5:0[R0]]
000194a7: R0 := 0x41D000
000194ad: R0 := R0 + 0x1C0
000194b3: R1 := pad:64[31:0[R1]]
000194bb: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
000194c2: R1 := pad:64[mem[R31 + 0x34, el]:u32]
000194c9: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
000194d1: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
000194d8: R0 := pad:64[mem[R31 + 0x30, el]:u32]
000194df: R1 := pad:64[3:0[R0].31:4[R0]]
000194e6: R0 := mem[R31 + 0x38, el]:u64
000194ec: R2 := R0 + 4
000194f4: mem := mem with [R31 + 0x38, el]:u64 <- R2
000194fb: R0 := pad:64[mem[R0, el]:u32]
00019502: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001950a: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
00019511: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00019517: R1 := pad:64[5:0[R0]]
0001951c: R0 := 0x41D000
00019522: R0 := R0 + 0x6C0
00019528: R1 := pad:64[31:0[R1]]
00019530: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00019537: R1 := pad:64[mem[R31 + 0x34, el]:u32]
0001953e: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00019546: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
0001954d: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00019553: R0 := pad:64[31:8[R0]]
00019559: R1 := pad:64[5:0[R0]]
0001955e: R0 := 0x41D000
00019564: R0 := R0 + 0x4C0
0001956a: R1 := pad:64[31:0[R1]]
00019572: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00019579: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00019580: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00019588: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
0001958f: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00019595: R0 := pad:64[31:16[R0]]
0001959b: R1 := pad:64[5:0[R0]]
000195a0: R0 := 0x41D000
000195a6: R0 := R0 + 0x2C0
000195ac: R1 := pad:64[31:0[R1]]
000195b4: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
000195bb: R1 := pad:64[mem[R31 + 0x34, el]:u32]
000195c2: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
000195ca: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
000195d1: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
000195d7: R0 := pad:64[31:24[R0]]
000195dd: R1 := pad:64[5:0[R0]]
000195e2: R0 := 0x41D000
000195e8: R0 := R0 + 0xC0
000195ee: R1 := pad:64[31:0[R1]]
000195f6: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
000195fd: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00019604: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001960c: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
00019613: R0 := mem[R31 + 0x38, el]:u64
00019619: R1 := R0 + 4
00019621: mem := mem with [R31 + 0x38, el]:u64 <- R1
00019628: R0 := pad:64[mem[R0, el]:u32]
0001962f: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00019636: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001963e: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
00019645: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001964b: R1 := pad:64[5:0[R0]]
00019650: R0 := 0x41D000
00019656: R0 := R0 + 0x7C0
0001965c: R1 := pad:64[31:0[R1]]
00019664: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001966b: R1 := pad:64[mem[R31 + 0x30, el]:u32]
00019672: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001967a: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
00019681: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00019687: R0 := pad:64[31:8[R0]]
0001968d: R1 := pad:64[5:0[R0]]
00019692: R0 := 0x41D000
00019698: R0 := R0 + 0x5C0
0001969e: R1 := pad:64[31:0[R1]]
000196a6: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
000196ad: R1 := pad:64[mem[R31 + 0x30, el]:u32]
000196b4: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
000196bc: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
000196c3: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
000196c9: R0 := pad:64[31:16[R0]]
000196cf: R1 := pad:64[5:0[R0]]
000196d4: R0 := 0x41D000
000196da: R0 := R0 + 0x3C0
000196e0: R1 := pad:64[31:0[R1]]
000196e8: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
000196ef: R1 := pad:64[mem[R31 + 0x30, el]:u32]
000196f6: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
000196fe: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
00019705: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001970b: R0 := pad:64[31:24[R0]]
00019711: R1 := pad:64[5:0[R0]]
00019716: R0 := 0x41D000
0001971c: R0 := R0 + 0x1C0
00019722: R1 := pad:64[31:0[R1]]
0001972a: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00019731: R1 := pad:64[mem[R31 + 0x30, el]:u32]
00019738: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00019740: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
00019747: R0 := pad:64[mem[R31 + 0x34, el]:u32]
0001974e: R1 := pad:64[3:0[R0].31:4[R0]]
00019755: R0 := mem[R31 + 0x38, el]:u64
0001975b: R2 := R0 + 4
00019763: mem := mem with [R31 + 0x38, el]:u64 <- R2
0001976a: R0 := pad:64[mem[R0, el]:u32]
00019771: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00019779: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
00019780: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00019786: R1 := pad:64[5:0[R0]]
0001978b: R0 := 0x41D000
00019791: R0 := R0 + 0x6C0
00019797: R1 := pad:64[31:0[R1]]
0001979f: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
000197a6: R1 := pad:64[mem[R31 + 0x30, el]:u32]
000197ad: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
000197b5: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
000197bc: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
000197c2: R0 := pad:64[31:8[R0]]
000197c8: R1 := pad:64[5:0[R0]]
000197cd: R0 := 0x41D000
000197d3: R0 := R0 + 0x4C0
000197d9: R1 := pad:64[31:0[R1]]
000197e1: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
000197e8: R1 := pad:64[mem[R31 + 0x30, el]:u32]
000197ef: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
000197f7: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
000197fe: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00019804: R0 := pad:64[31:16[R0]]
0001980a: R1 := pad:64[5:0[R0]]
0001980f: R0 := 0x41D000
00019815: R0 := R0 + 0x2C0
0001981b: R1 := pad:64[31:0[R1]]
00019823: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001982a: R1 := pad:64[mem[R31 + 0x30, el]:u32]
00019831: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00019839: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
00019840: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00019846: R0 := pad:64[31:24[R0]]
0001984c: R1 := pad:64[5:0[R0]]
00019851: R0 := 0x41D000
00019857: R0 := R0 + 0xC0
0001985d: R1 := pad:64[31:0[R1]]
00019865: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001986c: R1 := pad:64[mem[R31 + 0x30, el]:u32]
00019873: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001987b: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
00019882: R0 := mem[R31 + 0x38, el]:u64
00019888: R1 := R0 + 4
00019890: mem := mem with [R31 + 0x38, el]:u64 <- R1
00019897: R0 := pad:64[mem[R0, el]:u32]
0001989e: R1 := pad:64[mem[R31 + 0x30, el]:u32]
000198a5: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
000198ad: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
000198b4: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
000198ba: R1 := pad:64[5:0[R0]]
000198bf: R0 := 0x41D000
000198c5: R0 := R0 + 0x7C0
000198cb: R1 := pad:64[31:0[R1]]
000198d3: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
000198da: R1 := pad:64[mem[R31 + 0x34, el]:u32]
000198e1: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
000198e9: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
000198f0: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
000198f6: R0 := pad:64[31:8[R0]]
000198fc: R1 := pad:64[5:0[R0]]
00019901: R0 := 0x41D000
00019907: R0 := R0 + 0x5C0
0001990d: R1 := pad:64[31:0[R1]]
00019915: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001991c: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00019923: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001992b: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
00019932: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00019938: R0 := pad:64[31:16[R0]]
0001993e: R1 := pad:64[5:0[R0]]
00019943: R0 := 0x41D000
00019949: R0 := R0 + 0x3C0
0001994f: R1 := pad:64[31:0[R1]]
00019957: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001995e: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00019965: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001996d: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
00019974: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001997a: R0 := pad:64[31:24[R0]]
00019980: R1 := pad:64[5:0[R0]]
00019985: R0 := 0x41D000
0001998b: R0 := R0 + 0x1C0
00019991: R1 := pad:64[31:0[R1]]
00019999: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
000199a0: R1 := pad:64[mem[R31 + 0x34, el]:u32]
000199a7: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
000199af: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
000199b6: R0 := pad:64[mem[R31 + 0x30, el]:u32]
000199bd: R1 := pad:64[3:0[R0].31:4[R0]]
000199c4: R0 := mem[R31 + 0x38, el]:u64
000199ca: R2 := R0 + 4
000199d2: mem := mem with [R31 + 0x38, el]:u64 <- R2
000199d9: R0 := pad:64[mem[R0, el]:u32]
000199e0: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
000199e8: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
000199ef: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
000199f5: R1 := pad:64[5:0[R0]]
000199fa: R0 := 0x41D000
00019a00: R0 := R0 + 0x6C0
00019a06: R1 := pad:64[31:0[R1]]
00019a0e: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00019a15: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00019a1c: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00019a24: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
00019a2b: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00019a31: R0 := pad:64[31:8[R0]]
00019a37: R1 := pad:64[5:0[R0]]
00019a3c: R0 := 0x41D000
00019a42: R0 := R0 + 0x4C0
00019a48: R1 := pad:64[31:0[R1]]
00019a50: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00019a57: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00019a5e: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00019a66: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
00019a6d: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00019a73: R0 := pad:64[31:16[R0]]
00019a79: R1 := pad:64[5:0[R0]]
00019a7e: R0 := 0x41D000
00019a84: R0 := R0 + 0x2C0
00019a8a: R1 := pad:64[31:0[R1]]
00019a92: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00019a99: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00019aa0: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00019aa8: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
00019aaf: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00019ab5: R0 := pad:64[31:24[R0]]
00019abb: R1 := pad:64[5:0[R0]]
00019ac0: R0 := 0x41D000
00019ac6: R0 := R0 + 0xC0
00019acc: R1 := pad:64[31:0[R1]]
00019ad4: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00019adb: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00019ae2: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00019aea: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
00019af1: R0 := mem[R31 + 0x38, el]:u64
00019af7: R1 := R0 + 4
00019aff: mem := mem with [R31 + 0x38, el]:u64 <- R1
00019b06: R0 := pad:64[mem[R0, el]:u32]
00019b0d: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00019b14: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00019b1c: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
00019b23: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00019b29: R1 := pad:64[5:0[R0]]
00019b2e: R0 := 0x41D000
00019b34: R0 := R0 + 0x7C0
00019b3a: R1 := pad:64[31:0[R1]]
00019b42: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00019b49: R1 := pad:64[mem[R31 + 0x30, el]:u32]
00019b50: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00019b58: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
00019b5f: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00019b65: R0 := pad:64[31:8[R0]]
00019b6b: R1 := pad:64[5:0[R0]]
00019b70: R0 := 0x41D000
00019b76: R0 := R0 + 0x5C0
00019b7c: R1 := pad:64[31:0[R1]]
00019b84: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00019b8b: R1 := pad:64[mem[R31 + 0x30, el]:u32]
00019b92: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00019b9a: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
00019ba1: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00019ba7: R0 := pad:64[31:16[R0]]
00019bad: R1 := pad:64[5:0[R0]]
00019bb2: R0 := 0x41D000
00019bb8: R0 := R0 + 0x3C0
00019bbe: R1 := pad:64[31:0[R1]]
00019bc6: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00019bcd: R1 := pad:64[mem[R31 + 0x30, el]:u32]
00019bd4: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00019bdc: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
00019be3: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00019be9: R0 := pad:64[31:24[R0]]
00019bef: R1 := pad:64[5:0[R0]]
00019bf4: R0 := 0x41D000
00019bfa: R0 := R0 + 0x1C0
00019c00: R1 := pad:64[31:0[R1]]
00019c08: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00019c0f: R1 := pad:64[mem[R31 + 0x30, el]:u32]
00019c16: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00019c1e: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
00019c25: R0 := pad:64[mem[R31 + 0x34, el]:u32]
00019c2c: R1 := pad:64[3:0[R0].31:4[R0]]
00019c33: R0 := mem[R31 + 0x38, el]:u64
00019c39: R2 := R0 + 4
00019c41: mem := mem with [R31 + 0x38, el]:u64 <- R2
00019c48: R0 := pad:64[mem[R0, el]:u32]
00019c4f: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00019c57: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
00019c5e: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00019c64: R1 := pad:64[5:0[R0]]
00019c69: R0 := 0x41D000
00019c6f: R0 := R0 + 0x6C0
00019c75: R1 := pad:64[31:0[R1]]
00019c7d: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00019c84: R1 := pad:64[mem[R31 + 0x30, el]:u32]
00019c8b: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00019c93: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
00019c9a: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00019ca0: R0 := pad:64[31:8[R0]]
00019ca6: R1 := pad:64[5:0[R0]]
00019cab: R0 := 0x41D000
00019cb1: R0 := R0 + 0x4C0
00019cb7: R1 := pad:64[31:0[R1]]
00019cbf: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00019cc6: R1 := pad:64[mem[R31 + 0x30, el]:u32]
00019ccd: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00019cd5: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
00019cdc: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00019ce2: R0 := pad:64[31:16[R0]]
00019ce8: R1 := pad:64[5:0[R0]]
00019ced: R0 := 0x41D000
00019cf3: R0 := R0 + 0x2C0
00019cf9: R1 := pad:64[31:0[R1]]
00019d01: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00019d08: R1 := pad:64[mem[R31 + 0x30, el]:u32]
00019d0f: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00019d17: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
00019d1e: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00019d24: R0 := pad:64[31:24[R0]]
00019d2a: R1 := pad:64[5:0[R0]]
00019d2f: R0 := 0x41D000
00019d35: R0 := R0 + 0xC0
00019d3b: R1 := pad:64[31:0[R1]]
00019d43: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00019d4a: R1 := pad:64[mem[R31 + 0x30, el]:u32]
00019d51: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00019d59: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
00019d60: R0 := mem[R31 + 0x38, el]:u64
00019d66: R1 := R0 + 4
00019d6e: mem := mem with [R31 + 0x38, el]:u64 <- R1
00019d75: R0 := pad:64[mem[R0, el]:u32]
00019d7c: R1 := pad:64[mem[R31 + 0x30, el]:u32]
00019d83: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00019d8b: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
00019d92: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00019d98: R1 := pad:64[5:0[R0]]
00019d9d: R0 := 0x41D000
00019da3: R0 := R0 + 0x7C0
00019da9: R1 := pad:64[31:0[R1]]
00019db1: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00019db8: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00019dbf: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00019dc7: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
00019dce: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00019dd4: R0 := pad:64[31:8[R0]]
00019dda: R1 := pad:64[5:0[R0]]
00019ddf: R0 := 0x41D000
00019de5: R0 := R0 + 0x5C0
00019deb: R1 := pad:64[31:0[R1]]
00019df3: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00019dfa: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00019e01: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00019e09: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
00019e10: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00019e16: R0 := pad:64[31:16[R0]]
00019e1c: R1 := pad:64[5:0[R0]]
00019e21: R0 := 0x41D000
00019e27: R0 := R0 + 0x3C0
00019e2d: R1 := pad:64[31:0[R1]]
00019e35: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00019e3c: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00019e43: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00019e4b: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
00019e52: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00019e58: R0 := pad:64[31:24[R0]]
00019e5e: R1 := pad:64[5:0[R0]]
00019e63: R0 := 0x41D000
00019e69: R0 := R0 + 0x1C0
00019e6f: R1 := pad:64[31:0[R1]]
00019e77: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00019e7e: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00019e85: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00019e8d: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
00019e94: R0 := pad:64[mem[R31 + 0x30, el]:u32]
00019e9b: R1 := pad:64[3:0[R0].31:4[R0]]
00019ea2: R0 := mem[R31 + 0x38, el]:u64
00019ea8: R2 := R0 + 4
00019eb0: mem := mem with [R31 + 0x38, el]:u64 <- R2
00019eb7: R0 := pad:64[mem[R0, el]:u32]
00019ebe: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00019ec6: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
00019ecd: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00019ed3: R1 := pad:64[5:0[R0]]
00019ed8: R0 := 0x41D000
00019ede: R0 := R0 + 0x6C0
00019ee4: R1 := pad:64[31:0[R1]]
00019eec: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00019ef3: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00019efa: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00019f02: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
00019f09: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00019f0f: R0 := pad:64[31:8[R0]]
00019f15: R1 := pad:64[5:0[R0]]
00019f1a: R0 := 0x41D000
00019f20: R0 := R0 + 0x4C0
00019f26: R1 := pad:64[31:0[R1]]
00019f2e: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00019f35: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00019f3c: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00019f44: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
00019f4b: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00019f51: R0 := pad:64[31:16[R0]]
00019f57: R1 := pad:64[5:0[R0]]
00019f5c: R0 := 0x41D000
00019f62: R0 := R0 + 0x2C0
00019f68: R1 := pad:64[31:0[R1]]
00019f70: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00019f77: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00019f7e: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00019f86: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
00019f8d: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00019f93: R0 := pad:64[31:24[R0]]
00019f99: R1 := pad:64[5:0[R0]]
00019f9e: R0 := 0x41D000
00019fa4: R0 := R0 + 0xC0
00019faa: R1 := pad:64[31:0[R1]]
00019fb2: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00019fb9: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00019fc0: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00019fc8: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
00019fcf: R0 := mem[R31 + 0x38, el]:u64
00019fd5: R1 := R0 + 4
00019fdd: mem := mem with [R31 + 0x38, el]:u64 <- R1
00019fe4: R0 := pad:64[mem[R0, el]:u32]
00019feb: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00019ff2: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00019ffa: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
0001a001: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001a007: R1 := pad:64[5:0[R0]]
0001a00c: R0 := 0x41D000
0001a012: R0 := R0 + 0x7C0
0001a018: R1 := pad:64[31:0[R1]]
0001a020: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001a027: R1 := pad:64[mem[R31 + 0x30, el]:u32]
0001a02e: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001a036: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
0001a03d: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001a043: R0 := pad:64[31:8[R0]]
0001a049: R1 := pad:64[5:0[R0]]
0001a04e: R0 := 0x41D000
0001a054: R0 := R0 + 0x5C0
0001a05a: R1 := pad:64[31:0[R1]]
0001a062: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001a069: R1 := pad:64[mem[R31 + 0x30, el]:u32]
0001a070: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001a078: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
0001a07f: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001a085: R0 := pad:64[31:16[R0]]
0001a08b: R1 := pad:64[5:0[R0]]
0001a090: R0 := 0x41D000
0001a096: R0 := R0 + 0x3C0
0001a09c: R1 := pad:64[31:0[R1]]
0001a0a4: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001a0ab: R1 := pad:64[mem[R31 + 0x30, el]:u32]
0001a0b2: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001a0ba: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
0001a0c1: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001a0c7: R0 := pad:64[31:24[R0]]
0001a0cd: R1 := pad:64[5:0[R0]]
0001a0d2: R0 := 0x41D000
0001a0d8: R0 := R0 + 0x1C0
0001a0de: R1 := pad:64[31:0[R1]]
0001a0e6: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001a0ed: R1 := pad:64[mem[R31 + 0x30, el]:u32]
0001a0f4: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001a0fc: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
0001a103: R0 := pad:64[mem[R31 + 0x34, el]:u32]
0001a10a: R1 := pad:64[3:0[R0].31:4[R0]]
0001a111: R0 := mem[R31 + 0x38, el]:u64
0001a117: R2 := R0 + 4
0001a11f: mem := mem with [R31 + 0x38, el]:u64 <- R2
0001a126: R0 := pad:64[mem[R0, el]:u32]
0001a12d: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001a135: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
0001a13c: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001a142: R1 := pad:64[5:0[R0]]
0001a147: R0 := 0x41D000
0001a14d: R0 := R0 + 0x6C0
0001a153: R1 := pad:64[31:0[R1]]
0001a15b: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001a162: R1 := pad:64[mem[R31 + 0x30, el]:u32]
0001a169: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001a171: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
0001a178: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001a17e: R0 := pad:64[31:8[R0]]
0001a184: R1 := pad:64[5:0[R0]]
0001a189: R0 := 0x41D000
0001a18f: R0 := R0 + 0x4C0
0001a195: R1 := pad:64[31:0[R1]]
0001a19d: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001a1a4: R1 := pad:64[mem[R31 + 0x30, el]:u32]
0001a1ab: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001a1b3: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
0001a1ba: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001a1c0: R0 := pad:64[31:16[R0]]
0001a1c6: R1 := pad:64[5:0[R0]]
0001a1cb: R0 := 0x41D000
0001a1d1: R0 := R0 + 0x2C0
0001a1d7: R1 := pad:64[31:0[R1]]
0001a1df: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001a1e6: R1 := pad:64[mem[R31 + 0x30, el]:u32]
0001a1ed: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001a1f5: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
0001a1fc: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001a202: R0 := pad:64[31:24[R0]]
0001a208: R1 := pad:64[5:0[R0]]
0001a20d: R0 := 0x41D000
0001a213: R0 := R0 + 0xC0
0001a219: R1 := pad:64[31:0[R1]]
0001a221: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001a228: R1 := pad:64[mem[R31 + 0x30, el]:u32]
0001a22f: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001a237: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
0001a23e: R0 := mem[R31 + 0x38, el]:u64
0001a244: R1 := R0 + 4
0001a24c: mem := mem with [R31 + 0x38, el]:u64 <- R1
0001a253: R0 := pad:64[mem[R0, el]:u32]
0001a25a: R1 := pad:64[mem[R31 + 0x30, el]:u32]
0001a261: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001a269: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
0001a270: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001a276: R1 := pad:64[5:0[R0]]
0001a27b: R0 := 0x41D000
0001a281: R0 := R0 + 0x7C0
0001a287: R1 := pad:64[31:0[R1]]
0001a28f: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001a296: R1 := pad:64[mem[R31 + 0x34, el]:u32]
0001a29d: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001a2a5: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
0001a2ac: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001a2b2: R0 := pad:64[31:8[R0]]
0001a2b8: R1 := pad:64[5:0[R0]]
0001a2bd: R0 := 0x41D000
0001a2c3: R0 := R0 + 0x5C0
0001a2c9: R1 := pad:64[31:0[R1]]
0001a2d1: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001a2d8: R1 := pad:64[mem[R31 + 0x34, el]:u32]
0001a2df: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001a2e7: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
0001a2ee: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001a2f4: R0 := pad:64[31:16[R0]]
0001a2fa: R1 := pad:64[5:0[R0]]
0001a2ff: R0 := 0x41D000
0001a305: R0 := R0 + 0x3C0
0001a30b: R1 := pad:64[31:0[R1]]
0001a313: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001a31a: R1 := pad:64[mem[R31 + 0x34, el]:u32]
0001a321: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001a329: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
0001a330: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001a336: R0 := pad:64[31:24[R0]]
0001a33c: R1 := pad:64[5:0[R0]]
0001a341: R0 := 0x41D000
0001a347: R0 := R0 + 0x1C0
0001a34d: R1 := pad:64[31:0[R1]]
0001a355: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001a35c: R1 := pad:64[mem[R31 + 0x34, el]:u32]
0001a363: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001a36b: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
0001a372: R0 := pad:64[mem[R31 + 0x30, el]:u32]
0001a379: R1 := pad:64[3:0[R0].31:4[R0]]
0001a380: R0 := mem[R31 + 0x38, el]:u64
0001a386: R2 := R0 + 4
0001a38e: mem := mem with [R31 + 0x38, el]:u64 <- R2
0001a395: R0 := pad:64[mem[R0, el]:u32]
0001a39c: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001a3a4: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
0001a3ab: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001a3b1: R1 := pad:64[5:0[R0]]
0001a3b6: R0 := 0x41D000
0001a3bc: R0 := R0 + 0x6C0
0001a3c2: R1 := pad:64[31:0[R1]]
0001a3ca: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001a3d1: R1 := pad:64[mem[R31 + 0x34, el]:u32]
0001a3d8: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001a3e0: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
0001a3e7: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001a3ed: R0 := pad:64[31:8[R0]]
0001a3f3: R1 := pad:64[5:0[R0]]
0001a3f8: R0 := 0x41D000
0001a3fe: R0 := R0 + 0x4C0
0001a404: R1 := pad:64[31:0[R1]]
0001a40c: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001a413: R1 := pad:64[mem[R31 + 0x34, el]:u32]
0001a41a: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001a422: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
0001a429: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001a42f: R0 := pad:64[31:16[R0]]
0001a435: R1 := pad:64[5:0[R0]]
0001a43a: R0 := 0x41D000
0001a440: R0 := R0 + 0x2C0
0001a446: R1 := pad:64[31:0[R1]]
0001a44e: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001a455: R1 := pad:64[mem[R31 + 0x34, el]:u32]
0001a45c: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001a464: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
0001a46b: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001a471: R0 := pad:64[31:24[R0]]
0001a477: R1 := pad:64[5:0[R0]]
0001a47c: R0 := 0x41D000
0001a482: R0 := R0 + 0xC0
0001a488: R1 := pad:64[31:0[R1]]
0001a490: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001a497: R1 := pad:64[mem[R31 + 0x34, el]:u32]
0001a49e: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001a4a6: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
0001a4ad: R0 := mem[R31 + 0x38, el]:u64
0001a4b3: R1 := R0 + 4
0001a4bb: mem := mem with [R31 + 0x38, el]:u64 <- R1
0001a4c2: R0 := pad:64[mem[R0, el]:u32]
0001a4c9: R1 := pad:64[mem[R31 + 0x34, el]:u32]
0001a4d0: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001a4d8: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
0001a4df: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001a4e5: R1 := pad:64[5:0[R0]]
0001a4ea: R0 := 0x41D000
0001a4f0: R0 := R0 + 0x7C0
0001a4f6: R1 := pad:64[31:0[R1]]
0001a4fe: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001a505: R1 := pad:64[mem[R31 + 0x30, el]:u32]
0001a50c: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001a514: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
0001a51b: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001a521: R0 := pad:64[31:8[R0]]
0001a527: R1 := pad:64[5:0[R0]]
0001a52c: R0 := 0x41D000
0001a532: R0 := R0 + 0x5C0
0001a538: R1 := pad:64[31:0[R1]]
0001a540: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001a547: R1 := pad:64[mem[R31 + 0x30, el]:u32]
0001a54e: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001a556: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
0001a55d: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001a563: R0 := pad:64[31:16[R0]]
0001a569: R1 := pad:64[5:0[R0]]
0001a56e: R0 := 0x41D000
0001a574: R0 := R0 + 0x3C0
0001a57a: R1 := pad:64[31:0[R1]]
0001a582: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001a589: R1 := pad:64[mem[R31 + 0x30, el]:u32]
0001a590: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001a598: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
0001a59f: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001a5a5: R0 := pad:64[31:24[R0]]
0001a5ab: R1 := pad:64[5:0[R0]]
0001a5b0: R0 := 0x41D000
0001a5b6: R0 := R0 + 0x1C0
0001a5bc: R1 := pad:64[31:0[R1]]
0001a5c4: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001a5cb: R1 := pad:64[mem[R31 + 0x30, el]:u32]
0001a5d2: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001a5da: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
0001a5e1: R0 := pad:64[mem[R31 + 0x34, el]:u32]
0001a5e8: R1 := pad:64[3:0[R0].31:4[R0]]
0001a5ef: R0 := mem[R31 + 0x38, el]:u64
0001a5f5: R2 := R0 + 4
0001a5fd: mem := mem with [R31 + 0x38, el]:u64 <- R2
0001a604: R0 := pad:64[mem[R0, el]:u32]
0001a60b: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001a613: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
0001a61a: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001a620: R1 := pad:64[5:0[R0]]
0001a625: R0 := 0x41D000
0001a62b: R0 := R0 + 0x6C0
0001a631: R1 := pad:64[31:0[R1]]
0001a639: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001a640: R1 := pad:64[mem[R31 + 0x30, el]:u32]
0001a647: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001a64f: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
0001a656: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001a65c: R0 := pad:64[31:8[R0]]
0001a662: R1 := pad:64[5:0[R0]]
0001a667: R0 := 0x41D000
0001a66d: R0 := R0 + 0x4C0
0001a673: R1 := pad:64[31:0[R1]]
0001a67b: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001a682: R1 := pad:64[mem[R31 + 0x30, el]:u32]
0001a689: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001a691: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
0001a698: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001a69e: R0 := pad:64[31:16[R0]]
0001a6a4: R1 := pad:64[5:0[R0]]
0001a6a9: R0 := 0x41D000
0001a6af: R0 := R0 + 0x2C0
0001a6b5: R1 := pad:64[31:0[R1]]
0001a6bd: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001a6c4: R1 := pad:64[mem[R31 + 0x30, el]:u32]
0001a6cb: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001a6d3: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
0001a6da: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001a6e0: R0 := pad:64[31:24[R0]]
0001a6e6: R1 := pad:64[5:0[R0]]
0001a6eb: R0 := 0x41D000
0001a6f1: R0 := R0 + 0xC0
0001a6f7: R1 := pad:64[31:0[R1]]
0001a6ff: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001a706: R1 := pad:64[mem[R31 + 0x30, el]:u32]
0001a70d: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001a715: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
0001a71c: R0 := mem[R31 + 0x38, el]:u64
0001a722: R1 := R0 + 4
0001a72a: mem := mem with [R31 + 0x38, el]:u64 <- R1
0001a731: R0 := pad:64[mem[R0, el]:u32]
0001a738: R1 := pad:64[mem[R31 + 0x30, el]:u32]
0001a73f: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001a747: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
0001a74e: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001a754: R1 := pad:64[5:0[R0]]
0001a759: R0 := 0x41D000
0001a75f: R0 := R0 + 0x7C0
0001a765: R1 := pad:64[31:0[R1]]
0001a76d: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001a774: R1 := pad:64[mem[R31 + 0x34, el]:u32]
0001a77b: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001a783: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
0001a78a: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001a790: R0 := pad:64[31:8[R0]]
0001a796: R1 := pad:64[5:0[R0]]
0001a79b: R0 := 0x41D000
0001a7a1: R0 := R0 + 0x5C0
0001a7a7: R1 := pad:64[31:0[R1]]
0001a7af: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001a7b6: R1 := pad:64[mem[R31 + 0x34, el]:u32]
0001a7bd: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001a7c5: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
0001a7cc: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001a7d2: R0 := pad:64[31:16[R0]]
0001a7d8: R1 := pad:64[5:0[R0]]
0001a7dd: R0 := 0x41D000
0001a7e3: R0 := R0 + 0x3C0
0001a7e9: R1 := pad:64[31:0[R1]]
0001a7f1: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001a7f8: R1 := pad:64[mem[R31 + 0x34, el]:u32]
0001a7ff: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001a807: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
0001a80e: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001a814: R0 := pad:64[31:24[R0]]
0001a81a: R1 := pad:64[5:0[R0]]
0001a81f: R0 := 0x41D000
0001a825: R0 := R0 + 0x1C0
0001a82b: R1 := pad:64[31:0[R1]]
0001a833: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001a83a: R1 := pad:64[mem[R31 + 0x34, el]:u32]
0001a841: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001a849: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
0001a850: R0 := pad:64[mem[R31 + 0x30, el]:u32]
0001a857: R1 := pad:64[3:0[R0].31:4[R0]]
0001a85e: R0 := mem[R31 + 0x38, el]:u64
0001a864: R2 := R0 + 4
0001a86c: mem := mem with [R31 + 0x38, el]:u64 <- R2
0001a873: R0 := pad:64[mem[R0, el]:u32]
0001a87a: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001a882: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
0001a889: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001a88f: R1 := pad:64[5:0[R0]]
0001a894: R0 := 0x41D000
0001a89a: R0 := R0 + 0x6C0
0001a8a0: R1 := pad:64[31:0[R1]]
0001a8a8: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001a8af: R1 := pad:64[mem[R31 + 0x34, el]:u32]
0001a8b6: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001a8be: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
0001a8c5: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001a8cb: R0 := pad:64[31:8[R0]]
0001a8d1: R1 := pad:64[5:0[R0]]
0001a8d6: R0 := 0x41D000
0001a8dc: R0 := R0 + 0x4C0
0001a8e2: R1 := pad:64[31:0[R1]]
0001a8ea: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001a8f1: R1 := pad:64[mem[R31 + 0x34, el]:u32]
0001a8f8: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001a900: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
0001a907: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001a90d: R0 := pad:64[31:16[R0]]
0001a913: R1 := pad:64[5:0[R0]]
0001a918: R0 := 0x41D000
0001a91e: R0 := R0 + 0x2C0
0001a924: R1 := pad:64[31:0[R1]]
0001a92c: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001a933: R1 := pad:64[mem[R31 + 0x34, el]:u32]
0001a93a: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001a942: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
0001a949: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001a94f: R0 := pad:64[31:24[R0]]
0001a955: R1 := pad:64[5:0[R0]]
0001a95a: R0 := 0x41D000
0001a960: R0 := R0 + 0xC0
0001a966: R1 := pad:64[31:0[R1]]
0001a96e: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001a975: R1 := pad:64[mem[R31 + 0x34, el]:u32]
0001a97c: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001a984: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
0001a98b: R0 := mem[R31 + 0x38, el]:u64
0001a991: R1 := R0 + 4
0001a999: mem := mem with [R31 + 0x38, el]:u64 <- R1
0001a9a0: R0 := pad:64[mem[R0, el]:u32]
0001a9a7: R1 := pad:64[mem[R31 + 0x34, el]:u32]
0001a9ae: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001a9b6: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
0001a9bd: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001a9c3: R1 := pad:64[5:0[R0]]
0001a9c8: R0 := 0x41D000
0001a9ce: R0 := R0 + 0x7C0
0001a9d4: R1 := pad:64[31:0[R1]]
0001a9dc: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001a9e3: R1 := pad:64[mem[R31 + 0x30, el]:u32]
0001a9ea: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001a9f2: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
0001a9f9: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001a9ff: R0 := pad:64[31:8[R0]]
0001aa05: R1 := pad:64[5:0[R0]]
0001aa0a: R0 := 0x41D000
0001aa10: R0 := R0 + 0x5C0
0001aa16: R1 := pad:64[31:0[R1]]
0001aa1e: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001aa25: R1 := pad:64[mem[R31 + 0x30, el]:u32]
0001aa2c: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001aa34: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
0001aa3b: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001aa41: R0 := pad:64[31:16[R0]]
0001aa47: R1 := pad:64[5:0[R0]]
0001aa4c: R0 := 0x41D000
0001aa52: R0 := R0 + 0x3C0
0001aa58: R1 := pad:64[31:0[R1]]
0001aa60: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001aa67: R1 := pad:64[mem[R31 + 0x30, el]:u32]
0001aa6e: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001aa76: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
0001aa7d: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001aa83: R0 := pad:64[31:24[R0]]
0001aa89: R1 := pad:64[5:0[R0]]
0001aa8e: R0 := 0x41D000
0001aa94: R0 := R0 + 0x1C0
0001aa9a: R1 := pad:64[31:0[R1]]
0001aaa2: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001aaa9: R1 := pad:64[mem[R31 + 0x30, el]:u32]
0001aab0: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001aab8: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
0001aabf: R0 := pad:64[mem[R31 + 0x34, el]:u32]
0001aac6: R1 := pad:64[3:0[R0].31:4[R0]]
0001aacd: R0 := mem[R31 + 0x38, el]:u64
0001aad3: R2 := R0 + 4
0001aadb: mem := mem with [R31 + 0x38, el]:u64 <- R2
0001aae2: R0 := pad:64[mem[R0, el]:u32]
0001aae9: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001aaf1: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
0001aaf8: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001aafe: R1 := pad:64[5:0[R0]]
0001ab03: R0 := 0x41D000
0001ab09: R0 := R0 + 0x6C0
0001ab0f: R1 := pad:64[31:0[R1]]
0001ab17: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001ab1e: R1 := pad:64[mem[R31 + 0x30, el]:u32]
0001ab25: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001ab2d: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
0001ab34: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001ab3a: R0 := pad:64[31:8[R0]]
0001ab40: R1 := pad:64[5:0[R0]]
0001ab45: R0 := 0x41D000
0001ab4b: R0 := R0 + 0x4C0
0001ab51: R1 := pad:64[31:0[R1]]
0001ab59: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001ab60: R1 := pad:64[mem[R31 + 0x30, el]:u32]
0001ab67: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001ab6f: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
0001ab76: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001ab7c: R0 := pad:64[31:16[R0]]
0001ab82: R1 := pad:64[5:0[R0]]
0001ab87: R0 := 0x41D000
0001ab8d: R0 := R0 + 0x2C0
0001ab93: R1 := pad:64[31:0[R1]]
0001ab9b: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001aba2: R1 := pad:64[mem[R31 + 0x30, el]:u32]
0001aba9: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001abb1: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
0001abb8: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001abbe: R0 := pad:64[31:24[R0]]
0001abc4: R1 := pad:64[5:0[R0]]
0001abc9: R0 := 0x41D000
0001abcf: R0 := R0 + 0xC0
0001abd5: R1 := pad:64[31:0[R1]]
0001abdd: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0001abe4: R1 := pad:64[mem[R31 + 0x30, el]:u32]
0001abeb: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001abf3: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
0001abfa: R0 := pad:64[mem[R31 + 0x30, el]:u32]
0001ac01: R0 := pad:64[0:0[R0].31:1[R0]]
0001ac09: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
0001ac10: R1 := pad:64[mem[R31 + 0x30, el]:u32]
0001ac17: R0 := pad:64[mem[R31 + 0x34, el]:u32]
0001ac1e: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001ac24: R0 := pad:64[31:0[R0] & 0xAAAAAAAA]
0001ac2c: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
0001ac33: R1 := pad:64[mem[R31 + 0x30, el]:u32]
0001ac3a: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001ac41: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001ac49: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
0001ac50: R1 := pad:64[mem[R31 + 0x34, el]:u32]
0001ac57: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001ac5e: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001ac66: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
0001ac6d: R0 := pad:64[mem[R31 + 0x34, el]:u32]
0001ac74: R0 := pad:64[0:0[R0].31:1[R0]]
0001ac7c: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
0001ac83: R0 := pad:64[mem[R31 + 0x34, el]:u32]
0001ac89: R1 := pad:64[31:8[R0]]
0001ac90: R0 := pad:64[mem[R31 + 0x30, el]:u32]
0001ac97: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001ac9d: R0 := pad:64[31:0[R0] & 0xFF00FF]
0001aca5: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
0001acac: R1 := pad:64[mem[R31 + 0x30, el]:u32]
0001acb3: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001acba: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001acc2: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
0001acc9: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001accf: R0 := pad:64[23:0[R0].0]
0001acd6: R1 := pad:64[mem[R31 + 0x34, el]:u32]
0001acdd: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001ace5: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
0001acec: R0 := pad:64[mem[R31 + 0x34, el]:u32]
0001acf2: R1 := pad:64[31:2[R0]]
0001acf9: R0 := pad:64[mem[R31 + 0x30, el]:u32]
0001ad00: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001ad06: R0 := pad:64[31:0[R0] & 0x33333333]
0001ad0e: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
0001ad15: R1 := pad:64[mem[R31 + 0x30, el]:u32]
0001ad1c: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001ad23: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001ad2b: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
0001ad32: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001ad38: R0 := pad:64[29:0[R0].0]
0001ad3f: R1 := pad:64[mem[R31 + 0x34, el]:u32]
0001ad46: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001ad4e: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
0001ad55: R0 := pad:64[mem[R31 + 0x30, el]:u32]
0001ad5b: R1 := pad:64[31:16[R0]]
0001ad62: R0 := pad:64[mem[R31 + 0x34, el]:u32]
0001ad69: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001ad6f: R0 := pad:64[15:0[R0]]
0001ad77: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
0001ad7e: R1 := pad:64[mem[R31 + 0x34, el]:u32]
0001ad85: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001ad8c: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001ad94: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
0001ad9b: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001ada1: R0 := pad:64[15:0[R0].0]
0001ada8: R1 := pad:64[mem[R31 + 0x30, el]:u32]
0001adaf: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001adb7: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
0001adbe: R0 := pad:64[mem[R31 + 0x30, el]:u32]
0001adc4: R1 := pad:64[31:4[R0]]
0001adcb: R0 := pad:64[mem[R31 + 0x34, el]:u32]
0001add2: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001add8: R0 := pad:64[31:0[R0] & 0xF0F0F0F]
0001ade0: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
0001ade7: R1 := pad:64[mem[R31 + 0x34, el]:u32]
0001adee: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001adf5: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001adfd: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
0001ae04: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001ae0a: R0 := pad:64[27:0[R0].0]
0001ae11: R1 := pad:64[mem[R31 + 0x30, el]:u32]
0001ae18: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
0001ae20: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
0001ae27: R0 := pad:64[mem[R31 + 0x30, el]:u32]
0001ae2d: R0 := pad:64[31:24[R0]]
0001ae33: R1 := pad:64[7:0[R0]]
0001ae3a: R0 := mem[R31 + 0x40, el]:u64
0001ae42: mem := mem with [R0] <- 7:0[R1]
0001ae49: R0 := pad:64[mem[R31 + 0x30, el]:u32]
0001ae4f: R1 := pad:64[31:16[R0]]
0001ae56: R0 := mem[R31 + 0x40, el]:u64
0001ae5c: R0 := R0 + 1
0001ae62: R1 := pad:64[7:0[R1]]
0001ae6a: mem := mem with [R0] <- 7:0[R1]
0001ae71: R0 := pad:64[mem[R31 + 0x30, el]:u32]
0001ae77: R1 := pad:64[31:8[R0]]
0001ae7e: R0 := mem[R31 + 0x40, el]:u64
0001ae84: R0 := R0 + 2
0001ae8a: R1 := pad:64[7:0[R1]]
0001ae92: mem := mem with [R0] <- 7:0[R1]
0001ae99: R0 := mem[R31 + 0x40, el]:u64
0001ae9f: R0 := R0 + 3
0001aea6: R1 := pad:64[mem[R31 + 0x30, el]:u32]
0001aeac: R1 := pad:64[7:0[R1]]
0001aeb4: mem := mem with [R0] <- 7:0[R1]
0001aebb: R0 := pad:64[mem[R31 + 0x34, el]:u32]
0001aec1: R1 := pad:64[31:24[R0]]
0001aec8: R0 := mem[R31 + 0x40, el]:u64
0001aece: R0 := R0 + 4
0001aed4: R1 := pad:64[7:0[R1]]
0001aedc: mem := mem with [R0] <- 7:0[R1]
0001aee3: R0 := pad:64[mem[R31 + 0x34, el]:u32]
0001aee9: R1 := pad:64[31:16[R0]]
0001aef0: R0 := mem[R31 + 0x40, el]:u64
0001aef6: R0 := R0 + 5
0001aefc: R1 := pad:64[7:0[R1]]
0001af04: mem := mem with [R0] <- 7:0[R1]
0001af0b: R0 := pad:64[mem[R31 + 0x34, el]:u32]
0001af11: R1 := pad:64[31:8[R0]]
0001af18: R0 := mem[R31 + 0x40, el]:u64
0001af1e: R0 := R0 + 6
0001af24: R1 := pad:64[7:0[R1]]
0001af2c: mem := mem with [R0] <- 7:0[R1]
0001af33: R0 := mem[R31 + 0x40, el]:u64
0001af39: R0 := R0 + 7
0001af40: R1 := pad:64[mem[R31 + 0x34, el]:u32]
0001af46: R1 := pad:64[7:0[R1]]
0001af4e: mem := mem with [R0] <- 7:0[R1]
0001af56: R31 := R31 + 0x50
0001af5b: call R30 with noreturn

00045d65: sub gl_des_is_weak_key(gl_des_is_weak_key_result)
00046325: gl_des_is_weak_key_result :: out u32 = low:32[R0]

000171ee:
000171f2: #36 := R31 - 0x40
000171f8: mem := mem with [#36, el]:u64 <- R29
000171fe: mem := mem with [#36 + 8, el]:u64 <- R30
00017202: R31 := #36
00017208: R29 := R31
00017210: mem := mem with [R31 + 0x18, el]:u64 <- R0
00017217: mem := mem with [R31 + 0x3C, el]:u32 <- 0
0001721c: goto %0001721a

0001721a:
00017222: R0 := pad:64[mem[R31 + 0x3C, el]:u32]
00017228: #37 := 31:0[R0] - 7
0001722d: VF := extend:64[#37] <> extend:64[31:0[R0]] - 7
00017232: CF := pad:64[#37] <> pad:64[31:0[R0]] + 0xFFFFFFF9
00017236: ZF := #37 = 0
0001723a: NF := 31:31[#37]
00017242: when ~(NF = VF & ~ZF) goto %00017240
00045d66: goto %00017298

00017298:
0001729d: mem := mem with [R31 + 0x38, el]:u32 <- 0
000172a2: R0 := 0x3F
000172aa: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
000172af: goto %000172ad

000172ad:
000172b5: R1 := pad:64[mem[R31 + 0x38, el]:u32]
000172bc: R0 := pad:64[mem[R31 + 0x34, el]:u32]
000172c2: #38 := ~31:0[R0]
000172c7: #39 := 31:0[R1] + ~31:0[R0]
000172cd: VF := extend:64[#39 + 1] <> extend:64[31:0[R1]] + extend:64[#38] +
          1
000172d3: CF := pad:64[#39 + 1] <> pad:64[31:0[R1]] + pad:64[#38] + 1
000172d7: ZF := #39 + 1 = 0
000172db: NF := 31:31[#39 + 1]
000172e3: when ~(NF = VF & ~ZF) goto %000172e1
00045d67: goto %00020da9

00020da9:
00020dac: R0 := 0
00045d68: goto %000173c2

000172e1:
000172eb: R1 := pad:64[mem[R31 + 0x38, el]:u32]
000172f2: R0 := pad:64[mem[R31 + 0x34, el]:u32]
000172f9: R0 := pad:64[31:0[R1] + 31:0[R0]]
000172ff: R1 := pad:64[31:31[R0]]
00017306: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001730c: R0 := pad:64[extend:32[31:1[R0]]]
00017314: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
0001731b: R0 := extend:64[mem[R31 + 0x30, el]:u32]
00017321: R1 := 60:0[R0].0
00017326: R0 := 0x41D000
0001732c: R0 := R0 + 0x950
00017333: R1 := R1 + R0
00017339: R0 := R31 + 0x20
0001733e: R2 := 8
00017343: R30 := 0x413178
00017346: call @memcmp with return %00017348

00017348:
0001734e: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
00017355: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001735a: VF := 0
0001735d: CF := 1
00017361: ZF := 31:0[R0] = 0
00017365: NF := 31:31[R0]
0001736b: when ZF <> 1 goto %00017369
00045d69: goto %000173bc

00017369:
00017373: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00017378: VF := 0
0001737b: CF := 1
0001737f: ZF := 31:0[R0] = 0
00017383: NF := 31:31[R0]
0001738b: when ~(NF = VF & ~ZF) goto %00017389
00045d6a: goto %000173a3

00017389:
00017393: R0 := pad:64[mem[R31 + 0x30, el]:u32]
00017399: R0 := pad:64[31:0[R0] - 1]
000173a1: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
00045d6b: goto %000172ad

000173a3:
000173a8: R0 := pad:64[mem[R31 + 0x30, el]:u32]
000173ae: R0 := pad:64[31:0[R0] + 1]
000173b6: mem := mem with [R31 + 0x38, el]:u32 <- 31:0[R0]
000173ba: goto %000172ad

000173bc:
000173bf: R0 := 1
000173c4: goto %000173c2

000173c2:
000173ca: R29 := mem[R31, el]:u64
000173cf: R30 := mem[R31 + 8, el]:u64
000173d3: R31 := R31 + 0x40
000173d8: call R30 with noreturn

00017240:
0001724a: R0 := extend:64[mem[R31 + 0x3C, el]:u32]
00017251: R1 := mem[R31 + 0x18, el]:u64
00017258: R0 := R1 + R0
0001725f: R0 := pad:64[mem[R0]]
00017265: R0 := pad:64[31:1[R0].0]
0001726b: R2 := pad:64[7:0[R0]]
00017272: R0 := extend:64[mem[R31 + 0x3C, el]:u32]
00017278: R1 := R31 + 0x20
00017281: mem := mem with [R1 + R0] <- 7:0[R2]
00017288: R0 := pad:64[mem[R31 + 0x3C, el]:u32]
0001728e: R0 := pad:64[31:0[R0] + 1]
00017296: mem := mem with [R31 + 0x3C, el]:u32 <- 31:0[R0]
00045d6c: goto %0001721a

00045d6d: sub gl_des_makekey(gl_des_makekey_result)
00046326: gl_des_makekey_result :: out u32 = low:32[R0]

0001809a:
0001809e: #43 := R31 - 0x30
000180a4: mem := mem with [#43, el]:u64 <- R29
000180aa: mem := mem with [#43 + 8, el]:u64 <- R30
000180ae: R31 := #43
000180b4: R29 := R31
000180bc: mem := mem with [R31 + 0x28, el]:u64 <- R0
000180c4: mem := mem with [R31 + 0x20, el]:u64 <- R1
000180cc: mem := mem with [R31 + 0x18, el]:u64 <- R2
000180d3: R0 := mem[R31 + 0x18, el]:u64
000180d9: #44 := R0 - 8
000180de: VF := extend:128[#44] <> extend:128[R0] - 8
000180e3: CF := pad:128[#44] <> pad:128[R0] + 0xFFFFFFFFFFFFFFF8
000180e7: ZF := #44 = 0
000180eb: NF := 63:63[#44]
000180f1: when ZF goto %000180ef
00045d6e: goto %00020da0

000180ef:
000180f9: R1 := mem[R31 + 0x20, el]:u64
00018100: R0 := mem[R31 + 0x28, el]:u64
00018105: R30 := 0x4139B4
00018107: call @gl_des_setkey with return %00018109

00018109:
0001810e: R0 := mem[R31 + 0x20, el]:u64
00018113: R30 := 0x4139BC
00018115: call @gl_des_is_weak_key with return %00018117

00018117:
0001811b: R0 := pad:64[7:0[R0]]
00018120: VF := 0
00018123: CF := 1
00018127: ZF := 31:0[R0] = 0
0001812b: NF := 31:31[R0]
00018137: when ZF goto %00018130
00018138: goto %00018133

00018133:
00018134: R0 := 1
0001813a: goto %00018136

00018130:
00018131: R0 := 0
00018139: goto %00018136

00018136:
00018140: R0 := pad:64[7:0[R0]]
00018146: R0 := pad:64[31:0[R0] ^ 1]
0001814c: R0 := pad:64[7:0[R0]]
00018152: R0 := pad:64[0:0[R0]]
00018158: R0 := pad:64[7:0[R0]]
00045d6f: goto %0001815a

00020da0:
00020da3: R0 := 0
00020da7: goto %0001815a

0001815a:
0001815f: R29 := mem[R31, el]:u64
00018164: R30 := mem[R31 + 8, el]:u64
00018168: R31 := R31 + 0x30
0001816d: call R30 with noreturn

00045d70: sub gl_des_setkey(gl_des_setkey_result)
00046327: gl_des_setkey_result :: out u32 = low:32[R0]

00017f5c:
00017f60: #41 := R31 - 0x30
00017f66: mem := mem with [#41, el]:u64 <- R29
00017f6c: mem := mem with [#41 + 8, el]:u64 <- R30
00017f70: R31 := #41
00017f76: R29 := R31
00017f7e: mem := mem with [R31 + 0x18, el]:u64 <- R0
00017f86: mem := mem with [R31 + 0x10, el]:u64 <- R1
00017f8d: R0 := mem[R31 + 0x18, el]:u64
00017f93: R1 := R0
00017f9a: R0 := mem[R31 + 0x10, el]:u64
00017f9f: R30 := 0x4138F8
00017fa1: call @des_key_schedule with return %00017fa3

00017fa3:
00017fa8: mem := mem with [R31 + 0x2C, el]:u32 <- 0
00017fad: goto %00017fab

00017fab:
00017fb3: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00017fb9: #42 := 31:0[R0] - 0x1F
00017fbe: VF := extend:64[#42] <> extend:64[31:0[R0]] - 0x1F
00017fc3: CF := pad:64[#42] <> pad:64[31:0[R0]] + 0xFFFFFFE1
00017fc7: ZF := #42 = 0
00017fcb: NF := 31:31[#42]
00017fd3: when ~(NF = VF & ~ZF) goto %00017fd1
00045d71: goto %00018081

00018081:
0001808a: R29 := mem[R31, el]:u64
0001808f: R30 := mem[R31 + 8, el]:u64
00018093: R31 := R31 + 0x30
00018098: call R30 with noreturn

00017fd1:
00017fd9: R1 := 0x1E
00017fe0: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00017fe7: R1 := pad:64[31:0[R1] + ~31:0[R0] + 1]
00017fee: R0 := mem[R31 + 0x18, el]:u64
00017ff4: R1 := extend:64[31:0[R1]]
00017ffc: R2 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00018003: R0 := mem[R31 + 0x18, el]:u64
0001800a: R1 := extend:64[mem[R31 + 0x2C, el]:u32]
00018010: R1 := R1 + 0x20
00018019: mem := mem with [R0 + (61:0[R1].0), el]:u32 <- 31:0[R2]
0001801e: R1 := 0x1F
00018025: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001802c: R1 := pad:64[31:0[R1] + ~31:0[R0] + 1]
00018033: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00018039: R3 := pad:64[31:0[R0] + 1]
00018040: R0 := mem[R31 + 0x18, el]:u64
00018046: R1 := extend:64[31:0[R1]]
0001804e: R2 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00018055: R0 := mem[R31 + 0x18, el]:u64
0001805b: R1 := extend:64[31:0[R3]]
00018061: R1 := R1 + 0x20
0001806a: mem := mem with [R0 + (61:0[R1].0), el]:u32 <- 31:0[R2]
00018071: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00018077: R0 := pad:64[31:0[R0] + 2]
0001807f: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
00045d72: goto %00017fab

00045d73: sub headers_recv(headers_recv_result)
00046328: headers_recv_result :: out u32 = low:32[R0]

00028848:
0002884f: #222 := R31 - 0x80
00028855: mem := mem with [#222, el]:u64 <- R29
0002885b: mem := mem with [#222 + 8, el]:u64 <- R30
0002885f: R31 := #222
00028865: R29 := R31
0002886b: #223 := R31 + 0x10
00028871: mem := mem with [#223, el]:u64 <- R19
00028877: mem := mem with [#223 + 8, el]:u64 <- R20
0002887f: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
00028887: mem := mem with [R31 + 0x20, el]:u64 <- R1
0002888e: mem := mem with [R31 + 0x54, el]:u32 <- 0
00028895: mem := mem with [R31 + 0x38, el]:u64 <- 0
0002889c: mem := mem with [R31 + 0x68, el]:u64 <- 0
000288a3: mem := mem with [R31 + 0x60, el]:u64 <- 0
000288aa: mem := mem with [R31 + 0x58, el]:u64 <- 0
000288af: R0 := 0x1000
000288b7: mem := mem with [R31 + 0x4C, el]:u32 <- 31:0[R0]
000288be: R0 := pad:64[mem[R31 + 0x4C, el]:u32]
000288c4: R0 := extend:64[31:0[R0]]
000288c9: R30 := 0x406C64
000288cb: call @zmalloc with return %000288cd

000288cd:
000288d3: mem := mem with [R31 + 0x40, el]:u64 <- R0
000288d9: R1 := R31 + 0x4C
000288df: R0 := R31 + 0x40
000288e5: R2 := R1
000288eb: R1 := R0
000288f2: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
000288f7: R30 := 0x406C80
000288f9: call @so_recvln with return %000288fb

000288fb:
00028901: mem := mem with [R31 + 0x7C, el]:u32 <- 31:0[R0]
00028908: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0002890d: VF := 0
00028910: CF := 1
00028914: ZF := 31:0[R0] = 0
00028918: NF := 31:31[R0]
00028920: when ~(NF = VF & ~ZF) goto %0002891e
00045d74: goto %00029da2

0002891e:
00028928: goto %00028926

00029da2:
00029da5: R0 := 0x430000
00029dab: R0 := R0 + 0x390
00029db2: R0 := pad:64[mem[R0, el]:u32]
00029db7: VF := 0
00029dba: CF := 1
00029dbe: ZF := 31:0[R0] = 0
00029dc2: NF := 31:31[R0]
00029dc8: when ZF goto %00029dc6
00045d75: goto %0002b09b

0002b09b:
0002b0a0: R0 := mem[R31 + 0x40, el]:u64
0002b0a6: R1 := R0
0002b0ab: R0 := 0x419000
0002b0b1: R0 := R0 + 0xA10
0002b0b6: R30 := 0x406CB8
0002b0b8: call @printf with return %00029dc6

00029dc6:
00029dd0: R0 := mem[R31 + 0x40, el]:u64
00029dd5: R30 := 0x406CC0
00029dd7: call @trimr with return %00029dd9

00029dd9:
00029dde: R0 := mem[R31 + 0x40, el]:u64
00029de3: R30 := 0x406CC8
00029de5: call @strdup with return %00029de7

00029de7:
00029ded: mem := mem with [R31 + 0x68, el]:u64 <- R0
00029df4: R0 := mem[R31 + 0x40, el]:u64
00029df9: R30 := 0x406CD4
00029dfb: call @strlen with return %00029dfd

00029dfd:
00029e03: mem := mem with [R31 + 0x50, el]:u32 <- 31:0[R0]
00029e0a: R3 := mem[R31 + 0x40, el]:u64
00029e10: R0 := R31 + 0x38
00029e16: R2 := R0
00029e1b: R0 := 0x419000
00029e21: R1 := R0 + 0xA20
00029e27: R0 := R3
00029e2c: R30 := 0x406CF4
00029e2e: call @strtok_r with return %00029e30

00029e30:
00029e36: mem := mem with [R31 + 0x70, el]:u64 <- R0
00029e3d: R0 := mem[R31 + 0x70, el]:u64
00029e42: VF := 0
00029e45: CF := 1
00029e49: ZF := R0 = 0
00029e4d: NF := 63:63[R0]
00029e53: when ZF goto %00029e51
00045d76: goto %0002abb1

0002abb1:
0002abb4: R2 := 5
0002abb9: R0 := 0x419000
0002abbf: R1 := R0 + 0xA28
0002abc6: R0 := mem[R31 + 0x70, el]:u64
0002abcb: R30 := 0x406D18
0002abcd: call @strncasecmp with return %0002abcf

0002abcf:
0002abd2: VF := 0
0002abd5: CF := 1
0002abd9: ZF := 31:0[R0] = 0
0002abdd: NF := 31:31[R0]
0002abe9: when ZF <> 1 goto %0002abe2
0002abea: goto %0002abe5

0002abe5:
0002abe6: R0 := 1
0002abec: goto %0002abe8

0002abe2:
0002abe3: R0 := 0
0002abeb: goto %0002abe8

0002abe8:
0002abf2: R0 := pad:64[7:0[R0]]
0002abfa: mem := mem with [R31 + 0x54, el]:u32 <- 31:0[R0]
0002ac01: R0 := pad:64[mem[R31 + 0x54, el]:u32]
0002ac06: VF := 0
0002ac09: CF := 1
0002ac0d: ZF := 31:0[R0] = 0
0002ac11: NF := 31:31[R0]
0002ac17: when ZF <> 1 goto %0002ac15
00045d77: goto %0002b066

0002b066:
0002b069: R2 := 3
0002b06e: R0 := 0x419000
0002b074: R1 := R0 + 0xA30
0002b07b: R0 := mem[R31 + 0x70, el]:u64
0002b080: R30 := 0x406D48
0002b082: call @strncasecmp with return %0002b084

0002b084:
0002b087: VF := 0
0002b08a: CF := 1
0002b08e: ZF := 31:0[R0] = 0
0002b092: NF := 31:31[R0]
0002b097: when ZF <> 1 goto %00029e51
00045d78: goto %0002ac15

00029e51:
00029e59: R0 := 0x419000
00029e5f: R1 := R0 + 0xA40
00029e66: R0 := mem[R31 + 0x68, el]:u64
00029e6b: R30 := 0x406F90
00029e6d: call @strstr with return %00029e6f

00029e6f:
00029e72: VF := 0
00029e75: CF := 1
00029e79: ZF := R0 = 0
00029e7d: NF := 63:63[R0]
00029e83: when ZF goto %00029e81
00045d79: goto %0002a6c9

0002a6c9:
0002a6ce: R0 := mem[R31 + 0x70, el]:u64
0002a6d3: VF := 0
0002a6d6: CF := 1
0002a6da: ZF := R0 = 0
0002a6de: NF := 63:63[R0]
0002a6e3: when ZF goto %00029e81
00045d7a: goto %0002a6e7

00029e81:
00029e89: R0 := 0x430000
00029e8f: R0 := R0 + 0x390
00029e96: R0 := pad:64[mem[R0, el]:u32]
00029e9b: VF := 0
00029e9e: CF := 1
00029ea2: ZF := 31:0[R0] = 0
00029ea6: NF := 31:31[R0]
00029eac: when ZF goto %00029eaa
00045d7b: goto %0002a6b0

0002a6b0:
0002a6b5: R1 := mem[R31 + 0x68, el]:u64
0002a6ba: R0 := 0x419000
0002a6c0: R0 := R0 + 0xA58
0002a6c5: R30 := 0x40726C
0002a6c7: call @printf with return %00029eaa

00029eaa:
00029eb2: R0 := 0xFFFFFFFC
00029eba: mem := mem with [R31 + 0x7C, el]:u32 <- 31:0[R0]
00029ebe: goto %00028926

0002a6e7:
0002a6ec: R0 := mem[R31 + 0x20, el]:u64
0002a6f1: R1 := 1
0002a6f9: mem := mem with [R0, el]:u32 <- 31:0[R1]
0002a700: R0 := mem[R31 + 0x20, el]:u64
0002a707: mem := mem with [R0 + 0x1C, el]:u32 <- 0
0002a70e: R0 := mem[R31 + 0x20, el]:u64
0002a715: mem := mem with [R0 + 0x28, el]:u64 <- 0
0002a71c: R0 := mem[R31 + 0x20, el]:u64
0002a723: mem := mem with [R0 + 0x30, el]:u64 <- 0
0002a72a: R0 := mem[R31 + 0x20, el]:u64
0002a731: mem := mem with [R0 + 0x38, el]:u64 <- 0
0002a738: R0 := mem[R31 + 0x20, el]:u64
0002a73f: mem := mem with [R0 + 0x48, el]:u64 <- 0
0002a746: R0 := mem[R31 + 0x20, el]:u64
0002a74d: mem := mem with [R0 + 0x40, el]:u64 <- 0
0002a754: R0 := mem[R31 + 0x70, el]:u64
0002a759: R30 := 0x406FE8
0002a75b: call @strdup with return %0002a75d

0002a75d:
0002a761: R1 := R0
0002a768: R0 := mem[R31 + 0x20, el]:u64
0002a770: mem := mem with [R0 + 0x28, el]:u64 <- R1
0002a776: R0 := R31 + 0x38
0002a77c: R2 := R0
0002a781: R0 := 0x419000
0002a787: R1 := R0 + 0xA20
0002a78c: R0 := 0
0002a791: R30 := 0x40700C
0002a793: call @strtok_r with return %0002a795

0002a795:
0002a79b: mem := mem with [R31 + 0x70, el]:u64 <- R0
0002a7a2: R0 := mem[R31 + 0x70, el]:u64
0002a7a7: VF := 0
0002a7aa: CF := 1
0002a7ae: ZF := R0 = 0
0002a7b2: NF := 63:63[R0]
0002a7b8: when ZF goto %0002a7b6
00045d7c: goto %0002ab8e

0002ab8e:
0002ab93: R0 := mem[R31 + 0x70, el]:u64
0002ab98: R30 := 0x407024
0002ab9a: call @strdup with return %0002ab9c

0002ab9c:
0002aba0: R1 := R0
0002aba7: R0 := mem[R31 + 0x20, el]:u64
0002abaf: mem := mem with [R0 + 0x30, el]:u64 <- R1
00045d7d: goto %0002a7b6

0002a7b6:
0002a7bf: R0 := R31 + 0x38
0002a7c5: R2 := R0
0002a7ca: R0 := 0x419000
0002a7d0: R1 := R0 + 0xA20
0002a7d5: R0 := 0
0002a7da: R30 := 0x407048
0002a7dc: call @strtok_r with return %0002a7de

0002a7de:
0002a7e4: mem := mem with [R31 + 0x70, el]:u64 <- R0
0002a7eb: R0 := mem[R31 + 0x70, el]:u64
0002a7f0: VF := 0
0002a7f3: CF := 1
0002a7f7: ZF := R0 = 0
0002a7fb: NF := 63:63[R0]
0002a801: when ZF goto %0002a7ff
00045d7e: goto %0002ab6b

0002ab6b:
0002ab70: R0 := mem[R31 + 0x70, el]:u64
0002ab75: R30 := 0x407060
0002ab77: call @strdup with return %0002ab79

0002ab79:
0002ab7d: R1 := R0
0002ab84: R0 := mem[R31 + 0x20, el]:u64
0002ab8c: mem := mem with [R0 + 0x48, el]:u64 <- R1
00045d7f: goto %0002a7ff

0002a7ff:
0002a809: R0 := mem[R31 + 0x20, el]:u64
0002a810: R0 := mem[R0 + 0x30, el]:u64
0002a815: VF := 0
0002a818: CF := 1
0002a81c: ZF := R0 = 0
0002a820: NF := 63:63[R0]
0002a826: when ZF goto %0002a824
00045d80: goto %0002ab46

0002ab46:
0002ab4b: R0 := mem[R31 + 0x20, el]:u64
0002ab52: R0 := mem[R0 + 0x48, el]:u64
0002ab57: VF := 0
0002ab5a: CF := 1
0002ab5e: ZF := R0 = 0
0002ab62: NF := 63:63[R0]
0002ab67: when ZF <> 1 goto %0002a83a
00045d81: goto %0002a824

0002a83a:
0002a83f: R0 := mem[R31 + 0x20, el]:u64
0002a846: R0 := mem[R0 + 0x48, el]:u64
0002a84b: R1 := 0x2F
0002a850: R30 := 0x4070A8
0002a852: call @strchr with return %0002a854

0002a854:
0002a85a: mem := mem with [R31 + 0x70, el]:u64 <- R0
0002a861: R0 := mem[R31 + 0x70, el]:u64
0002a866: VF := 0
0002a869: CF := 1
0002a86d: ZF := R0 = 0
0002a871: NF := 63:63[R0]
0002a877: when ZF goto %0002a875
00045d82: goto %0002a9f9

0002a9f9:
0002a9fe: R0 := mem[R31 + 0x70, el]:u64
0002aa03: R30 := 0x4070C0
0002aa05: call @strlen with return %0002aa07

0002aa07:
0002aa0b: #255 := R0 - 3
0002aa10: VF := extend:128[#255] <> extend:128[R0] - 3
0002aa15: CF := pad:128[#255] <> pad:128[R0] + 0xFFFFFFFFFFFFFFFD
0002aa19: ZF := #255 = 0
0002aa1d: NF := 63:63[#255]
0002aa23: when ~(CF & ~ZF) goto %0002a875
00045d83: goto %0002aa27

0002aa27:
0002aa2a: R30 := 0x4070CC
0002aa2c: call @__ctype_b_loc with return %0002aa2e

0002aa2e:
0002aa33: R1 := mem[R0, el]:u64
0002aa3a: R0 := mem[R31 + 0x70, el]:u64
0002aa40: R0 := R0 + 1
0002aa47: R0 := pad:64[mem[R0]]
0002aa4d: R0 := pad:64[7:0[R0]]
0002aa53: R0 := 62:0[R0].0
0002aa5a: R0 := R1 + R0
0002aa61: R0 := pad:64[mem[R0, el]:u16]
0002aa67: R0 := pad:64[11:11[R0].0]
0002aa6c: VF := 0
0002aa6f: CF := 1
0002aa73: ZF := 31:0[R0] = 0
0002aa77: NF := 31:31[R0]
0002aa7c: when ZF goto %0002a875
00045d84: goto %0002aa80

0002aa80:
0002aa83: R30 := 0x4070FC
0002aa85: call @__ctype_b_loc with return %0002aa87

0002aa87:
0002aa8c: R1 := mem[R0, el]:u64
0002aa93: R0 := mem[R31 + 0x70, el]:u64
0002aa99: R0 := R0 + 3
0002aaa0: R0 := pad:64[mem[R0]]
0002aaa6: R0 := pad:64[7:0[R0]]
0002aaac: R0 := 62:0[R0].0
0002aab3: R0 := R1 + R0
0002aaba: R0 := pad:64[mem[R0, el]:u16]
0002aac0: R0 := pad:64[11:11[R0].0]
0002aac5: VF := 0
0002aac8: CF := 1
0002aacc: ZF := 31:0[R0] = 0
0002aad0: NF := 31:31[R0]
0002aad5: when ZF goto %0002a875
00045d85: goto %0002aad9

0002a875:
0002a87f: R0 := mem[R31 + 0x20, el]:u64
0002a884: R1 := 0xFFFFFFFF
0002a88c: mem := mem with [R0 + 0x24, el]:u32 <- 31:0[R1]
00045d86: goto %0002a88e

0002aad9:
0002aade: R0 := mem[R31 + 0x70, el]:u64
0002aae4: R0 := R0 + 1
0002aaeb: R0 := pad:64[mem[R0]]
0002aaf1: R1 := pad:64[31:0[R0] - 0x30]
0002aaf7: R0 := pad:64[31:0[R1]]
0002aafd: R0 := pad:64[29:0[R0].0]
0002ab04: R0 := pad:64[31:0[R0] + 31:0[R1]]
0002ab0a: R0 := pad:64[30:0[R0].0]
0002ab10: R1 := pad:64[31:0[R0]]
0002ab17: R0 := mem[R31 + 0x70, el]:u64
0002ab1d: R0 := R0 + 3
0002ab24: R0 := pad:64[mem[R0]]
0002ab2a: R0 := pad:64[31:0[R0] - 0x30]
0002ab31: R1 := pad:64[31:0[R1] + 31:0[R0]]
0002ab38: R0 := mem[R31 + 0x20, el]:u64
0002ab40: mem := mem with [R0 + 0x24, el]:u32 <- 31:0[R1]
0002ab44: goto %0002a88e

0002a88e:
0002a893: R0 := mem[R31 + 0x20, el]:u64
0002a89a: R2 := mem[R0 + 0x30, el]:u64
0002a89f: R0 := 0x419000
0002a8a5: R1 := R0 + 0xA48
0002a8ab: R0 := R2
0002a8b0: R30 := 0x407190
0002a8b2: call @strstr with return %0002a8b4

0002a8b4:
0002a8ba: mem := mem with [R31 + 0x70, el]:u64 <- R0
0002a8c1: R0 := mem[R31 + 0x70, el]:u64
0002a8c6: VF := 0
0002a8c9: CF := 1
0002a8cd: ZF := R0 = 0
0002a8d1: NF := 63:63[R0]
0002a8d7: when ZF goto %0002a8d5
00045d87: goto %0002a9e0

0002a8d5:
0002a8df: R0 := mem[R31 + 0x20, el]:u64
0002a8e6: R0 := mem[R0 + 0x30, el]:u64
0002a8ee: mem := mem with [R31 + 0x70, el]:u64 <- R0
00045d88: goto %0002a8f0

0002a9e0:
0002a9e5: R0 := mem[R31 + 0x70, el]:u64
0002a9eb: R0 := R0 + 3
0002a9f3: mem := mem with [R31 + 0x70, el]:u64 <- R0
0002a9f7: goto %0002a8f0

0002a8f0:
0002a8f3: R1 := 0x2F
0002a8fa: R0 := mem[R31 + 0x70, el]:u64
0002a8ff: R30 := 0x4071C8
0002a901: call @strchr with return %0002a903

0002a903:
0002a909: mem := mem with [R31 + 0x38, el]:u64 <- R0
0002a910: R0 := mem[R31 + 0x38, el]:u64
0002a915: VF := 0
0002a918: CF := 1
0002a91c: ZF := R0 = 0
0002a920: NF := 63:63[R0]
0002a926: when ZF goto %0002a924
00045d89: goto %0002a983

0002a924:
0002a92e: R0 := mem[R31 + 0x70, el]:u64
0002a933: R30 := 0x407218
0002a935: call @strlen with return %0002a937

0002a937:
0002a93b: R2 := pad:64[31:0[R0]]
0002a940: R1 := 0
0002a947: R0 := mem[R31 + 0x70, el]:u64
0002a94c: R30 := 0x407228
0002a94e: call @substr with return %0002a950

0002a950:
0002a956: mem := mem with [R31 + 0x58, el]:u64 <- R0
0002a95b: R0 := 0x419000
0002a961: R0 := R0 + 0xA50
0002a966: R30 := 0x407238
0002a968: call @strdup with return %0002a96a

0002a96a:
0002a96e: R1 := R0
0002a975: R0 := mem[R31 + 0x20, el]:u64
0002a97d: mem := mem with [R0 + 0x38, el]:u64 <- R1
0002a981: goto %00029ec2

0002a983:
0002a988: R1 := mem[R31 + 0x38, el]:u64
0002a98f: R0 := mem[R31 + 0x70, el]:u64
0002a996: R0 := R1 + ~R0 + 1
0002a99c: R2 := pad:64[31:0[R0]]
0002a9a1: R1 := 0
0002a9a8: R0 := mem[R31 + 0x70, el]:u64
0002a9ad: R30 := 0x4071F4
0002a9af: call @substr with return %0002a9b1

0002a9b1:
0002a9b7: mem := mem with [R31 + 0x58, el]:u64 <- R0
0002a9be: R0 := mem[R31 + 0x38, el]:u64
0002a9c3: R30 := 0x407200
0002a9c5: call @strdup with return %0002a9c7

0002a9c7:
0002a9cb: R1 := R0
0002a9d2: R0 := mem[R31 + 0x20, el]:u64
0002a9da: mem := mem with [R0 + 0x38, el]:u64 <- R1
0002a9de: goto %00029ec2

0002a824:
0002a82c: R0 := 0xFFFFFFFD
0002a834: mem := mem with [R31 + 0x7C, el]:u32 <- 31:0[R0]
0002a838: goto %00028926

0002ac15:
0002ac1f: R0 := mem[R31 + 0x20, el]:u64
0002ac26: mem := mem with [R0, el]:u32 <- 0
0002ac2d: R0 := mem[R31 + 0x20, el]:u64
0002ac34: mem := mem with [R0 + 0x1C, el]:u32 <- 0
0002ac3b: R0 := mem[R31 + 0x70, el]:u64
0002ac40: R30 := 0x406D68
0002ac42: call @strdup with return %0002ac44

0002ac44:
0002ac48: R1 := R0
0002ac4f: R0 := mem[R31 + 0x20, el]:u64
0002ac57: mem := mem with [R0 + 0x48, el]:u64 <- R1
0002ac5e: R0 := mem[R31 + 0x20, el]:u64
0002ac65: mem := mem with [R0 + 0x50, el]:u64 <- 0
0002ac6c: R0 := pad:64[mem[R31 + 0x54, el]:u32]
0002ac71: VF := 0
0002ac74: CF := 1
0002ac78: ZF := 31:0[R0] = 0
0002ac7c: NF := 31:31[R0]
0002ac82: when ZF goto %0002ac80
00045d8a: goto %0002aed9

0002aed9:
0002aede: R0 := mem[R31 + 0x20, el]:u64
0002aee5: R0 := mem[R0 + 0x48, el]:u64
0002aeea: R1 := 0x2F
0002aeef: R30 := 0x406D98
0002aef1: call @strchr with return %0002aef3

0002aef3:
0002aef9: mem := mem with [R31 + 0x70, el]:u64 <- R0
0002af00: R0 := mem[R31 + 0x70, el]:u64
0002af05: VF := 0
0002af08: CF := 1
0002af0c: ZF := R0 = 0
0002af10: NF := 63:63[R0]
0002af15: when ZF goto %0002ac80
00045d8b: goto %0002af19

0002af19:
0002af1e: R0 := mem[R31 + 0x70, el]:u64
0002af23: R30 := 0x406DB0
0002af25: call @strlen with return %0002af27

0002af27:
0002af2b: #260 := R0 - 3
0002af30: VF := extend:128[#260] <> extend:128[R0] - 3
0002af35: CF := pad:128[#260] <> pad:128[R0] + 0xFFFFFFFFFFFFFFFD
0002af39: ZF := #260 = 0
0002af3d: NF := 63:63[#260]
0002af43: when ~(CF & ~ZF) goto %0002ac80
00045d8c: goto %0002af47

0002af47:
0002af4a: R30 := 0x406DBC
0002af4c: call @__ctype_b_loc with return %0002af4e

0002af4e:
0002af53: R1 := mem[R0, el]:u64
0002af5a: R0 := mem[R31 + 0x70, el]:u64
0002af60: R0 := R0 + 1
0002af67: R0 := pad:64[mem[R0]]
0002af6d: R0 := pad:64[7:0[R0]]
0002af73: R0 := 62:0[R0].0
0002af7a: R0 := R1 + R0
0002af81: R0 := pad:64[mem[R0, el]:u16]
0002af87: R0 := pad:64[11:11[R0].0]
0002af8c: VF := 0
0002af8f: CF := 1
0002af93: ZF := 31:0[R0] = 0
0002af97: NF := 31:31[R0]
0002af9c: when ZF goto %0002ac80
00045d8d: goto %0002afa0

0002afa0:
0002afa3: R30 := 0x406DEC
0002afa5: call @__ctype_b_loc with return %0002afa7

0002afa7:
0002afac: R1 := mem[R0, el]:u64
0002afb3: R0 := mem[R31 + 0x70, el]:u64
0002afb9: R0 := R0 + 3
0002afc0: R0 := pad:64[mem[R0]]
0002afc6: R0 := pad:64[7:0[R0]]
0002afcc: R0 := 62:0[R0].0
0002afd3: R0 := R1 + R0
0002afda: R0 := pad:64[mem[R0, el]:u16]
0002afe0: R0 := pad:64[11:11[R0].0]
0002afe5: VF := 0
0002afe8: CF := 1
0002afec: ZF := 31:0[R0] = 0
0002aff0: NF := 31:31[R0]
0002aff5: when ZF goto %0002ac80
00045d8e: goto %0002aff9

0002ac80:
0002ac8a: R0 := mem[R31 + 0x20, el]:u64
0002ac8f: R1 := 0xFFFFFFFF
0002ac97: mem := mem with [R0 + 0x24, el]:u32 <- 31:0[R1]
00045d8f: goto %0002ac99

0002aff9:
0002affe: R0 := mem[R31 + 0x70, el]:u64
0002b004: R0 := R0 + 1
0002b00b: R0 := pad:64[mem[R0]]
0002b011: R1 := pad:64[31:0[R0] - 0x30]
0002b017: R0 := pad:64[31:0[R1]]
0002b01d: R0 := pad:64[29:0[R0].0]
0002b024: R0 := pad:64[31:0[R0] + 31:0[R1]]
0002b02a: R0 := pad:64[30:0[R0].0]
0002b030: R1 := pad:64[31:0[R0]]
0002b037: R0 := mem[R31 + 0x70, el]:u64
0002b03d: R0 := R0 + 3
0002b044: R0 := pad:64[mem[R0]]
0002b04a: R0 := pad:64[31:0[R0] - 0x30]
0002b051: R1 := pad:64[31:0[R1] + 31:0[R0]]
0002b058: R0 := mem[R31 + 0x20, el]:u64
0002b060: mem := mem with [R0 + 0x24, el]:u32 <- 31:0[R1]
0002b064: goto %0002ac99

0002ac99:
0002ac9d: R0 := R31 + 0x38
0002aca3: R2 := R0
0002aca8: R0 := 0x419000
0002acae: R1 := R0 + 0xA20
0002acb3: R0 := 0
0002acb8: R30 := 0x406E80
0002acba: call @strtok_r with return %0002acbc

0002acbc:
0002acc2: mem := mem with [R31 + 0x70, el]:u64 <- R0
0002acc9: R0 := mem[R31 + 0x70, el]:u64
0002acce: VF := 0
0002acd1: CF := 1
0002acd5: ZF := R0 = 0
0002acd9: NF := 63:63[R0]
0002acdf: when ZF goto %0002acdd
00045d90: goto %0002add2

0002add2:
0002add7: R0 := mem[R31 + 0x70, el]:u64
0002addc: R30 := 0x406E98
0002adde: call @strdup with return %0002ade0

0002ade0:
0002ade6: mem := mem with [R31 + 0x60, el]:u64 <- R0
0002aded: R0 := mem[R31 + 0x60, el]:u64
0002adf2: R30 := 0x406EA4
0002adf4: call @strlen with return %0002adf6

0002adf6:
0002adfa: R1 := R0
0002ae01: R0 := mem[R31 + 0x70, el]:u64
0002ae08: R0 := R0 + R1
0002ae10: mem := mem with [R31 + 0x70, el]:u64 <- R0
00045d91: goto %0002ae14

0002ae14:
0002ae19: R1 := mem[R31 + 0x40, el]:u64
0002ae20: R0 := extend:64[mem[R31 + 0x50, el]:u32]
0002ae27: R0 := R1 + R0
0002ae2e: R1 := mem[R31 + 0x70, el]:u64
0002ae34: #257 := ~R0
0002ae39: #258 := R1 + ~R0
0002ae3f: VF := extend:128[#258 + 1] <> extend:128[R1] + extend:128[#257] + 1
0002ae45: CF := pad:128[#258 + 1] <> pad:128[R1] + pad:128[#257] + 1
0002ae49: ZF := #258 + 1 = 0
0002ae4d: NF := 63:63[#258 + 1]
0002ae53: when CF goto %0002ae51
00045d92: goto %0002ae9e

0002ae9e:
0002aea3: R0 := mem[R31 + 0x70, el]:u64
0002aea9: R1 := R0 + 1
0002aeb1: mem := mem with [R31 + 0x70, el]:u64 <- R1
0002aeb8: R0 := pad:64[mem[R0]]
0002aebe: #259 := 31:0[R0] - 0x20
0002aec3: VF := extend:64[#259] <> extend:64[31:0[R0]] - 0x20
0002aec8: CF := pad:64[#259] <> pad:64[31:0[R0]] + 0xFFFFFFE0
0002aecc: ZF := #259 = 0
0002aed0: NF := 31:31[#259]
0002aed5: when ZF goto %0002ae14
00045d93: goto %0002ae51

0002ae51:
0002ae5b: R0 := mem[R31 + 0x70, el]:u64
0002ae62: R0 := pad:64[mem[R0]]
0002ae67: VF := 0
0002ae6a: CF := 1
0002ae6e: ZF := 31:0[R0] = 0
0002ae72: NF := 31:31[R0]
0002ae77: when ZF goto %0002acdd
00045d94: goto %0002ae7b

0002ae7b:
0002ae80: R0 := mem[R31 + 0x70, el]:u64
0002ae85: R30 := 0x406F00
0002ae87: call @strdup with return %0002ae89

0002ae89:
0002ae8d: R1 := R0
0002ae94: R0 := mem[R31 + 0x20, el]:u64
0002ae9c: mem := mem with [R0 + 0x50, el]:u64 <- R1
00045d95: goto %0002acdd

0002acdd:
0002ace7: R0 := mem[R31 + 0x20, el]:u64
0002acee: R0 := mem[R0 + 0x50, el]:u64
0002acf3: VF := 0
0002acf6: CF := 1
0002acfa: ZF := R0 = 0
0002acfe: NF := 63:63[R0]
0002ad04: when ZF <> 1 goto %0002ad02
00045d96: goto %0002adab

0002adab:
0002adae: R0 := 0x419000
0002adb4: R0 := R0 + 0xA38
0002adb9: R30 := 0x406F28
0002adbb: call @strdup with return %0002adbd

0002adbd:
0002adc1: R1 := R0
0002adc8: R0 := mem[R31 + 0x20, el]:u64
0002add0: mem := mem with [R0 + 0x50, el]:u64 <- R1
00045d97: goto %0002ad02

0002ad02:
0002ad0c: R0 := mem[R31 + 0x60, el]:u64
0002ad11: VF := 0
0002ad14: CF := 1
0002ad18: ZF := R0 = 0
0002ad1c: NF := 63:63[R0]
0002ad22: when ZF goto %0002ad20
00045d98: goto %0002ad36

0002ad36:
0002ad3b: R0 := mem[R31 + 0x60, el]:u64
0002ad40: R30 := 0x406F48
0002ad42: call @strlen with return %0002ad44

0002ad44:
0002ad48: #256 := R0 - 3
0002ad4d: VF := extend:128[#256] <> extend:128[R0] - 3
0002ad52: CF := pad:128[#256] <> pad:128[R0] + 0xFFFFFFFFFFFFFFFD
0002ad56: ZF := #256 = 0
0002ad5a: NF := 63:63[#256]
0002ad5f: when ZF <> 1 goto %0002ad20
00045d99: goto %0002ad63

0002ad63:
0002ad68: R0 := mem[R31 + 0x60, el]:u64
0002ad6d: R30 := 0x406F58
0002ad6f: call @atoi with return %0002ad71

0002ad71:
0002ad75: R1 := pad:64[31:0[R0]]
0002ad7c: R0 := mem[R31 + 0x20, el]:u64
0002ad84: mem := mem with [R0 + 0x10, el]:u32 <- 31:0[R1]
0002ad8b: R0 := mem[R31 + 0x20, el]:u64
0002ad92: R0 := pad:64[mem[R0 + 0x10, el]:u32]
0002ad97: VF := 0
0002ad9a: CF := 1
0002ad9e: ZF := 31:0[R0] = 0
0002ada2: NF := 31:31[R0]
0002ada7: when ZF <> 1 goto %00029ec0
00045d9a: goto %0002ad20

00029ec0:
00045d9b: goto %00029ec2

00029ec2:
00029ec6: R1 := R31 + 0x4C
00029ecc: R0 := R31 + 0x40
00029ed2: R2 := R1
00029ed8: R1 := R0
00029edf: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00029ee4: R30 := 0x407294
00029ee6: call @so_recvln with return %00029ee8

00029ee8:
00029eee: mem := mem with [R31 + 0x7C, el]:u32 <- 31:0[R0]
00029ef5: R0 := mem[R31 + 0x40, el]:u64
00029efa: R30 := 0x4072A0
00029efc: call @trimr with return %00029efe

00029efe:
00029f03: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
00029f08: VF := 0
00029f0b: CF := 1
00029f0f: ZF := 31:0[R0] = 0
00029f13: NF := 31:31[R0]
00029f1b: when ~(NF = VF & ~ZF) goto %00029f19
00045d9c: goto %0002a3d7

0002a3d7:
0002a3dc: R0 := mem[R31 + 0x40, el]:u64
0002a3e1: R30 := 0x4072B4
0002a3e4: call @is_http_header with return %0002a631

0002a631:
0002a634: VF := 0
0002a637: CF := 1
0002a63b: ZF := 31:0[R0] = 0
0002a63f: NF := 31:31[R0]
0002a644: when ZF goto %00029f19
00045d9d: goto %0002a648

0002a648:
0002a64d: R0 := mem[R31 + 0x20, el]:u64
0002a654: R19 := mem[R0 + 8, el]:u64
0002a65b: R0 := mem[R31 + 0x40, el]:u64
0002a660: R30 := 0x4072CC
0002a662: call @get_http_header_name with return %0002a664

0002a664:
0002a668: R20 := R0
0002a66f: R0 := mem[R31 + 0x40, el]:u64
0002a674: R30 := 0x4072D8
0002a676: call @get_http_header_value with return %0002a678

0002a678:
0002a67b: R4 := 0
0002a680: R3 := 0
0002a686: R2 := R0
0002a68c: R1 := R20
0002a692: R0 := R19
0002a697: R30 := 0x4072F0
0002a699: call @hlist_add with return %0002a69b

0002a69b:
0002a69f: R1 := R0
0002a6a6: R0 := mem[R31 + 0x20, el]:u64
0002a6ae: mem := mem with [R0 + 8, el]:u64 <- R1
00045d9e: goto %00029f19

00029f19:
00029f23: R0 := mem[R31 + 0x40, el]:u64
00029f2a: R0 := pad:64[mem[R0]]
00029f2f: VF := 0
00029f32: CF := 1
00029f36: ZF := 31:0[R0] = 0
00029f3a: NF := 31:31[R0]
00029f40: when ZF goto %00029f3e
00045d9f: goto %0002a3b7

0002a3b7:
0002a3bc: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0002a3c1: VF := 0
0002a3c4: CF := 1
0002a3c8: ZF := 31:0[R0] = 0
0002a3cc: NF := 31:31[R0]
0002a3d3: when NF = VF & ~ZF goto %00029ec2
00045da0: goto %00029f3e

00029f3e:
00029f48: R0 := mem[R31 + 0x20, el]:u64
00029f4f: R0 := pad:64[mem[R0, el]:u32]
00029f54: VF := 0
00029f57: CF := 1
00029f5b: ZF := 31:0[R0] = 0
00029f5f: NF := 31:31[R0]
00029f64: when ZF goto %00029da0
00045da1: goto %00029f68

00029f68:
00029f6d: R0 := mem[R31 + 0x58, el]:u64
00029f72: VF := 0
00029f75: CF := 1
00029f79: ZF := R0 = 0
00029f7d: NF := 63:63[R0]
00029f83: when ZF goto %00029f81
00045da2: goto %0002a305

0002a305:
0002a30a: R0 := mem[R31 + 0x58, el]:u64
0002a311: R0 := pad:64[mem[R0]]
0002a316: VF := 0
0002a319: CF := 1
0002a31d: ZF := 31:0[R0] = 0
0002a321: NF := 31:31[R0]
0002a326: when ZF goto %00029f81
00045da3: goto %0002a32a

00029f81:
00029f89: R0 := 0x430000
00029f8f: R0 := R0 + 0x390
00029f96: R0 := pad:64[mem[R0, el]:u32]
00029f9b: VF := 0
00029f9e: CF := 1
00029fa2: ZF := 31:0[R0] = 0
00029fa6: NF := 31:31[R0]
00029fac: when ZF goto %00029faa
00045da4: goto %0002a2ec

0002a2ec:
0002a2f1: R1 := mem[R31 + 0x68, el]:u64
0002a2f6: R0 := 0x419000
0002a2fc: R0 := R0 + 0xA88
0002a301: R30 := 0x4073BC
0002a303: call @printf with return %00029faa

00029faa:
00029fb2: R0 := 0xFFFFFFFA
00029fba: mem := mem with [R31 + 0x7C, el]:u32 <- 31:0[R0]
00029fbe: goto %00028926

0002a32a:
0002a32f: R0 := mem[R31 + 0x20, el]:u64
0002a336: R2 := mem[R0 + 8, el]:u64
0002a33b: R0 := 0x419000
0002a341: R1 := R0 + 0xA80
0002a347: R0 := R2
0002a34c: R30 := 0x40735C
0002a34e: call @hlist_get with return %0002a350

0002a350:
0002a353: VF := 0
0002a356: CF := 1
0002a35a: ZF := R0 = 0
0002a35e: NF := 63:63[R0]
0002a363: when ZF <> 1 goto %00029fc0
00045da5: goto %0002a367

0002a367:
0002a36c: R0 := mem[R31 + 0x20, el]:u64
0002a373: R5 := mem[R0 + 8, el]:u64
0002a378: R4 := 1
0002a37d: R3 := 1
0002a384: R2 := mem[R31 + 0x58, el]:u64
0002a389: R0 := 0x419000
0002a38f: R1 := R0 + 0xA80
0002a395: R0 := R5
0002a39a: R30 := 0x407388
0002a39c: call @hlist_add with return %0002a39e

0002a39e:
0002a3a2: R1 := R0
0002a3a9: R0 := mem[R31 + 0x20, el]:u64
0002a3b1: mem := mem with [R0 + 8, el]:u64 <- R1
0002a3b5: goto %00029fc0

00029fc0:
00029fc5: R0 := mem[R31 + 0x58, el]:u64
00029fcc: R0 := pad:64[mem[R0]]
00029fd2: #245 := 31:0[R0] - 0x5B
00029fd7: VF := extend:64[#245] <> extend:64[31:0[R0]] - 0x5B
00029fdc: CF := pad:64[#245] <> pad:64[31:0[R0]] + 0xFFFFFFA5
00029fe0: ZF := #245 = 0
00029fe4: NF := 31:31[#245]
00029fea: when ZF <> 1 goto %00029fe8
00045da6: goto %0002a23a

00029fe8:
00029ff0: R1 := 0x3A
00029ff7: R0 := mem[R31 + 0x58, el]:u64
00029ffc: R30 := 0x407444
00029ffe: call @strchr with return %0002a000

0002a000:
0002a006: mem := mem with [R31 + 0x70, el]:u64 <- R0
0002a00d: R0 := mem[R31 + 0x70, el]:u64
0002a012: VF := 0
0002a015: CF := 1
0002a019: ZF := R0 = 0
0002a01d: NF := 63:63[R0]
0002a023: when ZF goto %0002a021
00045da7: goto %0002a1dc

0002a021:
0002a02b: R0 := mem[R31 + 0x58, el]:u64
0002a030: R30 := 0x407494
0002a032: call @strdup with return %0002a034

0002a034:
0002a038: R1 := R0
0002a03f: R0 := mem[R31 + 0x20, el]:u64
0002a047: mem := mem with [R0 + 0x40, el]:u64 <- R1
00045da8: goto %0002a049

0002a1dc:
0002a1e1: R0 := mem[R31 + 0x70, el]:u64
0002a1e8: mem := mem with [R0] <- 0
0002a1ef: R0 := mem[R31 + 0x58, el]:u64
0002a1f4: R30 := 0x407464
0002a1f6: call @strdup with return %0002a1f8

0002a1f8:
0002a1fc: R1 := R0
0002a203: R0 := mem[R31 + 0x20, el]:u64
0002a20b: mem := mem with [R0 + 0x40, el]:u64 <- R1
0002a212: R0 := mem[R31 + 0x70, el]:u64
0002a218: R0 := R0 + 1
0002a21d: R30 := 0x40747C
0002a21f: call @atoi with return %0002a221

0002a221:
0002a225: R1 := pad:64[31:0[R0]]
0002a22c: R0 := mem[R31 + 0x20, el]:u64
0002a234: mem := mem with [R0 + 0x20, el]:u32 <- 31:0[R1]
0002a238: goto %0002a049

0002a23a:
0002a23d: R1 := 0x5D
0002a244: R0 := mem[R31 + 0x58, el]:u64
0002a249: R30 := 0x4073E4
0002a24b: call @strchr with return %0002a24d

0002a24d:
0002a253: mem := mem with [R31 + 0x70, el]:u64 <- R0
0002a25a: R0 := mem[R31 + 0x70, el]:u64
0002a261: mem := mem with [R0] <- 0
0002a268: R0 := mem[R31 + 0x58, el]:u64
0002a26e: R0 := R0 + 1
0002a273: R30 := 0x4073FC
0002a275: call @strdup with return %0002a277

0002a277:
0002a27b: R1 := R0
0002a282: R0 := mem[R31 + 0x20, el]:u64
0002a28a: mem := mem with [R0 + 0x40, el]:u64 <- R1
0002a291: R0 := mem[R31 + 0x70, el]:u64
0002a297: R0 := R0 + 1
0002a29e: R0 := pad:64[mem[R0]]
0002a2a4: #246 := 31:0[R0] - 0x3A
0002a2a9: VF := extend:64[#246] <> extend:64[31:0[R0]] - 0x3A
0002a2ae: CF := pad:64[#246] <> pad:64[31:0[R0]] + 0xFFFFFFC6
0002a2b2: ZF := #246 = 0
0002a2b6: NF := 31:31[#246]
0002a2bb: when ZF <> 1 goto %0002a049
00045da9: goto %0002a2bf

0002a2bf:
0002a2c4: R0 := mem[R31 + 0x70, el]:u64
0002a2ca: R0 := R0 + 2
0002a2cf: R30 := 0x407428
0002a2d1: call @atoi with return %0002a2d3

0002a2d3:
0002a2d7: R1 := pad:64[31:0[R0]]
0002a2de: R0 := mem[R31 + 0x20, el]:u64
0002a2e6: mem := mem with [R0 + 0x20, el]:u32 <- 31:0[R1]
0002a2ea: goto %0002a049

0002a049:
0002a04e: R0 := mem[R31 + 0x20, el]:u64
0002a055: R0 := pad:64[mem[R0 + 0x20, el]:u32]
0002a05a: VF := 0
0002a05d: CF := 1
0002a061: ZF := 31:0[R0] = 0
0002a065: NF := 31:31[R0]
0002a06b: when ZF <> 1 goto %0002a069
00045daa: goto %0002a16d

0002a16d:
0002a172: R0 := mem[R31 + 0x20, el]:u64
0002a179: R3 := mem[R0 + 0x30, el]:u64
0002a17e: R2 := 5
0002a183: R0 := 0x419000
0002a189: R1 := R0 + 0xAB0
0002a18f: R0 := R3
0002a194: R30 := 0x4074CC
0002a197: call @strncasecmp with return %0002a199

0002a199:
0002a19c: VF := 0
0002a19f: CF := 1
0002a1a3: ZF := 31:0[R0] = 0
0002a1a7: NF := 31:31[R0]
0002a1ad: when ZF <> 1 goto %0002a1ab
00045dab: goto %0002a1c4

0002a1ab:
0002a1b5: R0 := mem[R31 + 0x20, el]:u64
0002a1ba: R1 := 0x50
0002a1c2: mem := mem with [R0 + 0x20, el]:u32 <- 31:0[R1]
00045dac: goto %0002a069

0002a1c4:
0002a1c9: R0 := mem[R31 + 0x20, el]:u64
0002a1ce: R1 := 0x1BB
0002a1d6: mem := mem with [R0 + 0x20, el]:u32 <- 31:0[R1]
0002a1da: goto %0002a069

0002a069:
0002a073: R0 := mem[R31 + 0x20, el]:u64
0002a078: VF := 0
0002a07b: CF := 1
0002a07f: ZF := R0 = 0
0002a083: NF := 63:63[R0]
0002a089: when ZF <> 1 goto %0002a087
00045dad: goto %0002a140

0002a140:
0002a143: R0 := 0x419000
0002a149: R3 := R0 + 0xEF0
0002a14e: R2 := 0xFE
0002a153: R0 := 0x419000
0002a159: R1 := R0 + 0xAB8
0002a15e: R0 := 0x419000
0002a164: R0 := R0 + 0xAF0
0002a169: R30 := 0x40751C
0002a16b: call @__assert_fail with return %0002a087

0002a087:
0002a091: R0 := mem[R31 + 0x20, el]:u64
0002a098: R0 := mem[R0 + 0x40, el]:u64
0002a09d: VF := 0
0002a0a0: CF := 1
0002a0a4: ZF := R0 = 0
0002a0a8: NF := 63:63[R0]
0002a0ae: when ZF <> 1 goto %0002a0ac
00045dae: goto %0002a113

0002a113:
0002a116: R0 := 0x419000
0002a11c: R3 := R0 + 0xEF0
0002a121: R2 := 0xFF
0002a126: R0 := 0x419000
0002a12c: R1 := R0 + 0xAB8
0002a131: R0 := 0x419000
0002a137: R0 := R0 + 0xB00
0002a13c: R30 := 0x40754C
0002a13e: call @__assert_fail with return %0002a0ac

0002a0ac:
0002a0b6: R0 := mem[R31 + 0x20, el]:u64
0002a0bd: R0 := mem[R0 + 0x40, el]:u64
0002a0c4: R0 := pad:64[mem[R0]]
0002a0c9: VF := 0
0002a0cc: CF := 1
0002a0d0: ZF := 31:0[R0] = 0
0002a0d4: NF := 31:31[R0]
0002a0da: when ZF goto %0002a0d8
00045daf: goto %0002a0ee

0002a0ee:
0002a0f3: R0 := mem[R31 + 0x20, el]:u64
0002a0fa: R0 := pad:64[mem[R0 + 0x20, el]:u32]
0002a0ff: VF := 0
0002a102: CF := 1
0002a106: ZF := 31:0[R0] = 0
0002a10a: NF := 31:31[R0]
0002a10f: when ZF <> 1 goto %00029da0
00045db0: goto %0002a0d8

00029da0:
00045db1: goto %00028926

0002a0d8:
0002a0e0: R0 := 0xFFFFFFFB
0002a0e8: mem := mem with [R31 + 0x7C, el]:u32 <- 31:0[R0]
0002a0ec: goto %00028926

0002ad20:
0002ad28: R0 := 0xFFFFFFFE
0002ad30: mem := mem with [R31 + 0x7C, el]:u32 <- 31:0[R0]
0002ad34: goto %00028926

00028926:
0002892e: R0 := mem[R31 + 0x68, el]:u64
00028933: VF := 0
00028936: CF := 1
0002893a: ZF := R0 = 0
0002893e: NF := 63:63[R0]
00028944: when ZF goto %00028942
00045db2: goto %00029d92

00029d92:
00029d97: R0 := mem[R31 + 0x68, el]:u64
00029d9c: R30 := 0x40759C
00029d9e: call @free with return %00028942

00028942:
0002894c: R0 := mem[R31 + 0x60, el]:u64
00028951: VF := 0
00028954: CF := 1
00028958: ZF := R0 = 0
0002895c: NF := 63:63[R0]
00028962: when ZF goto %00028960
00045db3: goto %00029d84

00029d84:
00029d89: R0 := mem[R31 + 0x60, el]:u64
00029d8e: R30 := 0x4075B0
00029d90: call @free with return %00028960

00028960:
0002896a: R0 := mem[R31 + 0x58, el]:u64
0002896f: VF := 0
00028972: CF := 1
00028976: ZF := R0 = 0
0002897a: NF := 63:63[R0]
00028980: when ZF goto %0002897e
00045db4: goto %00029d76

00029d76:
00029d7b: R0 := mem[R31 + 0x58, el]:u64
00029d80: R30 := 0x4075C4
00029d82: call @free with return %0002897e

0002897e:
00028988: R0 := mem[R31 + 0x40, el]:u64
0002898d: R30 := 0x4075CC
0002898f: call @free with return %00028991

00028991:
00028996: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0002899b: VF := 0
0002899e: CF := 1
000289a2: ZF := 31:0[R0] = 0
000289a6: NF := 31:31[R0]
000289ae: when NF = VF & ~ZF goto %000289ac
00045db5: goto %00029d24

000289ac:
000289b4: R0 := 1
00045db6: goto %000289b6

00029d24:
00029d27: R0 := 0x430000
00029d2d: R0 := R0 + 0x390
00029d34: R0 := pad:64[mem[R0, el]:u32]
00029d39: VF := 0
00029d3c: CF := 1
00029d40: ZF := 31:0[R0] = 0
00029d44: NF := 31:31[R0]
00029d4a: when ZF goto %00029d48
00045db7: goto %00029d56

00029d56:
00029d5b: R2 := pad:64[mem[R31 + 0x7C, el]:u32]
00029d62: R1 := pad:64[mem[R31 + 0x2C, el]:u32]
00029d67: R0 := 0x419000
00029d6d: R0 := R0 + 0xB18
00029d72: R30 := 0x407600
00029d74: call @printf with return %00029d48

00029d48:
00029d50: R0 := 0
00029d54: goto %000289b6

000289b6:
000289ba: #224 := R31 + 0x10
000289bf: R19 := mem[#224, el]:u64
000289c4: R20 := mem[#224 + 8, el]:u64
000289cb: R29 := mem[R31, el]:u64
000289d0: R30 := mem[R31 + 8, el]:u64
000289d4: R31 := R31 + 0x80
000289d9: call R30 with noreturn

00045db8: sub headers_send(headers_send_result)
00046329: headers_send_result :: out u32 = low:32[R0]

000289db:
000289df: #225 := R31 - 0x50
000289e5: mem := mem with [#225, el]:u64 <- R29
000289eb: mem := mem with [#225 + 8, el]:u64 <- R30
000289ef: R31 := #225
000289f5: R29 := R31
000289fd: mem := mem with [R31 + 0x10, el]:u64 <- R19
00028a05: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
00028a0d: mem := mem with [R31 + 0x20, el]:u64 <- R1
00028a14: R0 := mem[R31 + 0x20, el]:u64
00028a1b: R0 := pad:64[mem[R0, el]:u32]
00028a20: VF := 0
00028a23: CF := 1
00028a27: ZF := 31:0[R0] = 0
00028a2b: NF := 31:31[R0]
00028a31: when ZF goto %00028a2f
00045db9: goto %00029cbf

00028a2f:
00028a39: R0 := mem[R31 + 0x20, el]:u64
00028a40: R0 := mem[R0 + 0x48, el]:u64
00028a45: R30 := 0x407684
00028a47: call @strlen with return %00028a49

00028a49:
00028a4d: R19 := pad:64[31:0[R0]]
00028a54: R0 := mem[R31 + 0x20, el]:u64
00028a5b: R0 := mem[R0 + 0x50, el]:u64
00028a60: R30 := 0x407694
00028a62: call @strlen with return %00028a64

00028a64:
00028a69: R0 := pad:64[31:0[R19] + 31:0[R0]]
00028a6f: R0 := pad:64[31:0[R0] + 0x14]
00028a77: mem := mem with [R31 + 0x40, el]:u32 <- 31:0[R0]
00045dba: goto %00028a79

00029cbf:
00029cc4: R0 := mem[R31 + 0x20, el]:u64
00029ccb: R0 := mem[R0 + 0x28, el]:u64
00029cd0: R30 := 0x407648
00029cd2: call @strlen with return %00029cd4

00029cd4:
00029cd8: R19 := pad:64[31:0[R0]]
00029cdf: R0 := mem[R31 + 0x20, el]:u64
00029ce6: R0 := mem[R0 + 0x30, el]:u64
00029ceb: R30 := 0x407658
00029ced: call @strlen with return %00029cef

00029cef:
00029cf4: R19 := pad:64[31:0[R19] + 31:0[R0]]
00029cfb: R0 := mem[R31 + 0x20, el]:u64
00029d02: R0 := mem[R0 + 0x48, el]:u64
00029d07: R30 := 0x407668
00029d09: call @strlen with return %00029d0b

00029d0b:
00029d10: R0 := pad:64[31:0[R19] + 31:0[R0]]
00029d16: R0 := pad:64[31:0[R0] + 0x14]
00029d1e: mem := mem with [R31 + 0x40, el]:u32 <- 31:0[R0]
00029d22: goto %00028a79

00028a79:
00028a7e: R0 := mem[R31 + 0x20, el]:u64
00028a85: R0 := mem[R0 + 8, el]:u64
00028a8d: mem := mem with [R31 + 0x48, el]:u64 <- R0
00028a92: goto %00028a90

00028a90:
00028a98: R0 := mem[R31 + 0x48, el]:u64
00028a9d: VF := 0
00028aa0: CF := 1
00028aa4: ZF := R0 = 0
00028aa8: NF := 63:63[R0]
00028aae: when ZF <> 1 goto %00028aac
00045dbb: goto %00028b1a

00028b1a:
00028b1f: R0 := pad:64[mem[R31 + 0x40, el]:u32]
00028b27: mem := mem with [R31 + 0x3C, el]:u32 <- 31:0[R0]
00028b2e: R0 := extend:64[mem[R31 + 0x3C, el]:u32]
00028b33: R30 := 0x407708
00028b35: call @zmalloc with return %00028b37

00028b37:
00028b3d: mem := mem with [R31 + 0x30, el]:u64 <- R0
00028b44: mem := mem with [R31 + 0x40, el]:u32 <- 0
00028b4b: R0 := mem[R31 + 0x20, el]:u64
00028b52: R0 := pad:64[mem[R0, el]:u32]
00028b57: VF := 0
00028b5a: CF := 1
00028b5e: ZF := 31:0[R0] = 0
00028b62: NF := 31:31[R0]
00028b68: when ZF goto %00028b66
00045dbc: goto %00029c57

00028b66:
00028b70: R0 := mem[R31 + 0x20, el]:u64
00028b77: R0 := pad:64[mem[R0 + 0x14, el]:u32]
00028b7c: VF := 0
00028b7f: CF := 1
00028b83: ZF := 31:0[R0] = 0
00028b87: NF := 31:31[R0]
00028b8d: when ZF <> 1 goto %00028b8b
00045dbd: goto %00029bf3

00029bf3:
00029bf8: R1 := extend:64[mem[R31 + 0x3C, el]:u32]
00029bff: R0 := mem[R31 + 0x20, el]:u64
00029c06: R2 := mem[R0 + 0x48, el]:u64
00029c0d: R0 := mem[R31 + 0x20, el]:u64
00029c14: R3 := pad:64[mem[R0 + 0x10, el]:u32]
00029c1b: R0 := mem[R31 + 0x20, el]:u64
00029c22: R0 := mem[R0 + 0x50, el]:u64
00029c28: R5 := R0
00029c2e: R4 := pad:64[31:0[R3]]
00029c34: R3 := R2
00029c39: R0 := 0x419000
00029c3f: R2 := R0 + 0xB48
00029c46: R0 := mem[R31 + 0x30, el]:u64
00029c4b: R30 := 0x4077A8
00029c4d: call @snprintf with return %00029c4f

00029c4f:
00029c55: mem := mem with [R31 + 0x40, el]:u32 <- 31:0[R0]
00045dbe: goto %00028b8b

00029c57:
00029c5c: R1 := extend:64[mem[R31 + 0x3C, el]:u32]
00029c63: R0 := mem[R31 + 0x20, el]:u64
00029c6a: R2 := mem[R0 + 0x28, el]:u64
00029c71: R0 := mem[R31 + 0x20, el]:u64
00029c78: R3 := mem[R0 + 0x30, el]:u64
00029c7f: R0 := mem[R31 + 0x20, el]:u64
00029c86: R0 := mem[R0 + 0x48, el]:u64
00029c8c: R5 := R0
00029c92: R4 := R3
00029c98: R3 := R2
00029c9d: R0 := 0x419000
00029ca3: R2 := R0 + 0xB38
00029caa: R0 := mem[R31 + 0x30, el]:u64
00029caf: R30 := 0x407758
00029cb1: call @snprintf with return %00029cb3

00029cb3:
00029cb9: mem := mem with [R31 + 0x40, el]:u32 <- 31:0[R0]
00029cbd: goto %00028b8b

00028b8b:
00028b95: R0 := mem[R31 + 0x20, el]:u64
00028b9c: R0 := mem[R0 + 8, el]:u64
00028ba4: mem := mem with [R31 + 0x48, el]:u64 <- R0
00028ba9: goto %00028ba7

00028ba7:
00028baf: R0 := mem[R31 + 0x48, el]:u64
00028bb4: VF := 0
00028bb7: CF := 1
00028bbb: ZF := R0 = 0
00028bbf: NF := 63:63[R0]
00028bc5: when ZF <> 1 goto %00028bc3
00045dbf: goto %00028c6a

00028c6a:
00028c6f: R0 := extend:64[mem[R31 + 0x3C, el]:u32]
00028c75: R2 := R0
00028c7a: R0 := 0x419000
00028c80: R1 := R0 + 0xB68
00028c87: R0 := mem[R31 + 0x30, el]:u64
00028c8c: R30 := 0x407840
00028c8f: call @strlcat with return %00028c91

00028c91:
00028c96: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00028c9b: R30 := 0x407848
00028c9d: call @so_closed with return %00028c9f

00028c9f:
00028ca2: VF := 0
00028ca5: CF := 1
00028ca9: ZF := 31:0[R0] = 0
00028cad: NF := 31:31[R0]
00028cb3: when ZF <> 1 goto %00028cb1
00045dc0: goto %00029bb9

00028cb1:
00028cb9: R0 := 0xFFFFFC19
00028cc1: mem := mem with [R31 + 0x44, el]:u32 <- 31:0[R0]
00045dc1: goto %00028cc3

00029bb9:
00029bbe: R0 := pad:64[mem[R31 + 0x40, el]:u32]
00029bc4: R0 := pad:64[31:0[R0] + 2]
00029bca: R0 := extend:64[31:0[R0]]
00029bd0: R2 := R0
00029bd7: R1 := mem[R31 + 0x30, el]:u64
00029bde: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00029be3: R30 := 0x40786C
00029be5: call @write_wrapper with return %00029be7

00029be7:
00029bed: mem := mem with [R31 + 0x44, el]:u32 <- 31:0[R0]
00029bf1: goto %00028cc3

00028cc3:
00028cc8: R0 := mem[R31 + 0x30, el]:u64
00028ccd: R30 := 0x407884
00028ccf: call @free with return %00028cd1

00028cd1:
00028cd6: R0 := pad:64[mem[R31 + 0x44, el]:u32]
00028cdb: VF := 0
00028cde: CF := 1
00028ce2: ZF := 31:0[R0] = 0
00028ce6: NF := 31:31[R0]
00028cee: when ~(NF = VF & ~ZF) goto %00028cec
00045dc2: goto %00029b7f

00029b7f:
00029b84: R0 := pad:64[mem[R31 + 0x40, el]:u32]
00029b8a: R0 := pad:64[31:0[R0] + 2]
00029b91: R1 := pad:64[mem[R31 + 0x44, el]:u32]
00029b97: #243 := ~31:0[R0]
00029b9c: #244 := 31:0[R1] + ~31:0[R0]
00029ba2: VF := extend:64[#244 + 1] <> extend:64[31:0[R1]] + extend:64[#243]
          + 1
00029ba8: CF := pad:64[#244 + 1] <> pad:64[31:0[R1]] + pad:64[#243] + 1
00029bac: ZF := #244 + 1 = 0
00029bb0: NF := 31:31[#244 + 1]
00029bb5: when ZF goto %00029b5a
00045dc3: goto %00028cec

00029b5a:
00029b5d: R0 := 1
00045dc4: goto %00028d20

00028cec:
00028cf4: R0 := 0x430000
00028cfa: R0 := R0 + 0x390
00028d01: R0 := pad:64[mem[R0, el]:u32]
00028d06: VF := 0
00028d09: CF := 1
00028d0d: ZF := 31:0[R0] = 0
00028d11: NF := 31:31[R0]
00028d17: when ZF goto %00028d15
00045dc5: goto %00029b5f

00029b5f:
00029b64: R2 := pad:64[mem[R31 + 0x44, el]:u32]
00029b6b: R1 := pad:64[mem[R31 + 0x2C, el]:u32]
00029b70: R0 := 0x419000
00029b76: R0 := R0 + 0xB70
00029b7b: R30 := 0x4078CC
00029b7d: call @printf with return %00028d15

00028d15:
00028d1d: R0 := 0
00028d22: goto %00028d20

00028d20:
00028d28: R19 := mem[R31 + 0x10, el]:u64
00028d2f: R29 := mem[R31, el]:u64
00028d34: R30 := mem[R31 + 8, el]:u64
00028d38: R31 := R31 + 0x50
00028d3d: call R30 with noreturn

00028bc3:
00028bcd: R0 := extend:64[mem[R31 + 0x40, el]:u32]
00028bd4: R1 := mem[R31 + 0x30, el]:u64
00028bdb: R5 := R1 + R0
00028be2: R1 := pad:64[mem[R31 + 0x3C, el]:u32]
00028be9: R0 := pad:64[mem[R31 + 0x40, el]:u32]
00028bf0: R0 := pad:64[31:0[R1] + ~31:0[R0] + 1]
00028bf6: R1 := extend:64[31:0[R0]]
00028bfd: R0 := mem[R31 + 0x48, el]:u64
00028c04: R2 := mem[R0, el]:u64
00028c0b: R0 := mem[R31 + 0x48, el]:u64
00028c12: R0 := mem[R0 + 8, el]:u64
00028c18: R4 := R0
00028c1e: R3 := R2
00028c23: R0 := 0x419000
00028c29: R2 := R0 + 0xB58
00028c2f: R0 := R5
00028c34: R30 := 0x407800
00028c36: call @snprintf with return %00028c38

00028c38:
00028c3c: R1 := pad:64[31:0[R0]]
00028c43: R0 := pad:64[mem[R31 + 0x40, el]:u32]
00028c4a: R0 := pad:64[31:0[R0] + 31:0[R1]]
00028c52: mem := mem with [R31 + 0x40, el]:u32 <- 31:0[R0]
00028c59: R0 := mem[R31 + 0x48, el]:u64
00028c60: R0 := mem[R0 + 0x18, el]:u64
00028c68: mem := mem with [R31 + 0x48, el]:u64 <- R0
00045dc6: goto %00028ba7

00028aac:
00028ab6: R0 := mem[R31 + 0x48, el]:u64
00028abd: R0 := mem[R0, el]:u64
00028ac2: R30 := 0x4076BC
00028ac4: call @strlen with return %00028ac6

00028ac6:
00028aca: R19 := pad:64[31:0[R0]]
00028ad1: R0 := mem[R31 + 0x48, el]:u64
00028ad8: R0 := mem[R0 + 8, el]:u64
00028add: R30 := 0x4076CC
00028adf: call @strlen with return %00028ae1

00028ae1:
00028ae6: R1 := pad:64[31:0[R19] + 31:0[R0]]
00028aed: R0 := pad:64[mem[R31 + 0x40, el]:u32]
00028af4: R0 := pad:64[31:0[R1] + 31:0[R0]]
00028afa: R0 := pad:64[31:0[R0] + 0x14]
00028b02: mem := mem with [R31 + 0x40, el]:u32 <- 31:0[R0]
00028b09: R0 := mem[R31 + 0x48, el]:u64
00028b10: R0 := mem[R0 + 0x18, el]:u64
00028b18: mem := mem with [R31 + 0x48, el]:u64 <- R0
00045dc7: goto %00028a90

00045dc8: sub hlist_add(hlist_add_result)
0004632a: hlist_add_result :: out u32 = low:32[R0]

000239bd:
000239c4: #130 := R31 - 0x40
000239ca: mem := mem with [#130, el]:u64 <- R29
000239d0: mem := mem with [#130 + 8, el]:u64 <- R30
000239d4: R31 := #130
000239da: R29 := R31
000239e2: mem := mem with [R31 + 0x28, el]:u64 <- R0
000239ea: mem := mem with [R31 + 0x20, el]:u64 <- R1
000239f2: mem := mem with [R31 + 0x18, el]:u64 <- R2
000239fa: mem := mem with [R31 + 0x14, el]:u32 <- 31:0[R3]
00023a02: mem := mem with [R31 + 0x10, el]:u32 <- 31:0[R4]
00023a09: R0 := mem[R31 + 0x28, el]:u64
00023a11: mem := mem with [R31 + 0x38, el]:u64 <- R0
00023a18: R0 := mem[R31 + 0x20, el]:u64
00023a1d: VF := 0
00023a20: CF := 1
00023a24: ZF := R0 = 0
00023a28: NF := 63:63[R0]
00023a2e: when ZF goto %00023a2c
00045dc9: goto %00023b9e

00023b9e:
00023ba3: R0 := mem[R31 + 0x18, el]:u64
00023ba8: VF := 0
00023bab: CF := 1
00023baf: ZF := R0 = 0
00023bb3: NF := 63:63[R0]
00023bb8: when ZF <> 1 goto %00023a51
00045dca: goto %00023a2c

00023a51:
00023a54: R0 := 0x20
00023a59: R30 := 0x411384
00023a5b: call @malloc with return %00023a5d

00023a5d:
00023a63: mem := mem with [R31 + 0x30, el]:u64 <- R0
00023a6a: R0 := pad:64[mem[R31 + 0x14, el]:u32]
00023a70: #131 := 31:0[R0] - 1
00023a75: VF := extend:64[#131] <> extend:64[31:0[R0]] - 1
00023a7a: CF := pad:64[#131] <> pad:64[31:0[R0]] + 0xFFFFFFFF
00023a7e: ZF := #131 = 0
00023a82: NF := 31:31[#131]
00023a88: when ZF <> 1 goto %00023a86
00045dcb: goto %00023b8c

00023a86:
00023a90: R0 := mem[R31 + 0x20, el]:u64
00045dcc: goto %00023a92

00023b8c:
00023b91: R0 := mem[R31 + 0x20, el]:u64
00023b96: R30 := 0x41139C
00023b98: call @strdup with return %00023b9a

00023b9a:
00023b9c: goto %00023a92

00023a92:
00023a97: R1 := mem[R31 + 0x30, el]:u64
00023a9f: mem := mem with [R1, el]:u64 <- R0
00023aa6: R0 := pad:64[mem[R31 + 0x10, el]:u32]
00023aac: #132 := 31:0[R0] - 1
00023ab1: VF := extend:64[#132] <> extend:64[31:0[R0]] - 1
00023ab6: CF := pad:64[#132] <> pad:64[31:0[R0]] + 0xFFFFFFFF
00023aba: ZF := #132 = 0
00023abe: NF := 31:31[#132]
00023ac4: when ZF <> 1 goto %00023ac2
00045dcd: goto %00023b7a

00023ac2:
00023acc: R0 := mem[R31 + 0x18, el]:u64
00045dce: goto %00023ace

00023b7a:
00023b7f: R0 := mem[R31 + 0x18, el]:u64
00023b84: R30 := 0x4113C0
00023b86: call @strdup with return %00023b88

00023b88:
00023b8a: goto %00023ace

00023ace:
00023ad3: R1 := mem[R31 + 0x30, el]:u64
00023adb: mem := mem with [R1 + 8, el]:u64 <- R0
00023ae2: R0 := mem[R31 + 0x30, el]:u64
00023ae9: mem := mem with [R0 + 0x18, el]:u64 <- 0
00023af0: R0 := mem[R31 + 0x30, el]:u64
00023af7: mem := mem with [R0 + 0x10, el]:u32 <- 0
00023afe: R0 := mem[R31 + 0x28, el]:u64
00023b03: VF := 0
00023b06: CF := 1
00023b0a: ZF := R0 = 0
00023b0e: NF := 63:63[R0]
00023b14: when ZF <> 1 goto %00023b12
00045dcf: goto %00023b6f

00023b12:
00023b1c: R0 := mem[R31 + 0x38, el]:u64
00023b23: R0 := mem[R0 + 0x18, el]:u64
00023b28: VF := 0
00023b2b: CF := 1
00023b2f: ZF := R0 = 0
00023b33: NF := 63:63[R0]
00023b39: when ZF <> 1 goto %00023b37
00045dd0: goto %00023b52

00023b52:
00023b57: R0 := mem[R31 + 0x38, el]:u64
00023b5e: R1 := mem[R31 + 0x30, el]:u64
00023b66: mem := mem with [R0 + 0x18, el]:u64 <- R1
00023b6d: R0 := mem[R31 + 0x28, el]:u64
00045dd1: goto %00023a39

00023b37:
00023b41: R0 := mem[R31 + 0x38, el]:u64
00023b48: R0 := mem[R0 + 0x18, el]:u64
00023b50: mem := mem with [R31 + 0x38, el]:u64 <- R0
00045dd2: goto %00023b12

00023b6f:
00023b74: R0 := mem[R31 + 0x30, el]:u64
00023b78: goto %00023a39

00023a2c:
00023a36: R0 := mem[R31 + 0x28, el]:u64
00023a3b: goto %00023a39

00023a39:
00023a41: R29 := mem[R31, el]:u64
00023a46: R30 := mem[R31 + 8, el]:u64
00023a4a: R31 := R31 + 0x40
00023a4f: call R30 with noreturn

00045dd3: sub hlist_count(hlist_count_result)
0004632b: hlist_count_result :: out u32 = low:32[R0]

0002242a:
0002242e: R31 := R31 - 0x20
00022436: mem := mem with [R31 + 8, el]:u64 <- R0
0002243d: R0 := mem[R31 + 8, el]:u64
00022445: mem := mem with [R31 + 0x18, el]:u64 <- R0
0002244c: mem := mem with [R31 + 0x14, el]:u32 <- 0
00022451: goto %0002244f

0002244f:
00022457: R0 := mem[R31 + 0x18, el]:u64
0002245c: VF := 0
0002245f: CF := 1
00022463: ZF := R0 = 0
00022467: NF := 63:63[R0]
0002246d: when ZF <> 1 goto %0002246b
00045dd4: goto %0002249b

0002249b:
000224a0: R0 := pad:64[mem[R31 + 0x14, el]:u32]
000224a6: R31 := R31 + 0x20
000224ab: call R30 with noreturn

0002246b:
00022475: R0 := pad:64[mem[R31 + 0x14, el]:u32]
0002247b: R0 := pad:64[31:0[R0] + 1]
00022483: mem := mem with [R31 + 0x14, el]:u32 <- 31:0[R0]
0002248a: R0 := mem[R31 + 0x18, el]:u64
00022491: R0 := mem[R0 + 0x18, el]:u64
00022499: mem := mem with [R31 + 0x18, el]:u64 <- R0
00045dd5: goto %0002244f

00045dd6: sub hlist_del(hlist_del_result)
0004632c: hlist_del_result :: out u32 = low:32[R0]

00023bf6:
00023bfa: #133 := R31 - 0x40
00023c00: mem := mem with [#133, el]:u64 <- R29
00023c06: mem := mem with [#133 + 8, el]:u64 <- R30
00023c0a: R31 := #133
00023c10: R29 := R31
00023c18: mem := mem with [R31 + 0x18, el]:u64 <- R0
00023c20: mem := mem with [R31 + 0x10, el]:u64 <- R1
00023c27: mem := mem with [R31 + 0x38, el]:u64 <- 0
00023c2e: R0 := mem[R31 + 0x18, el]:u64
00023c36: mem := mem with [R31 + 0x30, el]:u64 <- R0
00023c3b: goto %00023c39

00023c39:
00023c41: R0 := mem[R31 + 0x30, el]:u64
00023c46: VF := 0
00023c49: CF := 1
00023c4d: ZF := R0 = 0
00023c51: NF := 63:63[R0]
00023c57: when ZF <> 1 goto %00023c55
00045dd7: goto %00023d7b

00023d7b:
00023d7d: goto %00023c8f

00023c55:
00023c5f: R0 := mem[R31 + 0x30, el]:u64
00023c66: R0 := mem[R0, el]:u64
00023c6d: R1 := mem[R31 + 0x10, el]:u64
00023c72: R30 := 0x4114C0
00023c74: call @strcasecmp with return %00023c76

00023c76:
00023c79: VF := 0
00023c7c: CF := 1
00023c80: ZF := 31:0[R0] = 0
00023c84: NF := 31:31[R0]
00023c8a: when ZF goto %00023c88
00045dd8: goto %00023d56

00023c88:
00045dd9: goto %00023c8f

00023c8f:
00023c94: R0 := mem[R31 + 0x30, el]:u64
00023c99: VF := 0
00023c9c: CF := 1
00023ca0: ZF := R0 = 0
00023ca4: NF := 63:63[R0]
00023caa: when ZF goto %00023ca8
00045dda: goto %00023cc9

00023cc9:
00023cce: R0 := mem[R31 + 0x30, el]:u64
00023cd5: R0 := mem[R0 + 0x18, el]:u64
00023cdd: mem := mem with [R31 + 0x28, el]:u64 <- R0
00023ce4: R0 := mem[R31 + 0x30, el]:u64
00023ceb: R0 := mem[R0, el]:u64
00023cf0: R30 := 0x411514
00023cf2: call @free with return %00023cf4

00023cf4:
00023cf9: R0 := mem[R31 + 0x30, el]:u64
00023d00: R0 := mem[R0 + 8, el]:u64
00023d05: R30 := 0x411520
00023d07: call @free with return %00023d09

00023d09:
00023d0e: R0 := mem[R31 + 0x30, el]:u64
00023d13: R30 := 0x411528
00023d15: call @free with return %00023d17

00023d17:
00023d1c: R0 := mem[R31 + 0x38, el]:u64
00023d21: VF := 0
00023d24: CF := 1
00023d28: ZF := R0 = 0
00023d2c: NF := 63:63[R0]
00023d32: when ZF <> 1 goto %00023d30
00045ddb: goto %00023d4b

00023d30:
00023d3a: R0 := mem[R31 + 0x38, el]:u64
00023d41: R1 := mem[R31 + 0x28, el]:u64
00023d49: mem := mem with [R0 + 0x18, el]:u64 <- R1
00045ddc: goto %00023ca8

00023ca8:
00023cb2: R0 := mem[R31 + 0x18, el]:u64
00045ddd: goto %00023cb4

00023d4b:
00023d50: R0 := mem[R31 + 0x28, el]:u64
00023d54: goto %00023cb4

00023cb4:
00023cb9: R29 := mem[R31, el]:u64
00023cbe: R30 := mem[R31 + 8, el]:u64
00023cc2: R31 := R31 + 0x40
00023cc7: call R30 with noreturn

00023d56:
00023d5b: R0 := mem[R31 + 0x30, el]:u64
00023d63: mem := mem with [R31 + 0x38, el]:u64 <- R0
00023d6a: R0 := mem[R31 + 0x30, el]:u64
00023d71: R0 := mem[R0 + 0x18, el]:u64
00023d79: mem := mem with [R31 + 0x30, el]:u64 <- R0
00045dde: goto %00023c39

00045ddf: sub hlist_dump(hlist_dump_result)
0004632d: hlist_dump_result :: out u32 = low:32[R0]

000228ba:
000228be: #119 := R31 - 0x30
000228c4: mem := mem with [#119, el]:u64 <- R29
000228ca: mem := mem with [#119 + 8, el]:u64 <- R30
000228ce: R31 := #119
000228d4: R29 := R31
000228dc: mem := mem with [R31 + 0x18, el]:u64 <- R0
000228e3: R0 := mem[R31 + 0x18, el]:u64
000228eb: mem := mem with [R31 + 0x28, el]:u64 <- R0
000228f0: goto %000228ee

000228ee:
000228f6: R0 := mem[R31 + 0x28, el]:u64
000228fb: VF := 0
000228fe: CF := 1
00022902: ZF := R0 = 0
00022906: NF := 63:63[R0]
0002290c: when ZF <> 1 goto %0002290a
00045de0: goto %00022959

00022959:
00022962: R29 := mem[R31, el]:u64
00022967: R30 := mem[R31 + 8, el]:u64
0002296b: R31 := R31 + 0x30
00022970: call R30 with noreturn

0002290a:
00022914: R0 := mem[R31 + 0x28, el]:u64
0002291b: R1 := mem[R0, el]:u64
00022922: R0 := mem[R31 + 0x28, el]:u64
00022929: R0 := mem[R0 + 8, el]:u64
0002292f: R2 := R0
00022934: R0 := 0x41C000
0002293a: R0 := R0 + 0xB48
0002293f: R30 := 0x411980
00022941: call @printf with return %00022943

00022943:
00022948: R0 := mem[R31 + 0x28, el]:u64
0002294f: R0 := mem[R0 + 0x18, el]:u64
00022957: mem := mem with [R31 + 0x28, el]:u64 <- R0
00045de1: goto %000228ee

00045de2: sub hlist_dup(hlist_dup_result)
0004632e: hlist_dup_result :: out u32 = low:32[R0]

00023927:
0002392e: #129 := R31 - 0x30
00023934: mem := mem with [#129, el]:u64 <- R29
0002393a: mem := mem with [#129 + 8, el]:u64 <- R30
0002393e: R31 := #129
00023944: R29 := R31
0002394c: mem := mem with [R31 + 0x18, el]:u64 <- R0
00023953: mem := mem with [R31 + 0x28, el]:u64 <- 0
0002395a: R0 := mem[R31 + 0x18, el]:u64
00023962: mem := mem with [R31 + 0x20, el]:u64 <- R0
00023967: goto %00023965

00023965:
0002396d: R0 := mem[R31 + 0x20, el]:u64
00023972: VF := 0
00023975: CF := 1
00023979: ZF := R0 = 0
0002397d: NF := 63:63[R0]
00023983: when ZF <> 1 goto %00023981
00045de3: goto %00023bda

00023bda:
00023bdf: R0 := mem[R31 + 0x28, el]:u64
00023be6: R29 := mem[R31, el]:u64
00023beb: R30 := mem[R31 + 8, el]:u64
00023bef: R31 := R31 + 0x30
00023bf4: call R30 with noreturn

00023981:
0002398b: R0 := mem[R31 + 0x20, el]:u64
00023992: R1 := mem[R0, el]:u64
00023999: R0 := mem[R31 + 0x20, el]:u64
000239a0: R0 := mem[R0 + 8, el]:u64
000239a5: R4 := 1
000239aa: R3 := 1
000239b0: R2 := R0
000239b7: R0 := mem[R31 + 0x28, el]:u64
000239bc: R30 := 0x411468
000239bf: call @hlist_add with return %00023bbc

00023bbc:
00023bc2: mem := mem with [R31 + 0x28, el]:u64 <- R0
00023bc9: R0 := mem[R31 + 0x20, el]:u64
00023bd0: R0 := mem[R0 + 0x18, el]:u64
00023bd8: mem := mem with [R31 + 0x20, el]:u64 <- R0
00045de4: goto %00023965

00045de5: sub hlist_free(hlist_free_result)
0004632f: hlist_free_result :: out u32 = low:32[R0]

000227ee:
000227f2: #118 := R31 - 0x30
000227f8: mem := mem with [#118, el]:u64 <- R29
000227fe: mem := mem with [#118 + 8, el]:u64 <- R30
00022802: R31 := #118
00022808: R29 := R31
00022810: mem := mem with [R31 + 0x18, el]:u64 <- R0
00022817: R0 := mem[R31 + 0x18, el]:u64
0002281f: mem := mem with [R31 + 0x28, el]:u64 <- R0
00022824: goto %00022822

00022822:
0002282a: R0 := mem[R31 + 0x18, el]:u64
0002282f: VF := 0
00022832: CF := 1
00022836: ZF := R0 = 0
0002283a: NF := 63:63[R0]
00022840: when ZF <> 1 goto %0002283e
00045de6: goto %000228a0

000228a0:
000228a3: R0 := 0
000228aa: R29 := mem[R31, el]:u64
000228af: R30 := mem[R31 + 8, el]:u64
000228b3: R31 := R31 + 0x30
000228b8: call R30 with noreturn

0002283e:
00022848: R0 := mem[R31 + 0x18, el]:u64
0002284f: R0 := mem[R0 + 0x18, el]:u64
00022857: mem := mem with [R31 + 0x28, el]:u64 <- R0
0002285e: R0 := mem[R31 + 0x18, el]:u64
00022865: R0 := mem[R0, el]:u64
0002286a: R30 := 0x411914
0002286c: call @free with return %0002286e

0002286e:
00022873: R0 := mem[R31 + 0x18, el]:u64
0002287a: R0 := mem[R0 + 8, el]:u64
0002287f: R30 := 0x411920
00022881: call @free with return %00022883

00022883:
00022888: R0 := mem[R31 + 0x18, el]:u64
0002288d: R30 := 0x411928
0002288f: call @free with return %00022891

00022891:
00022896: R0 := mem[R31 + 0x28, el]:u64
0002289e: mem := mem with [R31 + 0x18, el]:u64 <- R0
00045de7: goto %00022822

00045de8: sub hlist_get(hlist_get_result)
00046330: hlist_get_result :: out u32 = low:32[R0]

000224ad:
000224b1: #115 := R31 - 0x30
000224b7: mem := mem with [#115, el]:u64 <- R29
000224bd: mem := mem with [#115 + 8, el]:u64 <- R30
000224c1: R31 := #115
000224c7: R29 := R31
000224cf: mem := mem with [R31 + 0x18, el]:u64 <- R0
000224d7: mem := mem with [R31 + 0x10, el]:u64 <- R1
000224de: R0 := mem[R31 + 0x18, el]:u64
000224e6: mem := mem with [R31 + 0x28, el]:u64 <- R0
000224eb: goto %000224e9

000224e9:
000224f1: R0 := mem[R31 + 0x28, el]:u64
000224f6: VF := 0
000224f9: CF := 1
000224fd: ZF := R0 = 0
00022501: NF := 63:63[R0]
00022507: when ZF <> 1 goto %00022505
00045de9: goto %00024016

00024016:
00024018: goto %0002253f

00022505:
0002250f: R0 := mem[R31 + 0x28, el]:u64
00022516: R0 := mem[R0, el]:u64
0002251d: R1 := mem[R31 + 0x10, el]:u64
00022522: R30 := 0x4116F4
00022524: call @strcasecmp with return %00022526

00022526:
00022529: VF := 0
0002252c: CF := 1
00022530: ZF := 31:0[R0] = 0
00022534: NF := 31:31[R0]
0002253a: when ZF goto %00022538
00045dea: goto %00024000

00022538:
00045deb: goto %0002253f

0002253f:
00022544: R0 := mem[R31 + 0x28, el]:u64
00022549: VF := 0
0002254c: CF := 1
00022550: ZF := R0 = 0
00022554: NF := 63:63[R0]
0002255a: when ZF goto %00022558
00045dec: goto %00023fee

00022558:
00022560: R0 := 0
00045ded: goto %00022562

00023fee:
00023ff3: R0 := mem[R31 + 0x28, el]:u64
00023ffa: R0 := mem[R0 + 8, el]:u64
00023ffe: goto %00022562

00022562:
00022567: R29 := mem[R31, el]:u64
0002256c: R30 := mem[R31 + 8, el]:u64
00022570: R31 := R31 + 0x30
00022575: call R30 with noreturn

00024000:
00024005: R0 := mem[R31 + 0x28, el]:u64
0002400c: R0 := mem[R0 + 0x18, el]:u64
00024014: mem := mem with [R31 + 0x28, el]:u64 <- R0
00045dee: goto %000224e9

00045def: sub hlist_in(hlist_in_result)
00046331: hlist_in_result :: out u32 = low:32[R0]

00022357:
0002235b: #114 := R31 - 0x30
00022361: mem := mem with [#114, el]:u64 <- R29
00022367: mem := mem with [#114 + 8, el]:u64 <- R30
0002236b: R31 := #114
00022371: R29 := R31
00022379: mem := mem with [R31 + 0x18, el]:u64 <- R0
00022381: mem := mem with [R31 + 0x10, el]:u64 <- R1
00022388: R0 := mem[R31 + 0x18, el]:u64
00022390: mem := mem with [R31 + 0x28, el]:u64 <- R0
00022395: goto %00022393

00022393:
0002239b: R0 := mem[R31 + 0x28, el]:u64
000223a0: VF := 0
000223a3: CF := 1
000223a7: ZF := R0 = 0
000223ab: NF := 63:63[R0]
000223b1: when ZF <> 1 goto %000223af
00045df0: goto %00024030

00024030:
00024032: goto %000223e9

000223af:
000223b9: R0 := mem[R31 + 0x28, el]:u64
000223c0: R0 := mem[R0, el]:u64
000223c7: R1 := mem[R31 + 0x10, el]:u64
000223cc: R30 := 0x411640
000223ce: call @strcasecmp with return %000223d0

000223d0:
000223d3: VF := 0
000223d6: CF := 1
000223da: ZF := 31:0[R0] = 0
000223de: NF := 31:31[R0]
000223e4: when ZF goto %000223e2
00045df1: goto %0002401a

000223e2:
00045df2: goto %000223e9

000223e9:
000223ee: R0 := mem[R31 + 0x28, el]:u64
000223f3: VF := 0
000223f6: CF := 1
000223fa: ZF := R0 = 0
000223fe: NF := 63:63[R0]
0002240a: when ZF goto %00022403
0002240b: goto %00022406

00022406:
00022407: R0 := 1
0002240d: goto %00022409

00022403:
00022404: R0 := 0
0002240c: goto %00022409

00022409:
00022413: R0 := pad:64[7:0[R0]]
0002241a: R29 := mem[R31, el]:u64
0002241f: R30 := mem[R31 + 8, el]:u64
00022423: R31 := R31 + 0x30
00022428: call R30 with noreturn

0002401a:
0002401f: R0 := mem[R31 + 0x28, el]:u64
00024026: R0 := mem[R0 + 0x18, el]:u64
0002402e: mem := mem with [R31 + 0x28, el]:u64 <- R0
00045df3: goto %00022393

00045df4: sub hlist_mod(hlist_mod_result)
00046332: hlist_mod_result :: out u32 = low:32[R0]

00022259:
00022260: #113 := R31 - 0x40
00022266: mem := mem with [#113, el]:u64 <- R29
0002226c: mem := mem with [#113 + 8, el]:u64 <- R30
00022270: R31 := #113
00022276: R29 := R31
0002227e: mem := mem with [R31 + 0x28, el]:u64 <- R0
00022286: mem := mem with [R31 + 0x20, el]:u64 <- R1
0002228e: mem := mem with [R31 + 0x18, el]:u64 <- R2
00022296: mem := mem with [R31 + 0x14, el]:u32 <- 31:0[R3]
0002229d: R0 := mem[R31 + 0x28, el]:u64
000222a5: mem := mem with [R31 + 0x38, el]:u64 <- R0
000222aa: goto %000222a8

000222a8:
000222b0: R0 := mem[R31 + 0x38, el]:u64
000222b5: VF := 0
000222b8: CF := 1
000222bc: ZF := R0 = 0
000222c0: NF := 63:63[R0]
000222c6: when ZF <> 1 goto %000222c4
00045df5: goto %000240b4

000240b4:
000240b6: goto %000222ff

000222c4:
000222ce: R0 := mem[R31 + 0x38, el]:u64
000222d5: R0 := mem[R0, el]:u64
000222dc: R1 := mem[R31 + 0x20, el]:u64
000222e1: R30 := 0x411588
000222e4: call @strcasecmp with return %000222e6

000222e6:
000222e9: VF := 0
000222ec: CF := 1
000222f0: ZF := 31:0[R0] = 0
000222f4: NF := 31:31[R0]
000222fa: when ZF goto %000222f8
00045df6: goto %0002409e

000222f8:
00045df7: goto %000222ff

000222ff:
00022304: R0 := mem[R31 + 0x38, el]:u64
00022309: VF := 0
0002230c: CF := 1
00022310: ZF := R0 = 0
00022314: NF := 63:63[R0]
0002231a: when ZF goto %00022318
00045df8: goto %00024062

00022318:
00022322: R0 := pad:64[mem[R31 + 0x14, el]:u32]
00022327: VF := 0
0002232a: CF := 1
0002232e: ZF := 31:0[R0] = 0
00022332: NF := 31:31[R0]
00022338: when ZF goto %00022336
00045df9: goto %00024034

00024034:
00024037: R4 := 1
0002403c: R3 := 1
00024043: R2 := mem[R31 + 0x18, el]:u64
0002404a: R1 := mem[R31 + 0x20, el]:u64
00024051: R0 := mem[R31 + 0x28, el]:u64
00024056: R30 := 0x411604
00024058: call @hlist_add with return %0002405a

0002405a:
00024060: mem := mem with [R31 + 0x28, el]:u64 <- R0
00045dfa: goto %00022336

00024062:
00024067: R0 := mem[R31 + 0x38, el]:u64
0002406e: R0 := mem[R0 + 8, el]:u64
00024073: R30 := 0x4115C8
00024075: call @free with return %00024077

00024077:
0002407c: R0 := mem[R31 + 0x18, el]:u64
00024081: R30 := 0x4115D0
00024083: call @strdup with return %00024085

00024085:
00024089: R1 := R0
00024090: R0 := mem[R31 + 0x38, el]:u64
00024098: mem := mem with [R0 + 8, el]:u64 <- R1
0002409c: goto %00022336

00022336:
00022340: R0 := mem[R31 + 0x28, el]:u64
00022347: R29 := mem[R31, el]:u64
0002234c: R30 := mem[R31 + 8, el]:u64
00022350: R31 := R31 + 0x40
00022355: call R30 with noreturn

0002409e:
000240a3: R0 := mem[R31 + 0x38, el]:u64
000240aa: R0 := mem[R0 + 0x18, el]:u64
000240b2: mem := mem with [R31 + 0x38, el]:u64 <- R0
00045dfb: goto %000222a8

00045dfc: sub hlist_subcmp(hlist_subcmp_result)
00046333: hlist_subcmp_result :: out u32 = low:32[R0]

00022577:
0002257b: #116 := R31 - 0x50
00022581: mem := mem with [#116, el]:u64 <- R29
00022587: mem := mem with [#116 + 8, el]:u64 <- R30
0002258b: R31 := #116
00022591: R29 := R31
00022599: mem := mem with [R31 + 0x28, el]:u64 <- R0
000225a1: mem := mem with [R31 + 0x20, el]:u64 <- R1
000225a9: mem := mem with [R31 + 0x18, el]:u64 <- R2
000225b0: mem := mem with [R31 + 0x4C, el]:u32 <- 0
000225b7: R0 := mem[R31 + 0x18, el]:u64
000225bc: R30 := 0x411760
000225bf: call @strdup with return %000225c1

000225c1:
000225c7: mem := mem with [R31 + 0x40, el]:u64 <- R0
000225ce: R0 := mem[R31 + 0x40, el]:u64
000225d3: R30 := 0x41176C
000225d5: call @lowercase with return %000225d7

000225d7:
000225dc: R1 := mem[R31 + 0x20, el]:u64
000225e3: R0 := mem[R31 + 0x28, el]:u64
000225e8: R30 := 0x411778
000225ea: call @hlist_get with return %000225ec

000225ec:
000225f2: mem := mem with [R31 + 0x38, el]:u64 <- R0
000225f9: R0 := mem[R31 + 0x38, el]:u64
000225fe: VF := 0
00022601: CF := 1
00022605: ZF := R0 = 0
00022609: NF := 63:63[R0]
0002260f: when ZF goto %0002260d
00045dfd: goto %00023f83

00023f83:
00023f88: R0 := mem[R31 + 0x38, el]:u64
00023f8d: R30 := 0x411790
00023f8f: call @strdup with return %00023f91

00023f91:
00023f97: mem := mem with [R31 + 0x38, el]:u64 <- R0
00023f9e: R0 := mem[R31 + 0x38, el]:u64
00023fa3: R30 := 0x41179C
00023fa5: call @lowercase with return %00023fa7

00023fa7:
00023fac: R1 := mem[R31 + 0x40, el]:u64
00023fb3: R0 := mem[R31 + 0x38, el]:u64
00023fb8: R30 := 0x4117A8
00023fba: call @strstr with return %00023fbc

00023fbc:
00023fbf: VF := 0
00023fc2: CF := 1
00023fc6: ZF := R0 = 0
00023fca: NF := 63:63[R0]
00023fd0: when ZF goto %00023fce
00045dfe: goto %00023fe1

00023fe1:
00023fe4: R0 := 1
00023fec: mem := mem with [R31 + 0x4C, el]:u32 <- 31:0[R0]
00045dff: goto %00023fce

00023fce:
00023fd8: R0 := mem[R31 + 0x38, el]:u64
00023fdd: R30 := 0x4117C0
00023fdf: call @free with return %0002260d

0002260d:
00022617: R0 := mem[R31 + 0x40, el]:u64
0002261c: R30 := 0x4117C8
0002261e: call @free with return %00022620

00022620:
00022625: R0 := pad:64[mem[R31 + 0x4C, el]:u32]
0002262c: R29 := mem[R31, el]:u64
00022631: R30 := mem[R31 + 8, el]:u64
00022635: R31 := R31 + 0x50
0002263a: call R30 with noreturn

00045e00: sub hlist_subcmp_all(hlist_subcmp_all_result)
00046334: hlist_subcmp_all_result :: out u32 = low:32[R0]

0002263c:
00022640: #117 := R31 - 0x50
00022646: mem := mem with [#117, el]:u64 <- R29
0002264c: mem := mem with [#117 + 8, el]:u64 <- R30
00022650: R31 := #117
00022656: R29 := R31
0002265e: mem := mem with [R31 + 0x28, el]:u64 <- R0
00022666: mem := mem with [R31 + 0x20, el]:u64 <- R1
0002266e: mem := mem with [R31 + 0x18, el]:u64 <- R2
00022675: R0 := mem[R31 + 0x28, el]:u64
0002267d: mem := mem with [R31 + 0x48, el]:u64 <- R0
00022684: mem := mem with [R31 + 0x44, el]:u32 <- 0
0002268b: R0 := mem[R31 + 0x20, el]:u64
00022690: VF := 0
00022693: CF := 1
00022697: ZF := R0 = 0
0002269b: NF := 63:63[R0]
000226a1: when ZF <> 1 goto %0002269f
00045e01: goto %00023f56

00023f56:
00023f59: R0 := 0x41C000
00023f5f: R3 := R0 + 0xFE8
00023f64: R2 := 0x1BA
00023f69: R0 := 0x41C000
00023f6f: R1 := R0 + 0xAF0
00023f74: R0 := 0x41C000
00023f7a: R0 := R0 + 0xB28
00023f7f: R30 := 0x411820
00023f81: call @__assert_fail with return %0002269f

0002269f:
000226a9: R0 := mem[R31 + 0x18, el]:u64
000226ae: VF := 0
000226b1: CF := 1
000226b5: ZF := R0 = 0
000226b9: NF := 63:63[R0]
000226bf: when ZF <> 1 goto %000226bd
00045e02: goto %00023f29

00023f29:
00023f2c: R0 := 0x41C000
00023f32: R3 := R0 + 0xFE8
00023f37: R2 := 0x1BB
00023f3c: R0 := 0x41C000
00023f42: R1 := R0 + 0xAF0
00023f47: R0 := 0x41C000
00023f4d: R0 := R0 + 0xB38
00023f52: R30 := 0x41184C
00023f54: call @__assert_fail with return %000226bd

000226bd:
000226c7: R0 := mem[R31 + 0x18, el]:u64
000226cc: R30 := 0x411854
000226ce: call @strdup with return %000226d0

000226d0:
000226d6: mem := mem with [R31 + 0x38, el]:u64 <- R0
000226dd: R0 := mem[R31 + 0x38, el]:u64
000226e2: R30 := 0x411860
000226e4: call @lowercase with return %000226e6

000226e6:
000226e9: goto %000226e7

000226e7:
000226ef: R0 := mem[R31 + 0x48, el]:u64
000226f4: VF := 0
000226f7: CF := 1
000226fb: ZF := R0 = 0
000226ff: NF := 63:63[R0]
00022705: when ZF <> 1 goto %00022703
00045e03: goto %000227c4

000227c4:
000227c9: R0 := mem[R31 + 0x38, el]:u64
000227ce: R30 := 0x4118D8
000227d0: call @free with return %000227d2

000227d2:
000227d7: R0 := pad:64[mem[R31 + 0x44, el]:u32]
000227de: R29 := mem[R31, el]:u64
000227e3: R30 := mem[R31 + 8, el]:u64
000227e7: R31 := R31 + 0x50
000227ec: call R30 with noreturn

00022703:
0002270d: R0 := mem[R31 + 0x48, el]:u64
00022714: R0 := mem[R0, el]:u64
0002271b: R1 := mem[R31 + 0x20, el]:u64
00022720: R30 := 0x411874
00022722: call @strcasecmp with return %00022724

00022724:
00022727: VF := 0
0002272a: CF := 1
0002272e: ZF := 31:0[R0] = 0
00022732: NF := 31:31[R0]
00022738: when ZF <> 1 goto %00022736
00045e04: goto %00022751

00022751:
00022756: R0 := mem[R31 + 0x48, el]:u64
0002275d: R0 := mem[R0 + 8, el]:u64
00022762: R30 := 0x411888
00022764: call @strdup with return %00022766

00022766:
0002276c: mem := mem with [R31 + 0x30, el]:u64 <- R0
00022773: R0 := mem[R31 + 0x30, el]:u64
00022778: R30 := 0x411894
0002277a: call @lowercase with return %0002277c

0002277c:
00022781: R1 := mem[R31 + 0x38, el]:u64
00022788: R0 := mem[R31 + 0x30, el]:u64
0002278d: R30 := 0x4118A0
00022790: call @strstr with return %00022792

00022792:
00022795: VF := 0
00022798: CF := 1
0002279c: ZF := R0 = 0
000227a0: NF := 63:63[R0]
000227a6: when ZF goto %000227a4
00045e05: goto %000227b7

000227b7:
000227ba: R0 := 1
000227c2: mem := mem with [R31 + 0x44, el]:u32 <- 31:0[R0]
00045e06: goto %000227a4

000227a4:
000227ae: R0 := mem[R31 + 0x30, el]:u64
000227b3: R30 := 0x4118B8
000227b5: call @free with return %00022736

00022736:
00022740: R0 := mem[R31 + 0x48, el]:u64
00022747: R0 := mem[R0 + 0x18, el]:u64
0002274f: mem := mem with [R31 + 0x48, el]:u64 <- R0
00045e07: goto %000226e7

00045e08: sub hmac_md5(hmac_md5_result)
00046335: hmac_md5_result :: out u32 = low:32[R0]

0001cd6a:
0001cd6e: R31 := R31 - 0x280
0001cd76: mem := mem with [R31, el]:u64 <- R29
0001cd7c: mem := mem with [R31 + 8, el]:u64 <- R30
0001cd82: R29 := R31
0001cd8a: mem := mem with [R31 + 0x38, el]:u64 <- R0
0001cd92: mem := mem with [R31 + 0x30, el]:u64 <- R1
0001cd9a: mem := mem with [R31 + 0x28, el]:u64 <- R2
0001cda2: mem := mem with [R31 + 0x20, el]:u64 <- R3
0001cdaa: mem := mem with [R31 + 0x18, el]:u64 <- R4
0001cdb1: R0 := mem[R31 + 0x30, el]:u64
0001cdb7: #59 := R0 - 0x40
0001cdbc: VF := extend:128[#59] <> extend:128[R0] - 0x40
0001cdc1: CF := pad:128[#59] <> pad:128[R0] + 0xFFFFFFFFFFFFFFC0
0001cdc5: ZF := #59 = 0
0001cdc9: NF := 63:63[#59]
0001cdd0: when ~(CF & ~ZF) goto %0001cdce
00045e09: goto %000207bf

000207bf:
000207c3: R0 := R31 + 0x40
000207c8: R30 := 0x416924
000207ca: call @md5_init_ctx with return %000207cc

000207cc:
000207d0: R0 := R31 + 0x40
000207d6: R2 := R0
000207dd: R1 := mem[R31 + 0x30, el]:u64
000207e4: R0 := mem[R31 + 0x38, el]:u64
000207e9: R30 := 0x416938
000207eb: call @md5_process_bytes with return %000207ed

000207ed:
000207f1: R1 := R31 + 0x130
000207f7: R0 := R31 + 0x40
000207fc: R30 := 0x416944
000207fe: call @md5_finish_ctx with return %00020800

00020800:
00020804: R0 := R31 + 0x130
0002080c: mem := mem with [R31 + 0x38, el]:u64 <- R0
00020811: R0 := 0x10
00020819: mem := mem with [R31 + 0x30, el]:u64 <- R0
00045e0a: goto %0001cdce

0001cdce:
0001cdd7: R0 := R31 + 0x1E0
0001cddc: R30 := 0x41695C
0001cddf: call @md5_init_ctx with return %0002068f

0002068f:
00020693: R0 := R31 + 0xF0
00020698: R2 := 0x40
0002069d: R1 := 0x36
000206a2: R30 := 0x41696C
000206a5: call @memset with return %000206a7

000206a7:
000206ab: R0 := R31 + 0xF0
000206b2: R2 := mem[R31 + 0x30, el]:u64
000206b9: R1 := mem[R31 + 0x38, el]:u64
000206be: R30 := 0x41697C
000206c0: call @memxor with return %000206c2

000206c2:
000206c6: R1 := R31 + 0x1E0
000206cc: R0 := R31 + 0xF0
000206d2: R2 := R1
000206d7: R1 := 0x40
000206dc: R30 := 0x416990
000206de: call @md5_process_block with return %000206e0

000206e0:
000206e4: R0 := R31 + 0x1E0
000206ea: R2 := R0
000206f1: R1 := mem[R31 + 0x20, el]:u64
000206f8: R0 := mem[R31 + 0x28, el]:u64
000206fd: R30 := 0x4169A4
000206ff: call @md5_process_bytes with return %00020701

00020701:
00020705: R1 := R31 + 0xE0
0002070b: R0 := R31 + 0x1E0
00020710: R30 := 0x4169B0
00020712: call @md5_finish_ctx with return %00020714

00020714:
00020718: R0 := R31 + 0x140
0002071d: R30 := 0x4169B8
0002071f: call @md5_init_ctx with return %00020721

00020721:
00020725: R0 := R31 + 0xF0
0002072a: R2 := 0x40
0002072f: R1 := 0x5C
00020734: R30 := 0x4169C8
00020736: call @memset with return %00020738

00020738:
0002073c: R0 := R31 + 0xF0
00020743: R2 := mem[R31 + 0x30, el]:u64
0002074a: R1 := mem[R31 + 0x38, el]:u64
0002074f: R30 := 0x4169D8
00020751: call @memxor with return %00020753

00020753:
00020757: R1 := R31 + 0x140
0002075d: R0 := R31 + 0xF0
00020763: R2 := R1
00020768: R1 := 0x40
0002076d: R30 := 0x4169EC
0002076f: call @md5_process_block with return %00020771

00020771:
00020775: R1 := R31 + 0x140
0002077b: R0 := R31 + 0xE0
00020781: R2 := R1
00020786: R1 := 0x10
0002078b: R30 := 0x416A00
0002078d: call @md5_process_bytes with return %0002078f

0002078f:
00020793: R0 := R31 + 0x140
0002079a: R1 := mem[R31 + 0x18, el]:u64
0002079f: R30 := 0x416A0C
000207a1: call @md5_finish_ctx with return %000207a3

000207a3:
000207a6: R0 := 0
000207ad: R29 := mem[R31, el]:u64
000207b2: R30 := mem[R31 + 8, el]:u64
000207b8: R31 := R31 + 0x280
000207bd: call R30 with noreturn

00045e0b: sub host_connect(host_connect_result)
00046336: host_connect_result :: out u32 = low:32[R0]

00024215:
00024219: #137 := R31 - 0x30
0002421f: mem := mem with [#137, el]:u64 <- R29
00024225: mem := mem with [#137 + 8, el]:u64 <- R30
00024229: R31 := #137
0002422f: R29 := R31
00024237: mem := mem with [R31 + 0x18, el]:u64 <- R0
0002423f: mem := mem with [R31 + 0x14, el]:u32 <- 31:0[R1]
00024244: R30 := 0x403918
00024246: call @__errno_location with return %00024248

00024248:
0002424d: mem := mem with [R0, el]:u32 <- 0
00024253: R0 := R31 + 0x20
0002425a: R2 := pad:64[mem[R31 + 0x14, el]:u32]
00024261: R1 := mem[R31 + 0x18, el]:u64
00024266: R30 := 0x40392C
00024269: call @so_resolv with return %00025f35

00025f35:
00025f38: VF := 0
00025f3b: CF := 1
00025f3f: ZF := 31:0[R0] = 0
00025f43: NF := 31:31[R0]
00025f49: when ZF <> 1 goto %00025f47
00045e0c: goto %000385c8

00025f47:
00025f51: R0 := mem[R31 + 0x20, el]:u64
00025f56: R30 := 0x403944
00025f58: call @so_connect with return %00025f5a

00025f5a:
00025f60: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
00025f67: R0 := mem[R31 + 0x20, el]:u64
00025f6c: R30 := 0x403950
00025f6f: call @freeaddrinfo with return %00025f71

00025f71:
00025f76: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00045e0d: goto %00025f78

000385c8:
000385cb: R0 := 0xFFFFFFFF
000385cf: goto %00025f78

00025f78:
00025f7d: R29 := mem[R31, el]:u64
00025f82: R30 := mem[R31 + 8, el]:u64
00025f86: R31 := R31 + 0x30
00025f8b: call R30 with noreturn

00045e0e: sub http_body_drop(http_body_drop_result)
00046337: http_body_drop_result :: out u32 = low:32[R0]

00027d61:
00027d65: #209 := R31 - 0x30
00027d6b: mem := mem with [#209, el]:u64 <- R29
00027d71: mem := mem with [#209 + 8, el]:u64 <- R30
00027d75: R31 := #209
00027d7b: R29 := R31
00027d83: mem := mem with [R31 + 0x1C, el]:u32 <- 31:0[R0]
00027d8b: mem := mem with [R31 + 0x10, el]:u64 <- R1
00027d90: R0 := 1
00027d98: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
00027d9f: R1 := mem[R31 + 0x10, el]:u64
00027da4: R0 := 0
00027da9: R30 := 0x40846C
00027dab: call @http_has_body with return %00027dad

00027dad:
00027db3: mem := mem with [R31 + 0x20, el]:u64 <- R0
00027dba: R0 := mem[R31 + 0x20, el]:u64
00027dbf: VF := 0
00027dc2: CF := 1
00027dc6: ZF := R0 = 0
00027dca: NF := 63:63[R0]
00027dd0: when ZF goto %00027dce
00045e0f: goto %00035007

00035007:
0003500c: R0 := mem[R31 + 0x10, el]:u64
00035013: R3 := mem[R0 + 8, el]:u64
00035018: R0 := 0x419000
0003501e: R2 := R0 + 0xDD8
00035023: R0 := 0x419000
00035029: R1 := R0 + 0xDA8
0003502f: R0 := R3
00035034: R30 := 0x40849C
00035036: call @hlist_subcmp with return %00035038

00035038:
0003503b: VF := 0
0003503e: CF := 1
00035042: ZF := 31:0[R0] = 0
00035046: NF := 31:31[R0]
0003504c: when ZF goto %0003504a
00045e10: goto %000350b3

0003504a:
00035052: R0 := 0x430000
00035058: R0 := R0 + 0x390
0003505f: R0 := pad:64[mem[R0, el]:u32]
00035064: VF := 0
00035067: CF := 1
0003506b: ZF := 31:0[R0] = 0
0003506f: NF := 31:31[R0]
00035075: when ZF goto %00035073
00045e11: goto %0003509a

0003509a:
0003509f: R1 := mem[R31 + 0x20, el]:u64
000350a4: R0 := 0x419000
000350aa: R0 := R0 + 0xEC0
000350af: R30 := 0x4084FC
000350b1: call @printf with return %00035073

00035073:
0003507d: R2 := mem[R31 + 0x20, el]:u64
00035084: R1 := pad:64[mem[R31 + 0x1C, el]:u32]
00035089: R0 := 0xFFFFFFFF
0003508e: R30 := 0x40850C
00035090: call @data_send with return %00035092

00035092:
00035098: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
00045e12: goto %00027dce

000350b3:
000350b6: R0 := 0x430000
000350bc: R0 := R0 + 0x390
000350c3: R0 := pad:64[mem[R0, el]:u32]
000350c8: VF := 0
000350cb: CF := 1
000350cf: ZF := 31:0[R0] = 0
000350d3: NF := 31:31[R0]
000350d9: when ZF goto %000350d7
00045e13: goto %000350fb

000350fb:
000350fe: R0 := 0x419000
00035104: R0 := R0 + 0xEA0
00035109: R30 := 0x4084C4
0003510b: call @puts with return %000350d7

000350d7:
000350e1: R1 := pad:64[mem[R31 + 0x1C, el]:u32]
000350e6: R0 := 0xFFFFFFFF
000350eb: R30 := 0x4084D0
000350ed: call @chunked_data_send with return %000350ef

000350ef:
000350f5: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
000350f9: goto %00027dce

00027dce:
00027dd8: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00027ddf: R29 := mem[R31, el]:u64
00027de4: R30 := mem[R31 + 8, el]:u64
00027de8: R31 := R31 + 0x30
00027ded: call R30 with noreturn

00045e14: sub http_body_send(http_body_send_result)
00046338: http_body_send_result :: out u32 = low:32[R0]

00027c64:
00027c68: #208 := R31 - 0x50
00027c6e: mem := mem with [#208, el]:u64 <- R29
00027c74: mem := mem with [#208 + 8, el]:u64 <- R30
00027c78: R31 := #208
00027c7e: R29 := R31
00027c86: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
00027c8e: mem := mem with [R31 + 0x28, el]:u32 <- 31:0[R1]
00027c96: mem := mem with [R31 + 0x20, el]:u64 <- R2
00027c9e: mem := mem with [R31 + 0x18, el]:u64 <- R3
00027ca3: R0 := 1
00027cab: mem := mem with [R31 + 0x4C, el]:u32 <- 31:0[R0]
00027cb2: R0 := mem[R31 + 0x18, el]:u64
00027cb9: R0 := pad:64[mem[R0 + 0x1C, el]:u32]
00027cbe: VF := 0
00027cc1: CF := 1
00027cc5: ZF := 31:0[R0] = 0
00027cc9: NF := 31:31[R0]
00027ccf: when ZF goto %00027ccd
00045e15: goto %0003531f

00027ccd:
00027cd7: R0 := mem[R31 + 0x18, el]:u64
00045e16: goto %00027cd9

0003531f:
00035324: R0 := mem[R31 + 0x20, el]:u64
00035328: goto %00027cd9

00027cd9:
00027cdf: mem := mem with [R31 + 0x40, el]:u64 <- R0
00027ce6: R1 := mem[R31 + 0x18, el]:u64
00027ced: R0 := mem[R31 + 0x20, el]:u64
00027cf2: R30 := 0x4082EC
00027cf4: call @http_has_body with return %00027cf6

00027cf6:
00027cfc: mem := mem with [R31 + 0x38, el]:u64 <- R0
00027d03: R0 := mem[R31 + 0x38, el]:u64
00027d08: VF := 0
00027d0b: CF := 1
00027d0f: ZF := R0 = 0
00027d13: NF := 63:63[R0]
00027d19: when ZF goto %00027d17
00045e17: goto %0003511f

00027d17:
00027d1f: R0 := 0x430000
00027d25: R0 := R0 + 0x390
00027d2c: R0 := pad:64[mem[R0, el]:u32]
00027d31: VF := 0
00027d34: CF := 1
00027d38: ZF := 31:0[R0] = 0
00027d3c: NF := 31:31[R0]
00027d42: when ZF goto %00027d40
00045e18: goto %0003510d

0003510d:
00035110: R0 := 0x419000
00035116: R0 := R0 + 0xE90
0003511b: R30 := 0x40843C
0003511d: call @puts with return %00027d40

0003511f:
00035124: R0 := mem[R31 + 0x40, el]:u64
0003512b: R3 := mem[R0 + 8, el]:u64
00035130: R0 := 0x419000
00035136: R2 := R0 + 0xDD8
0003513b: R0 := 0x419000
00035141: R1 := R0 + 0xDA8
00035147: R0 := R3
0003514c: R30 := 0x40831C
0003514e: call @hlist_subcmp with return %00035150

00035150:
00035153: VF := 0
00035156: CF := 1
0003515a: ZF := 31:0[R0] = 0
0003515e: NF := 31:31[R0]
00035164: when ZF goto %00035162
00045e19: goto %0003524a

00035162:
0003516a: R0 := 0x430000
00035170: R0 := R0 + 0x390
00035177: R0 := pad:64[mem[R0, el]:u32]
0003517c: VF := 0
0003517f: CF := 1
00035183: ZF := 31:0[R0] = 0
00035187: NF := 31:31[R0]
0003518d: when ZF goto %0003518b
00045e1a: goto %00035231

00035231:
00035236: R1 := mem[R31 + 0x38, el]:u64
0003523b: R0 := 0x419000
00035241: R0 := R0 + 0xE40
00035246: R30 := 0x4083C0
00035248: call @printf with return %0003518b

0003518b:
00035195: R2 := mem[R31 + 0x38, el]:u64
0003519c: R1 := pad:64[mem[R31 + 0x28, el]:u32]
000351a3: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
000351a8: R30 := 0x4083D0
000351aa: call @data_send with return %000351ac

000351ac:
000351b2: mem := mem with [R31 + 0x4C, el]:u32 <- 31:0[R0]
000351b7: R0 := 0x430000
000351bd: R0 := R0 + 0x390
000351c4: R0 := pad:64[mem[R0, el]:u32]
000351c9: VF := 0
000351cc: CF := 1
000351d0: ZF := 31:0[R0] = 0
000351d4: NF := 31:31[R0]
000351d9: when ZF goto %00027d40
00045e1b: goto %000351dd

000351dd:
000351e2: R0 := pad:64[mem[R31 + 0x4C, el]:u32]
000351e7: VF := 0
000351ea: CF := 1
000351ee: ZF := 31:0[R0] = 0
000351f2: NF := 31:31[R0]
000351f8: when ZF goto %000351f6
00045e1c: goto %00035222

000351f6:
000351fe: R0 := 0x419000
00035204: R0 := R0 + 0xE70
00045e1d: goto %00035206

00035222:
00035225: R0 := 0x419000
0003522b: R0 := R0 + 0xE60
0003522f: goto %00035206

00035206:
0003520a: R1 := R0
0003520f: R0 := 0x419000
00035215: R0 := R0 + 0xE38
0003521a: R30 := 0x408418
0003521c: call @printf with return %0003521e

0003521e:
00035220: goto %00027d40

0003524a:
0003524d: R0 := 0x430000
00035253: R0 := R0 + 0x390
0003525a: R0 := pad:64[mem[R0, el]:u32]
0003525f: VF := 0
00035262: CF := 1
00035266: ZF := 31:0[R0] = 0
0003526a: NF := 31:31[R0]
00035270: when ZF goto %0003526e
00045e1e: goto %0003530d

0003530d:
00035310: R0 := 0x419000
00035316: R0 := R0 + 0xDE0
0003531b: R30 := 0x408344
0003531d: call @puts with return %0003526e

0003526e:
00035278: R1 := pad:64[mem[R31 + 0x28, el]:u32]
0003527f: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00035284: R30 := 0x408350
00035286: call @chunked_data_send with return %00035288

00035288:
0003528e: mem := mem with [R31 + 0x4C, el]:u32 <- 31:0[R0]
00035293: R0 := 0x430000
00035299: R0 := R0 + 0x390
000352a0: R0 := pad:64[mem[R0, el]:u32]
000352a5: VF := 0
000352a8: CF := 1
000352ac: ZF := 31:0[R0] = 0
000352b0: NF := 31:31[R0]
000352b5: when ZF goto %00027d40
00045e1f: goto %000352b9

000352b9:
000352be: R0 := pad:64[mem[R31 + 0x4C, el]:u32]
000352c3: VF := 0
000352c6: CF := 1
000352ca: ZF := 31:0[R0] = 0
000352ce: NF := 31:31[R0]
000352d4: when ZF goto %000352d2
00045e20: goto %000352fe

000352d2:
000352da: R0 := 0x419000
000352e0: R0 := R0 + 0xE10
00045e21: goto %000352e2

000352fe:
00035301: R0 := 0x419000
00035307: R0 := R0 + 0xDF8
0003530b: goto %000352e2

000352e2:
000352e6: R1 := R0
000352eb: R0 := 0x419000
000352f1: R0 := R0 + 0xE38
000352f6: R30 := 0x408398
000352f8: call @printf with return %000352fa

000352fa:
000352fc: goto %00027d40

00027d40:
00027d4a: R0 := pad:64[mem[R31 + 0x4C, el]:u32]
00027d51: R29 := mem[R31, el]:u64
00027d56: R30 := mem[R31 + 8, el]:u64
00027d5a: R31 := R31 + 0x50
00027d5f: call R30 with noreturn

00045e22: sub http_has_body(http_has_body_result)
00046339: http_has_body_result :: out u32 = low:32[R0]

00027aa2:
00027aa9: #203 := R31 - 0x40
00027aaf: mem := mem with [#203, el]:u64 <- R29
00027ab5: mem := mem with [#203 + 8, el]:u64 <- R30
00027ab9: R31 := #203
00027abf: R29 := R31
00027ac7: mem := mem with [R31 + 0x18, el]:u64 <- R0
00027acf: mem := mem with [R31 + 0x10, el]:u64 <- R1
00027ad6: R0 := mem[R31 + 0x10, el]:u64
00027adb: VF := 0
00027ade: CF := 1
00027ae2: ZF := R0 = 0
00027ae6: NF := 63:63[R0]
00027aec: when ZF goto %00027aea
00045e23: goto %00035763

00035763:
00035768: R0 := mem[R31 + 0x10, el]:u64
0003576f: R0 := pad:64[mem[R0 + 0x1C, el]:u32]
00035774: VF := 0
00035777: CF := 1
0003577b: ZF := 31:0[R0] = 0
0003577f: NF := 31:31[R0]
00035784: when ZF goto %0003575c
00045e24: goto %00027aea

0003575c:
00035761: R0 := mem[R31 + 0x10, el]:u64
00045e25: goto %00027af7

00027aea:
00027af4: R0 := mem[R31 + 0x18, el]:u64
00027af9: goto %00027af7

00027af7:
00027b00: mem := mem with [R31 + 0x28, el]:u64 <- R0
00027b07: R0 := mem[R31 + 0x28, el]:u64
00027b0c: VF := 0
00027b0f: CF := 1
00027b13: ZF := R0 = 0
00027b17: NF := 63:63[R0]
00027b1d: when ZF <> 1 goto %00027b1b
00045e26: goto %0003572e

00027b1b:
00027b25: R1 := mem[R31 + 0x28, el]:u64
00027b2c: R0 := mem[R31 + 0x10, el]:u64
00027b32: #204 := ~R0
00027b37: #205 := R1 + ~R0
00027b3d: VF := extend:128[#205 + 1] <> extend:128[R1] + extend:128[#204] + 1
00027b43: CF := pad:128[#205 + 1] <> pad:128[R1] + pad:128[#204] + 1
00027b47: ZF := #205 + 1 = 0
00027b4b: NF := 63:63[#205 + 1]
00027b51: when ZF <> 1 goto %00027b4f
00045e27: goto %000355dc

00027b4f:
00027b59: R0 := mem[R31 + 0x18, el]:u64
00027b5e: VF := 0
00027b61: CF := 1
00027b65: ZF := R0 = 0
00027b69: NF := 63:63[R0]
00027b6f: when ZF goto %00027b6d
00045e28: goto %0003557a

0003557a:
0003557f: R0 := mem[R31 + 0x18, el]:u64
00035586: R0 := pad:64[mem[R0, el]:u32]
0003558b: VF := 0
0003558e: CF := 1
00035592: ZF := 31:0[R0] = 0
00035596: NF := 31:31[R0]
0003559b: when ZF goto %00027b6d
00045e29: goto %0003559f

0003559f:
000355a4: R0 := mem[R31 + 0x18, el]:u64
000355ab: R0 := mem[R0 + 0x28, el]:u64
000355b1: R1 := R0
000355b6: R0 := 0x419000
000355bc: R0 := R0 + 0xD80
000355c1: R30 := 0x4080F8
000355c3: call @strcasecmp with return %000355c5

000355c5:
000355c8: VF := 0
000355cb: CF := 1
000355cf: ZF := 31:0[R0] = 0
000355d3: NF := 31:31[R0]
000355d8: when ZF goto %00035571
00045e2a: goto %00027b6d

00027b6d:
00027b77: R0 := mem[R31 + 0x18, el]:u64
00027b7c: VF := 0
00027b7f: CF := 1
00027b83: ZF := R0 = 0
00027b87: NF := 63:63[R0]
00027b8d: when ZF goto %00027b8b
00045e2b: goto %0003550f

0003550f:
00035514: R0 := mem[R31 + 0x18, el]:u64
0003551b: R0 := pad:64[mem[R0, el]:u32]
00035520: VF := 0
00035523: CF := 1
00035527: ZF := 31:0[R0] = 0
0003552b: NF := 31:31[R0]
00035530: when ZF goto %00027b8b
00045e2c: goto %00035534

00035534:
00035539: R0 := mem[R31 + 0x18, el]:u64
00035540: R0 := mem[R0 + 0x28, el]:u64
00035546: R1 := R0
0003554b: R0 := 0x419000
00035551: R0 := R0 + 0xD78
00035556: R30 := 0x408134
00035558: call @strcasecmp with return %0003555a

0003555a:
0003555d: VF := 0
00035560: CF := 1
00035564: ZF := 31:0[R0] = 0
00035568: NF := 31:31[R0]
0003556d: when ZF <> 1 goto %00027b8b
00045e2d: goto %00035571

00027b8b:
00027b93: R0 := 0
00045e2e: goto %00027b95

00035571:
00035574: R0 := 1
00035578: goto %00027b95

00027b95:
00027b9b: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
00045e2f: goto %00027b9d

000355dc:
000355e1: R0 := mem[R31 + 0x18, el]:u64
000355e6: VF := 0
000355e9: CF := 1
000355ed: ZF := R0 = 0
000355f1: NF := 63:63[R0]
000355f7: when ZF goto %000355f5
00045e30: goto %000356cc

000356cc:
000356d1: R0 := mem[R31 + 0x18, el]:u64
000356d8: R0 := pad:64[mem[R0, el]:u32]
000356dd: VF := 0
000356e0: CF := 1
000356e4: ZF := 31:0[R0] = 0
000356e8: NF := 31:31[R0]
000356ed: when ZF goto %000355f5
00045e31: goto %000356f1

000356f1:
000356f6: R0 := mem[R31 + 0x18, el]:u64
000356fd: R0 := mem[R0 + 0x28, el]:u64
00035703: R1 := R0
00035708: R0 := 0x419000
0003570e: R0 := R0 + 0xD78
00035713: R30 := 0x408068
00035715: call @strcasecmp with return %00035717

00035717:
0003571a: VF := 0
0003571d: CF := 1
00035721: ZF := 31:0[R0] = 0
00035725: NF := 31:31[R0]
0003572a: when ZF goto %00035651
00045e32: goto %000355f5

000355f5:
000355ff: R0 := mem[R31 + 0x10, el]:u64
00035606: R0 := pad:64[mem[R0 + 0x10, el]:u32]
0003560c: #386 := 31:0[R0] - 0x63
00035611: VF := extend:64[#386] <> extend:64[31:0[R0]] - 0x63
00035616: CF := pad:64[#386] <> pad:64[31:0[R0]] + 0xFFFFFF9D
0003561a: ZF := #386 = 0
0003561e: NF := 31:31[#386]
00035626: when ~(NF = VF & ~ZF) goto %00035624
00045e33: goto %0003569d

0003569d:
000356a2: R0 := mem[R31 + 0x10, el]:u64
000356a9: R0 := pad:64[mem[R0 + 0x10, el]:u32]
000356af: #389 := 31:0[R0] - 0xC7
000356b4: VF := extend:64[#389] <> extend:64[31:0[R0]] - 0xC7
000356b9: CF := pad:64[#389] <> pad:64[31:0[R0]] + 0xFFFFFF39
000356bd: ZF := #389 = 0
000356c1: NF := 31:31[#389]
000356c8: when ~(NF = VF & ~ZF) goto %00035651
00045e34: goto %00035624

00035624:
0003562e: R0 := mem[R31 + 0x10, el]:u64
00035635: R0 := pad:64[mem[R0 + 0x10, el]:u32]
0003563b: #387 := 31:0[R0] - 0xCC
00035640: VF := extend:64[#387] <> extend:64[31:0[R0]] - 0xCC
00035645: CF := pad:64[#387] <> pad:64[31:0[R0]] + 0xFFFFFF34
00035649: ZF := #387 = 0
0003564d: NF := 31:31[#387]
00035653: when ZF goto %00035651
00045e35: goto %00035670

00035670:
00035675: R0 := mem[R31 + 0x10, el]:u64
0003567c: R0 := pad:64[mem[R0 + 0x10, el]:u32]
00035682: #388 := 31:0[R0] - 0x130
00035687: VF := extend:64[#388] <> extend:64[31:0[R0]] - 0x130
0003568c: CF := pad:64[#388] <> pad:64[31:0[R0]] + 0xFFFFFED0
00035690: ZF := #388 = 0
00035694: NF := 31:31[#388]
00035699: when ZF <> 1 goto %0003566b
00045e36: goto %00035651

0003566b:
0003566e: R0 := 0
00045e37: goto %0003565c

00035651:
00035659: R0 := 1
0003565e: goto %0003565c

0003565c:
00035665: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
00035669: goto %00027b9d

00027b9d:
00027ba2: R0 := mem[R31 + 0x28, el]:u64
00027ba9: R2 := mem[R0 + 8, el]:u64
00027bae: R0 := 0x419000
00027bb4: R1 := R0 + 0xD88
00027bba: R0 := R2
00027bbf: R30 := 0x408164
00027bc1: call @hlist_get with return %00027bc3

00027bc3:
00027bc9: mem := mem with [R31 + 0x20, el]:u64 <- R0
00027bd0: R0 := pad:64[mem[R31 + 0x34, el]:u32]
00027bd5: VF := 0
00027bd8: CF := 1
00027bdc: ZF := 31:0[R0] = 0
00027be0: NF := 31:31[R0]
00027be6: when ZF <> 1 goto %00027be4
00045e38: goto %00035388

00035388:
0003538d: R0 := mem[R31 + 0x20, el]:u64
00035392: VF := 0
00035395: CF := 1
00035399: ZF := R0 = 0
0003539d: NF := 63:63[R0]
000353a2: when ZF <> 1 goto %00027be4
00045e39: goto %000353a6

000353a6:
000353ab: R0 := mem[R31 + 0x28, el]:u64
000353b2: R2 := mem[R0 + 8, el]:u64
000353b7: R0 := 0x419000
000353bd: R1 := R0 + 0xD98
000353c3: R0 := R2
000353c8: R30 := 0x408198
000353ca: call @hlist_in with return %000353cc

000353cc:
000353cf: VF := 0
000353d2: CF := 1
000353d6: ZF := 31:0[R0] = 0
000353da: NF := 31:31[R0]
000353e0: when ZF <> 1 goto %000353de
00045e3a: goto %0003548a

0003548a:
0003548f: R0 := mem[R31 + 0x28, el]:u64
00035496: R2 := mem[R0 + 8, el]:u64
0003549b: R0 := 0x419000
000354a1: R1 := R0 + 0xDA8
000354a7: R0 := R2
000354ac: R30 := 0x4081B8
000354ae: call @hlist_in with return %000354b0

000354b0:
000354b3: VF := 0
000354b6: CF := 1
000354ba: ZF := 31:0[R0] = 0
000354be: NF := 31:31[R0]
000354c3: when ZF <> 1 goto %000353de
00045e3b: goto %000354c7

000354c7:
000354cc: R0 := mem[R31 + 0x28, el]:u64
000354d3: R3 := mem[R0 + 8, el]:u64
000354d8: R0 := 0x419000
000354de: R2 := R0 + 0xDC0
000354e3: R0 := 0x419000
000354e9: R1 := R0 + 0xDC8
000354ef: R0 := R3
000354f4: R30 := 0x4081E0
000354f6: call @hlist_subcmp with return %000354f8

000354f8:
000354fb: VF := 0
000354fe: CF := 1
00035502: ZF := 31:0[R0] = 0
00035506: NF := 31:31[R0]
0003550b: when ZF goto %00027be4
00045e3c: goto %000353de

00027be4:
00027bee: R0 := mem[R31 + 0x20, el]:u64
00027bf3: VF := 0
00027bf6: CF := 1
00027bfa: ZF := R0 = 0
00027bfe: NF := 63:63[R0]
00027c04: when ZF goto %00027c02
00045e3d: goto %00035357

00035357:
0003535c: R0 := pad:64[mem[R31 + 0x34, el]:u32]
00035361: VF := 0
00035364: CF := 1
00035368: ZF := 31:0[R0] = 0
0003536c: NF := 31:31[R0]
00035371: when ZF <> 1 goto %00027c02
00045e3e: goto %00035375

00027c02:
00027c0a: R0 := 0
00045e3f: goto %00027c0c

00035375:
0003537a: R0 := mem[R31 + 0x20, el]:u64
0003537f: R30 := 0x408268
00035382: call @atoll with return %00035384

00035384:
00035386: goto %00027c0c

00027c0c:
00027c12: mem := mem with [R31 + 0x38, el]:u64 <- R0
00045e40: goto %00027c14

000353de:
000353e8: R0 := mem[R31 + 0x28, el]:u64
000353ef: R2 := mem[R0 + 8, el]:u64
000353f4: R0 := 0x419000
000353fa: R1 := R0 + 0xDA8
00035400: R0 := R2
00035405: R30 := 0x408200
00035407: call @hlist_in with return %00035409

00035409:
0003540c: VF := 0
0003540f: CF := 1
00035413: ZF := 31:0[R0] = 0
00035417: NF := 31:31[R0]
0003541d: when ZF goto %0003541b
00045e41: goto %00035431

00035431:
00035436: R0 := mem[R31 + 0x28, el]:u64
0003543d: R3 := mem[R0 + 8, el]:u64
00035442: R0 := 0x419000
00035448: R2 := R0 + 0xDD8
0003544d: R0 := 0x419000
00035453: R1 := R0 + 0xDA8
00035459: R0 := R3
0003545e: R30 := 0x408228
00035460: call @hlist_subcmp with return %00035462

00035462:
00035465: VF := 0
00035468: CF := 1
0003546c: ZF := 31:0[R0] = 0
00035470: NF := 31:31[R0]
00035475: when ZF goto %0003541b
00045e42: goto %00035479

0003541b:
00035423: R0 := 0xFFFFFFFFFFFFFFFF
0003542b: mem := mem with [R31 + 0x38, el]:u64 <- R0
0003542f: goto %00027c14

00035479:
0003547c: R0 := 1
00035484: mem := mem with [R31 + 0x38, el]:u64 <- R0
00035488: goto %00027c14

00027c14:
00027c19: R1 := mem[R31 + 0x28, el]:u64
00027c20: R0 := mem[R31 + 0x18, el]:u64
00027c26: #206 := ~R0
00027c2b: #207 := R1 + ~R0
00027c31: VF := extend:128[#207 + 1] <> extend:128[R1] + extend:128[#206] + 1
00027c37: CF := pad:128[#207 + 1] <> pad:128[R1] + pad:128[#206] + 1
00027c3b: ZF := #207 + 1 = 0
00027c3f: NF := 63:63[#207 + 1]
00027c45: when ZF <> 1 goto %00027c43
00045e43: goto %0003532a

0003532a:
0003532f: R0 := mem[R31 + 0x38, el]:u64
00035335: #385 := R0 + 1
0003533a: VF := extend:128[#385] <> extend:128[R0] + 1
0003533f: CF := pad:128[#385] <> pad:128[R0] + 1
00035343: ZF := #385 = 0
00035347: NF := 63:63[#385]
0003534c: when ZF <> 1 goto %00027c43
00045e44: goto %00035350

00035350:
00035355: mem := mem with [R31 + 0x38, el]:u64 <- 0
00045e45: goto %00027c43

00027c43:
00027c4d: R0 := mem[R31 + 0x38, el]:u64
00045e46: goto %00027c4f

0003572e:
00035733: R3 := mem[R31 + 0x10, el]:u64
0003573a: R2 := mem[R31 + 0x18, el]:u64
0003573f: R0 := 0x419000
00035745: R1 := R0 + 0xCF8
0003574a: R0 := 3
0003574f: R30 := 0x40801C
00035751: call @syslog with return %00035753

00035753:
00035756: R0 := 0
0003575a: goto %00027c4f

00027c4f:
00027c54: R29 := mem[R31, el]:u64
00027c59: R30 := mem[R31 + 8, el]:u64
00027c5d: R31 := R31 + 0x40
00027c62: call R30 with noreturn

00045e47: sub http_parse_basic(http_parse_basic_result)
0004633a: http_parse_basic_result :: out u32 = low:32[R0]

00027def:
00027df3: #210 := R31 - 0x60
00027df9: mem := mem with [#210, el]:u64 <- R29
00027dff: mem := mem with [#210 + 8, el]:u64 <- R30
00027e03: R31 := #210
00027e09: R29 := R31
00027e11: mem := mem with [R31 + 0x28, el]:u64 <- R0
00027e19: mem := mem with [R31 + 0x20, el]:u64 <- R1
00027e21: mem := mem with [R31 + 0x18, el]:u64 <- R2
00027e28: mem := mem with [R31 + 0x50, el]:u64 <- 0
00027e2f: mem := mem with [R31 + 0x48, el]:u64 <- 0
00027e36: mem := mem with [R31 + 0x40, el]:u64 <- 0
00027e3d: mem := mem with [R31 + 0x38, el]:u64 <- 0
00027e42: R0 := 0x419000
00027e48: R2 := R0 + 0xED8
00027e4f: R1 := mem[R31 + 0x20, el]:u64
00027e56: R0 := mem[R31 + 0x28, el]:u64
00027e5b: R30 := 0x408554
00027e5d: call @hlist_subcmp with return %00027e5f

00027e5f:
00027e62: VF := 0
00027e65: CF := 1
00027e69: ZF := 31:0[R0] = 0
00027e6d: NF := 31:31[R0]
00027e73: when ZF <> 1 goto %00027e71
00045e48: goto %00034ffe

00027e71:
00027e7b: R1 := mem[R31 + 0x20, el]:u64
00027e82: R0 := mem[R31 + 0x28, el]:u64
00027e87: R30 := 0x408570
00027e89: call @hlist_get with return %00027e8b

00027e8b:
00027e91: mem := mem with [R31 + 0x50, el]:u64 <- R0
00027e98: R0 := mem[R31 + 0x50, el]:u64
00027e9d: VF := 0
00027ea0: CF := 1
00027ea4: ZF := R0 = 0
00027ea8: NF := 63:63[R0]
00027eae: when ZF <> 1 goto %00027eac
00045e49: goto %00034fd1

00034fd1:
00034fd4: R0 := 0x419000
00034fda: R3 := R0 + 0xF00
00034fdf: R2 := 0x297
00034fe4: R0 := 0x419000
00034fea: R1 := R0 + 0xAB8
00034fef: R0 := 0x419000
00034ff5: R0 := R0 + 0xEE0
00034ffa: R30 := 0x4085A0
00034ffc: call @__assert_fail with return %00027eac

00027eac:
00027eb6: R0 := mem[R31 + 0x50, el]:u64
00027ebb: R30 := 0x4085A8
00027ebd: call @strlen with return %00027ebf

00027ebf:
00027ec3: R0 := R0 + 1
00027ec8: R30 := 0x4085B0
00027eca: call @zmalloc with return %00027ecc

00027ecc:
00027ed2: mem := mem with [R31 + 0x40, el]:u64 <- R0
00027ed7: R0 := 5
00027edf: mem := mem with [R31 + 0x58, el]:u64 <- R0
00045e4a: goto %00027ee3

00027ee3:
00027ee8: R0 := mem[R31 + 0x50, el]:u64
00027eed: R30 := 0x4085C8
00027eef: call @strlen with return %00027ef1

00027ef1:
00027ef5: R1 := R0
00027efc: R0 := mem[R31 + 0x58, el]:u64
00027f02: #211 := ~R1
00027f07: #212 := R0 + ~R1
00027f0d: VF := extend:128[#212 + 1] <> extend:128[R0] + extend:128[#211] + 1
00027f13: CF := pad:128[#212 + 1] <> pad:128[R0] + pad:128[#211] + 1
00027f17: ZF := #212 + 1 = 0
00027f1b: NF := 63:63[#212 + 1]
00027f21: when CF goto %00027f1f
00045e4b: goto %00034f81

00034f81:
00034f86: R0 := mem[R31 + 0x58, el]:u64
00034f8c: R0 := R0 + 1
00034f94: mem := mem with [R31 + 0x58, el]:u64 <- R0
00034f9b: R1 := mem[R31 + 0x50, el]:u64
00034fa2: R0 := mem[R31 + 0x58, el]:u64
00034fa9: R0 := R1 + R0
00034fb0: R0 := pad:64[mem[R0]]
00034fb6: #384 := 31:0[R0] - 0x20
00034fbb: VF := extend:64[#384] <> extend:64[31:0[R0]] - 0x20
00034fc0: CF := pad:64[#384] <> pad:64[31:0[R0]] + 0xFFFFFFE0
00034fc4: ZF := #384 = 0
00034fc8: NF := 31:31[#384]
00034fcd: when ZF goto %00027ee3
00045e4c: goto %00027f1f

00027f1f:
00027f29: R1 := mem[R31 + 0x50, el]:u64
00027f30: R0 := mem[R31 + 0x58, el]:u64
00027f37: R0 := R1 + R0
00027f3d: R1 := R0
00027f44: R0 := mem[R31 + 0x40, el]:u64
00027f49: R30 := 0x408614
00027f4b: call @from_base64 with return %00027f4d

00027f4d:
00027f50: R1 := 0x3A
00027f57: R0 := mem[R31 + 0x40, el]:u64
00027f5c: R30 := 0x408620
00027f5f: call @strchr with return %00027f61

00027f61:
00027f67: mem := mem with [R31 + 0x48, el]:u64 <- R0
00027f6e: R0 := mem[R31 + 0x48, el]:u64
00027f73: VF := 0
00027f76: CF := 1
00027f7a: ZF := R0 = 0
00027f7e: NF := 63:63[R0]
00027f84: when ZF <> 1 goto %00027f82
00045e4d: goto %00034f43

00027f82:
00027f8c: R0 := mem[R31 + 0x48, el]:u64
00027f93: mem := mem with [R0] <- 0
00027f98: R1 := 0x5C
00027f9f: R0 := mem[R31 + 0x40, el]:u64
00027fa4: R30 := 0x40866C
00027fa6: call @strchr with return %00027fa8

00027fa8:
00027fae: mem := mem with [R31 + 0x38, el]:u64 <- R0
00027fb5: R0 := mem[R31 + 0x38, el]:u64
00027fba: VF := 0
00027fbd: CF := 1
00027fc1: ZF := R0 = 0
00027fc5: NF := 63:63[R0]
00027fcb: when ZF <> 1 goto %00027fc9
00045e4e: goto %00034ee9

00027fc9:
00027fd3: R0 := mem[R31 + 0x38, el]:u64
00027fda: mem := mem with [R0] <- 0
00027fe1: R0 := mem[R31 + 0x38, el]:u64
00027fe7: R0 := R0 + 1
00027fef: mem := mem with [R31 + 0x38, el]:u64 <- R0
00027ff6: R0 := mem[R31 + 0x18, el]:u64
00027ffb: VF := 0
00027ffe: CF := 1
00028002: ZF := R0 = 0
00028006: NF := 63:63[R0]
0002800c: when ZF goto %0002800a
00045e4f: goto %00034eab

00034eab:
00034eb0: R0 := mem[R31 + 0x40, el]:u64
00034eb5: VF := 0
00034eb8: CF := 1
00034ebc: ZF := R0 = 0
00034ec0: NF := 63:63[R0]
00034ec5: when ZF goto %0002800a
00045e50: goto %00034ec9

00034ec9:
00034ece: R0 := mem[R31 + 0x18, el]:u64
00034ed4: R0 := R0 + 0x32
00034ed9: R2 := 0x32
00034ee0: R1 := mem[R31 + 0x40, el]:u64
00034ee5: R30 := 0x4086E8
00034ee7: call @strlcpy with return %0002800a

0002800a:
00028014: R0 := mem[R31 + 0x18, el]:u64
00028019: VF := 0
0002801c: CF := 1
00028020: ZF := R0 = 0
00028024: NF := 63:63[R0]
0002802a: when ZF goto %00028028
00045e51: goto %00034e73

00034e73:
00034e78: R0 := mem[R31 + 0x38, el]:u64
00034e7d: VF := 0
00034e80: CF := 1
00034e84: ZF := R0 = 0
00034e88: NF := 63:63[R0]
00034e8d: when ZF goto %00028028
00045e52: goto %00034e91

00034e91:
00034e96: R0 := mem[R31 + 0x18, el]:u64
00034e9b: R2 := 0x32
00034ea2: R1 := mem[R31 + 0x38, el]:u64
00034ea7: R30 := 0x408710
00034ea9: call @strlcpy with return %00028028

00034ee9:
00034eee: R0 := mem[R31 + 0x18, el]:u64
00034ef3: VF := 0
00034ef6: CF := 1
00034efa: ZF := R0 = 0
00034efe: NF := 63:63[R0]
00034f03: when ZF goto %00028028
00045e53: goto %00034f07

00034f07:
00034f0c: R0 := mem[R31 + 0x40, el]:u64
00034f11: VF := 0
00034f14: CF := 1
00034f18: ZF := R0 = 0
00034f1c: NF := 63:63[R0]
00034f21: when ZF goto %00028028
00045e54: goto %00034f25

00034f25:
00034f2a: R0 := mem[R31 + 0x18, el]:u64
00034f2f: R2 := 0x32
00034f36: R1 := mem[R31 + 0x40, el]:u64
00034f3b: R30 := 0x4086A4
00034f3d: call @strlcpy with return %00034f3f

00034f3f:
00034f41: goto %00028028

00028028:
00028032: R0 := mem[R31 + 0x18, el]:u64
00028039: R0 := pad:64[mem[R0 + 0x12C, el]:u32]
0002803e: VF := 0
00028041: CF := 1
00028045: ZF := 31:0[R0] = 0
00028049: NF := 31:31[R0]
0002804f: when ZF goto %0002804d
00045e55: goto %00034dbb

00034dbb:
00034dc0: R3 := mem[R31 + 0x18, el]:u64
00034dc7: R0 := mem[R31 + 0x18, el]:u64
00034dcd: R1 := R0 + 0x32
00034dd4: R0 := mem[R31 + 0x48, el]:u64
00034dda: R0 := R0 + 1
00034de0: R2 := R0
00034de6: R0 := R3
00034deb: R30 := 0x408740
00034ded: call @ntlm2_hash_password with return %00034def

00034def:
00034df5: mem := mem with [R31 + 0x50, el]:u64 <- R0
00034dfc: R0 := mem[R31 + 0x18, el]:u64
00034e01: VF := 0
00034e04: CF := 1
00034e08: ZF := R0 = 0
00034e0c: NF := 63:63[R0]
00034e12: when ZF goto %00034e10
00045e56: goto %00034e23

00034e23:
00034e28: R0 := mem[R31 + 0x50, el]:u64
00034e2d: VF := 0
00034e30: CF := 1
00034e34: ZF := R0 = 0
00034e38: NF := 63:63[R0]
00034e3d: when ZF goto %00034e10
00045e57: goto %00034e41

00034e41:
00034e46: R0 := mem[R31 + 0x18, el]:u64
00034e4c: R2 := R0 + 0xFA
00034e53: R0 := mem[R31 + 0x50, el]:u64
00034e5a: #383 := mem[R0 + 8, el]:u64
00034e5f: R0 := mem[R0, el]:u64
00034e63: R1 := #383
00034e6b: mem := mem with [R2, el]:u64 <- R0
00034e71: mem := mem with [R2 + 8, el]:u64 <- R1
00045e58: goto %00034e10

00034e10:
00034e1a: R0 := mem[R31 + 0x50, el]:u64
00034e1f: R30 := 0x408778
00034e21: call @free with return %0002804d

0002804d:
00028057: R0 := mem[R31 + 0x18, el]:u64
0002805e: R0 := pad:64[mem[R0 + 0x130, el]:u32]
00028063: VF := 0
00028066: CF := 1
0002806a: ZF := 31:0[R0] = 0
0002806e: NF := 31:31[R0]
00028074: when ZF goto %00028072
00045e59: goto %00034d35

00034d35:
00034d3a: R0 := mem[R31 + 0x48, el]:u64
00034d40: R0 := R0 + 1
00034d45: R30 := 0x408794
00034d47: call @ntlm_hash_nt_password with return %00034d49

00034d49:
00034d4f: mem := mem with [R31 + 0x50, el]:u64 <- R0
00034d56: R0 := mem[R31 + 0x18, el]:u64
00034d5b: VF := 0
00034d5e: CF := 1
00034d62: ZF := R0 = 0
00034d66: NF := 63:63[R0]
00034d6c: when ZF goto %00034d6a
00045e5a: goto %00034d7d

00034d7d:
00034d82: R0 := mem[R31 + 0x50, el]:u64
00034d87: VF := 0
00034d8a: CF := 1
00034d8e: ZF := R0 = 0
00034d92: NF := 63:63[R0]
00034d97: when ZF goto %00034d6a
00045e5b: goto %00034d9b

00034d9b:
00034da0: R0 := mem[R31 + 0x18, el]:u64
00034da6: R0 := R0 + 0xC8
00034dab: R2 := 0x15
00034db2: R1 := mem[R31 + 0x50, el]:u64
00034db7: R30 := 0x4087C4
00034db9: call @memcpy with return %00034d6a

00034d6a:
00034d74: R0 := mem[R31 + 0x50, el]:u64
00034d79: R30 := 0x4087CC
00034d7b: call @free with return %00028072

00028072:
0002807c: R0 := mem[R31 + 0x18, el]:u64
00028083: R0 := pad:64[mem[R0 + 0x134, el]:u32]
00028088: VF := 0
0002808b: CF := 1
0002808f: ZF := 31:0[R0] = 0
00028093: NF := 31:31[R0]
00028099: when ZF goto %00028097
00045e5c: goto %00033d47

00033d47:
00033d4c: R0 := mem[R31 + 0x48, el]:u64
00033d52: R0 := R0 + 1
00033d57: R30 := 0x4087E8
00033d5a: call @ntlm_hash_lm_password with return %00034cc3

00034cc3:
00034cc9: mem := mem with [R31 + 0x50, el]:u64 <- R0
00034cd0: R0 := mem[R31 + 0x18, el]:u64
00034cd5: VF := 0
00034cd8: CF := 1
00034cdc: ZF := R0 = 0
00034ce0: NF := 63:63[R0]
00034ce6: when ZF goto %00034ce4
00045e5d: goto %00034cf7

00034cf7:
00034cfc: R0 := mem[R31 + 0x50, el]:u64
00034d01: VF := 0
00034d04: CF := 1
00034d08: ZF := R0 = 0
00034d0c: NF := 63:63[R0]
00034d11: when ZF goto %00034ce4
00045e5e: goto %00034d15

00034d15:
00034d1a: R0 := mem[R31 + 0x18, el]:u64
00034d20: R0 := R0 + 0x96
00034d25: R2 := 0x15
00034d2c: R1 := mem[R31 + 0x50, el]:u64
00034d31: R30 := 0x408818
00034d33: call @memcpy with return %00034ce4

00034ce4:
00034cee: R0 := mem[R31 + 0x50, el]:u64
00034cf3: R30 := 0x408820
00034cf5: call @free with return %00028097

00028097:
000280a1: R0 := mem[R31 + 0x40, el]:u64
000280a6: R30 := 0x408828
000280a8: call @strlen with return %000280aa

000280aa:
000280ae: R2 := R0
000280b3: R1 := 0
000280ba: R0 := mem[R31 + 0x40, el]:u64
000280bf: R30 := 0x408838
000280c1: call @memset with return %000280c3

000280c3:
000280c8: R0 := mem[R31 + 0x40, el]:u64
000280cd: R30 := 0x408840
000280cf: call @free with return %000280d1

000280d1:
000280d4: R0 := 1
00045e5f: goto %000280d6

00034f43:
00034f48: R0 := mem[R31 + 0x40, el]:u64
00034f4d: R30 := 0x408638
00034f4f: call @strlen with return %00034f51

00034f51:
00034f55: R2 := R0
00034f5a: R1 := 0
00034f61: R0 := mem[R31 + 0x40, el]:u64
00034f66: R30 := 0x408648
00034f68: call @memset with return %00034f6a

00034f6a:
00034f6f: R0 := mem[R31 + 0x40, el]:u64
00034f74: R30 := 0x408650
00034f76: call @free with return %00034f78

00034f78:
00034f7b: R0 := 0xFFFFFFFF
00034f7f: goto %000280d6

00034ffe:
00035001: R0 := 0
00035005: goto %000280d6

000280d6:
000280db: R29 := mem[R31, el]:u64
000280e0: R30 := mem[R31 + 8, el]:u64
000280e4: R31 := R31 + 0x60
000280e9: call R30 with noreturn

00045e60: sub inet_ntoa(inet_ntoa_result)
0004633b: inet_ntoa_result :: out u32 = low:32[R0]

00039ab2:
0003f9ac: R16 := 0x430000
0003f9b3: R17 := mem[R16 + 0x90, el]:u64
0003f9b9: R16 := R16 + 0x90
0003f9be: call R17 with noreturn

00045e61: sub inet_ntop(inet_ntop_result)
0004633c: inet_ntop_result :: out u32 = low:32[R0]

00024825:
000400b8: R16 := 0x430000
000400bf: R17 := mem[R16 + 0x320, el]:u64
000400c5: R16 := R16 + 0x320
000400ca: call R17 with noreturn

00045e62: sub is_http_header(is_http_header_result)
0004633d: is_http_header_result :: out u32 = low:32[R0]

0002a3e2:
0002a3e9: #247 := R31 - 0x30
0002a3ef: mem := mem with [#247, el]:u64 <- R29
0002a3f5: mem := mem with [#247 + 8, el]:u64 <- R30
0002a3f9: R31 := #247
0002a3ff: R29 := R31
0002a407: mem := mem with [R31 + 0x10, el]:u64 <- R19
0002a40f: mem := mem with [R31 + 0x28, el]:u64 <- R0
0002a414: R0 := 0x419000
0002a41a: R1 := R0 + 0xA08
0002a421: R0 := mem[R31 + 0x28, el]:u64
0002a426: R30 := 0x406B40
0002a429: call @strcspn with return %0002a42b

0002a42b:
0002a42f: R19 := R0
0002a436: R0 := mem[R31 + 0x28, el]:u64
0002a43b: R30 := 0x406B4C
0002a43d: call @strlen with return %0002a43f

0002a43f:
0002a443: #248 := ~R0
0002a448: #249 := R19 + ~R0
0002a44e: VF := extend:128[#249 + 1] <> extend:128[R19] + extend:128[#248] +
          1
0002a454: CF := pad:128[#249 + 1] <> pad:128[R19] + pad:128[#248] + 1
0002a458: ZF := #249 + 1 = 0
0002a45c: NF := 63:63[#249 + 1]
0002a468: when ZF goto %0002a461
0002a469: goto %0002a464

0002a464:
0002a465: R0 := 1
0002a46b: goto %0002a467

0002a461:
0002a462: R0 := 0
0002a46a: goto %0002a467

0002a467:
0002a471: R0 := pad:64[7:0[R0]]
0002a478: R19 := mem[R31 + 0x10, el]:u64
0002a47f: R29 := mem[R31, el]:u64
0002a484: R30 := mem[R31 + 8, el]:u64
0002a488: R31 := R31 + 0x30
0002a48d: call R30 with noreturn

00045e63: sub is_memory_all_zero(is_memory_all_zero_result)
0004633e: is_memory_all_zero_result :: out u32 = low:32[R0]

00016ea0:
00016ea4: R31 := R31 - 0x20
00016eac: mem := mem with [R31 + 8, el]:u64 <- R0
00016eb4: mem := mem with [R31, el]:u64 <- R1
00016ebb: mem := mem with [R31 + 0x18, el]:u64 <- 0
00016ec0: goto %00016ebe

00016ebe:
00016ec6: R1 := mem[R31 + 0x18, el]:u64
00016ecd: R0 := mem[R31, el]:u64
00016ed3: #28 := ~R0
00016ed8: #29 := R1 + ~R0
00016ede: VF := extend:128[#29 + 1] <> extend:128[R1] + extend:128[#28] + 1
00016ee4: CF := pad:128[#29 + 1] <> pad:128[R1] + pad:128[#28] + 1
00016ee8: ZF := #29 + 1 = 0
00016eec: NF := 63:63[#29 + 1]
00016ef2: when CF <> 1 goto %00016ef0
00045e64: goto %00021925

00021925:
00021928: R0 := 1
00045e65: goto %00016f43

00016ef0:
00016efa: R1 := mem[R31 + 8, el]:u64
00016f01: R0 := mem[R31 + 0x18, el]:u64
00016f08: R0 := R1 + R0
00016f0f: R0 := pad:64[mem[R0]]
00016f14: VF := 0
00016f17: CF := 1
00016f1b: ZF := 31:0[R0] = 0
00016f1f: NF := 31:31[R0]
00016f25: when ZF goto %00016f23
00045e66: goto %00016f3d

00016f23:
00016f2d: R0 := mem[R31 + 0x18, el]:u64
00016f33: R0 := R0 + 1
00016f3b: mem := mem with [R31 + 0x18, el]:u64 <- R0
00045e67: goto %00016ebe

00016f3d:
00016f40: R0 := 0
00016f45: goto %00016f43

00016f43:
00016f4a: R31 := R31 + 0x20
00016f4f: call R30 with noreturn

00045e68: sub listen(listen_fd, listen_n, listen_result)
0004633f: listen_fd :: in u32 = low:32[R0]
00046340: listen_n :: in u32 = low:32[R1]
00046341: listen_result :: out u32 = low:32[R0]

000248d2:
0003f912: R16 := 0x430000
0003f919: R17 := mem[R16 + 0x58, el]:u64
0003f91f: R16 := R16 + 0x58
0003f924: call R17 with noreturn

00045e69: sub listen_add(listen_add_result)
00046342: listen_add_result :: out u32 = low:32[R0]

000281da:
000281de: #214 := R31 - 0x60
000281e4: mem := mem with [#214, el]:u64 <- R29
000281ea: mem := mem with [#214 + 8, el]:u64 <- R30
000281ee: R31 := #214
000281f4: R29 := R31
000281fc: mem := mem with [R31 + 0x28, el]:u64 <- R0
00028204: mem := mem with [R31 + 0x20, el]:u64 <- R1
0002820c: mem := mem with [R31 + 0x18, el]:u64 <- R2
00028214: mem := mem with [R31 + 0x14, el]:u32 <- 31:0[R3]
00028219: R1 := 0x3A
00028220: R0 := mem[R31 + 0x18, el]:u64
00028225: R30 := 0x40891C
00028227: call @strrchr with return %00028229

00028229:
0002822f: mem := mem with [R31 + 0x50, el]:u64 <- R0
00028236: R0 := mem[R31 + 0x50, el]:u64
0002823b: VF := 0
0002823e: CF := 1
00028242: ZF := R0 = 0
00028246: NF := 63:63[R0]
0002824c: when ZF goto %0002824a
00045e6a: goto %00033b67

0002824a:
00028254: R0 := mem[R31 + 0x18, el]:u64
00028259: R30 := 0x408A08
0002825c: call @atoi with return %0002825e

0002825e:
00028264: mem := mem with [R31 + 0x4C, el]:u32 <- 31:0[R0]
0002826b: R0 := pad:64[mem[R31 + 0x4C, el]:u32]
00028270: VF := 0
00028273: CF := 1
00028277: ZF := 31:0[R0] = 0
0002827b: NF := 31:31[R0]
00028281: when ZF <> 1 goto %0002827f
00045e6b: goto %00033b3d

00033b3d:
00033b42: R2 := mem[R31 + 0x18, el]:u64
00033b47: R0 := 0x419000
00033b4d: R1 := R0 + 0xF70
00033b52: R0 := 3
00033b57: R30 := 0x408A2C
00033b59: call @syslog with return %00033b5b

00033b5b:
00033b5e: R0 := 1
00033b63: R30 := 0x408A34
00033b65: call @myexit with return %0002827f

0002827f:
00028288: R0 := R31 + 0x38
0002828f: R2 := pad:64[mem[R31 + 0x14, el]:u32]
00028296: R1 := pad:64[mem[R31 + 0x4C, el]:u32]
0002829b: R30 := 0x408A44
0002829d: call @so_resolv_wildcard with return %0002829f

00033b67:
00033b6c: R1 := mem[R31 + 0x50, el]:u64
00033b73: R0 := mem[R31 + 0x18, el]:u64
00033b7a: R0 := R1 + ~R0 + 1
00033b82: mem := mem with [R31 + 0x48, el]:u32 <- 31:0[R0]
00033b89: R0 := mem[R31 + 0x18, el]:u64
00033b90: R0 := pad:64[mem[R0]]
00033b96: #373 := 31:0[R0] - 0x5B
00033b9b: VF := extend:64[#373] <> extend:64[31:0[R0]] - 0x5B
00033ba0: CF := pad:64[#373] <> pad:64[31:0[R0]] + 0xFFFFFFA5
00033ba4: ZF := #373 = 0
00033ba8: NF := 31:31[#373]
00033bae: when ZF <> 1 goto %00033bac
00045e6c: goto %00033c89

00033c89:
00033c8e: R0 := extend:64[mem[R31 + 0x48, el]:u32]
00033c94: R0 := R0 - 1
00033c9b: R1 := mem[R31 + 0x18, el]:u64
00033ca2: R0 := R1 + R0
00033ca9: R0 := pad:64[mem[R0]]
00033caf: #374 := 31:0[R0] - 0x5D
00033cb4: VF := extend:64[#374] <> extend:64[31:0[R0]] - 0x5D
00033cb9: CF := pad:64[#374] <> pad:64[31:0[R0]] + 0xFFFFFFA3
00033cbd: ZF := #374 = 0
00033cc1: NF := 31:31[#374]
00033cc6: when ZF <> 1 goto %00033bac
00045e6d: goto %00033cca

00033bac:
00033bb6: R2 := pad:64[mem[R31 + 0x48, el]:u32]
00033bbb: R1 := 0
00033bc2: R0 := mem[R31 + 0x18, el]:u64
00033bc7: R30 := 0x408998
00033bc9: call @substr with return %00033bcb

00033bcb:
00033bd1: mem := mem with [R31 + 0x58, el]:u64 <- R0
00045e6e: goto %00033bd3

00033cca:
00033ccf: R0 := pad:64[mem[R31 + 0x48, el]:u32]
00033cd5: R0 := pad:64[31:0[R0] - 2]
00033cdb: R2 := pad:64[31:0[R0]]
00033ce0: R1 := 1
00033ce7: R0 := mem[R31 + 0x18, el]:u64
00033cec: R30 := 0x408980
00033cee: call @substr with return %00033cf0

00033cf0:
00033cf6: mem := mem with [R31 + 0x58, el]:u64 <- R0
00033cfa: goto %00033bd3

00033bd3:
00033bd8: R0 := extend:64[mem[R31 + 0x48, el]:u32]
00033bde: R0 := R0 + 1
00033be5: R1 := mem[R31 + 0x18, el]:u64
00033bec: R0 := R1 + R0
00033bf1: R30 := 0x4089B0
00033bf3: call @atoi with return %00033bf5

00033bf5:
00033bfb: mem := mem with [R31 + 0x4C, el]:u32 <- 31:0[R0]
00033c02: R0 := pad:64[mem[R31 + 0x4C, el]:u32]
00033c07: VF := 0
00033c0a: CF := 1
00033c0e: ZF := 31:0[R0] = 0
00033c12: NF := 31:31[R0]
00033c18: when ZF goto %00033c16
00045e6f: goto %00033c57

00033c57:
00033c5b: R0 := R31 + 0x38
00033c62: R2 := pad:64[mem[R31 + 0x4C, el]:u32]
00033c69: R1 := mem[R31 + 0x58, el]:u64
00033c6e: R30 := 0x4089D0
00033c70: call @so_resolv with return %00033c72

00033c72:
00033c75: VF := 0
00033c78: CF := 1
00033c7c: ZF := 31:0[R0] = 0
00033c80: NF := 31:31[R0]
00033c85: when ZF <> 1 goto %00033c45
00045e70: goto %00033c16

00033c16:
00033c20: R2 := mem[R31 + 0x18, el]:u64
00033c25: R0 := 0x419000
00033c2b: R1 := R0 + 0xF70
00033c30: R0 := 3
00033c35: R30 := 0x4089EC
00033c37: call @syslog with return %00033c39

00033c39:
00033c3c: R0 := 1
00033c41: R30 := 0x4089F4
00033c43: call @myexit with return %00033c45

00033c45:
00033c4a: R0 := mem[R31 + 0x58, el]:u64
00033c4f: R30 := 0x4089FC
00033c51: call @free with return %00033c53

00033c53:
00033c55: goto %0002829f

0002829f:
000282a4: R0 := mem[R31 + 0x38, el]:u64
000282a9: R2 := 0
000282af: R1 := R0
000282b6: R0 := mem[R31 + 0x20, el]:u64
000282bb: R30 := 0x408A58
000282bd: call @so_listen with return %000282bf

000282bf:
000282c5: mem := mem with [R31 + 0x44, el]:u32 <- 31:0[R0]
000282cc: R0 := pad:64[mem[R31 + 0x44, el]:u32]
000282d1: VF := 0
000282d4: CF := 1
000282d8: ZF := 31:0[R0] = 0
000282dc: NF := 31:31[R0]
000282e4: when ~(NF = VF & ~ZF) goto %000282e2
00045e71: goto %00033b18

00033b18:
00033b1d: R3 := mem[R31 + 0x18, el]:u64
00033b24: R2 := mem[R31 + 0x28, el]:u64
00033b29: R0 := 0x419000
00033b2f: R1 := R0 + 0xF98
00033b34: R0 := 6
00033b39: R30 := 0x408A80
00033b3b: call @syslog with return %000282e2

000282e2:
000282ec: R0 := mem[R31 + 0x38, el]:u64
000282f1: R30 := 0x408A88
000282f3: call @freeaddrinfo with return %000282f5

000282f5:
000282fc: R29 := mem[R31, el]:u64
00028301: R30 := mem[R31 + 8, el]:u64
00028305: R31 := R31 + 0x60
0002830a: call R30 with noreturn

00045e72: sub lowercase(lowercase_result)
00046343: lowercase_result :: out u32 = low:32[R0]

000163bb:
000163bf: #3 := R31 - 0x30
000163c5: mem := mem with [#3, el]:u64 <- R29
000163cb: mem := mem with [#3 + 8, el]:u64 <- R30
000163cf: R31 := #3
000163d5: R29 := R31
000163dd: mem := mem with [R31 + 0x18, el]:u64 <- R0
000163e4: R0 := mem[R31 + 0x18, el]:u64
000163e9: VF := 0
000163ec: CF := 1
000163f0: ZF := R0 = 0
000163f4: NF := 63:63[R0]
000163fa: when ZF <> 1 goto %000163f8
00045e73: goto %00021a9b

00021a9b:
00021a9e: R0 := 0x41D000
00021aa4: R3 := R0 + 0x50
00021aa9: R2 := 0x318
00021aae: R0 := 0x41C000
00021ab4: R1 := R0 + 0xAF0
00021ab9: R0 := 0x41C000
00021abf: R0 := R0 + 0xCB8
00021ac4: R30 := 0x41232C
00021ac6: call @__assert_fail with return %000163f8

000163f8:
00016402: mem := mem with [R31 + 0x28, el]:u64 <- 0
00016407: goto %00016405

00016405:
0001640d: R0 := mem[R31 + 0x18, el]:u64
00016412: R30 := 0x412374
00016415: call @strlen with return %00016417

00016417:
0001641b: R1 := R0
00016422: R0 := mem[R31 + 0x28, el]:u64
00016428: #4 := ~R1
0001642d: #5 := R0 + ~R1
00016433: VF := extend:128[#5 + 1] <> extend:128[R0] + extend:128[#4] + 1
00016439: CF := pad:128[#5 + 1] <> pad:128[R0] + pad:128[#4] + 1
0001643d: ZF := #5 + 1 = 0
00016441: NF := 63:63[#5 + 1]
00016447: when CF <> 1 goto %00016445
00045e74: goto %000164ac

000164ac:
000164b1: R0 := mem[R31 + 0x18, el]:u64
000164b8: R29 := mem[R31, el]:u64
000164bd: R30 := mem[R31 + 8, el]:u64
000164c1: R31 := R31 + 0x30
000164c6: call R30 with noreturn

00016445:
0001644f: R1 := mem[R31 + 0x18, el]:u64
00016456: R0 := mem[R31 + 0x28, el]:u64
0001645d: R0 := R1 + R0
00016464: R0 := pad:64[mem[R0]]
00016469: R30 := 0x412348
0001646c: call @tolower with return %0001646e

0001646e:
00016472: R2 := pad:64[31:0[R0]]
00016479: R1 := mem[R31 + 0x18, el]:u64
00016480: R0 := mem[R31 + 0x28, el]:u64
00016487: R0 := R1 + R0
0001648d: R1 := pad:64[7:0[R2]]
00016495: mem := mem with [R0] <- 7:0[R1]
0001649c: R0 := mem[R31 + 0x28, el]:u64
000164a2: R0 := R0 + 1
000164aa: mem := mem with [R31 + 0x28, el]:u64 <- R0
00045e75: goto %00016405

00045e76: sub magic_auth_detect(magic_auth_detect_result)
00046344: magic_auth_detect_result :: out u32 = low:32[R0]

0002bd4f:
0002bd53: #276 := R31 - 0x130
0002bd59: mem := mem with [#276, el]:u64 <- R29
0002bd5f: mem := mem with [#276 + 8, el]:u64 <- R30
0002bd63: R31 := #276
0002bd69: R29 := R31
0002bd71: mem := mem with [R31 + 0x10, el]:u64 <- R19
0002bd79: mem := mem with [R31 + 0x28, el]:u64 <- R0
0002bd80: mem := mem with [R31 + 0x128, el]:u32 <- 0
0002bd85: R0 := 0xFFFFFFFF
0002bd8d: mem := mem with [R31 + 0x124, el]:u32 <- 31:0[R0]
0002bd94: mem := mem with [R31 + 0x118, el]:u64 <- 0
0002bd99: R0 := 0x419000
0002bd9f: R1 := R0 + 0x920
0002bda5: R0 := R31 + 0x60
0002bdac: V0 := mem[R1, el]:u128
0002bdb1: V1 := mem[R1 + 0x10, el]:u128
0002bdb9: mem := mem with [R0, el]:u128 <- V0
0002bdbf: mem := mem with [R0 + 0x10, el]:u128 <- V1
0002bdc5: #277 := R1 + 0x20
0002bdca: V0 := mem[#277, el]:u128
0002bdcf: V1 := mem[#277 + 0x10, el]:u128
0002bdd5: #278 := R0 + 0x20
0002bddb: mem := mem with [#278, el]:u128 <- V0
0002bde1: mem := mem with [#278 + 0x10, el]:u128 <- V1
0002bde7: #279 := R1 + 0x40
0002bdec: V0 := mem[#279, el]:u128
0002bdf1: V1 := mem[#279 + 0x10, el]:u128
0002bdf7: #280 := R0 + 0x40
0002bdfd: mem := mem with [#280, el]:u128 <- V0
0002be03: mem := mem with [#280 + 0x10, el]:u128 <- V1
0002be0a: R1 := pad:64[mem[R1 + 0x60, el]:u32]
0002be12: mem := mem with [R0 + 0x60, el]:u32 <- 31:0[R1]
0002be17: R30 := 0x406434
0002be19: call @new_auth with return %0002be1b

0002be1b:
0002be21: mem := mem with [R31 + 0x110, el]:u64 <- R0
0002be26: R0 := 0x430000
0002be2c: R0 := R0 + 0x398
0002be33: R0 := mem[R0, el]:u64
0002be38: R2 := 1
0002be3e: R1 := R0
0002be45: R0 := mem[R31 + 0x110, el]:u64
0002be4a: R30 := 0x406454
0002be4c: call @copy_auth with return %0002be4e

0002be4e:
0002be53: R0 := mem[R31 + 0x110, el]:u64
0002be59: R0 := R0 + 0xC8
0002be5e: R1 := 0x32
0002be63: R30 := 0x406464
0002be65: call @is_memory_all_zero with return %0002be67

0002be67:
0002be6a: VF := 0
0002be6d: CF := 1
0002be71: ZF := 31:0[R0] = 0
0002be75: NF := 31:31[R0]
0002be7b: when ZF <> 1 goto %0002be79
00045e77: goto %0002ca06

0002ca06:
0002ca0b: R0 := mem[R31 + 0x110, el]:u64
0002ca11: R0 := R0 + 0x96
0002ca16: R1 := 0x32
0002ca1b: R30 := 0x40647C
0002ca1d: call @is_memory_all_zero with return %0002ca1f

0002ca1f:
0002ca22: VF := 0
0002ca25: CF := 1
0002ca29: ZF := 31:0[R0] = 0
0002ca2d: NF := 31:31[R0]
0002ca32: when ZF <> 1 goto %0002be79
00045e78: goto %0002ca36

0002ca36:
0002ca3b: R0 := mem[R31 + 0x110, el]:u64
0002ca41: R0 := R0 + 0xFA
0002ca46: R1 := 0x32
0002ca4b: R30 := 0x406494
0002ca4d: call @is_memory_all_zero with return %0002ca4f

0002ca4f:
0002ca52: VF := 0
0002ca55: CF := 1
0002ca59: ZF := 31:0[R0] = 0
0002ca5d: NF := 31:31[R0]
0002ca62: when ZF goto %0002be9c
00045e79: goto %0002be79

0002be79:
0002be81: R0 := 0x419000
0002be87: R0 := R0 + 0x5C8
0002be8c: R30 := 0x4064A8
0002be8e: call @puts with return %0002be90

0002be90:
0002be93: R0 := 1
0002be98: R30 := 0x4064B0
0002be9a: call @exit with return %0002be9c

0002be9c:
0002bea1: R0 := mem[R31 + 0x28, el]:u64
0002bea6: VF := 0
0002bea9: CF := 1
0002bead: ZF := R0 = 0
0002beb1: NF := 63:63[R0]
0002beb7: when ZF <> 1 goto %0002beb5
00045e7a: goto %0002c9d9

0002c9d9:
0002c9dc: R0 := 0x419000
0002c9e2: R3 := R0 + 0x9F0
0002c9e7: R2 := 0x295
0002c9ec: R0 := 0x419000
0002c9f2: R1 := R0 + 0x88
0002c9f7: R0 := 0x419000
0002c9fd: R0 := R0 + 0x618
0002ca02: R30 := 0x4064DC
0002ca04: call @__assert_fail with return %0002beb5

0002beb5:
0002bebd: R0 := 0x419000
0002bec3: R1 := R0 + 0x628
0002beca: R0 := mem[R31 + 0x28, el]:u64
0002becf: R30 := 0x4064EC
0002bed1: call @strstr with return %0002bed3

0002bed3:
0002bed9: mem := mem with [R31 + 0x108, el]:u64 <- R0
0002bee0: R0 := mem[R31 + 0x108, el]:u64
0002bee5: VF := 0
0002bee8: CF := 1
0002beec: ZF := R0 = 0
0002bef0: NF := 63:63[R0]
0002bef6: when ZF goto %0002bef4
00045e7b: goto %0002c93e

0002bef4:
0002befc: R0 := 0x430000
0002bf02: R0 := R0 + 0x350
0002bf09: R3 := mem[R0, el]:u64
0002bf10: R2 := mem[R31 + 0x28, el]:u64
0002bf15: R0 := 0x419000
0002bf1b: R1 := R0 + 0x630
0002bf21: R0 := R3
0002bf26: R30 := 0x406578
0002bf29: call @fprintf with return %0002bf2b

0002bf2b:
0002bf30: R0 := mem[R31 + 0x110, el]:u64
0002bf35: R30 := 0x406580
0002bf37: call @free with return %0002bf39

0002bf39:
0002bf3c: goto %0002bf3a

0002c93e:
0002c943: R0 := mem[R31 + 0x108, el]:u64
0002c949: R0 := R0 + 3
0002c94e: R1 := 0x2F
0002c953: R30 := 0x40650C
0002c955: call @strchr with return %0002c957

0002c957:
0002c95d: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002c964: R0 := mem[R31 + 0x108, el]:u64
0002c96a: R3 := R0 + 3
0002c971: R0 := mem[R31 + 0x100, el]:u64
0002c976: VF := 0
0002c979: CF := 1
0002c97d: ZF := R0 = 0
0002c981: NF := 63:63[R0]
0002c987: when ZF goto %0002c985
00045e7c: goto %0002c9ba

0002c985:
0002c98d: R0 := 0
00045e7d: goto %0002c98f

0002c9ba:
0002c9bf: R1 := mem[R31 + 0x100, el]:u64
0002c9c6: R0 := mem[R31 + 0x108, el]:u64
0002c9cd: R0 := R1 + ~R0 + 1
0002c9d3: R0 := pad:64[31:0[R0] - 3]
0002c9d7: goto %0002c98f

0002c98f:
0002c993: R2 := pad:64[31:0[R0]]
0002c998: R1 := 0
0002c99e: R0 := R3
0002c9a3: R30 := 0x40654C
0002c9a5: call @substr with return %0002c9a7

0002c9a7:
0002c9ad: mem := mem with [R31 + 0x118, el]:u64 <- R0
0002c9b4: mem := mem with [R31 + 0x12C, el]:u32 <- 0
0002c9b8: goto %0002c28c

0002c28c:
0002c291: R0 := pad:64[mem[R31 + 0x12C, el]:u32]
0002c297: #281 := 31:0[R0] - 4
0002c29c: VF := extend:64[#281] <> extend:64[31:0[R0]] - 4
0002c2a1: CF := pad:64[#281] <> pad:64[31:0[R0]] + 0xFFFFFFFC
0002c2a5: ZF := #281 = 0
0002c2a9: NF := 31:31[#281]
0002c2b0: when ~(NF = VF & ~ZF) goto %0002bf59
00045e7e: goto %0002c2b4

0002bf59:
0002bf5c: R30 := 0x406588
0002bf5e: call @new_rr_data with return %0002bf60

0002bf60:
0002bf66: mem := mem with [R31 + 0xC8, el]:u64 <- R0
0002bf6b: R30 := 0x406590
0002bf6d: call @new_rr_data with return %0002bf6f

0002bf6f:
0002bf75: mem := mem with [R31 + 0xD0, el]:u64 <- R0
0002bf7c: R0 := mem[R31 + 0xD0, el]:u64
0002bf81: R1 := 1
0002bf89: mem := mem with [R0, el]:u32 <- 31:0[R1]
0002bf90: R19 := mem[R31 + 0xD0, el]:u64
0002bf95: R0 := 0x419000
0002bf9b: R0 := R0 + 0x648
0002bfa0: R30 := 0x4065B0
0002bfa2: call @strdup with return %0002bfa4

0002bfa4:
0002bfaa: mem := mem with [R19 + 0x28, el]:u64 <- R0
0002bfb1: R19 := mem[R31 + 0xD0, el]:u64
0002bfb8: R0 := mem[R31 + 0x28, el]:u64
0002bfbd: R30 := 0x4065C0
0002bfbf: call @strdup with return %0002bfc1

0002bfc1:
0002bfc7: mem := mem with [R19 + 0x30, el]:u64 <- R0
0002bfce: R19 := mem[R31 + 0xD0, el]:u64
0002bfd3: R0 := 0x419000
0002bfd9: R0 := R0 + 0x488
0002bfde: R30 := 0x4065D4
0002bfe0: call @strdup with return %0002bfe2

0002bfe2:
0002bfe8: mem := mem with [R19 + 0x48, el]:u64 <- R0
0002bfef: R0 := mem[R31 + 0xD0, el]:u64
0002bff6: R5 := mem[R0 + 8, el]:u64
0002bffd: R19 := mem[R31 + 0xD0, el]:u64
0002c002: R4 := 1
0002c007: R3 := 1
0002c00c: R0 := 0x419000
0002c012: R2 := R0 + 0x1D8
0002c017: R0 := 0x419000
0002c01d: R1 := R0 + 0x1E8
0002c023: R0 := R5
0002c028: R30 := 0x406604
0002c02a: call @hlist_add with return %0002c02c

0002c02c:
0002c032: mem := mem with [R19 + 8, el]:u64 <- R0
0002c039: R0 := mem[R31 + 0x118, el]:u64
0002c03e: VF := 0
0002c041: CF := 1
0002c045: ZF := R0 = 0
0002c049: NF := 63:63[R0]
0002c04f: when ZF goto %0002c04d
00045e7f: goto %0002c8f8

0002c8f8:
0002c8fd: R0 := mem[R31 + 0xD0, el]:u64
0002c904: R5 := mem[R0 + 8, el]:u64
0002c90b: R19 := mem[R31 + 0xD0, el]:u64
0002c910: R4 := 1
0002c915: R3 := 1
0002c91c: R2 := mem[R31 + 0x118, el]:u64
0002c921: R0 := 0x419000
0002c927: R1 := R0 + 0x650
0002c92d: R0 := R5
0002c932: R30 := 0x40663C
0002c934: call @hlist_add with return %0002c936

0002c936:
0002c93c: mem := mem with [R19 + 8, el]:u64 <- R0
00045e80: goto %0002c04d

0002c04d:
0002c057: R1 := extend:64[mem[R31 + 0x12C, el]:u32]
0002c05d: R0 := R1
0002c063: R0 := 61:0[R0].0
0002c06a: R0 := R0 + R1
0002c070: R0 := 61:0[R0].0
0002c076: R1 := R31 + 0x60
0002c07e: R1 := pad:64[mem[R1 + R0, el]:u32]
0002c085: R0 := mem[R31 + 0x110, el]:u64
0002c08d: mem := mem with [R0 + 0x130, el]:u32 <- 31:0[R1]
0002c094: R1 := extend:64[mem[R31 + 0x12C, el]:u32]
0002c09a: R0 := R1
0002c0a0: R0 := 61:0[R0].0
0002c0a7: R0 := R0 + R1
0002c0ad: R0 := 61:0[R0].0
0002c0b3: R1 := R31 + 0x64
0002c0bb: R1 := pad:64[mem[R1 + R0, el]:u32]
0002c0c2: R0 := mem[R31 + 0x110, el]:u64
0002c0ca: mem := mem with [R0 + 0x134, el]:u32 <- 31:0[R1]
0002c0d1: R1 := extend:64[mem[R31 + 0x12C, el]:u32]
0002c0d7: R0 := R1
0002c0dd: R0 := 61:0[R0].0
0002c0e4: R0 := R0 + R1
0002c0ea: R0 := 61:0[R0].0
0002c0f0: R1 := R31 + 0x68
0002c0f8: R1 := pad:64[mem[R1 + R0, el]:u32]
0002c0ff: R0 := mem[R31 + 0x110, el]:u64
0002c107: mem := mem with [R0 + 0x12C, el]:u32 <- 31:0[R1]
0002c10e: R1 := extend:64[mem[R31 + 0x12C, el]:u32]
0002c114: R0 := R1
0002c11a: R0 := 61:0[R0].0
0002c121: R0 := R0 + R1
0002c127: R0 := 61:0[R0].0
0002c12d: R1 := R31 + 0x6C
0002c135: R0 := pad:64[mem[R1 + R0, el]:u32]
0002c13b: R1 := pad:64[31:0[R0]]
0002c142: R0 := mem[R31 + 0x110, el]:u64
0002c14a: mem := mem with [R0 + 0x138, el]:u32 <- 31:0[R1]
0002c151: R0 := pad:64[mem[R31 + 0x12C, el]:u32]
0002c157: R0 := pad:64[31:0[R0] + 1]
0002c15c: R2 := 5
0002c162: R1 := pad:64[31:0[R0]]
0002c167: R0 := 0x419000
0002c16d: R0 := R0 + 0x658
0002c172: R30 := 0x4066F0
0002c174: call @printf with return %0002c176

0002c176:
0002c17b: R2 := mem[R31 + 0x118, el]:u64
0002c182: R1 := mem[R31 + 0x28, el]:u64
0002c187: R0 := 0
0002c18c: R30 := 0x406700
0002c18e: call @proxy_connect with return %0002c190

0002c190:
0002c196: mem := mem with [R31 + 0xDC, el]:u32 <- 31:0[R0]
0002c19d: R0 := pad:64[mem[R31 + 0xDC, el]:u32]
0002c1a2: VF := 0
0002c1a5: CF := 1
0002c1a9: ZF := 31:0[R0] = 0
0002c1ad: NF := 31:31[R0]
0002c1b4: when NF = VF goto %0002c1b2
00045e81: goto %0002c89c

0002c1b2:
0002c1bc: R1 := mem[R31 + 0xD0, el]:u64
0002c1c3: R2 := mem[R31 + 0xC8, el]:u64
0002c1c9: R0 := R31 + 0xDC
0002c1d0: R3 := mem[R31 + 0x110, el]:u64
0002c1d5: R30 := 0x406758
0002c1d7: call @proxy_authenticate with return %0002c1d9

0002c1d9:
0002c1df: mem := mem with [R31 + 0xFC, el]:u32 <- 31:0[R0]
0002c1e6: R0 := pad:64[mem[R31 + 0xFC, el]:u32]
0002c1eb: VF := 0
0002c1ee: CF := 1
0002c1f2: ZF := 31:0[R0] = 0
0002c1f6: NF := 31:31[R0]
0002c1fc: when ZF goto %0002c1fa
00045e82: goto %0002c808

0002c808:
0002c80d: R0 := mem[R31 + 0xC8, el]:u64
0002c814: R0 := pad:64[mem[R0 + 0x10, el]:u32]
0002c81a: #284 := 31:0[R0] - 0x197
0002c81f: VF := extend:64[#284] <> extend:64[31:0[R0]] - 0x197
0002c824: CF := pad:64[#284] <> pad:64[31:0[R0]] + 0xFFFFFE69
0002c828: ZF := #284 = 0
0002c82c: NF := 31:31[#284]
0002c831: when ZF goto %0002c1fa
00045e83: goto %0002c835

0002c1fa:
0002c204: R0 := mem[R31 + 0xC8, el]:u64
0002c209: R30 := 0x4067C0
0002c20b: call @reset_rr_data with return %0002c20d

0002c20d:
0002c212: R0 := pad:64[mem[R31 + 0xDC, el]:u32]
0002c219: R1 := mem[R31 + 0xD0, el]:u64
0002c21e: R30 := 0x4067CC
0002c220: call @headers_send with return %0002c222

0002c222:
0002c225: VF := 0
0002c228: CF := 1
0002c22c: ZF := 31:0[R0] = 0
0002c230: NF := 31:31[R0]
0002c236: when ZF goto %0002c234
00045e84: goto %0002c7dc

0002c7dc:
0002c7e1: R0 := pad:64[mem[R31 + 0xDC, el]:u32]
0002c7e8: R1 := mem[R31 + 0xC8, el]:u64
0002c7ed: R30 := 0x4067E0
0002c7ef: call @headers_recv with return %0002c7f1

0002c7f1:
0002c7f4: VF := 0
0002c7f7: CF := 1
0002c7fb: ZF := 31:0[R0] = 0
0002c7ff: NF := 31:31[R0]
0002c804: when ZF <> 1 goto %0002c65d
00045e85: goto %0002c234

0002c65d:
0002c662: R0 := mem[R31 + 0xC8, el]:u64
0002c669: R0 := pad:64[mem[R0 + 0x10, el]:u32]
0002c66f: #283 := 31:0[R0] - 0x197
0002c674: VF := extend:64[#283] <> extend:64[31:0[R0]] - 0x197
0002c679: CF := pad:64[#283] <> pad:64[31:0[R0]] + 0xFFFFFE69
0002c67d: ZF := #283 = 0
0002c681: NF := 31:31[#283]
0002c687: when ZF <> 1 goto %0002c685
00045e86: goto %0002c70a

0002c685:
0002c68f: R0 := mem[R31 + 0xC8, el]:u64
0002c696: R0 := pad:64[mem[R0 + 0x10, el]:u32]
0002c69c: R1 := pad:64[31:0[R0]]
0002c6a1: R0 := 0x419000
0002c6a7: R0 := R0 + 0x7A8
0002c6ac: R30 := 0x4068A0
0002c6ae: call @printf with return %0002c6b0

0002c6b0:
0002c6b5: R0 := pad:64[mem[R31 + 0x124, el]:u32]
0002c6ba: VF := 0
0002c6bd: CF := 1
0002c6c1: ZF := 31:0[R0] = 0
0002c6c5: NF := 31:31[R0]
0002c6cb: when NF = VF goto %0002c24c
00045e87: goto %0002c6cf

0002c6cf:
0002c6d4: R0 := pad:64[mem[R31 + 0x12C, el]:u32]
0002c6dc: mem := mem with [R31 + 0x124, el]:u32 <- 31:0[R0]
0002c6e2: R0 := R31 + 0xC8
0002c6e7: R30 := 0x4068BC
0002c6e9: call @free_rr_data with return %0002c6eb

0002c6eb:
0002c6ef: R0 := R31 + 0xD0
0002c6f4: R30 := 0x4068C4
0002c6f6: call @free_rr_data with return %0002c6f8

0002c6f8:
0002c6fd: R0 := pad:64[mem[R31 + 0xDC, el]:u32]
0002c702: R30 := 0x4068CC
0002c704: call @close with return %0002c706

0002c706:
0002c708: goto %0002c2b4

0002c70a:
0002c70f: R0 := mem[R31 + 0xC8, el]:u64
0002c716: R3 := mem[R0 + 8, el]:u64
0002c71b: R0 := 0x419000
0002c721: R2 := R0 + 0x700
0002c726: R0 := 0x419000
0002c72c: R1 := R0 + 0x330
0002c732: R0 := R3
0002c737: R30 := 0x406828
0002c739: call @hlist_subcmp_all with return %0002c73b

0002c73b:
0002c73e: VF := 0
0002c741: CF := 1
0002c745: ZF := 31:0[R0] = 0
0002c749: NF := 31:31[R0]
0002c74f: when ZF goto %0002c74d
00045e88: goto %0002c7c6

0002c74d:
0002c757: R0 := mem[R31 + 0xC8, el]:u64
0002c75e: R3 := mem[R0 + 8, el]:u64
0002c763: R0 := 0x419000
0002c769: R2 := R0 + 0x730
0002c76e: R0 := 0x419000
0002c774: R1 := R0 + 0x330
0002c77a: R0 := R3
0002c77f: R30 := 0x406860
0002c781: call @hlist_subcmp_all with return %0002c783

0002c783:
0002c786: VF := 0
0002c789: CF := 1
0002c78d: ZF := 31:0[R0] = 0
0002c791: NF := 31:31[R0]
0002c797: when ZF goto %0002c795
00045e89: goto %0002c7b0

0002c795:
0002c79d: R0 := 0x419000
0002c7a3: R0 := R0 + 0x778
0002c7a8: R30 := 0x406884
0002c7aa: call @puts with return %0002c7ac

0002c7ac:
0002c7ae: goto %0002c2b4

0002c2b4:
0002c2b9: R0 := pad:64[mem[R31 + 0x124, el]:u32]
0002c2be: VF := 0
0002c2c1: CF := 1
0002c2c5: ZF := 31:0[R0] = 0
0002c2c9: NF := 31:31[R0]
0002c2d0: when NF <> VF goto %0002c2ce
00045e8a: goto %0002c353

0002c2ce:
0002c2d8: R0 := pad:64[mem[R31 + 0x128, el]:u32]
0002c2de: #282 := 31:0[R0] - 5
0002c2e3: VF := extend:64[#282] <> extend:64[31:0[R0]] - 5
0002c2e8: CF := pad:64[#282] <> pad:64[31:0[R0]] + 0xFFFFFFFB
0002c2ec: ZF := #282 = 0
0002c2f0: NF := 31:31[#282]
0002c2f6: when ZF <> 1 goto %0002c2f4
00045e8b: goto %0002c33d

0002c2f4:
0002c2fc: R0 := 0x419000
0002c302: R0 := R0 + 0x8E0
0002c307: R30 := 0x406AF8
0002c309: call @puts with return %0002c30b

0002c33d:
0002c340: R0 := 0x419000
0002c346: R0 := R0 + 0x8A8
0002c34b: R30 := 0x406AE8
0002c34d: call @puts with return %0002c34f

0002c34f:
0002c351: goto %0002c30b

0002c353:
0002c356: R0 := 0x419000
0002c35c: R1 := R0 + 0x9A8
0002c362: R0 := R31 + 0x38
0002c369: V0 := mem[R1, el]:u128
0002c36e: V1 := mem[R1 + 0x10, el]:u128
0002c376: mem := mem with [R0, el]:u128 <- V0
0002c37c: mem := mem with [R0 + 0x10, el]:u128 <- V1
0002c383: R1 := mem[R1 + 0x20, el]:u64
0002c38b: mem := mem with [R0 + 0x20, el]:u64 <- R1
0002c392: R1 := pad:64[mem[R31 + 0x124, el]:u32]
0002c397: R0 := 0x419000
0002c39d: R0 := R0 + 0x7C0
0002c3a2: R30 := 0x406938
0002c3a4: call @printf with return %0002c3a6

0002c3a6:
0002c3ab: R1 := extend:64[mem[R31 + 0x124, el]:u32]
0002c3b1: R0 := R1
0002c3b7: R0 := 61:0[R0].0
0002c3be: R0 := R0 + R1
0002c3c4: R0 := 61:0[R0].0
0002c3ca: R1 := R31 + 0x70
0002c3d2: R0 := pad:64[mem[R1 + R0, el]:u32]
0002c3d8: R0 := extend:64[31:0[R0]]
0002c3de: R0 := 60:0[R0].0
0002c3e4: R1 := R31 + 0x38
0002c3ec: R0 := mem[R1 + R0, el]:u64
0002c3f2: R1 := R0
0002c3f7: R0 := 0x419000
0002c3fd: R0 := R0 + 0x7F8
0002c402: R30 := 0x406974
0002c404: call @printf with return %0002c406

0002c406:
0002c40b: R1 := extend:64[mem[R31 + 0x124, el]:u32]
0002c411: R0 := R1
0002c417: R0 := 61:0[R0].0
0002c41e: R0 := R0 + R1
0002c424: R0 := 61:0[R0].0
0002c42a: R1 := R31 + 0x6C
0002c432: R0 := pad:64[mem[R1 + R0, el]:u32]
0002c437: VF := 0
0002c43a: CF := 1
0002c43e: ZF := 31:0[R0] = 0
0002c442: NF := 31:31[R0]
0002c448: when ZF goto %0002c446
00045e8c: goto %0002c617

0002c617:
0002c61c: R1 := extend:64[mem[R31 + 0x124, el]:u32]
0002c622: R0 := R1
0002c628: R0 := 61:0[R0].0
0002c62f: R0 := R0 + R1
0002c635: R0 := 61:0[R0].0
0002c63b: R1 := R31 + 0x6C
0002c643: R0 := pad:64[mem[R1 + R0, el]:u32]
0002c649: R1 := pad:64[31:0[R0]]
0002c64e: R0 := 0x419000
0002c654: R0 := R0 + 0x810
0002c659: R30 := 0x4069C4
0002c65b: call @printf with return %0002c446

0002c446:
0002c450: R1 := extend:64[mem[R31 + 0x124, el]:u32]
0002c456: R0 := R1
0002c45c: R0 := 61:0[R0].0
0002c463: R0 := R0 + R1
0002c469: R0 := 61:0[R0].0
0002c46f: R1 := R31 + 0x60
0002c477: R0 := pad:64[mem[R1 + R0, el]:u32]
0002c47c: VF := 0
0002c47f: CF := 1
0002c483: ZF := 31:0[R0] = 0
0002c487: NF := 31:31[R0]
0002c48d: when ZF goto %0002c48b
00045e8d: goto %0002c5ca

0002c5ca:
0002c5cf: R0 := mem[R31 + 0x110, el]:u64
0002c5d5: R0 := R0 + 0xC8
0002c5da: R2 := 8
0002c5df: R1 := 0x10
0002c5e4: R30 := 0x4069FC
0002c5e6: call @printmem with return %0002c5e8

0002c5e8:
0002c5ee: mem := mem with [R31 + 0xF0, el]:u64 <- R0
0002c5f5: R1 := mem[R31 + 0xF0, el]:u64
0002c5fa: R0 := 0x419000
0002c600: R0 := R0 + 0x828
0002c605: R30 := 0x406A10
0002c607: call @printf with return %0002c609

0002c609:
0002c60e: R0 := mem[R31 + 0xF0, el]:u64
0002c613: R30 := 0x406A18
0002c615: call @free with return %0002c48b

0002c48b:
0002c495: R1 := extend:64[mem[R31 + 0x124, el]:u32]
0002c49b: R0 := R1
0002c4a1: R0 := 61:0[R0].0
0002c4a8: R0 := R0 + R1
0002c4ae: R0 := 61:0[R0].0
0002c4b4: R1 := R31 + 0x64
0002c4bc: R0 := pad:64[mem[R1 + R0, el]:u32]
0002c4c1: VF := 0
0002c4c4: CF := 1
0002c4c8: ZF := 31:0[R0] = 0
0002c4cc: NF := 31:31[R0]
0002c4d2: when ZF goto %0002c4d0
00045e8e: goto %0002c57d

0002c57d:
0002c582: R0 := mem[R31 + 0x110, el]:u64
0002c588: R0 := R0 + 0x96
0002c58d: R2 := 8
0002c592: R1 := 0x10
0002c597: R30 := 0x406A50
0002c599: call @printmem with return %0002c59b

0002c59b:
0002c5a1: mem := mem with [R31 + 0xE8, el]:u64 <- R0
0002c5a8: R1 := mem[R31 + 0xE8, el]:u64
0002c5ad: R0 := 0x419000
0002c5b3: R0 := R0 + 0x840
0002c5b8: R30 := 0x406A64
0002c5ba: call @printf with return %0002c5bc

0002c5bc:
0002c5c1: R0 := mem[R31 + 0xE8, el]:u64
0002c5c6: R30 := 0x406A6C
0002c5c8: call @free with return %0002c4d0

0002c4d0:
0002c4da: R1 := extend:64[mem[R31 + 0x124, el]:u32]
0002c4e0: R0 := R1
0002c4e6: R0 := 61:0[R0].0
0002c4ed: R0 := R0 + R1
0002c4f3: R0 := 61:0[R0].0
0002c4f9: R1 := R31 + 0x68
0002c501: R0 := pad:64[mem[R1 + R0, el]:u32]
0002c506: VF := 0
0002c509: CF := 1
0002c50d: ZF := 31:0[R0] = 0
0002c511: NF := 31:31[R0]
0002c517: when ZF goto %0002c515
00045e8f: goto %0002c530

0002c530:
0002c535: R0 := mem[R31 + 0x110, el]:u64
0002c53b: R0 := R0 + 0xFA
0002c540: R2 := 8
0002c545: R1 := 0x10
0002c54a: R30 := 0x406AA4
0002c54c: call @printmem with return %0002c54e

0002c54e:
0002c554: mem := mem with [R31 + 0xE0, el]:u64 <- R0
0002c55b: R1 := mem[R31 + 0xE0, el]:u64
0002c560: R0 := 0x419000
0002c566: R0 := R0 + 0x858
0002c56b: R30 := 0x406AB8
0002c56d: call @printf with return %0002c56f

0002c56f:
0002c574: R0 := mem[R31 + 0xE0, el]:u64
0002c579: R30 := 0x406AC0
0002c57b: call @free with return %0002c515

0002c515:
0002c51d: R0 := 0x419000
0002c523: R0 := R0 + 0x870
0002c528: R30 := 0x406ACC
0002c52a: call @puts with return %0002c52c

0002c52c:
0002c52e: goto %0002c30b

0002c30b:
0002c310: R0 := mem[R31 + 0x118, el]:u64
0002c315: VF := 0
0002c318: CF := 1
0002c31c: ZF := R0 = 0
0002c320: NF := 63:63[R0]
0002c325: when ZF goto %0002bf3a
00045e90: goto %0002c329

0002c329:
0002c32e: R0 := mem[R31 + 0x118, el]:u64
0002c333: R30 := 0x406B0C
0002c335: call @free with return %0002c337

0002c337:
0002c339: goto %0002bf3a

0002c7b0:
0002c7b3: R0 := 0x419000
0002c7b9: R0 := R0 + 0x738
0002c7be: R30 := 0x406874
0002c7c0: call @puts with return %0002c7c2

0002c7c2:
0002c7c4: goto %0002c24c

0002c7c6:
0002c7c9: R0 := 0x419000
0002c7cf: R0 := R0 + 0x708
0002c7d4: R30 := 0x40683C
0002c7d6: call @puts with return %0002c7d8

0002c7d8:
0002c7da: goto %0002c24c

0002c234:
0002c23c: R0 := 0x419000
0002c242: R0 := R0 + 0x6D0
0002c247: R30 := 0x4067F4
0002c249: call @puts with return %0002c24b

0002c24b:
0002c24e: goto %0002c24c

0002c24c:
0002c253: R0 := R31 + 0xC8
0002c258: R30 := 0x4068D8
0002c25a: call @free_rr_data with return %0002c25c

0002c25c:
0002c260: R0 := R31 + 0xD0
0002c265: R30 := 0x4068E0
0002c267: call @free_rr_data with return %0002c269

0002c269:
0002c26e: R0 := pad:64[mem[R31 + 0xDC, el]:u32]
0002c273: R30 := 0x4068E8
0002c275: call @close with return %0002c277

0002c835:
0002c83a: R0 := pad:64[mem[R31 + 0x128, el]:u32]
0002c840: R0 := pad:64[31:0[R0] + 1]
0002c848: mem := mem with [R31 + 0x128, el]:u32 <- 31:0[R0]
0002c84f: R0 := mem[R31 + 0xC8, el]:u64
0002c856: R0 := pad:64[mem[R0 + 0x10, el]:u32]
0002c85c: R1 := pad:64[31:0[R0]]
0002c861: R0 := 0x419000
0002c867: R0 := R0 + 0x6A8
0002c86c: R30 := 0x40679C
0002c86e: call @printf with return %0002c870

0002c870:
0002c874: R0 := R31 + 0xC8
0002c879: R30 := 0x4067A4
0002c87b: call @free_rr_data with return %0002c87d

0002c87d:
0002c881: R0 := R31 + 0xD0
0002c886: R30 := 0x4067AC
0002c888: call @free_rr_data with return %0002c88a

0002c88a:
0002c88f: R0 := pad:64[mem[R31 + 0xDC, el]:u32]
0002c894: R30 := 0x4067B4
0002c896: call @close with return %0002c898

0002c898:
0002c89a: goto %0002c277

0002c277:
0002c27c: R0 := pad:64[mem[R31 + 0x12C, el]:u32]
0002c282: R0 := pad:64[31:0[R0] + 1]
0002c28a: mem := mem with [R31 + 0x12C, el]:u32 <- 31:0[R0]
00045e91: goto %0002c28c

0002c89c:
0002c89f: R0 := 0x419000
0002c8a5: R0 := R0 + 0x678
0002c8aa: R30 := 0x40671C
0002c8ac: call @puts with return %0002c8ae

0002c8ae:
0002c8b2: R0 := R31 + 0xC8
0002c8b7: R30 := 0x406724
0002c8b9: call @free_rr_data with return %0002c8bb

0002c8bb:
0002c8bf: R0 := R31 + 0xD0
0002c8c4: R30 := 0x40672C
0002c8c6: call @free_rr_data with return %0002c8c8

0002c8c8:
0002c8cd: R0 := mem[R31 + 0x118, el]:u64
0002c8d2: VF := 0
0002c8d5: CF := 1
0002c8d9: ZF := R0 = 0
0002c8dd: NF := 63:63[R0]
0002c8e2: when ZF goto %0002c33b
00045e92: goto %0002c8e6

0002c8e6:
0002c8eb: R0 := mem[R31 + 0x118, el]:u64
0002c8f0: R30 := 0x406740
0002c8f2: call @free with return %0002c8f4

0002c8f4:
0002c8f6: goto %0002c33b

0002c33b:
00045e93: goto %0002bf3a

0002bf3a:
0002bf42: R19 := mem[R31 + 0x10, el]:u64
0002bf49: R29 := mem[R31, el]:u64
0002bf4e: R30 := mem[R31 + 8, el]:u64
0002bf52: R31 := R31 + 0x130
0002bf57: call R30 with noreturn

00045e94: sub main(main_argc, main_argv, main_result)
00046345: main_argc :: in u32 = low:32[R0]
00046346: main_argv :: in out u64 = R1
00046347: main_result :: out u32 = low:32[R0]

00016282:
00016289: R31 := R31 - 0x390
00016291: mem := mem with [R31, el]:u64 <- R29
00016297: mem := mem with [R31 + 8, el]:u64 <- R30
0001629d: R29 := R31
000162a3: #1 := R31 + 0x10
000162a9: mem := mem with [#1, el]:u64 <- R19
000162af: mem := mem with [#1 + 8, el]:u64 <- R20
000162b7: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
000162bf: mem := mem with [R31 + 0x20, el]:u64 <- R1
000162c6: mem := mem with [R31 + 0x314, el]:u32 <- 0
000162cd: mem := mem with [R31 + 0x380, el]:u32 <- 0
000162d4: mem := mem with [R31 + 0x37C, el]:u32 <- 0
000162db: mem := mem with [R31 + 0x378, el]:u32 <- 0
000162e2: mem := mem with [R31 + 0x374, el]:u32 <- 0
000162e9: mem := mem with [R31 + 0x370, el]:u32 <- 0
000162f0: mem := mem with [R31 + 0x36C, el]:u32 <- 0
000162f7: mem := mem with [R31 + 0x368, el]:u32 <- 0
000162fe: mem := mem with [R31 + 0x364, el]:u32 <- 0
00016305: mem := mem with [R31 + 0x310, el]:u32 <- 0
0001630c: mem := mem with [R31 + 0x360, el]:u32 <- 0
00016311: R0 := 1
00016319: mem := mem with [R31 + 0x35C, el]:u32 <- 31:0[R0]
00016320: mem := mem with [R31 + 0x350, el]:u64 <- 0
00016327: mem := mem with [R31 + 0x138, el]:u64 <- 0
0001632e: mem := mem with [R31 + 0x130, el]:u64 <- 0
00016335: mem := mem with [R31 + 0x128, el]:u64 <- 0
0001633c: mem := mem with [R31 + 0x120, el]:u64 <- 0
00016343: mem := mem with [R31 + 0x348, el]:u64 <- 0
0001634a: mem := mem with [R31 + 0x340, el]:u64 <- 0
00016351: mem := mem with [R31 + 0x33C, el]:u32 <- 0
00016356: R0 := 0x1000
0001635b: R30 := 0x409DD8
0001635e: call @zmalloc with return %00021ac8

00021ac8:
00021ace: mem := mem with [R31 + 0x308, el]:u64 <- R0
00021ad3: R30 := 0x409DE0
00021ad6: call @new_auth with return %00039255

00039255:
00039259: R1 := R0
0003925e: R0 := 0x430000
00039264: R0 := R0 + 0x398
0003926c: mem := mem with [R0, el]:u64 <- R1
00039271: R0 := 0x32
00039276: R30 := 0x409DF8
00039278: call @zmalloc with return %0003927a

0003927a:
00039280: mem := mem with [R31 + 0x300, el]:u64 <- R0
00039285: R0 := 0x32
0003928a: R30 := 0x409E04
0003928c: call @zmalloc with return %0003928e

0003928e:
00039294: mem := mem with [R31 + 0x2F8, el]:u64 <- R0
00039299: R0 := 0x32
0003929e: R30 := 0x409E10
000392a0: call @zmalloc with return %000392a2

000392a2:
000392a8: mem := mem with [R31 + 0x2F0, el]:u64 <- R0
000392ad: R0 := 0x32
000392b2: R30 := 0x409E1C
000392b4: call @zmalloc with return %000392b6

000392b6:
000392bc: mem := mem with [R31 + 0x2E8, el]:u64 <- R0
000392c1: R0 := 0x32
000392c6: R30 := 0x409E28
000392c8: call @zmalloc with return %000392ca

000392ca:
000392d0: mem := mem with [R31 + 0x2E0, el]:u64 <- R0
000392d5: R0 := 0x32
000392da: R30 := 0x409E34
000392dc: call @zmalloc with return %000392de

000392de:
000392e4: mem := mem with [R31 + 0x2D8, el]:u64 <- R0
000392e9: R0 := 0x32
000392ee: R30 := 0x409E40
000392f0: call @zmalloc with return %000392f2

000392f2:
000392f8: mem := mem with [R31 + 0x2D0, el]:u64 <- R0
000392fd: R0 := 0x32
00039302: R30 := 0x409E4C
00039304: call @zmalloc with return %00039306

00039306:
0003930c: mem := mem with [R31 + 0x2C8, el]:u64 <- R0
00039311: R0 := 0x32
00039316: R30 := 0x409E58
00039318: call @zmalloc with return %0003931a

0003931a:
00039320: mem := mem with [R31 + 0x2C0, el]:u64 <- R0
00039325: R0 := 0x32
0003932a: R30 := 0x409E64
0003932c: call @zmalloc with return %0003932e

0003932e:
00039334: mem := mem with [R31 + 0x2B8, el]:u64 <- R0
0003933b: mem := mem with [R31 + 0x338, el]:u32 <- 0
00039340: R2 := 0x18
00039345: R1 := 0x22
0003934a: R0 := 0x41A000
00039350: R0 := R0 + 0x2A0
00039355: R30 := 0x409E80
00039358: call @openlog with return %0003935a

0003935a:
0003935d: R0 := 0x41A000
00039363: R1 := R0 + 0x2A8
00039368: R0 := 6
0003936d: R30 := 0x409E90
0003936f: call @syslog with return %00039371

00039371:
00039374: goto %00039372

00039372:
00039378: R0 := 0x41A000
0003937e: R2 := R0 + 0x3A8
00039385: R1 := mem[R31 + 0x20, el]:u64
0003938c: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00039391: R30 := 0x40A5F0
00039394: call @__posix_getopt with return %00039396

00039396:
0003939c: mem := mem with [R31 + 0x384, el]:u32 <- 31:0[R0]
000393a3: R0 := pad:64[mem[R31 + 0x384, el]:u32]
000393a9: #456 := 31:0[R0] + 1
000393ae: VF := extend:64[#456] <> extend:64[31:0[R0]] + 1
000393b3: CF := pad:64[#456] <> pad:64[31:0[R0]] + 1
000393b7: ZF := #456 = 0
000393bb: NF := 31:31[#456]
000393c1: when ZF <> 1 goto %000393bf
00045e95: goto %0003a8eb

0003a8eb:
0003a8f0: R0 := pad:64[mem[R31 + 0x380, el]:u32]
0003a8f5: VF := 0
0003a8f8: CF := 1
0003a8fc: ZF := 31:0[R0] = 0
0003a900: NF := 31:31[R0]
0003a908: when ~(NF = VF & ~ZF) goto %0003a906
00045e96: goto %0003eae5

0003eae5:
0003eae8: R0 := 0x41A000
0003eaee: R0 := R0 + 0x3E8
0003eaf3: R30 := 0x40A618
0003eaf5: call @puts with return %0003eaf7

0003eaf7:
0003eafa: R0 := 0x41A000
0003eb00: R0 := R0 + 0x430
0003eb05: R30 := 0x40A624
0003eb07: call @puts with return %0003eb09

0003eb09:
0003eb0c: R0 := 0x430000
0003eb12: R0 := R0 + 0x370
0003eb19: R0 := mem[R0, el]:u64
0003eb21: mem := mem with [R31 + 0x330, el]:u64 <- R0
0003eb28: mem := mem with [R31 + 0x32C, el]:u32 <- 0
0003eb2f: R0 := pad:64[mem[R31 + 0x380, el]:u32]
0003eb35: #495 := 31:0[R0] - 1
0003eb3a: VF := extend:64[#495] <> extend:64[31:0[R0]] - 1
0003eb3f: CF := pad:64[#495] <> pad:64[31:0[R0]] + 0xFFFFFFFF
0003eb43: ZF := #495 = 0
0003eb47: NF := 31:31[#495]
0003eb4f: when ~(NF = VF & ~ZF) goto %0003eb4d
00045e97: goto %0003efde

0003efde:
0003efe1: R0 := 0x430000
0003efe7: R0 := R0 + 0x350
0003efee: R0 := mem[R0, el]:u64
0003eff6: mem := mem with [R31 + 0x330, el]:u64 <- R0
0003effb: R0 := 1
0003f003: mem := mem with [R31 + 0x32C, el]:u32 <- 31:0[R0]
00045e98: goto %0003eb4d

0003eb4d:
0003eb57: R0 := mem[R31 + 0x20, el]:u64
0003eb5e: R0 := mem[R0, el]:u64
0003eb64: R2 := R0
0003eb69: R0 := 0x41A000
0003eb6f: R1 := R0 + 0x578
0003eb76: R0 := mem[R31 + 0x330, el]:u64
0003eb7b: R30 := 0x40A678
0003eb7d: call @fprintf with return %0003eb7f

0003eb7f:
0003eb84: R3 := mem[R31 + 0x330, el]:u64
0003eb89: R2 := 0x61
0003eb8e: R1 := 1
0003eb93: R0 := 0x41A000
0003eb99: R0 := R0 + 0x5C8
0003eb9e: R30 := 0x40A690
0003eba0: call @fwrite with return %0003eba2

0003eba2:
0003eba7: R3 := mem[R31 + 0x330, el]:u64
0003ebac: R2 := 0xA5
0003ebb1: R1 := 1
0003ebb6: R0 := 0x41A000
0003ebbc: R0 := R0 + 0x630
0003ebc1: R30 := 0x40A6A8
0003ebc3: call @fwrite with return %0003ebc5

0003ebc5:
0003ebca: R3 := mem[R31 + 0x330, el]:u64
0003ebcf: R2 := 0x2A
0003ebd4: R1 := 1
0003ebd9: R0 := 0x41A000
0003ebdf: R0 := R0 + 0x6D8
0003ebe4: R30 := 0x40A6C0
0003ebe6: call @fwrite with return %0003ebe8

0003ebe8:
0003ebed: R3 := mem[R31 + 0x330, el]:u64
0003ebf2: R2 := 0x77
0003ebf7: R1 := 1
0003ebfc: R0 := 0x41A000
0003ec02: R0 := R0 + 0x708
0003ec07: R30 := 0x40A6D8
0003ec09: call @fwrite with return %0003ec0b

0003ec0b:
0003ec10: R3 := mem[R31 + 0x330, el]:u64
0003ec15: R2 := 0x3E
0003ec1a: R1 := 1
0003ec1f: R0 := 0x41A000
0003ec25: R0 := R0 + 0x780
0003ec2a: R30 := 0x40A6F0
0003ec2c: call @fwrite with return %0003ec2e

0003ec2e:
0003ec33: R3 := mem[R31 + 0x330, el]:u64
0003ec38: R2 := 0x3B
0003ec3d: R1 := 1
0003ec42: R0 := 0x41A000
0003ec48: R0 := R0 + 0x7C0
0003ec4d: R30 := 0x40A708
0003ec4f: call @fwrite with return %0003ec51

0003ec51:
0003ec56: R3 := mem[R31 + 0x330, el]:u64
0003ec5b: R2 := 0x2D
0003ec60: R1 := 1
0003ec65: R0 := 0x41A000
0003ec6b: R0 := R0 + 0x800
0003ec70: R30 := 0x40A720
0003ec72: call @fwrite with return %0003ec74

0003ec74:
0003ec79: R3 := mem[R31 + 0x330, el]:u64
0003ec7e: R2 := 0x36
0003ec83: R1 := 1
0003ec88: R0 := 0x41A000
0003ec8e: R0 := R0 + 0x830
0003ec93: R30 := 0x40A738
0003ec95: call @fwrite with return %0003ec97

0003ec97:
0003ec9c: R3 := mem[R31 + 0x330, el]:u64
0003eca1: R2 := 0x47
0003eca6: R1 := 1
0003ecab: R0 := 0x41A000
0003ecb1: R0 := R0 + 0x868
0003ecb6: R30 := 0x40A750
0003ecb8: call @fwrite with return %0003ecba

0003ecba:
0003ecbf: R3 := mem[R31 + 0x330, el]:u64
0003ecc4: R2 := 0x41
0003ecc9: R1 := 1
0003ecce: R0 := 0x41A000
0003ecd4: R0 := R0 + 0x8B0
0003ecd9: R30 := 0x40A768
0003ecdb: call @fwrite with return %0003ecdd

0003ecdd:
0003ece2: R3 := mem[R31 + 0x330, el]:u64
0003ece7: R2 := 0x4C
0003ecec: R1 := 1
0003ecf1: R0 := 0x41A000
0003ecf7: R0 := R0 + 0x8F8
0003ecfc: R30 := 0x40A780
0003ecfe: call @fwrite with return %0003ed00

0003ed00:
0003ed05: R3 := mem[R31 + 0x330, el]:u64
0003ed0a: R2 := 0x35
0003ed0f: R1 := 1
0003ed14: R0 := 0x41A000
0003ed1a: R0 := R0 + 0x948
0003ed1f: R30 := 0x40A798
0003ed21: call @fwrite with return %0003ed23

0003ed23:
0003ed28: R3 := mem[R31 + 0x330, el]:u64
0003ed2d: R2 := 0x2C
0003ed32: R1 := 1
0003ed37: R0 := 0x41A000
0003ed3d: R0 := R0 + 0x980
0003ed42: R30 := 0x40A7B0
0003ed44: call @fwrite with return %0003ed46

0003ed46:
0003ed4b: R3 := mem[R31 + 0x330, el]:u64
0003ed50: R2 := 0xEE
0003ed55: R1 := 1
0003ed5a: R0 := 0x41A000
0003ed60: R0 := R0 + 0x9B0
0003ed65: R30 := 0x40A7C8
0003ed67: call @fwrite with return %0003ed69

0003ed69:
0003ed6e: R3 := mem[R31 + 0x330, el]:u64
0003ed73: R2 := 0x44
0003ed78: R1 := 1
0003ed7d: R0 := 0x41A000
0003ed83: R0 := R0 + 0xAA0
0003ed88: R30 := 0x40A7E0
0003ed8a: call @fwrite with return %0003ed8c

0003ed8c:
0003ed91: R3 := mem[R31 + 0x330, el]:u64
0003ed96: R2 := 0x41
0003ed9b: R1 := 1
0003eda0: R0 := 0x41A000
0003eda6: R0 := R0 + 0xAE8
0003edab: R30 := 0x40A7F8
0003edad: call @fwrite with return %0003edaf

0003edaf:
0003edb4: R3 := mem[R31 + 0x330, el]:u64
0003edb9: R2 := 0x7E
0003edbe: R1 := 1
0003edc3: R0 := 0x41A000
0003edc9: R0 := R0 + 0xB30
0003edce: R30 := 0x40A810
0003edd0: call @fwrite with return %0003edd2

0003edd2:
0003edd7: R3 := mem[R31 + 0x330, el]:u64
0003eddc: R2 := 0x59
0003ede1: R1 := 1
0003ede6: R0 := 0x41A000
0003edec: R0 := R0 + 0xBB0
0003edf1: R30 := 0x40A828
0003edf3: call @fwrite with return %0003edf5

0003edf5:
0003edfa: R3 := mem[R31 + 0x330, el]:u64
0003edff: R2 := 0x3D
0003ee04: R1 := 1
0003ee09: R0 := 0x41A000
0003ee0f: R0 := R0 + 0xC10
0003ee14: R30 := 0x40A840
0003ee16: call @fwrite with return %0003ee18

0003ee18:
0003ee1d: R3 := mem[R31 + 0x330, el]:u64
0003ee22: R2 := 0x50
0003ee27: R1 := 1
0003ee2c: R0 := 0x41A000
0003ee32: R0 := R0 + 0xC50
0003ee37: R30 := 0x40A858
0003ee39: call @fwrite with return %0003ee3b

0003ee3b:
0003ee40: R3 := mem[R31 + 0x330, el]:u64
0003ee45: R2 := 0x45
0003ee4a: R1 := 1
0003ee4f: R0 := 0x41A000
0003ee55: R0 := R0 + 0xCA8
0003ee5a: R30 := 0x40A870
0003ee5c: call @fwrite with return %0003ee5e

0003ee5e:
0003ee63: R3 := mem[R31 + 0x330, el]:u64
0003ee68: R2 := 0x9C
0003ee6d: R1 := 1
0003ee72: R0 := 0x41A000
0003ee78: R0 := R0 + 0xCF0
0003ee7d: R30 := 0x40A888
0003ee7f: call @fwrite with return %0003ee81

0003ee81:
0003ee86: R3 := mem[R31 + 0x330, el]:u64
0003ee8b: R2 := 0x80
0003ee90: R1 := 1
0003ee95: R0 := 0x41A000
0003ee9b: R0 := R0 + 0xD90
0003eea0: R30 := 0x40A8A0
0003eea2: call @fwrite with return %0003eea4

0003eea4:
0003eea9: R3 := mem[R31 + 0x330, el]:u64
0003eeae: R2 := 0x5F
0003eeb3: R1 := 1
0003eeb8: R0 := 0x41A000
0003eebe: R0 := R0 + 0xE18
0003eec3: R30 := 0x40A8B8
0003eec5: call @fwrite with return %0003eec7

0003eec7:
0003eecc: R3 := mem[R31 + 0x330, el]:u64
0003eed1: R2 := 0x46
0003eed6: R1 := 1
0003eedb: R0 := 0x41A000
0003eee1: R0 := R0 + 0xE78
0003eee6: R30 := 0x40A8D0
0003eee8: call @fwrite with return %0003eeea

0003eeea:
0003eeef: R3 := mem[R31 + 0x330, el]:u64
0003eef4: R2 := 0x9B
0003eef9: R1 := 1
0003eefe: R0 := 0x41A000
0003ef04: R0 := R0 + 0xEC0
0003ef09: R30 := 0x40A8E8
0003ef0b: call @fwrite with return %0003ef0d

0003ef0d:
0003ef12: R3 := mem[R31 + 0x330, el]:u64
0003ef17: R2 := 0x54
0003ef1c: R1 := 1
0003ef21: R0 := 0x41A000
0003ef27: R0 := R0 + 0xF60
0003ef2c: R30 := 0x40A900
0003ef2e: call @fwrite with return %0003ef30

0003ef30:
0003ef35: R3 := mem[R31 + 0x330, el]:u64
0003ef3a: R2 := 0x43
0003ef3f: R1 := 1
0003ef44: R0 := 0x41A000
0003ef4a: R0 := R0 + 0xFB8
0003ef4f: R30 := 0x40A918
0003ef51: call @fwrite with return %0003ef53

0003ef53:
0003ef58: R3 := mem[R31 + 0x330, el]:u64
0003ef5d: R2 := 0x22
0003ef62: R1 := 1
0003ef67: R0 := 0x41B000
0003ef6d: R0 := R0
0003ef72: R30 := 0x40A930
0003ef74: call @fwrite with return %0003ef76

0003ef76:
0003ef7b: R3 := mem[R31 + 0x330, el]:u64
0003ef80: R2 := 0x47
0003ef85: R1 := 1
0003ef8a: R0 := 0x41B000
0003ef90: R0 := R0 + 0x28
0003ef95: R30 := 0x40A948
0003ef97: call @fwrite with return %0003ef99

0003ef99:
0003ef9e: R3 := mem[R31 + 0x330, el]:u64
0003efa3: R2 := 0x77
0003efa8: R1 := 1
0003efad: R0 := 0x41B000
0003efb3: R0 := R0 + 0x70
0003efb8: R30 := 0x40A960
0003efba: call @fwrite with return %0003efbc

0003efbc:
0003efc1: R1 := mem[R31 + 0x330, el]:u64
0003efc6: R0 := 0xA
0003efcb: R30 := 0x40A96C
0003efce: call @fputc with return %0003efd0

0003efd0:
0003efd5: R0 := pad:64[mem[R31 + 0x32C, el]:u32]
0003efda: R30 := 0x40A974
0003efdc: call @exit with return %0003a906

0003a906:
0003a90e: R0 := 0x430000
0003a914: R0 := R0 + 0x390
0003a91b: R0 := pad:64[mem[R0, el]:u32]
0003a920: VF := 0
0003a923: CF := 1
0003a927: ZF := 31:0[R0] = 0
0003a92b: NF := 31:31[R0]
0003a931: when ZF goto %0003a92f
00045e99: goto %0003ea26

0003ea26:
0003ea29: R0 := 0x41B000
0003ea2f: R0 := R0 + 0xE8
0003ea34: R30 := 0x40A994
0003ea36: call @printf with return %0003ea38

0003ea38:
0003ea3b: R0 := 0x41B000
0003ea41: R0 := R0 + 0x110
0003ea46: R30 := 0x40A9A0
0003ea48: call @printf with return %0003ea4a

0003ea4a:
0003ea4f: mem := mem with [R31 + 0x384, el]:u32 <- 0
0003ea54: goto %0003ea52

0003ea52:
0003ea5a: R1 := pad:64[mem[R31 + 0x384, el]:u32]
0003ea61: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0003ea67: #493 := ~31:0[R0]
0003ea6c: #494 := 31:0[R1] + ~31:0[R0]
0003ea72: VF := extend:64[#494 + 1] <> extend:64[31:0[R1]] + extend:64[#493]
          + 1
0003ea78: CF := pad:64[#494 + 1] <> pad:64[31:0[R1]] + pad:64[#493] + 1
0003ea7c: ZF := #494 + 1 = 0
0003ea80: NF := 31:31[#494 + 1]
0003ea87: when NF <> VF goto %0003ea85
00045e9a: goto %0003ead9

0003ead9:
0003eadc: R0 := 0xA
0003eae1: R30 := 0x40A9F0
0003eae3: call @putchar with return %0003a92f

0003a92f:
0003a939: R0 := mem[R31 + 0x350, el]:u64
0003a93e: VF := 0
0003a941: CF := 1
0003a945: ZF := R0 = 0
0003a949: NF := 63:63[R0]
0003a94f: when ZF goto %0003a94d
00045e9b: goto %0003e9ba

0003e9ba:
0003e9bf: R0 := mem[R31 + 0x350, el]:u64
0003e9c4: R30 := 0x40AA04
0003e9c6: call @config_open with return %0003e9c8

0003e9c8:
0003e9ce: mem := mem with [R31 + 0x348, el]:u64 <- R0
0003e9d5: R0 := mem[R31 + 0x348, el]:u64
0003e9da: VF := 0
0003e9dd: CF := 1
0003e9e1: ZF := R0 = 0
0003e9e5: NF := 63:63[R0]
0003e9eb: when ZF <> 1 goto %0003e9e9
00045e9c: goto %0003e9fc

0003e9fc:
0003ea01: R2 := mem[R31 + 0x350, el]:u64
0003ea06: R0 := 0x41B000
0003ea0c: R1 := R0 + 0x130
0003ea11: R0 := 3
0003ea16: R30 := 0x40AA28
0003ea18: call @syslog with return %0003ea1a

0003ea1a:
0003ea1d: R0 := 1
0003ea22: R30 := 0x40AA30
0003ea24: call @myexit with return %0003e9e9

0003e9e9:
0003e9f3: R0 := mem[R31 + 0x350, el]:u64
0003e9f8: R30 := 0x40AA38
0003e9fa: call @free with return %0003a94d

0003a94d:
0003a955: R0 := 0x430000
0003a95b: R0 := R0 + 0x368
0003a962: R0 := pad:64[mem[R0, el]:u32]
0003a96a: mem := mem with [R31 + 0x384, el]:u32 <- 31:0[R0]
0003a96f: goto %0003a96d

0003a96d:
0003a975: R1 := pad:64[mem[R31 + 0x384, el]:u32]
0003a97c: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0003a982: #472 := ~31:0[R0]
0003a987: #473 := 31:0[R1] + ~31:0[R0]
0003a98d: VF := extend:64[#473 + 1] <> extend:64[31:0[R1]] + extend:64[#472]
          + 1
0003a993: CF := pad:64[#473 + 1] <> pad:64[31:0[R1]] + pad:64[#472] + 1
0003a997: ZF := #473 + 1 = 0
0003a99b: NF := 31:31[#473 + 1]
0003a9a2: when NF <> VF goto %0003a9a0
00045e9d: goto %0003aae4

0003aae4:
0003aae9: R0 := mem[R31 + 0x348, el]:u64
0003aaee: VF := 0
0003aaf1: CF := 1
0003aaf5: ZF := R0 = 0
0003aaf9: NF := 63:63[R0]
0003aaff: when ZF goto %0003aafd
00045e9e: goto %0003d61c

0003d61c:
0003d61f: R0 := 0x32
0003d624: R30 := 0x40AB18
0003d626: call @zmalloc with return %0003d628

0003d628:
0003d62e: mem := mem with [R31 + 0x208, el]:u64 <- R0
0003d635: mem := mem with [R31 + 0x2B0, el]:u64 <- 0
0003d63a: R0 := 0x41B000
0003d640: R1 := R0 + 0x160
0003d647: R0 := mem[R31 + 0x348, el]:u64
0003d64c: R30 := 0x40AB30
0003d64e: call @config_pop with return %0003d650

0003d650:
0003d656: mem := mem with [R31 + 0x2B0, el]:u64 <- R0
0003d65d: R0 := mem[R31 + 0x2B0, el]:u64
0003d662: VF := 0
0003d665: CF := 1
0003d669: ZF := R0 = 0
0003d66d: NF := 63:63[R0]
0003d673: when ZF goto %0003d671
00045e9f: goto %0003e97b

0003e97b:
0003e980: R0 := mem[R31 + 0x208, el]:u64
0003e987: R0 := pad:64[mem[R0]]
0003e98c: VF := 0
0003e98f: CF := 1
0003e993: ZF := 31:0[R0] = 0
0003e997: NF := 31:31[R0]
0003e99c: when ZF <> 1 goto %0003d671
00045ea0: goto %0003e9a0

0003e9a0:
0003e9a5: R0 := mem[R31 + 0x208, el]:u64
0003e9aa: R2 := 0x32
0003e9b1: R1 := mem[R31 + 0x2B0, el]:u64
0003e9b6: R30 := 0x40AB60
0003e9b8: call @strlcpy with return %0003d671

0003d671:
0003d67b: R0 := mem[R31 + 0x2B0, el]:u64
0003d680: VF := 0
0003d683: CF := 1
0003d687: ZF := R0 = 0
0003d68b: NF := 63:63[R0]
0003d691: when ZF goto %0003d68f
00045ea1: goto %0003e96d

0003e96d:
0003e972: R0 := mem[R31 + 0x2B0, el]:u64
0003e977: R30 := 0x40AB74
0003e979: call @free with return %0003d68f

0003d68f:
0003d699: R0 := mem[R31 + 0x208, el]:u64
0003d69f: R1 := R0
0003d6a4: R0 := 0x41B000
0003d6aa: R0 := R0 + 0x168
0003d6af: R30 := 0x40AB88
0003d6b1: call @strcasecmp with return %0003d6b3

0003d6b3:
0003d6b6: VF := 0
0003d6b9: CF := 1
0003d6bd: ZF := 31:0[R0] = 0
0003d6c1: NF := 31:31[R0]
0003d6c7: when ZF <> 1 goto %0003d6c5
00045ea2: goto %0003e960

0003e960:
0003e963: R0 := 1
0003e96b: mem := mem with [R31 + 0x374, el]:u32 <- 31:0[R0]
00045ea3: goto %0003d6c5

0003d6c5:
0003d6cf: R0 := mem[R31 + 0x208, el]:u64
0003d6d4: R30 := 0x40ABA0
0003d6d6: call @free with return %0003d6d8

0003d6d8:
0003d6db: R0 := 0x32
0003d6e0: R30 := 0x40ABA8
0003d6e2: call @zmalloc with return %0003d6e4

0003d6e4:
0003d6ea: mem := mem with [R31 + 0x208, el]:u64 <- R0
0003d6f1: mem := mem with [R31 + 0x2A8, el]:u64 <- 0
0003d6f6: R0 := 0x41B000
0003d6fc: R1 := R0 + 0x170
0003d703: R0 := mem[R31 + 0x348, el]:u64
0003d708: R30 := 0x40ABC0
0003d70a: call @config_pop with return %0003d70c

0003d70c:
0003d712: mem := mem with [R31 + 0x2A8, el]:u64 <- R0
0003d719: R0 := mem[R31 + 0x2A8, el]:u64
0003d71e: VF := 0
0003d721: CF := 1
0003d725: ZF := R0 = 0
0003d729: NF := 63:63[R0]
0003d72f: when ZF goto %0003d72d
00045ea4: goto %0003e921

0003e921:
0003e926: R0 := mem[R31 + 0x208, el]:u64
0003e92d: R0 := pad:64[mem[R0]]
0003e932: VF := 0
0003e935: CF := 1
0003e939: ZF := 31:0[R0] = 0
0003e93d: NF := 31:31[R0]
0003e942: when ZF <> 1 goto %0003d72d
00045ea5: goto %0003e946

0003e946:
0003e94b: R0 := mem[R31 + 0x208, el]:u64
0003e950: R2 := 0x32
0003e957: R1 := mem[R31 + 0x2A8, el]:u64
0003e95c: R30 := 0x40ABF0
0003e95e: call @strlcpy with return %0003d72d

0003d72d:
0003d737: R0 := mem[R31 + 0x2A8, el]:u64
0003d73c: VF := 0
0003d73f: CF := 1
0003d743: ZF := R0 = 0
0003d747: NF := 63:63[R0]
0003d74d: when ZF goto %0003d74b
00045ea6: goto %0003e913

0003e913:
0003e918: R0 := mem[R31 + 0x2A8, el]:u64
0003e91d: R30 := 0x40AC04
0003e91f: call @free with return %0003d74b

0003d74b:
0003d755: R0 := mem[R31 + 0x208, el]:u64
0003d75b: R1 := R0
0003d760: R0 := 0x41B000
0003d766: R0 := R0 + 0x168
0003d76b: R30 := 0x40AC18
0003d76d: call @strcasecmp with return %0003d76f

0003d76f:
0003d772: VF := 0
0003d775: CF := 1
0003d779: ZF := 31:0[R0] = 0
0003d77d: NF := 31:31[R0]
0003d783: when ZF <> 1 goto %0003d781
00045ea7: goto %0003e8fb

0003e8fb:
0003e8fe: R0 := 0x430000
0003e904: R0 := R0 + 0x3A4
0003e909: R1 := 1
0003e911: mem := mem with [R0, el]:u32 <- 31:0[R1]
00045ea8: goto %0003d781

0003d781:
0003d78b: R0 := mem[R31 + 0x208, el]:u64
0003d790: R30 := 0x40AC38
0003d792: call @free with return %0003d794

0003d794:
0003d797: goto %0003d795

0003d795:
0003d79b: R0 := 0x41B000
0003d7a1: R1 := R0 + 0x180
0003d7a8: R0 := mem[R31 + 0x348, el]:u64
0003d7ad: R30 := 0x40AC64
0003d7af: call @config_pop with return %0003d7b1

0003d7b1:
0003d7b7: mem := mem with [R31 + 0x208, el]:u64 <- R0
0003d7be: R0 := mem[R31 + 0x208, el]:u64
0003d7c3: VF := 0
0003d7c6: CF := 1
0003d7ca: ZF := R0 = 0
0003d7ce: NF := 63:63[R0]
0003d7d4: when ZF <> 1 goto %0003d7d2
00045ea9: goto %0003d800

0003d800:
0003d803: goto %0003d801

0003d801:
0003d807: R0 := 0x41B000
0003d80d: R1 := R0 + 0x188
0003d814: R0 := mem[R31 + 0x348, el]:u64
0003d819: R30 := 0x40ACB0
0003d81b: call @config_pop with return %0003d81d

0003d81d:
0003d823: mem := mem with [R31 + 0x208, el]:u64 <- R0
0003d82a: R0 := mem[R31 + 0x208, el]:u64
0003d82f: VF := 0
0003d832: CF := 1
0003d836: ZF := R0 = 0
0003d83a: NF := 63:63[R0]
0003d840: when ZF <> 1 goto %0003d83e
00045eaa: goto %0003d883

0003d883:
0003d886: goto %0003d884

0003d884:
0003d88a: R0 := 0x41B000
0003d890: R1 := R0 + 0x190
0003d897: R0 := mem[R31 + 0x348, el]:u64
0003d89c: R30 := 0x40ACFC
0003d89e: call @config_pop with return %0003d8a0

0003d8a0:
0003d8a6: mem := mem with [R31 + 0x208, el]:u64 <- R0
0003d8ad: R0 := mem[R31 + 0x208, el]:u64
0003d8b2: VF := 0
0003d8b5: CF := 1
0003d8b9: ZF := R0 = 0
0003d8bd: NF := 63:63[R0]
0003d8c3: when ZF <> 1 goto %0003d8c1
00045eab: goto %0003d906

0003d906:
0003d909: goto %0003d907

0003d907:
0003d90d: R0 := 0x41B000
0003d913: R1 := R0 + 0x1C0
0003d91a: R0 := mem[R31 + 0x348, el]:u64
0003d91f: R30 := 0x40ADC0
0003d921: call @config_pop with return %0003d923

0003d923:
0003d929: mem := mem with [R31 + 0x208, el]:u64 <- R0
0003d930: R0 := mem[R31 + 0x208, el]:u64
0003d935: VF := 0
0003d938: CF := 1
0003d93c: ZF := R0 = 0
0003d940: NF := 63:63[R0]
0003d946: when ZF <> 1 goto %0003d944
00045eac: goto %0003da5c

0003da5c:
0003da61: mem := mem with [R31 + 0x33C, el]:u32 <- 0
0003da66: goto %0003da64

0003da64:
0003da6a: R0 := 0x41A000
0003da70: R1 := R0 + 0x2E8
0003da77: R0 := mem[R31 + 0x348, el]:u64
0003da7c: R30 := 0x40ADFC
0003da7e: call @config_pop with return %0003da80

0003da80:
0003da86: mem := mem with [R31 + 0x208, el]:u64 <- R0
0003da8d: R0 := mem[R31 + 0x208, el]:u64
0003da92: VF := 0
0003da95: CF := 1
0003da99: ZF := R0 = 0
0003da9d: NF := 63:63[R0]
0003daa3: when ZF <> 1 goto %0003daa1
00045ead: goto %0003dac7

0003dac7:
0003dacc: R0 := mem[R31 + 0x120, el]:u64
0003dad1: VF := 0
0003dad4: CF := 1
0003dad8: ZF := R0 = 0
0003dadc: NF := 63:63[R0]
0003dae2: when ZF <> 1 goto %0003dae0
00045eae: goto %0003e712

0003e712:
0003e717: R0 := mem[R31 + 0x348, el]:u64
0003e71e: R0 := mem[R0, el]:u64
0003e726: mem := mem with [R31 + 0x388, el]:u64 <- R0
0003e72b: goto %0003e729

0003e729:
0003e731: R0 := mem[R31 + 0x388, el]:u64
0003e736: VF := 0
0003e739: CF := 1
0003e73d: ZF := R0 = 0
0003e741: NF := 63:63[R0]
0003e747: when ZF <> 1 goto %0003e745
00045eaf: goto %0003e859

0003e859:
0003e85c: goto %0003e85a

0003e85a:
0003e860: R0 := 0x41B000
0003e866: R1 := R0 + 0x1C8
0003e86d: R0 := mem[R31 + 0x348, el]:u64
0003e872: R30 := 0x40AED8
0003e874: call @config_pop with return %0003e876

0003e876:
0003e87c: mem := mem with [R31 + 0x208, el]:u64 <- R0
0003e883: R0 := mem[R31 + 0x208, el]:u64
0003e888: VF := 0
0003e88b: CF := 1
0003e88f: ZF := R0 = 0
0003e893: NF := 63:63[R0]
0003e899: when ZF <> 1 goto %0003e897
00045eb0: goto %0003e8aa

0003e8aa:
0003e8ad: goto %0003e8ab

0003e8ab:
0003e8b1: R0 := 0x41B000
0003e8b7: R1 := R0 + 0x1D0
0003e8be: R0 := mem[R31 + 0x348, el]:u64
0003e8c3: R30 := 0x40AF04
0003e8c5: call @config_pop with return %0003e8c7

0003e8c7:
0003e8cd: mem := mem with [R31 + 0x208, el]:u64 <- R0
0003e8d4: R0 := mem[R31 + 0x208, el]:u64
0003e8d9: VF := 0
0003e8dc: CF := 1
0003e8e0: ZF := R0 = 0
0003e8e4: NF := 63:63[R0]
0003e8ea: when ZF <> 1 goto %0003e8e8
00045eb1: goto %0003dae0

0003dae0:
0003daea: mem := mem with [R31 + 0x2A0, el]:u64 <- 0
0003daef: R0 := 0x41B000
0003daf5: R1 := R0 + 0x1D8
0003dafc: R0 := mem[R31 + 0x348, el]:u64
0003db01: R30 := 0x40AF28
0003db03: call @config_pop with return %0003db05

0003db05:
0003db0b: mem := mem with [R31 + 0x2A0, el]:u64 <- R0
0003db12: R0 := mem[R31 + 0x2A0, el]:u64
0003db17: VF := 0
0003db1a: CF := 1
0003db1e: ZF := R0 = 0
0003db22: NF := 63:63[R0]
0003db28: when ZF goto %0003db26
00045eb2: goto %0003e6d3

0003e6d3:
0003e6d8: R0 := mem[R31 + 0x2B8, el]:u64
0003e6df: R0 := pad:64[mem[R0]]
0003e6e4: VF := 0
0003e6e7: CF := 1
0003e6eb: ZF := 31:0[R0] = 0
0003e6ef: NF := 31:31[R0]
0003e6f4: when ZF <> 1 goto %0003db26
00045eb3: goto %0003e6f8

0003e6f8:
0003e6fb: R2 := 0x32
0003e702: R1 := mem[R31 + 0x2A0, el]:u64
0003e709: R0 := mem[R31 + 0x2B8, el]:u64
0003e70e: R30 := 0x40AF58
0003e710: call @strlcpy with return %0003db26

0003db26:
0003db30: R0 := mem[R31 + 0x2A0, el]:u64
0003db35: VF := 0
0003db38: CF := 1
0003db3c: ZF := R0 = 0
0003db40: NF := 63:63[R0]
0003db46: when ZF goto %0003db44
00045eb4: goto %0003e6c5

0003e6c5:
0003e6ca: R0 := mem[R31 + 0x2A0, el]:u64
0003e6cf: R30 := 0x40AF6C
0003e6d1: call @free with return %0003db44

0003db44:
0003db4e: mem := mem with [R31 + 0x298, el]:u64 <- 0
0003db53: R0 := 0x41B000
0003db59: R1 := R0 + 0x1E0
0003db60: R0 := mem[R31 + 0x348, el]:u64
0003db65: R30 := 0x40AF80
0003db67: call @config_pop with return %0003db69

0003db69:
0003db6f: mem := mem with [R31 + 0x298, el]:u64 <- R0
0003db76: R0 := mem[R31 + 0x298, el]:u64
0003db7b: VF := 0
0003db7e: CF := 1
0003db82: ZF := R0 = 0
0003db86: NF := 63:63[R0]
0003db8c: when ZF goto %0003db8a
00045eb5: goto %0003e686

0003e686:
0003e68b: R0 := mem[R31 + 0x2F8, el]:u64
0003e692: R0 := pad:64[mem[R0]]
0003e697: VF := 0
0003e69a: CF := 1
0003e69e: ZF := 31:0[R0] = 0
0003e6a2: NF := 31:31[R0]
0003e6a7: when ZF <> 1 goto %0003db8a
00045eb6: goto %0003e6ab

0003e6ab:
0003e6ae: R2 := 0x32
0003e6b5: R1 := mem[R31 + 0x298, el]:u64
0003e6bc: R0 := mem[R31 + 0x2F8, el]:u64
0003e6c1: R30 := 0x40AFB0
0003e6c3: call @strlcpy with return %0003db8a

0003db8a:
0003db94: R0 := mem[R31 + 0x298, el]:u64
0003db99: VF := 0
0003db9c: CF := 1
0003dba0: ZF := R0 = 0
0003dba4: NF := 63:63[R0]
0003dbaa: when ZF goto %0003dba8
00045eb7: goto %0003e678

0003e678:
0003e67d: R0 := mem[R31 + 0x298, el]:u64
0003e682: R30 := 0x40AFC4
0003e684: call @free with return %0003dba8

0003dba8:
0003dbb2: mem := mem with [R31 + 0x290, el]:u64 <- 0
0003dbb7: R0 := 0x41B000
0003dbbd: R1 := R0 + 0x1E8
0003dbc4: R0 := mem[R31 + 0x348, el]:u64
0003dbc9: R30 := 0x40AFD8
0003dbcb: call @config_pop with return %0003dbcd

0003dbcd:
0003dbd3: mem := mem with [R31 + 0x290, el]:u64 <- R0
0003dbda: R0 := mem[R31 + 0x290, el]:u64
0003dbdf: VF := 0
0003dbe2: CF := 1
0003dbe6: ZF := R0 = 0
0003dbea: NF := 63:63[R0]
0003dbf0: when ZF goto %0003dbee
00045eb8: goto %0003e639

0003e639:
0003e63e: R0 := mem[R31 + 0x2F0, el]:u64
0003e645: R0 := pad:64[mem[R0]]
0003e64a: VF := 0
0003e64d: CF := 1
0003e651: ZF := 31:0[R0] = 0
0003e655: NF := 31:31[R0]
0003e65a: when ZF <> 1 goto %0003dbee
00045eb9: goto %0003e65e

0003e65e:
0003e661: R2 := 0x32
0003e668: R1 := mem[R31 + 0x290, el]:u64
0003e66f: R0 := mem[R31 + 0x2F0, el]:u64
0003e674: R30 := 0x40B008
0003e676: call @strlcpy with return %0003dbee

0003dbee:
0003dbf8: R0 := mem[R31 + 0x290, el]:u64
0003dbfd: VF := 0
0003dc00: CF := 1
0003dc04: ZF := R0 = 0
0003dc08: NF := 63:63[R0]
0003dc0e: when ZF goto %0003dc0c
00045eba: goto %0003e62b

0003e62b:
0003e630: R0 := mem[R31 + 0x290, el]:u64
0003e635: R30 := 0x40B01C
0003e637: call @free with return %0003dc0c

0003dc0c:
0003dc16: mem := mem with [R31 + 0x288, el]:u64 <- 0
0003dc1b: R0 := 0x41B000
0003dc21: R1 := R0 + 0x1F8
0003dc28: R0 := mem[R31 + 0x348, el]:u64
0003dc2d: R30 := 0x40B030
0003dc2f: call @config_pop with return %0003dc31

0003dc31:
0003dc37: mem := mem with [R31 + 0x288, el]:u64 <- R0
0003dc3e: R0 := mem[R31 + 0x288, el]:u64
0003dc43: VF := 0
0003dc46: CF := 1
0003dc4a: ZF := R0 = 0
0003dc4e: NF := 63:63[R0]
0003dc54: when ZF goto %0003dc52
00045ebb: goto %0003e5ec

0003e5ec:
0003e5f1: R0 := mem[R31 + 0x2E8, el]:u64
0003e5f8: R0 := pad:64[mem[R0]]
0003e5fd: VF := 0
0003e600: CF := 1
0003e604: ZF := 31:0[R0] = 0
0003e608: NF := 31:31[R0]
0003e60d: when ZF <> 1 goto %0003dc52
00045ebc: goto %0003e611

0003e611:
0003e614: R2 := 0x32
0003e61b: R1 := mem[R31 + 0x288, el]:u64
0003e622: R0 := mem[R31 + 0x2E8, el]:u64
0003e627: R30 := 0x40B060
0003e629: call @strlcpy with return %0003dc52

0003dc52:
0003dc5c: R0 := mem[R31 + 0x288, el]:u64
0003dc61: VF := 0
0003dc64: CF := 1
0003dc68: ZF := R0 = 0
0003dc6c: NF := 63:63[R0]
0003dc72: when ZF goto %0003dc70
00045ebd: goto %0003e5de

0003e5de:
0003e5e3: R0 := mem[R31 + 0x288, el]:u64
0003e5e8: R30 := 0x40B074
0003e5ea: call @free with return %0003dc70

0003dc70:
0003dc7a: mem := mem with [R31 + 0x280, el]:u64 <- 0
0003dc7f: R0 := 0x41B000
0003dc85: R1 := R0 + 0x208
0003dc8c: R0 := mem[R31 + 0x348, el]:u64
0003dc91: R30 := 0x40B088
0003dc93: call @config_pop with return %0003dc95

0003dc95:
0003dc9b: mem := mem with [R31 + 0x280, el]:u64 <- R0
0003dca2: R0 := mem[R31 + 0x280, el]:u64
0003dca7: VF := 0
0003dcaa: CF := 1
0003dcae: ZF := R0 = 0
0003dcb2: NF := 63:63[R0]
0003dcb8: when ZF goto %0003dcb6
00045ebe: goto %0003e59f

0003e59f:
0003e5a4: R0 := mem[R31 + 0x2E0, el]:u64
0003e5ab: R0 := pad:64[mem[R0]]
0003e5b0: VF := 0
0003e5b3: CF := 1
0003e5b7: ZF := 31:0[R0] = 0
0003e5bb: NF := 31:31[R0]
0003e5c0: when ZF <> 1 goto %0003dcb6
00045ebf: goto %0003e5c4

0003e5c4:
0003e5c7: R2 := 0x32
0003e5ce: R1 := mem[R31 + 0x280, el]:u64
0003e5d5: R0 := mem[R31 + 0x2E0, el]:u64
0003e5da: R30 := 0x40B0B8
0003e5dc: call @strlcpy with return %0003dcb6

0003dcb6:
0003dcc0: R0 := mem[R31 + 0x280, el]:u64
0003dcc5: VF := 0
0003dcc8: CF := 1
0003dccc: ZF := R0 = 0
0003dcd0: NF := 63:63[R0]
0003dcd6: when ZF goto %0003dcd4
00045ec0: goto %0003e591

0003e591:
0003e596: R0 := mem[R31 + 0x280, el]:u64
0003e59b: R30 := 0x40B0CC
0003e59d: call @free with return %0003dcd4

0003dcd4:
0003dcde: mem := mem with [R31 + 0x278, el]:u64 <- 0
0003dce3: R0 := 0x41B000
0003dce9: R1 := R0 + 0x210
0003dcf0: R0 := mem[R31 + 0x348, el]:u64
0003dcf5: R30 := 0x40B0E0
0003dcf7: call @config_pop with return %0003dcf9

0003dcf9:
0003dcff: mem := mem with [R31 + 0x278, el]:u64 <- R0
0003dd06: R0 := mem[R31 + 0x278, el]:u64
0003dd0b: VF := 0
0003dd0e: CF := 1
0003dd12: ZF := R0 = 0
0003dd16: NF := 63:63[R0]
0003dd1c: when ZF goto %0003dd1a
00045ec1: goto %0003e552

0003e552:
0003e557: R0 := mem[R31 + 0x2D8, el]:u64
0003e55e: R0 := pad:64[mem[R0]]
0003e563: VF := 0
0003e566: CF := 1
0003e56a: ZF := 31:0[R0] = 0
0003e56e: NF := 31:31[R0]
0003e573: when ZF <> 1 goto %0003dd1a
00045ec2: goto %0003e577

0003e577:
0003e57a: R2 := 0x32
0003e581: R1 := mem[R31 + 0x278, el]:u64
0003e588: R0 := mem[R31 + 0x2D8, el]:u64
0003e58d: R30 := 0x40B110
0003e58f: call @strlcpy with return %0003dd1a

0003dd1a:
0003dd24: R0 := mem[R31 + 0x278, el]:u64
0003dd29: VF := 0
0003dd2c: CF := 1
0003dd30: ZF := R0 = 0
0003dd34: NF := 63:63[R0]
0003dd3a: when ZF goto %0003dd38
00045ec3: goto %0003e544

0003e544:
0003e549: R0 := mem[R31 + 0x278, el]:u64
0003e54e: R30 := 0x40B124
0003e550: call @free with return %0003dd38

0003dd38:
0003dd42: mem := mem with [R31 + 0x270, el]:u64 <- 0
0003dd47: R0 := 0x41B000
0003dd4d: R1 := R0 + 0x218
0003dd54: R0 := mem[R31 + 0x348, el]:u64
0003dd59: R30 := 0x40B138
0003dd5b: call @config_pop with return %0003dd5d

0003dd5d:
0003dd63: mem := mem with [R31 + 0x270, el]:u64 <- R0
0003dd6a: R0 := mem[R31 + 0x270, el]:u64
0003dd6f: VF := 0
0003dd72: CF := 1
0003dd76: ZF := R0 = 0
0003dd7a: NF := 63:63[R0]
0003dd80: when ZF goto %0003dd7e
00045ec4: goto %0003e505

0003e505:
0003e50a: R0 := mem[R31 + 0x300, el]:u64
0003e511: R0 := pad:64[mem[R0]]
0003e516: VF := 0
0003e519: CF := 1
0003e51d: ZF := 31:0[R0] = 0
0003e521: NF := 31:31[R0]
0003e526: when ZF <> 1 goto %0003dd7e
00045ec5: goto %0003e52a

0003e52a:
0003e52d: R2 := 0x32
0003e534: R1 := mem[R31 + 0x270, el]:u64
0003e53b: R0 := mem[R31 + 0x300, el]:u64
0003e540: R30 := 0x40B168
0003e542: call @strlcpy with return %0003dd7e

0003dd7e:
0003dd88: R0 := mem[R31 + 0x270, el]:u64
0003dd8d: VF := 0
0003dd90: CF := 1
0003dd94: ZF := R0 = 0
0003dd98: NF := 63:63[R0]
0003dd9e: when ZF goto %0003dd9c
00045ec6: goto %0003e4f7

0003e4f7:
0003e4fc: R0 := mem[R31 + 0x270, el]:u64
0003e501: R30 := 0x40B17C
0003e503: call @free with return %0003dd9c

0003dd9c:
0003dda6: mem := mem with [R31 + 0x268, el]:u64 <- 0
0003ddab: R0 := 0x41B000
0003ddb1: R1 := R0 + 0x228
0003ddb8: R0 := mem[R31 + 0x348, el]:u64
0003ddbd: R30 := 0x40B190
0003ddbf: call @config_pop with return %0003ddc1

0003ddc1:
0003ddc7: mem := mem with [R31 + 0x268, el]:u64 <- R0
0003ddce: R0 := mem[R31 + 0x268, el]:u64
0003ddd3: VF := 0
0003ddd6: CF := 1
0003ddda: ZF := R0 = 0
0003ddde: NF := 63:63[R0]
0003dde4: when ZF goto %0003dde2
00045ec7: goto %0003e4b8

0003e4b8:
0003e4bd: R0 := mem[R31 + 0x2D0, el]:u64
0003e4c4: R0 := pad:64[mem[R0]]
0003e4c9: VF := 0
0003e4cc: CF := 1
0003e4d0: ZF := 31:0[R0] = 0
0003e4d4: NF := 31:31[R0]
0003e4d9: when ZF <> 1 goto %0003dde2
00045ec8: goto %0003e4dd

0003e4dd:
0003e4e0: R2 := 0x32
0003e4e7: R1 := mem[R31 + 0x268, el]:u64
0003e4ee: R0 := mem[R31 + 0x2D0, el]:u64
0003e4f3: R30 := 0x40B1C0
0003e4f5: call @strlcpy with return %0003dde2

0003dde2:
0003ddec: R0 := mem[R31 + 0x268, el]:u64
0003ddf1: VF := 0
0003ddf4: CF := 1
0003ddf8: ZF := R0 = 0
0003ddfc: NF := 63:63[R0]
0003de02: when ZF goto %0003de00
00045ec9: goto %0003e4aa

0003e4aa:
0003e4af: R0 := mem[R31 + 0x268, el]:u64
0003e4b4: R30 := 0x40B1D4
0003e4b6: call @free with return %0003de00

0003de00:
0003de08: R0 := 0x32
0003de0d: R30 := 0x40B1DC
0003de0f: call @zmalloc with return %0003de11

0003de11:
0003de17: mem := mem with [R31 + 0x208, el]:u64 <- R0
0003de1e: mem := mem with [R31 + 0x260, el]:u64 <- 0
0003de23: R0 := 0x41B000
0003de29: R1 := R0 + 0x238
0003de30: R0 := mem[R31 + 0x348, el]:u64
0003de35: R30 := 0x40B1F4
0003de37: call @config_pop with return %0003de39

0003de39:
0003de3f: mem := mem with [R31 + 0x260, el]:u64 <- R0
0003de46: R0 := mem[R31 + 0x260, el]:u64
0003de4b: VF := 0
0003de4e: CF := 1
0003de52: ZF := R0 = 0
0003de56: NF := 63:63[R0]
0003de5c: when ZF goto %0003de5a
00045eca: goto %0003e46b

0003e46b:
0003e470: R0 := mem[R31 + 0x208, el]:u64
0003e477: R0 := pad:64[mem[R0]]
0003e47c: VF := 0
0003e47f: CF := 1
0003e483: ZF := 31:0[R0] = 0
0003e487: NF := 31:31[R0]
0003e48c: when ZF <> 1 goto %0003de5a
00045ecb: goto %0003e490

0003e490:
0003e495: R0 := mem[R31 + 0x208, el]:u64
0003e49a: R2 := 0x32
0003e4a1: R1 := mem[R31 + 0x260, el]:u64
0003e4a6: R30 := 0x40B224
0003e4a8: call @strlcpy with return %0003de5a

0003de5a:
0003de64: R0 := mem[R31 + 0x260, el]:u64
0003de69: VF := 0
0003de6c: CF := 1
0003de70: ZF := R0 = 0
0003de74: NF := 63:63[R0]
0003de7a: when ZF goto %0003de78
00045ecc: goto %0003e45d

0003e45d:
0003e462: R0 := mem[R31 + 0x260, el]:u64
0003e467: R30 := 0x40B238
0003e469: call @free with return %0003de78

0003de78:
0003de82: R0 := pad:64[mem[R31 + 0x360, el]:u32]
0003de87: VF := 0
0003de8a: CF := 1
0003de8e: ZF := 31:0[R0] = 0
0003de92: NF := 31:31[R0]
0003de98: when ZF <> 1 goto %0003de96
00045ecd: goto %0003e3b6

0003e3b6:
0003e3bb: R0 := mem[R31 + 0x208, el]:u64
0003e3c0: R2 := 0
0003e3c5: R1 := 0
0003e3ca: R30 := 0x40B254
0003e3cc: call @strtoul with return %0003e3ce

0003e3ce:
0003e3d2: R19 := pad:64[7:0[R0].0]
0003e3d9: R0 := mem[R31 + 0x208, el]:u64
0003e3de: R2 := 0
0003e3e3: R1 := 0
0003e3e8: R30 := 0x40B268
0003e3ea: call @strtoul with return %0003e3ec

0003e3ec:
0003e3f0: R0 := pad:64[23:0[R0].0]
0003e3f6: R0 := pad:64[23:16[R0].0]
0003e3fd: R19 := pad:64[31:0[R19] | 31:0[R0]]
0003e404: R0 := mem[R31 + 0x208, el]:u64
0003e409: R2 := 0
0003e40e: R1 := 0
0003e413: R30 := 0x40B284
0003e415: call @strtoul with return %0003e417

0003e417:
0003e41b: R0 := pad:64[31:8[R0]]
0003e421: R0 := pad:64[15:8[R0].0]
0003e428: R19 := pad:64[31:0[R19] | 31:0[R0]]
0003e42f: R0 := mem[R31 + 0x208, el]:u64
0003e434: R2 := 0
0003e439: R1 := 0
0003e43e: R30 := 0x40B2A0
0003e440: call @strtoul with return %0003e442

0003e442:
0003e446: R0 := pad:64[31:24[R0]]
0003e44c: R0 := pad:64[7:0[R0]]
0003e453: R0 := pad:64[31:0[R19] | 31:0[R0]]
0003e45b: mem := mem with [R31 + 0x360, el]:u32 <- 31:0[R0]
00045ece: goto %0003de96

0003de96:
0003dea0: R0 := mem[R31 + 0x208, el]:u64
0003dea5: R30 := 0x40B2B8
0003dea7: call @free with return %0003dea9

0003dea9:
0003deac: R0 := 0x32
0003deb1: R30 := 0x40B2C0
0003deb3: call @zmalloc with return %0003deb5

0003deb5:
0003debb: mem := mem with [R31 + 0x208, el]:u64 <- R0
0003dec2: mem := mem with [R31 + 0x258, el]:u64 <- 0
0003dec7: R0 := 0x41B000
0003decd: R1 := R0 + 0x240
0003ded4: R0 := mem[R31 + 0x348, el]:u64
0003ded9: R30 := 0x40B2D8
0003dedb: call @config_pop with return %0003dedd

0003dedd:
0003dee3: mem := mem with [R31 + 0x258, el]:u64 <- R0
0003deea: R0 := mem[R31 + 0x258, el]:u64
0003deef: VF := 0
0003def2: CF := 1
0003def6: ZF := R0 = 0
0003defa: NF := 63:63[R0]
0003df00: when ZF goto %0003defe
00045ecf: goto %0003e377

0003e377:
0003e37c: R0 := mem[R31 + 0x208, el]:u64
0003e383: R0 := pad:64[mem[R0]]
0003e388: VF := 0
0003e38b: CF := 1
0003e38f: ZF := 31:0[R0] = 0
0003e393: NF := 31:31[R0]
0003e398: when ZF <> 1 goto %0003defe
00045ed0: goto %0003e39c

0003e39c:
0003e3a1: R0 := mem[R31 + 0x208, el]:u64
0003e3a6: R2 := 0x32
0003e3ad: R1 := mem[R31 + 0x258, el]:u64
0003e3b2: R30 := 0x40B308
0003e3b4: call @strlcpy with return %0003defe

0003defe:
0003df08: R0 := mem[R31 + 0x258, el]:u64
0003df0d: VF := 0
0003df10: CF := 1
0003df14: ZF := R0 = 0
0003df18: NF := 63:63[R0]
0003df1e: when ZF goto %0003df1c
00045ed1: goto %0003e369

0003e369:
0003e36e: R0 := mem[R31 + 0x258, el]:u64
0003e373: R30 := 0x40B31C
0003e375: call @free with return %0003df1c

0003df1c:
0003df24: R0 := 0x430000
0003df2a: R0 := R0 + 0x3B0
0003df31: R0 := mem[R0, el]:u64
0003df36: VF := 0
0003df39: CF := 1
0003df3d: ZF := R0 = 0
0003df41: NF := 63:63[R0]
0003df47: when ZF <> 1 goto %0003df45
00045ed2: goto %0003e305

0003e305:
0003e30a: R0 := mem[R31 + 0x208, el]:u64
0003e311: R0 := pad:64[mem[R0]]
0003e316: VF := 0
0003e319: CF := 1
0003e31d: ZF := 31:0[R0] = 0
0003e321: NF := 31:31[R0]
0003e326: when ZF goto %0003df45
00045ed3: goto %0003e32a

0003e32a:
0003e32d: R0 := 0x430000
0003e333: R0 := R0 + 0x3AC
0003e338: R1 := 1
0003e340: mem := mem with [R0, el]:u32 <- 31:0[R1]
0003e347: R0 := mem[R31 + 0x208, el]:u64
0003e34c: R30 := 0x40B358
0003e34e: call @atoi with return %0003e350

0003e350:
0003e354: R1 := extend:64[31:0[R0]]
0003e359: R0 := 0x430000
0003e35f: R0 := R0 + 0x3B0
0003e367: mem := mem with [R0, el]:u64 <- R1
00045ed4: goto %0003df45

0003df45:
0003df4f: R0 := mem[R31 + 0x208, el]:u64
0003df54: R30 := 0x40B370
0003df56: call @free with return %0003df58

0003df58:
0003df5b: goto %0003df59

0003df59:
0003df5f: R0 := 0x41B000
0003df65: R1 := R0 + 0x250
0003df6c: R0 := mem[R31 + 0x348, el]:u64
0003df71: R30 := 0x40B3C0
0003df73: call @config_pop with return %0003df75

0003df75:
0003df7b: mem := mem with [R31 + 0x208, el]:u64 <- R0
0003df82: R0 := mem[R31 + 0x208, el]:u64
0003df87: VF := 0
0003df8a: CF := 1
0003df8e: ZF := R0 = 0
0003df92: NF := 63:63[R0]
0003df98: when ZF <> 1 goto %0003df96
00045ed5: goto %0003e007

0003e007:
0003e00a: goto %0003e008

0003e008:
0003e00e: R0 := 0x41B000
0003e014: R1 := R0 + 0x290
0003e01b: R0 := mem[R31 + 0x348, el]:u64
0003e020: R30 := 0x40B460
0003e022: call @config_pop with return %0003e024

0003e024:
0003e02a: mem := mem with [R31 + 0x208, el]:u64 <- R0
0003e031: R0 := mem[R31 + 0x208, el]:u64
0003e036: VF := 0
0003e039: CF := 1
0003e03d: ZF := R0 = 0
0003e041: NF := 63:63[R0]
0003e047: when ZF <> 1 goto %0003e045
00045ed6: goto %0003e115

0003e115:
0003e118: goto %0003e116

0003e116:
0003e11c: R0 := 0x41B000
0003e122: R1 := R0 + 0x2A0
0003e129: R0 := mem[R31 + 0x348, el]:u64
0003e12e: R30 := 0x40B538
0003e130: call @config_pop with return %0003e132

0003e132:
0003e138: mem := mem with [R31 + 0x208, el]:u64 <- R0
0003e13f: R0 := mem[R31 + 0x208, el]:u64
0003e144: VF := 0
0003e147: CF := 1
0003e14b: ZF := R0 = 0
0003e14f: NF := 63:63[R0]
0003e155: when ZF <> 1 goto %0003e153
00045ed7: goto %0003e28c

0003e28c:
0003e291: R0 := mem[R31 + 0x348, el]:u64
0003e298: R0 := mem[R0, el]:u64
0003e2a0: mem := mem with [R31 + 0x388, el]:u64 <- R0
0003e2a5: goto %0003e2a3

0003e2a3:
0003e2ab: R0 := mem[R31 + 0x388, el]:u64
0003e2b0: VF := 0
0003e2b3: CF := 1
0003e2b7: ZF := R0 = 0
0003e2bb: NF := 63:63[R0]
0003e2c1: when ZF <> 1 goto %0003e2bf
00045ed8: goto %0003aafd

0003aafd:
0003ab07: R0 := mem[R31 + 0x348, el]:u64
0003ab0c: R30 := 0x40B594
0003ab0e: call @config_close with return %0003ab10

0003ab10:
0003ab15: R0 := pad:64[mem[R31 + 0x33C, el]:u32]
0003ab1a: VF := 0
0003ab1d: CF := 1
0003ab21: ZF := 31:0[R0] = 0
0003ab25: NF := 31:31[R0]
0003ab2b: when ZF goto %0003ab29
00045ed9: goto %0003d58c

0003d58c:
0003d591: mem := mem with [R31 + 0x248, el]:u64 <- 0
0003d596: R0 := 0x41B000
0003d59c: R1 := R0 + 0x2D8
0003d5a3: R0 := mem[R31 + 0x308, el]:u64
0003d5a8: R30 := 0x40B5B4
0003d5aa: call @fopen with return %0003d5ac

0003d5ac:
0003d5b2: mem := mem with [R31 + 0x248, el]:u64 <- R0
0003d5b9: R0 := mem[R31 + 0x248, el]:u64
0003d5be: VF := 0
0003d5c1: CF := 1
0003d5c5: ZF := R0 = 0
0003d5c9: NF := 63:63[R0]
0003d5cf: when ZF <> 1 goto %0003d5cd
00045eda: goto %0003d5f2

0003d5f2:
0003d5f7: R2 := mem[R31 + 0x308, el]:u64
0003d5fc: R0 := 0x41B000
0003d602: R1 := R0 + 0x2E0
0003d607: R0 := 3
0003d60c: R30 := 0x40B5D8
0003d60e: call @syslog with return %0003d610

0003d610:
0003d613: R0 := 1
0003d618: R30 := 0x40B5E0
0003d61a: call @myexit with return %0003d5cd

0003d5cd:
0003d5d7: R0 := mem[R31 + 0x248, el]:u64
0003d5dc: R30 := 0x40B5E8
0003d5de: call @fclose with return %0003d5e0

0003d5e0:
0003d5e3: R0 := 0x430000
0003d5e9: R0 := R0 + 0x448
0003d5f0: mem := mem with [R0, el]:u32 <- 0
00045edb: goto %0003ab29

0003ab29:
0003ab33: R0 := pad:64[mem[R31 + 0x364, el]:u32]
0003ab38: VF := 0
0003ab3b: CF := 1
0003ab3f: ZF := 31:0[R0] = 0
0003ab43: NF := 31:31[R0]
0003ab49: when ZF <> 1 goto %0003ab47
00045edc: goto %0003d4ee

0003d4ee:
0003d4f1: R30 := 0x40B604
0003d4f3: call @parent_available with return %0003d4f5

0003d4f5:
0003d4f8: VF := 0
0003d4fb: CF := 1
0003d4ff: ZF := 31:0[R0] = 0
0003d503: NF := 31:31[R0]
0003d508: when ZF <> 1 goto %0003ab47
00045edd: goto %0003d50c

0003d50c:
0003d511: R0 := pad:64[mem[R31 + 0x33C, el]:u32]
0003d516: VF := 0
0003d519: CF := 1
0003d51d: ZF := 31:0[R0] = 0
0003d521: NF := 31:31[R0]
0003d526: when ZF <> 1 goto %0003ab47
00045ede: goto %0003d52a

0003d52a:
0003d52f: R0 := pad:64[mem[R31 + 0x368, el]:u32]
0003d534: VF := 0
0003d537: CF := 1
0003d53b: ZF := 31:0[R0] = 0
0003d53f: NF := 31:31[R0]
0003d545: when ZF <> 1 goto %0003d543
00045edf: goto %0003d56e

0003d56e:
0003d573: R0 := mem[R31 + 0x340, el]:u64
0003d578: VF := 0
0003d57b: CF := 1
0003d57f: ZF := R0 = 0
0003d583: NF := 63:63[R0]
0003d588: when ZF goto %0003d569
00045ee0: goto %0003d543

0003d569:
0003d56c: R0 := 0
00045ee1: goto %0003d54e

0003d543:
0003d54b: R0 := 1
0003d550: goto %0003d54e

0003d54e:
0003d555: R1 := pad:64[31:0[R0]]
0003d55a: R0 := 0x41B000
0003d560: R0 := R0 + 0x308
0003d565: R30 := 0x40B64C
0003d567: call @croak with return %0003ab47

0003ab47:
0003ab51: R0 := pad:64[mem[R31 + 0x364, el]:u32]
0003ab56: VF := 0
0003ab59: CF := 1
0003ab5d: ZF := 31:0[R0] = 0
0003ab61: NF := 31:31[R0]
0003ab67: when ZF <> 1 goto %0003ab65
00045ee2: goto %0003d499

0003d499:
0003d49e: R0 := mem[R31 + 0x340, el]:u64
0003d4a3: VF := 0
0003d4a6: CF := 1
0003d4aa: ZF := R0 = 0
0003d4ae: NF := 63:63[R0]
0003d4b3: when ZF <> 1 goto %0003ab65
00045ee3: goto %0003d4b7

0003d4b7:
0003d4bc: R0 := mem[R31 + 0x130, el]:u64
0003d4c1: VF := 0
0003d4c4: CF := 1
0003d4c8: ZF := R0 = 0
0003d4cc: NF := 63:63[R0]
0003d4d1: when ZF <> 1 goto %0003ab65
00045ee4: goto %0003d4d5

0003d4d5:
0003d4da: R1 := pad:64[mem[R31 + 0x368, el]:u32]
0003d4df: R0 := 0x41B000
0003d4e5: R0 := R0 + 0x328
0003d4ea: R30 := 0x40B680
0003d4ec: call @croak with return %0003ab65

0003ab65:
0003ab6f: R0 := mem[R31 + 0x2D0, el]:u64
0003ab76: R0 := pad:64[mem[R0]]
0003ab7b: VF := 0
0003ab7e: CF := 1
0003ab82: ZF := 31:0[R0] = 0
0003ab86: NF := 31:31[R0]
0003ab8c: when ZF <> 1 goto %0003ab8a
00045ee5: goto %0003d424

0003d424:
0003d427: R1 := 0x32
0003d42e: R0 := mem[R31 + 0x2D0, el]:u64
0003d433: R30 := 0x40B69C
0003d436: call @gethostname with return %0003d438

0003d438:
0003d43d: R0 := mem[R31 + 0x2D0, el]:u64
0003d444: R0 := pad:64[mem[R0]]
0003d449: VF := 0
0003d44c: CF := 1
0003d450: ZF := 31:0[R0] = 0
0003d454: NF := 31:31[R0]
0003d45a: when ZF <> 1 goto %0003d458
00045ee6: goto %0003d47b

0003d47b:
0003d47e: R2 := 0x32
0003d483: R0 := 0x41A000
0003d489: R1 := R0 + 0x2A0
0003d490: R0 := mem[R31 + 0x2D0, el]:u64
0003d495: R30 := 0x40B6C0
0003d497: call @strlcpy with return %0003d458

0003d458:
0003d462: R2 := mem[R31 + 0x2D0, el]:u64
0003d467: R0 := 0x41B000
0003d46d: R1 := R0 + 0x360
0003d472: R0 := 6
0003d477: R30 := 0x40B6D4
0003d479: call @syslog with return %0003ab8a

0003ab8a:
0003ab94: R0 := mem[R31 + 0x2B8, el]:u64
0003ab9b: R0 := pad:64[mem[R0]]
0003aba0: VF := 0
0003aba3: CF := 1
0003aba7: ZF := 31:0[R0] = 0
0003abab: NF := 31:31[R0]
0003abb1: when ZF goto %0003abaf
00045ee7: goto %0003d162

0003d162:
0003d167: R1 := mem[R31 + 0x2B8, el]:u64
0003d16c: R0 := 0x41B000
0003d172: R0 := R0 + 0x380
0003d177: R30 := 0x40B6F4
0003d179: call @strcasecmp with return %0003d17b

0003d17b:
0003d17e: VF := 0
0003d181: CF := 1
0003d185: ZF := 31:0[R0] = 0
0003d189: NF := 31:31[R0]
0003d18f: when ZF <> 1 goto %0003d18d
00045ee8: goto %0003d3c9

0003d18d:
0003d197: R1 := mem[R31 + 0x2B8, el]:u64
0003d19c: R0 := 0x41B000
0003d1a2: R0 := R0 + 0x388
0003d1a7: R30 := 0x40B748
0003d1a9: call @strcasecmp with return %0003d1ab

0003d1ab:
0003d1ae: VF := 0
0003d1b1: CF := 1
0003d1b5: ZF := 31:0[R0] = 0
0003d1b9: NF := 31:31[R0]
0003d1bf: when ZF <> 1 goto %0003d1bd
00045ee9: goto %0003d374

0003d1bd:
0003d1c7: R1 := mem[R31 + 0x2B8, el]:u64
0003d1cc: R0 := 0x41B000
0003d1d2: R0 := R0 + 0x390
0003d1d7: R30 := 0x40B798
0003d1d9: call @strcasecmp with return %0003d1db

0003d1db:
0003d1de: VF := 0
0003d1e1: CF := 1
0003d1e5: ZF := 31:0[R0] = 0
0003d1e9: NF := 31:31[R0]
0003d1ef: when ZF <> 1 goto %0003d1ed
00045eea: goto %0003d31f

0003d1ed:
0003d1f7: R1 := mem[R31 + 0x2B8, el]:u64
0003d1fc: R0 := 0x41B000
0003d202: R0 := R0 + 0x398
0003d207: R30 := 0x40B7E8
0003d209: call @strcasecmp with return %0003d20b

0003d20b:
0003d20e: VF := 0
0003d211: CF := 1
0003d215: ZF := 31:0[R0] = 0
0003d219: NF := 31:31[R0]
0003d21f: when ZF <> 1 goto %0003d21d
00045eeb: goto %0003d2ca

0003d21d:
0003d227: R1 := mem[R31 + 0x2B8, el]:u64
0003d22c: R0 := 0x41B000
0003d232: R0 := R0 + 0x3A0
0003d237: R30 := 0x40B838
0003d239: call @strcasecmp with return %0003d23b

0003d23b:
0003d23e: VF := 0
0003d241: CF := 1
0003d245: ZF := 31:0[R0] = 0
0003d249: NF := 31:31[R0]
0003d24f: when ZF <> 1 goto %0003d24d
00045eec: goto %0003d275

0003d24d:
0003d255: R0 := 0x41B000
0003d25b: R1 := R0 + 0x3A8
0003d260: R0 := 3
0003d265: R30 := 0x40B888
0003d267: call @syslog with return %0003d269

0003d269:
0003d26c: R0 := 1
0003d271: R30 := 0x40B890
0003d273: call @myexit with return %0003abaf

0003d275:
0003d278: R0 := 0x430000
0003d27e: R0 := R0 + 0x398
0003d285: R0 := mem[R0, el]:u64
0003d28a: R1 := 2
0003d292: mem := mem with [R0 + 0x130, el]:u32 <- 31:0[R1]
0003d297: R0 := 0x430000
0003d29d: R0 := R0 + 0x398
0003d2a4: R0 := mem[R0, el]:u64
0003d2ab: mem := mem with [R0 + 0x134, el]:u32 <- 0
0003d2b0: R0 := 0x430000
0003d2b6: R0 := R0 + 0x398
0003d2bd: R0 := mem[R0, el]:u64
0003d2c4: mem := mem with [R0 + 0x12C, el]:u32 <- 0
0003d2c8: goto %0003abaf

0003d2ca:
0003d2cd: R0 := 0x430000
0003d2d3: R0 := R0 + 0x398
0003d2da: R0 := mem[R0, el]:u64
0003d2e1: mem := mem with [R0 + 0x130, el]:u32 <- 0
0003d2e6: R0 := 0x430000
0003d2ec: R0 := R0 + 0x398
0003d2f3: R0 := mem[R0, el]:u64
0003d2fa: mem := mem with [R0 + 0x134, el]:u32 <- 0
0003d2ff: R0 := 0x430000
0003d305: R0 := R0 + 0x398
0003d30c: R0 := mem[R0, el]:u64
0003d311: R1 := 1
0003d319: mem := mem with [R0 + 0x12C, el]:u32 <- 31:0[R1]
0003d31d: goto %0003abaf

0003d31f:
0003d322: R0 := 0x430000
0003d328: R0 := R0 + 0x398
0003d32f: R0 := mem[R0, el]:u64
0003d336: mem := mem with [R0 + 0x130, el]:u32 <- 0
0003d33b: R0 := 0x430000
0003d341: R0 := R0 + 0x398
0003d348: R0 := mem[R0, el]:u64
0003d34d: R1 := 1
0003d355: mem := mem with [R0 + 0x134, el]:u32 <- 31:0[R1]
0003d35a: R0 := 0x430000
0003d360: R0 := R0 + 0x398
0003d367: R0 := mem[R0, el]:u64
0003d36e: mem := mem with [R0 + 0x12C, el]:u32 <- 0
0003d372: goto %0003abaf

0003d374:
0003d377: R0 := 0x430000
0003d37d: R0 := R0 + 0x398
0003d384: R0 := mem[R0, el]:u64
0003d389: R1 := 1
0003d391: mem := mem with [R0 + 0x130, el]:u32 <- 31:0[R1]
0003d396: R0 := 0x430000
0003d39c: R0 := R0 + 0x398
0003d3a3: R0 := mem[R0, el]:u64
0003d3aa: mem := mem with [R0 + 0x134, el]:u32 <- 0
0003d3af: R0 := 0x430000
0003d3b5: R0 := R0 + 0x398
0003d3bc: R0 := mem[R0, el]:u64
0003d3c3: mem := mem with [R0 + 0x12C, el]:u32 <- 0
0003d3c7: goto %0003abaf

0003d3c9:
0003d3cc: R0 := 0x430000
0003d3d2: R0 := R0 + 0x398
0003d3d9: R0 := mem[R0, el]:u64
0003d3de: R1 := 1
0003d3e6: mem := mem with [R0 + 0x130, el]:u32 <- 31:0[R1]
0003d3eb: R0 := 0x430000
0003d3f1: R0 := R0 + 0x398
0003d3f8: R0 := mem[R0, el]:u64
0003d3fd: R1 := 1
0003d405: mem := mem with [R0 + 0x134, el]:u32 <- 31:0[R1]
0003d40a: R0 := 0x430000
0003d410: R0 := R0 + 0x398
0003d417: R0 := mem[R0, el]:u64
0003d41e: mem := mem with [R0 + 0x12C, el]:u32 <- 0
0003d422: goto %0003abaf

0003abaf:
0003abb9: R0 := mem[R31 + 0x128, el]:u64
0003abbe: VF := 0
0003abc1: CF := 1
0003abc5: ZF := R0 = 0
0003abc9: NF := 63:63[R0]
0003abcf: when ZF goto %0003abcd
00045eed: goto %0003d122

0003d122:
0003d125: R0 := 0x430000
0003d12b: R0 := R0 + 0x430
0003d132: R0 := mem[R0, el]:u64
0003d137: VF := 0
0003d13a: CF := 1
0003d13e: ZF := R0 = 0
0003d142: NF := 63:63[R0]
0003d147: when ZF <> 1 goto %0003abcd
00045eee: goto %0003d14b

0003d14b:
0003d14e: R0 := 0x41B000
0003d154: R1 := R0 + 0x3C8
0003d159: R0 := 4
0003d15e: R30 := 0x40B8C0
0003d160: call @syslog with return %0003abcd

0003abcd:
0003abd7: R0 := mem[R31 + 0x340, el]:u64
0003abdc: VF := 0
0003abdf: CF := 1
0003abe3: ZF := R0 = 0
0003abe7: NF := 63:63[R0]
0003abed: when ZF <> 1 goto %0003abeb
00045eef: goto %0003d0ae

0003d0ae:
0003d0b1: R0 := 0x430000
0003d0b7: R0 := R0 + 0x398
0003d0be: R0 := mem[R0, el]:u64
0003d0c5: R1 := pad:64[mem[R0 + 0x12C, el]:u32]
0003d0ca: R0 := 0x430000
0003d0d0: R0 := R0 + 0x398
0003d0d7: R0 := mem[R0, el]:u64
0003d0de: R2 := pad:64[mem[R0 + 0x130, el]:u32]
0003d0e3: R0 := 0x430000
0003d0e9: R0 := R0 + 0x398
0003d0f0: R0 := mem[R0, el]:u64
0003d0f7: R0 := pad:64[mem[R0 + 0x134, el]:u32]
0003d0fd: R4 := pad:64[31:0[R0]]
0003d103: R3 := pad:64[31:0[R2]]
0003d109: R2 := pad:64[31:0[R1]]
0003d10e: R0 := 0x41B000
0003d114: R1 := R0 + 0x400
0003d119: R0 := 6
0003d11e: R30 := 0x40B918
0003d120: call @syslog with return %0003abeb

0003abeb:
0003abf5: R0 := pad:64[mem[R31 + 0x360, el]:u32]
0003abfa: VF := 0
0003abfd: CF := 1
0003ac01: ZF := 31:0[R0] = 0
0003ac05: NF := 31:31[R0]
0003ac0b: when ZF goto %0003ac09
00045ef0: goto %0003d01b

0003d01b:
0003d020: R0 := pad:64[mem[R31 + 0x360, el]:u32]
0003d026: R1 := pad:64[7:0[R0].0]
0003d02d: R0 := pad:64[mem[R31 + 0x360, el]:u32]
0003d033: R0 := pad:64[23:0[R0].0]
0003d039: R0 := pad:64[23:16[R0].0]
0003d040: R1 := pad:64[31:0[R1] | 31:0[R0]]
0003d047: R0 := pad:64[mem[R31 + 0x360, el]:u32]
0003d04d: R0 := pad:64[31:8[R0]]
0003d053: R0 := pad:64[15:8[R0].0]
0003d05a: R1 := pad:64[31:0[R1] | 31:0[R0]]
0003d061: R0 := pad:64[mem[R31 + 0x360, el]:u32]
0003d067: R0 := pad:64[31:24[R0]]
0003d06e: R0 := pad:64[31:0[R1] | 31:0[R0]]
0003d074: R2 := pad:64[31:0[R0]]
0003d079: R0 := 0x41B000
0003d07f: R1 := R0 + 0x438
0003d084: R0 := 6
0003d089: R30 := 0x40B96C
0003d08b: call @syslog with return %0003d08d

0003d08d:
0003d090: R0 := 0x430000
0003d096: R0 := R0 + 0x398
0003d09d: R0 := mem[R0, el]:u64
0003d0a4: R1 := pad:64[mem[R31 + 0x360, el]:u32]
0003d0ac: mem := mem with [R0 + 0x138, el]:u32 <- 31:0[R1]
00045ef1: goto %0003ac09

0003ac09:
0003ac13: R0 := pad:64[mem[R31 + 0x364, el]:u32]
0003ac18: VF := 0
0003ac1b: CF := 1
0003ac1f: ZF := 31:0[R0] = 0
0003ac23: NF := 31:31[R0]
0003ac29: when ZF <> 1 goto %0003ac27
00045ef2: goto %0003cfb6

0003cfb6:
0003cfbb: R0 := mem[R31 + 0x340, el]:u64
0003cfc0: VF := 0
0003cfc3: CF := 1
0003cfc7: ZF := R0 = 0
0003cfcb: NF := 63:63[R0]
0003cfd0: when ZF <> 1 goto %0003ac27
00045ef3: goto %0003cfd4

0003cfd4:
0003cfd9: R0 := pad:64[mem[R31 + 0x368, el]:u32]
0003cfde: VF := 0
0003cfe1: CF := 1
0003cfe5: ZF := 31:0[R0] = 0
0003cfe9: NF := 31:31[R0]
0003cfee: when ZF goto %0003ad88
00045ef4: goto %0003cff2

0003cff2:
0003cff5: R0 := 0x430000
0003cffb: R0 := R0 + 0x3A4
0003d002: R0 := pad:64[mem[R0, el]:u32]
0003d007: VF := 0
0003d00a: CF := 1
0003d00e: ZF := 31:0[R0] = 0
0003d012: NF := 31:31[R0]
0003d017: when ZF <> 1 goto %0003ad88
00045ef5: goto %0003ac27

0003ac27:
0003ac2f: R0 := 0x41B000
0003ac35: R0 := R0 + 0x458
0003ac3a: R30 := 0x40B9C4
0003ac3c: call @printf with return %0003ac3e

0003ac3e:
0003ac42: R0 := R31 + 0x1C8
0003ac48: R1 := R0
0003ac4d: R0 := 0
0003ac52: R30 := 0x40B9D4
0003ac55: call @tcgetattr with return %0003ac57

0003ac57:
0003ac5b: R0 := R31 + 0x188
0003ac61: R1 := R31 + 0x1C8
0003ac68: V0 := mem[R1, el]:u128
0003ac6d: V1 := mem[R1 + 0x10, el]:u128
0003ac75: mem := mem with [R0, el]:u128 <- V0
0003ac7b: mem := mem with [R0 + 0x10, el]:u128 <- V1
0003ac82: V0 := mem[R1 + 0x20, el]:u128
0003ac8a: mem := mem with [R0 + 0x20, el]:u128 <- V0
0003ac91: V0 := mem[R1 + 0x2C, el]:u128
0003ac99: mem := mem with [R0 + 0x2C, el]:u128 <- V0
0003aca0: R1 := pad:64[mem[R31 + 0x194, el]:u32]
0003aca5: R0 := 0xFFFFFFF6
0003acac: R0 := pad:64[31:0[R1] & 31:0[R0]]
0003acb4: mem := mem with [R31 + 0x194, el]:u32 <- 31:0[R0]
0003acba: R0 := R31 + 0x188
0003acc0: R2 := R0
0003acc5: R1 := 1
0003acca: R0 := 0
0003accf: R30 := 0x40BA18
0003acd2: call @tcsetattr with return %0003acd4

0003acd4:
0003acd7: R0 := 0x430000
0003acdd: R0 := R0 + 0x380
0003ace4: R0 := mem[R0, el]:u64
0003acea: R2 := R0
0003acef: R1 := 0x32
0003acf6: R0 := mem[R31 + 0x2F0, el]:u64
0003acfb: R30 := 0x40BA34
0003acfd: call @fgets with return %0003acff

0003acff:
0003ad05: mem := mem with [R31 + 0x208, el]:u64 <- R0
0003ad0b: R0 := R31 + 0x1C8
0003ad11: R2 := R0
0003ad16: R1 := 1
0003ad1b: R0 := 0
0003ad20: R30 := 0x40BA4C
0003ad22: call @tcsetattr with return %0003ad24

0003ad24:
0003ad29: R0 := mem[R31 + 0x2F0, el]:u64
0003ad2e: R30 := 0x40BA54
0003ad30: call @strlen with return %0003ad32

0003ad32:
0003ad36: R0 := pad:64[31:0[R0] - 1]
0003ad3e: mem := mem with [R31 + 0x384, el]:u32 <- 31:0[R0]
0003ad45: R0 := extend:64[mem[R31 + 0x384, el]:u32]
0003ad4c: R1 := mem[R31 + 0x2F0, el]:u64
0003ad53: R0 := R1 + R0
0003ad5a: R0 := pad:64[mem[R0]]
0003ad60: #476 := 31:0[R0] - 0xA
0003ad65: VF := extend:64[#476] <> extend:64[31:0[R0]] - 0xA
0003ad6a: CF := pad:64[#476] <> pad:64[31:0[R0]] + 0xFFFFFFF6
0003ad6e: ZF := #476 = 0
0003ad72: NF := 31:31[#476]
0003ad78: when ZF <> 1 goto %0003ad76
00045ef6: goto %0003cf37

0003cf37:
0003cf3c: R0 := extend:64[mem[R31 + 0x384, el]:u32]
0003cf43: R1 := mem[R31 + 0x2F0, el]:u64
0003cf4a: R0 := R1 + R0
0003cf51: mem := mem with [R0] <- 0
0003cf58: R0 := extend:64[mem[R31 + 0x384, el]:u32]
0003cf5e: R0 := R0 - 1
0003cf65: R1 := mem[R31 + 0x2F0, el]:u64
0003cf6c: R0 := R1 + R0
0003cf73: R0 := pad:64[mem[R0]]
0003cf79: #492 := 31:0[R0] - 0xD
0003cf7e: VF := extend:64[#492] <> extend:64[31:0[R0]] - 0xD
0003cf83: CF := pad:64[#492] <> pad:64[31:0[R0]] + 0xFFFFFFF3
0003cf87: ZF := #492 = 0
0003cf8b: NF := 31:31[#492]
0003cf90: when ZF <> 1 goto %0003ad76
00045ef7: goto %0003cf94

0003cf94:
0003cf99: R0 := extend:64[mem[R31 + 0x384, el]:u32]
0003cf9f: R0 := R0 - 1
0003cfa6: R1 := mem[R31 + 0x2F0, el]:u64
0003cfad: R0 := R1 + R0
0003cfb4: mem := mem with [R0] <- 0
00045ef8: goto %0003ad76

0003ad76:
0003ad7e: R0 := 0xA
0003ad83: R30 := 0x40BABC
0003ad86: call @putchar with return %0003ad88

0003ad88:
0003ad8d: R0 := mem[R31 + 0x2F0, el]:u64
0003ad94: R0 := pad:64[mem[R0]]
0003ad99: VF := 0
0003ad9c: CF := 1
0003ada0: ZF := 31:0[R0] = 0
0003ada4: NF := 31:31[R0]
0003adaa: when ZF <> 1 goto %0003ada8
00045ef9: goto %0003cbfa

0003ada8:
0003adb0: R0 := 0x430000
0003adb6: R0 := R0 + 0x398
0003adbd: R0 := mem[R0, el]:u64
0003adc4: R0 := pad:64[mem[R0 + 0x130, el]:u32]
0003adc9: VF := 0
0003adcc: CF := 1
0003add0: ZF := 31:0[R0] = 0
0003add4: NF := 31:31[R0]
0003adda: when ZF <> 1 goto %0003add8
00045efa: goto %0003cbbe

0003cbbe:
0003cbc3: R0 := mem[R31 + 0x340, el]:u64
0003cbc8: VF := 0
0003cbcb: CF := 1
0003cbcf: ZF := R0 = 0
0003cbd3: NF := 63:63[R0]
0003cbd8: when ZF <> 1 goto %0003add8
00045efb: goto %0003cbdc

0003cbdc:
0003cbe1: R0 := pad:64[mem[R31 + 0x364, el]:u32]
0003cbe6: VF := 0
0003cbe9: CF := 1
0003cbed: ZF := 31:0[R0] = 0
0003cbf1: NF := 31:31[R0]
0003cbf6: when ZF goto %0003ae2a
00045efc: goto %0003add8

0003add8:
0003ade2: R0 := mem[R31 + 0x2F0, el]:u64
0003ade7: R30 := 0x40BCA0
0003ade9: call @ntlm_hash_nt_password with return %0003adeb

0003adeb:
0003adf1: mem := mem with [R31 + 0x208, el]:u64 <- R0
0003adf6: R0 := 0x430000
0003adfc: R0 := R0 + 0x398
0003ae03: R0 := mem[R0, el]:u64
0003ae08: VF := 0
0003ae0b: CF := 1
0003ae0f: ZF := R0 = 0
0003ae13: NF := 63:63[R0]
0003ae19: when ZF goto %0003ae17
00045efd: goto %0003cb75

0003cb75:
0003cb7a: R0 := mem[R31 + 0x208, el]:u64
0003cb7f: VF := 0
0003cb82: CF := 1
0003cb86: ZF := R0 = 0
0003cb8a: NF := 63:63[R0]
0003cb8f: when ZF goto %0003ae17
00045efe: goto %0003cb93

0003cb93:
0003cb96: R0 := 0x430000
0003cb9c: R0 := R0 + 0x398
0003cba3: R0 := mem[R0, el]:u64
0003cba9: R0 := R0 + 0xC8
0003cbb0: R1 := mem[R31 + 0x208, el]:u64
0003cbb5: R2 := 0x15
0003cbba: R30 := 0x40BCE0
0003cbbc: call @memcpy with return %0003ae17

0003ae17:
0003ae21: R0 := mem[R31 + 0x208, el]:u64
0003ae26: R30 := 0x40BCE8
0003ae28: call @free with return %0003ae2a

0003ae2a:
0003ae2d: R0 := 0x430000
0003ae33: R0 := R0 + 0x398
0003ae3a: R0 := mem[R0, el]:u64
0003ae41: R0 := pad:64[mem[R0 + 0x134, el]:u32]
0003ae46: VF := 0
0003ae49: CF := 1
0003ae4d: ZF := 31:0[R0] = 0
0003ae51: NF := 31:31[R0]
0003ae57: when ZF <> 1 goto %0003ae55
00045eff: goto %0003cb39

0003cb39:
0003cb3e: R0 := mem[R31 + 0x340, el]:u64
0003cb43: VF := 0
0003cb46: CF := 1
0003cb4a: ZF := R0 = 0
0003cb4e: NF := 63:63[R0]
0003cb53: when ZF <> 1 goto %0003ae55
00045f00: goto %0003cb57

0003cb57:
0003cb5c: R0 := pad:64[mem[R31 + 0x364, el]:u32]
0003cb61: VF := 0
0003cb64: CF := 1
0003cb68: ZF := 31:0[R0] = 0
0003cb6c: NF := 31:31[R0]
0003cb71: when ZF goto %0003aea7
00045f01: goto %0003ae55

0003ae55:
0003ae5f: R0 := mem[R31 + 0x2F0, el]:u64
0003ae64: R30 := 0x40BD20
0003ae66: call @ntlm_hash_lm_password with return %0003ae68

0003ae68:
0003ae6e: mem := mem with [R31 + 0x208, el]:u64 <- R0
0003ae73: R0 := 0x430000
0003ae79: R0 := R0 + 0x398
0003ae80: R0 := mem[R0, el]:u64
0003ae85: VF := 0
0003ae88: CF := 1
0003ae8c: ZF := R0 = 0
0003ae90: NF := 63:63[R0]
0003ae96: when ZF goto %0003ae94
00045f02: goto %0003caf0

0003caf0:
0003caf5: R0 := mem[R31 + 0x208, el]:u64
0003cafa: VF := 0
0003cafd: CF := 1
0003cb01: ZF := R0 = 0
0003cb05: NF := 63:63[R0]
0003cb0a: when ZF goto %0003ae94
00045f03: goto %0003cb0e

0003cb0e:
0003cb11: R0 := 0x430000
0003cb17: R0 := R0 + 0x398
0003cb1e: R0 := mem[R0, el]:u64
0003cb24: R0 := R0 + 0x96
0003cb2b: R1 := mem[R31 + 0x208, el]:u64
0003cb30: R2 := 0x15
0003cb35: R30 := 0x40BD60
0003cb37: call @memcpy with return %0003ae94

0003ae94:
0003ae9e: R0 := mem[R31 + 0x208, el]:u64
0003aea3: R30 := 0x40BD68
0003aea5: call @free with return %0003aea7

0003aea7:
0003aeaa: R0 := 0x430000
0003aeb0: R0 := R0 + 0x398
0003aeb7: R0 := mem[R0, el]:u64
0003aebe: R0 := pad:64[mem[R0 + 0x12C, el]:u32]
0003aec3: VF := 0
0003aec6: CF := 1
0003aeca: ZF := 31:0[R0] = 0
0003aece: NF := 31:31[R0]
0003aed4: when ZF <> 1 goto %0003aed2
00045f04: goto %0003cab4

0003cab4:
0003cab9: R0 := mem[R31 + 0x340, el]:u64
0003cabe: VF := 0
0003cac1: CF := 1
0003cac5: ZF := R0 = 0
0003cac9: NF := 63:63[R0]
0003cace: when ZF <> 1 goto %0003aed2
00045f05: goto %0003cad2

0003cad2:
0003cad7: R0 := pad:64[mem[R31 + 0x364, el]:u32]
0003cadc: VF := 0
0003cadf: CF := 1
0003cae3: ZF := 31:0[R0] = 0
0003cae7: NF := 31:31[R0]
0003caec: when ZF goto %0003af32
00045f06: goto %0003aed2

0003aed2:
0003aedc: R2 := mem[R31 + 0x2F0, el]:u64
0003aee3: R1 := mem[R31 + 0x2F8, el]:u64
0003aeea: R0 := mem[R31 + 0x300, el]:u64
0003aeef: R30 := 0x40BDA8
0003aef1: call @ntlm2_hash_password with return %0003aef3

0003aef3:
0003aef9: mem := mem with [R31 + 0x208, el]:u64 <- R0
0003aefe: R0 := 0x430000
0003af04: R0 := R0 + 0x398
0003af0b: R0 := mem[R0, el]:u64
0003af10: VF := 0
0003af13: CF := 1
0003af17: ZF := R0 = 0
0003af1b: NF := 63:63[R0]
0003af21: when ZF goto %0003af1f
00045f07: goto %0003ca59

0003ca59:
0003ca5e: R0 := mem[R31 + 0x208, el]:u64
0003ca63: VF := 0
0003ca66: CF := 1
0003ca6a: ZF := R0 = 0
0003ca6e: NF := 63:63[R0]
0003ca73: when ZF goto %0003af1f
00045f08: goto %0003ca77

0003ca77:
0003ca7a: R0 := 0x430000
0003ca80: R0 := R0 + 0x398
0003ca87: R0 := mem[R0, el]:u64
0003ca8d: R2 := R0 + 0xFA
0003ca94: R0 := mem[R31 + 0x208, el]:u64
0003ca9b: #488 := mem[R0 + 8, el]:u64
0003caa0: R0 := mem[R0, el]:u64
0003caa4: R1 := #488
0003caac: mem := mem with [R2, el]:u64 <- R0
0003cab2: mem := mem with [R2 + 8, el]:u64 <- R1
00045f09: goto %0003af1f

0003af1f:
0003af29: R0 := mem[R31 + 0x208, el]:u64
0003af2e: R30 := 0x40BDF0
0003af30: call @free with return %0003af32

0003af32:
0003af37: R0 := mem[R31 + 0x2F0, el]:u64
0003af3c: R30 := 0x40BDF8
0003af3e: call @strlen with return %0003af40

0003af40:
0003af44: R2 := R0
0003af49: R1 := 0
0003af50: R0 := mem[R31 + 0x2F0, el]:u64
0003af55: R30 := 0x40BE08
0003af57: call @memset with return %0003af59

0003cbfa:
0003cbff: R0 := mem[R31 + 0x2E8, el]:u64
0003cc06: R0 := pad:64[mem[R0]]
0003cc0b: VF := 0
0003cc0e: CF := 1
0003cc12: ZF := 31:0[R0] = 0
0003cc16: NF := 31:31[R0]
0003cc1c: when ZF goto %0003cc1a
00045f0a: goto %0003ce49

0003ce49:
0003ce4c: R1 := 8
0003ce53: R0 := mem[R31 + 0x2E8, el]:u64
0003ce58: R30 := 0x40BAE8
0003ce5a: call @scanmem with return %0003ce5c

0003ce5c:
0003ce62: mem := mem with [R31 + 0x208, el]:u64 <- R0
0003ce69: R0 := mem[R31 + 0x208, el]:u64
0003ce6e: VF := 0
0003ce71: CF := 1
0003ce75: ZF := R0 = 0
0003ce79: NF := 63:63[R0]
0003ce7f: when ZF <> 1 goto %0003ce7d
00045f0b: goto %0003cf14

0003cf14:
0003cf17: R0 := 0x41B000
0003cf1d: R1 := R0 + 0x468
0003cf22: R0 := 3
0003cf27: R30 := 0x40BB08
0003cf29: call @syslog with return %0003cf2b

0003cf2b:
0003cf2e: R0 := 1
0003cf33: R30 := 0x40BB10
0003cf35: call @exit with return %0003ce7d

0003ce7d:
0003ce85: R0 := 0x430000
0003ce8b: R0 := R0 + 0x398
0003ce92: R0 := mem[R0, el]:u64
0003ce97: VF := 0
0003ce9a: CF := 1
0003ce9e: ZF := R0 = 0
0003cea2: NF := 63:63[R0]
0003cea8: when ZF goto %0003cea6
00045f0c: goto %0003ceb9

0003ceb9:
0003cebe: R0 := mem[R31 + 0x208, el]:u64
0003cec3: VF := 0
0003cec6: CF := 1
0003ceca: ZF := R0 = 0
0003cece: NF := 63:63[R0]
0003ced3: when ZF goto %0003cea6
00045f0d: goto %0003ced7

0003ced7:
0003ceda: R0 := 0x430000
0003cee0: R0 := R0 + 0x398
0003cee7: R0 := mem[R0, el]:u64
0003ceed: R2 := R0 + 0xFA
0003cef4: R0 := mem[R31 + 0x208, el]:u64
0003cefb: #491 := mem[R0 + 8, el]:u64
0003cf00: R0 := mem[R0, el]:u64
0003cf04: R1 := #491
0003cf0c: mem := mem with [R2, el]:u64 <- R0
0003cf12: mem := mem with [R2 + 8, el]:u64 <- R1
00045f0e: goto %0003cea6

0003cea6:
0003ceb0: R0 := mem[R31 + 0x208, el]:u64
0003ceb5: R30 := 0x40BB54
0003ceb7: call @free with return %0003cc1a

0003cc1a:
0003cc24: R0 := mem[R31 + 0x2E0, el]:u64
0003cc2b: R0 := pad:64[mem[R0]]
0003cc30: VF := 0
0003cc33: CF := 1
0003cc37: ZF := 31:0[R0] = 0
0003cc3b: NF := 31:31[R0]
0003cc41: when ZF goto %0003cc3f
00045f0f: goto %0003cd5b

0003cd5b:
0003cd5e: R1 := 8
0003cd65: R0 := mem[R31 + 0x2E0, el]:u64
0003cd6a: R30 := 0x40BB70
0003cd6c: call @scanmem with return %0003cd6e

0003cd6e:
0003cd74: mem := mem with [R31 + 0x208, el]:u64 <- R0
0003cd7b: R0 := mem[R31 + 0x208, el]:u64
0003cd80: VF := 0
0003cd83: CF := 1
0003cd87: ZF := R0 = 0
0003cd8b: NF := 63:63[R0]
0003cd91: when ZF <> 1 goto %0003cd8f
00045f10: goto %0003ce26

0003ce26:
0003ce29: R0 := 0x41B000
0003ce2f: R1 := R0 + 0x490
0003ce34: R0 := 3
0003ce39: R30 := 0x40BB90
0003ce3b: call @syslog with return %0003ce3d

0003ce3d:
0003ce40: R0 := 1
0003ce45: R30 := 0x40BB98
0003ce47: call @exit with return %0003cd8f

0003cd8f:
0003cd97: R0 := 0x430000
0003cd9d: R0 := R0 + 0x398
0003cda4: R0 := mem[R0, el]:u64
0003cda9: VF := 0
0003cdac: CF := 1
0003cdb0: ZF := R0 = 0
0003cdb4: NF := 63:63[R0]
0003cdba: when ZF goto %0003cdb8
00045f11: goto %0003cdcb

0003cdcb:
0003cdd0: R0 := mem[R31 + 0x208, el]:u64
0003cdd5: VF := 0
0003cdd8: CF := 1
0003cddc: ZF := R0 = 0
0003cde0: NF := 63:63[R0]
0003cde5: when ZF goto %0003cdb8
00045f12: goto %0003cde9

0003cde9:
0003cdec: R0 := 0x430000
0003cdf2: R0 := R0 + 0x398
0003cdf9: R0 := mem[R0, el]:u64
0003cdff: R2 := R0 + 0xC8
0003ce06: R0 := mem[R31 + 0x208, el]:u64
0003ce0d: #490 := mem[R0 + 8, el]:u64
0003ce12: R0 := mem[R0, el]:u64
0003ce16: R1 := #490
0003ce1e: mem := mem with [R2, el]:u64 <- R0
0003ce24: mem := mem with [R2 + 8, el]:u64 <- R1
00045f13: goto %0003cdb8

0003cdb8:
0003cdc2: R0 := mem[R31 + 0x208, el]:u64
0003cdc7: R30 := 0x40BBDC
0003cdc9: call @free with return %0003cc3f

0003cc3f:
0003cc49: R0 := mem[R31 + 0x2D8, el]:u64
0003cc50: R0 := pad:64[mem[R0]]
0003cc55: VF := 0
0003cc58: CF := 1
0003cc5c: ZF := 31:0[R0] = 0
0003cc60: NF := 31:31[R0]
0003cc65: when ZF goto %0003af59
00045f14: goto %0003cc69

0003cc69:
0003cc6c: R1 := 8
0003cc73: R0 := mem[R31 + 0x2D8, el]:u64
0003cc78: R30 := 0x40BBF8
0003cc7a: call @scanmem with return %0003cc7c

0003cc7c:
0003cc82: mem := mem with [R31 + 0x208, el]:u64 <- R0
0003cc89: R0 := mem[R31 + 0x208, el]:u64
0003cc8e: VF := 0
0003cc91: CF := 1
0003cc95: ZF := R0 = 0
0003cc99: NF := 63:63[R0]
0003cc9f: when ZF <> 1 goto %0003cc9d
00045f15: goto %0003cd38

0003cd38:
0003cd3b: R0 := 0x41B000
0003cd41: R1 := R0 + 0x4B8
0003cd46: R0 := 3
0003cd4b: R30 := 0x40BC18
0003cd4d: call @syslog with return %0003cd4f

0003cd4f:
0003cd52: R0 := 1
0003cd57: R30 := 0x40BC20
0003cd59: call @exit with return %0003cc9d

0003cc9d:
0003cca5: R0 := 0x430000
0003ccab: R0 := R0 + 0x398
0003ccb2: R0 := mem[R0, el]:u64
0003ccb7: VF := 0
0003ccba: CF := 1
0003ccbe: ZF := R0 = 0
0003ccc2: NF := 63:63[R0]
0003ccc8: when ZF goto %0003ccc6
00045f16: goto %0003ccdd

0003ccdd:
0003cce2: R0 := mem[R31 + 0x208, el]:u64
0003cce7: VF := 0
0003ccea: CF := 1
0003ccee: ZF := R0 = 0
0003ccf2: NF := 63:63[R0]
0003ccf7: when ZF goto %0003ccc6
00045f17: goto %0003ccfb

0003ccfb:
0003ccfe: R0 := 0x430000
0003cd04: R0 := R0 + 0x398
0003cd0b: R0 := mem[R0, el]:u64
0003cd11: R2 := R0 + 0x96
0003cd18: R0 := mem[R31 + 0x208, el]:u64
0003cd1f: #489 := mem[R0 + 8, el]:u64
0003cd24: R0 := mem[R0, el]:u64
0003cd28: R1 := #489
0003cd30: mem := mem with [R2, el]:u64 <- R0
0003cd36: mem := mem with [R2 + 8, el]:u64 <- R1
00045f18: goto %0003ccc6

0003ccc6:
0003ccd0: R0 := mem[R31 + 0x208, el]:u64
0003ccd5: R30 := 0x40BC64
0003ccd7: call @free with return %0003ccd9

0003ccd9:
0003ccdb: goto %0003af59

0003af59:
0003af5c: R0 := 0x430000
0003af62: R0 := R0 + 0x398
0003af69: R0 := mem[R0, el]:u64
0003af6e: VF := 0
0003af71: CF := 1
0003af75: ZF := R0 = 0
0003af79: NF := 63:63[R0]
0003af7f: when ZF goto %0003af7d
00045f19: goto %0003ca16

0003ca16:
0003ca1b: R0 := mem[R31 + 0x300, el]:u64
0003ca20: VF := 0
0003ca23: CF := 1
0003ca27: ZF := R0 = 0
0003ca2b: NF := 63:63[R0]
0003ca30: when ZF goto %0003af7d
00045f1a: goto %0003ca34

0003ca34:
0003ca37: R0 := 0x430000
0003ca3d: R0 := R0 + 0x398
0003ca44: R0 := mem[R0, el]:u64
0003ca49: R2 := 0x32
0003ca50: R1 := mem[R31 + 0x300, el]:u64
0003ca55: R30 := 0x40BE40
0003ca57: call @strlcpy with return %0003af7d

0003af7d:
0003af85: R0 := 0x430000
0003af8b: R0 := R0 + 0x398
0003af92: R0 := mem[R0, el]:u64
0003af97: VF := 0
0003af9a: CF := 1
0003af9e: ZF := R0 = 0
0003afa2: NF := 63:63[R0]
0003afa8: when ZF goto %0003afa6
00045f1b: goto %0003c9cd

0003c9cd:
0003c9d2: R0 := mem[R31 + 0x2F8, el]:u64
0003c9d7: VF := 0
0003c9da: CF := 1
0003c9de: ZF := R0 = 0
0003c9e2: NF := 63:63[R0]
0003c9e7: when ZF goto %0003afa6
00045f1c: goto %0003c9eb

0003c9eb:
0003c9ee: R0 := 0x430000
0003c9f4: R0 := R0 + 0x398
0003c9fb: R0 := mem[R0, el]:u64
0003ca01: R0 := R0 + 0x32
0003ca06: R2 := 0x32
0003ca0d: R1 := mem[R31 + 0x2F8, el]:u64
0003ca12: R30 := 0x40BE7C
0003ca14: call @strlcpy with return %0003afa6

0003afa6:
0003afae: R0 := 0x430000
0003afb4: R0 := R0 + 0x398
0003afbb: R0 := mem[R0, el]:u64
0003afc0: VF := 0
0003afc3: CF := 1
0003afc7: ZF := R0 = 0
0003afcb: NF := 63:63[R0]
0003afd1: when ZF goto %0003afcf
00045f1d: goto %0003c984

0003c984:
0003c989: R0 := mem[R31 + 0x2D0, el]:u64
0003c98e: VF := 0
0003c991: CF := 1
0003c995: ZF := R0 = 0
0003c999: NF := 63:63[R0]
0003c99e: when ZF goto %0003afcf
00045f1e: goto %0003c9a2

0003c9a2:
0003c9a5: R0 := 0x430000
0003c9ab: R0 := R0 + 0x398
0003c9b2: R0 := mem[R0, el]:u64
0003c9b8: R0 := R0 + 0x64
0003c9bd: R2 := 0x32
0003c9c4: R1 := mem[R31 + 0x2D0, el]:u64
0003c9c9: R30 := 0x40BEB8
0003c9cb: call @strlcpy with return %0003afcf

0003afcf:
0003afd9: R0 := mem[R31 + 0x300, el]:u64
0003afde: R30 := 0x40BEC0
0003afe0: call @free with return %0003afe2

0003afe2:
0003afe7: R0 := mem[R31 + 0x2F8, el]:u64
0003afec: R30 := 0x40BEC8
0003afee: call @free with return %0003aff0

0003aff0:
0003aff5: R0 := mem[R31 + 0x2D0, el]:u64
0003affa: R30 := 0x40BED0
0003affc: call @free with return %0003affe

0003affe:
0003b003: R0 := mem[R31 + 0x2F0, el]:u64
0003b008: R30 := 0x40BED8
0003b00a: call @free with return %0003b00c

0003b00c:
0003b011: R0 := mem[R31 + 0x2E8, el]:u64
0003b016: R30 := 0x40BEE0
0003b018: call @free with return %0003b01a

0003b01a:
0003b01f: R0 := mem[R31 + 0x2E0, el]:u64
0003b024: R30 := 0x40BEE8
0003b026: call @free with return %0003b028

0003b028:
0003b02d: R0 := mem[R31 + 0x2D8, el]:u64
0003b032: R30 := 0x40BEF0
0003b034: call @free with return %0003b036

0003b036:
0003b03b: R0 := mem[R31 + 0x2B8, el]:u64
0003b040: R30 := 0x40BEF8
0003b042: call @free with return %0003b044

0003b044:
0003b049: R0 := mem[R31 + 0x340, el]:u64
0003b04e: VF := 0
0003b051: CF := 1
0003b055: ZF := R0 = 0
0003b059: NF := 63:63[R0]
0003b05f: when ZF goto %0003b05d
00045f1f: goto %0003c972

0003b05d:
0003b067: R0 := pad:64[mem[R31 + 0x364, el]:u32]
0003b06c: VF := 0
0003b06f: CF := 1
0003b073: ZF := 31:0[R0] = 0
0003b077: NF := 31:31[R0]
0003b07d: when ZF goto %0003b07b
00045f20: goto %0003c773

0003b07b:
0003b083: R0 := 0x430000
0003b089: R0 := R0 + 0x3A4
0003b090: R0 := pad:64[mem[R0, el]:u32]
0003b095: VF := 0
0003b098: CF := 1
0003b09c: ZF := 31:0[R0] = 0
0003b0a0: NF := 31:31[R0]
0003b0a6: when ZF <> 1 goto %0003b0a4
00045f21: goto %0003c60f

0003c60f:
0003c612: R0 := 0x430000
0003c618: R0 := R0 + 0x398
0003c61f: R0 := mem[R0, el]:u64
0003c626: R0 := pad:64[mem[R0 + 0x130, el]:u32]
0003c62b: VF := 0
0003c62e: CF := 1
0003c632: ZF := 31:0[R0] = 0
0003c636: NF := 31:31[R0]
0003c63c: when ZF goto %0003c63a
00045f22: goto %0003c738

0003c738:
0003c73b: R0 := 0x430000
0003c741: R0 := R0 + 0x398
0003c748: R0 := mem[R0, el]:u64
0003c74e: R0 := R0 + 0xC8
0003c753: R1 := 0x32
0003c758: R30 := 0x40C098
0003c75a: call @is_memory_all_zero with return %0003c75c

0003c75c:
0003c75f: VF := 0
0003c762: CF := 1
0003c766: ZF := 31:0[R0] = 0
0003c76a: NF := 31:31[R0]
0003c76f: when ZF <> 1 goto %0003c6da
00045f23: goto %0003c63a

0003c63a:
0003c642: R0 := 0x430000
0003c648: R0 := R0 + 0x398
0003c64f: R0 := mem[R0, el]:u64
0003c656: R0 := pad:64[mem[R0 + 0x134, el]:u32]
0003c65b: VF := 0
0003c65e: CF := 1
0003c662: ZF := 31:0[R0] = 0
0003c666: NF := 31:31[R0]
0003c66c: when ZF goto %0003c66a
00045f24: goto %0003c6fd

0003c6fd:
0003c700: R0 := 0x430000
0003c706: R0 := R0 + 0x398
0003c70d: R0 := mem[R0, el]:u64
0003c713: R0 := R0 + 0x96
0003c718: R1 := 0x32
0003c71d: R30 := 0x40C0D0
0003c71f: call @is_memory_all_zero with return %0003c721

0003c721:
0003c724: VF := 0
0003c727: CF := 1
0003c72b: ZF := 31:0[R0] = 0
0003c72f: NF := 31:31[R0]
0003c734: when ZF <> 1 goto %0003c6da
00045f25: goto %0003c66a

0003c66a:
0003c672: R0 := 0x430000
0003c678: R0 := R0 + 0x398
0003c67f: R0 := mem[R0, el]:u64
0003c686: R0 := pad:64[mem[R0 + 0x12C, el]:u32]
0003c68b: VF := 0
0003c68e: CF := 1
0003c692: ZF := 31:0[R0] = 0
0003c696: NF := 31:31[R0]
0003c69b: when ZF goto %0003b0a4
00045f26: goto %0003c69f

0003c69f:
0003c6a2: R0 := 0x430000
0003c6a8: R0 := R0 + 0x398
0003c6af: R0 := mem[R0, el]:u64
0003c6b5: R0 := R0 + 0xFA
0003c6ba: R1 := 0x32
0003c6bf: R30 := 0x40C108
0003c6c1: call @is_memory_all_zero with return %0003c6c3

0003c6c3:
0003c6c6: VF := 0
0003c6c9: CF := 1
0003c6cd: ZF := 31:0[R0] = 0
0003c6d1: NF := 31:31[R0]
0003c6d6: when ZF goto %0003b0a4
00045f27: goto %0003c6da

0003c6da:
0003c6dd: R0 := 0x41B000
0003c6e3: R1 := R0 + 0x550
0003c6e8: R0 := 3
0003c6ed: R30 := 0x40C120
0003c6ef: call @syslog with return %0003c6f1

0003c6f1:
0003c6f4: R0 := 1
0003c6f9: R30 := 0x40C128
0003c6fb: call @myexit with return %0003b0a4

0003b0a4:
0003b0ae: R0 := pad:64[mem[R31 + 0x35C, el]:u32]
0003b0b3: VF := 0
0003b0b6: CF := 1
0003b0ba: ZF := 31:0[R0] = 0
0003b0be: NF := 31:31[R0]
0003b0c4: when ZF goto %0003b0c2
00045f28: goto %0003c449

0003c449:
0003c44c: R0 := 0x430000
0003c452: R0 := R0 + 0x390
0003c459: R0 := pad:64[mem[R0, el]:u32]
0003c45e: VF := 0
0003c461: CF := 1
0003c465: ZF := 31:0[R0] = 0
0003c469: NF := 31:31[R0]
0003c46f: when ZF goto %0003c46d
00045f29: goto %0003c5fd

0003c5fd:
0003c600: R0 := 0x41B000
0003c606: R0 := R0 + 0x590
0003c60b: R30 := 0x40C154
0003c60d: call @puts with return %0003c46d

0003c46d:
0003c475: R30 := 0x40C158
0003c478: call @fork with return %0003c47a

0003c47a:
0003c480: mem := mem with [R31 + 0x384, el]:u32 <- 31:0[R0]
0003c487: R0 := pad:64[mem[R31 + 0x384, el]:u32]
0003c48d: #486 := 31:0[R0] + 1
0003c492: VF := extend:64[#486] <> extend:64[31:0[R0]] + 1
0003c497: CF := pad:64[#486] <> pad:64[31:0[R0]] + 1
0003c49b: ZF := #486 = 0
0003c49f: NF := 31:31[#486]
0003c4a5: when ZF <> 1 goto %0003c4a3
00045f2a: goto %0003c5df

0003c5df:
0003c5e2: R0 := 0x41B000
0003c5e8: R0 := R0 + 0x5B8
0003c5ed: R30 := 0x40C174
0003c5ef: call @perror with return %0003c5f1

0003c5f1:
0003c5f4: R0 := 1
0003c5f9: R30 := 0x40C17C
0003c5fb: call @myexit with return %0003c4a3

0003c4a3:
0003c4ad: R0 := pad:64[mem[R31 + 0x384, el]:u32]
0003c4b2: VF := 0
0003c4b5: CF := 1
0003c4b9: ZF := 31:0[R0] = 0
0003c4bd: NF := 31:31[R0]
0003c4c3: when ZF goto %0003c4c1
00045f2b: goto %0003c5d3

0003c5d3:
0003c5d6: R0 := 0
0003c5db: R30 := 0x40C190
0003c5dd: call @myexit with return %0003c4c1

0003c4c1:
0003c4c9: R30 := 0x40C194
0003c4cc: call @setsid with return %0003c4ce

0003c4ce:
0003c4d1: R0 := 0
0003c4d6: R30 := 0x40C19C
0003c4d8: call @umask with return %0003c4da

0003c4da:
0003c4dd: R0 := 0x41B000
0003c4e3: R0 := R0 + 0x5D8
0003c4e8: R30 := 0x40C1A8
0003c4eb: call @chdir with return %0003c4ed

0003c4ed:
0003c4f3: mem := mem with [R31 + 0x244, el]:u32 <- 31:0[R0]
0003c4fa: R0 := pad:64[mem[R31 + 0x244, el]:u32]
0003c4ff: VF := 0
0003c502: CF := 1
0003c506: ZF := 31:0[R0] = 0
0003c50a: NF := 31:31[R0]
0003c510: when ZF goto %0003c50e
00045f2c: goto %0003c5c0

0003c5c0:
0003c5c3: R0 := 0x41B000
0003c5c9: R0 := R0 + 0x5E0
0003c5ce: R30 := 0x40C1C4
0003c5d1: call @perror with return %0003c50e

0003c50e:
0003c516: R1 := 2
0003c51b: R0 := 0x41B000
0003c521: R0 := R0 + 0x5F8
0003c526: R30 := 0x40C1D4
0003c528: call @open with return %0003c52a

0003c52a:
0003c530: mem := mem with [R31 + 0x384, el]:u32 <- 31:0[R0]
0003c537: R0 := pad:64[mem[R31 + 0x384, el]:u32]
0003c53c: VF := 0
0003c53f: CF := 1
0003c543: ZF := 31:0[R0] = 0
0003c547: NF := 31:31[R0]
0003c54d: when NF <> VF goto %0003b0c2
00045f2d: goto %0003c551

0003c551:
0003c554: R1 := 0
0003c55b: R0 := pad:64[mem[R31 + 0x384, el]:u32]
0003c560: R30 := 0x40C1F0
0003c562: call @dup2 with return %0003c564

0003c564:
0003c567: R1 := 1
0003c56e: R0 := pad:64[mem[R31 + 0x384, el]:u32]
0003c573: R30 := 0x40C1FC
0003c575: call @dup2 with return %0003c577

0003c577:
0003c57a: R1 := 2
0003c581: R0 := pad:64[mem[R31 + 0x384, el]:u32]
0003c586: R30 := 0x40C208
0003c588: call @dup2 with return %0003c58a

0003c58a:
0003c58f: R0 := pad:64[mem[R31 + 0x384, el]:u32]
0003c595: #487 := 31:0[R0] - 2
0003c59a: VF := extend:64[#487] <> extend:64[31:0[R0]] - 2
0003c59f: CF := pad:64[#487] <> pad:64[31:0[R0]] + 0xFFFFFFFE
0003c5a3: ZF := #487 = 0
0003c5a7: NF := 31:31[#487]
0003c5ae: when ~(NF = VF & ~ZF) goto %0003b0c2
00045f2e: goto %0003c5b2

0003c5b2:
0003c5b7: R0 := pad:64[mem[R31 + 0x384, el]:u32]
0003c5bc: R30 := 0x40C21C
0003c5be: call @close with return %0003b0c2

0003b0c2:
0003b0cc: R0 := pad:64[mem[R31 + 0x35C, el]:u32]
0003b0d1: VF := 0
0003b0d4: CF := 1
0003b0d8: ZF := 31:0[R0] = 0
0003b0dc: NF := 31:31[R0]
0003b0e2: when ZF goto %0003b0e0
00045f2f: goto %0003c412

0003b0e0:
0003b0e8: R2 := 0x18
0003b0ed: R1 := 0x23
0003b0f2: R0 := 0x41A000
0003b0f8: R0 := R0 + 0x2A0
0003b0fd: R30 := 0x40C264
0003b0ff: call @openlog with return %0003b101

0003b101:
0003b104: R0 := 0x41B000
0003b10a: R1 := R0 + 0x618
0003b10f: R0 := 6
0003b114: R30 := 0x40C274
0003b116: call @syslog with return %0003b118

0003c412:
0003c415: R2 := 0x18
0003c41a: R1 := 3
0003c41f: R0 := 0x41A000
0003c425: R0 := R0 + 0x2A0
0003c42a: R30 := 0x40C23C
0003c42c: call @openlog with return %0003c42e

0003c42e:
0003c431: R0 := 0x41B000
0003c437: R1 := R0 + 0x608
0003c43c: R0 := 6
0003c441: R30 := 0x40C24C
0003c443: call @syslog with return %0003c445

0003c445:
0003c447: goto %0003b118

0003b118:
0003b11d: R0 := pad:64[mem[R31 + 0x338, el]:u32]
0003b122: VF := 0
0003b125: CF := 1
0003b129: ZF := 31:0[R0] = 0
0003b12d: NF := 31:31[R0]
0003b133: when ZF goto %0003b131
00045f30: goto %0003c402

0003b131:
0003b139: R0 := 0x7F
0003b13e: R30 := 0x40C294
0003b141: call @setlogmask with return %0003b143

0003c402:
0003c405: R0 := 0xFF
0003c40a: R30 := 0x40C288
0003c40c: call @setlogmask with return %0003c40e

0003c40e:
0003c410: goto %0003b143

0003b143:
0003b148: R0 := mem[R31 + 0x2C0, el]:u64
0003b14f: R0 := pad:64[mem[R0]]
0003b154: VF := 0
0003b157: CF := 1
0003b15b: ZF := 31:0[R0] = 0
0003b15f: NF := 31:31[R0]
0003b165: when ZF goto %0003b163
00045f31: goto %0003c10a

0003c10a:
0003c10d: R30 := 0x40C2A8
0003c110: call @getuid with return %0003c112

0003c112:
0003c115: VF := 0
0003c118: CF := 1
0003c11c: ZF := 31:0[R0] = 0
0003c120: NF := 31:31[R0]
0003c126: when ZF goto %0003c124
00045f32: goto %0003c3a7

0003c3a7:
0003c3aa: R30 := 0x40C2B4
0003c3ad: call @geteuid with return %0003c3af

0003c3af:
0003c3b2: VF := 0
0003c3b5: CF := 1
0003c3b9: ZF := 31:0[R0] = 0
0003c3bd: NF := 31:31[R0]
0003c3c2: when ZF goto %0003c124
00045f33: goto %0003c3c6

0003c124:
0003c12c: R30 := 0x40C2E8
0003c12e: call @__ctype_b_loc with return %0003c130

0003c130:
0003c135: R1 := mem[R0, el]:u64
0003c13c: R0 := mem[R31 + 0x2C0, el]:u64
0003c143: R0 := pad:64[mem[R0]]
0003c149: R0 := pad:64[7:0[R0]]
0003c14f: R0 := 62:0[R0].0
0003c156: R0 := R1 + R0
0003c15d: R0 := pad:64[mem[R0, el]:u16]
0003c163: R0 := pad:64[11:11[R0].0]
0003c168: VF := 0
0003c16b: CF := 1
0003c16f: ZF := 31:0[R0] = 0
0003c173: NF := 31:31[R0]
0003c179: when ZF goto %0003c177
00045f34: goto %0003c33f

0003c33f:
0003c344: R0 := mem[R31 + 0x2C0, el]:u64
0003c349: R30 := 0x40C318
0003c34b: call @atoi with return %0003c34d

0003c34d:
0003c353: mem := mem with [R31 + 0x37C, el]:u32 <- 31:0[R0]
0003c35a: R0 := pad:64[mem[R31 + 0x37C, el]:u32]
0003c362: mem := mem with [R31 + 0x378, el]:u32 <- 31:0[R0]
0003c369: R0 := pad:64[mem[R31 + 0x37C, el]:u32]
0003c36e: VF := 0
0003c371: CF := 1
0003c375: ZF := 31:0[R0] = 0
0003c379: NF := 31:31[R0]
0003c380: when NF = VF & ~ZF goto %0003c207
00045f35: goto %0003c384

0003c384:
0003c387: R0 := 0x41B000
0003c38d: R1 := R0 + 0x670
0003c392: R0 := 3
0003c397: R30 := 0x40C340
0003c399: call @syslog with return %0003c39b

0003c39b:
0003c39e: R0 := 1
0003c3a3: R30 := 0x40C348
0003c3a5: call @myexit with return %0003c177

0003c177:
0003c181: R0 := mem[R31 + 0x2C0, el]:u64
0003c186: R30 := 0x40C350
0003c189: call @getpwnam with return %0003c18b

0003c18b:
0003c191: mem := mem with [R31 + 0x238, el]:u64 <- R0
0003c198: R0 := mem[R31 + 0x238, el]:u64
0003c19d: VF := 0
0003c1a0: CF := 1
0003c1a4: ZF := R0 = 0
0003c1a8: NF := 63:63[R0]
0003c1ae: when ZF goto %0003c1ac
00045f36: goto %0003c31a

0003c31a:
0003c31f: R0 := mem[R31 + 0x238, el]:u64
0003c326: R0 := pad:64[mem[R0 + 0x10, el]:u32]
0003c32b: VF := 0
0003c32e: CF := 1
0003c332: ZF := 31:0[R0] = 0
0003c336: NF := 31:31[R0]
0003c33b: when ZF <> 1 goto %0003c1db
00045f37: goto %0003c1ac

0003c1ac:
0003c1b6: R2 := mem[R31 + 0x2C0, el]:u64
0003c1bb: R0 := 0x41B000
0003c1c1: R1 := R0 + 0x698
0003c1c6: R0 := 3
0003c1cb: R30 := 0x40C384
0003c1cd: call @syslog with return %0003c1cf

0003c1cf:
0003c1d2: R0 := 1
0003c1d7: R30 := 0x40C38C
0003c1d9: call @myexit with return %0003c1db

0003c1db:
0003c1e0: R0 := mem[R31 + 0x238, el]:u64
0003c1e7: R0 := pad:64[mem[R0 + 0x10, el]:u32]
0003c1ef: mem := mem with [R31 + 0x37C, el]:u32 <- 31:0[R0]
0003c1f6: R0 := mem[R31 + 0x238, el]:u64
0003c1fd: R0 := pad:64[mem[R0 + 0x14, el]:u32]
0003c205: mem := mem with [R31 + 0x378, el]:u32 <- 31:0[R0]
00045f38: goto %0003c207

0003c207:
0003c20c: R0 := pad:64[mem[R31 + 0x378, el]:u32]
0003c211: R30 := 0x40C3AC
0003c214: call @setgid with return %0003c216

0003c216:
0003c219: VF := 0
0003c21c: CF := 1
0003c220: ZF := 31:0[R0] = 0
0003c224: NF := 31:31[R0]
0003c22a: when ZF goto %0003c228
00045f39: goto %0003c2c5

0003c2c5:
0003c2c8: R30 := 0x40C3B8
0003c2ca: call @__errno_location with return %0003c2cc

0003c2cc:
0003c2d1: R0 := pad:64[mem[R0, el]:u32]
0003c2d6: R30 := 0x40C3C0
0003c2d8: call @strerror with return %0003c2da

0003c2da:
0003c2de: R2 := R0
0003c2e3: R0 := 0x41B000
0003c2e9: R1 := R0 + 0x6B8
0003c2ee: R0 := 3
0003c2f3: R30 := 0x40C3D4
0003c2f5: call @syslog with return %0003c2f7

0003c2f7:
0003c2fa: R0 := 0x41B000
0003c300: R1 := R0 + 0x6E0
0003c305: R0 := 3
0003c30a: R30 := 0x40C3E4
0003c30c: call @syslog with return %0003c30e

0003c30e:
0003c311: R0 := 1
0003c316: R30 := 0x40C3EC
0003c318: call @myexit with return %0003c228

0003c228:
0003c232: R0 := pad:64[mem[R31 + 0x37C, el]:u32]
0003c237: R30 := 0x40C3F4
0003c23a: call @setuid with return %0003c23c

0003c23c:
0003c242: mem := mem with [R31 + 0x384, el]:u32 <- 31:0[R0]
0003c247: R30 := 0x40C3FC
0003c249: call @__errno_location with return %0003c24b

0003c24b:
0003c250: R0 := pad:64[mem[R0, el]:u32]
0003c255: R30 := 0x40C404
0003c257: call @strerror with return %0003c259

0003c259:
0003c25d: R4 := R0
0003c264: R3 := pad:64[mem[R31 + 0x378, el]:u32]
0003c26b: R2 := pad:64[mem[R31 + 0x37C, el]:u32]
0003c270: R0 := 0x41B000
0003c276: R1 := R0 + 0x6F0
0003c27b: R0 := 6
0003c280: R30 := 0x40C420
0003c282: call @syslog with return %0003c284

0003c284:
0003c289: R0 := pad:64[mem[R31 + 0x384, el]:u32]
0003c28e: VF := 0
0003c291: CF := 1
0003c295: ZF := 31:0[R0] = 0
0003c299: NF := 31:31[R0]
0003c29e: when ZF goto %0003b163
00045f3a: goto %0003c2a2

0003c2a2:
0003c2a5: R0 := 0x41B000
0003c2ab: R1 := R0 + 0x6E0
0003c2b0: R0 := 3
0003c2b5: R30 := 0x40C43C
0003c2b7: call @syslog with return %0003c2b9

0003c2b9:
0003c2bc: R0 := 1
0003c2c1: R30 := 0x40C444
0003c2c3: call @myexit with return %0003b163

0003c3c6:
0003c3c9: R30 := 0x40C2C0
0003c3cb: call @getuid with return %0003c3cd

0003c3cd:
0003c3d1: R19 := pad:64[31:0[R0]]
0003c3d6: R30 := 0x40C2C8
0003c3d9: call @getgid with return %0003c3db

0003c3db:
0003c3df: R3 := pad:64[31:0[R0]]
0003c3e5: R2 := pad:64[31:0[R19]]
0003c3ea: R0 := 0x41B000
0003c3f0: R1 := R0 + 0x640
0003c3f5: R0 := 4
0003c3fa: R30 := 0x40C2E0
0003c3fc: call @syslog with return %0003c3fe

0003c3fe:
0003c400: goto %0003b163

0003b163:
0003b16d: R0 := mem[R31 + 0x2C8, el]:u64
0003b174: R0 := pad:64[mem[R0]]
0003b179: VF := 0
0003b17c: CF := 1
0003b180: ZF := 31:0[R0] = 0
0003b184: NF := 31:31[R0]
0003b18a: when ZF goto %0003b188
00045f3b: goto %0003bf81

0003bf81:
0003bf84: R0 := 0
0003bf89: R30 := 0x40C45C
0003bf8c: call @umask with return %0003bf8e

0003bf8e:
0003bf91: R2 := 0x1A4
0003bf96: R1 := 0x241
0003bf9d: R0 := mem[R31 + 0x2C8, el]:u64
0003bfa2: R30 := 0x40C46C
0003bfa4: call @open with return %0003bfa6

0003bfa6:
0003bfac: mem := mem with [R31 + 0x314, el]:u32 <- 31:0[R0]
0003bfb3: R0 := pad:64[mem[R31 + 0x314, el]:u32]
0003bfb8: VF := 0
0003bfbb: CF := 1
0003bfbf: ZF := 31:0[R0] = 0
0003bfc3: NF := 31:31[R0]
0003bfca: when NF = VF goto %0003bfc8
00045f3c: goto %0003c0cc

0003c0cc:
0003c0cf: R30 := 0x40C480
0003c0d1: call @__errno_location with return %0003c0d3

0003c0d3:
0003c0d8: R0 := pad:64[mem[R0, el]:u32]
0003c0dd: R30 := 0x40C488
0003c0df: call @strerror with return %0003c0e1

0003c0e1:
0003c0e5: R2 := R0
0003c0ea: R0 := 0x41B000
0003c0f0: R1 := R0 + 0x710
0003c0f5: R0 := 3
0003c0fa: R30 := 0x40C49C
0003c0fc: call @syslog with return %0003c0fe

0003c0fe:
0003c101: R0 := 1
0003c106: R30 := 0x40C4A4
0003c108: call @myexit with return %0003bfc8

0003bfc8:
0003bfd0: R0 := 0x32
0003bfd5: R30 := 0x40C4AC
0003bfd7: call @zmalloc with return %0003bfd9

0003bfd9:
0003bfdf: mem := mem with [R31 + 0x208, el]:u64 <- R0
0003bfe6: R19 := mem[R31 + 0x208, el]:u64
0003bfeb: R30 := 0x40C4B8
0003bfee: call @getpid with return %0003bff0

0003bff0:
0003bff4: R3 := pad:64[31:0[R0]]
0003bff9: R0 := 0x41B000
0003bfff: R2 := R0 + 0x738
0003c004: R1 := 0x32
0003c00a: R0 := R19
0003c00f: R30 := 0x40C4D0
0003c011: call @snprintf with return %0003c013

0003c013:
0003c018: R19 := mem[R31 + 0x208, el]:u64
0003c01f: R0 := mem[R31 + 0x208, el]:u64
0003c024: R30 := 0x40C4DC
0003c026: call @strlen with return %0003c028

0003c028:
0003c02e: mem := mem with [R31 + 0x234, el]:u32 <- 31:0[R0]
0003c035: R0 := extend:64[mem[R31 + 0x234, el]:u32]
0003c03b: R2 := R0
0003c041: R1 := R19
0003c048: R0 := pad:64[mem[R31 + 0x314, el]:u32]
0003c04d: R30 := 0x40C4F4
0003c04f: call @write_wrapper with return %0003c051

0003c051:
0003c057: mem := mem with [R31 + 0x244, el]:u32 <- 31:0[R0]
0003c05e: R1 := pad:64[mem[R31 + 0x244, el]:u32]
0003c065: R0 := pad:64[mem[R31 + 0x234, el]:u32]
0003c06b: #484 := ~31:0[R0]
0003c070: #485 := 31:0[R1] + ~31:0[R0]
0003c076: VF := extend:64[#485 + 1] <> extend:64[31:0[R1]] + extend:64[#484]
          + 1
0003c07c: CF := pad:64[#485 + 1] <> pad:64[31:0[R1]] + pad:64[#484] + 1
0003c080: ZF := #485 + 1 = 0
0003c084: NF := 31:31[#485 + 1]
0003c08a: when ZF goto %0003c088
00045f3d: goto %0003c0a9

0003c0a9:
0003c0ac: R0 := 0x41B000
0003c0b2: R1 := R0 + 0x740
0003c0b7: R0 := 3
0003c0bc: R30 := 0x40C518
0003c0be: call @syslog with return %0003c0c0

0003c0c0:
0003c0c3: R0 := 1
0003c0c8: R30 := 0x40C520
0003c0ca: call @myexit with return %0003c088

0003c088:
0003c092: R0 := mem[R31 + 0x208, el]:u64
0003c097: R30 := 0x40C528
0003c099: call @free with return %0003c09b

0003c09b:
0003c0a0: R0 := pad:64[mem[R31 + 0x314, el]:u32]
0003c0a5: R30 := 0x40C530
0003c0a7: call @close with return %0003b188

0003b188:
0003b190: R1 := 1
0003b195: R0 := 0xD
0003b19a: R30 := 0x40C53C
0003b19d: call @signal with return %0003b19f

0003b19f:
0003b1a2: R0 := 0x408000
0003b1a8: R1 := R0 + 0x84C
0003b1ad: R0 := 2
0003b1b2: R30 := 0x40C54C
0003b1b4: call @signal with return %0003b1b6

0003b1b6:
0003b1b9: R0 := 0x408000
0003b1bf: R1 := R0 + 0x84C
0003b1c4: R0 := 0xF
0003b1c9: R30 := 0x40C55C
0003b1cb: call @signal with return %0003b1cd

0003b1cd:
0003b1d0: R0 := 0x408000
0003b1d6: R1 := R0 + 0x84C
0003b1db: R0 := 1
0003b1e0: R30 := 0x40C56C
0003b1e2: call @signal with return %0003b1e4

0003b1e4:
0003b1e7: R0 := 0
0003b1ec: R30 := 0x40C574
0003b1ee: call @time with return %0003b1f0

0003b1f0:
0003b1f3: R30 := 0x40C578
0003b1f6: call @srandom with return %0003b1f8

0003b1f8:
0003b1fb: goto %0003b1f9

0003b1f9:
0003b1ff: R0 := 0x430000
0003b205: R0 := R0 + 0x3A0
0003b20c: R0 := pad:64[mem[R0, el]:u32]
0003b211: VF := 0
0003b214: CF := 1
0003b218: ZF := 31:0[R0] = 0
0003b21c: NF := 31:31[R0]
0003b222: when ZF goto %0003b220
00045f3e: goto %0003bd84

0003bd84:
0003bd89: R1 := pad:64[mem[R31 + 0x370, el]:u32]
0003bd90: R0 := pad:64[mem[R31 + 0x36C, el]:u32]
0003bd96: #481 := ~31:0[R0]
0003bd9b: #482 := 31:0[R1] + ~31:0[R0]
0003bda1: VF := extend:64[#482 + 1] <> extend:64[31:0[R1]] + extend:64[#481]
          + 1
0003bda7: CF := pad:64[#482 + 1] <> pad:64[31:0[R1]] + pad:64[#481] + 1
0003bdab: ZF := #482 + 1 = 0
0003bdaf: NF := 31:31[#482 + 1]
0003bdb5: when ZF goto %0003bdb3
00045f3f: goto %0003bf44

0003bf44:
0003bf47: R0 := 0x430000
0003bf4d: R0 := R0 + 0x3A0
0003bf54: R0 := pad:64[mem[R0, el]:u32]
0003bf5a: #483 := 31:0[R0] - 1
0003bf5f: VF := extend:64[#483] <> extend:64[31:0[R0]] - 1
0003bf64: CF := pad:64[#483] <> pad:64[31:0[R0]] + 0xFFFFFFFF
0003bf68: ZF := #483 = 0
0003bf6c: NF := 31:31[#483]
0003bf73: when ~(NF = VF & ~ZF) goto %0003b220
00045f40: goto %0003bf77

0003bf77:
0003bf79: goto %0003bdb3

0003bdb3:
00045f41: goto %0003bdba

0003b220:
0003b22a: mem := mem with [R31 + 0x31C, el]:u32 <- 0
0003b230: R0 := R31 + 0x68
0003b238: mem := mem with [R31 + 0x228, el]:u64 <- R0
0003b23f: mem := mem with [R31 + 0x318, el]:u32 <- 0
0003b244: goto %0003b242

0003b242:
0003b24a: R0 := pad:64[mem[R31 + 0x318, el]:u32]
0003b250: #477 := 31:0[R0] - 0xF
0003b255: VF := extend:64[#477] <> extend:64[31:0[R0]] - 0xF
0003b25a: CF := pad:64[#477] <> pad:64[31:0[R0]] + 0xFFFFFFF1
0003b25e: ZF := #477 = 0
0003b262: NF := 31:31[#477]
0003b269: when ~(CF & ~ZF) goto %0003b267
00045f42: goto %0003b297

0003b297:
0003b29c: R0 := mem[R31 + 0x130, el]:u64
0003b2a4: mem := mem with [R31 + 0x320, el]:u64 <- R0
0003b2a9: goto %0003b2a7

0003b2a7:
0003b2af: R0 := mem[R31 + 0x320, el]:u64
0003b2b4: VF := 0
0003b2b7: CF := 1
0003b2bb: ZF := R0 = 0
0003b2bf: NF := 63:63[R0]
0003b2c5: when ZF <> 1 goto %0003b2c3
00045f43: goto %0003b342

0003b342:
0003b347: R0 := mem[R31 + 0x128, el]:u64
0003b34f: mem := mem with [R31 + 0x320, el]:u64 <- R0
0003b354: goto %0003b352

0003b352:
0003b35a: R0 := mem[R31 + 0x320, el]:u64
0003b35f: VF := 0
0003b362: CF := 1
0003b366: ZF := R0 = 0
0003b36a: NF := 63:63[R0]
0003b370: when ZF <> 1 goto %0003b36e
00045f44: goto %0003b3ed

0003b3ed:
0003b3f2: R0 := mem[R31 + 0x138, el]:u64
0003b3fa: mem := mem with [R31 + 0x320, el]:u64 <- R0
0003b3ff: goto %0003b3fd

0003b3fd:
0003b405: R0 := mem[R31 + 0x320, el]:u64
0003b40a: VF := 0
0003b40d: CF := 1
0003b411: ZF := R0 = 0
0003b415: NF := 63:63[R0]
0003b41b: when ZF <> 1 goto %0003b419
00045f45: goto %0003b498

0003b498:
0003b49b: R0 := 1
0003b4a3: mem := mem with [R31 + 0xF0, el]:u64 <- R0
0003b4aa: mem := mem with [R31 + 0xF8, el]:u64 <- 0
0003b4b0: R1 := R31 + 0xF0
0003b4b6: R0 := R31 + 0x68
0003b4bc: R4 := R1
0003b4c1: R3 := 0
0003b4c6: R2 := 0
0003b4cc: R1 := R0
0003b4d1: R0 := 0x400
0003b4d6: R30 := 0x40C700
0003b4d8: call @select with return %0003b4da

0003b4da:
0003b4e0: mem := mem with [R31 + 0x314, el]:u32 <- 31:0[R0]
0003b4e7: R0 := pad:64[mem[R31 + 0x314, el]:u32]
0003b4ec: VF := 0
0003b4ef: CF := 1
0003b4f3: ZF := 31:0[R0] = 0
0003b4f7: NF := 31:31[R0]
0003b4ff: when ~(NF = VF & ~ZF) goto %0003b4fd
00045f46: goto %0003b6b5

0003b4fd:
0003b507: R0 := pad:64[mem[R31 + 0x314, el]:u32]
0003b50c: VF := 0
0003b50f: CF := 1
0003b513: ZF := 31:0[R0] = 0
0003b517: NF := 31:31[R0]
0003b51e: when NF = VF goto %0003b51c
00045f47: goto %0003b65a

0003b65a:
0003b65d: R0 := 0x430000
0003b663: R0 := R0 + 0x3A0
0003b66a: R0 := pad:64[mem[R0, el]:u32]
0003b66f: VF := 0
0003b672: CF := 1
0003b676: ZF := 31:0[R0] = 0
0003b67a: NF := 31:31[R0]
0003b67f: when ZF <> 1 goto %0003b51c
00045f48: goto %0003b683

0003b683:
0003b686: R30 := 0x40CB04
0003b688: call @__errno_location with return %0003b68a

0003b68a:
0003b68f: R0 := pad:64[mem[R0, el]:u32]
0003b694: R30 := 0x40CB0C
0003b696: call @strerror with return %0003b698

0003b698:
0003b69c: R2 := R0
0003b6a1: R0 := 0x41B000
0003b6a7: R1 := R0 + 0x7D8
0003b6ac: R0 := 3
0003b6b1: R30 := 0x40CB20
0003b6b3: call @syslog with return %0003b51c

0003b6b5:
0003b6ba: mem := mem with [R31 + 0x384, el]:u32 <- 0
0003b6bf: goto %0003b6bd

0003b6bd:
0003b6c5: R0 := pad:64[mem[R31 + 0x384, el]:u32]
0003b6cb: #478 := 31:0[R0] - 0x3FF
0003b6d0: VF := extend:64[#478] <> extend:64[31:0[R0]] - 0x3FF
0003b6d5: CF := pad:64[#478] <> pad:64[31:0[R0]] + 0xFFFFFC01
0003b6d9: ZF := #478 = 0
0003b6dd: NF := 31:31[#478]
0003b6e5: when ~(NF = VF & ~ZF) goto %0003b6e3
00045f49: goto %0003bd80

0003bd80:
0003bd82: goto %0003b51c

0003b51c:
0003b524: R0 := 0x430000
0003b52a: R0 := R0 + 0x3B8
0003b531: R0 := mem[R0, el]:u64
0003b536: VF := 0
0003b539: CF := 1
0003b53d: ZF := R0 = 0
0003b541: NF := 63:63[R0]
0003b546: when ZF goto %0003b1f9
00045f4a: goto %0003b54a

0003b54a:
0003b54d: R0 := 0x430000
0003b553: R0 := R0 + 0x3C0
0003b558: R30 := 0x40CB40
0003b55a: call @pthread_mutex_lock with return %0003b55c

0003b55c:
0003b55f: R0 := 0x430000
0003b565: R0 := R0 + 0x3B8
0003b56c: R0 := mem[R0, el]:u64
0003b574: mem := mem with [R31 + 0x320, el]:u64 <- R0
0003b579: goto %0003b577

0003b577:
0003b57f: R0 := mem[R31 + 0x320, el]:u64
0003b584: VF := 0
0003b587: CF := 1
0003b58b: ZF := R0 = 0
0003b58f: NF := 63:63[R0]
0003b595: when ZF <> 1 goto %0003b593
00045f4b: goto %0003b636

0003b636:
0003b639: R0 := 0x430000
0003b63f: R0 := R0 + 0x3B8
0003b646: mem := mem with [R0, el]:u64 <- 0
0003b64b: R0 := 0x430000
0003b651: R0 := R0 + 0x3C0
0003b656: R30 := 0x40CBD0
0003b658: call @pthread_mutex_unlock with return %0003b1f9

0003b593:
0003b59d: R0 := mem[R31 + 0x320, el]:u64
0003b5a4: R0 := mem[R0 + 0x10, el]:u64
0003b5ac: mem := mem with [R31 + 0x210, el]:u64 <- R0
0003b5b3: R0 := pad:64[mem[R31 + 0x36C, el]:u32]
0003b5b9: R0 := pad:64[31:0[R0] + 1]
0003b5c1: mem := mem with [R31 + 0x36C, el]:u32 <- 31:0[R0]
0003b5c6: R0 := 0x430000
0003b5cc: R0 := R0 + 0x390
0003b5d3: R0 := pad:64[mem[R0, el]:u32]
0003b5d8: VF := 0
0003b5db: CF := 1
0003b5df: ZF := 31:0[R0] = 0
0003b5e3: NF := 31:31[R0]
0003b5e9: when ZF goto %0003b5e7
00045f4c: goto %0003b609

0003b609:
0003b60e: R0 := mem[R31 + 0x320, el]:u64
0003b615: R0 := mem[R0, el]:u64
0003b61c: R2 := pad:64[mem[R31 + 0x384, el]:u32]
0003b622: R1 := R0
0003b627: R0 := 0x41B000
0003b62d: R0 := R0 + 0x800
0003b632: R30 := 0x40CB9C
0003b634: call @printf with return %0003b5e7

0003b5e7:
0003b5f1: R0 := mem[R31 + 0x320, el]:u64
0003b5f6: R30 := 0x40CBA4
0003b5f8: call @free with return %0003b5fa

0003b5fa:
0003b5ff: R0 := mem[R31 + 0x210, el]:u64
0003b607: mem := mem with [R31 + 0x320, el]:u64 <- R0
00045f4d: goto %0003b577

0003b6e3:
0003b6ed: R0 := pad:64[mem[R31 + 0x384, el]:u32]
0003b6f3: R1 := pad:64[31:0[R0] + 0x3F]
0003b6f8: VF := 0
0003b6fb: CF := 1
0003b6ff: ZF := 31:0[R0] = 0
0003b703: NF := 31:31[R0]
0003b712: when NF <> VF goto %0003b70a
0003b713: goto %0003b70e

0003b70e:
0003b70f: R0 := pad:64[31:0[R0]]
0003b715: goto %0003b711

0003b70a:
0003b70b: R0 := pad:64[31:0[R1]]
0003b714: goto %0003b711

0003b711:
0003b71b: R0 := pad:64[extend:32[31:6[R0]]]
0003b721: R0 := extend:64[31:0[R0]]
0003b727: R0 := 60:0[R0].0
0003b72d: R1 := R31 + 0x68
0003b735: R0 := mem[R1 + R0, el]:u64
0003b73c: R1 := pad:64[mem[R31 + 0x384, el]:u32]
0003b742: R1 := pad:64[5:0[R1]]
0003b747: R2 := 1
0003b74e: R1 := R2 << pad:12[5:0[R1]]
0003b755: R0 := R0 & R1
0003b75a: VF := 0
0003b75d: CF := 1
0003b761: ZF := R0 = 0
0003b765: NF := 63:63[R0]
0003b76b: when ZF goto %0003b769
00045f4e: goto %0003b785

0003b769:
00045f4f: goto %0003b770

0003b785:
0003b788: R0 := 0x1C
0003b790: mem := mem with [R31 + 0xEC, el]:u32 <- 31:0[R0]
0003b796: R1 := R31 + 0xEC
0003b79c: R0 := R31 + 0x100
0003b7a2: R2 := R1
0003b7a8: R1 := R0
0003b7af: R0 := pad:64[mem[R31 + 0x384, el]:u32]
0003b7b4: R30 := 0x40C778
0003b7b7: call @accept with return %0003b7b9

0003b7b9:
0003b7bf: mem := mem with [R31 + 0x314, el]:u32 <- 31:0[R0]
0003b7c6: R0 := pad:64[mem[R31 + 0x314, el]:u32]
0003b7cb: VF := 0
0003b7ce: CF := 1
0003b7d2: ZF := 31:0[R0] = 0
0003b7d6: NF := 31:31[R0]
0003b7dd: when NF = VF goto %0003b7db
00045f50: goto %0003bd4a

0003b7db:
0003b7e5: R0 := mem[R31 + 0x120, el]:u64
0003b7eb: R1 := R31 + 0x100
0003b7f0: R30 := 0x40C7B8
0003b7f2: call @acl_check with return %0003b7f4

0003b7f4:
0003b7f7: VF := 0
0003b7fa: CF := 1
0003b7fe: ZF := 31:0[R0] = 0
0003b802: NF := 31:31[R0]
0003b808: when ZF goto %0003b806
00045f51: goto %0003bbb1

0003b806:
0003b80f: R0 := R31 + 0x148
0003b814: R30 := 0x40C8B0
0003b817: call @pthread_attr_init with return %0003b819

0003b819:
0003b81d: R0 := R31 + 0x148
0003b822: R1 := 0x20000
0003b827: R30 := 0x40C8BC
0003b82a: call @pthread_attr_setstacksize with return %0003b82c

0003b82c:
0003b830: R0 := R31 + 0x148
0003b835: R1 := 1
0003b83a: R30 := 0x40C8C8
0003b83d: call @pthread_attr_setdetachstate with return %0003b83f

0003b83f:
0003b843: R0 := R31 + 0x148
0003b848: R1 := 0x100
0003b84d: R30 := 0x40C8D4
0003b850: call @pthread_attr_setguardsize with return %0003b852

0003b852:
0003b857: R0 := mem[R31 + 0x130, el]:u64
0003b85e: R1 := extend:64[mem[R31 + 0x384, el]:u32]
0003b863: R30 := 0x40C8E0
0003b865: call @plist_in with return %0003b867

0003b867:
0003b86a: VF := 0
0003b86d: CF := 1
0003b871: ZF := 31:0[R0] = 0
0003b875: NF := 31:31[R0]
0003b87b: when ZF goto %0003b879
00045f52: goto %0003bade

0003b879:
0003b883: R0 := mem[R31 + 0x128, el]:u64
0003b88a: R1 := extend:64[mem[R31 + 0x384, el]:u32]
0003b88f: R30 := 0x40C970
0003b891: call @plist_in with return %0003b893

0003b893:
0003b896: VF := 0
0003b899: CF := 1
0003b89d: ZF := 31:0[R0] = 0
0003b8a1: NF := 31:31[R0]
0003b8a7: when ZF goto %0003b8a5
00045f53: goto %0003ba0b

0003b8a5:
0003b8ad: R0 := 0x30
0003b8b2: R30 := 0x40C9FC
0003b8b4: call @zmalloc with return %0003b8b6

0003b8b6:
0003b8bc: mem := mem with [R31 + 0x220, el]:u64 <- R0
0003b8c3: R0 := mem[R31 + 0x220, el]:u64
0003b8ca: R1 := pad:64[mem[R31 + 0x314, el]:u32]
0003b8d2: mem := mem with [R0, el]:u32 <- 31:0[R1]
0003b8d9: R0 := mem[R31 + 0x220, el]:u64
0003b8df: R0 := R0 + 0x10
0003b8e5: R1 := R0
0003b8eb: R0 := R31 + 0x100
0003b8f2: V0 := mem[R0, el]:u128
0003b8fa: mem := mem with [R1, el]:u128 <- V0
0003b901: V0 := mem[R0 + 0xC, el]:u128
0003b909: mem := mem with [R1 + 0xC, el]:u128 <- V0
0003b910: R0 := mem[R31 + 0x138, el]:u64
0003b917: R1 := extend:64[mem[R31 + 0x384, el]:u32]
0003b91c: R30 := 0x40CA38
0003b91e: call @plist_get with return %0003b920

0003b920:
0003b924: R1 := R0
0003b92b: R0 := mem[R31 + 0x220, el]:u64
0003b933: mem := mem with [R0 + 8, el]:u64 <- R1
0003b938: R0 := 0x430000
0003b93e: R0 := R0 + 0x3A8
0003b945: R0 := pad:64[mem[R0, el]:u32]
0003b94a: VF := 0
0003b94d: CF := 1
0003b951: ZF := 31:0[R0] = 0
0003b955: NF := 31:31[R0]
0003b95b: when ZF <> 1 goto %0003b959
00045f54: goto %0003b9d3

0003b959:
0003b963: R0 := mem[R31 + 0x220, el]:u64
0003b968: R30 := 0x40CA84
0003b96a: call @tunnel_thread with return %0003b96c

0003b9d3:
0003b9d7: R1 := R31 + 0x148
0003b9dd: R4 := R31 + 0x140
0003b9e4: R3 := mem[R31 + 0x220, el]:u64
0003b9e9: R0 := 0x409000
0003b9ef: R2 := R0 + 0x1B8
0003b9f5: R0 := R4
0003b9fa: R30 := 0x40CA74
0003b9fd: call @pthread_create with return %0003b9ff

0003b9ff:
0003ba05: mem := mem with [R31 + 0x31C, el]:u32 <- 31:0[R0]
0003ba09: goto %0003b96c

0003ba0b:
0003ba0e: R0 := 0x30
0003ba13: R30 := 0x40C980
0003ba15: call @zmalloc with return %0003ba17

0003ba17:
0003ba1d: mem := mem with [R31 + 0x220, el]:u64 <- R0
0003ba24: R0 := mem[R31 + 0x220, el]:u64
0003ba2b: R1 := pad:64[mem[R31 + 0x314, el]:u32]
0003ba33: mem := mem with [R0, el]:u32 <- 31:0[R1]
0003ba3a: R0 := mem[R31 + 0x220, el]:u64
0003ba40: R0 := R0 + 0x10
0003ba46: R1 := R0
0003ba4c: R0 := R31 + 0x100
0003ba53: V0 := mem[R0, el]:u128
0003ba5b: mem := mem with [R1, el]:u128 <- V0
0003ba62: V0 := mem[R0 + 0xC, el]:u128
0003ba6a: mem := mem with [R1 + 0xC, el]:u128 <- V0
0003ba6f: R0 := 0x430000
0003ba75: R0 := R0 + 0x3A8
0003ba7c: R0 := pad:64[mem[R0, el]:u32]
0003ba81: VF := 0
0003ba84: CF := 1
0003ba88: ZF := 31:0[R0] = 0
0003ba8c: NF := 31:31[R0]
0003ba92: when ZF <> 1 goto %0003ba90
00045f55: goto %0003baa7

0003ba90:
0003ba9a: R0 := mem[R31 + 0x220, el]:u64
0003ba9f: R30 := 0x40C9F0
0003baa1: call @socks5_thread with return %0003baa3

0003baa3:
0003baa5: goto %0003b96c

0003baa7:
0003baab: R1 := R31 + 0x148
0003bab1: R4 := R31 + 0x140
0003bab8: R3 := mem[R31 + 0x220, el]:u64
0003babd: R0 := 0x409000
0003bac3: R2 := R0 + 0x2D8
0003bac9: R0 := R4
0003bace: R30 := 0x40C9E0
0003bad0: call @pthread_create with return %0003bad2

0003bad2:
0003bad8: mem := mem with [R31 + 0x31C, el]:u32 <- 31:0[R0]
0003badc: goto %0003b96c

0003bade:
0003bae1: R0 := 0x30
0003bae6: R30 := 0x40C8F0
0003bae8: call @zmalloc with return %0003baea

0003baea:
0003baf0: mem := mem with [R31 + 0x220, el]:u64 <- R0
0003baf7: R0 := mem[R31 + 0x220, el]:u64
0003bafe: R1 := pad:64[mem[R31 + 0x314, el]:u32]
0003bb06: mem := mem with [R0, el]:u32 <- 31:0[R1]
0003bb0d: R0 := mem[R31 + 0x220, el]:u64
0003bb13: R0 := R0 + 0x10
0003bb19: R1 := R0
0003bb1f: R0 := R31 + 0x100
0003bb26: V0 := mem[R0, el]:u128
0003bb2e: mem := mem with [R1, el]:u128 <- V0
0003bb35: V0 := mem[R0 + 0xC, el]:u128
0003bb3d: mem := mem with [R1 + 0xC, el]:u128 <- V0
0003bb42: R0 := 0x430000
0003bb48: R0 := R0 + 0x3A8
0003bb4f: R0 := pad:64[mem[R0, el]:u32]
0003bb54: VF := 0
0003bb57: CF := 1
0003bb5b: ZF := 31:0[R0] = 0
0003bb5f: NF := 31:31[R0]
0003bb65: when ZF <> 1 goto %0003bb63
00045f56: goto %0003bb7a

0003bb63:
0003bb6d: R0 := mem[R31 + 0x220, el]:u64
0003bb72: R30 := 0x40C960
0003bb74: call @proxy_thread with return %0003bb76

0003bb76:
0003bb78: goto %0003b96c

0003bb7a:
0003bb7e: R1 := R31 + 0x148
0003bb84: R4 := R31 + 0x140
0003bb8b: R3 := mem[R31 + 0x220, el]:u64
0003bb90: R0 := 0x408000
0003bb96: R2 := R0 + 0xFB0
0003bb9c: R0 := R4
0003bba1: R30 := 0x40C950
0003bba3: call @pthread_create with return %0003bba5

0003bba5:
0003bbab: mem := mem with [R31 + 0x31C, el]:u32 <- 31:0[R0]
0003bbaf: goto %0003b96c

0003b96c:
0003b970: R0 := R31 + 0x148
0003b975: R30 := 0x40CA8C
0003b978: call @pthread_attr_destroy with return %0003b97a

0003b97a:
0003b97f: R0 := pad:64[mem[R31 + 0x31C, el]:u32]
0003b984: VF := 0
0003b987: CF := 1
0003b98b: ZF := 31:0[R0] = 0
0003b98f: NF := 31:31[R0]
0003b995: when ZF goto %0003b993
00045f57: goto %0003b9b1

0003b993:
0003b99d: R0 := pad:64[mem[R31 + 0x370, el]:u32]
0003b9a3: R0 := pad:64[31:0[R0] + 1]
0003b9ab: mem := mem with [R31 + 0x370, el]:u32 <- 31:0[R0]
0003b9af: goto %0003b770

0003b9b1:
0003b9b6: R2 := pad:64[mem[R31 + 0x31C, el]:u32]
0003b9bb: R0 := 0x41B000
0003b9c1: R1 := R0 + 0x7A8
0003b9c6: R0 := 3
0003b9cb: R30 := 0x40CAAC
0003b9cd: call @syslog with return %0003b9cf

0003b9cf:
0003b9d1: goto %0003b770

0003bbb1:
0003bbb5: R0 := R31 + 0x38
0003bbba: V0 := 0
0003bbc2: mem := mem with [R0, el]:u128 <- V0
0003bbc8: mem := mem with [R0 + 0x10, el]:u128 <- V0
0003bbd0: mem := mem with [R0 + 0x1E, el]:u128 <- V0
0003bbd6: R0 := R31 + 0x100
0003bbdd: R0 := pad:64[mem[R0, el]:u16]
0003bbe3: R4 := pad:64[31:0[R0]]
0003bbe9: R0 := R31 + 0x100
0003bbf0: R0 := pad:64[mem[R0, el]:u16]
0003bbf6: #479 := 31:0[R0] - 2
0003bbfb: VF := extend:64[#479] <> extend:64[31:0[R0]] - 2
0003bc00: CF := pad:64[#479] <> pad:64[31:0[R0]] + 0xFFFFFFFE
0003bc04: ZF := #479 = 0
0003bc08: NF := 31:31[#479]
0003bc0e: when ZF <> 1 goto %0003bc0c
00045f58: goto %0003bd3a

0003bc0c:
0003bc15: R0 := R31 + 0x100
0003bc1b: R0 := R0 + 8
00045f59: goto %0003bc1d

0003bd3a:
0003bd3e: R0 := R31 + 0x100
0003bd44: R0 := R0 + 4
0003bd48: goto %0003bc1d

0003bc1d:
0003bc21: R1 := R31 + 0x38
0003bc26: R3 := 0x2E
0003bc2c: R2 := R1
0003bc32: R1 := R0
0003bc38: R0 := pad:64[31:0[R4]]
0003bc3d: R30 := 0x40C818
0003bc3f: call @inet_ntop with return %0003bc41

0003bc41:
0003bc45: R0 := R31 + 0x100
0003bc4c: R0 := pad:64[mem[R0, el]:u16]
0003bc52: #480 := 31:0[R0] - 2
0003bc57: VF := extend:64[#480] <> extend:64[31:0[R0]] - 2
0003bc5c: CF := pad:64[#480] <> pad:64[31:0[R0]] + 0xFFFFFFFE
0003bc60: ZF := #480 = 0
0003bc64: NF := 31:31[#480]
0003bc6a: when ZF <> 1 goto %0003bc68
00045f5a: goto %0003bd29

0003bc68:
0003bc71: R0 := R31 + 0x100
0003bc78: R0 := pad:64[mem[R0 + 2, el]:u16]
00045f5b: goto %0003bc7a

0003bd29:
0003bd2d: R0 := R31 + 0x100
0003bd34: R0 := pad:64[mem[R0 + 2, el]:u16]
0003bd38: goto %0003bc7a

0003bc7a:
0003bc80: mem := mem with [R31 + 0x21E, el]:u16 <- 15:0[R0]
0003bc87: R0 := pad:64[mem[R31 + 0x21E, el]:u16]
0003bc8c: R30 := 0x40C848
0003bc8e: call @ntohs with return %0003bc90

0003bc90:
0003bc94: R0 := pad:64[15:0[R0]]
0003bc9a: R1 := pad:64[31:0[R0]]
0003bca0: R0 := R31 + 0x38
0003bca6: R3 := pad:64[31:0[R1]]
0003bcac: R2 := R0
0003bcb1: R0 := 0x41B000
0003bcb7: R1 := R0 + 0x788
0003bcbc: R0 := 4
0003bcc1: R30 := 0x40C86C
0003bcc3: call @syslog with return %0003bcc5

0003bcc5:
0003bcc9: R0 := R31 + 0x38
0003bcce: R30 := 0x40C874
0003bcd0: call @gen_denied_page with return %0003bcd2

0003bcd2:
0003bcd8: mem := mem with [R31 + 0x208, el]:u64 <- R0
0003bcdf: R19 := mem[R31 + 0x208, el]:u64
0003bce6: R0 := mem[R31 + 0x208, el]:u64
0003bceb: R30 := 0x40C884
0003bced: call @strlen with return %0003bcef

0003bcef:
0003bcf3: R2 := R0
0003bcf9: R1 := R19
0003bd00: R0 := pad:64[mem[R31 + 0x314, el]:u32]
0003bd05: R30 := 0x40C894
0003bd07: call @write_wrapper with return %0003bd09

0003bd09:
0003bd0e: R0 := mem[R31 + 0x208, el]:u64
0003bd13: R30 := 0x40C89C
0003bd15: call @free with return %0003bd17

0003bd17:
0003bd1c: R0 := pad:64[mem[R31 + 0x314, el]:u32]
0003bd21: R30 := 0x40C8A4
0003bd23: call @close with return %0003bd25

0003bd25:
0003bd27: goto %0003b770

0003bd4a:
0003bd4d: R30 := 0x40C78C
0003bd4f: call @__errno_location with return %0003bd51

0003bd51:
0003bd56: R0 := pad:64[mem[R0, el]:u32]
0003bd5b: R30 := 0x40C794
0003bd5d: call @strerror with return %0003bd5f

0003bd5f:
0003bd63: R2 := R0
0003bd68: R0 := 0x41B000
0003bd6e: R1 := R0 + 0x760
0003bd73: R0 := 3
0003bd78: R30 := 0x40C7A8
0003bd7a: call @syslog with return %0003bd7c

0003bd7c:
0003bd7e: goto %0003b770

0003b770:
0003b775: R0 := pad:64[mem[R31 + 0x384, el]:u32]
0003b77b: R0 := pad:64[31:0[R0] + 1]
0003b783: mem := mem with [R31 + 0x384, el]:u32 <- 31:0[R0]
00045f5c: goto %0003b6bd

0003b419:
0003b423: R0 := mem[R31 + 0x320, el]:u64
0003b42a: R0 := mem[R0, el]:u64
0003b430: R0 := pad:64[63:6[R0]]
0003b436: R1 := 60:0[R0].0
0003b43c: R2 := R31 + 0x68
0003b444: R1 := mem[R2 + R1, el]:u64
0003b44b: R2 := mem[R31 + 0x320, el]:u64
0003b452: R2 := mem[R2, el]:u64
0003b458: R2 := pad:64[5:0[R2]]
0003b45d: R3 := 1
0003b464: R2 := R3 << pad:12[5:0[R2]]
0003b46b: R2 := R1 | R2
0003b471: R0 := 60:0[R0].0
0003b477: R1 := R31 + 0x68
0003b480: mem := mem with [R1 + R0, el]:u64 <- R2
0003b487: R0 := mem[R31 + 0x320, el]:u64
0003b48e: R0 := mem[R0 + 0x10, el]:u64
0003b496: mem := mem with [R31 + 0x320, el]:u64 <- R0
00045f5d: goto %0003b3fd

0003b36e:
0003b378: R0 := mem[R31 + 0x320, el]:u64
0003b37f: R0 := mem[R0, el]:u64
0003b385: R0 := pad:64[63:6[R0]]
0003b38b: R1 := 60:0[R0].0
0003b391: R2 := R31 + 0x68
0003b399: R1 := mem[R2 + R1, el]:u64
0003b3a0: R2 := mem[R31 + 0x320, el]:u64
0003b3a7: R2 := mem[R2, el]:u64
0003b3ad: R2 := pad:64[5:0[R2]]
0003b3b2: R3 := 1
0003b3b9: R2 := R3 << pad:12[5:0[R2]]
0003b3c0: R2 := R1 | R2
0003b3c6: R0 := 60:0[R0].0
0003b3cc: R1 := R31 + 0x68
0003b3d5: mem := mem with [R1 + R0, el]:u64 <- R2
0003b3dc: R0 := mem[R31 + 0x320, el]:u64
0003b3e3: R0 := mem[R0 + 0x10, el]:u64
0003b3eb: mem := mem with [R31 + 0x320, el]:u64 <- R0
00045f5e: goto %0003b352

0003b2c3:
0003b2cd: R0 := mem[R31 + 0x320, el]:u64
0003b2d4: R0 := mem[R0, el]:u64
0003b2da: R0 := pad:64[63:6[R0]]
0003b2e0: R1 := 60:0[R0].0
0003b2e6: R2 := R31 + 0x68
0003b2ee: R1 := mem[R2 + R1, el]:u64
0003b2f5: R2 := mem[R31 + 0x320, el]:u64
0003b2fc: R2 := mem[R2, el]:u64
0003b302: R2 := pad:64[5:0[R2]]
0003b307: R3 := 1
0003b30e: R2 := R3 << pad:12[5:0[R2]]
0003b315: R2 := R1 | R2
0003b31b: R0 := 60:0[R0].0
0003b321: R1 := R31 + 0x68
0003b32a: mem := mem with [R1 + R0, el]:u64 <- R2
0003b331: R0 := mem[R31 + 0x320, el]:u64
0003b338: R0 := mem[R0 + 0x10, el]:u64
0003b340: mem := mem with [R31 + 0x320, el]:u64 <- R0
00045f5f: goto %0003b2a7

0003b267:
0003b271: R0 := mem[R31 + 0x228, el]:u64
0003b278: R1 := pad:64[mem[R31 + 0x318, el]:u32]
0003b280: mem := mem with [R0 + (60:0[R1].0), el]:u64 <- 0
0003b287: R0 := pad:64[mem[R31 + 0x318, el]:u32]
0003b28d: R0 := pad:64[31:0[R0] + 1]
0003b295: mem := mem with [R31 + 0x318, el]:u32 <- 31:0[R0]
00045f60: goto %0003b242

0003c773:
0003c776: R0 := 0x430000
0003c77c: R0 := R0 + 0x398
0003c783: R0 := mem[R0, el]:u64
0003c789: R0 := R0 + 0x96
0003c78e: R1 := 0x32
0003c793: R30 := 0x40BF34
0003c795: call @is_memory_all_zero with return %0003c797

0003c797:
0003c79a: VF := 0
0003c79d: CF := 1
0003c7a1: ZF := 31:0[R0] = 0
0003c7a5: NF := 31:31[R0]
0003c7ab: when ZF <> 1 goto %0003c7a9
00045f61: goto %0003c914

0003c914:
0003c917: R0 := 0x430000
0003c91d: R0 := R0 + 0x398
0003c924: R0 := mem[R0, el]:u64
0003c92a: R0 := R0 + 0x96
0003c92f: R2 := 8
0003c934: R1 := 0x10
0003c939: R30 := 0x40BF58
0003c93b: call @printmem with return %0003c93d

0003c93d:
0003c943: mem := mem with [R31 + 0x208, el]:u64 <- R0
0003c94a: R0 := mem[R31 + 0x208, el]:u64
0003c950: R1 := R0
0003c955: R0 := 0x41B000
0003c95b: R0 := R0 + 0x4E0
0003c960: R30 := 0x40BF70
0003c962: call @printf with return %0003c964

0003c964:
0003c969: R0 := mem[R31 + 0x208, el]:u64
0003c96e: R30 := 0x40BF78
0003c970: call @free with return %0003c7a9

0003c7a9:
0003c7b1: R0 := 0x430000
0003c7b7: R0 := R0 + 0x398
0003c7be: R0 := mem[R0, el]:u64
0003c7c4: R0 := R0 + 0xC8
0003c7c9: R1 := 0x32
0003c7ce: R30 := 0x40BF90
0003c7d0: call @is_memory_all_zero with return %0003c7d2

0003c7d2:
0003c7d5: VF := 0
0003c7d8: CF := 1
0003c7dc: ZF := 31:0[R0] = 0
0003c7e0: NF := 31:31[R0]
0003c7e6: when ZF <> 1 goto %0003c7e4
00045f62: goto %0003c8b6

0003c8b6:
0003c8b9: R0 := 0x430000
0003c8bf: R0 := R0 + 0x398
0003c8c6: R0 := mem[R0, el]:u64
0003c8cc: R0 := R0 + 0xC8
0003c8d1: R2 := 8
0003c8d6: R1 := 0x10
0003c8db: R30 := 0x40BFB4
0003c8dd: call @printmem with return %0003c8df

0003c8df:
0003c8e5: mem := mem with [R31 + 0x208, el]:u64 <- R0
0003c8ec: R0 := mem[R31 + 0x208, el]:u64
0003c8f2: R1 := R0
0003c8f7: R0 := 0x41B000
0003c8fd: R0 := R0 + 0x4F8
0003c902: R30 := 0x40BFCC
0003c904: call @printf with return %0003c906

0003c906:
0003c90b: R0 := mem[R31 + 0x208, el]:u64
0003c910: R30 := 0x40BFD4
0003c912: call @free with return %0003c7e4

0003c7e4:
0003c7ec: R0 := 0x430000
0003c7f2: R0 := R0 + 0x398
0003c7f9: R0 := mem[R0, el]:u64
0003c7ff: R0 := R0 + 0xFA
0003c804: R1 := 0x32
0003c809: R30 := 0x40BFEC
0003c80b: call @is_memory_all_zero with return %0003c80d

0003c80d:
0003c810: VF := 0
0003c813: CF := 1
0003c817: ZF := 31:0[R0] = 0
0003c81b: NF := 31:31[R0]
0003c820: when ZF <> 1 goto %0003bf7b
00045f63: goto %0003c824

0003c824:
0003c827: R0 := 0x430000
0003c82d: R0 := R0 + 0x398
0003c834: R0 := mem[R0, el]:u64
0003c83a: R0 := R0 + 0xFA
0003c83f: R2 := 8
0003c844: R1 := 0x10
0003c849: R30 := 0x40C010
0003c84b: call @printmem with return %0003c84d

0003c84d:
0003c853: mem := mem with [R31 + 0x208, el]:u64 <- R0
0003c85a: R1 := mem[R31 + 0x208, el]:u64
0003c85f: R0 := 0x430000
0003c865: R0 := R0 + 0x398
0003c86c: R0 := mem[R0, el]:u64
0003c872: R2 := R0
0003c877: R0 := 0x430000
0003c87d: R0 := R0 + 0x398
0003c884: R0 := mem[R0, el]:u64
0003c88a: R0 := R0 + 0x32
0003c890: R3 := R0
0003c895: R0 := 0x41B000
0003c89b: R0 := R0 + 0x510
0003c8a0: R30 := 0x40C048
0003c8a2: call @printf with return %0003c8a4

0003c8a4:
0003c8a9: R0 := mem[R31 + 0x208, el]:u64
0003c8ae: R30 := 0x40C050
0003c8b0: call @free with return %0003c8b2

0003c8b2:
0003c8b4: goto %0003bf7b

0003bf7b:
0003bf7f: goto %0003bdba

0003c972:
0003c977: R0 := mem[R31 + 0x340, el]:u64
0003c97c: R30 := 0x40BF0C
0003c97e: call @magic_auth_detect with return %0003c980

0003c980:
0003c982: goto %0003bdba

0003bdba:
0003bdbf: R0 := mem[R31 + 0x308, el]:u64
0003bdc4: R30 := 0x40CC20
0003bdc6: call @free with return %0003bdc8

0003bdc8:
0003bdcd: R1 := pad:64[mem[R31 + 0x370, el]:u32]
0003bdd4: R0 := pad:64[mem[R31 + 0x36C, el]:u32]
0003bddb: R0 := pad:64[31:0[R1] + ~31:0[R0] + 1]
0003bde1: R2 := pad:64[31:0[R0]]
0003bde6: R0 := 0x41B000
0003bdec: R1 := R0 + 0x820
0003bdf1: R0 := 6
0003bdf6: R30 := 0x40CC40
0003bdf8: call @syslog with return %0003bdfa

0003bdfa:
0003bdfd: R0 := 0x430000
0003be03: R0 := R0 + 0x3F8
0003be08: R30 := 0x40CC4C
0003be0a: call @pthread_mutex_lock with return %0003be0c

0003be0c:
0003be0f: R0 := 0x430000
0003be15: R0 := R0 + 0x3F0
0003be1c: R0 := mem[R0, el]:u64
0003be21: R30 := 0x40CC5C
0003be23: call @plist_free with return %0003be25

0003be25:
0003be28: R0 := 0x430000
0003be2e: R0 := R0 + 0x3F8
0003be33: R30 := 0x40CC68
0003be35: call @pthread_mutex_unlock with return %0003be37

0003be37:
0003be3a: R0 := 0x430000
0003be40: R0 := R0 + 0x428
0003be47: R0 := mem[R0, el]:u64
0003be4c: R30 := 0x40CC78
0003be4e: call @hlist_free with return %0003be50

0003be50:
0003be53: R0 := 0x430000
0003be59: R0 := R0 + 0x438
0003be60: R0 := mem[R0, el]:u64
0003be65: R30 := 0x40CC88
0003be67: call @plist_free with return %0003be69

0003be69:
0003be6c: R0 := 0x430000
0003be72: R0 := R0 + 0x440
0003be79: R0 := mem[R0, el]:u64
0003be7e: R30 := 0x40CC98
0003be80: call @plist_free with return %0003be82

0003be82:
0003be87: R0 := mem[R31 + 0x138, el]:u64
0003be8c: R30 := 0x40CCA0
0003be8e: call @plist_free with return %0003be90

0003be90:
0003be95: R0 := mem[R31 + 0x130, el]:u64
0003be9a: R30 := 0x40CCA8
0003be9c: call @plist_free with return %0003be9e

0003be9e:
0003bea3: R0 := mem[R31 + 0x128, el]:u64
0003bea8: R30 := 0x40CCB0
0003beaa: call @plist_free with return %0003beac

0003beac:
0003beb1: R0 := mem[R31 + 0x120, el]:u64
0003beb6: R30 := 0x40CCB8
0003beb8: call @plist_free with return %0003beba

0003beba:
0003bebf: R0 := mem[R31 + 0x2C8, el]:u64
0003bec6: R0 := pad:64[mem[R0]]
0003becb: VF := 0
0003bece: CF := 1
0003bed2: ZF := 31:0[R0] = 0
0003bed6: NF := 31:31[R0]
0003bedc: when ZF goto %0003beda
00045f64: goto %0003bf35

0003bf35:
0003bf3a: R0 := mem[R31 + 0x2C8, el]:u64
0003bf3f: R30 := 0x40CCD0
0003bf42: call @unlink with return %0003beda

0003beda:
0003bee4: R0 := mem[R31 + 0x2C0, el]:u64
0003bee9: R30 := 0x40CCD8
0003beeb: call @free with return %0003beed

0003beed:
0003bef2: R0 := mem[R31 + 0x2C8, el]:u64
0003bef7: R30 := 0x40CCE0
0003bef9: call @free with return %0003befb

0003befb:
0003bf00: R0 := mem[R31 + 0x340, el]:u64
0003bf05: R30 := 0x40CCE8
0003bf07: call @free with return %0003bf09

0003bf09:
0003bf0c: R0 := 0x430000
0003bf12: R0 := R0 + 0x398
0003bf19: R0 := mem[R0, el]:u64
0003bf1e: R30 := 0x40CCF8
0003bf20: call @free with return %0003bf22

0003bf22:
0003bf25: R30 := 0x40CCFC
0003bf27: call @parent_free with return %0003bf29

0003bf29:
0003bf2c: R0 := 0
0003bf31: R30 := 0x40CD04
0003bf33: call @exit with return %00045f65

00045f65:
00045f66: call @ntlm_set_key with noreturn

0003e2bf:
0003e2c9: R0 := mem[R31 + 0x388, el]:u64
0003e2d0: R0 := mem[R0, el]:u64
0003e2d6: R2 := R0
0003e2db: R0 := 0x41B000
0003e2e1: R1 := R0 + 0x2B0
0003e2e6: R0 := 6
0003e2eb: R30 := 0x40B574
0003e2ed: call @syslog with return %0003e2ef

0003e2ef:
0003e2f4: R0 := mem[R31 + 0x388, el]:u64
0003e2fb: R0 := mem[R0 + 0x18, el]:u64
0003e303: mem := mem with [R31 + 0x388, el]:u64 <- R0
00045f67: goto %0003e2a3

0003e153:
0003e15b: R0 := 0x430000
0003e161: R0 := R0 + 0x3AC
0003e166: R1 := 1
0003e16e: mem := mem with [R0, el]:u32 <- 31:0[R1]
0003e173: R0 := 0x430000
0003e179: R0 := R0 + 0x3B0
0003e180: R0 := mem[R0, el]:u64
0003e185: VF := 0
0003e188: CF := 1
0003e18c: ZF := R0 = 0
0003e190: NF := 63:63[R0]
0003e196: when ZF <> 1 goto %0003e194
00045f68: goto %0003e274

0003e274:
0003e277: R0 := 0x430000
0003e27d: R0 := R0 + 0x3B0
0003e282: R1 := 1
0003e28a: mem := mem with [R0, el]:u64 <- R1
00045f69: goto %0003e194

0003e194:
0003e19e: R0 := mem[R31 + 0x208, el]:u64
0003e1a3: R30 := 0x40B4B0
0003e1a5: call @strlen with return %0003e1a7

0003e1a7:
0003e1ad: mem := mem with [R31 + 0x384, el]:u32 <- 31:0[R0]
0003e1b4: R0 := pad:64[mem[R31 + 0x384, el]:u32]
0003e1b9: VF := 0
0003e1bc: CF := 1
0003e1c0: ZF := 31:0[R0] = 0
0003e1c4: NF := 31:31[R0]
0003e1ca: when ZF goto %0003e1c8
00045f6a: goto %0003e1db

0003e1db:
0003e1e0: R0 := pad:64[mem[R31 + 0x384, el]:u32]
0003e1e6: R0 := pad:64[31:0[R0] + 3]
0003e1ec: R0 := extend:64[31:0[R0]]
0003e1f1: R30 := 0x40B4D0
0003e1f3: call @zmalloc with return %0003e1f5

0003e1f5:
0003e1fb: mem := mem with [R31 + 0x250, el]:u64 <- R0
0003e202: R0 := pad:64[mem[R31 + 0x384, el]:u32]
0003e208: R0 := pad:64[31:0[R0] + 3]
0003e20e: R1 := extend:64[31:0[R0]]
0003e215: R0 := mem[R31 + 0x208, el]:u64
0003e21b: R3 := R0
0003e220: R0 := 0x41A000
0003e226: R2 := R0 + 0x2E0
0003e22d: R0 := mem[R31 + 0x250, el]:u64
0003e232: R30 := 0x40B4F8
0003e234: call @snprintf with return %0003e236

0003e236:
0003e239: R0 := 0x430000
0003e23f: R0 := R0 + 0x438
0003e246: R0 := mem[R0, el]:u64
0003e24d: R2 := mem[R31 + 0x250, el]:u64
0003e252: R1 := 0
0003e257: R30 := 0x40B510
0003e259: call @plist_add with return %0003e25b

0003e25b:
0003e25f: R1 := R0
0003e264: R0 := 0x430000
0003e26a: R0 := R0 + 0x438
0003e272: mem := mem with [R0, el]:u64 <- R1
00045f6b: goto %0003e1c8

0003e1c8:
0003e1d2: R0 := mem[R31 + 0x208, el]:u64
0003e1d7: R30 := 0x40B528
0003e1d9: call @free with return %0003e116

0003e045:
0003e04f: R0 := mem[R31 + 0x208, el]:u64
0003e054: R1 := 0x3A
0003e059: R30 := 0x40B3E0
0003e05b: call @strchr with return %0003e05d

0003e05d:
0003e063: mem := mem with [R31 + 0x250, el]:u64 <- R0
0003e06a: R0 := mem[R31 + 0x250, el]:u64
0003e06f: VF := 0
0003e072: CF := 1
0003e076: ZF := R0 = 0
0003e07a: NF := 63:63[R0]
0003e080: when ZF <> 1 goto %0003e07e
00045f6c: goto %0003e0ed

0003e07e:
0003e088: R0 := mem[R31 + 0x250, el]:u64
0003e08f: mem := mem with [R0] <- 0
0003e094: R0 := 0x430000
0003e09a: R0 := R0 + 0x430
0003e0a1: R5 := mem[R0, el]:u64
0003e0a8: R1 := mem[R31 + 0x208, el]:u64
0003e0af: R0 := mem[R31 + 0x250, el]:u64
0003e0b5: R0 := R0 + 1
0003e0ba: R4 := 1
0003e0bf: R3 := 1
0003e0c5: R2 := R0
0003e0cb: R0 := R5
0003e0d0: R30 := 0x40B440
0003e0d2: call @hlist_add with return %0003e0d4

0003e0d4:
0003e0d8: R1 := R0
0003e0dd: R0 := 0x430000
0003e0e3: R0 := R0 + 0x430
0003e0eb: mem := mem with [R0, el]:u64 <- R1
00045f6d: goto %0003e008

0003e0ed:
0003e0f2: R0 := mem[R31 + 0x208, el]:u64
0003e0f8: R2 := R0
0003e0fd: R0 := 0x41B000
0003e103: R1 := R0 + 0x258
0003e108: R0 := 3
0003e10d: R30 := 0x40B408
0003e10f: call @syslog with return %0003e111

0003e111:
0003e113: goto %0003e008

0003df96:
0003dfa0: R0 := mem[R31 + 0x208, el]:u64
0003dfa7: R0 := pad:64[mem[R0]]
0003dfac: VF := 0
0003dfaf: CF := 1
0003dfb3: ZF := 31:0[R0] = 0
0003dfb7: NF := 31:31[R0]
0003dfbd: when ZF goto %0003dfbb
00045f6e: goto %0003dfce

0003dfce:
0003dfd1: R0 := 0x430000
0003dfd7: R0 := R0 + 0x440
0003dfde: R0 := mem[R0, el]:u64
0003dfe5: R1 := mem[R31 + 0x208, el]:u64
0003dfea: R30 := 0x40B398
0003dfec: call @noproxy_add with return %0003dfee

0003dfee:
0003dff2: R1 := R0
0003dff7: R0 := 0x430000
0003dffd: R0 := R0 + 0x440
0003e005: mem := mem with [R0, el]:u64 <- R1
00045f6f: goto %0003dfbb

0003dfbb:
0003dfc5: R0 := mem[R31 + 0x208, el]:u64
0003dfca: R30 := 0x40B3B0
0003dfcc: call @free with return %0003df59

0003e8e8:
0003e8f2: R0 := mem[R31 + 0x208, el]:u64
0003e8f7: R30 := 0x40AEF4
0003e8f9: call @free with return %0003e8ab

0003e897:
0003e8a1: R0 := mem[R31 + 0x208, el]:u64
0003e8a6: R30 := 0x40AEC8
0003e8a8: call @free with return %0003e85a

0003e745:
0003e74f: R0 := mem[R31 + 0x388, el]:u64
0003e756: R0 := mem[R0, el]:u64
0003e75c: R1 := R0
0003e761: R0 := 0x41B000
0003e767: R0 := R0 + 0x1C8
0003e76c: R30 := 0x40AE40
0003e76e: call @strcasecmp with return %0003e770

0003e770:
0003e776: mem := mem with [R31 + 0x384, el]:u32 <- 31:0[R0]
0003e77d: R0 := pad:64[mem[R31 + 0x384, el]:u32]
0003e782: VF := 0
0003e785: CF := 1
0003e789: ZF := 31:0[R0] = 0
0003e78d: NF := 31:31[R0]
0003e793: when ZF goto %0003e791
00045f70: goto %0003e81c

0003e81c:
0003e821: R0 := mem[R31 + 0x388, el]:u64
0003e828: R0 := mem[R0, el]:u64
0003e82e: R1 := R0
0003e833: R0 := 0x41B000
0003e839: R0 := R0 + 0x1D0
0003e83e: R30 := 0x40AE68
0003e840: call @strcasecmp with return %0003e842

0003e842:
0003e845: VF := 0
0003e848: CF := 1
0003e84c: ZF := 31:0[R0] = 0
0003e850: NF := 31:31[R0]
0003e855: when ZF <> 1 goto %0003e7f5
00045f71: goto %0003e791

0003e791:
0003e79b: R0 := mem[R31 + 0x388, el]:u64
0003e7a2: R1 := mem[R0 + 8, el]:u64
0003e7a9: R0 := pad:64[mem[R31 + 0x384, el]:u32]
0003e7ae: VF := 0
0003e7b1: CF := 1
0003e7b5: ZF := 31:0[R0] = 0
0003e7b9: NF := 31:31[R0]
0003e7c5: when ZF goto %0003e7be
0003e7c6: goto %0003e7c1

0003e7c1:
0003e7c2: R0 := 1
0003e7c8: goto %0003e7c4

0003e7be:
0003e7bf: R0 := 0
0003e7c7: goto %0003e7c4

0003e7c4:
0003e7ce: R0 := pad:64[7:0[R0]]
0003e7d4: R2 := pad:64[31:0[R0]]
0003e7da: R0 := R31 + 0x120
0003e7df: R30 := 0x40AE94
0003e7e1: call @acl_add with return %0003e7e3

0003e7e3:
0003e7e6: VF := 0
0003e7e9: CF := 1
0003e7ed: ZF := 31:0[R0] = 0
0003e7f1: NF := 31:31[R0]
0003e7f7: when ZF <> 1 goto %0003e7f5
00045f72: goto %0003e810

0003e810:
0003e813: R0 := 1
0003e818: R30 := 0x40AEA4
0003e81a: call @myexit with return %0003e7f5

0003e7f5:
0003e7ff: R0 := mem[R31 + 0x388, el]:u64
0003e806: R0 := mem[R0 + 0x18, el]:u64
0003e80e: mem := mem with [R31 + 0x388, el]:u64 <- R0
00045f73: goto %0003e729

0003daa1:
0003daab: R0 := mem[R31 + 0x208, el]:u64
0003dab0: R1 := 0
0003dab5: R30 := 0x40ADE4
0003dab7: call @parent_add with return %0003dab9

0003dab9:
0003dabe: R0 := mem[R31 + 0x208, el]:u64
0003dac3: R30 := 0x40ADEC
0003dac5: call @free with return %0003da64

0003d944:
0003d94e: R0 := mem[R31 + 0x208, el]:u64
0003d953: R30 := 0x40AD18
0003d955: call @is_http_header with return %0003d957

0003d957:
0003d95a: VF := 0
0003d95d: CF := 1
0003d961: ZF := 31:0[R0] = 0
0003d965: NF := 31:31[R0]
0003d96b: when ZF goto %0003d969
00045f74: goto %0003d9a0

0003d969:
0003d973: R0 := mem[R31 + 0x208, el]:u64
0003d979: R2 := R0
0003d97e: R0 := 0x41B000
0003d984: R1 := R0 + 0x1A0
0003d989: R0 := 3
0003d98e: R30 := 0x40ADA8
0003d990: call @syslog with return %0003d992

0003d9a0:
0003d9a5: R0 := mem[R31 + 0x208, el]:u64
0003d9aa: R30 := 0x40AD28
0003d9ac: call @get_http_header_name with return %0003d9ae

0003d9ae:
0003d9b4: mem := mem with [R31 + 0x250, el]:u64 <- R0
0003d9b9: R0 := 0x430000
0003d9bf: R0 := R0 + 0x428
0003d9c6: R0 := mem[R0, el]:u64
0003d9cd: R1 := mem[R31 + 0x250, el]:u64
0003d9d2: R30 := 0x40AD40
0003d9d4: call @hlist_in with return %0003d9d6

0003d9d6:
0003d9d9: VF := 0
0003d9dc: CF := 1
0003d9e0: ZF := 31:0[R0] = 0
0003d9e4: NF := 31:31[R0]
0003d9ea: when ZF <> 1 goto %0003d9e8
00045f75: goto %0003d9ff

0003d9ff:
0003da02: R0 := 0x430000
0003da08: R0 := R0 + 0x428
0003da0f: R19 := mem[R0, el]:u64
0003da16: R0 := mem[R31 + 0x208, el]:u64
0003da1b: R30 := 0x40AD5C
0003da1d: call @get_http_header_value with return %0003da1f

0003da1f:
0003da22: R4 := 0
0003da27: R3 := 1
0003da2d: R2 := R0
0003da34: R1 := mem[R31 + 0x250, el]:u64
0003da3a: R0 := R19
0003da3f: R30 := 0x40AD74
0003da41: call @hlist_add with return %0003da43

0003da43:
0003da47: R1 := R0
0003da4c: R0 := 0x430000
0003da52: R0 := R0 + 0x428
0003da5a: mem := mem with [R0, el]:u64 <- R1
00045f76: goto %0003d9e8

0003d9e8:
0003d9f2: R0 := mem[R31 + 0x250, el]:u64
0003d9f7: R30 := 0x40AD8C
0003d9f9: call @free with return %0003d9fb

0003d9fb:
0003d9fd: goto %0003d992

0003d992:
0003d997: R0 := mem[R31 + 0x208, el]:u64
0003d99c: R30 := 0x40ADB0
0003d99e: call @free with return %0003d907

0003d8c1:
0003d8cb: R1 := mem[R31 + 0x208, el]:u64
0003d8d1: R0 := R31 + 0x128
0003d8d8: R3 := pad:64[mem[R31 + 0x374, el]:u32]
0003d8de: R2 := R1
0003d8e4: R1 := R0
0003d8e9: R0 := 0x41A000
0003d8ef: R0 := R0 + 0x2F0
0003d8f4: R30 := 0x40ACE4
0003d8f6: call @listen_add with return %0003d8f8

0003d8f8:
0003d8fd: R0 := mem[R31 + 0x208, el]:u64
0003d902: R30 := 0x40ACEC
0003d904: call @free with return %0003d884

0003d83e:
0003d848: R1 := mem[R31 + 0x208, el]:u64
0003d84e: R0 := R31 + 0x130
0003d855: R3 := pad:64[mem[R31 + 0x374, el]:u32]
0003d85b: R2 := R1
0003d861: R1 := R0
0003d866: R0 := 0x41A000
0003d86c: R0 := R0 + 0x2E8
0003d871: R30 := 0x40AC98
0003d873: call @listen_add with return %0003d875

0003d875:
0003d87a: R0 := mem[R31 + 0x208, el]:u64
0003d87f: R30 := 0x40ACA0
0003d881: call @free with return %0003d801

0003d7d2:
0003d7dc: R1 := mem[R31 + 0x208, el]:u64
0003d7e2: R0 := R31 + 0x138
0003d7e9: R2 := pad:64[mem[R31 + 0x374, el]:u32]
0003d7ee: R30 := 0x40AC4C
0003d7f0: call @tunnel_add with return %0003d7f2

0003d7f2:
0003d7f7: R0 := mem[R31 + 0x208, el]:u64
0003d7fc: R30 := 0x40AC54
0003d7fe: call @free with return %0003d795

0003a9a0:
0003a9aa: R0 := extend:64[mem[R31 + 0x384, el]:u32]
0003a9b0: R0 := 60:0[R0].0
0003a9b7: R1 := mem[R31 + 0x20, el]:u64
0003a9be: R0 := R1 + R0
0003a9c5: R0 := mem[R0, el]:u64
0003a9ca: R1 := 0x3A
0003a9cf: R30 := 0x40AA68
0003a9d1: call @strchr with return %0003a9d3

0003a9d3:
0003a9d9: mem := mem with [R31 + 0x208, el]:u64 <- R0
0003a9e0: R0 := extend:64[mem[R31 + 0x384, el]:u32]
0003a9e6: R0 := 60:0[R0].0
0003a9ed: R1 := mem[R31 + 0x20, el]:u64
0003a9f4: R0 := R1 + R0
0003a9fb: R19 := mem[R0, el]:u64
0003aa02: R0 := mem[R31 + 0x208, el]:u64
0003aa07: VF := 0
0003aa0a: CF := 1
0003aa0e: ZF := R0 = 0
0003aa12: NF := 63:63[R0]
0003aa18: when ZF <> 1 goto %0003aa16
00045f77: goto %0003aa75

0003aa75:
0003aa7a: R0 := pad:64[mem[R31 + 0x384, el]:u32]
0003aa80: R0 := pad:64[31:0[R0] + 1]
0003aa87: R1 := pad:64[mem[R31 + 0x2C, el]:u32]
0003aa8d: #474 := ~31:0[R0]
0003aa92: #475 := 31:0[R1] + ~31:0[R0]
0003aa98: VF := extend:64[#475 + 1] <> extend:64[31:0[R1]] + extend:64[#474]
          + 1
0003aa9e: CF := pad:64[#475 + 1] <> pad:64[31:0[R1]] + pad:64[#474] + 1
0003aaa2: ZF := #475 + 1 = 0
0003aaa6: NF := 31:31[#475 + 1]
0003aaad: when ~(NF = VF & ~ZF) goto %0003aa16
00045f78: goto %0003aab1

0003aa16:
0003aa1e: R0 := 0
00045f79: goto %0003aa20

0003aab1:
0003aab6: R0 := extend:64[mem[R31 + 0x384, el]:u32]
0003aabc: R0 := R0 + 1
0003aac2: R0 := 60:0[R0].0
0003aac9: R1 := mem[R31 + 0x20, el]:u64
0003aad0: R0 := R1 + R0
0003aad7: R0 := mem[R0, el]:u64
0003aadc: R30 := 0x40AABC
0003aade: call @atoi with return %0003aae0

0003aae0:
0003aae2: goto %0003aa20

0003aa20:
0003aa24: R1 := pad:64[31:0[R0]]
0003aa2a: R0 := R19
0003aa2f: R30 := 0x40AAD0
0003aa31: call @parent_add with return %0003aa33

0003aa33:
0003aa38: R0 := mem[R31 + 0x208, el]:u64
0003aa3d: VF := 0
0003aa40: CF := 1
0003aa44: ZF := R0 = 0
0003aa48: NF := 63:63[R0]
0003aa4e: when ZF <> 1 goto %0003aa4c
00045f7a: goto %0003aa6c

0003aa4c:
0003aa54: R0 := 1
00045f7b: goto %0003aa56

0003aa6c:
0003aa6f: R0 := 2
0003aa73: goto %0003aa56

0003aa56:
0003aa5b: R1 := pad:64[mem[R31 + 0x384, el]:u32]
0003aa62: R0 := pad:64[31:0[R1] + 31:0[R0]]
0003aa6a: mem := mem with [R31 + 0x384, el]:u32 <- 31:0[R0]
00045f7c: goto %0003a96d

0003ea85:
0003ea8f: R0 := extend:64[mem[R31 + 0x384, el]:u32]
0003ea95: R0 := 60:0[R0].0
0003ea9c: R1 := mem[R31 + 0x20, el]:u64
0003eaa3: R0 := R1 + R0
0003eaaa: R0 := mem[R0, el]:u64
0003eab0: R1 := R0
0003eab5: R0 := 0x41B000
0003eabb: R0 := R0 + 0x128
0003eac0: R30 := 0x40A9CC
0003eac2: call @printf with return %0003eac4

0003eac4:
0003eac9: R0 := pad:64[mem[R31 + 0x384, el]:u32]
0003eacf: R0 := pad:64[31:0[R0] + 1]
0003ead7: mem := mem with [R31 + 0x384, el]:u32 <- 31:0[R0]
00045f7d: goto %0003ea52

000393bf:
000393c9: R0 := pad:64[mem[R31 + 0x384, el]:u32]
000393cf: R0 := pad:64[31:0[R0] - 0x41]
000393d5: #457 := 31:0[R0] - 0x36
000393da: VF := extend:64[#457] <> extend:64[31:0[R0]] - 0x36
000393df: CF := pad:64[#457] <> pad:64[31:0[R0]] + 0xFFFFFFCA
000393e3: ZF := #457 = 0
000393e7: NF := 31:31[#457]
000393ee: when CF & ~ZF goto %000393ec
00045f7e: goto %00039410

000393ec:
000393f4: R0 := 2
000393fc: mem := mem with [R31 + 0x380, el]:u32 <- 31:0[R0]
00039400: goto %00039372

00039410:
00039413: R1 := 0x41B000
00039419: R1 := R1 + 0x844
00039421: R0 := pad:64[mem[R1 + pad:64[31:0[R0].0], el]:u32]
00039426: R1 := 0x409EBC
0003942d: R0 := R1 + extend:64[31:0[R0].0]
00039432: call R0 with noreturn

00045f7f: sub malloc(malloc_size, malloc_result)
00046348: malloc_size :: in u64 = R0
00046349: malloc_result :: out u64 = R0

00021afc:
0003fab4: R16 := 0x430000
0003fabb: R17 := mem[R16 + 0xF0, el]:u64
0003fac1: R16 := R16 + 0xF0
0003fac6: call R17 with noreturn

00045f80: sub md4_buffer(md4_buffer_result)
0004634a: md4_buffer_result :: out u32 = low:32[R0]

0001cbb5:
0001cbb9: #57 := R31 - 0xD0
0001cbbf: mem := mem with [#57, el]:u64 <- R29
0001cbc5: mem := mem with [#57 + 8, el]:u64 <- R30
0001cbc9: R31 := #57
0001cbcf: R29 := R31
0001cbd7: mem := mem with [R31 + 0x28, el]:u64 <- R0
0001cbdf: mem := mem with [R31 + 0x20, el]:u64 <- R1
0001cbe7: mem := mem with [R31 + 0x18, el]:u64 <- R2
0001cbed: R0 := R31 + 0x30
0001cbf2: R30 := 0x416810
0001cbf4: call @md4_init_ctx with return %0001cbf6

0001cbf6:
0001cbfa: R0 := R31 + 0x30
0001cc00: R2 := R0
0001cc07: R1 := mem[R31 + 0x20, el]:u64
0001cc0e: R0 := mem[R31 + 0x28, el]:u64
0001cc13: R30 := 0x416824
0001cc15: call @md4_process_bytes with return %0001cc17

0001cc17:
0001cc1b: R0 := R31 + 0x30
0001cc22: R1 := mem[R31 + 0x18, el]:u64
0001cc27: R30 := 0x416830
0001cc29: call @md4_finish_ctx with return %0001cc2b

0001cc2b:
0001cc30: R29 := mem[R31, el]:u64
0001cc35: R30 := mem[R31 + 8, el]:u64
0001cc39: R31 := R31 + 0xD0
0001cc3e: call R30 with noreturn

00045f81: sub md4_finish_ctx(md4_finish_ctx_result)
0004634b: md4_finish_ctx_result :: out u32 = low:32[R0]

0001c73f:
0001c743: #50 := R31 - 0x30
0001c749: mem := mem with [#50, el]:u64 <- R29
0001c74f: mem := mem with [#50 + 8, el]:u64 <- R30
0001c753: R31 := #50
0001c759: R29 := R31
0001c761: mem := mem with [R31 + 0x18, el]:u64 <- R0
0001c769: mem := mem with [R31 + 0x10, el]:u64 <- R1
0001c770: R0 := mem[R31 + 0x18, el]:u64
0001c777: R0 := pad:64[mem[R0 + 0x18, el]:u32]
0001c77f: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
0001c786: R0 := mem[R31 + 0x18, el]:u64
0001c78d: R1 := pad:64[mem[R0 + 0x10, el]:u32]
0001c794: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001c79b: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001c7a2: R0 := mem[R31 + 0x18, el]:u64
0001c7aa: mem := mem with [R0 + 0x10, el]:u32 <- 31:0[R1]
0001c7b1: R0 := mem[R31 + 0x18, el]:u64
0001c7b8: R0 := pad:64[mem[R0 + 0x10, el]:u32]
0001c7bf: R1 := pad:64[mem[R31 + 0x2C, el]:u32]
0001c7c5: #51 := ~31:0[R0]
0001c7ca: #52 := 31:0[R1] + ~31:0[R0]
0001c7d0: VF := extend:64[#52 + 1] <> extend:64[31:0[R1]] + extend:64[#51] +
          1
0001c7d6: CF := pad:64[#52 + 1] <> pad:64[31:0[R1]] + pad:64[#51] + 1
0001c7da: ZF := #52 + 1 = 0
0001c7de: NF := 31:31[#52 + 1]
0001c7e5: when ~(CF & ~ZF) goto %0001c7e3
00045f82: goto %00020d45

00020d45:
00020d4a: R0 := mem[R31 + 0x18, el]:u64
00020d51: R0 := pad:64[mem[R0 + 0x14, el]:u32]
00020d57: R1 := pad:64[31:0[R0] + 1]
00020d5e: R0 := mem[R31 + 0x18, el]:u64
00020d66: mem := mem with [R0 + 0x14, el]:u32 <- 31:0[R1]
00045f83: goto %0001c7e3

0001c7e3:
0001c7ed: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001c7f3: #53 := 31:0[R0] - 0x37
0001c7f8: VF := extend:64[#53] <> extend:64[31:0[R0]] - 0x37
0001c7fd: CF := pad:64[#53] <> pad:64[31:0[R0]] + 0xFFFFFFC9
0001c801: ZF := #53 = 0
0001c805: NF := 31:31[#53]
0001c80c: when ~(CF & ~ZF) goto %0001c80a
00045f84: goto %00020d28

0001c80a:
0001c812: R1 := 0x38
0001c819: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001c820: R0 := pad:64[31:0[R1] + ~31:0[R0] + 1]
0001c826: R0 := pad:64[31:0[R0]]
00045f85: goto %0001c828

00020d28:
00020d2b: R1 := 0x78
00020d32: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00020d39: R0 := pad:64[31:0[R1] + ~31:0[R0] + 1]
00020d3f: R0 := pad:64[31:0[R0]]
00020d43: goto %0001c828

0001c828:
0001c82e: mem := mem with [R31 + 0x20, el]:u64 <- R0
0001c835: R0 := mem[R31 + 0x18, el]:u64
0001c83b: R1 := R0 + 0x1C
0001c842: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001c849: R3 := R1 + R0
0001c850: R2 := mem[R31 + 0x20, el]:u64
0001c855: R0 := 0x41D000
0001c85b: R1 := R0 + 0x80
0001c861: R0 := R3
0001c866: R30 := 0x4163A4
0001c869: call @memcpy with return %0001c86b

0001c86b:
0001c870: R0 := mem[R31 + 0x18, el]:u64
0001c877: R1 := pad:64[mem[R0 + 0x10, el]:u32]
0001c87e: R2 := pad:64[mem[R31 + 0x2C, el]:u32]
0001c885: R0 := mem[R31 + 0x20, el]:u64
0001c88c: R0 := R2 + R0
0001c892: R0 := pad:64[63:2[R0]]
0001c898: R1 := pad:64[28:0[R1].0]
0001c89f: R2 := mem[R31 + 0x18, el]:u64
0001c8a5: R0 := R0 + 4
0001c8ab: R0 := 61:0[R0].0
0001c8b2: R0 := R2 + R0
0001c8ba: mem := mem with [R0 + 0xC, el]:u32 <- 31:0[R1]
0001c8c1: R0 := mem[R31 + 0x18, el]:u64
0001c8c8: R0 := pad:64[mem[R0 + 0x14, el]:u32]
0001c8ce: R2 := pad:64[28:0[R0].0]
0001c8d5: R0 := mem[R31 + 0x18, el]:u64
0001c8dc: R0 := pad:64[mem[R0 + 0x10, el]:u32]
0001c8e2: R1 := pad:64[31:29[R0]]
0001c8e9: R3 := pad:64[mem[R31 + 0x2C, el]:u32]
0001c8f0: R0 := mem[R31 + 0x20, el]:u64
0001c8f7: R0 := R3 + R0
0001c8fd: R0 := pad:64[63:2[R0]]
0001c903: R0 := R0 + 1
0001c90a: R1 := pad:64[31:0[R2] | 31:0[R1]]
0001c911: R2 := mem[R31 + 0x18, el]:u64
0001c917: R0 := R0 + 4
0001c91d: R0 := 61:0[R0].0
0001c924: R0 := R2 + R0
0001c92c: mem := mem with [R0 + 0xC, el]:u32 <- 31:0[R1]
0001c933: R0 := mem[R31 + 0x18, el]:u64
0001c939: R3 := R0 + 0x1C
0001c940: R1 := pad:64[mem[R31 + 0x2C, el]:u32]
0001c947: R0 := mem[R31 + 0x20, el]:u64
0001c94e: R0 := R1 + R0
0001c954: R0 := R0 + 8
0001c95b: R2 := mem[R31 + 0x18, el]:u64
0001c961: R1 := R0
0001c967: R0 := R3
0001c96c: R30 := 0x416440
0001c96e: call @md4_process_block with return %0001c970

0001c970:
0001c975: R1 := mem[R31 + 0x10, el]:u64
0001c97c: R0 := mem[R31 + 0x18, el]:u64
0001c981: R30 := 0x41644C
0001c983: call @md4_read_ctx with return %0001c985

0001c985:
0001c98a: R29 := mem[R31, el]:u64
0001c98f: R30 := mem[R31 + 8, el]:u64
0001c993: R31 := R31 + 0x30
0001c998: call R30 with noreturn

00045f86: sub md4_init_ctx(md4_init_ctx_result)
0004634c: md4_init_ctx_result :: out u32 = low:32[R0]

0001c5d5:
0001c5d9: R31 := R31 - 0x10
0001c5e1: mem := mem with [R31 + 8, el]:u64 <- R0
0001c5e8: R0 := mem[R31 + 8, el]:u64
0001c5ed: R1 := 0x2301
0001c5f3: R1 := pad:64[0x6745.15:0[R1]]
0001c5fb: mem := mem with [R0, el]:u32 <- 31:0[R1]
0001c602: R0 := mem[R31 + 8, el]:u64
0001c607: R1 := 0xAB89
0001c60d: R1 := pad:64[0xEFCD.15:0[R1]]
0001c615: mem := mem with [R0 + 4, el]:u32 <- 31:0[R1]
0001c61c: R0 := mem[R31 + 8, el]:u64
0001c621: R1 := 0xDCFE
0001c627: R1 := pad:64[0x98BA.15:0[R1]]
0001c62f: mem := mem with [R0 + 8, el]:u32 <- 31:0[R1]
0001c636: R0 := mem[R31 + 8, el]:u64
0001c63b: R1 := 0x5476
0001c641: R1 := pad:64[0x1032.15:0[R1]]
0001c649: mem := mem with [R0 + 0xC, el]:u32 <- 31:0[R1]
0001c650: R0 := mem[R31 + 8, el]:u64
0001c657: mem := mem with [R0 + 0x14, el]:u32 <- 0
0001c65e: R0 := mem[R31 + 8, el]:u64
0001c665: R1 := pad:64[mem[R0 + 0x14, el]:u32]
0001c66c: R0 := mem[R31 + 8, el]:u64
0001c674: mem := mem with [R0 + 0x10, el]:u32 <- 31:0[R1]
0001c67b: R0 := mem[R31 + 8, el]:u64
0001c682: mem := mem with [R0 + 0x18, el]:u32 <- 0
0001c68a: R31 := R31 + 0x10
0001c68f: call R30 with noreturn

00045f87: sub md4_process_block(md4_process_block_result)
0004634d: md4_process_block_result :: out u32 = low:32[R0]

0001af5d:
0001af61: R31 := R31 - 0x90
0001af69: mem := mem with [R31 + 0x18, el]:u64 <- R0
0001af71: mem := mem with [R31 + 0x10, el]:u64 <- R1
0001af79: mem := mem with [R31 + 8, el]:u64 <- R2
0001af80: R0 := mem[R31 + 0x18, el]:u64
0001af88: mem := mem with [R31 + 0x88, el]:u64 <- R0
0001af8f: R0 := mem[R31 + 0x10, el]:u64
0001af95: R0 := pad:64[63:2[R0]]
0001af9d: mem := mem with [R31 + 0x68, el]:u64 <- R0
0001afa4: R0 := mem[R31 + 0x68, el]:u64
0001afaa: R0 := 61:0[R0].0
0001afb1: R1 := mem[R31 + 0x88, el]:u64
0001afb8: R0 := R1 + R0
0001afc0: mem := mem with [R31 + 0x60, el]:u64 <- R0
0001afc7: R0 := mem[R31 + 8, el]:u64
0001afce: R0 := pad:64[mem[R0, el]:u32]
0001afd6: mem := mem with [R31 + 0x84, el]:u32 <- 31:0[R0]
0001afdd: R0 := mem[R31 + 8, el]:u64
0001afe4: R0 := pad:64[mem[R0 + 4, el]:u32]
0001afec: mem := mem with [R31 + 0x80, el]:u32 <- 31:0[R0]
0001aff3: R0 := mem[R31 + 8, el]:u64
0001affa: R0 := pad:64[mem[R0 + 8, el]:u32]
0001b002: mem := mem with [R31 + 0x7C, el]:u32 <- 31:0[R0]
0001b009: R0 := mem[R31 + 8, el]:u64
0001b010: R0 := pad:64[mem[R0 + 0xC, el]:u32]
0001b018: mem := mem with [R31 + 0x78, el]:u32 <- 31:0[R0]
0001b01f: R0 := mem[R31 + 8, el]:u64
0001b026: R0 := pad:64[mem[R0 + 0x10, el]:u32]
0001b02d: R1 := mem[R31 + 0x10, el]:u64
0001b034: R1 := pad:64[31:0[R0] + 31:0[R1]]
0001b03b: R0 := mem[R31 + 8, el]:u64
0001b043: mem := mem with [R0 + 0x10, el]:u32 <- 31:0[R1]
0001b04a: R0 := mem[R31 + 8, el]:u64
0001b051: R0 := pad:64[mem[R0 + 0x10, el]:u32]
0001b057: R0 := pad:64[31:0[R0]]
0001b05e: R1 := mem[R31 + 0x10, el]:u64
0001b064: #45 := ~R0
0001b069: #46 := R1 + ~R0
0001b06f: VF := extend:128[#46 + 1] <> extend:128[R1] + extend:128[#45] + 1
0001b075: CF := pad:128[#46 + 1] <> pad:128[R1] + pad:128[#45] + 1
0001b079: ZF := #46 + 1 = 0
0001b07d: NF := 63:63[#46 + 1]
0001b084: when ~(CF & ~ZF) goto %0001b082
00045f88: goto %00020d68

00020d68:
00020d6d: R0 := mem[R31 + 8, el]:u64
00020d74: R0 := pad:64[mem[R0 + 0x14, el]:u32]
00020d7a: R1 := pad:64[31:0[R0] + 1]
00020d81: R0 := mem[R31 + 8, el]:u64
00020d89: mem := mem with [R0 + 0x14, el]:u32 <- 31:0[R1]
00020d8d: goto %0001b082

0001b082:
0001b08c: R1 := mem[R31 + 0x88, el]:u64
0001b093: R0 := mem[R31 + 0x60, el]:u64
0001b099: #47 := ~R0
0001b09e: #48 := R1 + ~R0
0001b0a4: VF := extend:128[#48 + 1] <> extend:128[R1] + extend:128[#47] + 1
0001b0aa: CF := pad:128[#48 + 1] <> pad:128[R1] + pad:128[#47] + 1
0001b0ae: ZF := #48 + 1 = 0
0001b0b2: NF := 63:63[#48 + 1]
0001b0b8: when CF <> 1 goto %0001b0b6
00045f89: goto %0001c5c6

0001c5c6:
0001c5ce: R31 := R31 + 0x90
0001c5d3: call R30 with noreturn

0001b0b6:
0001b0c0: mem := mem with [R31 + 0x74, el]:u32 <- 0
0001b0c5: goto %0001b0c3

0001b0c3:
0001b0cb: R0 := pad:64[mem[R31 + 0x74, el]:u32]
0001b0d1: #49 := 31:0[R0] - 0xF
0001b0d6: VF := extend:64[#49] <> extend:64[31:0[R0]] - 0xF
0001b0db: CF := pad:64[#49] <> pad:64[31:0[R0]] + 0xFFFFFFF1
0001b0df: ZF := #49 = 0
0001b0e3: NF := 31:31[#49]
0001b0eb: when ~(NF = VF & ~ZF) goto %0001b0e9
00045f8a: goto %0001b142

0001b142:
0001b147: R1 := pad:64[mem[R31 + 0x7C, el]:u32]
0001b14e: R0 := pad:64[mem[R31 + 0x78, el]:u32]
0001b155: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001b15c: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0001b163: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001b16a: R0 := pad:64[mem[R31 + 0x78, el]:u32]
0001b171: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001b178: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0001b17f: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001b186: R0 := pad:64[mem[R31 + 0x20, el]:u32]
0001b18d: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001b194: R0 := pad:64[28:0[R0].31:29[R0]]
0001b19c: mem := mem with [R31 + 0x84, el]:u32 <- 31:0[R0]
0001b1a3: R1 := pad:64[mem[R31 + 0x80, el]:u32]
0001b1aa: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0001b1b1: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001b1b8: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0001b1bf: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001b1c6: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0001b1cd: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001b1d4: R0 := pad:64[mem[R31 + 0x78, el]:u32]
0001b1db: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001b1e2: R0 := pad:64[mem[R31 + 0x24, el]:u32]
0001b1e9: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001b1f0: R0 := pad:64[24:0[R0].31:25[R0]]
0001b1f8: mem := mem with [R31 + 0x78, el]:u32 <- 31:0[R0]
0001b1ff: R1 := pad:64[mem[R31 + 0x84, el]:u32]
0001b206: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0001b20d: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001b214: R0 := pad:64[mem[R31 + 0x78, el]:u32]
0001b21b: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001b222: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0001b229: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001b230: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0001b237: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001b23e: R0 := pad:64[mem[R31 + 0x28, el]:u32]
0001b245: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001b24c: R0 := pad:64[20:0[R0].31:21[R0]]
0001b254: mem := mem with [R31 + 0x7C, el]:u32 <- 31:0[R0]
0001b25b: R1 := pad:64[mem[R31 + 0x78, el]:u32]
0001b262: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0001b269: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001b270: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0001b277: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001b27e: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0001b285: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001b28c: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0001b293: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001b29a: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001b2a1: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001b2a8: R0 := pad:64[12:0[R0].31:13[R0]]
0001b2b0: mem := mem with [R31 + 0x80, el]:u32 <- 31:0[R0]
0001b2b7: R1 := pad:64[mem[R31 + 0x7C, el]:u32]
0001b2be: R0 := pad:64[mem[R31 + 0x78, el]:u32]
0001b2c5: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001b2cc: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0001b2d3: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001b2da: R0 := pad:64[mem[R31 + 0x78, el]:u32]
0001b2e1: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001b2e8: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0001b2ef: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001b2f6: R0 := pad:64[mem[R31 + 0x30, el]:u32]
0001b2fd: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001b304: R0 := pad:64[28:0[R0].31:29[R0]]
0001b30c: mem := mem with [R31 + 0x84, el]:u32 <- 31:0[R0]
0001b313: R1 := pad:64[mem[R31 + 0x80, el]:u32]
0001b31a: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0001b321: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001b328: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0001b32f: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001b336: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0001b33d: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001b344: R0 := pad:64[mem[R31 + 0x78, el]:u32]
0001b34b: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001b352: R0 := pad:64[mem[R31 + 0x34, el]:u32]
0001b359: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001b360: R0 := pad:64[24:0[R0].31:25[R0]]
0001b368: mem := mem with [R31 + 0x78, el]:u32 <- 31:0[R0]
0001b36f: R1 := pad:64[mem[R31 + 0x84, el]:u32]
0001b376: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0001b37d: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001b384: R0 := pad:64[mem[R31 + 0x78, el]:u32]
0001b38b: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001b392: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0001b399: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001b3a0: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0001b3a7: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001b3ae: R0 := pad:64[mem[R31 + 0x38, el]:u32]
0001b3b5: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001b3bc: R0 := pad:64[20:0[R0].31:21[R0]]
0001b3c4: mem := mem with [R31 + 0x7C, el]:u32 <- 31:0[R0]
0001b3cb: R1 := pad:64[mem[R31 + 0x78, el]:u32]
0001b3d2: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0001b3d9: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001b3e0: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0001b3e7: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001b3ee: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0001b3f5: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001b3fc: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0001b403: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001b40a: R0 := pad:64[mem[R31 + 0x3C, el]:u32]
0001b411: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001b418: R0 := pad:64[12:0[R0].31:13[R0]]
0001b420: mem := mem with [R31 + 0x80, el]:u32 <- 31:0[R0]
0001b427: R1 := pad:64[mem[R31 + 0x7C, el]:u32]
0001b42e: R0 := pad:64[mem[R31 + 0x78, el]:u32]
0001b435: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001b43c: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0001b443: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001b44a: R0 := pad:64[mem[R31 + 0x78, el]:u32]
0001b451: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001b458: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0001b45f: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001b466: R0 := pad:64[mem[R31 + 0x40, el]:u32]
0001b46d: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001b474: R0 := pad:64[28:0[R0].31:29[R0]]
0001b47c: mem := mem with [R31 + 0x84, el]:u32 <- 31:0[R0]
0001b483: R1 := pad:64[mem[R31 + 0x80, el]:u32]
0001b48a: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0001b491: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001b498: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0001b49f: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001b4a6: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0001b4ad: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001b4b4: R0 := pad:64[mem[R31 + 0x78, el]:u32]
0001b4bb: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001b4c2: R0 := pad:64[mem[R31 + 0x44, el]:u32]
0001b4c9: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001b4d0: R0 := pad:64[24:0[R0].31:25[R0]]
0001b4d8: mem := mem with [R31 + 0x78, el]:u32 <- 31:0[R0]
0001b4df: R1 := pad:64[mem[R31 + 0x84, el]:u32]
0001b4e6: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0001b4ed: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001b4f4: R0 := pad:64[mem[R31 + 0x78, el]:u32]
0001b4fb: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001b502: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0001b509: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001b510: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0001b517: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001b51e: R0 := pad:64[mem[R31 + 0x48, el]:u32]
0001b525: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001b52c: R0 := pad:64[20:0[R0].31:21[R0]]
0001b534: mem := mem with [R31 + 0x7C, el]:u32 <- 31:0[R0]
0001b53b: R1 := pad:64[mem[R31 + 0x78, el]:u32]
0001b542: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0001b549: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001b550: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0001b557: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001b55e: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0001b565: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001b56c: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0001b573: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001b57a: R0 := pad:64[mem[R31 + 0x4C, el]:u32]
0001b581: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001b588: R0 := pad:64[12:0[R0].31:13[R0]]
0001b590: mem := mem with [R31 + 0x80, el]:u32 <- 31:0[R0]
0001b597: R1 := pad:64[mem[R31 + 0x7C, el]:u32]
0001b59e: R0 := pad:64[mem[R31 + 0x78, el]:u32]
0001b5a5: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001b5ac: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0001b5b3: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001b5ba: R0 := pad:64[mem[R31 + 0x78, el]:u32]
0001b5c1: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001b5c8: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0001b5cf: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001b5d6: R0 := pad:64[mem[R31 + 0x50, el]:u32]
0001b5dd: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001b5e4: R0 := pad:64[28:0[R0].31:29[R0]]
0001b5ec: mem := mem with [R31 + 0x84, el]:u32 <- 31:0[R0]
0001b5f3: R1 := pad:64[mem[R31 + 0x80, el]:u32]
0001b5fa: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0001b601: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001b608: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0001b60f: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001b616: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0001b61d: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001b624: R0 := pad:64[mem[R31 + 0x78, el]:u32]
0001b62b: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001b632: R0 := pad:64[mem[R31 + 0x54, el]:u32]
0001b639: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001b640: R0 := pad:64[24:0[R0].31:25[R0]]
0001b648: mem := mem with [R31 + 0x78, el]:u32 <- 31:0[R0]
0001b64f: R1 := pad:64[mem[R31 + 0x84, el]:u32]
0001b656: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0001b65d: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001b664: R0 := pad:64[mem[R31 + 0x78, el]:u32]
0001b66b: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001b672: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0001b679: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001b680: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0001b687: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001b68e: R0 := pad:64[mem[R31 + 0x58, el]:u32]
0001b695: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001b69c: R0 := pad:64[20:0[R0].31:21[R0]]
0001b6a4: mem := mem with [R31 + 0x7C, el]:u32 <- 31:0[R0]
0001b6ab: R1 := pad:64[mem[R31 + 0x78, el]:u32]
0001b6b2: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0001b6b9: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001b6c0: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0001b6c7: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001b6ce: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0001b6d5: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001b6dc: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0001b6e3: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001b6ea: R0 := pad:64[mem[R31 + 0x5C, el]:u32]
0001b6f1: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001b6f8: R0 := pad:64[12:0[R0].31:13[R0]]
0001b700: mem := mem with [R31 + 0x80, el]:u32 <- 31:0[R0]
0001b707: R1 := pad:64[mem[R31 + 0x7C, el]:u32]
0001b70e: R0 := pad:64[mem[R31 + 0x78, el]:u32]
0001b715: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001b71c: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0001b723: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001b72a: R2 := pad:64[mem[R31 + 0x7C, el]:u32]
0001b731: R0 := pad:64[mem[R31 + 0x78, el]:u32]
0001b738: R0 := pad:64[31:0[R2] & 31:0[R0]]
0001b73f: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001b746: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0001b74d: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001b754: R0 := pad:64[mem[R31 + 0x20, el]:u32]
0001b75b: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001b760: R0 := 0x7999
0001b766: R0 := pad:64[0x5A82.15:0[R0]]
0001b76d: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001b774: R0 := pad:64[28:0[R0].31:29[R0]]
0001b77c: mem := mem with [R31 + 0x84, el]:u32 <- 31:0[R0]
0001b783: R1 := pad:64[mem[R31 + 0x80, el]:u32]
0001b78a: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0001b791: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001b798: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0001b79f: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001b7a6: R2 := pad:64[mem[R31 + 0x80, el]:u32]
0001b7ad: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0001b7b4: R0 := pad:64[31:0[R2] & 31:0[R0]]
0001b7bb: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001b7c2: R0 := pad:64[mem[R31 + 0x78, el]:u32]
0001b7c9: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001b7d0: R0 := pad:64[mem[R31 + 0x30, el]:u32]
0001b7d7: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001b7dc: R0 := 0x7999
0001b7e2: R0 := pad:64[0x5A82.15:0[R0]]
0001b7e9: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001b7f0: R0 := pad:64[26:0[R0].31:27[R0]]
0001b7f8: mem := mem with [R31 + 0x78, el]:u32 <- 31:0[R0]
0001b7ff: R1 := pad:64[mem[R31 + 0x84, el]:u32]
0001b806: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0001b80d: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001b814: R0 := pad:64[mem[R31 + 0x78, el]:u32]
0001b81b: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001b822: R2 := pad:64[mem[R31 + 0x84, el]:u32]
0001b829: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0001b830: R0 := pad:64[31:0[R2] & 31:0[R0]]
0001b837: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001b83e: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0001b845: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001b84c: R0 := pad:64[mem[R31 + 0x40, el]:u32]
0001b853: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001b858: R0 := 0x7999
0001b85e: R0 := pad:64[0x5A82.15:0[R0]]
0001b865: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001b86c: R0 := pad:64[22:0[R0].31:23[R0]]
0001b874: mem := mem with [R31 + 0x7C, el]:u32 <- 31:0[R0]
0001b87b: R1 := pad:64[mem[R31 + 0x78, el]:u32]
0001b882: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0001b889: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001b890: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0001b897: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001b89e: R2 := pad:64[mem[R31 + 0x78, el]:u32]
0001b8a5: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0001b8ac: R0 := pad:64[31:0[R2] & 31:0[R0]]
0001b8b3: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001b8ba: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0001b8c1: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001b8c8: R0 := pad:64[mem[R31 + 0x50, el]:u32]
0001b8cf: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001b8d4: R0 := 0x7999
0001b8da: R0 := pad:64[0x5A82.15:0[R0]]
0001b8e1: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001b8e8: R0 := pad:64[18:0[R0].31:19[R0]]
0001b8f0: mem := mem with [R31 + 0x80, el]:u32 <- 31:0[R0]
0001b8f7: R1 := pad:64[mem[R31 + 0x7C, el]:u32]
0001b8fe: R0 := pad:64[mem[R31 + 0x78, el]:u32]
0001b905: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001b90c: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0001b913: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001b91a: R2 := pad:64[mem[R31 + 0x7C, el]:u32]
0001b921: R0 := pad:64[mem[R31 + 0x78, el]:u32]
0001b928: R0 := pad:64[31:0[R2] & 31:0[R0]]
0001b92f: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001b936: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0001b93d: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001b944: R0 := pad:64[mem[R31 + 0x24, el]:u32]
0001b94b: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001b950: R0 := 0x7999
0001b956: R0 := pad:64[0x5A82.15:0[R0]]
0001b95d: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001b964: R0 := pad:64[28:0[R0].31:29[R0]]
0001b96c: mem := mem with [R31 + 0x84, el]:u32 <- 31:0[R0]
0001b973: R1 := pad:64[mem[R31 + 0x80, el]:u32]
0001b97a: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0001b981: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001b988: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0001b98f: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001b996: R2 := pad:64[mem[R31 + 0x80, el]:u32]
0001b99d: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0001b9a4: R0 := pad:64[31:0[R2] & 31:0[R0]]
0001b9ab: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001b9b2: R0 := pad:64[mem[R31 + 0x78, el]:u32]
0001b9b9: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001b9c0: R0 := pad:64[mem[R31 + 0x34, el]:u32]
0001b9c7: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001b9cc: R0 := 0x7999
0001b9d2: R0 := pad:64[0x5A82.15:0[R0]]
0001b9d9: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001b9e0: R0 := pad:64[26:0[R0].31:27[R0]]
0001b9e8: mem := mem with [R31 + 0x78, el]:u32 <- 31:0[R0]
0001b9ef: R1 := pad:64[mem[R31 + 0x84, el]:u32]
0001b9f6: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0001b9fd: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001ba04: R0 := pad:64[mem[R31 + 0x78, el]:u32]
0001ba0b: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001ba12: R2 := pad:64[mem[R31 + 0x84, el]:u32]
0001ba19: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0001ba20: R0 := pad:64[31:0[R2] & 31:0[R0]]
0001ba27: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001ba2e: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0001ba35: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001ba3c: R0 := pad:64[mem[R31 + 0x44, el]:u32]
0001ba43: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001ba48: R0 := 0x7999
0001ba4e: R0 := pad:64[0x5A82.15:0[R0]]
0001ba55: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001ba5c: R0 := pad:64[22:0[R0].31:23[R0]]
0001ba64: mem := mem with [R31 + 0x7C, el]:u32 <- 31:0[R0]
0001ba6b: R1 := pad:64[mem[R31 + 0x78, el]:u32]
0001ba72: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0001ba79: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001ba80: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0001ba87: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001ba8e: R2 := pad:64[mem[R31 + 0x78, el]:u32]
0001ba95: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0001ba9c: R0 := pad:64[31:0[R2] & 31:0[R0]]
0001baa3: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001baaa: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0001bab1: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001bab8: R0 := pad:64[mem[R31 + 0x54, el]:u32]
0001babf: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001bac4: R0 := 0x7999
0001baca: R0 := pad:64[0x5A82.15:0[R0]]
0001bad1: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001bad8: R0 := pad:64[18:0[R0].31:19[R0]]
0001bae0: mem := mem with [R31 + 0x80, el]:u32 <- 31:0[R0]
0001bae7: R1 := pad:64[mem[R31 + 0x7C, el]:u32]
0001baee: R0 := pad:64[mem[R31 + 0x78, el]:u32]
0001baf5: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001bafc: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0001bb03: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001bb0a: R2 := pad:64[mem[R31 + 0x7C, el]:u32]
0001bb11: R0 := pad:64[mem[R31 + 0x78, el]:u32]
0001bb18: R0 := pad:64[31:0[R2] & 31:0[R0]]
0001bb1f: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001bb26: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0001bb2d: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001bb34: R0 := pad:64[mem[R31 + 0x28, el]:u32]
0001bb3b: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001bb40: R0 := 0x7999
0001bb46: R0 := pad:64[0x5A82.15:0[R0]]
0001bb4d: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001bb54: R0 := pad:64[28:0[R0].31:29[R0]]
0001bb5c: mem := mem with [R31 + 0x84, el]:u32 <- 31:0[R0]
0001bb63: R1 := pad:64[mem[R31 + 0x80, el]:u32]
0001bb6a: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0001bb71: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001bb78: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0001bb7f: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001bb86: R2 := pad:64[mem[R31 + 0x80, el]:u32]
0001bb8d: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0001bb94: R0 := pad:64[31:0[R2] & 31:0[R0]]
0001bb9b: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001bba2: R0 := pad:64[mem[R31 + 0x78, el]:u32]
0001bba9: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001bbb0: R0 := pad:64[mem[R31 + 0x38, el]:u32]
0001bbb7: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001bbbc: R0 := 0x7999
0001bbc2: R0 := pad:64[0x5A82.15:0[R0]]
0001bbc9: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001bbd0: R0 := pad:64[26:0[R0].31:27[R0]]
0001bbd8: mem := mem with [R31 + 0x78, el]:u32 <- 31:0[R0]
0001bbdf: R1 := pad:64[mem[R31 + 0x84, el]:u32]
0001bbe6: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0001bbed: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001bbf4: R0 := pad:64[mem[R31 + 0x78, el]:u32]
0001bbfb: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001bc02: R2 := pad:64[mem[R31 + 0x84, el]:u32]
0001bc09: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0001bc10: R0 := pad:64[31:0[R2] & 31:0[R0]]
0001bc17: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001bc1e: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0001bc25: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001bc2c: R0 := pad:64[mem[R31 + 0x48, el]:u32]
0001bc33: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001bc38: R0 := 0x7999
0001bc3e: R0 := pad:64[0x5A82.15:0[R0]]
0001bc45: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001bc4c: R0 := pad:64[22:0[R0].31:23[R0]]
0001bc54: mem := mem with [R31 + 0x7C, el]:u32 <- 31:0[R0]
0001bc5b: R1 := pad:64[mem[R31 + 0x78, el]:u32]
0001bc62: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0001bc69: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001bc70: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0001bc77: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001bc7e: R2 := pad:64[mem[R31 + 0x78, el]:u32]
0001bc85: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0001bc8c: R0 := pad:64[31:0[R2] & 31:0[R0]]
0001bc93: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001bc9a: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0001bca1: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001bca8: R0 := pad:64[mem[R31 + 0x58, el]:u32]
0001bcaf: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001bcb4: R0 := 0x7999
0001bcba: R0 := pad:64[0x5A82.15:0[R0]]
0001bcc1: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001bcc8: R0 := pad:64[18:0[R0].31:19[R0]]
0001bcd0: mem := mem with [R31 + 0x80, el]:u32 <- 31:0[R0]
0001bcd7: R1 := pad:64[mem[R31 + 0x7C, el]:u32]
0001bcde: R0 := pad:64[mem[R31 + 0x78, el]:u32]
0001bce5: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001bcec: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0001bcf3: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001bcfa: R2 := pad:64[mem[R31 + 0x7C, el]:u32]
0001bd01: R0 := pad:64[mem[R31 + 0x78, el]:u32]
0001bd08: R0 := pad:64[31:0[R2] & 31:0[R0]]
0001bd0f: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001bd16: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0001bd1d: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001bd24: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001bd2b: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001bd30: R0 := 0x7999
0001bd36: R0 := pad:64[0x5A82.15:0[R0]]
0001bd3d: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001bd44: R0 := pad:64[28:0[R0].31:29[R0]]
0001bd4c: mem := mem with [R31 + 0x84, el]:u32 <- 31:0[R0]
0001bd53: R1 := pad:64[mem[R31 + 0x80, el]:u32]
0001bd5a: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0001bd61: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001bd68: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0001bd6f: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001bd76: R2 := pad:64[mem[R31 + 0x80, el]:u32]
0001bd7d: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0001bd84: R0 := pad:64[31:0[R2] & 31:0[R0]]
0001bd8b: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001bd92: R0 := pad:64[mem[R31 + 0x78, el]:u32]
0001bd99: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001bda0: R0 := pad:64[mem[R31 + 0x3C, el]:u32]
0001bda7: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001bdac: R0 := 0x7999
0001bdb2: R0 := pad:64[0x5A82.15:0[R0]]
0001bdb9: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001bdc0: R0 := pad:64[26:0[R0].31:27[R0]]
0001bdc8: mem := mem with [R31 + 0x78, el]:u32 <- 31:0[R0]
0001bdcf: R1 := pad:64[mem[R31 + 0x84, el]:u32]
0001bdd6: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0001bddd: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001bde4: R0 := pad:64[mem[R31 + 0x78, el]:u32]
0001bdeb: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001bdf2: R2 := pad:64[mem[R31 + 0x84, el]:u32]
0001bdf9: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0001be00: R0 := pad:64[31:0[R2] & 31:0[R0]]
0001be07: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001be0e: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0001be15: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001be1c: R0 := pad:64[mem[R31 + 0x4C, el]:u32]
0001be23: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001be28: R0 := 0x7999
0001be2e: R0 := pad:64[0x5A82.15:0[R0]]
0001be35: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001be3c: R0 := pad:64[22:0[R0].31:23[R0]]
0001be44: mem := mem with [R31 + 0x7C, el]:u32 <- 31:0[R0]
0001be4b: R1 := pad:64[mem[R31 + 0x78, el]:u32]
0001be52: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0001be59: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001be60: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0001be67: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001be6e: R2 := pad:64[mem[R31 + 0x78, el]:u32]
0001be75: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0001be7c: R0 := pad:64[31:0[R2] & 31:0[R0]]
0001be83: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001be8a: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0001be91: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001be98: R0 := pad:64[mem[R31 + 0x5C, el]:u32]
0001be9f: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001bea4: R0 := 0x7999
0001beaa: R0 := pad:64[0x5A82.15:0[R0]]
0001beb1: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001beb8: R0 := pad:64[18:0[R0].31:19[R0]]
0001bec0: mem := mem with [R31 + 0x80, el]:u32 <- 31:0[R0]
0001bec7: R1 := pad:64[mem[R31 + 0x80, el]:u32]
0001bece: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0001bed5: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001bedc: R0 := pad:64[mem[R31 + 0x78, el]:u32]
0001bee3: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001beea: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0001bef1: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001bef8: R0 := pad:64[mem[R31 + 0x20, el]:u32]
0001beff: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001bf04: R0 := 0xEBA1
0001bf0a: R0 := pad:64[0x6ED9.15:0[R0]]
0001bf11: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001bf18: R0 := pad:64[28:0[R0].31:29[R0]]
0001bf20: mem := mem with [R31 + 0x84, el]:u32 <- 31:0[R0]
0001bf27: R1 := pad:64[mem[R31 + 0x84, el]:u32]
0001bf2e: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0001bf35: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001bf3c: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0001bf43: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001bf4a: R0 := pad:64[mem[R31 + 0x78, el]:u32]
0001bf51: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001bf58: R0 := pad:64[mem[R31 + 0x40, el]:u32]
0001bf5f: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001bf64: R0 := 0xEBA1
0001bf6a: R0 := pad:64[0x6ED9.15:0[R0]]
0001bf71: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001bf78: R0 := pad:64[22:0[R0].31:23[R0]]
0001bf80: mem := mem with [R31 + 0x78, el]:u32 <- 31:0[R0]
0001bf87: R1 := pad:64[mem[R31 + 0x78, el]:u32]
0001bf8e: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0001bf95: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001bf9c: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0001bfa3: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001bfaa: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0001bfb1: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001bfb8: R0 := pad:64[mem[R31 + 0x30, el]:u32]
0001bfbf: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001bfc4: R0 := 0xEBA1
0001bfca: R0 := pad:64[0x6ED9.15:0[R0]]
0001bfd1: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001bfd8: R0 := pad:64[20:0[R0].31:21[R0]]
0001bfe0: mem := mem with [R31 + 0x7C, el]:u32 <- 31:0[R0]
0001bfe7: R1 := pad:64[mem[R31 + 0x7C, el]:u32]
0001bfee: R0 := pad:64[mem[R31 + 0x78, el]:u32]
0001bff5: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001bffc: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0001c003: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001c00a: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0001c011: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001c018: R0 := pad:64[mem[R31 + 0x50, el]:u32]
0001c01f: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001c024: R0 := 0xEBA1
0001c02a: R0 := pad:64[0x6ED9.15:0[R0]]
0001c031: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001c038: R0 := pad:64[16:0[R0].31:17[R0]]
0001c040: mem := mem with [R31 + 0x80, el]:u32 <- 31:0[R0]
0001c047: R1 := pad:64[mem[R31 + 0x80, el]:u32]
0001c04e: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0001c055: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001c05c: R0 := pad:64[mem[R31 + 0x78, el]:u32]
0001c063: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001c06a: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0001c071: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001c078: R0 := pad:64[mem[R31 + 0x28, el]:u32]
0001c07f: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001c084: R0 := 0xEBA1
0001c08a: R0 := pad:64[0x6ED9.15:0[R0]]
0001c091: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001c098: R0 := pad:64[28:0[R0].31:29[R0]]
0001c0a0: mem := mem with [R31 + 0x84, el]:u32 <- 31:0[R0]
0001c0a7: R1 := pad:64[mem[R31 + 0x84, el]:u32]
0001c0ae: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0001c0b5: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001c0bc: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0001c0c3: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001c0ca: R0 := pad:64[mem[R31 + 0x78, el]:u32]
0001c0d1: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001c0d8: R0 := pad:64[mem[R31 + 0x48, el]:u32]
0001c0df: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001c0e4: R0 := 0xEBA1
0001c0ea: R0 := pad:64[0x6ED9.15:0[R0]]
0001c0f1: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001c0f8: R0 := pad:64[22:0[R0].31:23[R0]]
0001c100: mem := mem with [R31 + 0x78, el]:u32 <- 31:0[R0]
0001c107: R1 := pad:64[mem[R31 + 0x78, el]:u32]
0001c10e: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0001c115: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001c11c: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0001c123: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001c12a: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0001c131: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001c138: R0 := pad:64[mem[R31 + 0x38, el]:u32]
0001c13f: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001c144: R0 := 0xEBA1
0001c14a: R0 := pad:64[0x6ED9.15:0[R0]]
0001c151: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001c158: R0 := pad:64[20:0[R0].31:21[R0]]
0001c160: mem := mem with [R31 + 0x7C, el]:u32 <- 31:0[R0]
0001c167: R1 := pad:64[mem[R31 + 0x7C, el]:u32]
0001c16e: R0 := pad:64[mem[R31 + 0x78, el]:u32]
0001c175: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001c17c: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0001c183: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001c18a: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0001c191: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001c198: R0 := pad:64[mem[R31 + 0x58, el]:u32]
0001c19f: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001c1a4: R0 := 0xEBA1
0001c1aa: R0 := pad:64[0x6ED9.15:0[R0]]
0001c1b1: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001c1b8: R0 := pad:64[16:0[R0].31:17[R0]]
0001c1c0: mem := mem with [R31 + 0x80, el]:u32 <- 31:0[R0]
0001c1c7: R1 := pad:64[mem[R31 + 0x80, el]:u32]
0001c1ce: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0001c1d5: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001c1dc: R0 := pad:64[mem[R31 + 0x78, el]:u32]
0001c1e3: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001c1ea: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0001c1f1: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001c1f8: R0 := pad:64[mem[R31 + 0x24, el]:u32]
0001c1ff: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001c204: R0 := 0xEBA1
0001c20a: R0 := pad:64[0x6ED9.15:0[R0]]
0001c211: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001c218: R0 := pad:64[28:0[R0].31:29[R0]]
0001c220: mem := mem with [R31 + 0x84, el]:u32 <- 31:0[R0]
0001c227: R1 := pad:64[mem[R31 + 0x84, el]:u32]
0001c22e: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0001c235: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001c23c: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0001c243: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001c24a: R0 := pad:64[mem[R31 + 0x78, el]:u32]
0001c251: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001c258: R0 := pad:64[mem[R31 + 0x44, el]:u32]
0001c25f: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001c264: R0 := 0xEBA1
0001c26a: R0 := pad:64[0x6ED9.15:0[R0]]
0001c271: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001c278: R0 := pad:64[22:0[R0].31:23[R0]]
0001c280: mem := mem with [R31 + 0x78, el]:u32 <- 31:0[R0]
0001c287: R1 := pad:64[mem[R31 + 0x78, el]:u32]
0001c28e: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0001c295: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001c29c: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0001c2a3: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001c2aa: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0001c2b1: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001c2b8: R0 := pad:64[mem[R31 + 0x34, el]:u32]
0001c2bf: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001c2c4: R0 := 0xEBA1
0001c2ca: R0 := pad:64[0x6ED9.15:0[R0]]
0001c2d1: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001c2d8: R0 := pad:64[20:0[R0].31:21[R0]]
0001c2e0: mem := mem with [R31 + 0x7C, el]:u32 <- 31:0[R0]
0001c2e7: R1 := pad:64[mem[R31 + 0x7C, el]:u32]
0001c2ee: R0 := pad:64[mem[R31 + 0x78, el]:u32]
0001c2f5: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001c2fc: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0001c303: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001c30a: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0001c311: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001c318: R0 := pad:64[mem[R31 + 0x54, el]:u32]
0001c31f: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001c324: R0 := 0xEBA1
0001c32a: R0 := pad:64[0x6ED9.15:0[R0]]
0001c331: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001c338: R0 := pad:64[16:0[R0].31:17[R0]]
0001c340: mem := mem with [R31 + 0x80, el]:u32 <- 31:0[R0]
0001c347: R1 := pad:64[mem[R31 + 0x80, el]:u32]
0001c34e: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0001c355: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001c35c: R0 := pad:64[mem[R31 + 0x78, el]:u32]
0001c363: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001c36a: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0001c371: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001c378: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001c37f: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001c384: R0 := 0xEBA1
0001c38a: R0 := pad:64[0x6ED9.15:0[R0]]
0001c391: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001c398: R0 := pad:64[28:0[R0].31:29[R0]]
0001c3a0: mem := mem with [R31 + 0x84, el]:u32 <- 31:0[R0]
0001c3a7: R1 := pad:64[mem[R31 + 0x84, el]:u32]
0001c3ae: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0001c3b5: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001c3bc: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0001c3c3: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001c3ca: R0 := pad:64[mem[R31 + 0x78, el]:u32]
0001c3d1: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001c3d8: R0 := pad:64[mem[R31 + 0x4C, el]:u32]
0001c3df: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001c3e4: R0 := 0xEBA1
0001c3ea: R0 := pad:64[0x6ED9.15:0[R0]]
0001c3f1: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001c3f8: R0 := pad:64[22:0[R0].31:23[R0]]
0001c400: mem := mem with [R31 + 0x78, el]:u32 <- 31:0[R0]
0001c407: R1 := pad:64[mem[R31 + 0x78, el]:u32]
0001c40e: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0001c415: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001c41c: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0001c423: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001c42a: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0001c431: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001c438: R0 := pad:64[mem[R31 + 0x3C, el]:u32]
0001c43f: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001c444: R0 := 0xEBA1
0001c44a: R0 := pad:64[0x6ED9.15:0[R0]]
0001c451: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001c458: R0 := pad:64[20:0[R0].31:21[R0]]
0001c460: mem := mem with [R31 + 0x7C, el]:u32 <- 31:0[R0]
0001c467: R1 := pad:64[mem[R31 + 0x7C, el]:u32]
0001c46e: R0 := pad:64[mem[R31 + 0x78, el]:u32]
0001c475: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001c47c: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0001c483: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001c48a: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0001c491: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001c498: R0 := pad:64[mem[R31 + 0x5C, el]:u32]
0001c49f: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001c4a4: R0 := 0xEBA1
0001c4aa: R0 := pad:64[0x6ED9.15:0[R0]]
0001c4b1: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001c4b8: R0 := pad:64[16:0[R0].31:17[R0]]
0001c4c0: mem := mem with [R31 + 0x80, el]:u32 <- 31:0[R0]
0001c4c7: R0 := mem[R31 + 8, el]:u64
0001c4ce: R1 := pad:64[mem[R0, el]:u32]
0001c4d5: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0001c4dc: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001c4e3: R0 := mem[R31 + 8, el]:u64
0001c4eb: mem := mem with [R0, el]:u32 <- 31:0[R1]
0001c4f2: R0 := mem[R31 + 8, el]:u64
0001c4f9: R0 := pad:64[mem[R0, el]:u32]
0001c501: mem := mem with [R31 + 0x84, el]:u32 <- 31:0[R0]
0001c508: R0 := mem[R31 + 8, el]:u64
0001c50f: R1 := pad:64[mem[R0 + 4, el]:u32]
0001c516: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0001c51d: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001c524: R0 := mem[R31 + 8, el]:u64
0001c52c: mem := mem with [R0 + 4, el]:u32 <- 31:0[R1]
0001c533: R0 := mem[R31 + 8, el]:u64
0001c53a: R0 := pad:64[mem[R0 + 4, el]:u32]
0001c542: mem := mem with [R31 + 0x80, el]:u32 <- 31:0[R0]
0001c549: R0 := mem[R31 + 8, el]:u64
0001c550: R1 := pad:64[mem[R0 + 8, el]:u32]
0001c557: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0001c55e: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001c565: R0 := mem[R31 + 8, el]:u64
0001c56d: mem := mem with [R0 + 8, el]:u32 <- 31:0[R1]
0001c574: R0 := mem[R31 + 8, el]:u64
0001c57b: R0 := pad:64[mem[R0 + 8, el]:u32]
0001c583: mem := mem with [R31 + 0x7C, el]:u32 <- 31:0[R0]
0001c58a: R0 := mem[R31 + 8, el]:u64
0001c591: R1 := pad:64[mem[R0 + 0xC, el]:u32]
0001c598: R0 := pad:64[mem[R31 + 0x78, el]:u32]
0001c59f: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001c5a6: R0 := mem[R31 + 8, el]:u64
0001c5ae: mem := mem with [R0 + 0xC, el]:u32 <- 31:0[R1]
0001c5b5: R0 := mem[R31 + 8, el]:u64
0001c5bc: R0 := pad:64[mem[R0 + 0xC, el]:u32]
0001c5c4: mem := mem with [R31 + 0x78, el]:u32 <- 31:0[R0]
00045f8b: goto %0001b082

0001b0e9:
0001b0f3: R0 := mem[R31 + 0x88, el]:u64
0001b0fa: R2 := pad:64[mem[R0, el]:u32]
0001b101: R0 := extend:64[mem[R31 + 0x74, el]:u32]
0001b107: R0 := 61:0[R0].0
0001b10d: R1 := R31 + 0x20
0001b116: mem := mem with [R1 + R0, el]:u32 <- 31:0[R2]
0001b11d: R0 := mem[R31 + 0x88, el]:u64
0001b123: R0 := R0 + 4
0001b12b: mem := mem with [R31 + 0x88, el]:u64 <- R0
0001b132: R0 := pad:64[mem[R31 + 0x74, el]:u32]
0001b138: R0 := pad:64[31:0[R0] + 1]
0001b140: mem := mem with [R31 + 0x74, el]:u32 <- 31:0[R0]
00045f8c: goto %0001b0c3

00045f8d: sub md4_process_bytes(md4_process_bytes_result)
0004634e: md4_process_bytes_result :: out u32 = low:32[R0]

0001c99a:
0001c99e: #54 := R31 - 0x50
0001c9a4: mem := mem with [#54, el]:u64 <- R29
0001c9aa: mem := mem with [#54 + 8, el]:u64 <- R30
0001c9ae: R31 := #54
0001c9b4: R29 := R31
0001c9bc: mem := mem with [R31 + 0x28, el]:u64 <- R0
0001c9c4: mem := mem with [R31 + 0x20, el]:u64 <- R1
0001c9cc: mem := mem with [R31 + 0x18, el]:u64 <- R2
0001c9d3: R0 := mem[R31 + 0x18, el]:u64
0001c9da: R0 := pad:64[mem[R0 + 0x18, el]:u32]
0001c9df: VF := 0
0001c9e2: CF := 1
0001c9e6: ZF := 31:0[R0] = 0
0001c9ea: NF := 31:31[R0]
0001c9f0: when ZF goto %0001c9ee
00045f8e: goto %00020b28

00020b28:
00020b2d: R0 := mem[R31 + 0x18, el]:u64
00020b34: R0 := pad:64[mem[R0 + 0x18, el]:u32]
00020b3a: R0 := pad:64[31:0[R0]]
00020b42: mem := mem with [R31 + 0x40, el]:u64 <- R0
00020b47: R1 := 0x80
00020b4e: R0 := mem[R31 + 0x40, el]:u64
00020b55: R0 := R1 + ~R0 + 1
00020b5c: R2 := mem[R31 + 0x20, el]:u64
00020b63: R1 := mem[R31 + 0x20, el]:u64
00020b69: #81 := ~R0
00020b6e: #82 := R2 + ~R0
00020b74: VF := extend:128[#82 + 1] <> extend:128[R2] + extend:128[#81] + 1
00020b7a: CF := pad:128[#82 + 1] <> pad:128[R2] + pad:128[#81] + 1
00020b7e: ZF := #82 + 1 = 0
00020b82: NF := 63:63[#82 + 1]
00020b91: when ~(CF & ~ZF) goto %00020b89
00020b92: goto %00020b8d

00020b8d:
00020b8e: R0 := R0
00020b94: goto %00020b90

00020b89:
00020b8a: R0 := R1
00020b93: goto %00020b90

00020b90:
00020b9c: mem := mem with [R31 + 0x38, el]:u64 <- R0
00020ba3: R0 := mem[R31 + 0x18, el]:u64
00020ba9: R1 := R0 + 0x1C
00020bb0: R0 := mem[R31 + 0x40, el]:u64
00020bb7: R0 := R1 + R0
00020bbe: R2 := mem[R31 + 0x38, el]:u64
00020bc5: R1 := mem[R31 + 0x28, el]:u64
00020bca: R30 := 0x4164C4
00020bcc: call @memcpy with return %00020bce

00020bce:
00020bd3: R0 := mem[R31 + 0x18, el]:u64
00020bda: R0 := pad:64[mem[R0 + 0x18, el]:u32]
00020be1: R1 := mem[R31 + 0x38, el]:u64
00020be8: R1 := pad:64[31:0[R0] + 31:0[R1]]
00020bef: R0 := mem[R31 + 0x18, el]:u64
00020bf7: mem := mem with [R0 + 0x18, el]:u32 <- 31:0[R1]
00020bfe: R0 := mem[R31 + 0x18, el]:u64
00020c05: R0 := pad:64[mem[R0 + 0x18, el]:u32]
00020c0b: #83 := 31:0[R0] - 0x40
00020c10: VF := extend:64[#83] <> extend:64[31:0[R0]] - 0x40
00020c15: CF := pad:64[#83] <> pad:64[31:0[R0]] + 0xFFFFFFC0
00020c19: ZF := #83 = 0
00020c1d: NF := 31:31[#83]
00020c24: when ~(CF & ~ZF) goto %00020c22
00045f8f: goto %00020c61

00020c61:
00020c66: R0 := mem[R31 + 0x18, el]:u64
00020c6c: R3 := R0 + 0x1C
00020c73: R0 := mem[R31 + 0x18, el]:u64
00020c7a: R0 := pad:64[mem[R0 + 0x18, el]:u32]
00020c80: R0 := pad:64[31:0[R0]]
00020c86: R0 := pad:64[31:6[R0].0]
00020c8d: R2 := mem[R31 + 0x18, el]:u64
00020c93: R1 := R0
00020c99: R0 := R3
00020c9e: R30 := 0x416514
00020ca0: call @md4_process_block with return %00020ca2

00020ca2:
00020ca7: R0 := mem[R31 + 0x18, el]:u64
00020cae: R0 := pad:64[mem[R0 + 0x18, el]:u32]
00020cb4: R1 := pad:64[5:0[R0]]
00020cbb: R0 := mem[R31 + 0x18, el]:u64
00020cc3: mem := mem with [R0 + 0x18, el]:u32 <- 31:0[R1]
00020cca: R0 := mem[R31 + 0x18, el]:u64
00020cd0: R3 := R0 + 0x1C
00020cd7: R0 := mem[R31 + 0x18, el]:u64
00020cdd: R1 := R0 + 0x1C
00020ce4: R2 := mem[R31 + 0x40, el]:u64
00020ceb: R0 := mem[R31 + 0x38, el]:u64
00020cf2: R0 := R2 + R0
00020cf8: R0 := 63:6[R0].0
00020cff: R1 := R1 + R0
00020d06: R0 := mem[R31 + 0x18, el]:u64
00020d0d: R0 := pad:64[mem[R0 + 0x18, el]:u32]
00020d13: R0 := pad:64[31:0[R0]]
00020d19: R2 := R0
00020d1f: R0 := R3
00020d24: R30 := 0x416564
00020d26: call @memcpy with return %00020c22

00020c22:
00020c2c: R1 := mem[R31 + 0x28, el]:u64
00020c33: R0 := mem[R31 + 0x38, el]:u64
00020c3a: R0 := R1 + R0
00020c42: mem := mem with [R31 + 0x28, el]:u64 <- R0
00020c49: R1 := mem[R31 + 0x20, el]:u64
00020c50: R0 := mem[R31 + 0x38, el]:u64
00020c57: R0 := R1 + ~R0 + 1
00020c5f: mem := mem with [R31 + 0x20, el]:u64 <- R0
00045f90: goto %0001c9ee

0001c9ee:
0001c9f8: R0 := mem[R31 + 0x20, el]:u64
0001c9fe: #55 := R0 - 0x3F
0001ca03: VF := extend:128[#55] <> extend:128[R0] - 0x3F
0001ca08: CF := pad:128[#55] <> pad:128[R0] + 0xFFFFFFFFFFFFFFC1
0001ca0c: ZF := #55 = 0
0001ca10: NF := 63:63[#55]
0001ca17: when ~(CF & ~ZF) goto %0001ca15
00045f91: goto %00020a18

00020a18:
00020a1d: R0 := mem[R31 + 0x28, el]:u64
00020a23: R0 := pad:64[1:0[R0]]
00020a28: VF := 0
00020a2b: CF := 1
00020a2f: ZF := R0 = 0
00020a33: NF := 63:63[R0]
00020a39: when ZF goto %00020a37
00045f92: goto %00020a9c

00020a37:
00020a41: R0 := mem[R31 + 0x20, el]:u64
00020a47: R0 := 63:6[R0].0
00020a4e: R2 := mem[R31 + 0x18, el]:u64
00020a54: R1 := R0
00020a5b: R0 := mem[R31 + 0x28, el]:u64
00020a60: R30 := 0x416604
00020a62: call @md4_process_block with return %00020a64

00020a64:
00020a69: R0 := mem[R31 + 0x20, el]:u64
00020a6f: R0 := 63:6[R0].0
00020a76: R1 := mem[R31 + 0x28, el]:u64
00020a7d: R0 := R1 + R0
00020a85: mem := mem with [R31 + 0x28, el]:u64 <- R0
00020a8c: R0 := mem[R31 + 0x20, el]:u64
00020a92: R0 := pad:64[5:0[R0]]
00020a9a: mem := mem with [R31 + 0x20, el]:u64 <- R0
00045f93: goto %0001ca15

00020a9c:
00020a9f: goto %00020a9d

00020a9d:
00020aa5: R0 := mem[R31 + 0x20, el]:u64
00020aab: #80 := R0 - 0x40
00020ab0: VF := extend:128[#80] <> extend:128[R0] - 0x40
00020ab5: CF := pad:128[#80] <> pad:128[R0] + 0xFFFFFFFFFFFFFFC0
00020ab9: ZF := #80 = 0
00020abd: NF := 63:63[#80]
00020ac4: when CF & ~ZF goto %00020ac2
00045f94: goto %00020b24

00020b24:
00020b26: goto %0001ca15

0001ca15:
0001ca1f: R0 := mem[R31 + 0x20, el]:u64
0001ca24: VF := 0
0001ca27: CF := 1
0001ca2b: ZF := R0 = 0
0001ca2f: NF := 63:63[R0]
0001ca35: when ZF goto %0001ca33
00045f95: goto %00020903

00020903:
00020908: R0 := mem[R31 + 0x18, el]:u64
0002090f: R0 := pad:64[mem[R0 + 0x18, el]:u32]
00020915: R0 := pad:64[31:0[R0]]
0002091d: mem := mem with [R31 + 0x48, el]:u64 <- R0
00020924: R0 := mem[R31 + 0x18, el]:u64
0002092a: R1 := R0 + 0x1C
00020931: R0 := mem[R31 + 0x48, el]:u64
00020938: R0 := R1 + R0
0002093f: R2 := mem[R31 + 0x20, el]:u64
00020946: R1 := mem[R31 + 0x28, el]:u64
0002094b: R30 := 0x41665C
0002094d: call @memcpy with return %0002094f

0002094f:
00020954: R1 := mem[R31 + 0x48, el]:u64
0002095b: R0 := mem[R31 + 0x20, el]:u64
00020962: R0 := R1 + R0
0002096a: mem := mem with [R31 + 0x48, el]:u64 <- R0
00020971: R0 := mem[R31 + 0x48, el]:u64
00020977: #79 := R0 - 0x3F
0002097c: VF := extend:128[#79] <> extend:128[R0] - 0x3F
00020981: CF := pad:128[#79] <> pad:128[R0] + 0xFFFFFFFFFFFFFFC1
00020985: ZF := #79 = 0
00020989: NF := 63:63[#79]
00020990: when ~(CF & ~ZF) goto %0002098e
00045f96: goto %000209af

000209af:
000209b4: R0 := mem[R31 + 0x18, el]:u64
000209ba: R0 := R0 + 0x1C
000209c1: R2 := mem[R31 + 0x18, el]:u64
000209c6: R1 := 0x40
000209cb: R30 := 0x41668C
000209cd: call @md4_process_block with return %000209cf

000209cf:
000209d4: R0 := mem[R31 + 0x48, el]:u64
000209da: R0 := R0 - 0x40
000209e2: mem := mem with [R31 + 0x48, el]:u64 <- R0
000209e9: R0 := mem[R31 + 0x18, el]:u64
000209ef: R3 := R0 + 0x1C
000209f6: R0 := mem[R31 + 0x18, el]:u64
000209fc: R0 := R0 + 0x5C
00020a03: R2 := mem[R31 + 0x48, el]:u64
00020a09: R1 := R0
00020a0f: R0 := R3
00020a14: R30 := 0x4166B8
00020a16: call @memcpy with return %0002098e

0002098e:
00020998: R0 := mem[R31 + 0x48, el]:u64
0002099e: R1 := pad:64[31:0[R0]]
000209a5: R0 := mem[R31 + 0x18, el]:u64
000209ad: mem := mem with [R0 + 0x18, el]:u32 <- 31:0[R1]
00045f97: goto %0001ca33

0001ca33:
0001ca3f: R29 := mem[R31, el]:u64
0001ca44: R30 := mem[R31 + 8, el]:u64
0001ca48: R31 := R31 + 0x50
0001ca4d: call R30 with noreturn

00020ac2:
00020acc: R0 := mem[R31 + 0x18, el]:u64
00020ad2: R0 := R0 + 0x1C
00020ad7: R2 := 0x40
00020ade: R1 := mem[R31 + 0x28, el]:u64
00020ae3: R30 := 0x4165B8
00020ae5: call @memcpy with return %00020ae7

00020ae7:
00020aec: R2 := mem[R31 + 0x18, el]:u64
00020af1: R1 := 0x40
00020af6: R30 := 0x4165C4
00020af8: call @md4_process_block with return %00020afa

00020afa:
00020aff: R0 := mem[R31 + 0x28, el]:u64
00020b05: R0 := R0 + 0x40
00020b0d: mem := mem with [R31 + 0x28, el]:u64 <- R0
00020b14: R0 := mem[R31 + 0x20, el]:u64
00020b1a: R0 := R0 - 0x40
00020b22: mem := mem with [R31 + 0x20, el]:u64 <- R0
00045f98: goto %00020a9d

00045f99: sub md4_read_ctx(md4_read_ctx_result)
0004634f: md4_read_ctx_result :: out u32 = low:32[R0]

0001c691:
0001c695: R31 := R31 - 0x10
0001c69d: mem := mem with [R31 + 8, el]:u64 <- R0
0001c6a5: mem := mem with [R31, el]:u64 <- R1
0001c6ac: R0 := mem[R31 + 8, el]:u64
0001c6b3: R1 := pad:64[mem[R0, el]:u32]
0001c6ba: R0 := mem[R31, el]:u64
0001c6c2: mem := mem with [R0, el]:u32 <- 31:0[R1]
0001c6c9: R0 := mem[R31, el]:u64
0001c6cf: R0 := R0 + 4
0001c6d6: R1 := mem[R31 + 8, el]:u64
0001c6dd: R1 := pad:64[mem[R1 + 4, el]:u32]
0001c6e5: mem := mem with [R0, el]:u32 <- 31:0[R1]
0001c6ec: R0 := mem[R31, el]:u64
0001c6f2: R0 := R0 + 8
0001c6f9: R1 := mem[R31 + 8, el]:u64
0001c700: R1 := pad:64[mem[R1 + 8, el]:u32]
0001c708: mem := mem with [R0, el]:u32 <- 31:0[R1]
0001c70f: R0 := mem[R31, el]:u64
0001c715: R0 := R0 + 0xC
0001c71c: R1 := mem[R31 + 8, el]:u64
0001c723: R1 := pad:64[mem[R1 + 0xC, el]:u32]
0001c72b: mem := mem with [R0, el]:u32 <- 31:0[R1]
0001c732: R0 := mem[R31, el]:u64
0001c738: R31 := R31 + 0x10
0001c73d: call R30 with noreturn

00045f9a: sub md4_stream(md4_stream_result)
00046350: md4_stream_result :: out u32 = low:32[R0]

0001ca4f:
0001ca52: R12 := 0x1120
0001ca59: R31 := R31 + ~R12 + 1
0001ca61: mem := mem with [R31, el]:u64 <- R29
0001ca67: mem := mem with [R31 + 8, el]:u64 <- R30
0001ca6d: R29 := R31
0001ca75: mem := mem with [R31 + 0x18, el]:u64 <- R0
0001ca7d: mem := mem with [R31 + 0x10, el]:u64 <- R1
0001ca83: R0 := R31 + 0x1000
0001ca89: R0 := R0 + 0x70
0001ca8e: R30 := 0x4166F8
0001ca90: call @md4_init_ctx with return %0001ca92

0001ca92:
0001ca97: mem := mem with [R31 + 0x1118, el]:u64 <- 0
00045f9b: goto %0001ca99

0001ca99:
0001ca9d: R1 := R31 + 0x28
0001caa4: R0 := mem[R31 + 0x1118, el]:u64
0001caab: R4 := R1 + R0
0001cab0: R1 := 0x1000
0001cab7: R0 := mem[R31 + 0x1118, el]:u64
0001cabe: R0 := R1 + ~R0 + 1
0001cac5: R3 := mem[R31 + 0x18, el]:u64
0001cacb: R2 := R0
0001cad0: R1 := 1
0001cad6: R0 := R4
0001cadb: R30 := 0x416728
0001cade: call @fread with return %0001cae0

0001cae0:
0001cae6: mem := mem with [R31 + 0x1110, el]:u64 <- R0
0001caed: R1 := mem[R31 + 0x1118, el]:u64
0001caf4: R0 := mem[R31 + 0x1110, el]:u64
0001cafb: R0 := R1 + R0
0001cb03: mem := mem with [R31 + 0x1118, el]:u64 <- R0
0001cb0a: R0 := mem[R31 + 0x1118, el]:u64
0001cb10: #56 := R0 - 0x1000
0001cb15: VF := extend:128[#56] <> extend:128[R0] - 0x1000
0001cb1a: CF := pad:128[#56] <> pad:128[R0] + 0xFFFFFFFFFFFFF000
0001cb1e: ZF := #56 = 0
0001cb22: NF := 63:63[#56]
0001cb28: when ZF goto %0001cb26
00045f9c: goto %0002088e

0001cb26:
0001cb31: R1 := R31 + 0x1000
0001cb37: R1 := R1 + 0x70
0001cb3d: R0 := R31 + 0x28
0001cb43: R2 := R1
0001cb48: R1 := 0x1000
0001cb4d: R30 := 0x41679C
0001cb4f: call @md4_process_block with return %0001cb51

0001cb51:
0001cb53: goto %0001ca92

0002088e:
00020893: R0 := mem[R31 + 0x1110, el]:u64
00020898: VF := 0
0002089b: CF := 1
0002089f: ZF := R0 = 0
000208a3: NF := 63:63[R0]
000208a9: when ZF <> 1 goto %000208a7
00045f9d: goto %000208d5

000208a7:
000208b1: R0 := mem[R31 + 0x18, el]:u64
000208b6: R30 := 0x416774
000208b8: call @feof with return %000208ba

000208ba:
000208bd: VF := 0
000208c0: CF := 1
000208c4: ZF := 31:0[R0] = 0
000208c8: NF := 31:31[R0]
000208cd: when ZF <> 1 goto %0002088c
00045f9e: goto %000208d1

0002088c:
00045f9f: goto %0001cb58

000208d1:
000208d3: goto %0001ca99

000208d5:
000208da: R0 := mem[R31 + 0x18, el]:u64
000208df: R30 := 0x41675C
000208e1: call @ferror with return %000208e3

000208e3:
000208e6: VF := 0
000208e9: CF := 1
000208ed: ZF := 31:0[R0] = 0
000208f1: NF := 31:31[R0]
000208f6: when ZF goto %0001cb55
00045fa0: goto %000208fa

0001cb55:
0001cb5a: goto %0001cb58

0001cb58:
0001cb60: R0 := mem[R31 + 0x1118, el]:u64
0001cb65: VF := 0
0001cb68: CF := 1
0001cb6c: ZF := R0 = 0
0001cb70: NF := 63:63[R0]
0001cb76: when ZF goto %0001cb74
00045fa1: goto %00020866

00020866:
0002086a: R1 := R31 + 0x1000
00020870: R1 := R1 + 0x70
00020876: R0 := R31 + 0x28
0002087c: R2 := R1
00020883: R1 := mem[R31 + 0x1118, el]:u64
00020888: R30 := 0x4167D0
0002088a: call @md4_process_bytes with return %0001cb74

0001cb74:
0001cb7d: R0 := R31 + 0x1000
0001cb83: R0 := R0 + 0x70
0001cb8a: R1 := mem[R31 + 0x10, el]:u64
0001cb8f: R30 := 0x4167E0
0001cb91: call @md4_finish_ctx with return %0001cb93

0001cb93:
0001cb96: R0 := 0
00045fa2: goto %0001cb98

000208fa:
000208fd: R0 := 1
00020901: goto %0001cb98

0001cb98:
0001cb9d: R29 := mem[R31, el]:u64
0001cba2: R30 := mem[R31 + 8, el]:u64
0001cba7: R12 := 0x1120
0001cbae: R31 := R31 + R12
0001cbb3: call R30 with noreturn

00045fa3: sub md5_buffer(md5_buffer_result)
00046351: md5_buffer_result :: out u32 = low:32[R0]

0001ff7d:
0001ff81: #71 := R31 - 0xD0
0001ff87: mem := mem with [#71, el]:u64 <- R29
0001ff8d: mem := mem with [#71 + 8, el]:u64 <- R30
0001ff91: R31 := #71
0001ff97: R29 := R31
0001ff9f: mem := mem with [R31 + 0x28, el]:u64 <- R0
0001ffa7: mem := mem with [R31 + 0x20, el]:u64 <- R1
0001ffaf: mem := mem with [R31 + 0x18, el]:u64 <- R2
0001ffb5: R0 := R31 + 0x30
0001ffba: R30 := 0x416E58
0001ffbc: call @md5_init_ctx with return %0001ffbe

0001ffbe:
0001ffc2: R0 := R31 + 0x30
0001ffc8: R2 := R0
0001ffcf: R1 := mem[R31 + 0x20, el]:u64
0001ffd6: R0 := mem[R31 + 0x28, el]:u64
0001ffdb: R30 := 0x416E6C
0001ffde: call @md5_process_bytes with return %000204b9

000204b9:
000204bd: R0 := R31 + 0x30
000204c4: R1 := mem[R31 + 0x18, el]:u64
000204c9: R30 := 0x416E78
000204cb: call @md5_finish_ctx with return %000204cd

000204cd:
000204d2: R29 := mem[R31, el]:u64
000204d7: R30 := mem[R31 + 8, el]:u64
000204db: R31 := R31 + 0xD0
000204e0: call R30 with noreturn

00045fa4: sub md5_finish_ctx(md5_finish_ctx_result)
00046352: md5_finish_ctx_result :: out u32 = low:32[R0]

0001cfe4:
0001cfe8: #62 := R31 - 0x30
0001cfee: mem := mem with [#62, el]:u64 <- R29
0001cff4: mem := mem with [#62 + 8, el]:u64 <- R30
0001cff8: R31 := #62
0001cffe: R29 := R31
0001d006: mem := mem with [R31 + 0x18, el]:u64 <- R0
0001d00e: mem := mem with [R31 + 0x10, el]:u64 <- R1
0001d015: R0 := mem[R31 + 0x18, el]:u64
0001d01a: VF := 0
0001d01d: CF := 1
0001d021: ZF := R0 = 0
0001d025: NF := 63:63[R0]
0001d02b: when ZF <> 1 goto %0001d029
00045fa5: goto %000205db

000205db:
000205de: R0 := 0x41D000
000205e4: R3 := R0 + 0xC00
000205e9: R2 := 0x3A9
000205ee: R0 := 0x41D000
000205f4: R1 := R0 + 0xB50
000205f9: R0 := 0x41D000
000205ff: R0 := R0 + 0xBB8
00020604: R30 := 0x416BBC
00020606: call @__assert_fail with return %0001d029

0001d029:
0001d033: R0 := mem[R31 + 0x10, el]:u64
0001d038: VF := 0
0001d03b: CF := 1
0001d03f: ZF := R0 = 0
0001d043: NF := 63:63[R0]
0001d049: when ZF <> 1 goto %0001d047
00045fa6: goto %000205ad

000205ad:
000205b0: R0 := 0x41D000
000205b6: R3 := R0 + 0xC00
000205bb: R2 := 0x3AA
000205c0: R0 := 0x41D000
000205c6: R1 := R0 + 0xB50
000205cb: R0 := 0x41D000
000205d1: R0 := R0 + 0xBC8
000205d6: R30 := 0x416BE8
000205d9: call @__assert_fail with return %0001d047

0001d047:
0001d051: R0 := mem[R31 + 0x18, el]:u64
0001d058: R0 := pad:64[mem[R0 + 0x18, el]:u32]
0001d060: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
0001d067: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001d06d: #63 := 31:0[R0] - 0x37
0001d072: VF := extend:64[#63] <> extend:64[31:0[R0]] - 0x37
0001d077: CF := pad:64[#63] <> pad:64[31:0[R0]] + 0xFFFFFFC9
0001d07b: ZF := #63 = 0
0001d07f: NF := 31:31[#63]
0001d086: when CF & ~ZF goto %0001d084
00045fa7: goto %000205a4

0001d084:
0001d08c: R0 := 0x20
00045fa8: goto %0001d08e

000205a4:
000205a7: R0 := 0x10
000205ab: goto %0001d08e

0001d08e:
0001d094: mem := mem with [R31 + 0x20, el]:u64 <- R0
0001d09b: R0 := mem[R31 + 0x18, el]:u64
0001d0a2: R1 := pad:64[mem[R0 + 0x10, el]:u32]
0001d0a9: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001d0b0: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001d0b7: R0 := mem[R31 + 0x18, el]:u64
0001d0bf: mem := mem with [R0 + 0x10, el]:u32 <- 31:0[R1]
0001d0c6: R0 := mem[R31 + 0x18, el]:u64
0001d0cd: R0 := pad:64[mem[R0 + 0x10, el]:u32]
0001d0d4: R1 := pad:64[mem[R31 + 0x2C, el]:u32]
0001d0da: #64 := ~31:0[R0]
0001d0df: #65 := 31:0[R1] + ~31:0[R0]
0001d0e5: VF := extend:64[#65 + 1] <> extend:64[31:0[R1]] + extend:64[#64] +
          1
0001d0eb: CF := pad:64[#65 + 1] <> pad:64[31:0[R1]] + pad:64[#64] + 1
0001d0ef: ZF := #65 + 1 = 0
0001d0f3: NF := 31:31[#65 + 1]
0001d0fa: when ~(CF & ~ZF) goto %0001d0f8
00045fa9: goto %00020581

00020581:
00020586: R0 := mem[R31 + 0x18, el]:u64
0002058d: R0 := pad:64[mem[R0 + 0x14, el]:u32]
00020593: R1 := pad:64[31:0[R0] + 1]
0002059a: R0 := mem[R31 + 0x18, el]:u64
000205a2: mem := mem with [R0 + 0x14, el]:u32 <- 31:0[R1]
00045faa: goto %0001d0f8

0001d0f8:
0001d102: R0 := mem[R31 + 0x18, el]:u64
0001d109: R1 := pad:64[mem[R0 + 0x10, el]:u32]
0001d110: R0 := mem[R31 + 0x20, el]:u64
0001d116: R0 := R0 - 2
0001d11c: R1 := pad:64[28:0[R1].0]
0001d123: R2 := mem[R31 + 0x18, el]:u64
0001d129: R0 := R0 + 4
0001d12f: R0 := 61:0[R0].0
0001d136: R0 := R2 + R0
0001d13e: mem := mem with [R0 + 0xC, el]:u32 <- 31:0[R1]
0001d145: R0 := mem[R31 + 0x18, el]:u64
0001d14c: R0 := pad:64[mem[R0 + 0x14, el]:u32]
0001d152: R2 := pad:64[28:0[R0].0]
0001d159: R0 := mem[R31 + 0x18, el]:u64
0001d160: R0 := pad:64[mem[R0 + 0x10, el]:u32]
0001d166: R1 := pad:64[31:29[R0]]
0001d16d: R0 := mem[R31 + 0x20, el]:u64
0001d173: R0 := R0 - 1
0001d17a: R1 := pad:64[31:0[R2] | 31:0[R1]]
0001d181: R2 := mem[R31 + 0x18, el]:u64
0001d187: R0 := R0 + 4
0001d18d: R0 := 61:0[R0].0
0001d194: R0 := R2 + R0
0001d19c: mem := mem with [R0 + 0xC, el]:u32 <- 31:0[R1]
0001d1a3: R0 := mem[R31 + 0x18, el]:u64
0001d1a9: R1 := R0 + 0x1C
0001d1b0: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001d1b7: R3 := R1 + R0
0001d1be: R0 := mem[R31 + 0x20, el]:u64
0001d1c4: R0 := R0 - 2
0001d1ca: R1 := 61:0[R0].0
0001d1d1: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001d1d8: R0 := R1 + ~R0 + 1
0001d1de: R2 := R0
0001d1e3: R0 := 0x41D000
0001d1e9: R1 := R0 + 0x80
0001d1ef: R0 := R3
0001d1f4: R30 := 0x416CE8
0001d1f6: call @memcpy with return %0001d1f8

0001d1f8:
0001d1fd: R0 := mem[R31 + 0x18, el]:u64
0001d203: R3 := R0 + 0x1C
0001d20a: R0 := mem[R31 + 0x20, el]:u64
0001d210: R0 := 61:0[R0].0
0001d217: R2 := mem[R31 + 0x18, el]:u64
0001d21d: R1 := R0
0001d223: R0 := R3
0001d228: R30 := 0x416D08
0001d22b: call @md5_process_block with return %0001fdee

0001fdee:
0001fdf3: R1 := mem[R31 + 0x10, el]:u64
0001fdfa: R0 := mem[R31 + 0x18, el]:u64
0001fdff: R30 := 0x416D14
0001fe01: call @md5_read_ctx with return %0001fe03

0001fe03:
0001fe08: R29 := mem[R31, el]:u64
0001fe0d: R30 := mem[R31 + 8, el]:u64
0001fe11: R31 := R31 + 0x30
0001fe16: call R30 with noreturn

00045fab: sub md5_init_ctx(md5_init_ctx_result)
00046353: md5_init_ctx_result :: out u32 = low:32[R0]

0001cddd:
0001cde4: #60 := R31 - 0x20
0001cdea: mem := mem with [#60, el]:u64 <- R29
0001cdf0: mem := mem with [#60 + 8, el]:u64 <- R30
0001cdf4: R31 := #60
0001cdfa: R29 := R31
0001ce02: mem := mem with [R31 + 0x18, el]:u64 <- R0
0001ce09: R0 := mem[R31 + 0x18, el]:u64
0001ce0e: VF := 0
0001ce11: CF := 1
0001ce15: ZF := R0 = 0
0001ce19: NF := 63:63[R0]
0001ce1f: when ZF <> 1 goto %0001ce1d
00045fac: goto %00020662

00020662:
00020665: R0 := 0x41D000
0002066b: R3 := R0 + 0xBE0
00020670: R2 := 0x385
00020675: R0 := 0x41D000
0002067b: R1 := R0 + 0xB50
00020680: R0 := 0x41D000
00020686: R0 := R0 + 0xBB8
0002068b: R30 := 0x416A54
0002068d: call @__assert_fail with return %0001ce1d

0001ce1d:
0001ce27: R0 := mem[R31 + 0x18, el]:u64
0001ce2c: R1 := 0x2301
0001ce32: R1 := pad:64[0x6745.15:0[R1]]
0001ce3a: mem := mem with [R0, el]:u32 <- 31:0[R1]
0001ce41: R0 := mem[R31 + 0x18, el]:u64
0001ce46: R1 := 0xAB89
0001ce4c: R1 := pad:64[0xEFCD.15:0[R1]]
0001ce54: mem := mem with [R0 + 4, el]:u32 <- 31:0[R1]
0001ce5b: R0 := mem[R31 + 0x18, el]:u64
0001ce60: R1 := 0xDCFE
0001ce66: R1 := pad:64[0x98BA.15:0[R1]]
0001ce6e: mem := mem with [R0 + 8, el]:u32 <- 31:0[R1]
0001ce75: R0 := mem[R31 + 0x18, el]:u64
0001ce7a: R1 := 0x5476
0001ce80: R1 := pad:64[0x1032.15:0[R1]]
0001ce88: mem := mem with [R0 + 0xC, el]:u32 <- 31:0[R1]
0001ce8f: R0 := mem[R31 + 0x18, el]:u64
0001ce96: mem := mem with [R0 + 0x14, el]:u32 <- 0
0001ce9d: R0 := mem[R31 + 0x18, el]:u64
0001cea4: R1 := pad:64[mem[R0 + 0x14, el]:u32]
0001ceab: R0 := mem[R31 + 0x18, el]:u64
0001ceb3: mem := mem with [R0 + 0x10, el]:u32 <- 31:0[R1]
0001ceba: R0 := mem[R31 + 0x18, el]:u64
0001cec1: mem := mem with [R0 + 0x18, el]:u32 <- 0
0001ceca: R29 := mem[R31, el]:u64
0001cecf: R30 := mem[R31 + 8, el]:u64
0001ced3: R31 := R31 + 0x20
0001ced8: call R30 with noreturn

00045fad: sub md5_process_block(md5_process_block_result)
00046354: md5_process_block_result :: out u32 = low:32[R0]

0001d229:
0001d230: R31 := R31 - 0xA0
0001d238: mem := mem with [R31 + 0x18, el]:u64 <- R0
0001d240: mem := mem with [R31 + 0x10, el]:u64 <- R1
0001d248: mem := mem with [R31 + 8, el]:u64 <- R2
0001d24f: R0 := mem[R31 + 0x18, el]:u64
0001d257: mem := mem with [R31 + 0x98, el]:u64 <- R0
0001d25e: R0 := mem[R31 + 0x10, el]:u64
0001d264: R0 := pad:64[63:2[R0]]
0001d26c: mem := mem with [R31 + 0x80, el]:u64 <- R0
0001d273: R0 := mem[R31 + 0x80, el]:u64
0001d279: R0 := 61:0[R0].0
0001d280: R1 := mem[R31 + 0x98, el]:u64
0001d287: R0 := R1 + R0
0001d28f: mem := mem with [R31 + 0x78, el]:u64 <- R0
0001d296: R0 := mem[R31 + 8, el]:u64
0001d29d: R0 := pad:64[mem[R0, el]:u32]
0001d2a5: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001d2ac: R0 := mem[R31 + 8, el]:u64
0001d2b3: R0 := pad:64[mem[R0 + 4, el]:u32]
0001d2bb: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001d2c2: R0 := mem[R31 + 8, el]:u64
0001d2c9: R0 := pad:64[mem[R0 + 8, el]:u32]
0001d2d1: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001d2d8: R0 := mem[R31 + 8, el]:u64
0001d2df: R0 := pad:64[mem[R0 + 0xC, el]:u32]
0001d2e7: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001d2ee: R0 := mem[R31 + 8, el]:u64
0001d2f5: R0 := pad:64[mem[R0 + 0x10, el]:u32]
0001d2fc: R1 := mem[R31 + 0x10, el]:u64
0001d303: R1 := pad:64[31:0[R0] + 31:0[R1]]
0001d30a: R0 := mem[R31 + 8, el]:u64
0001d312: mem := mem with [R0 + 0x10, el]:u32 <- 31:0[R1]
0001d319: R0 := mem[R31 + 8, el]:u64
0001d320: R0 := pad:64[mem[R0 + 0x10, el]:u32]
0001d326: R0 := pad:64[31:0[R0]]
0001d32d: R1 := mem[R31 + 0x10, el]:u64
0001d333: #66 := ~R0
0001d338: #67 := R1 + ~R0
0001d33e: VF := extend:128[#67 + 1] <> extend:128[R1] + extend:128[#66] + 1
0001d344: CF := pad:128[#67 + 1] <> pad:128[R1] + pad:128[#66] + 1
0001d348: ZF := #67 + 1 = 0
0001d34c: NF := 63:63[#67 + 1]
0001d353: when ~(CF & ~ZF) goto %0001d351
00045fae: goto %0001fdc7

0001fdc7:
0001fdcc: R0 := mem[R31 + 8, el]:u64
0001fdd3: R0 := pad:64[mem[R0 + 0x14, el]:u32]
0001fdd9: R1 := pad:64[31:0[R0] + 1]
0001fde0: R0 := mem[R31 + 8, el]:u64
0001fde8: mem := mem with [R0 + 0x14, el]:u32 <- 31:0[R1]
0001fdec: goto %0001d351

0001d351:
0001d35b: R1 := mem[R31 + 0x98, el]:u64
0001d362: R0 := mem[R31 + 0x78, el]:u64
0001d368: #68 := ~R0
0001d36d: #69 := R1 + ~R0
0001d373: VF := extend:128[#69 + 1] <> extend:128[R1] + extend:128[#68] + 1
0001d379: CF := pad:128[#69 + 1] <> pad:128[R1] + pad:128[#68] + 1
0001d37d: ZF := #69 + 1 = 0
0001d381: NF := 63:63[#69 + 1]
0001d387: when CF <> 1 goto %0001d385
00045faf: goto %0001fd62

0001fd62:
0001fd67: R0 := mem[R31 + 8, el]:u64
0001fd6e: R1 := pad:64[mem[R31 + 0x94, el]:u32]
0001fd76: mem := mem with [R0, el]:u32 <- 31:0[R1]
0001fd7d: R0 := mem[R31 + 8, el]:u64
0001fd84: R1 := pad:64[mem[R31 + 0x90, el]:u32]
0001fd8c: mem := mem with [R0 + 4, el]:u32 <- 31:0[R1]
0001fd93: R0 := mem[R31 + 8, el]:u64
0001fd9a: R1 := pad:64[mem[R31 + 0x8C, el]:u32]
0001fda2: mem := mem with [R0 + 8, el]:u32 <- 31:0[R1]
0001fda9: R0 := mem[R31 + 8, el]:u64
0001fdb0: R1 := pad:64[mem[R31 + 0x88, el]:u32]
0001fdb8: mem := mem with [R0 + 0xC, el]:u32 <- 31:0[R1]
0001fdc0: R31 := R31 + 0xA0
0001fdc5: call R30 with noreturn

0001d385:
0001d38e: R0 := R31 + 0x20
0001d396: mem := mem with [R31 + 0x70, el]:u64 <- R0
0001d39d: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001d3a5: mem := mem with [R31 + 0x6C, el]:u32 <- 31:0[R0]
0001d3ac: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001d3b4: mem := mem with [R31 + 0x68, el]:u32 <- 31:0[R0]
0001d3bb: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001d3c3: mem := mem with [R31 + 0x64, el]:u32 <- 31:0[R0]
0001d3ca: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001d3d2: mem := mem with [R31 + 0x60, el]:u32 <- 31:0[R0]
0001d3d9: R1 := pad:64[mem[R31 + 0x8C, el]:u32]
0001d3e0: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001d3e7: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001d3ee: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001d3f5: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001d3fc: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001d403: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001d40a: R0 := mem[R31 + 0x70, el]:u64
0001d410: R2 := R0 + 4
0001d418: mem := mem with [R31 + 0x70, el]:u64 <- R2
0001d41f: R2 := mem[R31 + 0x98, el]:u64
0001d426: R2 := pad:64[mem[R2, el]:u32]
0001d42e: mem := mem with [R0, el]:u32 <- 31:0[R2]
0001d435: R0 := pad:64[mem[R0, el]:u32]
0001d43c: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001d441: R0 := 0xA478
0001d447: R0 := pad:64[0xD76A.15:0[R0]]
0001d44e: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001d455: R1 := pad:64[mem[R31 + 0x94, el]:u32]
0001d45c: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001d464: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001d46b: R0 := mem[R31 + 0x98, el]:u64
0001d471: R0 := R0 + 4
0001d479: mem := mem with [R31 + 0x98, el]:u64 <- R0
0001d480: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001d487: R0 := pad:64[24:0[R0].31:25[R0]]
0001d48f: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001d496: R1 := pad:64[mem[R31 + 0x94, el]:u32]
0001d49d: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001d4a4: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001d4ac: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001d4b3: R1 := pad:64[mem[R31 + 0x90, el]:u32]
0001d4ba: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001d4c1: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001d4c8: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001d4cf: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001d4d6: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001d4dd: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001d4e4: R0 := mem[R31 + 0x70, el]:u64
0001d4ea: R2 := R0 + 4
0001d4f2: mem := mem with [R31 + 0x70, el]:u64 <- R2
0001d4f9: R2 := mem[R31 + 0x98, el]:u64
0001d500: R2 := pad:64[mem[R2, el]:u32]
0001d508: mem := mem with [R0, el]:u32 <- 31:0[R2]
0001d50f: R0 := pad:64[mem[R0, el]:u32]
0001d516: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001d51b: R0 := 0xB756
0001d521: R0 := pad:64[0xE8C7.15:0[R0]]
0001d528: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001d52f: R1 := pad:64[mem[R31 + 0x88, el]:u32]
0001d536: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001d53e: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001d545: R0 := mem[R31 + 0x98, el]:u64
0001d54b: R0 := R0 + 4
0001d553: mem := mem with [R31 + 0x98, el]:u64 <- R0
0001d55a: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001d561: R0 := pad:64[19:0[R0].31:20[R0]]
0001d569: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001d570: R1 := pad:64[mem[R31 + 0x88, el]:u32]
0001d577: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001d57e: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001d586: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001d58d: R1 := pad:64[mem[R31 + 0x94, el]:u32]
0001d594: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001d59b: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001d5a2: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001d5a9: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001d5b0: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001d5b7: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001d5be: R0 := mem[R31 + 0x70, el]:u64
0001d5c4: R2 := R0 + 4
0001d5cc: mem := mem with [R31 + 0x70, el]:u64 <- R2
0001d5d3: R2 := mem[R31 + 0x98, el]:u64
0001d5da: R2 := pad:64[mem[R2, el]:u32]
0001d5e2: mem := mem with [R0, el]:u32 <- 31:0[R2]
0001d5e9: R0 := pad:64[mem[R0, el]:u32]
0001d5f0: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001d5f5: R0 := 0x70DB
0001d5fb: R0 := pad:64[0x2420.15:0[R0]]
0001d602: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001d609: R1 := pad:64[mem[R31 + 0x8C, el]:u32]
0001d610: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001d618: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001d61f: R0 := mem[R31 + 0x98, el]:u64
0001d625: R0 := R0 + 4
0001d62d: mem := mem with [R31 + 0x98, el]:u64 <- R0
0001d634: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001d63b: R0 := pad:64[14:0[R0].31:15[R0]]
0001d643: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001d64a: R1 := pad:64[mem[R31 + 0x8C, el]:u32]
0001d651: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001d658: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001d660: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001d667: R1 := pad:64[mem[R31 + 0x88, el]:u32]
0001d66e: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001d675: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001d67c: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001d683: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001d68a: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001d691: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001d698: R0 := mem[R31 + 0x70, el]:u64
0001d69e: R2 := R0 + 4
0001d6a6: mem := mem with [R31 + 0x70, el]:u64 <- R2
0001d6ad: R2 := mem[R31 + 0x98, el]:u64
0001d6b4: R2 := pad:64[mem[R2, el]:u32]
0001d6bc: mem := mem with [R0, el]:u32 <- 31:0[R2]
0001d6c3: R0 := pad:64[mem[R0, el]:u32]
0001d6ca: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001d6cf: R0 := 0xCEEE
0001d6d5: R0 := pad:64[0xC1BD.15:0[R0]]
0001d6dc: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001d6e3: R1 := pad:64[mem[R31 + 0x90, el]:u32]
0001d6ea: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001d6f2: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001d6f9: R0 := mem[R31 + 0x98, el]:u64
0001d6ff: R0 := R0 + 4
0001d707: mem := mem with [R31 + 0x98, el]:u64 <- R0
0001d70e: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001d715: R0 := pad:64[9:0[R0].31:10[R0]]
0001d71d: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001d724: R1 := pad:64[mem[R31 + 0x90, el]:u32]
0001d72b: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001d732: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001d73a: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001d741: R1 := pad:64[mem[R31 + 0x8C, el]:u32]
0001d748: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001d74f: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001d756: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001d75d: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001d764: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001d76b: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001d772: R0 := mem[R31 + 0x70, el]:u64
0001d778: R2 := R0 + 4
0001d780: mem := mem with [R31 + 0x70, el]:u64 <- R2
0001d787: R2 := mem[R31 + 0x98, el]:u64
0001d78e: R2 := pad:64[mem[R2, el]:u32]
0001d796: mem := mem with [R0, el]:u32 <- 31:0[R2]
0001d79d: R0 := pad:64[mem[R0, el]:u32]
0001d7a4: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001d7a9: R0 := 0xFAF
0001d7af: R0 := pad:64[0xF57C.15:0[R0]]
0001d7b6: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001d7bd: R1 := pad:64[mem[R31 + 0x94, el]:u32]
0001d7c4: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001d7cc: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001d7d3: R0 := mem[R31 + 0x98, el]:u64
0001d7d9: R0 := R0 + 4
0001d7e1: mem := mem with [R31 + 0x98, el]:u64 <- R0
0001d7e8: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001d7ef: R0 := pad:64[24:0[R0].31:25[R0]]
0001d7f7: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001d7fe: R1 := pad:64[mem[R31 + 0x94, el]:u32]
0001d805: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001d80c: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001d814: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001d81b: R1 := pad:64[mem[R31 + 0x90, el]:u32]
0001d822: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001d829: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001d830: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001d837: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001d83e: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001d845: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001d84c: R0 := mem[R31 + 0x70, el]:u64
0001d852: R2 := R0 + 4
0001d85a: mem := mem with [R31 + 0x70, el]:u64 <- R2
0001d861: R2 := mem[R31 + 0x98, el]:u64
0001d868: R2 := pad:64[mem[R2, el]:u32]
0001d870: mem := mem with [R0, el]:u32 <- 31:0[R2]
0001d877: R0 := pad:64[mem[R0, el]:u32]
0001d87e: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001d883: R0 := 0xC62A
0001d889: R0 := pad:64[0x4787.15:0[R0]]
0001d890: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001d897: R1 := pad:64[mem[R31 + 0x88, el]:u32]
0001d89e: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001d8a6: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001d8ad: R0 := mem[R31 + 0x98, el]:u64
0001d8b3: R0 := R0 + 4
0001d8bb: mem := mem with [R31 + 0x98, el]:u64 <- R0
0001d8c2: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001d8c9: R0 := pad:64[19:0[R0].31:20[R0]]
0001d8d1: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001d8d8: R1 := pad:64[mem[R31 + 0x88, el]:u32]
0001d8df: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001d8e6: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001d8ee: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001d8f5: R1 := pad:64[mem[R31 + 0x94, el]:u32]
0001d8fc: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001d903: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001d90a: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001d911: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001d918: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001d91f: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001d926: R0 := mem[R31 + 0x70, el]:u64
0001d92c: R2 := R0 + 4
0001d934: mem := mem with [R31 + 0x70, el]:u64 <- R2
0001d93b: R2 := mem[R31 + 0x98, el]:u64
0001d942: R2 := pad:64[mem[R2, el]:u32]
0001d94a: mem := mem with [R0, el]:u32 <- 31:0[R2]
0001d951: R0 := pad:64[mem[R0, el]:u32]
0001d958: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001d95d: R0 := 0x4613
0001d963: R0 := pad:64[0xA830.15:0[R0]]
0001d96a: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001d971: R1 := pad:64[mem[R31 + 0x8C, el]:u32]
0001d978: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001d980: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001d987: R0 := mem[R31 + 0x98, el]:u64
0001d98d: R0 := R0 + 4
0001d995: mem := mem with [R31 + 0x98, el]:u64 <- R0
0001d99c: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001d9a3: R0 := pad:64[14:0[R0].31:15[R0]]
0001d9ab: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001d9b2: R1 := pad:64[mem[R31 + 0x8C, el]:u32]
0001d9b9: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001d9c0: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001d9c8: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001d9cf: R1 := pad:64[mem[R31 + 0x88, el]:u32]
0001d9d6: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001d9dd: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001d9e4: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001d9eb: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001d9f2: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001d9f9: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001da00: R0 := mem[R31 + 0x70, el]:u64
0001da06: R2 := R0 + 4
0001da0e: mem := mem with [R31 + 0x70, el]:u64 <- R2
0001da15: R2 := mem[R31 + 0x98, el]:u64
0001da1c: R2 := pad:64[mem[R2, el]:u32]
0001da24: mem := mem with [R0, el]:u32 <- 31:0[R2]
0001da2b: R0 := pad:64[mem[R0, el]:u32]
0001da32: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001da37: R0 := 0x9501
0001da3d: R0 := pad:64[0xFD46.15:0[R0]]
0001da44: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001da4b: R1 := pad:64[mem[R31 + 0x90, el]:u32]
0001da52: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001da5a: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001da61: R0 := mem[R31 + 0x98, el]:u64
0001da67: R0 := R0 + 4
0001da6f: mem := mem with [R31 + 0x98, el]:u64 <- R0
0001da76: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001da7d: R0 := pad:64[9:0[R0].31:10[R0]]
0001da85: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001da8c: R1 := pad:64[mem[R31 + 0x90, el]:u32]
0001da93: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001da9a: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001daa2: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001daa9: R1 := pad:64[mem[R31 + 0x8C, el]:u32]
0001dab0: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001dab7: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001dabe: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001dac5: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001dacc: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001dad3: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001dada: R0 := mem[R31 + 0x70, el]:u64
0001dae0: R2 := R0 + 4
0001dae8: mem := mem with [R31 + 0x70, el]:u64 <- R2
0001daef: R2 := mem[R31 + 0x98, el]:u64
0001daf6: R2 := pad:64[mem[R2, el]:u32]
0001dafe: mem := mem with [R0, el]:u32 <- 31:0[R2]
0001db05: R0 := pad:64[mem[R0, el]:u32]
0001db0c: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001db11: R0 := 0x98D8
0001db17: R0 := pad:64[0x6980.15:0[R0]]
0001db1e: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001db25: R1 := pad:64[mem[R31 + 0x94, el]:u32]
0001db2c: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001db34: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001db3b: R0 := mem[R31 + 0x98, el]:u64
0001db41: R0 := R0 + 4
0001db49: mem := mem with [R31 + 0x98, el]:u64 <- R0
0001db50: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001db57: R0 := pad:64[24:0[R0].31:25[R0]]
0001db5f: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001db66: R1 := pad:64[mem[R31 + 0x94, el]:u32]
0001db6d: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001db74: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001db7c: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001db83: R1 := pad:64[mem[R31 + 0x90, el]:u32]
0001db8a: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001db91: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001db98: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001db9f: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001dba6: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001dbad: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001dbb4: R0 := mem[R31 + 0x70, el]:u64
0001dbba: R2 := R0 + 4
0001dbc2: mem := mem with [R31 + 0x70, el]:u64 <- R2
0001dbc9: R2 := mem[R31 + 0x98, el]:u64
0001dbd0: R2 := pad:64[mem[R2, el]:u32]
0001dbd8: mem := mem with [R0, el]:u32 <- 31:0[R2]
0001dbdf: R0 := pad:64[mem[R0, el]:u32]
0001dbe6: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001dbeb: R0 := 0xF7AF
0001dbf1: R0 := pad:64[0x8B44.15:0[R0]]
0001dbf8: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001dbff: R1 := pad:64[mem[R31 + 0x88, el]:u32]
0001dc06: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001dc0e: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001dc15: R0 := mem[R31 + 0x98, el]:u64
0001dc1b: R0 := R0 + 4
0001dc23: mem := mem with [R31 + 0x98, el]:u64 <- R0
0001dc2a: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001dc31: R0 := pad:64[19:0[R0].31:20[R0]]
0001dc39: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001dc40: R1 := pad:64[mem[R31 + 0x88, el]:u32]
0001dc47: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001dc4e: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001dc56: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001dc5d: R1 := pad:64[mem[R31 + 0x94, el]:u32]
0001dc64: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001dc6b: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001dc72: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001dc79: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001dc80: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001dc87: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001dc8e: R0 := mem[R31 + 0x70, el]:u64
0001dc94: R2 := R0 + 4
0001dc9c: mem := mem with [R31 + 0x70, el]:u64 <- R2
0001dca3: R2 := mem[R31 + 0x98, el]:u64
0001dcaa: R2 := pad:64[mem[R2, el]:u32]
0001dcb2: mem := mem with [R0, el]:u32 <- 31:0[R2]
0001dcb9: R0 := pad:64[mem[R0, el]:u32]
0001dcc0: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001dcc5: R0 := 0xFFFF5BB1
0001dccc: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001dcd3: R1 := pad:64[mem[R31 + 0x8C, el]:u32]
0001dcda: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001dce2: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001dce9: R0 := mem[R31 + 0x98, el]:u64
0001dcef: R0 := R0 + 4
0001dcf7: mem := mem with [R31 + 0x98, el]:u64 <- R0
0001dcfe: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001dd05: R0 := pad:64[14:0[R0].31:15[R0]]
0001dd0d: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001dd14: R1 := pad:64[mem[R31 + 0x8C, el]:u32]
0001dd1b: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001dd22: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001dd2a: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001dd31: R1 := pad:64[mem[R31 + 0x88, el]:u32]
0001dd38: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001dd3f: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001dd46: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001dd4d: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001dd54: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001dd5b: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001dd62: R0 := mem[R31 + 0x70, el]:u64
0001dd68: R2 := R0 + 4
0001dd70: mem := mem with [R31 + 0x70, el]:u64 <- R2
0001dd77: R2 := mem[R31 + 0x98, el]:u64
0001dd7e: R2 := pad:64[mem[R2, el]:u32]
0001dd86: mem := mem with [R0, el]:u32 <- 31:0[R2]
0001dd8d: R0 := pad:64[mem[R0, el]:u32]
0001dd94: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001dd99: R0 := 0xD7BE
0001dd9f: R0 := pad:64[0x895C.15:0[R0]]
0001dda6: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001ddad: R1 := pad:64[mem[R31 + 0x90, el]:u32]
0001ddb4: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001ddbc: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001ddc3: R0 := mem[R31 + 0x98, el]:u64
0001ddc9: R0 := R0 + 4
0001ddd1: mem := mem with [R31 + 0x98, el]:u64 <- R0
0001ddd8: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001dddf: R0 := pad:64[9:0[R0].31:10[R0]]
0001dde7: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001ddee: R1 := pad:64[mem[R31 + 0x90, el]:u32]
0001ddf5: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001ddfc: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001de04: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001de0b: R1 := pad:64[mem[R31 + 0x8C, el]:u32]
0001de12: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001de19: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001de20: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001de27: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001de2e: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001de35: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001de3c: R0 := mem[R31 + 0x70, el]:u64
0001de42: R2 := R0 + 4
0001de4a: mem := mem with [R31 + 0x70, el]:u64 <- R2
0001de51: R2 := mem[R31 + 0x98, el]:u64
0001de58: R2 := pad:64[mem[R2, el]:u32]
0001de60: mem := mem with [R0, el]:u32 <- 31:0[R2]
0001de67: R0 := pad:64[mem[R0, el]:u32]
0001de6e: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001de73: R0 := 0x1122
0001de79: R0 := pad:64[0x6B90.15:0[R0]]
0001de80: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001de87: R1 := pad:64[mem[R31 + 0x94, el]:u32]
0001de8e: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001de96: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001de9d: R0 := mem[R31 + 0x98, el]:u64
0001dea3: R0 := R0 + 4
0001deab: mem := mem with [R31 + 0x98, el]:u64 <- R0
0001deb2: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001deb9: R0 := pad:64[24:0[R0].31:25[R0]]
0001dec1: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001dec8: R1 := pad:64[mem[R31 + 0x94, el]:u32]
0001decf: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001ded6: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001dede: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001dee5: R1 := pad:64[mem[R31 + 0x90, el]:u32]
0001deec: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001def3: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001defa: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001df01: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001df08: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001df0f: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001df16: R0 := mem[R31 + 0x70, el]:u64
0001df1c: R2 := R0 + 4
0001df24: mem := mem with [R31 + 0x70, el]:u64 <- R2
0001df2b: R2 := mem[R31 + 0x98, el]:u64
0001df32: R2 := pad:64[mem[R2, el]:u32]
0001df3a: mem := mem with [R0, el]:u32 <- 31:0[R2]
0001df41: R0 := pad:64[mem[R0, el]:u32]
0001df48: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001df4d: R0 := 0x7193
0001df53: R0 := pad:64[0xFD98.15:0[R0]]
0001df5a: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001df61: R1 := pad:64[mem[R31 + 0x88, el]:u32]
0001df68: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001df70: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001df77: R0 := mem[R31 + 0x98, el]:u64
0001df7d: R0 := R0 + 4
0001df85: mem := mem with [R31 + 0x98, el]:u64 <- R0
0001df8c: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001df93: R0 := pad:64[19:0[R0].31:20[R0]]
0001df9b: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001dfa2: R1 := pad:64[mem[R31 + 0x88, el]:u32]
0001dfa9: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001dfb0: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001dfb8: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001dfbf: R1 := pad:64[mem[R31 + 0x94, el]:u32]
0001dfc6: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001dfcd: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001dfd4: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001dfdb: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001dfe2: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001dfe9: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001dff0: R0 := mem[R31 + 0x70, el]:u64
0001dff6: R2 := R0 + 4
0001dffe: mem := mem with [R31 + 0x70, el]:u64 <- R2
0001e005: R2 := mem[R31 + 0x98, el]:u64
0001e00c: R2 := pad:64[mem[R2, el]:u32]
0001e014: mem := mem with [R0, el]:u32 <- 31:0[R2]
0001e01b: R0 := pad:64[mem[R0, el]:u32]
0001e022: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001e027: R0 := 0x438E
0001e02d: R0 := pad:64[0xA679.15:0[R0]]
0001e034: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001e03b: R1 := pad:64[mem[R31 + 0x8C, el]:u32]
0001e042: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001e04a: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001e051: R0 := mem[R31 + 0x98, el]:u64
0001e057: R0 := R0 + 4
0001e05f: mem := mem with [R31 + 0x98, el]:u64 <- R0
0001e066: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001e06d: R0 := pad:64[14:0[R0].31:15[R0]]
0001e075: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001e07c: R1 := pad:64[mem[R31 + 0x8C, el]:u32]
0001e083: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001e08a: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001e092: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001e099: R1 := pad:64[mem[R31 + 0x88, el]:u32]
0001e0a0: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001e0a7: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001e0ae: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001e0b5: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001e0bc: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001e0c3: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001e0ca: R0 := mem[R31 + 0x70, el]:u64
0001e0d0: R2 := R0 + 4
0001e0d8: mem := mem with [R31 + 0x70, el]:u64 <- R2
0001e0df: R2 := mem[R31 + 0x98, el]:u64
0001e0e6: R2 := pad:64[mem[R2, el]:u32]
0001e0ee: mem := mem with [R0, el]:u32 <- 31:0[R2]
0001e0f5: R0 := pad:64[mem[R0, el]:u32]
0001e0fc: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001e101: R0 := 0x821
0001e107: R0 := pad:64[0x49B4.15:0[R0]]
0001e10e: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001e115: R1 := pad:64[mem[R31 + 0x90, el]:u32]
0001e11c: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001e124: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001e12b: R0 := mem[R31 + 0x98, el]:u64
0001e131: R0 := R0 + 4
0001e139: mem := mem with [R31 + 0x98, el]:u64 <- R0
0001e140: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001e147: R0 := pad:64[9:0[R0].31:10[R0]]
0001e14f: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001e156: R1 := pad:64[mem[R31 + 0x90, el]:u32]
0001e15d: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001e164: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001e16c: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001e173: R1 := pad:64[mem[R31 + 0x90, el]:u32]
0001e17a: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001e181: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001e188: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001e18f: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001e196: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001e19d: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001e1a4: R0 := pad:64[mem[R31 + 0x24, el]:u32]
0001e1ab: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001e1b2: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001e1b9: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001e1be: R0 := 0x2562
0001e1c4: R0 := pad:64[0xF61E.15:0[R0]]
0001e1cb: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001e1d3: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001e1da: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001e1e1: R0 := pad:64[26:0[R0].31:27[R0]]
0001e1e9: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001e1f0: R1 := pad:64[mem[R31 + 0x94, el]:u32]
0001e1f7: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001e1fe: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001e206: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001e20d: R1 := pad:64[mem[R31 + 0x94, el]:u32]
0001e214: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001e21b: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001e222: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001e229: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001e230: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001e237: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001e23e: R0 := pad:64[mem[R31 + 0x38, el]:u32]
0001e245: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001e24c: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001e253: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001e258: R0 := 0xB340
0001e25e: R0 := pad:64[0xC040.15:0[R0]]
0001e265: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001e26d: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001e274: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001e27b: R0 := pad:64[22:0[R0].31:23[R0]]
0001e283: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001e28a: R1 := pad:64[mem[R31 + 0x88, el]:u32]
0001e291: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001e298: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001e2a0: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001e2a7: R1 := pad:64[mem[R31 + 0x88, el]:u32]
0001e2ae: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001e2b5: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001e2bc: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001e2c3: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001e2ca: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001e2d1: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001e2d8: R0 := pad:64[mem[R31 + 0x4C, el]:u32]
0001e2df: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001e2e6: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001e2ed: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001e2f2: R0 := 0x5A51
0001e2f8: R0 := pad:64[0x265E.15:0[R0]]
0001e2ff: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001e307: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001e30e: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001e315: R0 := pad:64[17:0[R0].31:18[R0]]
0001e31d: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001e324: R1 := pad:64[mem[R31 + 0x8C, el]:u32]
0001e32b: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001e332: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001e33a: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001e341: R1 := pad:64[mem[R31 + 0x8C, el]:u32]
0001e348: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001e34f: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001e356: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001e35d: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001e364: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001e36b: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001e372: R0 := pad:64[mem[R31 + 0x20, el]:u32]
0001e379: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001e380: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001e387: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001e38c: R0 := 0xC7AA
0001e392: R0 := pad:64[0xE9B6.15:0[R0]]
0001e399: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001e3a1: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001e3a8: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001e3af: R0 := pad:64[11:0[R0].31:12[R0]]
0001e3b7: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001e3be: R1 := pad:64[mem[R31 + 0x90, el]:u32]
0001e3c5: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001e3cc: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001e3d4: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001e3db: R1 := pad:64[mem[R31 + 0x90, el]:u32]
0001e3e2: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001e3e9: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001e3f0: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001e3f7: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001e3fe: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001e405: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001e40c: R0 := pad:64[mem[R31 + 0x34, el]:u32]
0001e413: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001e41a: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001e421: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001e426: R0 := 0x105D
0001e42c: R0 := pad:64[0xD62F.15:0[R0]]
0001e433: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001e43b: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001e442: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001e449: R0 := pad:64[26:0[R0].31:27[R0]]
0001e451: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001e458: R1 := pad:64[mem[R31 + 0x94, el]:u32]
0001e45f: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001e466: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001e46e: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001e475: R1 := pad:64[mem[R31 + 0x94, el]:u32]
0001e47c: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001e483: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001e48a: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001e491: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001e498: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001e49f: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001e4a6: R0 := pad:64[mem[R31 + 0x48, el]:u32]
0001e4ad: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001e4b4: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001e4bb: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001e4c0: R0 := 0x1453
0001e4c6: R0 := pad:64[0x244.15:0[R0]]
0001e4cd: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001e4d5: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001e4dc: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001e4e3: R0 := pad:64[22:0[R0].31:23[R0]]
0001e4eb: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001e4f2: R1 := pad:64[mem[R31 + 0x88, el]:u32]
0001e4f9: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001e500: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001e508: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001e50f: R1 := pad:64[mem[R31 + 0x88, el]:u32]
0001e516: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001e51d: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001e524: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001e52b: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001e532: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001e539: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001e540: R0 := pad:64[mem[R31 + 0x5C, el]:u32]
0001e547: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001e54e: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001e555: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001e55a: R0 := 0xE681
0001e560: R0 := pad:64[0xD8A1.15:0[R0]]
0001e567: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001e56f: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001e576: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001e57d: R0 := pad:64[17:0[R0].31:18[R0]]
0001e585: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001e58c: R1 := pad:64[mem[R31 + 0x8C, el]:u32]
0001e593: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001e59a: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001e5a2: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001e5a9: R1 := pad:64[mem[R31 + 0x8C, el]:u32]
0001e5b0: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001e5b7: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001e5be: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001e5c5: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001e5cc: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001e5d3: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001e5da: R0 := pad:64[mem[R31 + 0x30, el]:u32]
0001e5e1: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001e5e8: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001e5ef: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001e5f4: R0 := 0xFBC8
0001e5fa: R0 := pad:64[0xE7D3.15:0[R0]]
0001e601: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001e609: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001e610: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001e617: R0 := pad:64[11:0[R0].31:12[R0]]
0001e61f: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001e626: R1 := pad:64[mem[R31 + 0x90, el]:u32]
0001e62d: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001e634: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001e63c: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001e643: R1 := pad:64[mem[R31 + 0x90, el]:u32]
0001e64a: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001e651: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001e658: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001e65f: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001e666: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001e66d: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001e674: R0 := pad:64[mem[R31 + 0x44, el]:u32]
0001e67b: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001e682: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001e689: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001e68e: R0 := 0xCDE6
0001e694: R0 := pad:64[0x21E1.15:0[R0]]
0001e69b: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001e6a3: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001e6aa: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001e6b1: R0 := pad:64[26:0[R0].31:27[R0]]
0001e6b9: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001e6c0: R1 := pad:64[mem[R31 + 0x94, el]:u32]
0001e6c7: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001e6ce: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001e6d6: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001e6dd: R1 := pad:64[mem[R31 + 0x94, el]:u32]
0001e6e4: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001e6eb: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001e6f2: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001e6f9: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001e700: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001e707: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001e70e: R0 := pad:64[mem[R31 + 0x58, el]:u32]
0001e715: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001e71c: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001e723: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001e728: R0 := 0x7D6
0001e72e: R0 := pad:64[0xC337.15:0[R0]]
0001e735: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001e73d: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001e744: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001e74b: R0 := pad:64[22:0[R0].31:23[R0]]
0001e753: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001e75a: R1 := pad:64[mem[R31 + 0x88, el]:u32]
0001e761: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001e768: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001e770: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001e777: R1 := pad:64[mem[R31 + 0x88, el]:u32]
0001e77e: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001e785: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001e78c: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001e793: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001e79a: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001e7a1: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001e7a8: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001e7af: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001e7b6: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001e7bd: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001e7c2: R0 := 0xD87
0001e7c8: R0 := pad:64[0xF4D5.15:0[R0]]
0001e7cf: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001e7d7: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001e7de: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001e7e5: R0 := pad:64[17:0[R0].31:18[R0]]
0001e7ed: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001e7f4: R1 := pad:64[mem[R31 + 0x8C, el]:u32]
0001e7fb: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001e802: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001e80a: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001e811: R1 := pad:64[mem[R31 + 0x8C, el]:u32]
0001e818: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001e81f: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001e826: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001e82d: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001e834: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001e83b: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001e842: R0 := pad:64[mem[R31 + 0x40, el]:u32]
0001e849: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001e850: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001e857: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001e85c: R0 := 0x14ED
0001e862: R0 := pad:64[0x455A.15:0[R0]]
0001e869: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001e871: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001e878: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001e87f: R0 := pad:64[11:0[R0].31:12[R0]]
0001e887: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001e88e: R1 := pad:64[mem[R31 + 0x90, el]:u32]
0001e895: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001e89c: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001e8a4: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001e8ab: R1 := pad:64[mem[R31 + 0x90, el]:u32]
0001e8b2: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001e8b9: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001e8c0: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001e8c7: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001e8ce: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001e8d5: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001e8dc: R0 := pad:64[mem[R31 + 0x54, el]:u32]
0001e8e3: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001e8ea: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001e8f1: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001e8f6: R0 := 0xE905
0001e8fc: R0 := pad:64[0xA9E3.15:0[R0]]
0001e903: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001e90b: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001e912: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001e919: R0 := pad:64[26:0[R0].31:27[R0]]
0001e921: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001e928: R1 := pad:64[mem[R31 + 0x94, el]:u32]
0001e92f: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001e936: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001e93e: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001e945: R1 := pad:64[mem[R31 + 0x94, el]:u32]
0001e94c: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001e953: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001e95a: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001e961: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001e968: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001e96f: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001e976: R0 := pad:64[mem[R31 + 0x28, el]:u32]
0001e97d: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001e984: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001e98b: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001e990: R0 := 0xA3F8
0001e996: R0 := pad:64[0xFCEF.15:0[R0]]
0001e99d: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001e9a5: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001e9ac: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001e9b3: R0 := pad:64[22:0[R0].31:23[R0]]
0001e9bb: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001e9c2: R1 := pad:64[mem[R31 + 0x88, el]:u32]
0001e9c9: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001e9d0: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001e9d8: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001e9df: R1 := pad:64[mem[R31 + 0x88, el]:u32]
0001e9e6: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001e9ed: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001e9f4: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001e9fb: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001ea02: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001ea09: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001ea10: R0 := pad:64[mem[R31 + 0x3C, el]:u32]
0001ea17: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001ea1e: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001ea25: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001ea2a: R0 := 0x2D9
0001ea30: R0 := pad:64[0x676F.15:0[R0]]
0001ea37: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001ea3f: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001ea46: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001ea4d: R0 := pad:64[17:0[R0].31:18[R0]]
0001ea55: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001ea5c: R1 := pad:64[mem[R31 + 0x8C, el]:u32]
0001ea63: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001ea6a: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001ea72: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001ea79: R1 := pad:64[mem[R31 + 0x8C, el]:u32]
0001ea80: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001ea87: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001ea8e: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001ea95: R1 := pad:64[31:0[R1] & 31:0[R0]]
0001ea9c: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001eaa3: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001eaaa: R0 := pad:64[mem[R31 + 0x50, el]:u32]
0001eab1: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001eab8: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001eabf: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001eac4: R0 := 0x4C8A
0001eaca: R0 := pad:64[0x8D2A.15:0[R0]]
0001ead1: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001ead9: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001eae0: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001eae7: R0 := pad:64[11:0[R0].31:12[R0]]
0001eaef: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001eaf6: R1 := pad:64[mem[R31 + 0x90, el]:u32]
0001eafd: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001eb04: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001eb0c: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001eb13: R1 := pad:64[mem[R31 + 0x90, el]:u32]
0001eb1a: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001eb21: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001eb28: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001eb2f: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001eb36: R0 := pad:64[mem[R31 + 0x34, el]:u32]
0001eb3d: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001eb44: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001eb4b: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001eb50: R0 := 0x3942
0001eb56: R0 := pad:64[0xFFFA.15:0[R0]]
0001eb5d: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001eb65: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001eb6c: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001eb73: R0 := pad:64[27:0[R0].31:28[R0]]
0001eb7b: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001eb82: R1 := pad:64[mem[R31 + 0x94, el]:u32]
0001eb89: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001eb90: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001eb98: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001eb9f: R1 := pad:64[mem[R31 + 0x94, el]:u32]
0001eba6: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001ebad: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001ebb4: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001ebbb: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001ebc2: R0 := pad:64[mem[R31 + 0x40, el]:u32]
0001ebc9: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001ebd0: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001ebd7: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001ebdc: R0 := 0xF681
0001ebe2: R0 := pad:64[0x8771.15:0[R0]]
0001ebe9: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001ebf1: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001ebf8: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001ebff: R0 := pad:64[20:0[R0].31:21[R0]]
0001ec07: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001ec0e: R1 := pad:64[mem[R31 + 0x88, el]:u32]
0001ec15: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001ec1c: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001ec24: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001ec2b: R1 := pad:64[mem[R31 + 0x88, el]:u32]
0001ec32: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001ec39: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001ec40: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001ec47: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001ec4e: R0 := pad:64[mem[R31 + 0x4C, el]:u32]
0001ec55: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001ec5c: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001ec63: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001ec68: R0 := 0x6122
0001ec6e: R0 := pad:64[0x6D9D.15:0[R0]]
0001ec75: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001ec7d: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001ec84: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001ec8b: R0 := pad:64[15:0[R0].31:16[R0]]
0001ec93: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001ec9a: R1 := pad:64[mem[R31 + 0x8C, el]:u32]
0001eca1: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001eca8: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001ecb0: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001ecb7: R1 := pad:64[mem[R31 + 0x8C, el]:u32]
0001ecbe: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001ecc5: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001eccc: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001ecd3: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001ecda: R0 := pad:64[mem[R31 + 0x58, el]:u32]
0001ece1: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001ece8: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001ecef: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001ecf4: R0 := 0x380C
0001ecfa: R0 := pad:64[0xFDE5.15:0[R0]]
0001ed01: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001ed09: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001ed10: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001ed17: R0 := pad:64[8:0[R0].31:9[R0]]
0001ed1f: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001ed26: R1 := pad:64[mem[R31 + 0x90, el]:u32]
0001ed2d: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001ed34: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001ed3c: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001ed43: R1 := pad:64[mem[R31 + 0x90, el]:u32]
0001ed4a: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001ed51: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001ed58: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001ed5f: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001ed66: R0 := pad:64[mem[R31 + 0x24, el]:u32]
0001ed6d: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001ed74: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001ed7b: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001ed80: R0 := 0xEA44
0001ed86: R0 := pad:64[0xA4BE.15:0[R0]]
0001ed8d: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001ed95: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001ed9c: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001eda3: R0 := pad:64[27:0[R0].31:28[R0]]
0001edab: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001edb2: R1 := pad:64[mem[R31 + 0x94, el]:u32]
0001edb9: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001edc0: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001edc8: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001edcf: R1 := pad:64[mem[R31 + 0x94, el]:u32]
0001edd6: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001eddd: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001ede4: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001edeb: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001edf2: R0 := pad:64[mem[R31 + 0x30, el]:u32]
0001edf9: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001ee00: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001ee07: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001ee0c: R0 := 0xCFA9
0001ee12: R0 := pad:64[0x4BDE.15:0[R0]]
0001ee19: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001ee21: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001ee28: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001ee2f: R0 := pad:64[20:0[R0].31:21[R0]]
0001ee37: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001ee3e: R1 := pad:64[mem[R31 + 0x88, el]:u32]
0001ee45: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001ee4c: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001ee54: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001ee5b: R1 := pad:64[mem[R31 + 0x88, el]:u32]
0001ee62: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001ee69: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001ee70: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001ee77: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001ee7e: R0 := pad:64[mem[R31 + 0x3C, el]:u32]
0001ee85: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001ee8c: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001ee93: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001ee98: R0 := 0x4B60
0001ee9e: R0 := pad:64[0xF6BB.15:0[R0]]
0001eea5: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001eead: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001eeb4: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001eebb: R0 := pad:64[15:0[R0].31:16[R0]]
0001eec3: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001eeca: R1 := pad:64[mem[R31 + 0x8C, el]:u32]
0001eed1: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001eed8: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001eee0: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001eee7: R1 := pad:64[mem[R31 + 0x8C, el]:u32]
0001eeee: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001eef5: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001eefc: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001ef03: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001ef0a: R0 := pad:64[mem[R31 + 0x48, el]:u32]
0001ef11: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001ef18: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001ef1f: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001ef24: R0 := 0xBC70
0001ef2a: R0 := pad:64[0xBEBF.15:0[R0]]
0001ef31: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001ef39: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001ef40: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001ef47: R0 := pad:64[8:0[R0].31:9[R0]]
0001ef4f: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001ef56: R1 := pad:64[mem[R31 + 0x90, el]:u32]
0001ef5d: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001ef64: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001ef6c: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001ef73: R1 := pad:64[mem[R31 + 0x90, el]:u32]
0001ef7a: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001ef81: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001ef88: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001ef8f: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001ef96: R0 := pad:64[mem[R31 + 0x54, el]:u32]
0001ef9d: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001efa4: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001efab: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001efb0: R0 := 0x7EC6
0001efb6: R0 := pad:64[0x289B.15:0[R0]]
0001efbd: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001efc5: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001efcc: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001efd3: R0 := pad:64[27:0[R0].31:28[R0]]
0001efdb: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001efe2: R1 := pad:64[mem[R31 + 0x94, el]:u32]
0001efe9: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001eff0: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001eff8: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001efff: R1 := pad:64[mem[R31 + 0x94, el]:u32]
0001f006: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001f00d: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001f014: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001f01b: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001f022: R0 := pad:64[mem[R31 + 0x20, el]:u32]
0001f029: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001f030: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001f037: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001f03c: R0 := 0x27FA
0001f042: R0 := pad:64[0xEAA1.15:0[R0]]
0001f049: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001f051: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001f058: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001f05f: R0 := pad:64[20:0[R0].31:21[R0]]
0001f067: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001f06e: R1 := pad:64[mem[R31 + 0x88, el]:u32]
0001f075: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001f07c: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001f084: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001f08b: R1 := pad:64[mem[R31 + 0x88, el]:u32]
0001f092: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001f099: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001f0a0: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001f0a7: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001f0ae: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001f0b5: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001f0bc: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001f0c3: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001f0c8: R0 := 0x3085
0001f0ce: R0 := pad:64[0xD4EF.15:0[R0]]
0001f0d5: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001f0dd: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001f0e4: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001f0eb: R0 := pad:64[15:0[R0].31:16[R0]]
0001f0f3: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001f0fa: R1 := pad:64[mem[R31 + 0x8C, el]:u32]
0001f101: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001f108: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001f110: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001f117: R1 := pad:64[mem[R31 + 0x8C, el]:u32]
0001f11e: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001f125: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001f12c: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001f133: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001f13a: R0 := pad:64[mem[R31 + 0x38, el]:u32]
0001f141: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001f148: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001f14f: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001f154: R0 := 0x1D05
0001f15a: R0 := pad:64[0x488.15:0[R0]]
0001f161: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001f169: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001f170: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001f177: R0 := pad:64[8:0[R0].31:9[R0]]
0001f17f: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001f186: R1 := pad:64[mem[R31 + 0x90, el]:u32]
0001f18d: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001f194: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001f19c: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001f1a3: R1 := pad:64[mem[R31 + 0x90, el]:u32]
0001f1aa: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001f1b1: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001f1b8: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001f1bf: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001f1c6: R0 := pad:64[mem[R31 + 0x44, el]:u32]
0001f1cd: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001f1d4: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001f1db: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001f1e0: R0 := 0xD039
0001f1e6: R0 := pad:64[0xD9D4.15:0[R0]]
0001f1ed: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001f1f5: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001f1fc: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001f203: R0 := pad:64[27:0[R0].31:28[R0]]
0001f20b: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001f212: R1 := pad:64[mem[R31 + 0x94, el]:u32]
0001f219: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001f220: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001f228: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001f22f: R1 := pad:64[mem[R31 + 0x94, el]:u32]
0001f236: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001f23d: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001f244: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001f24b: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001f252: R0 := pad:64[mem[R31 + 0x50, el]:u32]
0001f259: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001f260: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001f267: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001f26c: R0 := 0x99E5
0001f272: R0 := pad:64[0xE6DB.15:0[R0]]
0001f279: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001f281: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001f288: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001f28f: R0 := pad:64[20:0[R0].31:21[R0]]
0001f297: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001f29e: R1 := pad:64[mem[R31 + 0x88, el]:u32]
0001f2a5: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001f2ac: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001f2b4: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001f2bb: R1 := pad:64[mem[R31 + 0x88, el]:u32]
0001f2c2: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001f2c9: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001f2d0: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001f2d7: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001f2de: R0 := pad:64[mem[R31 + 0x5C, el]:u32]
0001f2e5: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001f2ec: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001f2f3: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001f2f8: R0 := 0x7CF8
0001f2fe: R0 := pad:64[0x1FA2.15:0[R0]]
0001f305: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001f30d: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001f314: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001f31b: R0 := pad:64[15:0[R0].31:16[R0]]
0001f323: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001f32a: R1 := pad:64[mem[R31 + 0x8C, el]:u32]
0001f331: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001f338: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001f340: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001f347: R1 := pad:64[mem[R31 + 0x8C, el]:u32]
0001f34e: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001f355: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001f35c: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001f363: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001f36a: R0 := pad:64[mem[R31 + 0x28, el]:u32]
0001f371: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001f378: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001f37f: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001f384: R0 := 0x5665
0001f38a: R0 := pad:64[0xC4AC.15:0[R0]]
0001f391: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001f399: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001f3a0: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001f3a7: R0 := pad:64[8:0[R0].31:9[R0]]
0001f3af: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001f3b6: R1 := pad:64[mem[R31 + 0x90, el]:u32]
0001f3bd: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001f3c4: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001f3cc: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001f3d3: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001f3d9: R1 := pad:64[~31:0[R0]]
0001f3e0: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001f3e7: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001f3ee: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001f3f5: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001f3fc: R0 := pad:64[mem[R31 + 0x20, el]:u32]
0001f403: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001f40a: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001f411: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001f416: R0 := 0x2244
0001f41c: R0 := pad:64[0xF429.15:0[R0]]
0001f423: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001f42b: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001f432: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001f439: R0 := pad:64[25:0[R0].31:26[R0]]
0001f441: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001f448: R1 := pad:64[mem[R31 + 0x94, el]:u32]
0001f44f: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001f456: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001f45e: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001f465: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001f46b: R1 := pad:64[~31:0[R0]]
0001f472: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001f479: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001f480: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001f487: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001f48e: R0 := pad:64[mem[R31 + 0x3C, el]:u32]
0001f495: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001f49c: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001f4a3: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001f4a8: R0 := 0xFF97
0001f4ae: R0 := pad:64[0x432A.15:0[R0]]
0001f4b5: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001f4bd: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001f4c4: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001f4cb: R0 := pad:64[21:0[R0].31:22[R0]]
0001f4d3: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001f4da: R1 := pad:64[mem[R31 + 0x88, el]:u32]
0001f4e1: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001f4e8: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001f4f0: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001f4f7: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001f4fd: R1 := pad:64[~31:0[R0]]
0001f504: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001f50b: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001f512: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001f519: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001f520: R0 := pad:64[mem[R31 + 0x58, el]:u32]
0001f527: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001f52e: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001f535: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001f53a: R0 := 0x23A7
0001f540: R0 := pad:64[0xAB94.15:0[R0]]
0001f547: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001f54f: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001f556: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001f55d: R0 := pad:64[16:0[R0].31:17[R0]]
0001f565: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001f56c: R1 := pad:64[mem[R31 + 0x8C, el]:u32]
0001f573: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001f57a: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001f582: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001f589: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001f58f: R1 := pad:64[~31:0[R0]]
0001f596: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001f59d: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001f5a4: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001f5ab: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001f5b2: R0 := pad:64[mem[R31 + 0x34, el]:u32]
0001f5b9: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001f5c0: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001f5c7: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001f5cc: R0 := 0xA039
0001f5d2: R0 := pad:64[0xFC93.15:0[R0]]
0001f5d9: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001f5e1: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001f5e8: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001f5ef: R0 := pad:64[10:0[R0].31:11[R0]]
0001f5f7: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001f5fe: R1 := pad:64[mem[R31 + 0x90, el]:u32]
0001f605: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001f60c: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001f614: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001f61b: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001f621: R1 := pad:64[~31:0[R0]]
0001f628: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001f62f: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001f636: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001f63d: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001f644: R0 := pad:64[mem[R31 + 0x50, el]:u32]
0001f64b: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001f652: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001f659: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001f65e: R0 := 0x59C3
0001f664: R0 := pad:64[0x655B.15:0[R0]]
0001f66b: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001f673: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001f67a: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001f681: R0 := pad:64[25:0[R0].31:26[R0]]
0001f689: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001f690: R1 := pad:64[mem[R31 + 0x94, el]:u32]
0001f697: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001f69e: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001f6a6: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001f6ad: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001f6b3: R1 := pad:64[~31:0[R0]]
0001f6ba: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001f6c1: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001f6c8: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001f6cf: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001f6d6: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001f6dd: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001f6e4: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001f6eb: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001f6f0: R0 := 0xCC92
0001f6f6: R0 := pad:64[0x8F0C.15:0[R0]]
0001f6fd: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001f705: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001f70c: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001f713: R0 := pad:64[21:0[R0].31:22[R0]]
0001f71b: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001f722: R1 := pad:64[mem[R31 + 0x88, el]:u32]
0001f729: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001f730: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001f738: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001f73f: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001f745: R1 := pad:64[~31:0[R0]]
0001f74c: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001f753: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001f75a: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001f761: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001f768: R0 := pad:64[mem[R31 + 0x48, el]:u32]
0001f76f: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001f776: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001f77d: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001f782: R0 := 0xF47D
0001f788: R0 := pad:64[0xFFEF.15:0[R0]]
0001f78f: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001f797: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001f79e: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001f7a5: R0 := pad:64[16:0[R0].31:17[R0]]
0001f7ad: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001f7b4: R1 := pad:64[mem[R31 + 0x8C, el]:u32]
0001f7bb: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001f7c2: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001f7ca: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001f7d1: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001f7d7: R1 := pad:64[~31:0[R0]]
0001f7de: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001f7e5: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001f7ec: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001f7f3: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001f7fa: R0 := pad:64[mem[R31 + 0x24, el]:u32]
0001f801: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001f808: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001f80f: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001f814: R0 := 0x5DD1
0001f81a: R0 := pad:64[0x8584.15:0[R0]]
0001f821: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001f829: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001f830: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001f837: R0 := pad:64[10:0[R0].31:11[R0]]
0001f83f: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001f846: R1 := pad:64[mem[R31 + 0x90, el]:u32]
0001f84d: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001f854: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001f85c: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001f863: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001f869: R1 := pad:64[~31:0[R0]]
0001f870: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001f877: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001f87e: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001f885: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001f88c: R0 := pad:64[mem[R31 + 0x40, el]:u32]
0001f893: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001f89a: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001f8a1: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001f8a6: R0 := 0x7E4F
0001f8ac: R0 := pad:64[0x6FA8.15:0[R0]]
0001f8b3: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001f8bb: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001f8c2: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001f8c9: R0 := pad:64[25:0[R0].31:26[R0]]
0001f8d1: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001f8d8: R1 := pad:64[mem[R31 + 0x94, el]:u32]
0001f8df: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001f8e6: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001f8ee: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001f8f5: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001f8fb: R1 := pad:64[~31:0[R0]]
0001f902: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001f909: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001f910: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001f917: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001f91e: R0 := pad:64[mem[R31 + 0x5C, el]:u32]
0001f925: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001f92c: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001f933: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001f938: R0 := 0xE6E0
0001f93e: R0 := pad:64[0xFE2C.15:0[R0]]
0001f945: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001f94d: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001f954: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001f95b: R0 := pad:64[21:0[R0].31:22[R0]]
0001f963: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001f96a: R1 := pad:64[mem[R31 + 0x88, el]:u32]
0001f971: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001f978: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001f980: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001f987: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001f98d: R1 := pad:64[~31:0[R0]]
0001f994: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001f99b: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001f9a2: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001f9a9: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001f9b0: R0 := pad:64[mem[R31 + 0x38, el]:u32]
0001f9b7: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001f9be: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001f9c5: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001f9ca: R0 := 0x4314
0001f9d0: R0 := pad:64[0xA301.15:0[R0]]
0001f9d7: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001f9df: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001f9e6: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001f9ed: R0 := pad:64[16:0[R0].31:17[R0]]
0001f9f5: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001f9fc: R1 := pad:64[mem[R31 + 0x8C, el]:u32]
0001fa03: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001fa0a: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001fa12: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001fa19: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001fa1f: R1 := pad:64[~31:0[R0]]
0001fa26: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001fa2d: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001fa34: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001fa3b: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001fa42: R0 := pad:64[mem[R31 + 0x54, el]:u32]
0001fa49: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001fa50: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001fa57: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001fa5c: R0 := 0x11A1
0001fa62: R0 := pad:64[0x4E08.15:0[R0]]
0001fa69: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001fa71: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001fa78: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001fa7f: R0 := pad:64[10:0[R0].31:11[R0]]
0001fa87: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001fa8e: R1 := pad:64[mem[R31 + 0x90, el]:u32]
0001fa95: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001fa9c: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001faa4: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001faab: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001fab1: R1 := pad:64[~31:0[R0]]
0001fab8: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001fabf: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001fac6: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001facd: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001fad4: R0 := pad:64[mem[R31 + 0x30, el]:u32]
0001fadb: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001fae2: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001fae9: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001faee: R0 := 0x7E82
0001faf4: R0 := pad:64[0xF753.15:0[R0]]
0001fafb: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001fb03: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001fb0a: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001fb11: R0 := pad:64[25:0[R0].31:26[R0]]
0001fb19: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001fb20: R1 := pad:64[mem[R31 + 0x94, el]:u32]
0001fb27: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001fb2e: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001fb36: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001fb3d: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001fb43: R1 := pad:64[~31:0[R0]]
0001fb4a: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001fb51: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001fb58: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001fb5f: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001fb66: R0 := pad:64[mem[R31 + 0x4C, el]:u32]
0001fb6d: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001fb74: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001fb7b: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001fb80: R0 := 0xF235
0001fb86: R0 := pad:64[0xBD3A.15:0[R0]]
0001fb8d: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001fb95: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001fb9c: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001fba3: R0 := pad:64[21:0[R0].31:22[R0]]
0001fbab: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001fbb2: R1 := pad:64[mem[R31 + 0x88, el]:u32]
0001fbb9: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001fbc0: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001fbc8: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001fbcf: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001fbd5: R1 := pad:64[~31:0[R0]]
0001fbdc: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001fbe3: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001fbea: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001fbf1: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001fbf8: R0 := pad:64[mem[R31 + 0x28, el]:u32]
0001fbff: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001fc06: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001fc0d: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001fc12: R0 := 0xD2BB
0001fc18: R0 := pad:64[0x2AD7.15:0[R0]]
0001fc1f: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001fc27: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001fc2e: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001fc35: R0 := pad:64[16:0[R0].31:17[R0]]
0001fc3d: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001fc44: R1 := pad:64[mem[R31 + 0x8C, el]:u32]
0001fc4b: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001fc52: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001fc5a: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001fc61: R0 := pad:64[mem[R31 + 0x94, el]:u32]
0001fc67: R1 := pad:64[~31:0[R0]]
0001fc6e: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001fc75: R1 := pad:64[31:0[R1] | 31:0[R0]]
0001fc7c: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0001fc83: R1 := pad:64[31:0[R1] ^ 31:0[R0]]
0001fc8a: R0 := pad:64[mem[R31 + 0x44, el]:u32]
0001fc91: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001fc98: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001fc9f: R1 := pad:64[31:0[R1] + 31:0[R0]]
0001fca4: R0 := 0xD391
0001fcaa: R0 := pad:64[0xEB86.15:0[R0]]
0001fcb1: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001fcb9: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001fcc0: R0 := pad:64[mem[R31 + 0x90, el]:u32]
0001fcc7: R0 := pad:64[10:0[R0].31:11[R0]]
0001fccf: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001fcd6: R1 := pad:64[mem[R31 + 0x90, el]:u32]
0001fcdd: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0001fce4: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001fcec: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001fcf3: R1 := pad:64[mem[R31 + 0x94, el]:u32]
0001fcfa: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
0001fd01: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001fd09: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R0]
0001fd10: R1 := pad:64[mem[R31 + 0x90, el]:u32]
0001fd17: R0 := pad:64[mem[R31 + 0x68, el]:u32]
0001fd1e: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001fd26: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001fd2d: R1 := pad:64[mem[R31 + 0x8C, el]:u32]
0001fd34: R0 := pad:64[mem[R31 + 0x64, el]:u32]
0001fd3b: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001fd43: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0001fd4a: R1 := pad:64[mem[R31 + 0x88, el]:u32]
0001fd51: R0 := pad:64[mem[R31 + 0x60, el]:u32]
0001fd58: R0 := pad:64[31:0[R1] + 31:0[R0]]
0001fd60: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
00045fb0: goto %0001d351

00045fb1: sub md5_process_bytes(md5_process_bytes_result)
00046355: md5_process_bytes_result :: out u32 = low:32[R0]

0001ffdc:
0001ffe3: #72 := R31 - 0x50
0001ffe9: mem := mem with [#72, el]:u64 <- R29
0001ffef: mem := mem with [#72 + 8, el]:u64 <- R30
0001fff3: R31 := #72
0001fff9: R29 := R31
00020001: mem := mem with [R31 + 0x28, el]:u64 <- R0
00020009: mem := mem with [R31 + 0x20, el]:u64 <- R1
00020011: mem := mem with [R31 + 0x18, el]:u64 <- R2
00020018: R0 := mem[R31 + 0x18, el]:u64
0002001f: R0 := pad:64[mem[R0 + 0x18, el]:u32]
00020024: VF := 0
00020027: CF := 1
0002002b: ZF := 31:0[R0] = 0
0002002f: NF := 31:31[R0]
00020035: when ZF goto %00020033
00045fb2: goto %000202b9

000202b9:
000202be: R0 := mem[R31 + 0x18, el]:u64
000202c5: R0 := pad:64[mem[R0 + 0x18, el]:u32]
000202cb: R0 := pad:64[31:0[R0]]
000202d3: mem := mem with [R31 + 0x40, el]:u64 <- R0
000202d8: R1 := 0x80
000202df: R0 := mem[R31 + 0x40, el]:u64
000202e6: R0 := R1 + ~R0 + 1
000202ed: R2 := mem[R31 + 0x20, el]:u64
000202f4: R1 := mem[R31 + 0x20, el]:u64
000202fa: #76 := ~R0
000202ff: #77 := R2 + ~R0
00020305: VF := extend:128[#77 + 1] <> extend:128[R2] + extend:128[#76] + 1
0002030b: CF := pad:128[#77 + 1] <> pad:128[R2] + pad:128[#76] + 1
0002030f: ZF := #77 + 1 = 0
00020313: NF := 63:63[#77 + 1]
00020322: when ~(CF & ~ZF) goto %0002031a
00020323: goto %0002031e

0002031e:
0002031f: R0 := R0
00020325: goto %00020321

0002031a:
0002031b: R0 := R1
00020324: goto %00020321

00020321:
0002032d: mem := mem with [R31 + 0x38, el]:u64 <- R0
00020334: R0 := mem[R31 + 0x18, el]:u64
0002033a: R1 := R0 + 0x1C
00020341: R0 := mem[R31 + 0x40, el]:u64
00020348: R0 := R1 + R0
0002034f: R2 := mem[R31 + 0x38, el]:u64
00020356: R1 := mem[R31 + 0x28, el]:u64
0002035b: R30 := 0x416EF0
0002035d: call @memcpy with return %0002035f

0002035f:
00020364: R0 := mem[R31 + 0x18, el]:u64
0002036b: R0 := pad:64[mem[R0 + 0x18, el]:u32]
00020372: R1 := mem[R31 + 0x38, el]:u64
00020379: R1 := pad:64[31:0[R0] + 31:0[R1]]
00020380: R0 := mem[R31 + 0x18, el]:u64
00020388: mem := mem with [R0 + 0x18, el]:u32 <- 31:0[R1]
0002038f: R0 := mem[R31 + 0x18, el]:u64
00020396: R0 := pad:64[mem[R0 + 0x18, el]:u32]
0002039c: #78 := 31:0[R0] - 0x40
000203a1: VF := extend:64[#78] <> extend:64[31:0[R0]] - 0x40
000203a6: CF := pad:64[#78] <> pad:64[31:0[R0]] + 0xFFFFFFC0
000203aa: ZF := #78 = 0
000203ae: NF := 31:31[#78]
000203b5: when ~(CF & ~ZF) goto %000203b3
00045fb3: goto %000203f2

000203f2:
000203f7: R0 := mem[R31 + 0x18, el]:u64
000203fd: R3 := R0 + 0x1C
00020404: R0 := mem[R31 + 0x18, el]:u64
0002040b: R0 := pad:64[mem[R0 + 0x18, el]:u32]
00020411: R0 := pad:64[31:0[R0]]
00020417: R0 := pad:64[31:6[R0].0]
0002041e: R2 := mem[R31 + 0x18, el]:u64
00020424: R1 := R0
0002042a: R0 := R3
0002042f: R30 := 0x416F40
00020431: call @md5_process_block with return %00020433

00020433:
00020438: R0 := mem[R31 + 0x18, el]:u64
0002043f: R0 := pad:64[mem[R0 + 0x18, el]:u32]
00020445: R1 := pad:64[5:0[R0]]
0002044c: R0 := mem[R31 + 0x18, el]:u64
00020454: mem := mem with [R0 + 0x18, el]:u32 <- 31:0[R1]
0002045b: R0 := mem[R31 + 0x18, el]:u64
00020461: R3 := R0 + 0x1C
00020468: R0 := mem[R31 + 0x18, el]:u64
0002046e: R1 := R0 + 0x1C
00020475: R2 := mem[R31 + 0x40, el]:u64
0002047c: R0 := mem[R31 + 0x38, el]:u64
00020483: R0 := R2 + R0
00020489: R0 := 63:6[R0].0
00020490: R1 := R1 + R0
00020497: R0 := mem[R31 + 0x18, el]:u64
0002049e: R0 := pad:64[mem[R0 + 0x18, el]:u32]
000204a4: R0 := pad:64[31:0[R0]]
000204aa: R2 := R0
000204b0: R0 := R3
000204b5: R30 := 0x416F90
000204b7: call @memcpy with return %000203b3

000203b3:
000203bd: R1 := mem[R31 + 0x28, el]:u64
000203c4: R0 := mem[R31 + 0x38, el]:u64
000203cb: R0 := R1 + R0
000203d3: mem := mem with [R31 + 0x28, el]:u64 <- R0
000203da: R1 := mem[R31 + 0x20, el]:u64
000203e1: R0 := mem[R31 + 0x38, el]:u64
000203e8: R0 := R1 + ~R0 + 1
000203f0: mem := mem with [R31 + 0x20, el]:u64 <- R0
00045fb4: goto %00020033

00020033:
0002003d: R0 := mem[R31 + 0x20, el]:u64
00020043: #73 := R0 - 0x3F
00020048: VF := extend:128[#73] <> extend:128[R0] - 0x3F
0002004d: CF := pad:128[#73] <> pad:128[R0] + 0xFFFFFFFFFFFFFFC1
00020051: ZF := #73 = 0
00020055: NF := 63:63[#73]
0002005c: when ~(CF & ~ZF) goto %0002005a
00045fb5: goto %000201a9

000201a9:
000201ae: R0 := mem[R31 + 0x28, el]:u64
000201b4: R0 := pad:64[1:0[R0]]
000201b9: VF := 0
000201bc: CF := 1
000201c0: ZF := R0 = 0
000201c4: NF := 63:63[R0]
000201ca: when ZF goto %000201c8
00045fb6: goto %0002022d

000201c8:
000201d2: R0 := mem[R31 + 0x20, el]:u64
000201d8: R0 := 63:6[R0].0
000201df: R2 := mem[R31 + 0x18, el]:u64
000201e5: R1 := R0
000201ec: R0 := mem[R31 + 0x28, el]:u64
000201f1: R30 := 0x417030
000201f3: call @md5_process_block with return %000201f5

000201f5:
000201fa: R0 := mem[R31 + 0x20, el]:u64
00020200: R0 := 63:6[R0].0
00020207: R1 := mem[R31 + 0x28, el]:u64
0002020e: R0 := R1 + R0
00020216: mem := mem with [R31 + 0x28, el]:u64 <- R0
0002021d: R0 := mem[R31 + 0x20, el]:u64
00020223: R0 := pad:64[5:0[R0]]
0002022b: mem := mem with [R31 + 0x20, el]:u64 <- R0
00045fb7: goto %0002005a

0002022d:
00020230: goto %0002022e

0002022e:
00020236: R0 := mem[R31 + 0x20, el]:u64
0002023c: #75 := R0 - 0x40
00020241: VF := extend:128[#75] <> extend:128[R0] - 0x40
00020246: CF := pad:128[#75] <> pad:128[R0] + 0xFFFFFFFFFFFFFFC0
0002024a: ZF := #75 = 0
0002024e: NF := 63:63[#75]
00020255: when CF & ~ZF goto %00020253
00045fb8: goto %000202b5

000202b5:
000202b7: goto %0002005a

0002005a:
00020064: R0 := mem[R31 + 0x20, el]:u64
00020069: VF := 0
0002006c: CF := 1
00020070: ZF := R0 = 0
00020074: NF := 63:63[R0]
0002007a: when ZF goto %00020078
00045fb9: goto %00020094

00020094:
00020099: R0 := mem[R31 + 0x18, el]:u64
000200a0: R0 := pad:64[mem[R0 + 0x18, el]:u32]
000200a6: R0 := pad:64[31:0[R0]]
000200ae: mem := mem with [R31 + 0x48, el]:u64 <- R0
000200b5: R0 := mem[R31 + 0x18, el]:u64
000200bb: R1 := R0 + 0x1C
000200c2: R0 := mem[R31 + 0x48, el]:u64
000200c9: R0 := R1 + R0
000200d0: R2 := mem[R31 + 0x20, el]:u64
000200d7: R1 := mem[R31 + 0x28, el]:u64
000200dc: R30 := 0x417088
000200de: call @memcpy with return %000200e0

000200e0:
000200e5: R1 := mem[R31 + 0x48, el]:u64
000200ec: R0 := mem[R31 + 0x20, el]:u64
000200f3: R0 := R1 + R0
000200fb: mem := mem with [R31 + 0x48, el]:u64 <- R0
00020102: R0 := mem[R31 + 0x48, el]:u64
00020108: #74 := R0 - 0x3F
0002010d: VF := extend:128[#74] <> extend:128[R0] - 0x3F
00020112: CF := pad:128[#74] <> pad:128[R0] + 0xFFFFFFFFFFFFFFC1
00020116: ZF := #74 = 0
0002011a: NF := 63:63[#74]
00020121: when ~(CF & ~ZF) goto %0002011f
00045fba: goto %00020140

00020140:
00020145: R0 := mem[R31 + 0x18, el]:u64
0002014b: R0 := R0 + 0x1C
00020152: R2 := mem[R31 + 0x18, el]:u64
00020157: R1 := 0x40
0002015c: R30 := 0x4170B8
0002015e: call @md5_process_block with return %00020160

00020160:
00020165: R0 := mem[R31 + 0x48, el]:u64
0002016b: R0 := R0 - 0x40
00020173: mem := mem with [R31 + 0x48, el]:u64 <- R0
0002017a: R0 := mem[R31 + 0x18, el]:u64
00020180: R3 := R0 + 0x1C
00020187: R0 := mem[R31 + 0x18, el]:u64
0002018d: R0 := R0 + 0x5C
00020194: R2 := mem[R31 + 0x48, el]:u64
0002019a: R1 := R0
000201a0: R0 := R3
000201a5: R30 := 0x4170E4
000201a7: call @memcpy with return %0002011f

0002011f:
00020129: R0 := mem[R31 + 0x48, el]:u64
0002012f: R1 := pad:64[31:0[R0]]
00020136: R0 := mem[R31 + 0x18, el]:u64
0002013e: mem := mem with [R0 + 0x18, el]:u32 <- 31:0[R1]
00045fbb: goto %00020078

00020078:
00020084: R29 := mem[R31, el]:u64
00020089: R30 := mem[R31 + 8, el]:u64
0002008d: R31 := R31 + 0x50
00020092: call R30 with noreturn

00020253:
0002025d: R0 := mem[R31 + 0x18, el]:u64
00020263: R0 := R0 + 0x1C
00020268: R2 := 0x40
0002026f: R1 := mem[R31 + 0x28, el]:u64
00020274: R30 := 0x416FE4
00020276: call @memcpy with return %00020278

00020278:
0002027d: R2 := mem[R31 + 0x18, el]:u64
00020282: R1 := 0x40
00020287: R30 := 0x416FF0
00020289: call @md5_process_block with return %0002028b

0002028b:
00020290: R0 := mem[R31 + 0x28, el]:u64
00020296: R0 := R0 + 0x40
0002029e: mem := mem with [R31 + 0x28, el]:u64 <- R0
000202a5: R0 := mem[R31 + 0x20, el]:u64
000202ab: R0 := R0 - 0x40
000202b3: mem := mem with [R31 + 0x20, el]:u64 <- R0
00045fbc: goto %0002022e

00045fbd: sub md5_read_ctx(md5_read_ctx_result)
00046356: md5_read_ctx_result :: out u32 = low:32[R0]

0001ceda:
0001cede: #61 := R31 - 0x20
0001cee4: mem := mem with [#61, el]:u64 <- R29
0001ceea: mem := mem with [#61 + 8, el]:u64 <- R30
0001ceee: R31 := #61
0001cef4: R29 := R31
0001cefc: mem := mem with [R31 + 0x18, el]:u64 <- R0
0001cf04: mem := mem with [R31 + 0x10, el]:u64 <- R1
0001cf0b: R0 := mem[R31 + 0x18, el]:u64
0001cf10: VF := 0
0001cf13: CF := 1
0001cf17: ZF := R0 = 0
0001cf1b: NF := 63:63[R0]
0001cf21: when ZF <> 1 goto %0001cf1f
00045fbe: goto %00020635

00020635:
00020638: R0 := 0x41D000
0002063e: R3 := R0 + 0xBF0
00020643: R2 := 0x397
00020648: R0 := 0x41D000
0002064e: R1 := R0 + 0xB50
00020653: R0 := 0x41D000
00020659: R0 := R0 + 0xBB8
0002065e: R30 := 0x416AFC
00020660: call @__assert_fail with return %0001cf1f

0001cf1f:
0001cf29: R0 := mem[R31 + 0x10, el]:u64
0001cf2e: VF := 0
0001cf31: CF := 1
0001cf35: ZF := R0 = 0
0001cf39: NF := 63:63[R0]
0001cf3f: when ZF <> 1 goto %0001cf3d
00045fbf: goto %00020608

00020608:
0002060b: R0 := 0x41D000
00020611: R3 := R0 + 0xBF0
00020616: R2 := 0x398
0002061b: R0 := 0x41D000
00020621: R1 := R0 + 0xB50
00020626: R0 := 0x41D000
0002062c: R0 := R0 + 0xBC8
00020631: R30 := 0x416B28
00020633: call @__assert_fail with return %0001cf3d

0001cf3d:
0001cf47: R0 := mem[R31 + 0x18, el]:u64
0001cf4e: R1 := pad:64[mem[R0, el]:u32]
0001cf55: R0 := mem[R31 + 0x10, el]:u64
0001cf5d: mem := mem with [R0, el]:u32 <- 31:0[R1]
0001cf64: R0 := mem[R31 + 0x10, el]:u64
0001cf6a: R0 := R0 + 4
0001cf71: R1 := mem[R31 + 0x18, el]:u64
0001cf78: R1 := pad:64[mem[R1 + 4, el]:u32]
0001cf80: mem := mem with [R0, el]:u32 <- 31:0[R1]
0001cf87: R0 := mem[R31 + 0x10, el]:u64
0001cf8d: R0 := R0 + 8
0001cf94: R1 := mem[R31 + 0x18, el]:u64
0001cf9b: R1 := pad:64[mem[R1 + 8, el]:u32]
0001cfa3: mem := mem with [R0, el]:u32 <- 31:0[R1]
0001cfaa: R0 := mem[R31 + 0x10, el]:u64
0001cfb0: R0 := R0 + 0xC
0001cfb7: R1 := mem[R31 + 0x18, el]:u64
0001cfbe: R1 := pad:64[mem[R1 + 0xC, el]:u32]
0001cfc6: mem := mem with [R0, el]:u32 <- 31:0[R1]
0001cfcd: R0 := mem[R31 + 0x10, el]:u64
0001cfd4: R29 := mem[R31, el]:u64
0001cfd9: R30 := mem[R31 + 8, el]:u64
0001cfdd: R31 := R31 + 0x20
0001cfe2: call R30 with noreturn

00045fc0: sub md5_stream(md5_stream_result)
00046357: md5_stream_result :: out u32 = low:32[R0]

0001fe18:
0001fe1b: R12 := 0x1120
0001fe22: R31 := R31 + ~R12 + 1
0001fe2a: mem := mem with [R31, el]:u64 <- R29
0001fe30: mem := mem with [R31 + 8, el]:u64 <- R30
0001fe36: R29 := R31
0001fe3e: mem := mem with [R31 + 0x18, el]:u64 <- R0
0001fe46: mem := mem with [R31 + 0x10, el]:u64 <- R1
0001fe4c: R0 := R31 + 0x1000
0001fe52: R0 := R0 + 0x70
0001fe57: R30 := 0x416D40
0001fe59: call @md5_init_ctx with return %0001fe5b

0001fe5b:
0001fe60: mem := mem with [R31 + 0x1118, el]:u64 <- 0
00045fc1: goto %0001fe62

0001fe62:
0001fe66: R1 := R31 + 0x28
0001fe6d: R0 := mem[R31 + 0x1118, el]:u64
0001fe74: R4 := R1 + R0
0001fe79: R1 := 0x1000
0001fe80: R0 := mem[R31 + 0x1118, el]:u64
0001fe87: R0 := R1 + ~R0 + 1
0001fe8e: R3 := mem[R31 + 0x18, el]:u64
0001fe94: R2 := R0
0001fe99: R1 := 1
0001fe9f: R0 := R4
0001fea4: R30 := 0x416D70
0001fea6: call @fread with return %0001fea8

0001fea8:
0001feae: mem := mem with [R31 + 0x1110, el]:u64 <- R0
0001feb5: R1 := mem[R31 + 0x1118, el]:u64
0001febc: R0 := mem[R31 + 0x1110, el]:u64
0001fec3: R0 := R1 + R0
0001fecb: mem := mem with [R31 + 0x1118, el]:u64 <- R0
0001fed2: R0 := mem[R31 + 0x1118, el]:u64
0001fed8: #70 := R0 - 0x1000
0001fedd: VF := extend:128[#70] <> extend:128[R0] - 0x1000
0001fee2: CF := pad:128[#70] <> pad:128[R0] + 0xFFFFFFFFFFFFF000
0001fee6: ZF := #70 = 0
0001feea: NF := 63:63[#70]
0001fef0: when ZF goto %0001feee
00045fc2: goto %0002050a

0001feee:
0001fef9: R1 := R31 + 0x1000
0001feff: R1 := R1 + 0x70
0001ff05: R0 := R31 + 0x28
0001ff0b: R2 := R1
0001ff10: R1 := 0x1000
0001ff15: R30 := 0x416DE4
0001ff17: call @md5_process_block with return %0001ff19

0001ff19:
0001ff1b: goto %0001fe5b

0002050a:
0002050f: R0 := mem[R31 + 0x1110, el]:u64
00020514: VF := 0
00020517: CF := 1
0002051b: ZF := R0 = 0
0002051f: NF := 63:63[R0]
00020525: when ZF <> 1 goto %00020523
00045fc3: goto %00020552

00020523:
0002052d: R0 := mem[R31 + 0x18, el]:u64
00020532: R30 := 0x416DBC
00020535: call @feof with return %00020537

00020537:
0002053a: VF := 0
0002053d: CF := 1
00020541: ZF := 31:0[R0] = 0
00020545: NF := 31:31[R0]
0002054a: when ZF <> 1 goto %00020508
00045fc4: goto %0002054e

00020508:
00045fc5: goto %0001ff20

0002054e:
00020550: goto %0001fe62

00020552:
00020557: R0 := mem[R31 + 0x18, el]:u64
0002055c: R30 := 0x416DA4
0002055f: call @ferror with return %00020561

00020561:
00020564: VF := 0
00020567: CF := 1
0002056b: ZF := 31:0[R0] = 0
0002056f: NF := 31:31[R0]
00020574: when ZF goto %0001ff1d
00045fc6: goto %00020578

0001ff1d:
0001ff22: goto %0001ff20

0001ff20:
0001ff28: R0 := mem[R31 + 0x1118, el]:u64
0001ff2d: VF := 0
0001ff30: CF := 1
0001ff34: ZF := R0 = 0
0001ff38: NF := 63:63[R0]
0001ff3e: when ZF goto %0001ff3c
00045fc7: goto %000204e2

000204e2:
000204e6: R1 := R31 + 0x1000
000204ec: R1 := R1 + 0x70
000204f2: R0 := R31 + 0x28
000204f8: R2 := R1
000204ff: R1 := mem[R31 + 0x1118, el]:u64
00020504: R30 := 0x416E18
00020506: call @md5_process_bytes with return %0001ff3c

0001ff3c:
0001ff45: R0 := R31 + 0x1000
0001ff4b: R0 := R0 + 0x70
0001ff52: R1 := mem[R31 + 0x10, el]:u64
0001ff57: R30 := 0x416E28
0001ff59: call @md5_finish_ctx with return %0001ff5b

0001ff5b:
0001ff5e: R0 := 0
00045fc8: goto %0001ff60

00020578:
0002057b: R0 := 1
0002057f: goto %0001ff60

0001ff60:
0001ff65: R29 := mem[R31, el]:u64
0001ff6a: R30 := mem[R31 + 8, el]:u64
0001ff6f: R12 := 0x1120
0001ff76: R31 := R31 + R12
0001ff7b: call R30 with noreturn

00045fc9: sub memcmp(memcmp_s1, memcmp_s2, memcmp_n, memcmp_result)
00046358: memcmp_s1 :: in out u64 = R0
00046359: memcmp_s2 :: in out u64 = R1
0004635a: memcmp_n :: in u64 = R2
0004635b: memcmp_result :: out u32 = low:32[R0]

00017344:
0003fd1c: R16 := 0x430000
0003fd23: R17 := mem[R16 + 0x1D0, el]:u64
0003fd29: R16 := R16 + 0x1D0
0003fd2e: call R17 with noreturn

00045fca: sub memcpy(memcpy_dst, memcpy_src, memcpy_n, memcpy_result)
0004635c: memcpy_dst :: in out u64 = R0
0004635d: memcpy_src :: in out u64 = R1
0004635e: memcpy_n :: in u64 = R2
0004635f: memcpy_result :: out u64 = R0

0001c867:
0003f820: R16 := 0x430000
0003f827: R17 := mem[R16, el]:u64
0003f82d: R16 := R16
0003f832: call R17 with noreturn

00045fcb: sub memset(memset_buf, memset_c, memset_n, memset_result)
00046360: memset_buf :: in out u64 = R0
00046361: memset_c :: in u32 = low:32[R1]
00046362: memset_n :: in u64 = R2
00046363: memset_result :: out u64 = R0

000206a3:
0003fb22: R16 := 0x430000
0003fb29: R17 := mem[R16 + 0x118, el]:u64
0003fb2f: R16 := R16 + 0x118
0003fb34: call R17 with noreturn

00045fcc: sub memxor(memxor_result)
00046364: memxor_result :: out u32 = low:32[R0]

0001cc40:
0001cc44: #58 := R31 - 0x40
0001cc4a: mem := mem with [#58, el]:u64 <- R29
0001cc50: mem := mem with [#58 + 8, el]:u64 <- R30
0001cc54: R31 := #58
0001cc5a: R29 := R31
0001cc62: mem := mem with [R31 + 0x28, el]:u64 <- R0
0001cc6a: mem := mem with [R31 + 0x20, el]:u64 <- R1
0001cc72: mem := mem with [R31 + 0x18, el]:u64 <- R2
0001cc79: R0 := mem[R31 + 0x20, el]:u64
0001cc81: mem := mem with [R31 + 0x38, el]:u64 <- R0
0001cc88: R0 := mem[R31 + 0x28, el]:u64
0001cc90: mem := mem with [R31 + 0x30, el]:u64 <- R0
0001cc97: R0 := mem[R31 + 0x28, el]:u64
0001cc9c: VF := 0
0001cc9f: CF := 1
0001cca3: ZF := R0 = 0
0001cca7: NF := 63:63[R0]
0001ccad: when ZF goto %0001ccab
00045fcd: goto %00020848

00020848:
0002084d: R0 := mem[R31 + 0x20, el]:u64
00020852: VF := 0
00020855: CF := 1
00020859: ZF := R0 = 0
0002085d: NF := 63:63[R0]
00020862: when ZF <> 1 goto %0001ccc9
00045fce: goto %0001ccab

0001ccab:
0001ccb5: R0 := mem[R31 + 0x18, el]:u64
0001ccba: VF := 0
0001ccbd: CF := 1
0001ccc1: ZF := R0 = 0
0001ccc5: NF := 63:63[R0]
0001cccb: when ZF goto %0001ccc9
00045fcf: goto %0002081b

0002081b:
0002081e: R0 := 0x41D000
00020824: R3 := R0 + 0xBD8
00020829: R2 := 0x345
0002082e: R0 := 0x41D000
00020834: R1 := R0 + 0xB50
00020839: R0 := 0x41D000
0002083f: R0 := R0 + 0xB90
00020844: R30 := 0x4168A0
00020846: call @__assert_fail with return %0001cce7

0001cce7:
0001ccf1: R0 := mem[R31 + 0x38, el]:u64
0001ccf7: R1 := R0 + 1
0001ccff: mem := mem with [R31 + 0x38, el]:u64 <- R1
0001cd06: R2 := pad:64[mem[R0]]
0001cd0d: R0 := mem[R31 + 0x30, el]:u64
0001cd13: R1 := R0 + 1
0001cd1b: mem := mem with [R31 + 0x30, el]:u64 <- R1
0001cd22: R1 := pad:64[mem[R0]]
0001cd29: R1 := pad:64[31:0[R2] ^ 31:0[R1]]
0001cd2f: R1 := pad:64[7:0[R1]]
0001cd37: mem := mem with [R0] <- 7:0[R1]
0001cd3e: R0 := mem[R31 + 0x18, el]:u64
0001cd44: R0 := R0 - 1
0001cd4c: mem := mem with [R31 + 0x18, el]:u64 <- R0
00045fd0: goto %0001ccc9

0001ccc9:
0001ccd3: R0 := mem[R31 + 0x18, el]:u64
0001ccd8: VF := 0
0001ccdb: CF := 1
0001ccdf: ZF := R0 = 0
0001cce3: NF := 63:63[R0]
0001cce9: when ZF <> 1 goto %0001cce7
00045fd1: goto %0001cd4e

0001cd4e:
0001cd53: R0 := mem[R31 + 0x28, el]:u64
0001cd5a: R29 := mem[R31, el]:u64
0001cd5f: R30 := mem[R31 + 8, el]:u64
0001cd63: R31 := R31 + 0x40
0001cd68: call R30 with noreturn

00045fd2: sub myexit(myexit_result)
00046365: myexit_result :: out u32 = low:32[R0]

00025271:
00025275: #163 := R31 - 0x20
0002527b: mem := mem with [#163, el]:u64 <- R29
00025281: mem := mem with [#163 + 8, el]:u64 <- R30
00025285: R31 := #163
0002528b: R29 := R31
00025293: mem := mem with [R31 + 0x1C, el]:u32 <- 31:0[R0]
0002529a: R0 := pad:64[mem[R31 + 0x1C, el]:u32]
0002529f: VF := 0
000252a2: CF := 1
000252a6: ZF := 31:0[R0] = 0
000252aa: NF := 31:31[R0]
000252b0: when ZF goto %000252ae
00045fd3: goto %00025353

00025353:
00025356: R0 := 0x430000
0002535c: R0 := R0 + 0x350
00025363: R0 := mem[R0, el]:u64
00025369: R3 := R0
0002536e: R2 := 0x36
00025373: R1 := 1
00025378: R0 := 0x41C000
0002537e: R0 := R0 + 0xA90
00025383: R30 := 0x410E8C
00025385: call @fwrite with return %000252ae

000252ae:
000252b8: R0 := pad:64[mem[R31 + 0x1C, el]:u32]
000252bd: R30 := 0x410E94
000252c0: call @exit with return %00045fd4

00045fd4:
00045fd5: call @croak with noreturn

00045fd6: sub new_auth(new_auth_result)
00046366: new_auth_result :: out u32 = low:32[R0]

00021ad4:
00021adb: #104 := R31 - 0x20
00021ae1: mem := mem with [#104, el]:u64 <- R29
00021ae7: mem := mem with [#104 + 8, el]:u64 <- R30
00021aeb: R31 := #104
00021af1: R29 := R31
00021af6: R0 := 0x13C
00021afb: R30 := 0x402E2C
00021afe: call @malloc with return %00021b00

00021b00:
00021b06: mem := mem with [R31 + 0x18, el]:u64 <- R0
00021b0d: R0 := mem[R31 + 0x18, el]:u64
00021b12: VF := 0
00021b15: CF := 1
00021b19: ZF := R0 = 0
00021b1d: NF := 63:63[R0]
00021b23: when ZF <> 1 goto %00021b21
00045fd7: goto %0003924c

00021b21:
00021b2b: R0 := mem[R31 + 0x18, el]:u64
00021b30: R2 := 0x32
00021b35: R1 := 0
00021b3a: R30 := 0x402E54
00021b3c: call @memset with return %00021b3e

00021b3e:
00021b43: R0 := mem[R31 + 0x18, el]:u64
00021b49: R0 := R0 + 0x32
00021b4e: R2 := 0x32
00021b53: R1 := 0
00021b58: R30 := 0x402E68
00021b5a: call @memset with return %00021b5c

00021b5c:
00021b61: R0 := mem[R31 + 0x18, el]:u64
00021b67: R0 := R0 + 0x64
00021b6c: R2 := 0x32
00021b71: R1 := 0
00021b76: R30 := 0x402E7C
00021b78: call @memset with return %00021b7a

00021b7a:
00021b7f: R0 := mem[R31 + 0x18, el]:u64
00021b85: R0 := R0 + 0xFA
00021b8a: R2 := 0x32
00021b8f: R1 := 0
00021b94: R30 := 0x402E90
00021b96: call @memset with return %00021b98

00021b98:
00021b9d: R0 := mem[R31 + 0x18, el]:u64
00021ba3: R0 := R0 + 0xC8
00021ba8: R2 := 0x32
00021bad: R1 := 0
00021bb2: R30 := 0x402EA4
00021bb4: call @memset with return %00021bb6

00021bb6:
00021bbb: R0 := mem[R31 + 0x18, el]:u64
00021bc1: R0 := R0 + 0x96
00021bc6: R2 := 0x32
00021bcb: R1 := 0
00021bd0: R30 := 0x402EB8
00021bd2: call @memset with return %00021bd4

00021bd4:
00021bd9: R0 := mem[R31 + 0x18, el]:u64
00021bde: R1 := 1
00021be6: mem := mem with [R0 + 0x12C, el]:u32 <- 31:0[R1]
00021bed: R0 := mem[R31 + 0x18, el]:u64
00021bf4: mem := mem with [R0 + 0x130, el]:u32 <- 0
00021bfb: R0 := mem[R31 + 0x18, el]:u64
00021c02: mem := mem with [R0 + 0x134, el]:u32 <- 0
00021c09: R0 := mem[R31 + 0x18, el]:u64
00021c10: mem := mem with [R0 + 0x138, el]:u32 <- 0
00021c17: R0 := mem[R31 + 0x18, el]:u64
00045fd8: goto %00021c19

0003924c:
0003924f: R0 := 0
00039253: goto %00021c19

00021c19:
00021c1e: R29 := mem[R31, el]:u64
00021c23: R30 := mem[R31 + 8, el]:u64
00021c27: R31 := R31 + 0x20
00021c2c: call R30 with noreturn

00045fd9: sub new_rr_data(new_rr_data_result)
00046367: new_rr_data_result :: out u32 = low:32[R0]

00022b19:
00022b1d: #123 := R31 - 0x20
00022b23: mem := mem with [#123, el]:u64 <- R29
00022b29: mem := mem with [#123 + 8, el]:u64 <- R30
00022b2d: R31 := #123
00022b33: R29 := R31
00022b38: R0 := 0x68
00022b3d: R30 := 0x411B04
00022b3f: call @malloc with return %00022b41

00022b41:
00022b47: mem := mem with [R31 + 0x18, el]:u64 <- R0
00022b4e: R0 := mem[R31 + 0x18, el]:u64
00022b55: mem := mem with [R0, el]:u32 <- 0
00022b5c: R0 := mem[R31 + 0x18, el]:u64
00022b63: mem := mem with [R0 + 0x10, el]:u32 <- 0
00022b6a: R0 := mem[R31 + 0x18, el]:u64
00022b71: mem := mem with [R0 + 0x14, el]:u32 <- 0
00022b78: R0 := mem[R31 + 0x18, el]:u64
00022b7f: mem := mem with [R0 + 0x18, el]:u32 <- 0
00022b86: R0 := mem[R31 + 0x18, el]:u64
00022b8b: R1 := 1
00022b93: mem := mem with [R0 + 0x1C, el]:u32 <- 31:0[R1]
00022b9a: R0 := mem[R31 + 0x18, el]:u64
00022ba1: mem := mem with [R0 + 0x20, el]:u32 <- 0
00022ba8: R0 := mem[R31 + 0x18, el]:u64
00022bad: R1 := 0xFFFFFFFF
00022bb5: mem := mem with [R0 + 0x24, el]:u32 <- 31:0[R1]
00022bbc: R0 := mem[R31 + 0x18, el]:u64
00022bc3: mem := mem with [R0 + 8, el]:u64 <- 0
00022bca: R0 := mem[R31 + 0x18, el]:u64
00022bd1: mem := mem with [R0 + 0x28, el]:u64 <- 0
00022bd8: R0 := mem[R31 + 0x18, el]:u64
00022bdf: mem := mem with [R0 + 0x30, el]:u64 <- 0
00022be6: R0 := mem[R31 + 0x18, el]:u64
00022bed: mem := mem with [R0 + 0x38, el]:u64 <- 0
00022bf4: R0 := mem[R31 + 0x18, el]:u64
00022bfb: mem := mem with [R0 + 0x40, el]:u64 <- 0
00022c02: R0 := mem[R31 + 0x18, el]:u64
00022c09: mem := mem with [R0 + 0x48, el]:u64 <- 0
00022c10: R0 := mem[R31 + 0x18, el]:u64
00022c17: mem := mem with [R0 + 0x50, el]:u64 <- 0
00022c1e: R0 := mem[R31 + 0x18, el]:u64
00022c25: mem := mem with [R0 + 0x58, el]:u64 <- 0
00022c2c: R0 := mem[R31 + 0x18, el]:u64
00022c33: mem := mem with [R0 + 0x60, el]:u64 <- 0
00022c3a: R0 := mem[R31 + 0x18, el]:u64
00022c41: R29 := mem[R31, el]:u64
00022c46: R30 := mem[R31 + 8, el]:u64
00022c4a: R31 := R31 + 0x20
00022c4f: call R30 with noreturn

00045fda: sub noproxy_add(noproxy_add_result)
00046368: noproxy_add_result :: out u32 = low:32[R0]

000284df:
000284e3: #219 := R31 - 0x30
000284e9: mem := mem with [#219, el]:u64 <- R29
000284ef: mem := mem with [#219 + 8, el]:u64 <- R30
000284f3: R31 := #219
000284f9: R29 := R31
00028501: mem := mem with [R31 + 0x18, el]:u64 <- R0
00028509: mem := mem with [R31 + 0x10, el]:u64 <- R1
0002850f: R0 := R31 + 0x20
00028515: R2 := R0
0002851a: R0 := 0x41A000
00028520: R1 := R0 + 0xA0
00028527: R0 := mem[R31 + 0x10, el]:u64
0002852c: R30 := 0x408E48
0002852f: call @strtok_r with return %00028531

00028531:
00028537: mem := mem with [R31 + 0x28, el]:u64 <- R0
0002853c: goto %0002853a

0002853a:
00028542: R0 := mem[R31 + 0x28, el]:u64
00028547: VF := 0
0002854a: CF := 1
0002854e: ZF := R0 = 0
00028552: NF := 63:63[R0]
00028558: when ZF <> 1 goto %00028556
00045fdb: goto %000285f7

000285f7:
000285fc: R0 := mem[R31 + 0x18, el]:u64
00028603: R29 := mem[R31, el]:u64
00028608: R30 := mem[R31 + 8, el]:u64
0002860c: R31 := R31 + 0x30
00028611: call R30 with noreturn

00028556:
0002855e: R0 := 0x430000
00028564: R0 := R0 + 0x390
0002856b: R0 := pad:64[mem[R0, el]:u32]
00028570: VF := 0
00028573: CF := 1
00028577: ZF := 31:0[R0] = 0
0002857b: NF := 31:31[R0]
00028581: when ZF goto %0002857f
00045fdc: goto %000285de

000285de:
000285e3: R1 := mem[R31 + 0x28, el]:u64
000285e8: R0 := 0x41A000
000285ee: R0 := R0 + 0xA8
000285f3: R30 := 0x408E74
000285f5: call @printf with return %0002857f

0002857f:
00028589: R0 := mem[R31 + 0x28, el]:u64
0002858e: R30 := 0x408E7C
00028590: call @strdup with return %00028592

00028592:
00028596: R2 := R0
0002859b: R1 := 0
000285a2: R0 := mem[R31 + 0x18, el]:u64
000285a7: R30 := 0x408E8C
000285a9: call @plist_add with return %000285ab

000285ab:
000285b1: mem := mem with [R31 + 0x18, el]:u64 <- R0
000285b7: R0 := R31 + 0x20
000285bd: R2 := R0
000285c2: R0 := 0x41A000
000285c8: R1 := R0 + 0xA0
000285cd: R0 := 0
000285d2: R30 := 0x408EA8
000285d4: call @strtok_r with return %000285d6

000285d6:
000285dc: mem := mem with [R31 + 0x28, el]:u64 <- R0
00045fdd: goto %0002853a

00045fde: sub noproxy_match(noproxy_match_result)
00046369: noproxy_match_result :: out u32 = low:32[R0]

00028613:
00028617: #220 := R31 - 0x30
0002861d: mem := mem with [#220, el]:u64 <- R29
00028623: mem := mem with [#220 + 8, el]:u64 <- R30
00028627: R31 := #220
0002862d: R29 := R31
00028635: mem := mem with [R31 + 0x18, el]:u64 <- R0
0002863a: R0 := 0x430000
00028640: R0 := R0 + 0x440
00028647: R0 := mem[R0, el]:u64
0002864f: mem := mem with [R31 + 0x28, el]:u64 <- R0
00028654: goto %00028652

00028652:
0002865a: R0 := mem[R31 + 0x28, el]:u64
0002865f: VF := 0
00028662: CF := 1
00028666: ZF := R0 = 0
0002866a: NF := 63:63[R0]
00028670: when ZF <> 1 goto %0002866e
00045fdf: goto %00033652

00033652:
00033655: R0 := 0
00045fe0: goto %00028798

0002866e:
00028678: R0 := mem[R31 + 0x28, el]:u64
0002867f: R0 := mem[R0 + 8, el]:u64
00028684: VF := 0
00028687: CF := 1
0002868b: ZF := R0 = 0
0002868f: NF := 63:63[R0]
00028695: when ZF goto %00028693
00045fe1: goto %00028704

00028704:
00028709: R0 := mem[R31 + 0x28, el]:u64
00028710: R0 := mem[R0 + 8, el]:u64
00028717: R0 := pad:64[mem[R0]]
0002871c: VF := 0
0002871f: CF := 1
00028723: ZF := 31:0[R0] = 0
00028727: NF := 31:31[R0]
0002872c: when ZF goto %00028693
00045fe2: goto %00028730

00028730:
00028735: R0 := mem[R31 + 0x28, el]:u64
0002873c: R0 := mem[R0 + 8, el]:u64
00028741: R2 := 0
00028748: R1 := mem[R31 + 0x18, el]:u64
0002874d: R30 := 0x408F1C
00028750: call @fnmatch with return %00028752

00028752:
00028755: VF := 0
00028758: CF := 1
0002875c: ZF := 31:0[R0] = 0
00028760: NF := 31:31[R0]
00028765: when ZF <> 1 goto %00028693
00045fe3: goto %00028769

00028693:
0002869b: R0 := 0x430000
000286a1: R0 := R0 + 0x390
000286a8: R0 := pad:64[mem[R0, el]:u32]
000286ad: VF := 0
000286b0: CF := 1
000286b4: ZF := 31:0[R0] = 0
000286b8: NF := 31:31[R0]
000286be: when ZF goto %000286bc
00045fe4: goto %000286d7

000286d7:
000286dc: R0 := mem[R31 + 0x28, el]:u64
000286e3: R0 := mem[R0 + 8, el]:u64
000286e9: R2 := R0
000286f0: R1 := mem[R31 + 0x18, el]:u64
000286f5: R0 := 0x41A000
000286fb: R0 := R0 + 0xD8
00028700: R30 := 0x408F8C
00028702: call @printf with return %000286bc

000286bc:
000286c6: R0 := mem[R31 + 0x28, el]:u64
000286cd: R0 := mem[R0 + 0x10, el]:u64
000286d5: mem := mem with [R31 + 0x28, el]:u64 <- R0
00045fe5: goto %00028652

00028769:
0002876c: R0 := 0x430000
00028772: R0 := R0 + 0x390
00028779: R0 := pad:64[mem[R0, el]:u32]
0002877e: VF := 0
00028781: CF := 1
00028785: ZF := 31:0[R0] = 0
00028789: NF := 31:31[R0]
0002878f: when ZF goto %0002878d
00045fe6: goto %00033625

00033625:
0003362a: R0 := mem[R31 + 0x28, el]:u64
00033631: R0 := mem[R0 + 8, el]:u64
00033637: R2 := R0
0003363e: R1 := mem[R31 + 0x18, el]:u64
00033643: R0 := 0x41A000
00033649: R0 := R0 + 0xC8
0003364e: R30 := 0x408F54
00033650: call @printf with return %0002878d

0002878d:
00028795: R0 := 1
0002879a: goto %00028798

00028798:
000287a0: R29 := mem[R31, el]:u64
000287a5: R30 := mem[R31 + 8, el]:u64
000287a9: R31 := R31 + 0x30
000287ae: call R30 with noreturn

00045fe7: sub ntlm2_calc_resp(ntlm2_calc_resp_result)
0004636a: ntlm2_calc_resp_result :: out u32 = low:32[R0]

00034287:
0003428b: #379 := R31 - 0x80
00034291: mem := mem with [#379, el]:u64 <- R29
00034297: mem := mem with [#379 + 8, el]:u64 <- R30
0003429b: R31 := #379
000342a1: R29 := R31
000342a9: mem := mem with [R31 + 0x48, el]:u64 <- R0
000342b1: mem := mem with [R31 + 0x40, el]:u64 <- R1
000342b9: mem := mem with [R31 + 0x38, el]:u64 <- R2
000342c1: mem := mem with [R31 + 0x30, el]:u64 <- R3
000342c9: mem := mem with [R31 + 0x28, el]:u64 <- R4
000342d1: mem := mem with [R31 + 0x20, el]:u64 <- R5
000342d9: mem := mem with [R31 + 0x1C, el]:u32 <- 31:0[R6]
000342e1: mem := mem with [R31 + 0x18, el]:u32 <- 31:0[R7]
000342e6: R0 := 9
000342eb: R30 := 0x40CFC0
000342ed: call @zmalloc with return %000342ef

000342ef:
000342f5: mem := mem with [R31 + 0x78, el]:u64 <- R0
000342fa: R30 := 0x40CFC8
000342fc: call @getrandom64 with return %000342fe

000342fe:
00034302: R1 := R0
00034309: R0 := mem[R31 + 0x78, el]:u64
00034311: mem := mem with [R0, el]:u64 <- R1
00034316: R0 := 0
0003431b: R30 := 0x40CFDC
0003431e: call @time with return %00034320

00034320:
00034324: R1 := R0
00034329: R0 := 0x9680
00034330: R0 := 63:32[R0].0x98.15:0[R0]
00034337: R1 := R1 * R0
0003433c: R0 := 0x8000
00034343: R0 := 63:32[R0].0xD53E.15:0[R0]
0003434a: R0 := 63:48[R0].0xB1DE.31:0[R0]
00034350: R0 := 0x19D.47:0[R0]
00034357: R0 := R1 + R0
0003435f: mem := mem with [R31 + 0x70, el]:u64 <- R0
00034364: R0 := 0x430000
0003436a: R0 := R0 + 0x390
00034371: R0 := pad:64[mem[R0, el]:u32]
00034376: VF := 0
00034379: CF := 1
0003437d: ZF := 31:0[R0] = 0
00034381: NF := 31:31[R0]
00034387: when ZF goto %00034385
00045fe8: goto %00034937

00034937:
0003493a: R2 := 7
0003493f: R1 := 8
00034946: R0 := mem[R31 + 0x78, el]:u64
0003494b: R30 := 0x40D028
0003494d: call @printmem with return %0003494f

0003494f:
00034955: mem := mem with [R31 + 0x68, el]:u64 <- R0
0003495c: R2 := mem[R31 + 0x70, el]:u64
00034963: R1 := mem[R31 + 0x68, el]:u64
00034968: R0 := 0x41B000
0003496e: R0 := R0 + 0x938
00034973: R30 := 0x40D040
00034975: call @printf with return %00034977

00034977:
0003497c: R0 := mem[R31 + 0x68, el]:u64
00034981: R30 := 0x40D048
00034983: call @free with return %00034385

00034385:
0003438f: R0 := pad:64[mem[R31 + 0x18, el]:u32]
00034395: R0 := pad:64[31:0[R0] + 0x21]
0003439b: R0 := extend:64[31:0[R0]]
000343a0: R30 := 0x40D058
000343a2: call @zmalloc with return %000343a4

000343a4:
000343aa: mem := mem with [R31 + 0x60, el]:u64 <- R0
000343b1: R0 := mem[R31 + 0x60, el]:u64
000343b6: R1 := 0x101
000343be: mem := mem with [R0, el]:u32 <- 31:0[R1]
000343c5: R0 := mem[R31 + 0x60, el]:u64
000343cb: R0 := R0 + 4
000343d2: mem := mem with [R0, el]:u32 <- 0
000343d9: R0 := mem[R31 + 0x60, el]:u64
000343df: R0 := R0 + 8
000343e6: R1 := mem[R31 + 0x70, el]:u64
000343ee: mem := mem with [R0, el]:u64 <- R1
000343f5: R0 := mem[R31 + 0x60, el]:u64
000343fb: R0 := R0 + 0x10
00034402: R1 := mem[R31 + 0x78, el]:u64
00034409: R1 := mem[R1, el]:u64
00034411: mem := mem with [R0, el]:u64 <- R1
00034418: R0 := mem[R31 + 0x60, el]:u64
0003441e: R0 := R0 + 0x18
00034425: mem := mem with [R0, el]:u32 <- 0
0003442c: R0 := mem[R31 + 0x60, el]:u64
00034432: R3 := R0 + 0x1C
00034439: R0 := extend:64[mem[R31 + 0x1C, el]:u32]
00034440: R1 := mem[R31 + 0x20, el]:u64
00034447: R0 := R1 + R0
0003444e: R1 := extend:64[mem[R31 + 0x18, el]:u32]
00034454: R2 := R1
0003445a: R1 := R0
00034460: R0 := R3
00034465: R30 := 0x40D0CC
00034467: call @memcpy with return %00034469

00034469:
0003446e: R0 := extend:64[mem[R31 + 0x18, el]:u32]
00034474: R0 := R0 + 0x1C
0003447b: R1 := mem[R31 + 0x60, el]:u64
00034482: R0 := R1 + R0
00034487: R2 := 4
0003448c: R1 := 0
00034491: R30 := 0x40D0E8
00034493: call @memset with return %00034495

00034495:
0003449a: R0 := pad:64[mem[R31 + 0x18, el]:u32]
000344a0: R0 := pad:64[31:0[R0] + 0x20]
000344a8: mem := mem with [R31 + 0x5C, el]:u32 <- 31:0[R0]
000344af: R0 := pad:64[mem[R31 + 0x5C, el]:u32]
000344b5: R1 := pad:64[31:0[R0] + 0x10]
000344bc: R0 := mem[R31 + 0x40, el]:u64
000344c4: mem := mem with [R0, el]:u32 <- 31:0[R1]
000344cb: R0 := mem[R31 + 0x40, el]:u64
000344d2: R0 := pad:64[mem[R0, el]:u32]
000344d8: R0 := pad:64[31:0[R0] + 1]
000344de: R0 := extend:64[31:0[R0]]
000344e3: R30 := 0x40D118
000344e5: call @zmalloc with return %000344e7

000344e7:
000344eb: R1 := R0
000344f2: R0 := mem[R31 + 0x48, el]:u64
000344fa: mem := mem with [R0, el]:u64 <- R1
00034501: R0 := pad:64[mem[R31 + 0x5C, el]:u32]
00034507: R0 := pad:64[31:0[R0] + 9]
0003450d: R0 := extend:64[31:0[R0]]
00034512: R30 := 0x40D134
00034514: call @zmalloc with return %00034516

00034516:
0003451c: mem := mem with [R31 + 0x50, el]:u64 <- R0
00034523: R0 := mem[R31 + 0x20, el]:u64
00034529: R0 := R0 + 0x18
00034530: R1 := mem[R0, el]:u64
00034537: R0 := mem[R31 + 0x50, el]:u64
0003453f: mem := mem with [R0, el]:u64 <- R1
00034546: R0 := mem[R31 + 0x50, el]:u64
0003454c: R0 := R0 + 8
00034553: R1 := extend:64[mem[R31 + 0x5C, el]:u32]
00034559: R2 := R1
00034560: R1 := mem[R31 + 0x60, el]:u64
00034565: R30 := 0x40D164
00034567: call @memcpy with return %00034569

00034569:
0003456e: R0 := pad:64[mem[R31 + 0x5C, el]:u32]
00034574: R0 := pad:64[31:0[R0] + 8]
0003457a: R1 := extend:64[31:0[R0]]
00034581: R0 := mem[R31 + 0x48, el]:u64
00034588: R0 := mem[R0, el]:u64
0003458e: R4 := R0
00034594: R3 := R1
0003459b: R2 := mem[R31 + 0x50, el]:u64
000345a0: R1 := 0x10
000345a7: R0 := mem[R31 + 0x28, el]:u64
000345ac: R30 := 0x40D190
000345ae: call @hmac_md5 with return %000345b0

000345b0:
000345b5: R0 := mem[R31 + 0x48, el]:u64
000345bc: R0 := mem[R0, el]:u64
000345c2: R0 := R0 + 0x10
000345c9: R1 := extend:64[mem[R31 + 0x5C, el]:u32]
000345cf: R2 := R1
000345d6: R1 := mem[R31 + 0x60, el]:u64
000345db: R30 := 0x40D1AC
000345dd: call @memcpy with return %000345df

000345df:
000345e4: R0 := mem[R31 + 0x50, el]:u64
000345e9: R30 := 0x40D1B4
000345eb: call @free with return %000345ed

000345ed:
000345f2: R0 := mem[R31 + 0x30, el]:u64
000345f7: R1 := 0x18
000345ff: mem := mem with [R0, el]:u32 <- 31:0[R1]
00034606: R0 := mem[R31 + 0x30, el]:u64
0003460d: R0 := pad:64[mem[R0, el]:u32]
00034613: R0 := pad:64[31:0[R0] + 1]
00034619: R0 := extend:64[31:0[R0]]
0003461e: R30 := 0x40D1D4
00034620: call @zmalloc with return %00034622

00034622:
00034626: R1 := R0
0003462d: R0 := mem[R31 + 0x38, el]:u64
00034635: mem := mem with [R0, el]:u64 <- R1
0003463a: R0 := 0x11
0003463f: R30 := 0x40D1E8
00034641: call @zmalloc with return %00034643

00034643:
00034649: mem := mem with [R31 + 0x50, el]:u64 <- R0
00034650: R0 := mem[R31 + 0x20, el]:u64
00034656: R0 := R0 + 0x18
0003465d: R1 := mem[R0, el]:u64
00034664: R0 := mem[R31 + 0x50, el]:u64
0003466c: mem := mem with [R0, el]:u64 <- R1
00034673: R0 := mem[R31 + 0x50, el]:u64
00034679: R0 := R0 + 8
00034680: R1 := mem[R31 + 0x78, el]:u64
00034687: R1 := mem[R1, el]:u64
0003468f: mem := mem with [R0, el]:u64 <- R1
00034696: R0 := mem[R31 + 0x38, el]:u64
0003469d: R0 := mem[R0, el]:u64
000346a3: R4 := R0
000346a8: R3 := 0x10
000346af: R2 := mem[R31 + 0x50, el]:u64
000346b4: R1 := 0x10
000346bb: R0 := mem[R31 + 0x28, el]:u64
000346c0: R30 := 0x40D234
000346c2: call @hmac_md5 with return %000346c4

000346c4:
000346c9: R0 := mem[R31 + 0x38, el]:u64
000346d0: R0 := mem[R0, el]:u64
000346d6: R0 := R0 + 0x10
000346dd: R1 := mem[R31 + 0x78, el]:u64
000346e4: R1 := mem[R1, el]:u64
000346ec: mem := mem with [R0, el]:u64 <- R1
000346f3: R0 := mem[R31 + 0x50, el]:u64
000346f8: R30 := 0x40D254
000346fa: call @free with return %000346fc

000346fc:
00034701: R0 := mem[R31 + 0x60, el]:u64
00034706: R30 := 0x40D25C
00034708: call @free with return %0003470a

0003470a:
0003470f: R0 := mem[R31 + 0x78, el]:u64
00034714: R30 := 0x40D264
00034716: call @free with return %00034718

00034718:
0003471f: R29 := mem[R31, el]:u64
00034724: R30 := mem[R31 + 8, el]:u64
00034728: R31 := R31 + 0x80
0003472d: call R30 with noreturn

00045fe9: sub ntlm2_hash_password(ntlm2_hash_password_result)
0004636b: ntlm2_hash_password_result :: out u32 = low:32[R0]

00034b1b:
00034b1f: #382 := R31 - 0x70
00034b25: mem := mem with [#382, el]:u64 <- R29
00034b2b: mem := mem with [#382 + 8, el]:u64 <- R30
00034b2f: R31 := #382
00034b35: R29 := R31
00034b3d: mem := mem with [R31 + 0x10, el]:u64 <- R19
00034b45: mem := mem with [R31 + 0x38, el]:u64 <- R0
00034b4d: mem := mem with [R31 + 0x30, el]:u64 <- R1
00034b55: mem := mem with [R31 + 0x28, el]:u64 <- R2
00034b5c: R0 := mem[R31 + 0x28, el]:u64
00034b61: R30 := 0x40D518
00034b63: call @ntlm_hash_nt_password with return %00034b65

00034b65:
00034b6b: mem := mem with [R31 + 0x68, el]:u64 <- R0
00034b72: R0 := mem[R31 + 0x38, el]:u64
00034b77: R30 := 0x40D524
00034b79: call @strlen with return %00034b7b

00034b7b:
00034b7f: R19 := R0
00034b86: R0 := mem[R31 + 0x30, el]:u64
00034b8b: R30 := 0x40D530
00034b8d: call @strlen with return %00034b8f

00034b8f:
00034b94: R0 := R19 + R0
00034b9a: R0 := R0 + 1
00034ba2: mem := mem with [R31 + 0x60, el]:u64 <- R0
00034ba9: R0 := mem[R31 + 0x60, el]:u64
00034bae: R30 := 0x40D544
00034bb0: call @zmalloc with return %00034bb2

00034bb2:
00034bb8: mem := mem with [R31 + 0x58, el]:u64 <- R0
00034bbf: R2 := mem[R31 + 0x60, el]:u64
00034bc6: R1 := mem[R31 + 0x38, el]:u64
00034bcd: R0 := mem[R31 + 0x58, el]:u64
00034bd2: R30 := 0x40D558
00034bd4: call @strlcat with return %00034bd6

00034bd6:
00034bdb: R2 := mem[R31 + 0x60, el]:u64
00034be2: R1 := mem[R31 + 0x30, el]:u64
00034be9: R0 := mem[R31 + 0x58, el]:u64
00034bee: R30 := 0x40D568
00034bf0: call @strlcat with return %00034bf2

00034bf2:
00034bf7: R0 := mem[R31 + 0x58, el]:u64
00034bfc: R30 := 0x40D570
00034bfe: call @uppercase with return %00034c00

00034c00:
00034c04: R0 := R31 + 0x40
00034c0b: R1 := mem[R31 + 0x58, el]:u64
00034c10: R30 := 0x40D57C
00034c12: call @unicode with return %00034c14

00034c14:
00034c1a: mem := mem with [R31 + 0x54, el]:u32 <- 31:0[R0]
00034c1f: R0 := 0x11
00034c24: R30 := 0x40D588
00034c26: call @zmalloc with return %00034c28

00034c28:
00034c2e: mem := mem with [R31 + 0x48, el]:u64 <- R0
00034c35: R0 := mem[R31 + 0x40, el]:u64
00034c3c: R1 := extend:64[mem[R31 + 0x54, el]:u32]
00034c43: R4 := mem[R31 + 0x48, el]:u64
00034c49: R3 := R1
00034c4f: R2 := R0
00034c54: R1 := 0x10
00034c5b: R0 := mem[R31 + 0x68, el]:u64
00034c60: R30 := 0x40D5AC
00034c62: call @hmac_md5 with return %00034c64

00034c64:
00034c69: R0 := mem[R31 + 0x68, el]:u64
00034c6e: R30 := 0x40D5B4
00034c70: call @free with return %00034c72

00034c72:
00034c77: R0 := mem[R31 + 0x40, el]:u64
00034c7c: R30 := 0x40D5BC
00034c7e: call @free with return %00034c80

00034c80:
00034c85: R0 := mem[R31 + 0x58, el]:u64
00034c8a: R30 := 0x40D5C4
00034c8c: call @free with return %00034c8e

00034c8e:
00034c93: R0 := mem[R31 + 0x48, el]:u64
00034c9a: R19 := mem[R31 + 0x10, el]:u64
00034ca1: R29 := mem[R31, el]:u64
00034ca6: R30 := mem[R31 + 8, el]:u64
00034caa: R31 := R31 + 0x70
00034caf: call R30 with noreturn

00045fea: sub ntlm2sr_calc_rest(ntlm2sr_calc_rest_result)
0004636c: ntlm2sr_calc_rest_result :: out u32 = low:32[R0]

0003472f:
00034733: #380 := R31 - 0x60
00034739: mem := mem with [#380, el]:u64 <- R29
0003473f: mem := mem with [#380 + 8, el]:u64 <- R30
00034743: R31 := #380
00034749: R29 := R31
00034751: mem := mem with [R31 + 0x38, el]:u64 <- R0
00034759: mem := mem with [R31 + 0x30, el]:u64 <- R1
00034761: mem := mem with [R31 + 0x28, el]:u64 <- R2
00034769: mem := mem with [R31 + 0x20, el]:u64 <- R3
00034771: mem := mem with [R31 + 0x18, el]:u64 <- R4
00034779: mem := mem with [R31 + 0x10, el]:u64 <- R5
0003477e: R0 := 9
00034783: R30 := 0x40D298
00034785: call @zmalloc with return %00034787

00034787:
0003478d: mem := mem with [R31 + 0x58, el]:u64 <- R0
00034792: R30 := 0x40D2A0
00034794: call @getrandom64 with return %00034796

00034796:
0003479a: R1 := R0
000347a1: R0 := mem[R31 + 0x58, el]:u64
000347a9: mem := mem with [R0, el]:u64 <- R1
000347b0: R0 := mem[R31 + 0x20, el]:u64
000347b5: R1 := 0x18
000347bd: mem := mem with [R0, el]:u32 <- 31:0[R1]
000347c4: R0 := mem[R31 + 0x20, el]:u64
000347cb: R0 := pad:64[mem[R0, el]:u32]
000347d1: R0 := pad:64[31:0[R0] + 1]
000347d7: R0 := extend:64[31:0[R0]]
000347dc: R30 := 0x40D2CC
000347de: call @zmalloc with return %000347e0

000347e0:
000347e4: R1 := R0
000347eb: R0 := mem[R31 + 0x28, el]:u64
000347f3: mem := mem with [R0, el]:u64 <- R1
000347fa: R0 := mem[R31 + 0x28, el]:u64
00034801: R0 := mem[R0, el]:u64
00034808: R1 := mem[R31 + 0x58, el]:u64
0003480f: R1 := mem[R1, el]:u64
00034817: mem := mem with [R0, el]:u64 <- R1
0003481e: R0 := mem[R31 + 0x28, el]:u64
00034825: R0 := mem[R0, el]:u64
0003482b: R0 := R0 + 8
00034830: R2 := 0x10
00034835: R1 := 0
0003483a: R30 := 0x40D304
0003483c: call @memset with return %0003483e

0003483e:
00034841: R0 := 0x11
00034846: R30 := 0x40D30C
00034848: call @zmalloc with return %0003484a

0003484a:
00034850: mem := mem with [R31 + 0x50, el]:u64 <- R0
00034855: R0 := 0x11
0003485a: R30 := 0x40D318
0003485c: call @zmalloc with return %0003485e

0003485e:
00034864: mem := mem with [R31 + 0x48, el]:u64 <- R0
0003486b: R0 := mem[R31 + 0x10, el]:u64
00034871: R0 := R0 + 0x18
00034878: R1 := mem[R0, el]:u64
0003487f: R0 := mem[R31 + 0x50, el]:u64
00034887: mem := mem with [R0, el]:u64 <- R1
0003488e: R0 := mem[R31 + 0x50, el]:u64
00034894: R0 := R0 + 8
0003489b: R1 := mem[R31 + 0x58, el]:u64
000348a2: R1 := mem[R1, el]:u64
000348aa: mem := mem with [R0, el]:u64 <- R1
000348b1: R2 := mem[R31 + 0x48, el]:u64
000348b6: R1 := 0x10
000348bd: R0 := mem[R31 + 0x50, el]:u64
000348c2: R30 := 0x40D354
000348c4: call @md5_buffer with return %000348c6

000348c6:
000348cb: R0 := mem[R31 + 0x50, el]:u64
000348d0: R30 := 0x40D35C
000348d2: call @free with return %000348d4

000348d4:
000348d9: R0 := mem[R31 + 0x30, el]:u64
000348de: R1 := 0x18
000348e6: mem := mem with [R0, el]:u32 <- 31:0[R1]
000348ed: R2 := mem[R31 + 0x48, el]:u64
000348f4: R1 := mem[R31 + 0x18, el]:u64
000348fb: R0 := mem[R31 + 0x38, el]:u64
00034900: R30 := 0x40D378
00034902: call @ntlm_calc_resp with return %00034904

00034904:
00034909: R0 := mem[R31 + 0x48, el]:u64
0003490e: R30 := 0x40D380
00034910: call @free with return %00034912

00034912:
00034917: R0 := mem[R31 + 0x58, el]:u64
0003491c: R30 := 0x40D388
0003491e: call @free with return %00034920

00034920:
00034927: R29 := mem[R31, el]:u64
0003492c: R30 := mem[R31 + 8, el]:u64
00034930: R31 := R31 + 0x60
00034935: call R30 with noreturn

00045feb: sub ntlm_calc_resp(ntlm_calc_resp_result)
0004636d: ntlm_calc_resp_result :: out u32 = low:32[R0]

00034137:
0003413b: #378 := R31 - 0x130
00034141: mem := mem with [#378, el]:u64 <- R29
00034147: mem := mem with [#378 + 8, el]:u64 <- R30
0003414b: R31 := #378
00034151: R29 := R31
00034159: mem := mem with [R31 + 0x28, el]:u64 <- R0
00034161: mem := mem with [R31 + 0x20, el]:u64 <- R1
00034169: mem := mem with [R31 + 0x18, el]:u64 <- R2
0003416e: R0 := 0x19
00034173: R30 := 0x40CEEC
00034175: call @zmalloc with return %00034177

00034177:
0003417b: R1 := R0
00034182: R0 := mem[R31 + 0x28, el]:u64
0003418a: mem := mem with [R0, el]:u64 <- R1
00034190: R0 := R31 + 0x30
00034196: R1 := R0
0003419d: R0 := mem[R31 + 0x20, el]:u64
000341a2: R30 := 0x40CF08
000341a4: call @ntlm_set_key with return %000341a6

000341a6:
000341ab: R0 := mem[R31 + 0x28, el]:u64
000341b2: R1 := mem[R0, el]:u64
000341b8: R0 := R31 + 0x30
000341bd: R3 := 0
000341c3: R2 := R1
000341ca: R1 := mem[R31 + 0x18, el]:u64
000341cf: R30 := 0x40CF24
000341d1: call @gl_des_ecb_crypt with return %000341d3

000341d3:
000341d8: R0 := mem[R31 + 0x20, el]:u64
000341de: R0 := R0 + 7
000341e4: R1 := R31 + 0x30
000341e9: R30 := 0x40CF34
000341eb: call @ntlm_set_key with return %000341ed

000341ed:
000341f2: R0 := mem[R31 + 0x28, el]:u64
000341f9: R0 := mem[R0, el]:u64
000341ff: R1 := R0 + 8
00034205: R0 := R31 + 0x30
0003420a: R3 := 0
00034210: R2 := R1
00034217: R1 := mem[R31 + 0x18, el]:u64
0003421c: R30 := 0x40CF54
0003421e: call @gl_des_ecb_crypt with return %00034220

00034220:
00034225: R0 := mem[R31 + 0x20, el]:u64
0003422b: R0 := R0 + 0xE
00034231: R1 := R31 + 0x30
00034236: R30 := 0x40CF64
00034238: call @ntlm_set_key with return %0003423a

0003423a:
0003423f: R0 := mem[R31 + 0x28, el]:u64
00034246: R0 := mem[R0, el]:u64
0003424c: R1 := R0 + 0x10
00034252: R0 := R31 + 0x30
00034257: R3 := 0
0003425d: R2 := R1
00034264: R1 := mem[R31 + 0x18, el]:u64
00034269: R30 := 0x40CF84
0003426b: call @gl_des_ecb_crypt with return %0003426d

0003426d:
00034270: R0 := 0x18
00034277: R29 := mem[R31, el]:u64
0003427c: R30 := mem[R31 + 8, el]:u64
00034280: R31 := R31 + 0x130
00034285: call R30 with noreturn

00045fec: sub ntlm_hash_lm_password(ntlm_hash_lm_password_result)
0004636e: ntlm_hash_lm_password_result :: out u32 = low:32[R0]

00033d58:
00033d5f: #375 := R31 - 0x140
00033d65: mem := mem with [#375, el]:u64 <- R29
00033d6b: mem := mem with [#375 + 8, el]:u64 <- R30
00033d6f: R31 := #375
00033d75: R29 := R31
00033d7d: mem := mem with [R31 + 0x18, el]:u64 <- R0
00033d82: R0 := 0x474B
00033d89: R0 := 63:32[R0].0x2153.15:0[R0]
00033d90: R0 := 63:48[R0].0x2340.31:0[R0]
00033d96: R0 := 0x2524.47:0[R0]
00033d9e: mem := mem with [R31 + 0x128, el]:u64 <- R0
00033da3: R0 := 0x16
00033da8: R30 := 0x40D3BC
00033daa: call @zmalloc with return %00033dac

00033dac:
00033db2: mem := mem with [R31 + 0x138, el]:u64 <- R0
00033db7: R0 := 0xF
00033dbc: R30 := 0x40D3C8
00033dbe: call @zmalloc with return %00033dc0

00033dc0:
00033dc6: mem := mem with [R31 + 0x130, el]:u64 <- R0
00033dcd: R0 := mem[R31 + 0x18, el]:u64
00033dd2: R30 := 0x40D3D4
00033dd4: call @strlen with return %00033dd6

00033dd6:
00033dda: #376 := R0 - 0xE
00033ddf: VF := extend:128[#376] <> extend:128[R0] - 0xE
00033de4: CF := pad:128[#376] <> pad:128[R0] + 0xFFFFFFFFFFFFFFF2
00033de8: ZF := #376 = 0
00033dec: NF := 63:63[#376]
00033df3: when CF & ~ZF goto %00033df1
00045fed: goto %00034cb1

00033df1:
00033df9: R0 := 0xE
00045fee: goto %00033dfb

00034cb1:
00034cb6: R0 := mem[R31 + 0x18, el]:u64
00034cbb: R30 := 0x40D3E4
00034cbd: call @strlen with return %00034cbf

00034cbf:
00034cc1: goto %00033dfb

00033dfb:
00033dff: R2 := R0
00033e06: R1 := mem[R31 + 0x18, el]:u64
00033e0d: R0 := mem[R31 + 0x130, el]:u64
00033e12: R30 := 0x40D3FC
00033e15: call @strncpy with return %00033e17

00033e17:
00033e1a: R30 := 0x40D400
00033e1c: call @uppercase with return %00033e1e

00033e1e:
00033e22: R0 := R31 + 0x28
00033e28: R1 := R0
00033e2f: R0 := mem[R31 + 0x130, el]:u64
00033e34: R30 := 0x40D410
00033e37: call @ntlm_set_key with return %00034985

00034985:
00034989: R1 := R31 + 0x128
0003498f: R0 := R31 + 0x28
00034994: R3 := 0
0003499b: R2 := mem[R31 + 0x138, el]:u64
000349a0: R30 := 0x40D424
000349a2: call @gl_des_ecb_crypt with return %000349a4

000349a4:
000349a9: R0 := mem[R31 + 0x130, el]:u64
000349af: R0 := R0 + 7
000349b5: R1 := R31 + 0x28
000349ba: R30 := 0x40D434
000349bc: call @ntlm_set_key with return %000349be

000349be:
000349c3: R0 := mem[R31 + 0x138, el]:u64
000349c9: R2 := R0 + 8
000349cf: R1 := R31 + 0x128
000349d5: R0 := R31 + 0x28
000349da: R3 := 0
000349df: R30 := 0x40D44C
000349e1: call @gl_des_ecb_crypt with return %000349e3

000349e3:
000349e8: R0 := mem[R31 + 0x138, el]:u64
000349ee: R0 := R0 + 0x10
000349f3: R2 := 5
000349f8: R1 := 0
000349fd: R30 := 0x40D460
000349ff: call @memset with return %00034a01

00034a01:
00034a04: R2 := 0xE
00034a09: R1 := 0
00034a10: R0 := mem[R31 + 0x130, el]:u64
00034a15: R30 := 0x40D470
00034a17: call @memset with return %00034a19

00034a19:
00034a1e: R0 := mem[R31 + 0x130, el]:u64
00034a23: R30 := 0x40D478
00034a25: call @free with return %00034a27

00034a27:
00034a2c: R0 := mem[R31 + 0x138, el]:u64
00034a33: R29 := mem[R31, el]:u64
00034a38: R30 := mem[R31 + 8, el]:u64
00034a3c: R31 := R31 + 0x140
00034a41: call R30 with noreturn

00045fef: sub ntlm_hash_nt_password(ntlm_hash_nt_password_result)
0004636f: ntlm_hash_nt_password_result :: out u32 = low:32[R0]

00034a43:
00034a47: #381 := R31 - 0x40
00034a4d: mem := mem with [#381, el]:u64 <- R29
00034a53: mem := mem with [#381 + 8, el]:u64 <- R30
00034a57: R31 := #381
00034a5d: R29 := R31
00034a65: mem := mem with [R31 + 0x18, el]:u64 <- R0
00034a6a: R0 := 0x16
00034a6f: R30 := 0x40D498
00034a71: call @zmalloc with return %00034a73

00034a73:
00034a79: mem := mem with [R31 + 0x38, el]:u64 <- R0
00034a7f: R0 := R31 + 0x28
00034a86: R1 := mem[R31 + 0x18, el]:u64
00034a8b: R30 := 0x40D4A8
00034a8d: call @unicode with return %00034a8f

00034a8f:
00034a95: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
00034a9c: R0 := mem[R31 + 0x28, el]:u64
00034aa3: R1 := extend:64[mem[R31 + 0x34, el]:u32]
00034aaa: R2 := mem[R31 + 0x38, el]:u64
00034aaf: R30 := 0x40D4BC
00034ab1: call @md4_buffer with return %00034ab3

00034ab3:
00034ab8: R0 := mem[R31 + 0x38, el]:u64
00034abe: R0 := R0 + 0x10
00034ac3: R2 := 5
00034ac8: R1 := 0
00034acd: R30 := 0x40D4D0
00034acf: call @memset with return %00034ad1

00034ad1:
00034ad6: R0 := mem[R31 + 0x28, el]:u64
00034add: R1 := extend:64[mem[R31 + 0x34, el]:u32]
00034ae3: R2 := R1
00034ae8: R1 := 0
00034aed: R30 := 0x40D4E4
00034aef: call @memset with return %00034af1

00034af1:
00034af6: R0 := mem[R31 + 0x28, el]:u64
00034afb: R30 := 0x40D4EC
00034afd: call @free with return %00034aff

00034aff:
00034b04: R0 := mem[R31 + 0x38, el]:u64
00034b0b: R29 := mem[R31, el]:u64
00034b10: R30 := mem[R31 + 8, el]:u64
00034b14: R31 := R31 + 0x40
00034b19: call R30 with noreturn

00045ff0: sub ntlm_request(ntlm_request_result)
00046370: ntlm_request_result :: out u32 = low:32[R0]

0002602b:
00026032: #176 := R31 - 0x40
00026038: mem := mem with [#176, el]:u64 <- R29
0002603e: mem := mem with [#176 + 8, el]:u64 <- R30
00026042: R31 := #176
00026048: R29 := R31
00026050: mem := mem with [R31 + 0x18, el]:u64 <- R0
00026058: mem := mem with [R31 + 0x10, el]:u64 <- R1
0002605d: R0 := 0xB206
00026065: mem := mem with [R31 + 0x3C, el]:u32 <- 31:0[R0]
0002606c: R0 := mem[R31 + 0x18, el]:u64
00026073: mem := mem with [R0, el]:u64 <- 0
0002607a: R0 := mem[R31 + 0x10, el]:u64
00026080: R0 := R0 + 0x32
00026085: R30 := 0x40D600
00026087: call @strlen with return %00026089

00026089:
0002608f: mem := mem with [R31 + 0x38, el]:u32 <- 31:0[R0]
00026096: R0 := mem[R31 + 0x10, el]:u64
0002609c: R0 := R0 + 0x64
000260a1: R30 := 0x40D610
000260a3: call @strlen with return %000260a5

000260a5:
000260ab: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
000260b2: R0 := mem[R31 + 0x10, el]:u64
000260b9: R0 := pad:64[mem[R0 + 0x138, el]:u32]
000260be: VF := 0
000260c1: CF := 1
000260c5: ZF := 31:0[R0] = 0
000260c9: NF := 31:31[R0]
000260cf: when ZF <> 1 goto %000260cd
00045ff1: goto %00037bee

000260cd:
000260d7: R0 := mem[R31 + 0x10, el]:u64
000260de: R0 := pad:64[mem[R0 + 0x138, el]:u32]
000260e6: mem := mem with [R31 + 0x3C, el]:u32 <- 31:0[R0]
00045ff2: goto %000260e8

00037bee:
00037bf3: R0 := mem[R31 + 0x10, el]:u64
00037bfa: R0 := pad:64[mem[R0 + 0x12C, el]:u32]
00037bff: VF := 0
00037c02: CF := 1
00037c06: ZF := 31:0[R0] = 0
00037c0a: NF := 31:31[R0]
00037c10: when ZF goto %00037c0e
00045ff3: goto %00037d70

00037c0e:
00037c18: R0 := mem[R31 + 0x10, el]:u64
00037c1f: R0 := pad:64[mem[R0 + 0x130, el]:u32]
00037c25: #420 := 31:0[R0] - 2
00037c2a: VF := extend:64[#420] <> extend:64[31:0[R0]] - 2
00037c2f: CF := pad:64[#420] <> pad:64[31:0[R0]] + 0xFFFFFFFE
00037c33: ZF := #420 = 0
00037c37: NF := 31:31[#420]
00037c3d: when ZF <> 1 goto %00037c3b
00045ff4: goto %00037d59

00037c3b:
00037c45: R0 := mem[R31 + 0x10, el]:u64
00037c4c: R0 := pad:64[mem[R0 + 0x130, el]:u32]
00037c51: VF := 0
00037c54: CF := 1
00037c58: ZF := 31:0[R0] = 0
00037c5c: NF := 31:31[R0]
00037c62: when ZF goto %00037c60
00045ff5: goto %00037d23

00037d23:
00037d28: R0 := mem[R31 + 0x10, el]:u64
00037d2f: R0 := pad:64[mem[R0 + 0x134, el]:u32]
00037d34: VF := 0
00037d37: CF := 1
00037d3b: ZF := 31:0[R0] = 0
00037d3f: NF := 31:31[R0]
00037d44: when ZF goto %00037c60
00045ff6: goto %00037d48

00037c60:
00037c6a: R0 := mem[R31 + 0x10, el]:u64
00037c71: R0 := pad:64[mem[R0 + 0x130, el]:u32]
00037c76: VF := 0
00037c79: CF := 1
00037c7d: ZF := 31:0[R0] = 0
00037c81: NF := 31:31[R0]
00037c87: when ZF goto %00037c85
00045ff7: goto %00037d12

00037c85:
00037c8f: R0 := mem[R31 + 0x10, el]:u64
00037c96: R0 := pad:64[mem[R0 + 0x134, el]:u32]
00037c9b: VF := 0
00037c9e: CF := 1
00037ca2: ZF := 31:0[R0] = 0
00037ca6: NF := 31:31[R0]
00037cac: when ZF goto %00037caa
00045ff8: goto %00037d01

00037caa:
00037cb2: R0 := 0x430000
00037cb8: R0 := R0 + 0x390
00037cbf: R0 := pad:64[mem[R0, el]:u32]
00037cc4: VF := 0
00037cc7: CF := 1
00037ccb: ZF := 31:0[R0] = 0
00037ccf: NF := 31:31[R0]
00037cd5: when ZF goto %00037cd3
00045ff9: goto %00037ce1

00037ce1:
00037ce4: R0 := 0x41B000
00037cea: R0 := R0 + 0x960
00037cef: R30 := 0x40D6E8
00037cf1: call @puts with return %00037cf3

00037cf3:
00037cf8: R0 := mem[R31 + 0x10, el]:u64
00037cfd: R30 := 0x40D6F0
00037cff: call @dump_auth with return %00037cd3

00037cd3:
00037cdb: R0 := 0
00037cdf: goto %0002632e

00037d01:
00037d04: R0 := 0xB206
00037d0c: mem := mem with [R31 + 0x3C, el]:u32 <- 31:0[R0]
00037d10: goto %000260e8

00037d12:
00037d15: R0 := 0xB205
00037d1d: mem := mem with [R31 + 0x3C, el]:u32 <- 31:0[R0]
00037d21: goto %000260e8

00037d48:
00037d4b: R0 := 0xB207
00037d53: mem := mem with [R31 + 0x3C, el]:u32 <- 31:0[R0]
00037d57: goto %000260e8

00037d59:
00037d5c: R0 := 0xB207
00037d62: R0 := pad:64[0xA208.15:0[R0]]
00037d6a: mem := mem with [R31 + 0x3C, el]:u32 <- 31:0[R0]
00037d6e: goto %000260e8

00037d70:
00037d73: R0 := 0xB205
00037d79: R0 := pad:64[0xA208.15:0[R0]]
00037d81: mem := mem with [R31 + 0x3C, el]:u32 <- 31:0[R0]
00037d85: goto %000260e8

000260e8:
000260eb: R0 := 0x430000
000260f1: R0 := R0 + 0x390
000260f8: R0 := pad:64[mem[R0, el]:u32]
000260fd: VF := 0
00026100: CF := 1
00026104: ZF := 31:0[R0] = 0
00026108: NF := 31:31[R0]
0002610e: when ZF goto %0002610c
00045ffa: goto %00037b73

00037b73:
00037b76: R0 := 0x41B000
00037b7c: R0 := R0 + 0x988
00037b81: R30 := 0x40D724
00037b83: call @puts with return %00037b85

00037b85:
00037b8a: R0 := mem[R31 + 0x10, el]:u64
00037b90: R0 := R0 + 0x32
00037b96: R1 := R0
00037b9b: R0 := 0x41B000
00037ba1: R0 := R0 + 0x998
00037ba6: R30 := 0x40D73C
00037ba8: call @printf with return %00037baa

00037baa:
00037baf: R0 := mem[R31 + 0x10, el]:u64
00037bb5: R0 := R0 + 0x64
00037bbb: R1 := R0
00037bc0: R0 := 0x41B000
00037bc6: R0 := R0 + 0x9A8
00037bcb: R30 := 0x40D754
00037bcd: call @printf with return %00037bcf

00037bcf:
00037bd4: R0 := pad:64[mem[R31 + 0x3C, el]:u32]
00037bda: R1 := pad:64[31:0[R0]]
00037bdf: R0 := 0x41B000
00037be5: R0 := R0 + 0x9B8
00037bea: R30 := 0x40D768
00037bec: call @printf with return %0002610c

0002610c:
00026114: R0 := 0x400
00026119: R30 := 0x40D770
0002611b: call @zmalloc with return %0002611d

0002611d:
00026123: mem := mem with [R31 + 0x28, el]:u64 <- R0
00026128: R2 := 8
0002612d: R0 := 0x41B000
00026133: R1 := R0 + 0x9D0
0002613a: R0 := mem[R31 + 0x28, el]:u64
0002613f: R30 := 0x40D788
00026141: call @memcpy with return %00026143

00026143:
00026148: R0 := mem[R31 + 0x28, el]:u64
0002614e: R0 := R0 + 8
00026153: R1 := 1
0002615b: mem := mem with [R0, el]:u32 <- 31:0[R1]
00026162: R0 := mem[R31 + 0x28, el]:u64
00026168: R0 := R0 + 0xC
0002616f: R1 := pad:64[mem[R31 + 0x3C, el]:u32]
00026177: mem := mem with [R0, el]:u32 <- 31:0[R1]
0002617e: R0 := mem[R31 + 0x28, el]:u64
00026184: R0 := R0 + 0x10
0002618b: R1 := pad:64[mem[R31 + 0x38, el]:u32]
00026191: R1 := pad:64[15:0[R1]]
00026199: mem := mem with [R0, el]:u16 <- 15:0[R1]
000261a0: R0 := mem[R31 + 0x28, el]:u64
000261a6: R0 := R0 + 0x12
000261ad: R1 := pad:64[mem[R31 + 0x38, el]:u32]
000261b3: R1 := pad:64[15:0[R1]]
000261bb: mem := mem with [R0, el]:u16 <- 15:0[R1]
000261c2: R0 := pad:64[mem[R31 + 0x34, el]:u32]
000261c8: R1 := pad:64[31:0[R0] + 0x20]
000261cf: R0 := mem[R31 + 0x28, el]:u64
000261d5: R0 := R0 + 0x14
000261dd: mem := mem with [R0, el]:u32 <- 31:0[R1]
000261e4: R0 := mem[R31 + 0x28, el]:u64
000261ea: R0 := R0 + 0x18
000261f1: R1 := pad:64[mem[R31 + 0x34, el]:u32]
000261f7: R1 := pad:64[15:0[R1]]
000261ff: mem := mem with [R0, el]:u16 <- 15:0[R1]
00026206: R0 := mem[R31 + 0x28, el]:u64
0002620c: R0 := R0 + 0x1A
00026213: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00026219: R1 := pad:64[15:0[R1]]
00026221: mem := mem with [R0, el]:u16 <- 15:0[R1]
00026228: R0 := mem[R31 + 0x28, el]:u64
0002622e: R0 := R0 + 0x1C
00026233: R1 := 0x20
0002623b: mem := mem with [R0, el]:u32 <- 31:0[R1]
00026242: R0 := mem[R31 + 0x10, el]:u64
00026248: R0 := R0 + 0x64
0002624d: R30 := 0x40D828
0002624f: call @strdup with return %00026251

00026251:
00026254: R30 := 0x40D82C
00026256: call @uppercase with return %00026258

00026258:
0002625e: mem := mem with [R31 + 0x20, el]:u64 <- R0
00026265: R0 := mem[R31 + 0x28, el]:u64
0002626b: R0 := R0 + 0x20
00026272: R1 := extend:64[mem[R31 + 0x34, el]:u32]
00026278: R2 := R1
0002627f: R1 := mem[R31 + 0x20, el]:u64
00026284: R30 := 0x40D848
00026286: call @memcpy with return %00026288

00026288:
0002628d: R0 := mem[R31 + 0x20, el]:u64
00026292: R30 := 0x40D850
00026294: call @free with return %00026296

00026296:
0002629b: R0 := mem[R31 + 0x10, el]:u64
000262a1: R0 := R0 + 0x32
000262a6: R30 := 0x40D85C
000262a8: call @strdup with return %000262aa

000262aa:
000262ad: R30 := 0x40D860
000262af: call @uppercase with return %000262b1

000262b1:
000262b7: mem := mem with [R31 + 0x20, el]:u64 <- R0
000262be: R0 := extend:64[mem[R31 + 0x34, el]:u32]
000262c4: R0 := R0 + 0x20
000262cb: R1 := mem[R31 + 0x28, el]:u64
000262d2: R0 := R1 + R0
000262d9: R1 := extend:64[mem[R31 + 0x38, el]:u32]
000262df: R2 := R1
000262e6: R1 := mem[R31 + 0x20, el]:u64
000262eb: R30 := 0x40D884
000262ed: call @memcpy with return %000262ef

000262ef:
000262f4: R0 := mem[R31 + 0x20, el]:u64
000262f9: R30 := 0x40D88C
000262fb: call @free with return %000262fd

000262fd:
00026302: R0 := mem[R31 + 0x18, el]:u64
00026309: R1 := mem[R31 + 0x28, el]:u64
00026311: mem := mem with [R0, el]:u64 <- R1
00026318: R0 := pad:64[mem[R31 + 0x38, el]:u32]
0002631e: R1 := pad:64[31:0[R0] + 0x20]
00026325: R0 := pad:64[mem[R31 + 0x34, el]:u32]
0002632c: R0 := pad:64[31:0[R1] + 31:0[R0]]
00045ffb: goto %0002632e

0002632e:
00026333: R29 := mem[R31, el]:u64
00026338: R30 := mem[R31 + 8, el]:u64
0002633c: R31 := R31 + 0x40
00026341: call R30 with noreturn

00045ffc: sub ntlm_response(ntlm_response_result)
00046371: ntlm_response_result :: out u32 = low:32[R0]

00026479:
0002647d: #180 := R31 - 0x90
00026483: mem := mem with [#180, el]:u64 <- R29
00026489: mem := mem with [#180 + 8, el]:u64 <- R30
0002648d: R31 := #180
00026493: R29 := R31
0002649b: mem := mem with [R31 + 0x28, el]:u64 <- R0
000264a3: mem := mem with [R31 + 0x20, el]:u64 <- R1
000264ab: mem := mem with [R31 + 0x1C, el]:u32 <- 31:0[R2]
000264b3: mem := mem with [R31 + 0x10, el]:u64 <- R3
000264b8: R0 := 0xFFFFFFFF
000264c0: mem := mem with [R31 + 0x80, el]:u16 <- 15:0[R0]
000264c7: mem := mem with [R31 + 0x7E, el]:u16 <- 0
000264ce: mem := mem with [R31 + 0x7C, el]:u16 <- 0
000264d5: mem := mem with [R31 + 0x40, el]:u64 <- 0
000264dc: mem := mem with [R31 + 0x38, el]:u64 <- 0
000264e3: mem := mem with [R31 + 0x34, el]:u32 <- 0
000264ea: mem := mem with [R31 + 0x30, el]:u32 <- 0
000264ef: R0 := 0x430000
000264f5: R0 := R0 + 0x390
000264fc: R0 := pad:64[mem[R0, el]:u32]
00026501: VF := 0
00026504: CF := 1
00026508: ZF := 31:0[R0] = 0
0002650c: NF := 31:31[R0]
00026512: when ZF goto %00026510
00045ffd: goto %00037ae1

00037ae1:
00037ae4: R0 := 0x41B000
00037aea: R0 := R0 + 0x9E0
00037aef: R30 := 0x40D9A4
00037af1: call @puts with return %00037af3

00037af3:
00037af8: R0 := mem[R31 + 0x20, el]:u64
00037afe: R0 := R0 + 0x18
00037b03: R2 := 7
00037b08: R1 := 8
00037b0d: R30 := 0x40D9B8
00037b0f: call @printmem with return %00037b11

00037b11:
00037b17: mem := mem with [R31 + 0x70, el]:u64 <- R0
00037b1e: R2 := pad:64[mem[R31 + 0x1C, el]:u32]
00037b25: R1 := mem[R31 + 0x70, el]:u64
00037b2a: R0 := 0x41B000
00037b30: R0 := R0 + 0x9F0
00037b35: R30 := 0x40D9D0
00037b37: call @printf with return %00037b39

00037b39:
00037b3e: R0 := mem[R31 + 0x70, el]:u64
00037b43: R30 := 0x40D9D8
00037b45: call @free with return %00037b47

00037b47:
00037b4c: R0 := mem[R31 + 0x20, el]:u64
00037b52: R0 := R0 + 0x14
00037b59: R0 := pad:64[mem[R0, el]:u32]
00037b5f: R1 := pad:64[31:0[R0]]
00037b64: R0 := 0x41B000
00037b6a: R0 := R0 + 0x9B8
00037b6f: R30 := 0x40D9F4
00037b71: call @printf with return %00026510

00026510:
0002651a: R0 := pad:64[mem[R31 + 0x1C, el]:u32]
00026520: #181 := 31:0[R0] - 0x27
00026525: VF := extend:64[#181] <> extend:64[31:0[R0]] - 0x27
0002652a: CF := pad:64[#181] <> pad:64[31:0[R0]] + 0xFFFFFFD9
0002652e: ZF := #181 = 0
00026532: NF := 31:31[#181]
0002653a: when ~(NF = VF & ~ZF) goto %00026538
00045ffe: goto %000376ae

000376ae:
000376b3: R0 := mem[R31 + 0x20, el]:u64
000376ba: R0 := pad:64[mem[R0 + 0x2C, el]:u16]
000376c2: mem := mem with [R31 + 0x82, el]:u16 <- 15:0[R0]
000376c9: R0 := pad:64[mem[R31 + 0x82, el]:u16]
000376d1: mem := mem with [R31 + 0x7E, el]:u16 <- 15:0[R0]
000376d6: goto %000376d4

000376d4:
000376dc: R0 := pad:64[mem[R31 + 0x82, el]:u16]
000376e2: R0 := pad:64[31:0[R0] + 3]
000376e9: R1 := pad:64[mem[R31 + 0x1C, el]:u32]
000376ef: #408 := ~31:0[R0]
000376f4: #409 := 31:0[R1] + ~31:0[R0]
000376fa: VF := extend:64[#409 + 1] <> extend:64[31:0[R1]] + extend:64[#408]
          + 1
00037700: CF := pad:64[#409 + 1] <> pad:64[31:0[R1]] + pad:64[#408] + 1
00037704: ZF := #409 + 1 = 0
00037708: NF := 31:31[#409 + 1]
00037710: when ~(NF = VF & ~ZF) goto %0003770e
00045fff: goto %000377c6

000377c6:
000377cb: R0 := pad:64[mem[R31 + 0x82, el]:u16]
000377d2: R1 := mem[R31 + 0x20, el]:u64
000377d9: R0 := R1 + R0
000377e0: R0 := pad:64[mem[R0, el]:u16]
000377e8: mem := mem with [R31 + 0x80, el]:u16 <- 15:0[R0]
000377ef: R0 := pad:64[mem[R31 + 0x80, el]:u16]
000377f4: VF := 0
000377f7: CF := 1
000377fb: ZF := 31:0[R0] = 0
000377ff: NF := 31:31[R0]
00037805: when ZF <> 1 goto %00037803
00046000: goto %00037add

00037add:
00037adf: goto %0003770e

00037803:
0003780d: R0 := pad:64[mem[R31 + 0x82, el]:u16]
00037813: R0 := R0 + 2
0003781a: R1 := mem[R31 + 0x20, el]:u64
00037821: R0 := R1 + R0
00037828: R0 := pad:64[mem[R0, el]:u16]
00037830: mem := mem with [R31 + 0x6E, el]:u16 <- 15:0[R0]
00037837: R0 := pad:64[mem[R31 + 0x82, el]:u16]
0003783d: R1 := pad:64[31:0[R0] + 4]
00037844: R0 := pad:64[mem[R31 + 0x6E, el]:u16]
0003784b: R0 := pad:64[31:0[R1] + 31:0[R0]]
00037852: R1 := pad:64[mem[R31 + 0x1C, el]:u32]
00037858: #410 := ~31:0[R0]
0003785d: #411 := 31:0[R1] + ~31:0[R0]
00037863: VF := extend:64[#411 + 1] <> extend:64[31:0[R1]] + extend:64[#410]
          + 1
00037869: CF := pad:64[#411 + 1] <> pad:64[31:0[R1]] + pad:64[#410] + 1
0003786d: ZF := #411 + 1 = 0
00037871: NF := 31:31[#411 + 1]
00037878: when NF <> VF goto %00037876
00046001: goto %0003787d

00037876:
00046002: goto %0003770e

0003770e:
00037718: R0 := pad:64[mem[R31 + 0x7C, el]:u16]
0003771d: VF := 0
00037720: CF := 1
00037724: ZF := 31:0[R0] = 0
00037728: NF := 31:31[R0]
0003772e: when ZF goto %0003772c
00046003: goto %00037793

00037793:
00037798: R0 := pad:64[mem[R31 + 0x80, el]:u16]
0003779d: VF := 0
000377a0: CF := 1
000377a4: ZF := 31:0[R0] = 0
000377a8: NF := 31:31[R0]
000377ad: when ZF <> 1 goto %0003772c
00046004: goto %000377b1

000377b1:
000377b6: R0 := pad:64[mem[R31 + 0x7C, el]:u16]
000377bc: R0 := pad:64[31:0[R0] + 4]
000377c4: mem := mem with [R31 + 0x7C, el]:u16 <- 15:0[R0]
00046005: goto %0003772c

0003772c:
00037734: R0 := 0x430000
0003773a: R0 := R0 + 0x390
00037741: R0 := pad:64[mem[R0, el]:u32]
00037746: VF := 0
00037749: CF := 1
0003774d: ZF := 31:0[R0] = 0
00037751: NF := 31:31[R0]
00037756: when ZF goto %00026538
00046006: goto %0003775a

0003775a:
0003775f: R0 := pad:64[mem[R31 + 0x7E, el]:u16]
00037766: R1 := pad:64[mem[R31 + 0x7C, el]:u16]
0003776d: R2 := pad:64[mem[R31 + 0x80, el]:u16]
00037773: R3 := pad:64[31:0[R2]]
00037779: R2 := pad:64[31:0[R1]]
0003777f: R1 := pad:64[31:0[R0]]
00037784: R0 := 0x41B000
0003778a: R0 := R0 + 0xA70
0003778f: R30 := 0x40DC04
00037791: call @printf with return %00026538

00026538:
00026542: R0 := mem[R31 + 0x10, el]:u64
00026549: R0 := pad:64[mem[R0 + 0x12C, el]:u32]
0002654e: VF := 0
00026551: CF := 1
00026555: ZF := 31:0[R0] = 0
00026559: NF := 31:31[R0]
0002655f: when ZF goto %0002655d
00046007: goto %00037661

00037661:
00037666: R0 := mem[R31 + 0x10, el]:u64
0003766c: R4 := R0 + 0xFA
00037673: R5 := pad:64[mem[R31 + 0x7E, el]:u16]
0003767a: R6 := pad:64[mem[R31 + 0x7C, el]:u16]
00037680: R3 := R31 + 0x34
00037686: R2 := R31 + 0x40
0003768c: R1 := R31 + 0x30
00037692: R0 := R31 + 0x38
00037698: R7 := pad:64[31:0[R6]]
0003769e: R6 := pad:64[31:0[R5]]
000376a5: R5 := mem[R31 + 0x20, el]:u64
000376aa: R30 := 0x40DC44
000376ac: call @ntlm2_calc_resp with return %0002655d

0002655d:
00026567: R0 := mem[R31 + 0x10, el]:u64
0002656e: R0 := pad:64[mem[R0 + 0x130, el]:u32]
00026574: #182 := 31:0[R0] - 2
00026579: VF := extend:64[#182] <> extend:64[31:0[R0]] - 2
0002657e: CF := pad:64[#182] <> pad:64[31:0[R0]] + 0xFFFFFFFE
00026582: ZF := #182 = 0
00026586: NF := 31:31[#182]
0002658c: when ZF <> 1 goto %0002658a
00046008: goto %0003762e

0003762e:
00037633: R0 := mem[R31 + 0x10, el]:u64
00037639: R4 := R0 + 0xC8
0003763f: R3 := R31 + 0x34
00037645: R2 := R31 + 0x40
0003764b: R1 := R31 + 0x30
00037651: R0 := R31 + 0x38
00037658: R5 := mem[R31 + 0x20, el]:u64
0003765d: R30 := 0x40DC74
0003765f: call @ntlm2sr_calc_rest with return %0002658a

0002658a:
00026594: R0 := mem[R31 + 0x10, el]:u64
0002659b: R0 := pad:64[mem[R0 + 0x130, el]:u32]
000265a1: #183 := 31:0[R0] - 1
000265a6: VF := extend:64[#183] <> extend:64[31:0[R0]] - 1
000265ab: CF := pad:64[#183] <> pad:64[31:0[R0]] + 0xFFFFFFFF
000265af: ZF := #183 = 0
000265b3: NF := 31:31[#183]
000265b9: when ZF <> 1 goto %000265b7
00046009: goto %000375ff

000375ff:
00037604: R0 := mem[R31 + 0x10, el]:u64
0003760a: R1 := R0 + 0xC8
00037611: R0 := mem[R31 + 0x20, el]:u64
00037617: R2 := R0 + 0x18
0003761d: R0 := R31 + 0x38
00037622: R30 := 0x40DC9C
00037624: call @ntlm_calc_resp with return %00037626

00037626:
0003762c: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
0004600a: goto %000265b7

000265b7:
000265c1: R0 := mem[R31 + 0x10, el]:u64
000265c8: R0 := pad:64[mem[R0 + 0x134, el]:u32]
000265cd: VF := 0
000265d0: CF := 1
000265d4: ZF := 31:0[R0] = 0
000265d8: NF := 31:31[R0]
000265de: when ZF goto %000265dc
0004600b: goto %000375d0

000375d0:
000375d5: R0 := mem[R31 + 0x10, el]:u64
000375db: R1 := R0 + 0x96
000375e2: R0 := mem[R31 + 0x20, el]:u64
000375e8: R2 := R0 + 0x18
000375ee: R0 := R31 + 0x40
000375f3: R30 := 0x40DCC8
000375f5: call @ntlm_calc_resp with return %000375f7

000375f7:
000375fd: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
0004600c: goto %000265dc

000265dc:
000265e6: R0 := mem[R31 + 0x10, el]:u64
000265ed: R0 := pad:64[mem[R0 + 0x130, el]:u32]
000265f2: VF := 0
000265f5: CF := 1
000265f9: ZF := 31:0[R0] = 0
000265fd: NF := 31:31[R0]
00026603: when ZF <> 1 goto %00026601
0004600d: goto %000375ab

000375ab:
000375b0: R0 := mem[R31 + 0x10, el]:u64
000375b7: R0 := pad:64[mem[R0 + 0x12C, el]:u32]
000375bc: VF := 0
000375bf: CF := 1
000375c3: ZF := 31:0[R0] = 0
000375c7: NF := 31:31[R0]
000375cc: when ZF goto %000374fa
0004600e: goto %00026601

000374fa:
000374ff: R0 := mem[R31 + 0x10, el]:u64
00037505: R0 := R0 + 0x32
0003750a: R30 := 0x40DD64
0003750c: call @strdup with return %0003750e

0003750e:
00037511: R30 := 0x40DD68
00037513: call @uppercase with return %00037515

00037515:
0003751b: mem := mem with [R31 + 0x58, el]:u64 <- R0
00037522: R0 := mem[R31 + 0x10, el]:u64
00037527: R30 := 0x40DD74
00037529: call @strdup with return %0003752b

0003752b:
0003752e: R30 := 0x40DD78
00037530: call @uppercase with return %00037532

00037532:
00037538: mem := mem with [R31 + 0x50, el]:u64 <- R0
0003753f: R0 := mem[R31 + 0x10, el]:u64
00037545: R0 := R0 + 0x64
0003754a: R30 := 0x40DD88
0003754c: call @strdup with return %0003754e

0003754e:
00037551: R30 := 0x40DD8C
00037553: call @uppercase with return %00037555

00037555:
0003755b: mem := mem with [R31 + 0x48, el]:u64 <- R0
00037562: R0 := mem[R31 + 0x10, el]:u64
00037568: R0 := R0 + 0x32
0003756d: R30 := 0x40DD9C
0003756f: call @strlen with return %00037571

00037571:
00037577: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0003757e: R0 := mem[R31 + 0x10, el]:u64
00037583: R30 := 0x40DDA8
00037585: call @strlen with return %00037587

00037587:
0003758d: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
00037594: R0 := mem[R31 + 0x10, el]:u64
0003759a: R0 := R0 + 0x64
0003759f: R30 := 0x40DDB8
000375a1: call @strlen with return %000375a3

000375a3:
000375a9: mem := mem with [R31 + 0x84, el]:u32 <- 31:0[R0]
0004600f: goto %000266bd

00026601:
0002660b: R0 := mem[R31 + 0x10, el]:u64
00026611: R0 := R0 + 0x32
00026616: R30 := 0x40DCF8
00026618: call @strdup with return %0002661a

0002661a:
0002661d: R30 := 0x40DCFC
0002661f: call @uppercase with return %00026621

00026621:
00026627: mem := mem with [R31 + 0x70, el]:u64 <- R0
0002662d: R0 := R31 + 0x58
00026634: R1 := mem[R31 + 0x70, el]:u64
00026639: R30 := 0x40DD0C
0002663b: call @unicode with return %0002663d

0002663d:
00026643: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0002664a: R0 := mem[R31 + 0x70, el]:u64
0002664f: R30 := 0x40DD18
00026651: call @free with return %00026653

00026653:
00026658: R1 := mem[R31 + 0x10, el]:u64
0002665e: R0 := R31 + 0x50
00026663: R30 := 0x40DD24
00026665: call @unicode with return %00026667

00026667:
0002666d: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
00026674: R0 := mem[R31 + 0x10, el]:u64
0002667a: R0 := R0 + 0x64
0002667f: R30 := 0x40DD34
00026681: call @strdup with return %00026683

00026683:
00026686: R30 := 0x40DD38
00026688: call @uppercase with return %0002668a

0002668a:
00026690: mem := mem with [R31 + 0x70, el]:u64 <- R0
00026696: R0 := R31 + 0x48
0002669d: R1 := mem[R31 + 0x70, el]:u64
000266a2: R30 := 0x40DD48
000266a4: call @unicode with return %000266a6

000266a6:
000266ac: mem := mem with [R31 + 0x84, el]:u32 <- 31:0[R0]
000266b3: R0 := mem[R31 + 0x70, el]:u64
000266b8: R30 := 0x40DD54
000266ba: call @free with return %000266bc

000266bc:
000266bf: goto %000266bd

000266bd:
000266c3: R0 := 0x430000
000266c9: R0 := R0 + 0x390
000266d0: R0 := pad:64[mem[R0, el]:u32]
000266d5: VF := 0
000266d8: CF := 1
000266dc: ZF := 31:0[R0] = 0
000266e0: NF := 31:31[R0]
000266e6: when ZF goto %000266e4
00046010: goto %0003738b

0003738b:
0003738e: R0 := 0x41B000
00037394: R0 := R0 + 0xAA0
00037399: R30 := 0x40DDDC
0003739b: call @puts with return %0003739d

0003739d:
000373a2: R0 := mem[R31 + 0x10, el]:u64
000373a8: R0 := R0 + 0x64
000373ae: R1 := R0
000373b3: R0 := 0x41B000
000373b9: R0 := R0 + 0xAB0
000373be: R30 := 0x40DDF4
000373c0: call @printf with return %000373c2

000373c2:
000373c7: R0 := mem[R31 + 0x10, el]:u64
000373cd: R0 := R0 + 0x32
000373d3: R1 := R0
000373d8: R0 := 0x41B000
000373de: R0 := R0 + 0xAC8
000373e3: R30 := 0x40DE0C
000373e5: call @printf with return %000373e7

000373e7:
000373ec: R0 := mem[R31 + 0x10, el]:u64
000373f2: R1 := R0
000373f7: R0 := 0x41B000
000373fd: R0 := R0 + 0xAE0
00037402: R30 := 0x40DE20
00037404: call @printf with return %00037406

00037406:
0003740b: R0 := pad:64[mem[R31 + 0x30, el]:u32]
00037410: VF := 0
00037413: CF := 1
00037417: ZF := 31:0[R0] = 0
0003741b: NF := 31:31[R0]
00037421: when ZF goto %0003741f
00046011: goto %0003749e

0003749e:
000374a3: R0 := mem[R31 + 0x38, el]:u64
000374aa: R1 := pad:64[mem[R31 + 0x30, el]:u32]
000374b0: R1 := extend:64[31:0[R1]]
000374b5: R2 := 7
000374ba: R30 := 0x40DE40
000374bc: call @printmem with return %000374be

000374be:
000374c4: mem := mem with [R31 + 0x70, el]:u64 <- R0
000374cb: R0 := pad:64[mem[R31 + 0x30, el]:u32]
000374d1: R2 := pad:64[31:0[R0]]
000374d8: R1 := mem[R31 + 0x70, el]:u64
000374dd: R0 := 0x41B000
000374e3: R0 := R0 + 0xAF8
000374e8: R30 := 0x40DE5C
000374ea: call @printf with return %000374ec

000374ec:
000374f1: R0 := mem[R31 + 0x70, el]:u64
000374f6: R30 := 0x40DE64
000374f8: call @free with return %0003741f

0003741f:
00037429: R0 := pad:64[mem[R31 + 0x34, el]:u32]
0003742e: VF := 0
00037431: CF := 1
00037435: ZF := 31:0[R0] = 0
00037439: NF := 31:31[R0]
0003743e: when ZF goto %000266e4
00046012: goto %00037442

00037442:
00037447: R0 := mem[R31 + 0x40, el]:u64
0003744e: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00037454: R1 := extend:64[31:0[R1]]
00037459: R2 := 7
0003745e: R30 := 0x40DE84
00037460: call @printmem with return %00037462

00037462:
00037468: mem := mem with [R31 + 0x70, el]:u64 <- R0
0003746f: R0 := pad:64[mem[R31 + 0x34, el]:u32]
00037475: R2 := pad:64[31:0[R0]]
0003747c: R1 := mem[R31 + 0x70, el]:u64
00037481: R0 := 0x41B000
00037487: R0 := R0 + 0xAF8
0003748c: R30 := 0x40DEA0
0003748e: call @printf with return %00037490

00037490:
00037495: R0 := mem[R31 + 0x70, el]:u64
0003749a: R30 := 0x40DEA8
0003749c: call @free with return %000266e4

000266e4:
000266ec: R0 := 0x400
000266f1: R30 := 0x40DEB0
000266f3: call @zmalloc with return %000266f5

000266f5:
000266fb: mem := mem with [R31 + 0x60, el]:u64 <- R0
00026700: R2 := 8
00026705: R0 := 0x41B000
0002670b: R1 := R0 + 0x9D0
00026712: R0 := mem[R31 + 0x60, el]:u64
00026717: R30 := 0x40DEC8
00026719: call @memcpy with return %0002671b

0002671b:
00026720: R0 := mem[R31 + 0x60, el]:u64
00026726: R0 := R0 + 8
0002672b: R1 := 3
00026733: mem := mem with [R0, el]:u32 <- 31:0[R1]
0002673a: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00026741: R0 := mem[R31 + 0x60, el]:u64
00026747: R0 := R0 + 0xC
0002674d: R1 := pad:64[15:0[R1]]
00026755: mem := mem with [R0, el]:u16 <- 15:0[R1]
0002675c: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00026763: R0 := mem[R31 + 0x60, el]:u64
00026769: R0 := R0 + 0xE
0002676f: R1 := pad:64[15:0[R1]]
00026777: mem := mem with [R0, el]:u16 <- 15:0[R1]
0002677e: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
00026784: R1 := pad:64[31:0[R0] + 0x40]
0002678b: R0 := pad:64[mem[R31 + 0x88, el]:u32]
00026792: R1 := pad:64[31:0[R1] + 31:0[R0]]
00026799: R0 := pad:64[mem[R31 + 0x84, el]:u32]
000267a0: R1 := pad:64[31:0[R1] + 31:0[R0]]
000267a7: R0 := mem[R31 + 0x60, el]:u64
000267ad: R0 := R0 + 0x10
000267b5: mem := mem with [R0, el]:u32 <- 31:0[R1]
000267bc: R1 := pad:64[mem[R31 + 0x30, el]:u32]
000267c3: R0 := mem[R31 + 0x60, el]:u64
000267c9: R0 := R0 + 0x14
000267cf: R1 := pad:64[15:0[R1]]
000267d7: mem := mem with [R0, el]:u16 <- 15:0[R1]
000267de: R1 := pad:64[mem[R31 + 0x30, el]:u32]
000267e5: R0 := mem[R31 + 0x60, el]:u64
000267eb: R0 := R0 + 0x16
000267f1: R1 := pad:64[15:0[R1]]
000267f9: mem := mem with [R0, el]:u16 <- 15:0[R1]
00026800: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
00026806: R1 := pad:64[31:0[R0] + 0x40]
0002680d: R0 := pad:64[mem[R31 + 0x88, el]:u32]
00026814: R1 := pad:64[31:0[R1] + 31:0[R0]]
0002681b: R0 := pad:64[mem[R31 + 0x84, el]:u32]
00026822: R1 := pad:64[31:0[R1] + 31:0[R0]]
00026829: R0 := pad:64[mem[R31 + 0x34, el]:u32]
00026830: R1 := pad:64[31:0[R1] + 31:0[R0]]
00026837: R0 := mem[R31 + 0x60, el]:u64
0002683d: R0 := R0 + 0x18
00026845: mem := mem with [R0, el]:u32 <- 31:0[R1]
0002684c: R0 := mem[R31 + 0x60, el]:u64
00026852: R0 := R0 + 0x1C
00026859: R1 := pad:64[mem[R31 + 0x8C, el]:u32]
0002685f: R1 := pad:64[15:0[R1]]
00026867: mem := mem with [R0, el]:u16 <- 15:0[R1]
0002686e: R0 := mem[R31 + 0x60, el]:u64
00026874: R0 := R0 + 0x1E
0002687b: R1 := pad:64[mem[R31 + 0x8C, el]:u32]
00026881: R1 := pad:64[15:0[R1]]
00026889: mem := mem with [R0, el]:u16 <- 15:0[R1]
00026890: R0 := mem[R31 + 0x60, el]:u64
00026896: R0 := R0 + 0x20
0002689b: R1 := 0x40
000268a3: mem := mem with [R0, el]:u32 <- 31:0[R1]
000268aa: R0 := mem[R31 + 0x60, el]:u64
000268b0: R0 := R0 + 0x24
000268b7: R1 := pad:64[mem[R31 + 0x88, el]:u32]
000268bd: R1 := pad:64[15:0[R1]]
000268c5: mem := mem with [R0, el]:u16 <- 15:0[R1]
000268cc: R0 := mem[R31 + 0x60, el]:u64
000268d2: R0 := R0 + 0x26
000268d9: R1 := pad:64[mem[R31 + 0x88, el]:u32]
000268df: R1 := pad:64[15:0[R1]]
000268e7: mem := mem with [R0, el]:u16 <- 15:0[R1]
000268ee: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
000268f4: R1 := pad:64[31:0[R0] + 0x40]
000268fb: R0 := mem[R31 + 0x60, el]:u64
00026901: R0 := R0 + 0x28
00026909: mem := mem with [R0, el]:u32 <- 31:0[R1]
00026910: R0 := mem[R31 + 0x60, el]:u64
00026916: R0 := R0 + 0x2C
0002691d: R1 := pad:64[mem[R31 + 0x84, el]:u32]
00026923: R1 := pad:64[15:0[R1]]
0002692b: mem := mem with [R0, el]:u16 <- 15:0[R1]
00026932: R0 := mem[R31 + 0x60, el]:u64
00026938: R0 := R0 + 0x2E
0002693f: R1 := pad:64[mem[R31 + 0x84, el]:u32]
00026945: R1 := pad:64[15:0[R1]]
0002694d: mem := mem with [R0, el]:u16 <- 15:0[R1]
00026954: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0002695a: R1 := pad:64[31:0[R0] + 0x40]
00026961: R0 := pad:64[mem[R31 + 0x88, el]:u32]
00026968: R1 := pad:64[31:0[R1] + 31:0[R0]]
0002696f: R0 := mem[R31 + 0x60, el]:u64
00026975: R0 := R0 + 0x30
0002697d: mem := mem with [R0, el]:u32 <- 31:0[R1]
00026984: R0 := mem[R31 + 0x60, el]:u64
0002698a: R0 := R0 + 0x34
00026991: mem := mem with [R0, el]:u16 <- 0
00026998: R0 := mem[R31 + 0x60, el]:u64
0002699e: R0 := R0 + 0x36
000269a5: mem := mem with [R0, el]:u16 <- 0
000269ac: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
000269b2: R1 := pad:64[15:0[R0]]
000269b9: R0 := pad:64[mem[R31 + 0x88, el]:u32]
000269bf: R0 := pad:64[15:0[R0]]
000269c6: R0 := pad:64[31:0[R1] + 31:0[R0]]
000269cc: R1 := pad:64[15:0[R0]]
000269d3: R0 := pad:64[mem[R31 + 0x84, el]:u32]
000269d9: R0 := pad:64[15:0[R0]]
000269e0: R0 := pad:64[31:0[R1] + 31:0[R0]]
000269e6: R1 := pad:64[15:0[R0]]
000269ed: R0 := pad:64[mem[R31 + 0x34, el]:u32]
000269f3: R0 := pad:64[15:0[R0]]
000269fa: R0 := pad:64[31:0[R1] + 31:0[R0]]
00026a00: R1 := pad:64[15:0[R0]]
00026a07: R0 := pad:64[mem[R31 + 0x30, el]:u32]
00026a0d: R0 := pad:64[15:0[R0]]
00026a14: R0 := pad:64[31:0[R1] + 31:0[R0]]
00026a1a: R1 := pad:64[15:0[R0]]
00026a21: R0 := mem[R31 + 0x60, el]:u64
00026a27: R0 := R0 + 0x38
00026a2d: R1 := pad:64[31:0[R1] + 0x40]
00026a33: R1 := pad:64[15:0[R1]]
00026a3b: mem := mem with [R0, el]:u16 <- 15:0[R1]
00026a42: R0 := mem[R31 + 0x60, el]:u64
00026a48: R0 := R0 + 0x3C
00026a4f: R1 := mem[R31 + 0x20, el]:u64
00026a56: R1 := pad:64[mem[R1 + 0x14, el]:u32]
00026a5e: mem := mem with [R0, el]:u32 <- 31:0[R1]
00026a65: R0 := mem[R31 + 0x60, el]:u64
00026a6b: R0 := R0 + 0x40
00026a72: R1 := mem[R31 + 0x58, el]:u64
00026a79: R2 := extend:64[mem[R31 + 0x8C, el]:u32]
00026a7e: R30 := 0x40E0CC
00026a80: call @memcpy with return %00026a82

00026a82:
00026a87: R0 := extend:64[mem[R31 + 0x8C, el]:u32]
00026a8d: R0 := R0 + 0x40
00026a94: R1 := mem[R31 + 0x60, el]:u64
00026a9b: R0 := R1 + R0
00026aa2: R1 := mem[R31 + 0x50, el]:u64
00026aa9: R2 := extend:64[mem[R31 + 0x88, el]:u32]
00026aae: R30 := 0x40E0E8
00026ab0: call @memcpy with return %00026ab2

00026ab2:
00026ab7: R1 := extend:64[mem[R31 + 0x8C, el]:u32]
00026abe: R0 := extend:64[mem[R31 + 0x88, el]:u32]
00026ac5: R0 := R1 + R0
00026acb: R0 := R0 + 0x40
00026ad2: R1 := mem[R31 + 0x60, el]:u64
00026ad9: R0 := R1 + R0
00026ae0: R1 := mem[R31 + 0x48, el]:u64
00026ae7: R2 := extend:64[mem[R31 + 0x84, el]:u32]
00026aec: R30 := 0x40E10C
00026aee: call @memcpy with return %00026af0

00026af0:
00026af5: R0 := mem[R31 + 0x40, el]:u64
00026afa: VF := 0
00026afd: CF := 1
00026b01: ZF := R0 = 0
00026b05: NF := 63:63[R0]
00026b0b: when ZF goto %00026b09
00046013: goto %00037339

00037339:
0003733e: R1 := extend:64[mem[R31 + 0x8C, el]:u32]
00037345: R0 := extend:64[mem[R31 + 0x88, el]:u32]
0003734c: R1 := R1 + R0
00037353: R0 := extend:64[mem[R31 + 0x84, el]:u32]
0003735a: R0 := R1 + R0
00037360: R0 := R0 + 0x40
00037367: R1 := mem[R31 + 0x60, el]:u64
0003736e: R0 := R1 + R0
00037375: R1 := mem[R31 + 0x40, el]:u64
0003737c: R2 := pad:64[mem[R31 + 0x34, el]:u32]
00037382: R2 := extend:64[31:0[R2]]
00037387: R30 := 0x40E148
00037389: call @memcpy with return %00026b09

00026b09:
00026b13: R0 := mem[R31 + 0x38, el]:u64
00026b18: VF := 0
00026b1b: CF := 1
00026b1f: ZF := R0 = 0
00026b23: NF := 63:63[R0]
00026b29: when ZF goto %00026b27
00046014: goto %000372e7

000372e7:
000372ec: R1 := extend:64[mem[R31 + 0x8C, el]:u32]
000372f3: R0 := extend:64[mem[R31 + 0x88, el]:u32]
000372fa: R1 := R1 + R0
00037301: R0 := extend:64[mem[R31 + 0x84, el]:u32]
00037308: R0 := R1 + R0
0003730e: R0 := R0 + 0x58
00037315: R1 := mem[R31 + 0x60, el]:u64
0003731c: R0 := R1 + R0
00037323: R1 := mem[R31 + 0x38, el]:u64
0003732a: R2 := pad:64[mem[R31 + 0x30, el]:u32]
00037330: R2 := extend:64[31:0[R2]]
00037335: R30 := 0x40E184
00037337: call @memcpy with return %00026b27

00026b27:
00026b31: R0 := mem[R31 + 0x38, el]:u64
00026b36: VF := 0
00026b39: CF := 1
00026b3d: ZF := R0 = 0
00026b41: NF := 63:63[R0]
00026b47: when ZF goto %00026b45
00046015: goto %000372d9

000372d9:
000372de: R0 := mem[R31 + 0x38, el]:u64
000372e3: R30 := 0x40E198
000372e5: call @free with return %00026b45

00026b45:
00026b4f: R0 := mem[R31 + 0x40, el]:u64
00026b54: VF := 0
00026b57: CF := 1
00026b5b: ZF := R0 = 0
00026b5f: NF := 63:63[R0]
00026b65: when ZF goto %00026b63
00046016: goto %000372cb

000372cb:
000372d0: R0 := mem[R31 + 0x40, el]:u64
000372d5: R30 := 0x40E1AC
000372d7: call @free with return %00026b63

00026b63:
00026b6d: R0 := mem[R31 + 0x48, el]:u64
00026b72: R30 := 0x40E1B4
00026b74: call @free with return %00026b76

00026b76:
00026b7b: R0 := mem[R31 + 0x50, el]:u64
00026b80: R30 := 0x40E1BC
00026b82: call @free with return %00026b84

00026b84:
00026b89: R0 := mem[R31 + 0x58, el]:u64
00026b8e: R30 := 0x40E1C4
00026b90: call @free with return %00026b92

00026b92:
00026b97: R0 := mem[R31 + 0x28, el]:u64
00026b9e: R1 := mem[R31 + 0x60, el]:u64
00026ba6: mem := mem with [R0, el]:u64 <- R1
00026bad: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
00026bb3: R1 := pad:64[31:0[R0] + 0x40]
00026bba: R0 := pad:64[mem[R31 + 0x88, el]:u32]
00026bc1: R1 := pad:64[31:0[R1] + 31:0[R0]]
00026bc8: R0 := pad:64[mem[R31 + 0x84, el]:u32]
00026bcf: R1 := pad:64[31:0[R1] + 31:0[R0]]
00026bd6: R0 := pad:64[mem[R31 + 0x34, el]:u32]
00026bdd: R1 := pad:64[31:0[R1] + 31:0[R0]]
00026be4: R0 := pad:64[mem[R31 + 0x30, el]:u32]
00026beb: R0 := pad:64[31:0[R1] + 31:0[R0]]
00026bf2: R29 := mem[R31, el]:u64
00026bf7: R30 := mem[R31 + 8, el]:u64
00026bfb: R31 := R31 + 0x90
00026c00: call R30 with noreturn

0003787d:
00037880: R0 := 0x430000
00037886: R0 := R0 + 0x390
0003788d: R0 := pad:64[mem[R0, el]:u32]
00037892: VF := 0
00037895: CF := 1
00037899: ZF := 31:0[R0] = 0
0003789d: NF := 31:31[R0]
000378a3: when ZF goto %000378a1
00046017: goto %000378f8

000378f8:
000378fd: R0 := pad:64[mem[R31 + 0x80, el]:u16]
00037903: #412 := 31:0[R0] - 5
00037908: VF := extend:64[#412] <> extend:64[31:0[R0]] - 5
0003790d: CF := pad:64[#412] <> pad:64[31:0[R0]] + 0xFFFFFFFB
00037911: ZF := #412 = 0
00037915: NF := 31:31[#412]
0003791b: when ZF goto %00037919
00046018: goto %000379a2

00037919:
00037921: R0 := 0x41B000
00037927: R0 := R0 + 0xA50
0003792c: R30 := 0x40DAF4
0003792e: call @printf with return %00037930

00037930:
00037933: goto %00037931

000379a2:
000379a6: #413 := 31:0[R0] - 5
000379ab: VF := extend:64[#413] <> extend:64[31:0[R0]] - 5
000379b0: CF := pad:64[#413] <> pad:64[31:0[R0]] + 0xFFFFFFFB
000379b4: ZF := #413 = 0
000379b8: NF := 31:31[#413]
000379bf: when NF = VF & ~ZF goto %00037981
00046019: goto %000379c3

000379c3:
000379c7: #414 := 31:0[R0] - 4
000379cc: VF := extend:64[#414] <> extend:64[31:0[R0]] - 4
000379d1: CF := pad:64[#414] <> pad:64[31:0[R0]] + 0xFFFFFFFC
000379d5: ZF := #414 = 0
000379d9: NF := 31:31[#414]
000379df: when ZF goto %000379dd
0004601a: goto %000379f8

000379dd:
000379e5: R0 := 0x41B000
000379eb: R0 := R0 + 0xA40
000379f0: R30 := 0x40DAE4
000379f2: call @printf with return %000379f4

000379f4:
000379f6: goto %00037931

000379f8:
000379fc: #415 := 31:0[R0] - 4
00037a01: VF := extend:64[#415] <> extend:64[31:0[R0]] - 4
00037a06: CF := pad:64[#415] <> pad:64[31:0[R0]] + 0xFFFFFFFC
00037a0a: ZF := #415 = 0
00037a0e: NF := 31:31[#415]
00037a15: when NF = VF & ~ZF goto %00037981
0004601b: goto %00037a19

00037a19:
00037a1d: #416 := 31:0[R0] - 3
00037a22: VF := extend:64[#416] <> extend:64[31:0[R0]] - 3
00037a27: CF := pad:64[#416] <> pad:64[31:0[R0]] + 0xFFFFFFFD
00037a2b: ZF := #416 = 0
00037a2f: NF := 31:31[#416]
00037a35: when ZF goto %00037a33
0004601c: goto %00037a4e

00037a33:
00037a3b: R0 := 0x41B000
00037a41: R0 := R0 + 0xA30
00037a46: R30 := 0x40DAD4
00037a48: call @printf with return %00037a4a

00037a4a:
00037a4c: goto %00037931

00037a4e:
00037a52: #417 := 31:0[R0] - 3
00037a57: VF := extend:64[#417] <> extend:64[31:0[R0]] - 3
00037a5c: CF := pad:64[#417] <> pad:64[31:0[R0]] + 0xFFFFFFFD
00037a60: ZF := #417 = 0
00037a64: NF := 31:31[#417]
00037a6b: when NF = VF & ~ZF goto %00037981
0004601d: goto %00037a6f

00037a6f:
00037a73: #418 := 31:0[R0] - 1
00037a78: VF := extend:64[#418] <> extend:64[31:0[R0]] - 1
00037a7d: CF := pad:64[#418] <> pad:64[31:0[R0]] + 0xFFFFFFFF
00037a81: ZF := #418 = 0
00037a85: NF := 31:31[#418]
00037a8b: when ZF goto %00037a89
0004601e: goto %00037aba

00037a89:
00037a91: R0 := 0x41B000
00037a97: R0 := R0 + 0xA10
00037a9c: R30 := 0x40DAB4
00037a9e: call @printf with return %00037aa0

00037aa0:
00037aa2: goto %00037931

00037aba:
00037abe: #419 := 31:0[R0] - 2
00037ac3: VF := extend:64[#419] <> extend:64[31:0[R0]] - 2
00037ac8: CF := pad:64[#419] <> pad:64[31:0[R0]] + 0xFFFFFFFE
00037acc: ZF := #419 = 0
00037ad0: NF := 31:31[#419]
00037ad5: when ZF goto %00037aa4
0004601f: goto %00037ad9

00037aa4:
00037aa7: R0 := 0x41B000
00037aad: R0 := R0 + 0xA20
00037ab2: R30 := 0x40DAC4
00037ab4: call @printf with return %00037ab6

00037ab6:
00037ab8: goto %00037931

00037ad9:
00037adb: goto %00037981

00037981:
00037986: R0 := pad:64[mem[R31 + 0x80, el]:u16]
0003798c: R1 := pad:64[31:0[R0]]
00037991: R0 := 0x41B000
00037997: R0 := R0 + 0xA60
0003799c: R30 := 0x40DB0C
0003799e: call @printf with return %000379a0

000379a0:
00046020: goto %00037931

00037931:
00037939: R0 := pad:64[mem[R31 + 0x82, el]:u16]
0003793f: R0 := R0 + 4
00037946: R1 := mem[R31 + 0x20, el]:u64
0003794d: R0 := R1 + R0
00037954: R1 := pad:64[mem[R31 + 0x6E, el]:u16]
00037959: R30 := 0x40DB28
0003795b: call @printuc with return %0003795d

0003795d:
00037963: mem := mem with [R31 + 0x70, el]:u64 <- R0
0003796a: R0 := mem[R31 + 0x70, el]:u64
0003796f: R30 := 0x40DB34
00037971: call @puts with return %00037973

00037973:
00037978: R0 := mem[R31 + 0x70, el]:u64
0003797d: R30 := 0x40DB3C
0003797f: call @free with return %000378a1

000378a1:
000378ab: R0 := pad:64[mem[R31 + 0x6E, el]:u16]
000378b2: R1 := pad:64[mem[R31 + 0x82, el]:u16]
000378b9: R0 := pad:64[31:0[R0] + 31:0[R1]]
000378bf: R0 := pad:64[15:0[R0]]
000378c5: R0 := pad:64[31:0[R0] + 4]
000378cd: mem := mem with [R31 + 0x82, el]:u16 <- 15:0[R0]
000378d4: R0 := pad:64[mem[R31 + 0x6E, el]:u16]
000378db: R1 := pad:64[mem[R31 + 0x7C, el]:u16]
000378e2: R0 := pad:64[31:0[R0] + 31:0[R1]]
000378e8: R0 := pad:64[15:0[R0]]
000378ee: R0 := pad:64[31:0[R0] + 4]
000378f6: mem := mem with [R31 + 0x7C, el]:u16 <- 15:0[R0]
00046021: goto %000376d4

00046022: sub ntlm_set_key(ntlm_set_key_result)
00046372: ntlm_set_key_result :: out u32 = low:32[R0]

00033e35:
00033e3c: #377 := R31 - 0x30
00033e42: mem := mem with [#377, el]:u64 <- R29
00033e48: mem := mem with [#377 + 8, el]:u64 <- R30
00033e4c: R31 := #377
00033e52: R29 := R31
00033e5a: mem := mem with [R31 + 0x18, el]:u64 <- R0
00033e62: mem := mem with [R31 + 0x10, el]:u64 <- R1
00033e69: R0 := mem[R31 + 0x18, el]:u64
00033e70: R0 := pad:64[mem[R0]]
00033e78: mem := mem with [R31 + 0x28] <- 7:0[R0]
00033e7f: R0 := mem[R31 + 0x18, el]:u64
00033e86: R0 := pad:64[mem[R0]]
00033e8c: R0 := pad:64[extend:32[7:0[R0]]]
00033e92: R0 := pad:64[0:0[R0].0]
00033e98: R1 := pad:64[extend:32[7:0[R0]]]
00033e9f: R0 := mem[R31 + 0x18, el]:u64
00033ea5: R0 := R0 + 1
00033eac: R0 := pad:64[mem[R0]]
00033eb2: R0 := pad:64[31:1[R0]]
00033eb8: R0 := pad:64[7:0[R0]]
00033ebe: R0 := pad:64[extend:32[7:0[R0]]]
00033ec5: R0 := pad:64[31:0[R1] | 31:0[R0]]
00033ecb: R0 := pad:64[extend:32[7:0[R0]]]
00033ed1: R0 := pad:64[7:0[R0]]
00033ed9: mem := mem with [R31 + 0x29] <- 7:0[R0]
00033ee0: R0 := mem[R31 + 0x18, el]:u64
00033ee6: R0 := R0 + 1
00033eed: R0 := pad:64[mem[R0]]
00033ef3: R0 := pad:64[extend:32[7:0[R0]]]
00033ef9: R0 := pad:64[1:0[R0].0]
00033eff: R1 := pad:64[extend:32[7:0[R0]]]
00033f06: R0 := mem[R31 + 0x18, el]:u64
00033f0c: R0 := R0 + 2
00033f13: R0 := pad:64[mem[R0]]
00033f19: R0 := pad:64[31:2[R0]]
00033f1f: R0 := pad:64[7:0[R0]]
00033f25: R0 := pad:64[extend:32[7:0[R0]]]
00033f2c: R0 := pad:64[31:0[R1] | 31:0[R0]]
00033f32: R0 := pad:64[extend:32[7:0[R0]]]
00033f38: R0 := pad:64[7:0[R0]]
00033f40: mem := mem with [R31 + 0x2A] <- 7:0[R0]
00033f47: R0 := mem[R31 + 0x18, el]:u64
00033f4d: R0 := R0 + 2
00033f54: R0 := pad:64[mem[R0]]
00033f5a: R0 := pad:64[extend:32[7:0[R0]]]
00033f60: R0 := pad:64[2:0[R0].0]
00033f66: R1 := pad:64[extend:32[7:0[R0]]]
00033f6d: R0 := mem[R31 + 0x18, el]:u64
00033f73: R0 := R0 + 3
00033f7a: R0 := pad:64[mem[R0]]
00033f80: R0 := pad:64[31:3[R0]]
00033f86: R0 := pad:64[7:0[R0]]
00033f8c: R0 := pad:64[extend:32[7:0[R0]]]
00033f93: R0 := pad:64[31:0[R1] | 31:0[R0]]
00033f99: R0 := pad:64[extend:32[7:0[R0]]]
00033f9f: R0 := pad:64[7:0[R0]]
00033fa7: mem := mem with [R31 + 0x2B] <- 7:0[R0]
00033fae: R0 := mem[R31 + 0x18, el]:u64
00033fb4: R0 := R0 + 3
00033fbb: R0 := pad:64[mem[R0]]
00033fc1: R0 := pad:64[extend:32[7:0[R0]]]
00033fc7: R0 := pad:64[3:0[R0].0]
00033fcd: R1 := pad:64[extend:32[7:0[R0]]]
00033fd4: R0 := mem[R31 + 0x18, el]:u64
00033fda: R0 := R0 + 4
00033fe1: R0 := pad:64[mem[R0]]
00033fe7: R0 := pad:64[31:4[R0]]
00033fed: R0 := pad:64[7:0[R0]]
00033ff3: R0 := pad:64[extend:32[7:0[R0]]]
00033ffa: R0 := pad:64[31:0[R1] | 31:0[R0]]
00034000: R0 := pad:64[extend:32[7:0[R0]]]
00034006: R0 := pad:64[7:0[R0]]
0003400e: mem := mem with [R31 + 0x2C] <- 7:0[R0]
00034015: R0 := mem[R31 + 0x18, el]:u64
0003401b: R0 := R0 + 4
00034022: R0 := pad:64[mem[R0]]
00034028: R0 := pad:64[extend:32[7:0[R0]]]
0003402e: R0 := pad:64[4:0[R0].0]
00034034: R1 := pad:64[extend:32[7:0[R0]]]
0003403b: R0 := mem[R31 + 0x18, el]:u64
00034041: R0 := R0 + 5
00034048: R0 := pad:64[mem[R0]]
0003404e: R0 := pad:64[31:5[R0]]
00034054: R0 := pad:64[7:0[R0]]
0003405a: R0 := pad:64[extend:32[7:0[R0]]]
00034061: R0 := pad:64[31:0[R1] | 31:0[R0]]
00034067: R0 := pad:64[extend:32[7:0[R0]]]
0003406d: R0 := pad:64[7:0[R0]]
00034075: mem := mem with [R31 + 0x2D] <- 7:0[R0]
0003407c: R0 := mem[R31 + 0x18, el]:u64
00034082: R0 := R0 + 5
00034089: R0 := pad:64[mem[R0]]
0003408f: R0 := pad:64[extend:32[7:0[R0]]]
00034095: R0 := pad:64[5:0[R0].0]
0003409b: R1 := pad:64[extend:32[7:0[R0]]]
000340a2: R0 := mem[R31 + 0x18, el]:u64
000340a8: R0 := R0 + 6
000340af: R0 := pad:64[mem[R0]]
000340b5: R0 := pad:64[31:6[R0]]
000340bb: R0 := pad:64[7:0[R0]]
000340c1: R0 := pad:64[extend:32[7:0[R0]]]
000340c8: R0 := pad:64[31:0[R1] | 31:0[R0]]
000340ce: R0 := pad:64[extend:32[7:0[R0]]]
000340d4: R0 := pad:64[7:0[R0]]
000340dc: mem := mem with [R31 + 0x2E] <- 7:0[R0]
000340e3: R0 := mem[R31 + 0x18, el]:u64
000340e9: R0 := R0 + 6
000340f0: R0 := pad:64[mem[R0]]
000340f6: R0 := pad:64[6:0[R0].0]
000340fc: R0 := pad:64[7:0[R0]]
00034104: mem := mem with [R31 + 0x2F] <- 7:0[R0]
0003410a: R0 := R31 + 0x28
00034110: R1 := R0
00034117: R0 := mem[R31 + 0x10, el]:u64
0003411c: R30 := 0x40CEC4
0003411e: call @gl_des_setkey with return %00034120

00034120:
00034127: R29 := mem[R31, el]:u64
0003412c: R30 := mem[R31 + 8, el]:u64
00034130: R31 := R31 + 0x30
00034135: call R30 with noreturn

00046023: sub ntohs(ntohs_result)
00046373: ntohs_result :: out u32 = low:32[R0]

00025813:
0003fa9e: R16 := 0x430000
0003faa5: R17 := mem[R16 + 0xE8, el]:u64
0003faab: R16 := R16 + 0xE8
0003fab0: call R17 with noreturn

00046024: sub open(open_pathname, open_flags, open_result)
00046374: open_pathname :: in u64 = R0
00046375: open_flags :: in u32 = low:32[R1]
00046376: open_result :: out u32 = low:32[R0]

0003a57d:
0003faf6: R16 := 0x430000
0003fafd: R17 := mem[R16 + 0x108, el]:u64
0003fb03: R16 := R16 + 0x108
0003fb08: call R17 with noreturn

00046025: sub openlog(openlog_result)
00046377: openlog_result :: out u32 = low:32[R0]

00039356:
0003fcae: R16 := 0x430000
0003fcb5: R17 := mem[R16 + 0x1A8, el]:u64
0003fcbb: R16 := R16 + 0x1A8
0003fcc0: call R17 with noreturn

00046026: sub paclist_create(paclist_create_result)
00046378: paclist_create_result :: out u32 = low:32[R0]

000366be:
000366c2: #397 := R31 - 0x80
000366c8: mem := mem with [#397, el]:u64 <- R29
000366ce: mem := mem with [#397 + 8, el]:u64 <- R30
000366d2: R31 := #397
000366d8: R29 := R31
000366e0: mem := mem with [R31 + 0x18, el]:u64 <- R0
000366e7: mem := mem with [R31 + 0x78, el]:u64 <- 0
000366ee: mem := mem with [R31 + 0x74, el]:u32 <- 0
000366f5: mem := mem with [R31 + 0x28, el]:u64 <- 0
000366fc: mem := mem with [R31 + 0x50, el]:u64 <- 0
00036703: mem := mem with [R31 + 0x20, el]:u64 <- 0
0003670a: R0 := mem[R31 + 0x18, el]:u64
0003670f: VF := 0
00036712: CF := 1
00036716: ZF := R0 = 0
0003671a: NF := 63:63[R0]
00036720: when ZF <> 1 goto %0003671e
00046027: goto %000370b3

0003671e:
00036728: R0 := mem[R31 + 0x18, el]:u64
0003672d: R30 := 0x40E8A8
0003672f: call @strdup with return %00036731

00036731:
00036737: mem := mem with [R31 + 0x50, el]:u64 <- R0
0003673e: R0 := mem[R31 + 0x50, el]:u64
00036746: mem := mem with [R31 + 0x28, el]:u64 <- R0
0003674c: R2 := R31 + 0x28
00036751: R0 := 0x41B000
00036757: R1 := R0 + 0xF00
0003675d: R0 := R2
00036762: R30 := 0x40E8C8
00036765: call @strsep with return %00036767

00036767:
0003676d: mem := mem with [R31 + 0x20, el]:u64 <- R0
00036772: R0 := 0x430000
00036778: R0 := R0 + 0x390
0003677f: R0 := pad:64[mem[R0, el]:u32]
00036784: VF := 0
00036787: CF := 1
0003678b: ZF := 31:0[R0] = 0
0003678f: NF := 31:31[R0]
00036795: when ZF goto %00036793
00046028: goto %0003709d

0003709d:
000370a0: R0 := 0x41B000
000370a6: R0 := R0 + 0xF08
000370ab: R30 := 0x40E8EC
000370ad: call @puts with return %000370af

000370af:
000370b1: goto %00036793

00036793:
0003679d: R0 := mem[R31 + 0x20, el]:u64
000367a2: VF := 0
000367a5: CF := 1
000367a9: ZF := R0 = 0
000367ad: NF := 63:63[R0]
000367b3: when ZF <> 1 goto %000367b1
00046029: goto %00036d8b

00036d8b:
00036d8e: R0 := 0x430000
00036d94: R0 := R0 + 0x390
00036d9b: R0 := pad:64[mem[R0, el]:u32]
00036da0: VF := 0
00036da3: CF := 1
00036da7: ZF := 31:0[R0] = 0
00036dab: NF := 31:31[R0]
00036db1: when ZF goto %00036daf
0004602a: goto %00037076

00037076:
0003707b: R1 := pad:64[mem[R31 + 0x74, el]:u32]
00037080: R0 := 0x41B000
00037086: R0 := R0 + 0xF50
0003708b: R30 := 0x40EC38
0003708d: call @printf with return %0003708f

0003708f:
00037094: R0 := mem[R31 + 0x78, el]:u64
00037099: R30 := 0x40EC40
0003709b: call @proxylist_dump with return %00036daf

00036daf:
00036db9: R0 := mem[R31 + 0x50, el]:u64
00036dbe: R30 := 0x40EC48
00036dc0: call @free with return %00036dc2

00036dc2:
00036dc5: R0 := 0x28
00036dca: R30 := 0x40EC50
00036dcc: call @malloc with return %00036dce

00036dce:
00036dd4: mem := mem with [R31 + 0x48, el]:u64 <- R0
00036ddb: R0 := mem[R31 + 0x48, el]:u64
00036de2: R1 := mem[R31 + 0x18, el]:u64
00036dea: mem := mem with [R0, el]:u64 <- R1
00036df1: R0 := mem[R31 + 0x48, el]:u64
00036df8: R1 := mem[R31 + 0x78, el]:u64
00036e00: mem := mem with [R0 + 8, el]:u64 <- R1
00036e07: R0 := mem[R31 + 0x48, el]:u64
00036e0e: mem := mem with [R0 + 0x10, el]:u64 <- 0
00036e15: R0 := mem[R31 + 0x48, el]:u64
00036e1c: R1 := pad:64[mem[R31 + 0x74, el]:u32]
00036e24: mem := mem with [R0 + 0x18, el]:u32 <- 31:0[R1]
00036e2b: R0 := mem[R31 + 0x48, el]:u64
00036e32: mem := mem with [R0 + 0x20, el]:u64 <- 0
00036e39: R0 := mem[R31 + 0x48, el]:u64
0004602b: goto %00036e3b

000367b1:
000367bb: mem := mem with [R31 + 0x70, el]:u32 <- 0
000367c2: mem := mem with [R31 + 0x40, el]:u64 <- 0
000367c9: mem := mem with [R31 + 0x68, el]:u64 <- 0
000367d0: mem := mem with [R31 + 0x60, el]:u64 <- 0
000367d7: R0 := mem[R31 + 0x20, el]:u64
000367de: R0 := pad:64[mem[R0]]
000367e4: #398 := 31:0[R0] - 0x20
000367e9: VF := extend:64[#398] <> extend:64[31:0[R0]] - 0x20
000367ee: CF := pad:64[#398] <> pad:64[31:0[R0]] + 0xFFFFFFE0
000367f2: ZF := #398 = 0
000367f6: NF := 31:31[#398]
000367fc: when ZF <> 1 goto %000367fa
0004602c: goto %00036d76

00036d76:
00036d7b: R0 := mem[R31 + 0x20, el]:u64
00036d81: R0 := R0 + 1
00036d89: mem := mem with [R31 + 0x20, el]:u64 <- R0
0004602d: goto %000367fa

000367fa:
00036803: R2 := R31 + 0x20
00036808: R0 := 0x41B000
0003680e: R1 := R0 + 0xF20
00036814: R0 := R2
00036819: R30 := 0x40E930
0003681b: call @strsep with return %0003681d

0003681d:
00036823: mem := mem with [R31 + 0x40, el]:u64 <- R0
00036828: R0 := 0x41B000
0003682e: R1 := R0 + 0xF28
00036835: R0 := mem[R31 + 0x40, el]:u64
0003683a: R30 := 0x40E944
0003683c: call @strcmp with return %0003683e

0003683e:
00036841: VF := 0
00036844: CF := 1
00036848: ZF := 31:0[R0] = 0
0003684c: NF := 31:31[R0]
00036852: when ZF <> 1 goto %00036850
0004602e: goto %00036d34

00036d34:
00036d37: R0 := 1
00036d3f: mem := mem with [R31 + 0x70, el]:u32 <- 31:0[R0]
00036d45: R2 := R31 + 0x20
00036d4a: R0 := 0x41B000
00036d50: R1 := R0 + 0xF30
00036d56: R0 := R2
00036d5b: R30 := 0x40E968
00036d5d: call @strsep with return %00036d5f

00036d5f:
00036d65: mem := mem with [R31 + 0x68, el]:u64 <- R0
00036d6c: R0 := mem[R31 + 0x20, el]:u64
00036d74: mem := mem with [R31 + 0x60, el]:u64 <- R0
0004602f: goto %00036850

00036850:
00036858: R0 := 0x430000
0003685e: R0 := R0 + 0x390
00036865: R0 := pad:64[mem[R0, el]:u32]
0003686a: VF := 0
0003686d: CF := 1
00036871: ZF := 31:0[R0] = 0
00036875: NF := 31:31[R0]
0003687b: when ZF goto %00036879
00046030: goto %00036cd2

00036cd2:
00036cd7: R0 := pad:64[mem[R31 + 0x70, el]:u32]
00036cdc: VF := 0
00036cdf: CF := 1
00036ce3: ZF := 31:0[R0] = 0
00036ce7: NF := 31:31[R0]
00036ced: when ZF goto %00036ceb
00046031: goto %00036d09

00036ceb:
00036cf5: R1 := mem[R31 + 0x40, el]:u64
00036cfa: R0 := 0x41B000
00036d00: R0 := R0 + 0xF48
00036d05: R30 := 0x40E9C0
00036d07: call @printf with return %00036879

00036d09:
00036d0e: R3 := mem[R31 + 0x60, el]:u64
00036d15: R2 := mem[R31 + 0x68, el]:u64
00036d1c: R1 := mem[R31 + 0x40, el]:u64
00036d21: R0 := 0x41B000
00036d27: R0 := R0 + 0xF38
00036d2c: R30 := 0x40E9AC
00036d2e: call @printf with return %00036d30

00036d30:
00036d32: goto %00036879

00036879:
00036881: R0 := 0x430000
00036887: R0 := R0 + 0x490
0003688e: R0 := mem[R0, el]:u64
00036896: mem := mem with [R31 + 0x58, el]:u64 <- R0
0003689d: R0 := pad:64[mem[R31 + 0x70, el]:u32]
000368a3: #399 := 31:0[R0] - 1
000368a8: VF := extend:64[#399] <> extend:64[31:0[R0]] - 1
000368ad: CF := pad:64[#399] <> pad:64[31:0[R0]] + 0xFFFFFFFF
000368b1: ZF := #399 = 0
000368b5: NF := 31:31[#399]
000368bb: when ZF <> 1 goto %000368b9
00046032: goto %00036aec

000368b9:
000368c3: R0 := mem[R31 + 0x58, el]:u64
000368c8: VF := 0
000368cb: CF := 1
000368cf: ZF := R0 = 0
000368d3: NF := 63:63[R0]
000368d9: when ZF goto %000368d7
00046033: goto %00036a94

00036a94:
00036a99: R0 := mem[R31 + 0x58, el]:u64
00036aa0: R0 := mem[R0 + 8, el]:u64
00036aa7: R0 := pad:64[mem[R0, el]:u32]
00036aae: R1 := pad:64[mem[R31 + 0x70, el]:u32]
00036ab4: #400 := ~31:0[R0]
00036ab9: #401 := 31:0[R1] + ~31:0[R0]
00036abf: VF := extend:64[#401 + 1] <> extend:64[31:0[R1]] + extend:64[#400]
          + 1
00036ac5: CF := pad:64[#401 + 1] <> pad:64[31:0[R1]] + pad:64[#400] + 1
00036ac9: ZF := #401 + 1 = 0
00036acd: NF := 31:31[#401 + 1]
00036ad3: when ZF <> 1 goto %00036ad1
00046034: goto %000368d7

000368d7:
000368e1: R0 := mem[R31 + 0x58, el]:u64
000368e6: VF := 0
000368e9: CF := 1
000368ed: ZF := R0 = 0
000368f1: NF := 63:63[R0]
000368f7: when ZF <> 1 goto %000368f5
00046035: goto %0003698b

0003698b:
0003698e: R0 := 0x198
00036993: R30 := 0x40EB18
00036995: call @zmalloc with return %00036997

00036997:
0003699d: mem := mem with [R31 + 0x38, el]:u64 <- R0
000369a4: R0 := mem[R31 + 0x38, el]:u64
000369ab: mem := mem with [R0, el]:u32 <- 0
000369b0: R0 := 0x430000
000369b6: R0 := R0 + 0x4A0
000369bb: R30 := 0x40EB30
000369bd: call @pthread_mutex_lock with return %000369bf

000369bf:
000369c2: R0 := 0x430000
000369c8: R0 := R0 + 0x488
000369cf: R0 := pad:64[mem[R0, el]:u32]
000369d5: R1 := pad:64[31:0[R0] + 1]
000369da: R0 := 0x430000
000369e0: R0 := R0 + 0x488
000369e8: mem := mem with [R0, el]:u32 <- 31:0[R1]
000369ed: R0 := 0x430000
000369f3: R0 := R0 + 0x490
000369fa: R3 := mem[R0, el]:u64
000369ff: R0 := 0x430000
00036a05: R0 := R0 + 0x488
00036a0c: R0 := pad:64[mem[R0, el]:u32]
00036a12: R0 := extend:64[31:0[R0]]
00036a19: R2 := mem[R31 + 0x38, el]:u64
00036a1f: R1 := R0
00036a25: R0 := R3
00036a2a: R30 := 0x40EB78
00036a2c: call @proxylist_add with return %00036a2e

00036a2e:
00036a32: R1 := R0
00036a37: R0 := 0x430000
00036a3d: R0 := R0 + 0x490
00036a45: mem := mem with [R0, el]:u64 <- R1
00036a4a: R0 := 0x430000
00036a50: R0 := R0 + 0x488
00036a57: R0 := pad:64[mem[R0, el]:u32]
00036a5d: R0 := extend:64[31:0[R0]]
00036a64: R2 := mem[R31 + 0x38, el]:u64
00036a6a: R1 := R0
00036a71: R0 := mem[R31 + 0x78, el]:u64
00036a76: R30 := 0x40EBA8
00036a78: call @proxylist_add with return %00036a7a

00036a7a:
00036a80: mem := mem with [R31 + 0x78, el]:u64 <- R0
00036a85: R0 := 0x430000
00036a8b: R0 := R0 + 0x4A0
00036a90: R30 := 0x40EBB8
00036a92: call @pthread_mutex_unlock with return %000368f5

00036ad1:
00036adb: R0 := mem[R31 + 0x58, el]:u64
00036ae2: R0 := mem[R0 + 0x10, el]:u64
00036aea: mem := mem with [R31 + 0x58, el]:u64 <- R0
00046036: goto %000368b9

00036aec:
00036af1: R0 := mem[R31 + 0x60, el]:u64
00036af6: R30 := 0x40E9E4
00036af8: call @atoi with return %00036afa

00036afa:
00036b00: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
00036b05: goto %00036b03

00036b03:
00036b0b: R0 := mem[R31 + 0x58, el]:u64
00036b10: VF := 0
00036b13: CF := 1
00036b17: ZF := R0 = 0
00036b1b: NF := 63:63[R0]
00036b21: when ZF goto %00036b1f
00046037: goto %00036bff

00036bff:
00036c04: R0 := mem[R31 + 0x58, el]:u64
00036c0b: R0 := mem[R0 + 8, el]:u64
00036c12: R0 := pad:64[mem[R0, el]:u32]
00036c19: R1 := pad:64[mem[R31 + 0x70, el]:u32]
00036c1f: #402 := ~31:0[R0]
00036c24: #403 := 31:0[R1] + ~31:0[R0]
00036c2a: VF := extend:64[#403 + 1] <> extend:64[31:0[R1]] + extend:64[#402]
          + 1
00036c30: CF := pad:64[#403 + 1] <> pad:64[31:0[R1]] + pad:64[#402] + 1
00036c34: ZF := #403 + 1 = 0
00036c38: NF := 31:31[#403 + 1]
00036c3e: when ZF <> 1 goto %00036c3c
00046038: goto %00036c57

00036c57:
00036c5c: R0 := mem[R31 + 0x58, el]:u64
00036c63: R0 := mem[R0 + 8, el]:u64
00036c6a: R0 := pad:64[mem[R0 + 0x44, el]:u32]
00036c71: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00036c77: #404 := ~31:0[R0]
00036c7c: #405 := 31:0[R1] + ~31:0[R0]
00036c82: VF := extend:64[#405 + 1] <> extend:64[31:0[R1]] + extend:64[#404]
          + 1
00036c88: CF := pad:64[#405 + 1] <> pad:64[31:0[R1]] + pad:64[#404] + 1
00036c8c: ZF := #405 + 1 = 0
00036c90: NF := 31:31[#405 + 1]
00036c95: when ZF <> 1 goto %00036c3c
00046039: goto %00036c99

00036c99:
00036c9e: R0 := mem[R31 + 0x58, el]:u64
00036ca5: R0 := mem[R0 + 8, el]:u64
00036cab: R0 := R0 + 4
00036cb2: R1 := mem[R31 + 0x68, el]:u64
00036cb7: R30 := 0x40EA48
00036cb9: call @strcmp with return %00036cbb

00036cbb:
00036cbe: VF := 0
00036cc1: CF := 1
00036cc5: ZF := 31:0[R0] = 0
00036cc9: NF := 31:31[R0]
00036cce: when ZF <> 1 goto %00036c3c
0004603a: goto %00036b1f

00036b1f:
00036b29: R0 := mem[R31 + 0x58, el]:u64
00036b2e: VF := 0
00036b31: CF := 1
00036b35: ZF := R0 = 0
00036b39: NF := 63:63[R0]
00036b3e: when ZF <> 1 goto %000368f5
0004603b: goto %00036b42

00036b42:
00036b45: R0 := 0x430000
00036b4b: R0 := R0 + 0x4A0
00036b50: R30 := 0x40EA68
00036b52: call @pthread_mutex_lock with return %00036b54

00036b54:
00036b59: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00036b60: R0 := mem[R31 + 0x68, el]:u64
00036b65: R30 := 0x40EA74
00036b67: call @parent_add with return %00036b69

00036b69:
00036b6c: R0 := 0x430000
00036b72: R0 := R0 + 0x490
00036b79: R2 := mem[R0, el]:u64
00036b7e: R0 := 0x430000
00036b84: R0 := R0 + 0x488
00036b8b: R0 := pad:64[mem[R0, el]:u32]
00036b91: R0 := extend:64[31:0[R0]]
00036b97: R1 := R0
00036b9d: R0 := R2
00036ba2: R30 := 0x40EA9C
00036ba4: call @proxylist_get with return %00036ba6

00036ba6:
00036bac: mem := mem with [R31 + 0x38, el]:u64 <- R0
00036bb1: R0 := 0x430000
00036bb7: R0 := R0 + 0x488
00036bbe: R0 := pad:64[mem[R0, el]:u32]
00036bc4: R0 := extend:64[31:0[R0]]
00036bcb: R2 := mem[R31 + 0x38, el]:u64
00036bd1: R1 := R0
00036bd8: R0 := mem[R31 + 0x78, el]:u64
00036bdd: R30 := 0x40EAC0
00036bdf: call @proxylist_add with return %00036be1

00036be1:
00036be7: mem := mem with [R31 + 0x78, el]:u64 <- R0
00036bec: R0 := 0x430000
00036bf2: R0 := R0 + 0x4A0
00036bf7: R30 := 0x40EAD0
00036bf9: call @pthread_mutex_unlock with return %00036bfb

00036bfb:
00036bfd: goto %000368f5

000368f5:
000368ff: R0 := mem[R31 + 0x58, el]:u64
00036904: VF := 0
00036907: CF := 1
0003690b: ZF := R0 = 0
0003690f: NF := 63:63[R0]
00036915: when ZF goto %00036913
0004603c: goto %00036953

00036953:
00036958: R0 := mem[R31 + 0x58, el]:u64
0003695f: R1 := mem[R0, el]:u64
00036966: R0 := mem[R31 + 0x58, el]:u64
0003696d: R0 := mem[R0 + 8, el]:u64
00036973: R2 := R0
0003697a: R0 := mem[R31 + 0x78, el]:u64
0003697f: R30 := 0x40EBE0
00036981: call @proxylist_add with return %00036983

00036983:
00036989: mem := mem with [R31 + 0x78, el]:u64 <- R0
0004603d: goto %00036913

00036913:
0003691d: R0 := pad:64[mem[R31 + 0x74, el]:u32]
00036923: R0 := pad:64[31:0[R0] + 1]
0003692b: mem := mem with [R31 + 0x74, el]:u32 <- 31:0[R0]
00036931: R2 := R31 + 0x28
00036936: R0 := 0x41B000
0003693c: R1 := R0 + 0xF00
00036942: R0 := R2
00036947: R30 := 0x40EC04
00036949: call @strsep with return %0003694b

0003694b:
00036951: mem := mem with [R31 + 0x20, el]:u64 <- R0
0004603e: goto %00036793

00036c3c:
00036c46: R0 := mem[R31 + 0x58, el]:u64
00036c4d: R0 := mem[R0 + 0x10, el]:u64
00036c55: mem := mem with [R31 + 0x58, el]:u64 <- R0
0004603f: goto %00036b03

000370b3:
000370b6: R0 := 0
000370ba: goto %00036e3b

00036e3b:
00036e40: R29 := mem[R31, el]:u64
00036e45: R30 := mem[R31 + 8, el]:u64
00036e49: R31 := R31 + 0x80
00036e4e: call R30 with noreturn

00046040: sub paclist_free(paclist_free_result)
00046379: paclist_free_result :: out u32 = low:32[R0]

0002763e:
00027645: #198 := R31 - 0x30
0002764b: mem := mem with [#198, el]:u64 <- R29
00027651: mem := mem with [#198 + 8, el]:u64 <- R30
00027655: R31 := #198
0002765b: R29 := R31
00027663: mem := mem with [R31 + 0x18, el]:u64 <- R0
00027668: goto %00027666

00027666:
0002766e: R0 := mem[R31 + 0x18, el]:u64
00027673: VF := 0
00027676: CF := 1
0002767a: ZF := R0 = 0
0002767e: NF := 63:63[R0]
00027684: when ZF <> 1 goto %00027682
00046041: goto %000276d4

000276d4:
000276dd: R29 := mem[R31, el]:u64
000276e2: R30 := mem[R31 + 8, el]:u64
000276e6: R31 := R31 + 0x30
000276eb: call R30 with noreturn

00027682:
0002768c: R0 := mem[R31 + 0x18, el]:u64
00027693: R0 := mem[R0 + 0x20, el]:u64
0002769b: mem := mem with [R31 + 0x28, el]:u64 <- R0
000276a2: R0 := mem[R31 + 0x18, el]:u64
000276a9: R0 := mem[R0 + 8, el]:u64
000276ae: R1 := 0
000276b3: R30 := 0x40EDE0
000276b5: call @proxylist_free with return %000276b7

000276b7:
000276bc: R0 := mem[R31 + 0x18, el]:u64
000276c1: R30 := 0x40EDE8
000276c3: call @free with return %000276c5

000276c5:
000276ca: R0 := mem[R31 + 0x28, el]:u64
000276d2: mem := mem with [R31 + 0x18, el]:u64 <- R0
00046042: goto %00027666

00046043: sub paclist_get(paclist_get_result)
0004637a: paclist_get_result :: out u32 = low:32[R0]

00036e50:
00036e54: #406 := R31 - 0x30
00036e5a: mem := mem with [#406, el]:u64 <- R29
00036e60: mem := mem with [#406 + 8, el]:u64 <- R30
00036e64: R31 := #406
00036e6a: R29 := R31
00036e72: mem := mem with [R31 + 0x18, el]:u64 <- R0
00036e77: R0 := 0x430000
00036e7d: R0 := R0 + 0x450
00036e84: R0 := mem[R0, el]:u64
00036e8c: mem := mem with [R31 + 0x28, el]:u64 <- R0
00036e91: goto %00036e8f

00036e8f:
00036e97: R0 := mem[R31 + 0x28, el]:u64
00036e9c: VF := 0
00036e9f: CF := 1
00036ea3: ZF := R0 = 0
00036ea7: NF := 63:63[R0]
00036ead: when ZF <> 1 goto %00036eab
00046044: goto %00036f61

00036f61:
00036f66: R0 := mem[R31 + 0x18, el]:u64
00036f6b: R30 := 0x40ED1C
00036f6d: call @paclist_create with return %00036f6f

00036f6f:
00036f75: mem := mem with [R31 + 0x20, el]:u64 <- R0
00036f7a: R0 := 0x430000
00036f80: R0 := R0 + 0x450
00036f87: R0 := mem[R0, el]:u64
00036f8c: VF := 0
00036f8f: CF := 1
00036f93: ZF := R0 = 0
00036f97: NF := 63:63[R0]
00036f9d: when ZF <> 1 goto %00036f9b
00046045: goto %00037058

00036f9b:
00036fa3: R0 := 0x430000
00036fa9: R0 := R0 + 0x450
00036fb0: R0 := mem[R0, el]:u64
00036fb8: mem := mem with [R31 + 0x28, el]:u64 <- R0
00036fbd: goto %00036fbb

00036fbb:
00036fc3: R0 := mem[R31 + 0x28, el]:u64
00036fca: R0 := mem[R0 + 0x20, el]:u64
00036fcf: VF := 0
00036fd2: CF := 1
00036fd6: ZF := R0 = 0
00036fda: NF := 63:63[R0]
00036fe0: when ZF <> 1 goto %00036fde
00046046: goto %00036ff9

00036ff9:
00036ffe: R0 := mem[R31 + 0x28, el]:u64
00037005: R1 := mem[R31 + 0x20, el]:u64
0003700d: mem := mem with [R0 + 0x20, el]:u64 <- R1
00046047: goto %0003700f

00036fde:
00036fe8: R0 := mem[R31 + 0x28, el]:u64
00036fef: R0 := mem[R0 + 0x20, el]:u64
00036ff7: mem := mem with [R31 + 0x28, el]:u64 <- R0
00046048: goto %00036fbb

00037058:
0003705b: R0 := 0x430000
00037061: R0 := R0 + 0x450
00037068: R1 := mem[R31 + 0x20, el]:u64
00037070: mem := mem with [R0, el]:u64 <- R1
00037074: goto %0003700f

0003700f:
00037012: R0 := 0x430000
00037018: R0 := R0 + 0x390
0003701f: R0 := pad:64[mem[R0, el]:u32]
00037024: VF := 0
00037027: CF := 1
0003702b: ZF := 31:0[R0] = 0
0003702f: NF := 31:31[R0]
00037035: when ZF goto %00037033
00046049: goto %0003703f

0003703f:
00037044: R1 := mem[R31 + 0x18, el]:u64
00037049: R0 := 0x41B000
0003704f: R0 := R0 + 0xF98
00037054: R30 := 0x40EDA8
00037056: call @printf with return %00037033

00037033:
0003703d: R0 := mem[R31 + 0x20, el]:u64
0004604a: goto %00036f30

00036eab:
00036eb5: R0 := mem[R31 + 0x28, el]:u64
00036ebc: R0 := mem[R0, el]:u64
00036ec2: R1 := R0
00036ec9: R0 := mem[R31 + 0x18, el]:u64
00036ece: R30 := 0x40ECC8
00036ed0: call @strcmp with return %00036ed2

00036ed2:
00036ed5: VF := 0
00036ed8: CF := 1
00036edc: ZF := 31:0[R0] = 0
00036ee0: NF := 31:31[R0]
00036ee6: when ZF <> 1 goto %00036ee4
0004604b: goto %00036eff

00036ee4:
00036eee: R0 := mem[R31 + 0x28, el]:u64
00036ef5: R0 := mem[R0 + 0x20, el]:u64
00036efd: mem := mem with [R31 + 0x28, el]:u64 <- R0
0004604c: goto %00036e8f

00036eff:
00036f02: R0 := 0x430000
00036f08: R0 := R0 + 0x390
00036f0f: R0 := pad:64[mem[R0, el]:u32]
00036f14: VF := 0
00036f17: CF := 1
00036f1b: ZF := 31:0[R0] = 0
00036f1f: NF := 31:31[R0]
00036f25: when ZF goto %00036f23
0004604d: goto %00036f48

00036f48:
00036f4d: R1 := mem[R31 + 0x18, el]:u64
00036f52: R0 := 0x41B000
00036f58: R0 := R0 + 0xF78
00036f5d: R30 := 0x40ECF4
00036f5f: call @printf with return %00036f23

00036f23:
00036f2d: R0 := mem[R31 + 0x28, el]:u64
00036f32: goto %00036f30

00036f30:
00036f38: R29 := mem[R31, el]:u64
00036f3d: R30 := mem[R31 + 8, el]:u64
00036f41: R31 := R31 + 0x30
00036f46: call R30 with noreturn

0004604e: sub parent_add(parent_add_result)
0004637b: parent_add_result :: out u32 = low:32[R0]

0002734c:
00027350: #195 := R31 - 0x50
00027356: mem := mem with [#195, el]:u64 <- R29
0002735c: mem := mem with [#195 + 8, el]:u64 <- R30
00027360: R31 := #195
00027366: R29 := R31
0002736e: mem := mem with [R31 + 0x18, el]:u64 <- R0
00027376: mem := mem with [R31 + 0x14, el]:u32 <- 31:0[R1]
0002737d: R0 := mem[R31 + 0x18, el]:u64
00027382: R30 := 0x40E634
00027384: call @strdup with return %00027386

00027386:
0002738c: mem := mem with [R31 + 0x40, el]:u64 <- R0
00027391: R1 := 0x3A
00027398: R0 := mem[R31 + 0x40, el]:u64
0002739d: R30 := 0x40E644
000273a0: call @strrchr with return %000273a2

000273a2:
000273a8: mem := mem with [R31 + 0x38, el]:u64 <- R0
000273af: R0 := mem[R31 + 0x38, el]:u64
000273b4: VF := 0
000273b7: CF := 1
000273bb: ZF := R0 = 0
000273bf: NF := 63:63[R0]
000273c5: when ZF <> 1 goto %000273c3
0004604f: goto %000371c6

000371c6:
000371cb: R0 := pad:64[mem[R31 + 0x14, el]:u32]
000371d0: VF := 0
000371d3: CF := 1
000371d7: ZF := 31:0[R0] = 0
000371db: NF := 31:31[R0]
000371e0: when ZF goto %000370e6
00046050: goto %000273c3

000273c3:
000273cd: R0 := mem[R31 + 0x38, el]:u64
000273d2: VF := 0
000273d5: CF := 1
000273d9: ZF := R0 = 0
000273dd: NF := 63:63[R0]
000273e3: when ZF goto %000273e1
00046051: goto %000371ad

000273e1:
000273eb: R0 := mem[R31 + 0x40, el]:u64
000273f0: R30 := 0x40E684
000273f2: call @strlen with return %000273f4

000371ad:
000371b2: R1 := mem[R31 + 0x38, el]:u64
000371b9: R0 := mem[R31 + 0x40, el]:u64
000371c0: R0 := R1 + ~R0 + 1
000371c4: goto %000273f4

000273f4:
000273fa: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
00027401: R0 := mem[R31 + 0x40, el]:u64
00027408: R0 := pad:64[mem[R0]]
0002740e: #196 := 31:0[R0] - 0x5B
00027413: VF := extend:64[#196] <> extend:64[31:0[R0]] - 0x5B
00027418: CF := pad:64[#196] <> pad:64[31:0[R0]] + 0xFFFFFFA5
0002741c: ZF := #196 = 0
00027420: NF := 31:31[#196]
00027426: when ZF <> 1 goto %00027424
00046052: goto %0003713a

0003713a:
0003713f: R0 := extend:64[mem[R31 + 0x34, el]:u32]
00037145: R0 := R0 - 1
0003714c: R1 := mem[R31 + 0x40, el]:u64
00037153: R0 := R1 + R0
0003715a: R0 := pad:64[mem[R0]]
00037160: #407 := 31:0[R0] - 0x5D
00037165: VF := extend:64[#407] <> extend:64[31:0[R0]] - 0x5D
0003716a: CF := pad:64[#407] <> pad:64[31:0[R0]] + 0xFFFFFFA3
0003716e: ZF := #407 = 0
00037172: NF := 31:31[#407]
00037177: when ZF <> 1 goto %00027424
00046053: goto %0003717b

00027424:
0002742e: R2 := pad:64[mem[R31 + 0x34, el]:u32]
00027433: R1 := 0
0002743a: R0 := mem[R31 + 0x40, el]:u64
0002743f: R30 := 0x40E6E4
00027441: call @substr with return %00027443

00027443:
00027449: mem := mem with [R31 + 0x48, el]:u64 <- R0
00046054: goto %0002744b

0003717b:
00037180: R0 := pad:64[mem[R31 + 0x34, el]:u32]
00037186: R0 := pad:64[31:0[R0] - 2]
0003718c: R2 := pad:64[31:0[R0]]
00037191: R1 := 1
00037198: R0 := mem[R31 + 0x40, el]:u64
0003719d: R30 := 0x40E6CC
0003719f: call @substr with return %000371a1

000371a1:
000371a7: mem := mem with [R31 + 0x48, el]:u64 <- R0
000371ab: goto %0002744b

0002744b:
00027450: R0 := mem[R31 + 0x38, el]:u64
00027455: VF := 0
00027458: CF := 1
0002745c: ZF := R0 = 0
00027460: NF := 63:63[R0]
00027466: when ZF goto %00027464
00046055: goto %00037110

00037110:
00037115: R0 := extend:64[mem[R31 + 0x34, el]:u32]
0003711b: R0 := R0 + 1
00037122: R1 := mem[R31 + 0x40, el]:u64
00037129: R0 := R1 + R0
0003712e: R30 := 0x40E708
00037130: call @atoi with return %00037132

00037132:
00037138: mem := mem with [R31 + 0x14, el]:u32 <- 31:0[R0]
00046056: goto %00027464

00027464:
0002746e: R0 := pad:64[mem[R31 + 0x14, el]:u32]
00027473: VF := 0
00027476: CF := 1
0002747a: ZF := 31:0[R0] = 0
0002747e: NF := 31:31[R0]
00027484: when ZF <> 1 goto %00027482
00046057: goto %000370bc

000370bc:
000370c1: R2 := mem[R31 + 0x40, el]:u64
000370c6: R0 := 0x41B000
000370cc: R1 := R0 + 0xEB0
000370d1: R0 := 3
000370d6: R30 := 0x40E72C
000370d8: call @syslog with return %000370da

000370da:
000370dd: R0 := 1
000370e2: R30 := 0x40E734
000370e4: call @myexit with return %000370e6

000370e6:
000370eb: R2 := mem[R31 + 0x40, el]:u64
000370f0: R0 := 0x41B000
000370f6: R1 := R0 + 0xED8
000370fb: R0 := 3
00037100: R30 := 0x40E748
00037102: call @syslog with return %00037104

00037104:
00037107: R0 := 1
0003710c: R30 := 0x40E750
0003710e: call @myexit with return %00027482

00027482:
0002748c: R0 := 0x198
00027491: R30 := 0x40E75C
00027493: call @zmalloc with return %00027495

00027495:
0002749b: mem := mem with [R31 + 0x28, el]:u64 <- R0
000274a2: R0 := mem[R31 + 0x28, el]:u64
000274a7: R1 := 1
000274af: mem := mem with [R0, el]:u32 <- 31:0[R1]
000274b6: R0 := mem[R31 + 0x28, el]:u64
000274bc: R0 := R0 + 4
000274c1: R2 := 0x40
000274c8: R1 := mem[R31 + 0x48, el]:u64
000274cd: R30 := 0x40E780
000274cf: call @strlcpy with return %000274d1

000274d1:
000274d6: R0 := mem[R31 + 0x28, el]:u64
000274dd: R1 := pad:64[mem[R31 + 0x14, el]:u32]
000274e5: mem := mem with [R0 + 0x44, el]:u32 <- 31:0[R1]
000274ec: R0 := mem[R31 + 0x28, el]:u64
000274f3: mem := mem with [R0 + 0x190, el]:u32 <- 0
000274fa: R0 := mem[R31 + 0x28, el]:u64
00027501: mem := mem with [R0 + 0x188, el]:u64 <- 0
00027506: R0 := 0x430000
0002750c: R0 := R0 + 0x490
00027513: R3 := mem[R0, el]:u64
00027518: R0 := 0x430000
0002751e: R0 := R0 + 0x488
00027525: R0 := pad:64[mem[R0, el]:u32]
0002752b: R1 := pad:64[31:0[R0] + 1]
00027530: R0 := 0x430000
00027536: R0 := R0 + 0x488
0002753e: mem := mem with [R0, el]:u32 <- 31:0[R1]
00027543: R0 := 0x430000
00027549: R0 := R0 + 0x488
00027550: R0 := pad:64[mem[R0, el]:u32]
00027556: R0 := extend:64[31:0[R0]]
0002755d: R2 := mem[R31 + 0x28, el]:u64
00027563: R1 := R0
00027569: R0 := R3
0002756e: R30 := 0x40E7E4
00027570: call @proxylist_add with return %00027572

00027572:
00027576: R1 := R0
0002757b: R0 := 0x430000
00027581: R0 := R0 + 0x490
00027589: mem := mem with [R0, el]:u64 <- R1
00027590: R0 := mem[R31 + 0x40, el]:u64
00027595: R30 := 0x40E7FC
00027597: call @free with return %00027599

00027599:
0002759e: R0 := mem[R31 + 0x48, el]:u64
000275a3: R30 := 0x40E804
000275a5: call @free with return %000275a7

000275a7:
000275aa: R0 := 0x430000
000275b0: R0 := R0 + 0x488
000275b7: R0 := pad:64[mem[R0, el]:u32]
000275be: R29 := mem[R31, el]:u64
000275c3: R30 := mem[R31 + 8, el]:u64
000275c7: R31 := R31 + 0x50
000275cc: call R30 with noreturn

00046058: sub parent_available(parent_available_result)
0004637c: parent_available_result :: out u32 = low:32[R0]

000275ce:
000275d1: R0 := 0x430000
000275d7: R0 := R0 + 0x488
000275de: R0 := pad:64[mem[R0, el]:u32]
000275e3: VF := 0
000275e6: CF := 1
000275ea: ZF := 31:0[R0] = 0
000275ee: NF := 31:31[R0]
000275fc: when ~(NF = VF & ~ZF) goto %000275f5
000275fd: goto %000275f8

000275f8:
000275f9: R0 := 1
000275ff: goto %000275fb

000275f5:
000275f6: R0 := 0
000275fe: goto %000275fb

000275fb:
00027605: R0 := pad:64[7:0[R0]]
0002760a: call R30 with noreturn

00046059: sub parent_free(parent_free_result)
0004637d: parent_free_result :: out u32 = low:32[R0]

0002760c:
00027610: #197 := R31 - 0x10
00027616: mem := mem with [#197, el]:u64 <- R29
0002761c: mem := mem with [#197 + 8, el]:u64 <- R30
00027620: R31 := #197
00027626: R29 := R31
0002762b: R0 := 0x430000
00027631: R0 := R0 + 0x450
00027638: R0 := mem[R0, el]:u64
0002763d: R30 := 0x40E84C
00027640: call @paclist_free with return %00036689

00036689:
0003668c: R0 := 0x430000
00036692: R0 := R0 + 0x490
00036699: R0 := mem[R0, el]:u64
0003669e: R1 := 1
000366a3: R30 := 0x40E860
000366a5: call @proxylist_free with return %000366a7

000366a7:
000366ae: R29 := mem[R31, el]:u64
000366b3: R30 := mem[R31 + 8, el]:u64
000366b7: R31 := R31 + 0x10
000366bc: call R30 with noreturn

0004605a: sub perror(perror_result)
0004637e: perror_result :: out u32 = low:32[R0]

0003c5cf:
0003f8fc: R16 := 0x430000
0003f903: R17 := mem[R16 + 0x50, el]:u64
0003f909: R16 := R16 + 0x50
0003f90e: call R17 with noreturn

0004605b: sub plist_add(plist_add_result)
0004637f: plist_add_result :: out u32 = low:32[R0]

0002490d:
00024914: #145 := R31 - 0x40
0002491a: mem := mem with [#145, el]:u64 <- R29
00024920: mem := mem with [#145 + 8, el]:u64 <- R30
00024924: R31 := #145
0002492a: R29 := R31
00024932: mem := mem with [R31 + 0x28, el]:u64 <- R0
0002493a: mem := mem with [R31 + 0x20, el]:u64 <- R1
00024942: mem := mem with [R31 + 0x18, el]:u64 <- R2
00024949: R0 := mem[R31 + 0x28, el]:u64
00024951: mem := mem with [R31 + 0x38, el]:u64 <- R0
00024956: R0 := 0x18
0002495b: R30 := 0x410F04
0002495d: call @malloc with return %0002495f

0002495f:
00024965: mem := mem with [R31 + 0x30, el]:u64 <- R0
0002496c: R0 := mem[R31 + 0x30, el]:u64
00024973: R1 := mem[R31 + 0x20, el]:u64
0002497b: mem := mem with [R0, el]:u64 <- R1
00024982: R0 := mem[R31 + 0x30, el]:u64
00024989: R1 := mem[R31 + 0x18, el]:u64
00024991: mem := mem with [R0 + 8, el]:u64 <- R1
00024998: R0 := mem[R31 + 0x30, el]:u64
0002499f: mem := mem with [R0 + 0x10, el]:u64 <- 0
000249a6: R0 := mem[R31 + 0x28, el]:u64
000249ab: VF := 0
000249ae: CF := 1
000249b2: ZF := R0 = 0
000249b6: NF := 63:63[R0]
000249bc: when ZF <> 1 goto %000249ba
0004605c: goto %000257e8

000249ba:
000249c4: R0 := mem[R31 + 0x38, el]:u64
000249cb: R0 := mem[R0 + 0x10, el]:u64
000249d0: VF := 0
000249d3: CF := 1
000249d7: ZF := R0 = 0
000249db: NF := 63:63[R0]
000249e1: when ZF <> 1 goto %000249df
0004605d: goto %000249fa

000249fa:
000249ff: R0 := mem[R31 + 0x38, el]:u64
00024a06: R1 := mem[R31 + 0x30, el]:u64
00024a0e: mem := mem with [R0 + 0x10, el]:u64 <- R1
00024a15: R0 := mem[R31 + 0x28, el]:u64
0004605e: goto %00024a17

000249df:
000249e9: R0 := mem[R31 + 0x38, el]:u64
000249f0: R0 := mem[R0 + 0x10, el]:u64
000249f8: mem := mem with [R31 + 0x38, el]:u64 <- R0
0004605f: goto %000249ba

000257e8:
000257ed: R0 := mem[R31 + 0x30, el]:u64
000257f1: goto %00024a17

00024a17:
00024a1c: R29 := mem[R31, el]:u64
00024a21: R30 := mem[R31 + 8, el]:u64
00024a25: R31 := R31 + 0x40
00024a2a: call R30 with noreturn

00046060: sub plist_count(plist_count_result)
00046380: plist_count_result :: out u32 = low:32[R0]

00024da9:
00024dad: R31 := R31 - 0x20
00024db5: mem := mem with [R31 + 8, el]:u64 <- R0
00024dbc: R0 := mem[R31 + 8, el]:u64
00024dc4: mem := mem with [R31 + 0x18, el]:u64 <- R0
00024dcb: mem := mem with [R31 + 0x14, el]:u32 <- 0
00024dd0: goto %00024dce

00024dce:
00024dd6: R0 := mem[R31 + 0x18, el]:u64
00024ddb: VF := 0
00024dde: CF := 1
00024de2: ZF := R0 = 0
00024de6: NF := 63:63[R0]
00024dec: when ZF <> 1 goto %00024dea
00046061: goto %00024e1a

00024e1a:
00024e1f: R0 := pad:64[mem[R31 + 0x14, el]:u32]
00024e25: R31 := R31 + 0x20
00024e2a: call R30 with noreturn

00024dea:
00024df4: R0 := pad:64[mem[R31 + 0x14, el]:u32]
00024dfa: R0 := pad:64[31:0[R0] + 1]
00024e02: mem := mem with [R31 + 0x14, el]:u32 <- 31:0[R0]
00024e09: R0 := mem[R31 + 0x18, el]:u64
00024e10: R0 := mem[R0 + 0x10, el]:u64
00024e18: mem := mem with [R31 + 0x18, el]:u64 <- R0
00046062: goto %00024dce

00046063: sub plist_del(plist_del_result)
00046381: plist_del_result :: out u32 = low:32[R0]

00024a2c:
00024a30: #146 := R31 - 0x40
00024a36: mem := mem with [#146, el]:u64 <- R29
00024a3c: mem := mem with [#146 + 8, el]:u64 <- R30
00024a40: R31 := #146
00024a46: R29 := R31
00024a4e: mem := mem with [R31 + 0x18, el]:u64 <- R0
00024a56: mem := mem with [R31 + 0x10, el]:u64 <- R1
00024a5d: mem := mem with [R31 + 0x38, el]:u64 <- 0
00024a64: R0 := mem[R31 + 0x18, el]:u64
00024a6c: mem := mem with [R31 + 0x30, el]:u64 <- R0
00024a71: goto %00024a6f

00024a6f:
00024a77: R0 := mem[R31 + 0x30, el]:u64
00024a7c: VF := 0
00024a7f: CF := 1
00024a83: ZF := R0 = 0
00024a87: NF := 63:63[R0]
00024a8d: when ZF <> 1 goto %00024a8b
00046064: goto %000257e4

000257e4:
000257e6: goto %00024acd

00024a8b:
00024a95: R0 := mem[R31 + 0x30, el]:u64
00024a9c: R0 := mem[R0, el]:u64
00024aa3: R1 := mem[R31 + 0x10, el]:u64
00024aa9: #147 := ~R0
00024aae: #148 := R1 + ~R0
00024ab4: VF := extend:128[#148 + 1] <> extend:128[R1] + extend:128[#147] + 1
00024aba: CF := pad:128[#148 + 1] <> pad:128[R1] + pad:128[#147] + 1
00024abe: ZF := #148 + 1 = 0
00024ac2: NF := 63:63[#148 + 1]
00024ac8: when ZF goto %00024ac6
00046065: goto %000257bf

00024ac6:
00046066: goto %00024acd

00024acd:
00024ad2: R0 := mem[R31 + 0x30, el]:u64
00024ad7: VF := 0
00024ada: CF := 1
00024ade: ZF := R0 = 0
00024ae2: NF := 63:63[R0]
00024ae8: when ZF goto %00024ae6
00046067: goto %00025722

00025722:
00025727: R0 := mem[R31 + 0x30, el]:u64
0002572e: R0 := mem[R0 + 0x10, el]:u64
00025736: mem := mem with [R31 + 0x28, el]:u64 <- R0
0002573d: R0 := mem[R31 + 0x30, el]:u64
00025744: R0 := mem[R0 + 8, el]:u64
00025749: VF := 0
0002574c: CF := 1
00025750: ZF := R0 = 0
00025754: NF := 63:63[R0]
0002575a: when ZF goto %00025758
00046068: goto %000257aa

000257aa:
000257af: R0 := mem[R31 + 0x30, el]:u64
000257b6: R0 := mem[R0 + 8, el]:u64
000257bb: R30 := 0x411000
000257bd: call @free with return %00025758

00025758:
00025762: R0 := mem[R31 + 0x30, el]:u64
00025767: R30 := 0x411008
00025769: call @free with return %0002576b

0002576b:
00025770: R0 := mem[R31 + 0x38, el]:u64
00025775: VF := 0
00025778: CF := 1
0002577c: ZF := R0 = 0
00025780: NF := 63:63[R0]
00025786: when ZF <> 1 goto %00025784
00046069: goto %0002579f

00025784:
0002578e: R0 := mem[R31 + 0x38, el]:u64
00025795: R1 := mem[R31 + 0x28, el]:u64
0002579d: mem := mem with [R0 + 0x10, el]:u64 <- R1
0004606a: goto %00024ae6

00024ae6:
00024af0: R0 := mem[R31 + 0x18, el]:u64
0004606b: goto %00024af2

0002579f:
000257a4: R0 := mem[R31 + 0x28, el]:u64
000257a8: goto %00024af2

00024af2:
00024af7: R29 := mem[R31, el]:u64
00024afc: R30 := mem[R31 + 8, el]:u64
00024b00: R31 := R31 + 0x40
00024b05: call R30 with noreturn

000257bf:
000257c4: R0 := mem[R31 + 0x30, el]:u64
000257cc: mem := mem with [R31 + 0x38, el]:u64 <- R0
000257d3: R0 := mem[R31 + 0x30, el]:u64
000257da: R0 := mem[R0 + 0x10, el]:u64
000257e2: mem := mem with [R31 + 0x30, el]:u64 <- R0
0004606c: goto %00024a6f

0004606d: sub plist_dump(plist_dump_result)
00046382: plist_dump_result :: out u32 = low:32[R0]

00024bc2:
00024bc6: #151 := R31 - 0x30
00024bcc: mem := mem with [#151, el]:u64 <- R29
00024bd2: mem := mem with [#151 + 8, el]:u64 <- R30
00024bd6: R31 := #151
00024bdc: R29 := R31
00024be4: mem := mem with [R31 + 0x18, el]:u64 <- R0
00024beb: R0 := mem[R31 + 0x18, el]:u64
00024bf3: mem := mem with [R31 + 0x28, el]:u64 <- R0
00024bf8: goto %00024bf6

00024bf6:
00024bfe: R0 := mem[R31 + 0x28, el]:u64
00024c03: VF := 0
00024c06: CF := 1
00024c0a: ZF := R0 = 0
00024c0e: NF := 63:63[R0]
00024c14: when ZF <> 1 goto %00024c12
0004606e: goto %00024c61

00024c61:
00024c6a: R29 := mem[R31, el]:u64
00024c6f: R30 := mem[R31 + 8, el]:u64
00024c73: R31 := R31 + 0x30
00024c78: call R30 with noreturn

00024c12:
00024c1c: R0 := mem[R31 + 0x28, el]:u64
00024c23: R1 := mem[R0, el]:u64
00024c2a: R0 := mem[R31 + 0x28, el]:u64
00024c31: R0 := mem[R0 + 8, el]:u64
00024c37: R2 := R0
00024c3c: R0 := 0x41C000
00024c42: R0 := R0 + 0xAD0
00024c47: R30 := 0x4110D0
00024c49: call @printf with return %00024c4b

00024c4b:
00024c50: R0 := mem[R31 + 0x28, el]:u64
00024c57: R0 := mem[R0 + 0x10, el]:u64
00024c5f: mem := mem with [R31 + 0x28, el]:u64 <- R0
0004606f: goto %00024bf6

00046070: sub plist_free(plist_free_result)
00046383: plist_free_result :: out u32 = low:32[R0]

00024e2c:
00024e30: #155 := R31 - 0x30
00024e36: mem := mem with [#155, el]:u64 <- R29
00024e3c: mem := mem with [#155 + 8, el]:u64 <- R30
00024e40: R31 := #155
00024e46: R29 := R31
00024e4e: mem := mem with [R31 + 0x18, el]:u64 <- R0
00024e55: R0 := mem[R31 + 0x18, el]:u64
00024e5d: mem := mem with [R31 + 0x28, el]:u64 <- R0
00024e62: goto %00024e60

00024e60:
00024e68: R0 := mem[R31 + 0x18, el]:u64
00024e6d: VF := 0
00024e70: CF := 1
00024e74: ZF := R0 = 0
00024e78: NF := 63:63[R0]
00024e7e: when ZF <> 1 goto %00024e7c
00046071: goto %00024eee

00024eee:
00024ef1: R0 := 0
00024ef8: R29 := mem[R31, el]:u64
00024efd: R30 := mem[R31 + 8, el]:u64
00024f01: R31 := R31 + 0x30
00024f06: call R30 with noreturn

00024e7c:
00024e86: R0 := mem[R31 + 0x18, el]:u64
00024e8d: R0 := mem[R0 + 0x10, el]:u64
00024e95: mem := mem with [R31 + 0x28, el]:u64 <- R0
00024e9c: R0 := mem[R31 + 0x18, el]:u64
00024ea3: R0 := mem[R0 + 8, el]:u64
00024ea8: VF := 0
00024eab: CF := 1
00024eaf: ZF := R0 = 0
00024eb3: NF := 63:63[R0]
00024eb9: when ZF goto %00024eb7
00046072: goto %00024ed9

00024ed9:
00024ede: R0 := mem[R31 + 0x18, el]:u64
00024ee5: R0 := mem[R0 + 8, el]:u64
00024eea: R30 := 0x411310
00024eec: call @free with return %00024eb7

00024eb7:
00024ec1: R0 := mem[R31 + 0x18, el]:u64
00024ec6: R30 := 0x411318
00024ec8: call @free with return %00024eca

00024eca:
00024ecf: R0 := mem[R31 + 0x28, el]:u64
00024ed7: mem := mem with [R31 + 0x18, el]:u64 <- R0
00046073: goto %00024e60

00046074: sub plist_get(plist_get_result)
00046384: plist_get_result :: out u32 = low:32[R0]

00024c7a:
00024c7e: R31 := R31 - 0x20
00024c86: mem := mem with [R31 + 8, el]:u64 <- R0
00024c8e: mem := mem with [R31, el]:u64 <- R1
00024c95: R0 := mem[R31 + 8, el]:u64
00024c9d: mem := mem with [R31 + 0x18, el]:u64 <- R0
00024ca2: goto %00024ca0

00024ca0:
00024ca8: R0 := mem[R31 + 0x18, el]:u64
00024cad: VF := 0
00024cb0: CF := 1
00024cb4: ZF := R0 = 0
00024cb8: NF := 63:63[R0]
00024cbe: when ZF <> 1 goto %00024cbc
00046075: goto %00025704

00025704:
00025706: goto %00024cfe

00024cbc:
00024cc6: R0 := mem[R31 + 0x18, el]:u64
00024ccd: R0 := mem[R0, el]:u64
00024cd4: R1 := mem[R31, el]:u64
00024cda: #152 := ~R0
00024cdf: #153 := R1 + ~R0
00024ce5: VF := extend:128[#153 + 1] <> extend:128[R1] + extend:128[#152] + 1
00024ceb: CF := pad:128[#153 + 1] <> pad:128[R1] + pad:128[#152] + 1
00024cef: ZF := #153 + 1 = 0
00024cf3: NF := 63:63[#153 + 1]
00024cf9: when ZF goto %00024cf7
00046076: goto %000256ee

00024cf7:
00046077: goto %00024cfe

00024cfe:
00024d03: R0 := mem[R31 + 0x18, el]:u64
00024d08: VF := 0
00024d0b: CF := 1
00024d0f: ZF := R0 = 0
00024d13: NF := 63:63[R0]
00024d19: when ZF goto %00024d17
00046078: goto %000256dc

00024d17:
00024d1f: R0 := 0
00046079: goto %00024d21

000256dc:
000256e1: R0 := mem[R31 + 0x18, el]:u64
000256e8: R0 := mem[R0 + 8, el]:u64
000256ec: goto %00024d21

00024d21:
00024d25: R31 := R31 + 0x20
00024d2a: call R30 with noreturn

000256ee:
000256f3: R0 := mem[R31 + 0x18, el]:u64
000256fa: R0 := mem[R0 + 0x10, el]:u64
00025702: mem := mem with [R31 + 0x18, el]:u64 <- R0
0004607a: goto %00024ca0

0004607b: sub plist_in(plist_in_result)
00046385: plist_in_result :: out u32 = low:32[R0]

00024b07:
00024b0b: R31 := R31 - 0x20
00024b13: mem := mem with [R31 + 8, el]:u64 <- R0
00024b1b: mem := mem with [R31, el]:u64 <- R1
00024b22: R0 := mem[R31 + 8, el]:u64
00024b2a: mem := mem with [R31 + 0x18, el]:u64 <- R0
00024b2f: goto %00024b2d

00024b2d:
00024b35: R0 := mem[R31 + 0x18, el]:u64
00024b3a: VF := 0
00024b3d: CF := 1
00024b41: ZF := R0 = 0
00024b45: NF := 63:63[R0]
00024b4b: when ZF <> 1 goto %00024b49
0004607c: goto %0002571e

0002571e:
00025720: goto %00024b8b

00024b49:
00024b53: R0 := mem[R31 + 0x18, el]:u64
00024b5a: R0 := mem[R0, el]:u64
00024b61: R1 := mem[R31, el]:u64
00024b67: #149 := ~R0
00024b6c: #150 := R1 + ~R0
00024b72: VF := extend:128[#150 + 1] <> extend:128[R1] + extend:128[#149] + 1
00024b78: CF := pad:128[#150 + 1] <> pad:128[R1] + pad:128[#149] + 1
00024b7c: ZF := #150 + 1 = 0
00024b80: NF := 63:63[#150 + 1]
00024b86: when ZF goto %00024b84
0004607d: goto %00025708

00024b84:
0004607e: goto %00024b8b

00024b8b:
00024b90: R0 := mem[R31 + 0x18, el]:u64
00024b95: VF := 0
00024b98: CF := 1
00024b9c: ZF := R0 = 0
00024ba0: NF := 63:63[R0]
00024bac: when ZF goto %00024ba5
00024bad: goto %00024ba8

00024ba8:
00024ba9: R0 := 1
00024baf: goto %00024bab

00024ba5:
00024ba6: R0 := 0
00024bae: goto %00024bab

00024bab:
00024bb5: R0 := pad:64[7:0[R0]]
00024bbb: R31 := R31 + 0x20
00024bc0: call R30 with noreturn

00025708:
0002570d: R0 := mem[R31 + 0x18, el]:u64
00025714: R0 := mem[R0 + 0x10, el]:u64
0002571c: mem := mem with [R31 + 0x18, el]:u64 <- R0
0004607f: goto %00024b2d

00046080: sub plist_pop(plist_pop_result)
00046386: plist_pop_result :: out u32 = low:32[R0]

00024d2c:
00024d30: #154 := R31 - 0x40
00024d36: mem := mem with [#154, el]:u64 <- R29
00024d3c: mem := mem with [#154 + 8, el]:u64 <- R30
00024d40: R31 := #154
00024d46: R29 := R31
00024d4e: mem := mem with [R31 + 0x18, el]:u64 <- R0
00024d56: mem := mem with [R31 + 0x10, el]:u64 <- R1
00024d5d: mem := mem with [R31 + 0x34, el]:u32 <- 0
00024d64: mem := mem with [R31 + 0x30, el]:u32 <- 0
00024d6b: mem := mem with [R31 + 0x28, el]:u64 <- 0
00024d72: R0 := mem[R31 + 0x18, el]:u64
00024d77: VF := 0
00024d7a: CF := 1
00024d7e: ZF := R0 = 0
00024d82: NF := 63:63[R0]
00024d88: when ZF goto %00024d86
00046081: goto %000256b7

000256b7:
000256bc: R0 := mem[R31 + 0x18, el]:u64
000256c3: R0 := mem[R0, el]:u64
000256c8: VF := 0
000256cb: CF := 1
000256cf: ZF := R0 = 0
000256d3: NF := 63:63[R0]
000256d8: when ZF <> 1 goto %00024f08
00046082: goto %00024d86

00024f08:
00024f0d: R0 := mem[R31 + 0x18, el]:u64
00024f14: R0 := mem[R0, el]:u64
00024f1c: mem := mem with [R31 + 0x38, el]:u64 <- R0
00024f21: goto %00024f1f

00024f1f:
00024f27: R0 := pad:64[mem[R31 + 0x30, el]:u32]
00024f2c: VF := 0
00024f2f: CF := 1
00024f33: ZF := 31:0[R0] = 0
00024f37: NF := 31:31[R0]
00024f3d: when ZF <> 1 goto %00024f3b
00046083: goto %00024fb8

00024fb8:
00024fbd: R0 := mem[R31 + 0x38, el]:u64
00024fc2: VF := 0
00024fc5: CF := 1
00024fc9: ZF := R0 = 0
00024fcd: NF := 63:63[R0]
00024fd3: when ZF <> 1 goto %00024fd1
00046084: goto %00024f3b

00024f3b:
00024f45: R0 := mem[R31 + 0x18, el]:u64
00024f4c: R1 := mem[R31 + 0x38, el]:u64
00024f54: mem := mem with [R0, el]:u64 <- R1
00024f5b: R0 := pad:64[mem[R31 + 0x30, el]:u32]
00024f60: VF := 0
00024f63: CF := 1
00024f67: ZF := 31:0[R0] = 0
00024f6b: NF := 31:31[R0]
00024f71: when ZF goto %00024f6f
00046085: goto %00024f79

00024f6f:
00024f77: R0 := 0
00046086: goto %00024d91

00024f79:
00024f7e: R0 := mem[R31 + 0x10, el]:u64
00024f83: VF := 0
00024f86: CF := 1
00024f8a: ZF := R0 = 0
00024f8e: NF := 63:63[R0]
00024f94: when ZF goto %00024f92
00046087: goto %00024fa2

00024fa2:
00024fa7: R0 := mem[R31 + 0x10, el]:u64
00024fae: R1 := mem[R31 + 0x28, el]:u64
00024fb6: mem := mem with [R0, el]:u64 <- R1
00046088: goto %00024f92

00024f92:
00024f9c: R0 := pad:64[mem[R31 + 0x34, el]:u32]
00024fa0: goto %00024d91

00024fd1:
00024fdb: R0 := mem[R31 + 0x38, el]:u64
00024fe2: R0 := mem[R0, el]:u64
00024fea: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
00024ff1: R0 := mem[R31 + 0x38, el]:u64
00024ff8: R0 := mem[R0 + 8, el]:u64
00025000: mem := mem with [R31 + 0x28, el]:u64 <- R0
00025007: R0 := mem[R31 + 0x38, el]:u64
0002500e: R0 := mem[R0 + 0x10, el]:u64
00025016: mem := mem with [R31 + 0x20, el]:u64 <- R0
0002501d: R0 := pad:64[mem[R31 + 0x34, el]:u32]
00025022: R30 := 0x4111E4
00025025: call @so_closed with return %00025629

00025629:
0002562c: VF := 0
0002562f: CF := 1
00025633: ZF := 31:0[R0] = 0
00025637: NF := 31:31[R0]
0002563d: when ZF goto %0002563b
00046089: goto %0002566a

0002563b:
00025643: R0 := 1
0002564b: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
0004608a: goto %0002564d

0002566a:
0002566f: R0 := pad:64[mem[R31 + 0x34, el]:u32]
00025674: R30 := 0x4111F4
00025677: call @close with return %00025679

00025679:
0002567e: R0 := mem[R31 + 0x38, el]:u64
00025685: R0 := mem[R0 + 8, el]:u64
0002568a: VF := 0
0002568d: CF := 1
00025691: ZF := R0 = 0
00025695: NF := 63:63[R0]
0002569a: when ZF goto %0002564d
0004608b: goto %0002569e

0002569e:
000256a3: R0 := mem[R31 + 0x38, el]:u64
000256aa: R0 := mem[R0 + 8, el]:u64
000256af: R30 := 0x411210
000256b1: call @free with return %000256b3

000256b3:
000256b5: goto %0002564d

0002564d:
00025652: R0 := mem[R31 + 0x38, el]:u64
00025657: R30 := 0x411224
00025659: call @free with return %0002565b

0002565b:
00025660: R0 := mem[R31 + 0x20, el]:u64
00025668: mem := mem with [R31 + 0x38, el]:u64 <- R0
0004608c: goto %00024f1f

00024d86:
00024d8e: R0 := 0
00024d93: goto %00024d91

00024d91:
00024d99: R29 := mem[R31, el]:u64
00024d9e: R30 := mem[R31 + 8, el]:u64
00024da2: R31 := R31 + 0x40
00024da7: call R30 with noreturn

0004608d: sub prepare_http_connect(prepare_http_connect_result)
00046387: prepare_http_connect_result :: out u32 = low:32[R0]

0002ba92:
0002ba96: #272 := R31 - 0x70
0002ba9c: mem := mem with [#272, el]:u64 <- R29
0002baa2: mem := mem with [#272 + 8, el]:u64 <- R30
0002baa6: R31 := #272
0002baac: R29 := R31
0002bab4: mem := mem with [R31 + 0x10, el]:u64 <- R19
0002babc: mem := mem with [R31 + 0x3C, el]:u32 <- 31:0[R0]
0002bac4: mem := mem with [R31 + 0x30, el]:u64 <- R1
0002bacc: mem := mem with [R31 + 0x28, el]:u64 <- R2
0002bad3: mem := mem with [R31 + 0x6C, el]:u32 <- 0
0002bada: R0 := pad:64[mem[R31 + 0x3C, el]:u32]
0002badf: VF := 0
0002bae2: CF := 1
0002bae6: ZF := 31:0[R0] = 0
0002baea: NF := 31:31[R0]
0002baf0: when ZF goto %0002baee
0004608e: goto %0002d0e9

0002d0e9:
0002d0ee: R0 := mem[R31 + 0x28, el]:u64
0002d0f3: VF := 0
0002d0f6: CF := 1
0002d0fa: ZF := R0 = 0
0002d0fe: NF := 63:63[R0]
0002d103: when ZF goto %0002baee
0004608f: goto %0002d107

0002d107:
0002d10c: R0 := mem[R31 + 0x28, el]:u64
0002d113: R0 := pad:64[mem[R0]]
0002d118: VF := 0
0002d11b: CF := 1
0002d11f: ZF := 31:0[R0] = 0
0002d123: NF := 31:31[R0]
0002d128: when ZF <> 1 goto %0002cb95
00046090: goto %0002baee

0002cb95:
0002cb98: R30 := 0x405F24
0002cb9a: call @new_rr_data with return %0002cb9c

0002cb9c:
0002cba2: mem := mem with [R31 + 0x50, el]:u64 <- R0
0002cba7: R30 := 0x405F2C
0002cba9: call @new_rr_data with return %0002cbab

0002cbab:
0002cbb1: mem := mem with [R31 + 0x48, el]:u64 <- R0
0002cbb8: R0 := mem[R31 + 0x50, el]:u64
0002cbbd: R1 := 1
0002cbc5: mem := mem with [R0, el]:u32 <- 31:0[R1]
0002cbcc: R19 := mem[R31 + 0x50, el]:u64
0002cbd1: R0 := 0x419000
0002cbd7: R0 := R0 + 0x320
0002cbdc: R30 := 0x405F4C
0002cbde: call @strdup with return %0002cbe0

0002cbe0:
0002cbe6: mem := mem with [R19 + 0x28, el]:u64 <- R0
0002cbed: R19 := mem[R31 + 0x50, el]:u64
0002cbf4: R0 := mem[R31 + 0x28, el]:u64
0002cbf9: R30 := 0x405F5C
0002cbfb: call @strdup with return %0002cbfd

0002cbfd:
0002cc03: mem := mem with [R19 + 0x30, el]:u64 <- R0
0002cc0a: R19 := mem[R31 + 0x50, el]:u64
0002cc11: R0 := mem[R31 + 0x28, el]:u64
0002cc16: R30 := 0x405F6C
0002cc18: call @strdup with return %0002cc1a

0002cc1a:
0002cc20: mem := mem with [R19 + 0x40, el]:u64 <- R0
0002cc27: R0 := mem[R31 + 0x50, el]:u64
0002cc2e: R0 := mem[R0 + 0x40, el]:u64
0002cc33: R1 := 0x3A
0002cc38: R30 := 0x405F80
0002cc3a: call @strchr with return %0002cc3c

0002cc3c:
0002cc42: mem := mem with [R31 + 0x58, el]:u64 <- R0
0002cc49: R0 := mem[R31 + 0x58, el]:u64
0002cc4e: VF := 0
0002cc51: CF := 1
0002cc55: ZF := R0 = 0
0002cc59: NF := 63:63[R0]
0002cc5f: when ZF goto %0002cc5d
00046091: goto %0002d0b8

0002d0b8:
0002d0bd: R0 := mem[R31 + 0x58, el]:u64
0002d0c4: mem := mem with [R0] <- 0
0002d0cb: R0 := mem[R31 + 0x58, el]:u64
0002d0d1: R0 := R0 + 1
0002d0d8: R19 := mem[R31 + 0x50, el]:u64
0002d0dd: R30 := 0x405FA8
0002d0df: call @atoi with return %0002d0e1

0002d0e1:
0002d0e7: mem := mem with [R19 + 0x20, el]:u32 <- 31:0[R0]
00046092: goto %0002cc5d

0002cc5d:
0002cc67: R19 := mem[R31 + 0x50, el]:u64
0002cc6c: R0 := 0x419000
0002cc72: R0 := R0 + 0x488
0002cc77: R30 := 0x405FBC
0002cc79: call @strdup with return %0002cc7b

0002cc7b:
0002cc81: mem := mem with [R19 + 0x48, el]:u64 <- R0
0002cc88: R0 := mem[R31 + 0x50, el]:u64
0002cc8f: R4 := mem[R0 + 8, el]:u64
0002cc96: R19 := mem[R31 + 0x50, el]:u64
0002cc9b: R3 := 1
0002cca0: R0 := 0x419000
0002cca6: R2 := R0 + 0x1D8
0002ccab: R0 := 0x419000
0002ccb1: R1 := R0 + 0x1E8
0002ccb7: R0 := R4
0002ccbc: R30 := 0x405FE8
0002ccbe: call @hlist_mod with return %0002ccc0

0002ccc0:
0002ccc6: mem := mem with [R19 + 8, el]:u64 <- R0
0002cccb: R0 := 0x430000
0002ccd1: R0 := R0 + 0x428
0002ccd8: R0 := mem[R0, el]:u64
0002cce0: mem := mem with [R31 + 0x60, el]:u64 <- R0
0002cce5: goto %0002cce3

0002cce3:
0002cceb: R0 := mem[R31 + 0x60, el]:u64
0002ccf0: VF := 0
0002ccf3: CF := 1
0002ccf7: ZF := R0 = 0
0002ccfb: NF := 63:63[R0]
0002cd01: when ZF <> 1 goto %0002ccff
00046093: goto %0002cd6b

0002cd6b:
0002cd6e: R0 := 0x430000
0002cd74: R0 := R0 + 0x390
0002cd7b: R0 := pad:64[mem[R0, el]:u32]
0002cd80: VF := 0
0002cd83: CF := 1
0002cd87: ZF := 31:0[R0] = 0
0002cd8b: NF := 31:31[R0]
0002cd91: when ZF goto %0002cd8f
00046094: goto %0002d0a6

0002d0a6:
0002d0a9: R0 := 0x419000
0002d0af: R0 := R0 + 0x498
0002d0b4: R30 := 0x406068
0002d0b6: call @puts with return %0002cd8f

0002cd8f:
0002cd99: R1 := mem[R31 + 0x50, el]:u64
0002cda0: R2 := mem[R31 + 0x48, el]:u64
0002cda6: R0 := R31 + 0x3C
0002cdad: R3 := mem[R31 + 0x30, el]:u64
0002cdb2: R30 := 0x40607C
0002cdb4: call @proxy_authenticate with return %0002cdb6

0002cdb6:
0002cdb9: VF := 0
0002cdbc: CF := 1
0002cdc0: ZF := 31:0[R0] = 0
0002cdc4: NF := 31:31[R0]
0002cdca: when ZF goto %0002cdc8
00046095: goto %0002ce0b

0002cdc8:
0002cdd0: R0 := 0x419000
0002cdd6: R1 := R0 + 0x570
0002cddb: R0 := 3
0002cde0: R30 := 0x4061F0
0002cde2: call @syslog with return %0002cde4

0002cde4:
0002cde7: goto %0002cde5

0002ce0b:
0002ce10: R0 := mem[R31 + 0x48, el]:u64
0002ce17: R0 := pad:64[mem[R0 + 0x10, el]:u32]
0002ce1d: #285 := 31:0[R0] - 0x197
0002ce22: VF := extend:64[#285] <> extend:64[31:0[R0]] - 0x197
0002ce27: CF := pad:64[#285] <> pad:64[31:0[R0]] + 0xFFFFFE69
0002ce2b: ZF := #285 = 0
0002ce2f: NF := 31:31[#285]
0002ce35: when ZF <> 1 goto %0002ce33
00046096: goto %0002cf22

0002cf22:
0002cf25: R0 := 0x430000
0002cf2b: R0 := R0 + 0x390
0002cf32: R0 := pad:64[mem[R0, el]:u32]
0002cf37: VF := 0
0002cf3a: CF := 1
0002cf3e: ZF := 31:0[R0] = 0
0002cf42: NF := 31:31[R0]
0002cf48: when ZF goto %0002cf46
00046097: goto %0002d07f

0002d07f:
0002d082: R0 := 0x419000
0002d088: R0 := R0 + 0x4B8
0002d08d: R30 := 0x4060B4
0002d08f: call @puts with return %0002d091

0002d091:
0002d096: R0 := mem[R31 + 0x50, el]:u64
0002d09d: R0 := mem[R0 + 8, el]:u64
0002d0a2: R30 := 0x4060C0
0002d0a4: call @hlist_dump with return %0002cf46

0002cf46:
0002cf50: R0 := pad:64[mem[R31 + 0x3C, el]:u32]
0002cf57: R1 := mem[R31 + 0x50, el]:u64
0002cf5c: R30 := 0x4060CC
0002cf5e: call @headers_send with return %0002cf60

0002cf60:
0002cf63: VF := 0
0002cf66: CF := 1
0002cf6a: ZF := 31:0[R0] = 0
0002cf6e: NF := 31:31[R0]
0002cf74: when ZF <> 1 goto %0002cf72
00046098: goto %0002d069

0002cf72:
0002cf7a: R0 := 0x430000
0002cf80: R0 := R0 + 0x390
0002cf87: R0 := pad:64[mem[R0, el]:u32]
0002cf8c: VF := 0
0002cf8f: CF := 1
0002cf93: ZF := 31:0[R0] = 0
0002cf97: NF := 31:31[R0]
0002cf9d: when ZF goto %0002cf9b
00046099: goto %0002d057

0002d057:
0002d05a: R0 := 0x419000
0002d060: R0 := R0 + 0x4E8
0002d065: R30 := 0x406104
0002d067: call @puts with return %0002cf9b

0002cf9b:
0002cfa5: R0 := mem[R31 + 0x48, el]:u64
0002cfaa: R30 := 0x40610C
0002cfac: call @reset_rr_data with return %0002cfae

0002cfae:
0002cfb3: R0 := pad:64[mem[R31 + 0x3C, el]:u32]
0002cfba: R1 := mem[R31 + 0x48, el]:u64
0002cfbf: R30 := 0x406118
0002cfc1: call @headers_recv with return %0002cfc3

0002cfc3:
0002cfc6: VF := 0
0002cfc9: CF := 1
0002cfcd: ZF := 31:0[R0] = 0
0002cfd1: NF := 31:31[R0]
0002cfd7: when ZF <> 1 goto %0002cfd5
0004609a: goto %0002d018

0002cfd5:
0002cfdd: R0 := 0x430000
0002cfe3: R0 := R0 + 0x390
0002cfea: R0 := pad:64[mem[R0, el]:u32]
0002cfef: VF := 0
0002cff2: CF := 1
0002cff6: ZF := 31:0[R0] = 0
0002cffa: NF := 31:31[R0]
0002cfff: when ZF goto %0002ce33
0004609b: goto %0002d003

0002d003:
0002d008: R0 := mem[R31 + 0x48, el]:u64
0002d00f: R0 := mem[R0 + 8, el]:u64
0002d014: R30 := 0x406164
0002d016: call @hlist_dump with return %0002ce33

0002ce33:
0002ce3d: R0 := mem[R31 + 0x48, el]:u64
0002ce44: R0 := pad:64[mem[R0 + 0x10, el]:u32]
0002ce4a: #286 := 31:0[R0] - 0xC8
0002ce4f: VF := extend:64[#286] <> extend:64[31:0[R0]] - 0xC8
0002ce54: CF := pad:64[#286] <> pad:64[31:0[R0]] + 0xFFFFFF38
0002ce58: ZF := #286 = 0
0002ce5c: NF := 31:31[#286]
0002ce62: when ZF <> 1 goto %0002ce60
0004609c: goto %0002ced6

0002ce60:
0002ce6a: R0 := mem[R31 + 0x48, el]:u64
0002ce71: R0 := pad:64[mem[R0 + 0x10, el]:u32]
0002ce77: #287 := 31:0[R0] - 0x197
0002ce7c: VF := extend:64[#287] <> extend:64[31:0[R0]] - 0x197
0002ce81: CF := pad:64[#287] <> pad:64[31:0[R0]] + 0xFFFFFE69
0002ce85: ZF := #287 = 0
0002ce89: NF := 31:31[#287]
0002ce8f: when ZF <> 1 goto %0002ce8d
0004609d: goto %0002ceb4

0002ce8d:
0002ce97: R2 := mem[R31 + 0x28, el]:u64
0002ce9c: R0 := 0x419000
0002cea2: R1 := R0 + 0x548
0002cea7: R0 := 3
0002ceac: R30 := 0x4061DC
0002ceae: call @syslog with return %0002ceb0

0002ceb0:
0002ceb2: goto %0002cde5

0002ceb4:
0002ceb9: R2 := mem[R31 + 0x28, el]:u64
0002cebe: R0 := 0x419000
0002cec4: R1 := R0 + 0x520
0002cec9: R0 := 3
0002cece: R30 := 0x4061C4
0002ced0: call @syslog with return %0002ced2

0002ced2:
0002ced4: goto %0002cde5

0002ced6:
0002ced9: R0 := 0x430000
0002cedf: R0 := R0 + 0x390
0002cee6: R0 := pad:64[mem[R0, el]:u32]
0002ceeb: VF := 0
0002ceee: CF := 1
0002cef2: ZF := 31:0[R0] = 0
0002cef6: NF := 31:31[R0]
0002cefc: when ZF goto %0002cefa
0004609e: goto %0002cf10

0002cf10:
0002cf13: R0 := 0x419000
0002cf19: R0 := R0 + 0x3B8
0002cf1e: R30 := 0x406194
0002cf20: call @puts with return %0002cefa

0002cefa:
0002cf02: R0 := 1
0002cf0a: mem := mem with [R31 + 0x6C, el]:u32 <- 31:0[R0]
0002cf0e: goto %0002cde5

0002d018:
0002d01b: R0 := 0x430000
0002d021: R0 := R0 + 0x390
0002d028: R0 := pad:64[mem[R0, el]:u32]
0002d02d: VF := 0
0002d030: CF := 1
0002d034: ZF := 31:0[R0] = 0
0002d038: NF := 31:31[R0]
0002d03d: when ZF goto %0002ce09
0004609f: goto %0002d041

0002d041:
0002d044: R0 := 0x419000
0002d04a: R0 := R0 + 0x500
0002d04f: R30 := 0x406140
0002d051: call @puts with return %0002d053

0002d053:
0002d055: goto %0002ce09

0002ce09:
000460a0: goto %0002cde5

0002d069:
0002d06c: R0 := 0x419000
0002d072: R0 := R0 + 0x4D0
0002d077: R30 := 0x4060E0
0002d079: call @puts with return %0002d07b

0002d07b:
0002d07d: goto %0002cde5

0002cde5:
0002cdec: R0 := R31 + 0x50
0002cdf1: R30 := 0x406200
0002cdf3: call @free_rr_data with return %0002cdf5

0002cdf5:
0002cdf9: R0 := R31 + 0x48
0002cdfe: R30 := 0x406208
0002ce00: call @free_rr_data with return %0002ce02

0002ce02:
0002ce07: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
000460a1: goto %0002baf9

0002ccff:
0002cd09: R0 := mem[R31 + 0x50, el]:u64
0002cd10: R4 := mem[R0 + 8, el]:u64
0002cd17: R0 := mem[R31 + 0x60, el]:u64
0002cd1e: R1 := mem[R0, el]:u64
0002cd25: R0 := mem[R31 + 0x60, el]:u64
0002cd2c: R0 := mem[R0 + 8, el]:u64
0002cd33: R19 := mem[R31 + 0x50, el]:u64
0002cd38: R3 := 1
0002cd3e: R2 := R0
0002cd44: R0 := R4
0002cd49: R30 := 0x40602C
0002cd4b: call @hlist_mod with return %0002cd4d

0002cd4d:
0002cd53: mem := mem with [R19 + 8, el]:u64 <- R0
0002cd5a: R0 := mem[R31 + 0x60, el]:u64
0002cd61: R0 := mem[R0 + 0x18, el]:u64
0002cd69: mem := mem with [R31 + 0x60, el]:u64 <- R0
000460a2: goto %0002cce3

0002baee:
0002baf6: R0 := 0
0002bafb: goto %0002baf9

0002baf9:
0002bb01: R19 := mem[R31 + 0x10, el]:u64
0002bb08: R29 := mem[R31, el]:u64
0002bb0d: R30 := mem[R31 + 8, el]:u64
0002bb11: R31 := R31 + 0x70
0002bb16: call R30 with noreturn

000460a3: sub printf(printf_format, printf_result)
00046388: printf_format :: in u64 = R0
00046389: printf_result :: out u32 = low:32[R0]

000210c7:
0003ffdc: R16 := 0x430000
0003ffe3: R17 := mem[R16 + 0x2D0, el]:u64
0003ffe9: R16 := R16 + 0x2D0
0003ffee: call R17 with noreturn

000460a4: sub printmem(printmem_result)
0004638a: printmem_result :: out u32 = low:32[R0]

00016b02:
00016b06: #22 := R31 - 0x40
00016b0c: mem := mem with [#22, el]:u64 <- R29
00016b12: mem := mem with [#22 + 8, el]:u64 <- R30
00016b16: R31 := #22
00016b1c: R29 := R31
00016b24: mem := mem with [R31 + 0x28, el]:u64 <- R0
00016b2c: mem := mem with [R31 + 0x20, el]:u64 <- R1
00016b34: mem := mem with [R31 + 0x1C, el]:u32 <- 31:0[R2]
00016b3b: R0 := mem[R31 + 0x20, el]:u64
00016b41: R0 := 62:0[R0].0
00016b47: R0 := R0 + 1
00016b4c: R30 := 0x412700
00016b4e: call @zmalloc with return %00016b50

00016b50:
00016b56: mem := mem with [R31 + 0x30, el]:u64 <- R0
00016b5d: mem := mem with [R31 + 0x38, el]:u64 <- 0
00016b62: goto %00016b60

00016b60:
00016b68: R1 := mem[R31 + 0x38, el]:u64
00016b6f: R0 := mem[R31 + 0x20, el]:u64
00016b75: #23 := ~R0
00016b7a: #24 := R1 + ~R0
00016b80: VF := extend:128[#24 + 1] <> extend:128[R1] + extend:128[#23] + 1
00016b86: CF := pad:128[#24 + 1] <> pad:128[R1] + pad:128[#23] + 1
00016b8a: ZF := #24 + 1 = 0
00016b8e: NF := 63:63[#24 + 1]
00016b94: when CF <> 1 goto %00016b92
000460a5: goto %00016cd2

00016cd2:
00016cd7: R0 := mem[R31 + 0x30, el]:u64
00016cde: R29 := mem[R31, el]:u64
00016ce3: R30 := mem[R31 + 8, el]:u64
00016ce7: R31 := R31 + 0x40
00016cec: call R30 with noreturn

00016b92:
00016b9c: R1 := mem[R31 + 0x28, el]:u64
00016ba3: R0 := mem[R31 + 0x38, el]:u64
00016baa: R0 := R1 + R0
00016bb1: R1 := pad:64[mem[R0]]
00016bb8: R0 := pad:64[mem[R31 + 0x1C, el]:u32]
00016bbe: R0 := pad:64[7:0[R0]]
00016bc3: R2 := 7
00016bca: R0 := pad:64[31:0[R2] + ~31:0[R0] + 1]
00016bd0: R0 := pad:64[7:0[R0]]
00016bd7: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00016bdd: R0 := pad:64[7:0[R0]]
00016be3: R0 := pad:64[31:4[R0]]
00016be9: R0 := pad:64[7:0[R0]]
00016bef: R3 := pad:64[31:0[R0]]
00016bf6: R0 := mem[R31 + 0x38, el]:u64
00016bfc: R0 := 62:0[R0].0
00016c03: R1 := mem[R31 + 0x30, el]:u64
00016c0a: R0 := R1 + R0
00016c0f: R1 := 0x41C000
00016c15: R2 := R1 + 0x878
00016c1b: R1 := extend:64[31:0[R3]]
00016c23: R1 := pad:64[mem[R2 + R1]]
00016c2b: mem := mem with [R0] <- 7:0[R1]
00016c32: R1 := mem[R31 + 0x28, el]:u64
00016c39: R0 := mem[R31 + 0x38, el]:u64
00016c40: R0 := R1 + R0
00016c47: R1 := pad:64[mem[R0]]
00016c4e: R0 := pad:64[mem[R31 + 0x1C, el]:u32]
00016c54: R0 := pad:64[7:0[R0]]
00016c59: R2 := 7
00016c60: R0 := pad:64[31:0[R2] + ~31:0[R0] + 1]
00016c66: R0 := pad:64[7:0[R0]]
00016c6d: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00016c73: R0 := pad:64[7:0[R0]]
00016c79: R3 := pad:64[3:0[R0]]
00016c80: R0 := mem[R31 + 0x38, el]:u64
00016c86: R0 := 62:0[R0].0
00016c8c: R0 := R0 + 1
00016c93: R1 := mem[R31 + 0x30, el]:u64
00016c9a: R0 := R1 + R0
00016c9f: R1 := 0x41C000
00016ca5: R2 := R1 + 0x878
00016cab: R1 := extend:64[31:0[R3]]
00016cb3: R1 := pad:64[mem[R2 + R1]]
00016cbb: mem := mem with [R0] <- 7:0[R1]
00016cc2: R0 := mem[R31 + 0x38, el]:u64
00016cc8: R0 := R0 + 1
00016cd0: mem := mem with [R31 + 0x38, el]:u64 <- R0
000460a6: goto %00016b60

000460a7: sub printuc(printuc_result)
0004638b: printuc_result :: out u32 = low:32[R0]

00026343:
00026347: #177 := R31 - 0x30
0002634d: mem := mem with [#177, el]:u64 <- R29
00026353: mem := mem with [#177 + 8, el]:u64 <- R30
00026357: R31 := #177
0002635d: R29 := R31
00026365: mem := mem with [R31 + 0x18, el]:u64 <- R0
0002636d: mem := mem with [R31 + 0x14, el]:u32 <- 31:0[R1]
00026374: R0 := pad:64[mem[R31 + 0x14, el]:u32]
0002637a: R0 := pad:64[31:0[R0] + 1]
00026380: R1 := pad:64[31:31[R0]]
00026387: R0 := pad:64[31:0[R1] + 31:0[R0]]
0002638d: R0 := pad:64[extend:32[31:1[R0]]]
00026393: R0 := pad:64[31:0[R0] + 1]
00026399: R0 := extend:64[31:0[R0]]
0002639e: R30 := 0x40D8E0
000263a0: call @zmalloc with return %000263a2

000263a2:
000263a8: mem := mem with [R31 + 0x20, el]:u64 <- R0
000263af: mem := mem with [R31 + 0x2C, el]:u32 <- 0
000263b4: goto %000263b2

000263b2:
000263ba: R0 := pad:64[mem[R31 + 0x14, el]:u32]
000263c0: R1 := pad:64[31:31[R0]]
000263c7: R0 := pad:64[31:0[R1] + 31:0[R0]]
000263cd: R0 := pad:64[extend:32[31:1[R0]]]
000263d3: R1 := pad:64[31:0[R0]]
000263da: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
000263e0: #178 := ~31:0[R1]
000263e5: #179 := 31:0[R0] + ~31:0[R1]
000263eb: VF := extend:64[#179 + 1] <> extend:64[31:0[R0]] + extend:64[#178]
          + 1
000263f1: CF := pad:64[#179 + 1] <> pad:64[31:0[R0]] + pad:64[#178] + 1
000263f5: ZF := #179 + 1 = 0
000263f9: NF := 31:31[#179 + 1]
00026400: when NF <> VF goto %000263fe
000460a8: goto %0002645d

0002645d:
00026462: R0 := mem[R31 + 0x20, el]:u64
00026469: R29 := mem[R31, el]:u64
0002646e: R30 := mem[R31 + 8, el]:u64
00026472: R31 := R31 + 0x30
00026477: call R30 with noreturn

000263fe:
00026408: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0002640e: R0 := pad:64[30:0[R0].0]
00026414: R0 := extend:64[31:0[R0]]
0002641b: R1 := mem[R31 + 0x18, el]:u64
00026422: R1 := R1 + R0
00026429: R0 := extend:64[mem[R31 + 0x2C, el]:u32]
00026430: R2 := mem[R31 + 0x20, el]:u64
00026437: R0 := R2 + R0
0002643e: R1 := pad:64[mem[R1]]
00026446: mem := mem with [R0] <- 7:0[R1]
0002644d: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00026453: R0 := pad:64[31:0[R0] + 1]
0002645b: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
000460a9: goto %000263b2

000460aa: sub proxy_authenticate(proxy_authenticate_result)
0004638c: proxy_authenticate_result :: out u32 = low:32[R0]

0002794c:
00027950: #202 := R31 - 0x80
00027956: mem := mem with [#202, el]:u64 <- R29
0002795c: mem := mem with [#202 + 8, el]:u64 <- R30
00027960: R31 := #202
00027966: R29 := R31
0002796e: mem := mem with [R31 + 0x10, el]:u64 <- R19
00027976: mem := mem with [R31 + 0x38, el]:u64 <- R0
0002797e: mem := mem with [R31 + 0x30, el]:u64 <- R1
00027986: mem := mem with [R31 + 0x28, el]:u64 <- R2
0002798e: mem := mem with [R31 + 0x20, el]:u64 <- R3
00027995: mem := mem with [R31 + 0x7C, el]:u32 <- 0
0002799c: mem := mem with [R31 + 0x78, el]:u32 <- 0
000279a1: R0 := 0x1000
000279a9: mem := mem with [R31 + 0x70, el]:u64 <- R0
000279b0: R0 := mem[R31 + 0x70, el]:u64
000279b5: R30 := 0x40F1FC
000279b7: call @zmalloc with return %000279b9

000279b9:
000279bf: mem := mem with [R31 + 0x68, el]:u64 <- R0
000279c6: R2 := mem[R31 + 0x70, el]:u64
000279cb: R0 := 0x41C000
000279d1: R1 := R0 + 0x78
000279d8: R0 := mem[R31 + 0x68, el]:u64
000279dd: R30 := 0x40F214
000279df: call @strlcpy with return %000279e1

000279e1:
000279e5: R0 := R31 + 0x50
000279ec: R1 := mem[R31 + 0x20, el]:u64
000279f1: R30 := 0x40F220
000279f3: call @ntlm_request with return %000279f5

000279f5:
000279fb: mem := mem with [R31 + 0x64, el]:u32 <- 31:0[R0]
00027a02: R0 := pad:64[mem[R31 + 0x64, el]:u32]
00027a07: VF := 0
00027a0a: CF := 1
00027a0e: ZF := 31:0[R0] = 0
00027a12: NF := 31:31[R0]
00027a18: when ZF goto %00027a16
000460ab: goto %00036137

00036137:
0003613c: R0 := mem[R31 + 0x68, el]:u64
00036142: R4 := R0 + 5
00036149: R1 := mem[R31 + 0x50, el]:u64
00036150: R2 := extend:64[mem[R31 + 0x64, el]:u32]
00036157: R0 := mem[R31 + 0x70, el]:u64
0003615d: R0 := R0 - 5
00036163: R3 := R0
00036169: R0 := R4
0003616e: R30 := 0x40F254
00036170: call @to_base64 with return %00036172

00036172:
00036177: R0 := mem[R31 + 0x50, el]:u64
0003617c: R30 := 0x40F25C
0003617e: call @free with return %00027a16

00027a16:
00027a20: R0 := mem[R31 + 0x30, el]:u64
00027a25: R30 := 0x40F264
00027a27: call @dup_rr_data with return %00027a29

00027a29:
00027a2f: mem := mem with [R31 + 0x48, el]:u64 <- R0
00027a36: R0 := mem[R31 + 0x48, el]:u64
00027a3d: R4 := mem[R0 + 8, el]:u64
00027a44: R19 := mem[R31 + 0x48, el]:u64
00027a49: R3 := 1
00027a50: R2 := mem[R31 + 0x68, el]:u64
00027a55: R0 := 0x41C000
00027a5b: R1 := R0 + 0x80
00027a61: R0 := R4
00027a66: R30 := 0x40F28C
00027a68: call @hlist_mod with return %00027a6a

00027a6a:
00027a70: mem := mem with [R19 + 8, el]:u64 <- R0
00027a77: R0 := mem[R31 + 0x30, el]:u64
00027a7c: VF := 0
00027a7f: CF := 1
00027a83: ZF := R0 = 0
00027a87: NF := 63:63[R0]
00027a8d: when ZF goto %00027a8b
000460ac: goto %000360d5

000360d5:
000360da: R0 := mem[R31 + 0x30, el]:u64
000360e1: R0 := pad:64[mem[R0, el]:u32]
000360e6: VF := 0
000360e9: CF := 1
000360ed: ZF := 31:0[R0] = 0
000360f1: NF := 31:31[R0]
000360f6: when ZF goto %00027a8b
000460ad: goto %000360fa

000360fa:
000360ff: R0 := mem[R31 + 0x30, el]:u64
00036106: R0 := mem[R0 + 0x28, el]:u64
0003610c: R1 := R0
00036111: R0 := 0x41C000
00036117: R0 := R0 + 0x98
0003611c: R30 := 0x40F2C4
0003611e: call @strcasecmp with return %00036120

00036120:
00036123: VF := 0
00036126: CF := 1
0003612a: ZF := 31:0[R0] = 0
0003612e: NF := 31:31[R0]
00036133: when ZF goto %0003608d
000460ae: goto %00027a8b

00027a8b:
00027a95: R1 := mem[R31 + 0x28, el]:u64
00027a9c: R0 := mem[R31 + 0x30, el]:u64
00027aa1: R30 := 0x40F2D8
00027aa4: call @http_has_body with return %00035788

00035788:
0003578b: VF := 0
0003578e: CF := 1
00035792: ZF := R0 = 0
00035796: NF := 63:63[R0]
0003579c: when ZF goto %0003579a
000460af: goto %0003608d

0003608d:
00036090: R0 := 0x430000
00036096: R0 := R0 + 0x390
0003609d: R0 := pad:64[mem[R0, el]:u32]
000360a2: VF := 0
000360a5: CF := 1
000360a9: ZF := 31:0[R0] = 0
000360ad: NF := 31:31[R0]
000360b3: when ZF goto %000360b1
000460b0: goto %000360c3

000360c3:
000360c6: R0 := 0x41C000
000360cc: R0 := R0 + 0xA0
000360d1: R30 := 0x40F300
000360d3: call @puts with return %000360b1

000360b1:
000360b9: R0 := 1
000360c1: mem := mem with [R31 + 0x7C, el]:u32 <- 31:0[R0]
000460b1: goto %0003579a

0003579a:
000357a4: R0 := mem[R31 + 0x30, el]:u64
000357a9: VF := 0
000357ac: CF := 1
000357b0: ZF := R0 = 0
000357b4: NF := 63:63[R0]
000357ba: when ZF goto %000357b8
000460b2: goto %00035ff5

00035ff5:
00035ffa: R0 := mem[R31 + 0x30, el]:u64
00036001: R0 := pad:64[mem[R0, el]:u32]
00036006: VF := 0
00036009: CF := 1
0003600d: ZF := 31:0[R0] = 0
00036011: NF := 31:31[R0]
00036016: when ZF goto %000357b8
000460b3: goto %0003601a

0003601a:
0003601f: R0 := mem[R31 + 0x30, el]:u64
00036026: R0 := mem[R0 + 0x28, el]:u64
0003602c: R1 := R0
00036031: R0 := 0x41C000
00036037: R0 := R0 + 0x98
0003603c: R30 := 0x40F33C
0003603e: call @strcasecmp with return %00036040

00036040:
00036043: VF := 0
00036046: CF := 1
0003604a: ZF := 31:0[R0] = 0
0003604e: NF := 31:31[R0]
00036053: when ZF <> 1 goto %000357b8
000460b4: goto %00036057

00036057:
0003605c: R0 := mem[R31 + 0x48, el]:u64
00036063: R0 := mem[R0 + 0x28, el]:u64
00036068: R30 := 0x40F350
0003606a: call @free with return %0003606c

0003606c:
00036071: R19 := mem[R31 + 0x48, el]:u64
00036076: R0 := 0x41C000
0003607c: R0 := R0 + 0xC0
00036081: R30 := 0x40F360
00036083: call @strdup with return %00036085

00036085:
0003608b: mem := mem with [R19 + 0x28, el]:u64 <- R0
000460b5: goto %000357b8

000357b8:
000357c2: R0 := mem[R31 + 0x48, el]:u64
000357c9: R4 := mem[R0 + 8, el]:u64
000357d0: R19 := mem[R31 + 0x48, el]:u64
000357d5: R3 := 1
000357da: R0 := 0x41C000
000357e0: R2 := R0 + 0xC8
000357e5: R0 := 0x41C000
000357eb: R1 := R0 + 0xD0
000357f1: R0 := R4
000357f6: R30 := 0x40F38C
000357f8: call @hlist_mod with return %000357fa

000357fa:
00035800: mem := mem with [R19 + 8, el]:u64 <- R0
00035807: R0 := mem[R31 + 0x48, el]:u64
0003580e: R2 := mem[R0 + 8, el]:u64
00035815: R19 := mem[R31 + 0x48, el]:u64
0003581a: R0 := 0x41C000
00035820: R1 := R0 + 0xE0
00035826: R0 := R2
0003582b: R30 := 0x40F3AC
0003582d: call @hlist_del with return %0003582f

0003582f:
00035835: mem := mem with [R19 + 8, el]:u64 <- R0
0003583a: R0 := 0x430000
00035840: R0 := R0 + 0x390
00035847: R0 := pad:64[mem[R0, el]:u32]
0003584c: VF := 0
0003584f: CF := 1
00035853: ZF := 31:0[R0] = 0
00035857: NF := 31:31[R0]
0003585d: when ZF goto %0003585b
000460b6: goto %00035f8c

00035f8c:
00035f8f: R0 := 0x41C000
00035f95: R0 := R0 + 0xF8
00035f9a: R30 := 0x40F3D0
00035f9c: call @puts with return %00035f9e

00035f9e:
00035fa3: R0 := mem[R31 + 0x48, el]:u64
00035faa: R1 := mem[R0 + 0x28, el]:u64
00035fb1: R0 := mem[R31 + 0x48, el]:u64
00035fb8: R2 := mem[R0 + 0x30, el]:u64
00035fbf: R0 := mem[R31 + 0x48, el]:u64
00035fc6: R0 := mem[R0 + 0x48, el]:u64
00035fcc: R3 := R0
00035fd1: R0 := 0x41C000
00035fd7: R0 := R0 + 0x118
00035fdc: R30 := 0x40F3F8
00035fde: call @printf with return %00035fe0

00035fe0:
00035fe5: R0 := mem[R31 + 0x48, el]:u64
00035fec: R0 := mem[R0 + 8, el]:u64
00035ff1: R30 := 0x40F404
00035ff3: call @hlist_dump with return %0003585b

0003585b:
00035865: R0 := mem[R31 + 0x38, el]:u64
0003586c: R0 := pad:64[mem[R0, el]:u32]
00035873: R1 := mem[R31 + 0x48, el]:u64
00035878: R30 := 0x40F414
0003587a: call @headers_send with return %0003587c

0003587c:
0003587f: VF := 0
00035882: CF := 1
00035886: ZF := 31:0[R0] = 0
0003588a: NF := 31:31[R0]
00035890: when ZF <> 1 goto %0003588e
000460b7: goto %00035f73

0003588e:
00035896: R0 := 0x430000
0003589c: R0 := R0 + 0x390
000358a3: R0 := pad:64[mem[R0, el]:u32]
000358a8: VF := 0
000358ab: CF := 1
000358af: ZF := 31:0[R0] = 0
000358b3: NF := 31:31[R0]
000358b9: when ZF goto %000358b7
000460b8: goto %00035f61

00035f61:
00035f64: R0 := 0x41C000
00035f6a: R0 := R0 + 0x128
00035f6f: R30 := 0x40F44C
00035f71: call @puts with return %000358b7

000358b7:
000358c1: R0 := mem[R31 + 0x28, el]:u64
000358c6: VF := 0
000358c9: CF := 1
000358cd: ZF := R0 = 0
000358d1: NF := 63:63[R0]
000358d7: when ZF goto %000358d5
000460b9: goto %00035f45

00035f45:
00035f49: R0 := R31 + 0x48
00035f4e: R30 := 0x40F460
00035f50: call @free_rr_data with return %00035f52

00035f52:
00035f57: R0 := mem[R31 + 0x28, el]:u64
00035f5f: mem := mem with [R31 + 0x48, el]:u64 <- R0
000460ba: goto %000358d5

000358d5:
000358df: R0 := mem[R31 + 0x48, el]:u64
000358e4: R30 := 0x40F470
000358e6: call @reset_rr_data with return %000358e8

000358e8:
000358ed: R0 := mem[R31 + 0x38, el]:u64
000358f4: R0 := pad:64[mem[R0, el]:u32]
000358fb: R1 := mem[R31 + 0x48, el]:u64
00035900: R30 := 0x40F480
00035902: call @headers_recv with return %00035904

00035904:
00035907: VF := 0
0003590a: CF := 1
0003590e: ZF := 31:0[R0] = 0
00035912: NF := 31:31[R0]
00035918: when ZF <> 1 goto %00035916
000460bb: goto %00035f2c

00035916:
0003591e: R0 := 0x430000
00035924: R0 := R0 + 0x390
0003592b: R0 := pad:64[mem[R0, el]:u32]
00035930: VF := 0
00035933: CF := 1
00035937: ZF := 31:0[R0] = 0
0003593b: NF := 31:31[R0]
00035941: when ZF goto %0003593f
000460bc: goto %00035f17

00035f17:
00035f1c: R0 := mem[R31 + 0x48, el]:u64
00035f23: R0 := mem[R0 + 8, el]:u64
00035f28: R30 := 0x40F4B8
00035f2a: call @hlist_dump with return %0003593f

0003593f:
00035947: R0 := 1
0003594f: mem := mem with [R31 + 0x78, el]:u32 <- 31:0[R0]
00035956: R0 := mem[R31 + 0x48, el]:u64
0003595d: R0 := pad:64[mem[R0 + 0x10, el]:u32]
00035963: #390 := 31:0[R0] - 0x197
00035968: VF := extend:64[#390] <> extend:64[31:0[R0]] - 0x197
0003596d: CF := pad:64[#390] <> pad:64[31:0[R0]] + 0xFFFFFE69
00035971: ZF := #390 = 0
00035975: NF := 31:31[#390]
0003597b: when ZF <> 1 goto %00035979
000460bd: goto %00035c4c

00035979:
00035983: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
00035988: VF := 0
0003598b: CF := 1
0003598f: ZF := 31:0[R0] = 0
00035993: NF := 31:31[R0]
00035999: when ZF goto %00035997
000460be: goto %00035aec

00035aec:
00035aef: R0 := 0x430000
00035af5: R0 := R0 + 0x390
00035afc: R0 := pad:64[mem[R0, el]:u32]
00035b01: VF := 0
00035b04: CF := 1
00035b08: ZF := 31:0[R0] = 0
00035b0c: NF := 31:31[R0]
00035b12: when ZF goto %00035b10
000460bf: goto %00035b9a

00035b9a:
00035b9f: R0 := mem[R31 + 0x30, el]:u64
00035ba4: VF := 0
00035ba7: CF := 1
00035bab: ZF := R0 = 0
00035baf: NF := 63:63[R0]
00035bb5: when ZF goto %00035bb3
000460c0: goto %00035bdb

00035bdb:
00035be0: R0 := mem[R31 + 0x30, el]:u64
00035be7: R0 := pad:64[mem[R0, el]:u32]
00035bec: VF := 0
00035bef: CF := 1
00035bf3: ZF := 31:0[R0] = 0
00035bf7: NF := 31:31[R0]
00035bfc: when ZF goto %00035bb3
000460c1: goto %00035c00

00035c00:
00035c05: R0 := mem[R31 + 0x30, el]:u64
00035c0c: R0 := mem[R0 + 0x28, el]:u64
00035c12: R1 := R0
00035c17: R0 := 0x41C000
00035c1d: R0 := R0 + 0x98
00035c22: R30 := 0x40F6BC
00035c24: call @strcasecmp with return %00035c26

00035c26:
00035c29: VF := 0
00035c2c: CF := 1
00035c30: ZF := 31:0[R0] = 0
00035c34: NF := 31:31[R0]
00035c39: when ZF <> 1 goto %00035bb3
000460c2: goto %00035c3d

00035bb3:
00035bbb: R0 := 0x41C000
00035bc1: R0 := R0 + 0x200
000460c3: goto %00035bc3

00035c3d:
00035c40: R0 := 0x41C000
00035c46: R0 := R0 + 0x1F0
00035c4a: goto %00035bc3

00035bc3:
00035bc7: R1 := R0
00035bcc: R0 := 0x41C000
00035bd2: R0 := R0 + 0x210
00035bd7: R30 := 0x40F6E8
00035bd9: call @printf with return %00035b10

00035b10:
00035b1a: R0 := mem[R31 + 0x28, el]:u64
00035b1f: VF := 0
00035b22: CF := 1
00035b26: ZF := R0 = 0
00035b2a: NF := 63:63[R0]
00035b30: when ZF goto %00035b2e
000460c4: goto %00035b86

00035b86:
00035b8b: R0 := mem[R31 + 0x28, el]:u64
00035b90: R1 := 0x197
00035b98: mem := mem with [R0 + 0x10, el]:u32 <- 31:0[R1]
000460c5: goto %00035b2e

00035b2e:
00035b38: R0 := mem[R31 + 0x38, el]:u64
00035b3f: R0 := pad:64[mem[R0, el]:u32]
00035b46: R1 := mem[R31 + 0x48, el]:u64
00035b4b: R30 := 0x40F710
00035b4d: call @http_body_drop with return %00035b4f

00035b4f:
00035b52: VF := 0
00035b55: CF := 1
00035b59: ZF := 31:0[R0] = 0
00035b5d: NF := 31:31[R0]
00035b62: when ZF <> 1 goto %00035997
000460c6: goto %00035b66

00035b66:
00035b6b: mem := mem with [R31 + 0x78, el]:u32 <- 0
00035b72: R0 := mem[R31 + 0x38, el]:u64
00035b79: R0 := pad:64[mem[R0, el]:u32]
00035b7e: R30 := 0x40F728
00035b80: call @close with return %00035b82

00035b82:
00035b84: goto %000359ca

00035c4c:
00035c51: R0 := mem[R31 + 0x38, el]:u64
00035c58: R0 := pad:64[mem[R0, el]:u32]
00035c5f: R1 := mem[R31 + 0x48, el]:u64
00035c64: R30 := 0x40F4E0
00035c66: call @http_body_drop with return %00035c68

00035c68:
00035c6b: VF := 0
00035c6e: CF := 1
00035c72: ZF := 31:0[R0] = 0
00035c76: NF := 31:31[R0]
00035c7c: when ZF <> 1 goto %00035c7a
000460c7: goto %00035ef7

00035c7a:
00035c84: R0 := mem[R31 + 0x48, el]:u64
00035c8b: R2 := mem[R0 + 8, el]:u64
00035c90: R0 := 0x41C000
00035c96: R1 := R0 + 0x148
00035c9c: R0 := R2
00035ca1: R30 := 0x40F514
00035ca3: call @hlist_get with return %00035ca5

00035ca5:
00035cab: mem := mem with [R31 + 0x50, el]:u64 <- R0
00035cb2: R0 := mem[R31 + 0x50, el]:u64
00035cb7: VF := 0
00035cba: CF := 1
00035cbe: ZF := R0 = 0
00035cc2: NF := 63:63[R0]
00035cc8: when ZF goto %00035cc6
000460c8: goto %00035ce6

00035cc6:
00035cce: R0 := 0x41C000
00035cd4: R1 := R0 + 0x1B8
00035cd9: R0 := 4
00035cde: R30 := 0x40F664
00035ce0: call @syslog with return %00035ce2

00035ce2:
00035ce4: goto %00035997

00035ce6:
00035ceb: R0 := mem[R31 + 0x50, el]:u64
00035cf0: R30 := 0x40F52C
00035cf2: call @strlen with return %00035cf4

00035cf4:
00035cf8: R0 := R0 + 6
00035cfd: R30 := 0x40F534
00035cff: call @zmalloc with return %00035d01

00035d01:
00035d07: mem := mem with [R31 + 0x58, el]:u64 <- R0
00035d0e: R0 := mem[R31 + 0x50, el]:u64
00035d14: R0 := R0 + 5
00035d1a: R1 := R0
00035d21: R0 := mem[R31 + 0x58, el]:u64
00035d26: R30 := 0x40F54C
00035d28: call @from_base64 with return %00035d2a

00035d2a:
00035d30: mem := mem with [R31 + 0x64, el]:u32 <- 31:0[R0]
00035d37: R0 := pad:64[mem[R31 + 0x64, el]:u32]
00035d3d: #391 := 31:0[R0] - 0x28
00035d42: VF := extend:64[#391] <> extend:64[31:0[R0]] - 0x28
00035d47: CF := pad:64[#391] <> pad:64[31:0[R0]] + 0xFFFFFFD8
00035d4b: ZF := #391 = 0
00035d4f: NF := 31:31[#391]
00035d57: when ~(NF = VF & ~ZF) goto %00035d55
000460c9: goto %00035d98

00035d55:
00035d5d: R0 := 0x41C000
00035d63: R1 := R0 + 0x190
00035d68: R0 := 3
00035d6d: R30 := 0x40F63C
00035d6f: call @syslog with return %00035d71

00035d71:
00035d76: R0 := mem[R31 + 0x58, el]:u64
00035d7b: R30 := 0x40F644
00035d7d: call @free with return %00035d7f

00035d7f:
00035d84: R0 := mem[R31 + 0x38, el]:u64
00035d8b: R0 := pad:64[mem[R0, el]:u32]
00035d90: R30 := 0x40F650
00035d92: call @close with return %00035d94

00035d94:
00035d96: goto %000359ca

00035d98:
00035d9d: mem := mem with [R31 + 0x50, el]:u64 <- 0
00035da3: R0 := R31 + 0x50
00035daa: R3 := mem[R31 + 0x20, el]:u64
00035db1: R2 := pad:64[mem[R31 + 0x64, el]:u32]
00035db8: R1 := mem[R31 + 0x58, el]:u64
00035dbd: R30 := 0x40F574
00035dbf: call @ntlm_response with return %00035dc1

00035dc1:
00035dc7: mem := mem with [R31 + 0x64, el]:u32 <- 31:0[R0]
00035dce: R0 := pad:64[mem[R31 + 0x64, el]:u32]
00035dd3: VF := 0
00035dd6: CF := 1
00035dda: ZF := 31:0[R0] = 0
00035dde: NF := 31:31[R0]
00035de6: when ~(NF = VF & ~ZF) goto %00035de4
000460ca: goto %00035e35

00035de4:
00035dec: R0 := 0x41C000
00035df2: R1 := R0 + 0x160
00035df7: R0 := 3
00035dfc: R30 := 0x40F60C
00035dfe: call @syslog with return %00035e00

00035e00:
00035e05: R0 := mem[R31 + 0x58, el]:u64
00035e0a: R30 := 0x40F614
00035e0c: call @free with return %00035e0e

00035e0e:
00035e13: R0 := mem[R31 + 0x50, el]:u64
00035e18: R30 := 0x40F61C
00035e1a: call @free with return %00035e1c

00035e1c:
00035e21: R0 := mem[R31 + 0x38, el]:u64
00035e28: R0 := pad:64[mem[R0, el]:u32]
00035e2d: R30 := 0x40F628
00035e2f: call @close with return %00035e31

00035e31:
00035e33: goto %000359ca

00035e35:
00035e3a: R2 := mem[R31 + 0x70, el]:u64
00035e3f: R0 := 0x41C000
00035e45: R1 := R0 + 0x78
00035e4c: R0 := mem[R31 + 0x68, el]:u64
00035e51: R30 := 0x40F598
00035e53: call @strlcpy with return %00035e55

00035e55:
00035e5a: R0 := mem[R31 + 0x68, el]:u64
00035e60: R4 := R0 + 5
00035e67: R1 := mem[R31 + 0x50, el]:u64
00035e6e: R2 := extend:64[mem[R31 + 0x64, el]:u32]
00035e75: R0 := mem[R31 + 0x70, el]:u64
00035e7b: R0 := R0 - 5
00035e81: R3 := R0
00035e87: R0 := R4
00035e8c: R30 := 0x40F5BC
00035e8e: call @to_base64 with return %00035e90

00035e90:
00035e95: R0 := mem[R31 + 0x30, el]:u64
00035e9c: R4 := mem[R0 + 8, el]:u64
00035ea1: R3 := 1
00035ea8: R2 := mem[R31 + 0x68, el]:u64
00035ead: R0 := 0x41C000
00035eb3: R1 := R0 + 0x80
00035eb9: R0 := R4
00035ebe: R30 := 0x40F5DC
00035ec0: call @hlist_mod with return %00035ec2

00035ec2:
00035ec6: R1 := R0
00035ecd: R0 := mem[R31 + 0x30, el]:u64
00035ed5: mem := mem with [R0 + 8, el]:u64 <- R1
00035edc: R0 := mem[R31 + 0x50, el]:u64
00035ee1: R30 := 0x40F5F0
00035ee3: call @free with return %00035ee5

00035ee5:
00035eea: R0 := mem[R31 + 0x58, el]:u64
00035eef: R30 := 0x40F5F8
00035ef1: call @free with return %00035ef3

00035ef3:
00035ef5: goto %00035997

00035997:
000359a1: R0 := mem[R31 + 0x38, el]:u64
000359a8: R0 := pad:64[mem[R0, el]:u32]
000359ad: R30 := 0x40F738
000359af: call @so_closed with return %000359b1

000359b1:
000359b4: VF := 0
000359b7: CF := 1
000359bb: ZF := 31:0[R0] = 0
000359bf: NF := 31:31[R0]
000359c5: when ZF goto %000359c3
000460cb: goto %00035a26

00035a26:
00035a29: R0 := 0x430000
00035a2f: R0 := R0 + 0x390
00035a36: R0 := pad:64[mem[R0, el]:u32]
00035a3b: VF := 0
00035a3e: CF := 1
00035a42: ZF := 31:0[R0] = 0
00035a46: NF := 31:31[R0]
00035a4c: when ZF goto %00035a4a
000460cc: goto %00035ada

00035ada:
00035add: R0 := 0x41C000
00035ae3: R0 := R0 + 0x238
00035ae8: R30 := 0x40F760
00035aea: call @puts with return %00035a4a

00035a4a:
00035a54: R0 := mem[R31 + 0x38, el]:u64
00035a5b: R0 := pad:64[mem[R0, el]:u32]
00035a60: R30 := 0x40F76C
00035a62: call @close with return %00035a64

00035a64:
00035a69: R0 := mem[R31 + 0x30, el]:u64
00035a70: R1 := mem[R0 + 0x30, el]:u64
00035a77: R0 := mem[R31 + 0x30, el]:u64
00035a7e: R0 := mem[R0 + 0x40, el]:u64
00035a84: R2 := R0
00035a8b: R0 := mem[R31 + 0x20, el]:u64
00035a90: R30 := 0x40F788
00035a92: call @proxy_connect with return %00035a94

00035a94:
00035a98: R1 := pad:64[31:0[R0]]
00035a9f: R0 := mem[R31 + 0x38, el]:u64
00035aa7: mem := mem with [R0, el]:u32 <- 31:0[R1]
00035aae: R0 := mem[R31 + 0x38, el]:u64
00035ab5: R0 := pad:64[mem[R0, el]:u32]
00035aba: VF := 0
00035abd: CF := 1
00035ac1: ZF := 31:0[R0] = 0
00035ac5: NF := 31:31[R0]
00035acb: when NF = VF goto %000359c3
000460cd: goto %00035acf

000359c3:
000460ce: goto %000359ca

00035acf:
00035ad4: mem := mem with [R31 + 0x78, el]:u32 <- 0
00035ad8: goto %000359ca

00035ef7:
00035efc: mem := mem with [R31 + 0x78, el]:u32 <- 0
00035f03: R0 := mem[R31 + 0x38, el]:u64
00035f0a: R0 := pad:64[mem[R0, el]:u32]
00035f0f: R30 := 0x40F4F8
00035f11: call @close with return %00035f13

00035f13:
00035f15: goto %000359ca

00035f2c:
00035f31: R0 := mem[R31 + 0x38, el]:u64
00035f38: R0 := pad:64[mem[R0, el]:u32]
00035f3d: R30 := 0x40F494
00035f3f: call @close with return %00035f41

00035f41:
00035f43: goto %000359ca

00035f73:
00035f78: R0 := mem[R31 + 0x38, el]:u64
00035f7f: R0 := pad:64[mem[R0, el]:u32]
00035f84: R30 := 0x40F428
00035f86: call @close with return %00035f88

00035f88:
00035f8a: goto %000359ca

000359ca:
000359cf: R0 := mem[R31 + 0x28, el]:u64
000359d4: VF := 0
000359d7: CF := 1
000359db: ZF := R0 = 0
000359df: NF := 63:63[R0]
000359e5: when ZF <> 1 goto %000359e3
000460cf: goto %00035a19

00035a19:
00035a1d: R0 := R31 + 0x48
00035a22: R30 := 0x40F7C4
00035a24: call @free_rr_data with return %000359e3

000359e3:
000359ed: R0 := mem[R31 + 0x68, el]:u64
000359f2: R30 := 0x40F7CC
000359f4: call @free with return %000359f6

000359f6:
000359fb: R0 := pad:64[mem[R31 + 0x78, el]:u32]
00035a02: R19 := mem[R31 + 0x10, el]:u64
00035a09: R29 := mem[R31, el]:u64
00035a0e: R30 := mem[R31 + 8, el]:u64
00035a12: R31 := R31 + 0x80
00035a17: call R30 with noreturn

000460d0: sub proxy_connect(proxy_connect_result)
0004638d: proxy_connect_result :: out u32 = low:32[R0]

000276ed:
000276f1: #199 := R31 - 0x80
000276f7: mem := mem with [#199, el]:u64 <- R29
000276fd: mem := mem with [#199 + 8, el]:u64 <- R30
00027701: R31 := #199
00027707: R29 := R31
0002770f: mem := mem with [R31 + 0x28, el]:u64 <- R0
00027717: mem := mem with [R31 + 0x20, el]:u64 <- R1
0002771f: mem := mem with [R31 + 0x18, el]:u64 <- R2
00027726: mem := mem with [R31 + 0x70, el]:u32 <- 0
0002772d: mem := mem with [R31 + 0x64, el]:u32 <- 0
00027734: mem := mem with [R31 + 0x58, el]:u64 <- 0
00027739: R0 := 0x430000
0002773f: R0 := R0 + 0x448
00027746: R0 := pad:64[mem[R0, el]:u32]
0002774b: VF := 0
0002774e: CF := 1
00027752: ZF := 31:0[R0] = 0
00027756: NF := 31:31[R0]
0002775c: when ZF goto %0002775a
000460d1: goto %0003665c

0003665c:
0003665f: R0 := 0x41C000
00036665: R3 := R0 + 0x258
0003666a: R2 := 0x1BA
0003666f: R0 := 0x41B000
00036675: R1 := R0 + 0xFB0
0003667a: R0 := 0x41B000
00036680: R0 := R0 + 0xFE8
00036685: R30 := 0x40EE60
00036687: call @__assert_fail with return %0002775a

0002775a:
00027762: R0 := 0x430000
00027768: R0 := R0 + 0x490
0002776f: R0 := mem[R0, el]:u64
00027777: mem := mem with [R31 + 0x50, el]:u64 <- R0
0002777c: R0 := 0x430000
00027782: R0 := R0 + 0x498
00027789: R0 := mem[R0, el]:u64
00027791: mem := mem with [R31 + 0x78, el]:u64 <- R0
00027796: R0 := 0x430000
0002779c: R0 := R0 + 0x488
000277a3: R0 := pad:64[mem[R0, el]:u32]
000277ab: mem := mem with [R31 + 0x64, el]:u32 <- 31:0[R0]
000277b2: R0 := mem[R31 + 0x78, el]:u64
000277b7: VF := 0
000277ba: CF := 1
000277be: ZF := R0 = 0
000277c2: NF := 63:63[R0]
000277c8: when ZF <> 1 goto %000277c6
000460d2: goto %00036628

00036628:
0003662d: R0 := mem[R31 + 0x50, el]:u64
00036632: VF := 0
00036635: CF := 1
00036639: ZF := R0 = 0
0003663d: NF := 63:63[R0]
00036642: when ZF goto %000277c6
000460d3: goto %00036646

00036646:
0003664b: R0 := mem[R31 + 0x50, el]:u64
00036652: R0 := mem[R0, el]:u64
0003665a: mem := mem with [R31 + 0x78, el]:u64 <- R0
000460d4: goto %000277c6

000277c6:
000277ce: R0 := 0x430000
000277d4: R0 := R0 + 0x4A0
000277d9: R30 := 0x40EEC0
000277dc: call @pthread_mutex_lock with return %000277de

000277de:
000277e3: R1 := mem[R31 + 0x78, el]:u64
000277ea: R0 := mem[R31 + 0x50, el]:u64
000277ef: R30 := 0x40EECC
000277f1: call @proxylist_get with return %000277f3

000277f3:
000277f9: mem := mem with [R31 + 0x48, el]:u64 <- R0
00027800: R0 := mem[R31 + 0x48, el]:u64
00027805: VF := 0
00027808: CF := 1
0002780c: ZF := R0 = 0
00027810: NF := 63:63[R0]
00027816: when ZF goto %00027814
000460d5: goto %000364f4

000364f4:
000364f9: R0 := mem[R31 + 0x48, el]:u64
00036500: R0 := pad:64[mem[R0, el]:u32]
00036506: #396 := 31:0[R0] - 1
0003650b: VF := extend:64[#396] <> extend:64[31:0[R0]] - 1
00036510: CF := pad:64[#396] <> pad:64[31:0[R0]] + 0xFFFFFFFF
00036514: ZF := #396 = 0
00036518: NF := 31:31[#396]
0003651d: when ZF <> 1 goto %00027814
000460d6: goto %00036521

00036521:
00036526: R0 := mem[R31 + 0x48, el]:u64
0003652d: R0 := pad:64[mem[R0 + 0x190, el]:u32]
00036532: VF := 0
00036535: CF := 1
00036539: ZF := 31:0[R0] = 0
0003653d: NF := 31:31[R0]
00036542: when ZF <> 1 goto %00027814
000460d7: goto %00036546

00036546:
00036549: R0 := 0x430000
0003654f: R0 := R0 + 0x390
00036556: R0 := pad:64[mem[R0, el]:u32]
0003655b: VF := 0
0003655e: CF := 1
00036562: ZF := 31:0[R0] = 0
00036566: NF := 31:31[R0]
0003656c: when ZF goto %0003656a
000460d8: goto %00036603

00036603:
00036608: R0 := mem[R31 + 0x48, el]:u64
0003660e: R0 := R0 + 4
00036614: R1 := R0
00036619: R0 := 0x41B000
0003661f: R0 := R0 + 0xFF0
00036624: R30 := 0x40EF28
00036626: call @printf with return %0003656a

0003656a:
00036574: R0 := mem[R31 + 0x48, el]:u64
0003657a: R3 := R0 + 0x188
00036581: R0 := mem[R31 + 0x48, el]:u64
00036587: R1 := R0 + 4
0003658e: R0 := mem[R31 + 0x48, el]:u64
00036595: R0 := pad:64[mem[R0 + 0x44, el]:u32]
0003659b: R2 := pad:64[31:0[R0]]
000365a1: R0 := R3
000365a6: R30 := 0x40EF4C
000365a8: call @so_resolv with return %000365aa

000365aa:
000365ad: VF := 0
000365b0: CF := 1
000365b4: ZF := 31:0[R0] = 0
000365b8: NF := 31:31[R0]
000365be: when ZF goto %000365bc
000460d9: goto %000365eb

000365bc:
000365c6: R0 := mem[R31 + 0x48, el]:u64
000365cc: R0 := R0 + 4
000365d2: R2 := R0
000365d7: R0 := 0x41C000
000365dd: R1 := R0 + 8
000365e2: R0 := 3
000365e7: R30 := 0x40EF80
000365e9: call @syslog with return %00027814

000365eb:
000365f0: R0 := mem[R31 + 0x48, el]:u64
000365f5: R1 := 1
000365fd: mem := mem with [R0 + 0x190, el]:u32 <- 31:0[R1]
00036601: goto %00027814

00027814:
0002781c: R0 := 0x430000
00027822: R0 := R0 + 0x4A0
00027827: R30 := 0x40EF8C
0002782a: call @pthread_mutex_unlock with return %0002782c

0002782c:
00027831: R0 := mem[R31 + 0x48, el]:u64
00027836: VF := 0
00027839: CF := 1
0002783d: ZF := R0 = 0
00027841: NF := 63:63[R0]
00027847: when ZF goto %00027845
000460da: goto %000364c6

000364c6:
000364cb: R0 := mem[R31 + 0x48, el]:u64
000364d2: R0 := pad:64[mem[R0, el]:u32]
000364d7: VF := 0
000364da: CF := 1
000364de: ZF := 31:0[R0] = 0
000364e2: NF := 31:31[R0]
000364e7: when ZF <> 1 goto %00027845
000460db: goto %000364eb

00027845:
0002784d: R0 := 0xFFFFFFFF
00027855: mem := mem with [R31 + 0x74, el]:u32 <- 31:0[R0]
0002785c: R0 := mem[R31 + 0x48, el]:u64
00027861: VF := 0
00027864: CF := 1
00027868: ZF := R0 = 0
0002786c: NF := 63:63[R0]
00027872: when ZF goto %00027870
000460dc: goto %00036484

00036484:
00036489: R0 := mem[R31 + 0x48, el]:u64
00036490: R0 := pad:64[mem[R0 + 0x190, el]:u32]
00036495: VF := 0
00036498: CF := 1
0003649c: ZF := 31:0[R0] = 0
000364a0: NF := 31:31[R0]
000364a5: when ZF goto %00027870
000460dd: goto %000364a9

000364a9:
000364ae: R0 := mem[R31 + 0x48, el]:u64
000364b5: R0 := mem[R0 + 0x188, el]:u64
000364ba: R30 := 0x40EFE0
000364bc: call @so_connect with return %000364be

000364be:
000364c4: mem := mem with [R31 + 0x74, el]:u32 <- 31:0[R0]
000460de: goto %00027870

00027870:
0002787a: R0 := pad:64[mem[R31 + 0x74, el]:u32]
0002787f: VF := 0
00027882: CF := 1
00027886: ZF := 31:0[R0] = 0
0002788a: NF := 31:31[R0]
00027891: when NF = VF goto %0002788f
000460df: goto %000363df

000363df:
000363e4: R1 := mem[R31 + 0x78, el]:u64
000363eb: R0 := mem[R31 + 0x50, el]:u64
000363f0: R30 := 0x40EFFC
000363f2: call @proxylist_get_next with return %000363f4

000363f4:
000363fa: mem := mem with [R31 + 0x40, el]:u64 <- R0
00036401: R0 := mem[R31 + 0x40, el]:u64
00036406: VF := 0
00036409: CF := 1
0003640d: ZF := R0 = 0
00036411: NF := 63:63[R0]
00036416: when ZF goto %0002788f
000460e0: goto %0003641a

0003641a:
0003641f: R0 := mem[R31 + 0x40, el]:u64
00036426: R0 := mem[R0, el]:u64
0003642e: mem := mem with [R31 + 0x78, el]:u64 <- R0
00036435: R0 := mem[R31 + 0x40, el]:u64
0003643c: R0 := mem[R0 + 8, el]:u64
00036444: mem := mem with [R31 + 0x48, el]:u64 <- R0
0003644b: R0 := mem[R31 + 0x48, el]:u64
00036451: R1 := R0 + 4
00036458: R0 := mem[R31 + 0x48, el]:u64
0003645f: R0 := pad:64[mem[R0 + 0x44, el]:u32]
00036465: R3 := pad:64[31:0[R0]]
0003646b: R2 := R1
00036470: R0 := 0x41C000
00036476: R1 := R0 + 0x28
0003647b: R0 := 3
00036480: R30 := 0x40F04C
00036482: call @syslog with return %0002788f

0002788f:
00027899: R0 := pad:64[mem[R31 + 0x74, el]:u32]
0002789e: VF := 0
000278a1: CF := 1
000278a5: ZF := 31:0[R0] = 0
000278a9: NF := 31:31[R0]
000278b0: when NF = VF goto %000278ae
000460e1: goto %00036395

00036395:
0003639a: R0 := pad:64[mem[R31 + 0x70, el]:u32]
000363a0: R0 := pad:64[31:0[R0] + 1]
000363a8: mem := mem with [R31 + 0x70, el]:u32 <- 31:0[R0]
000363af: R1 := pad:64[mem[R31 + 0x70, el]:u32]
000363b6: R0 := pad:64[mem[R31 + 0x64, el]:u32]
000363bc: #394 := ~31:0[R0]
000363c1: #395 := 31:0[R1] + ~31:0[R0]
000363c7: VF := extend:64[#395 + 1] <> extend:64[31:0[R1]] + extend:64[#394]
          + 1
000363cd: CF := pad:64[#395 + 1] <> pad:64[31:0[R1]] + pad:64[#394] + 1
000363d1: ZF := #395 + 1 = 0
000363d5: NF := 31:31[#395 + 1]
000363db: when NF <> VF goto %000277c6
000460e2: goto %000278ae

000278ae:
000278b8: R0 := pad:64[mem[R31 + 0x74, el]:u32]
000278bd: VF := 0
000278c0: CF := 1
000278c4: ZF := 31:0[R0] = 0
000278c8: NF := 31:31[R0]
000278cf: when NF = VF goto %000278cd
000460e3: goto %00036349

00036349:
0003634e: R1 := pad:64[mem[R31 + 0x70, el]:u32]
00036355: R0 := pad:64[mem[R31 + 0x64, el]:u32]
0003635b: #392 := ~31:0[R0]
00036360: #393 := 31:0[R1] + ~31:0[R0]
00036366: VF := extend:64[#393 + 1] <> extend:64[31:0[R1]] + extend:64[#392]
          + 1
0003636c: CF := pad:64[#393 + 1] <> pad:64[31:0[R1]] + pad:64[#392] + 1
00036370: ZF := #393 + 1 = 0
00036374: NF := 31:31[#393 + 1]
0003637a: when NF <> VF goto %000278cd
000460e4: goto %0003637e

0003637e:
00036381: R0 := 0x41C000
00036387: R1 := R0 + 0x50
0003638c: R0 := 3
00036391: R30 := 0x40F0A0
00036393: call @syslog with return %000278cd

000278cd:
000278d5: R0 := 0x430000
000278db: R0 := R0 + 0x498
000278e2: R0 := mem[R0, el]:u64
000278e9: R1 := mem[R31 + 0x78, el]:u64
000278ef: #200 := ~R0
000278f4: #201 := R1 + ~R0
000278fa: VF := extend:128[#201 + 1] <> extend:128[R1] + extend:128[#200] + 1
00027900: CF := pad:128[#201 + 1] <> pad:128[R1] + pad:128[#200] + 1
00027904: ZF := #201 + 1 = 0
00027908: NF := 63:63[#201 + 1]
0002790e: when ZF goto %0002790c
000460e5: goto %000361fb

000361fb:
000361fe: R0 := 0x430000
00036204: R0 := R0 + 0x3F8
00036209: R30 := 0x40F0C4
0003620b: call @pthread_mutex_lock with return %0003620d

0003620d:
00036210: R0 := 0x430000
00036216: R0 := R0 + 0x3F0
0003621d: R0 := mem[R0, el]:u64
00036225: mem := mem with [R31 + 0x68, el]:u64 <- R0
0003622a: goto %00036228

00036228:
00036230: R0 := mem[R31 + 0x68, el]:u64
00036235: VF := 0
00036238: CF := 1
0003623c: ZF := R0 = 0
00036240: NF := 63:63[R0]
00036246: when ZF <> 1 goto %00036244
000460e6: goto %00036283

00036283:
00036286: R0 := 0x430000
0003628c: R0 := R0 + 0x3F0
00036293: R0 := mem[R0, el]:u64
00036298: R30 := 0x40F114
0003629a: call @plist_free with return %0003629c

0003629c:
0003629f: R0 := 0x430000
000362a5: R0 := R0 + 0x3F8
000362aa: R30 := 0x40F120
000362ac: call @pthread_mutex_unlock with return %000362ae

000362ae:
000362b1: R0 := 0x430000
000362b7: R0 := R0 + 0x4A0
000362bc: R30 := 0x40F12C
000362be: call @pthread_mutex_lock with return %000362c0

000362c0:
000362c3: R0 := 0x430000
000362c9: R0 := R0 + 0x498
000362d0: R1 := mem[R31 + 0x78, el]:u64
000362d8: mem := mem with [R0, el]:u64 <- R1
000362dd: R0 := 0x430000
000362e3: R0 := R0 + 0x448
000362ea: R0 := pad:64[mem[R0, el]:u32]
000362ef: VF := 0
000362f2: CF := 1
000362f6: ZF := 31:0[R0] = 0
000362fa: NF := 31:31[R0]
00036300: when ZF goto %000362fe
000460e7: goto %00036315

00036315:
0003631a: R0 := mem[R31 + 0x58, el]:u64
0003631f: VF := 0
00036322: CF := 1
00036326: ZF := R0 = 0
0003632a: NF := 63:63[R0]
0003632f: when ZF goto %000362fe
000460e8: goto %00036333

00036333:
00036338: R0 := mem[R31 + 0x58, el]:u64
0003633f: R1 := mem[R31 + 0x78, el]:u64
00036347: mem := mem with [R0 + 0x10, el]:u64 <- R1
000460e9: goto %000362fe

000362fe:
00036306: R0 := 0x430000
0003630c: R0 := R0 + 0x4A0
00036311: R30 := 0x40F174
00036313: call @pthread_mutex_unlock with return %0002790c

0002790c:
00027916: R0 := pad:64[mem[R31 + 0x74, el]:u32]
0002791b: VF := 0
0002791e: CF := 1
00027922: ZF := 31:0[R0] = 0
00027926: NF := 31:31[R0]
0002792d: when NF <> VF goto %0002792b
000460ea: goto %00036180

00036180:
00036185: R0 := mem[R31 + 0x28, el]:u64
0003618a: VF := 0
0003618d: CF := 1
00036191: ZF := R0 = 0
00036195: NF := 63:63[R0]
0003619a: when ZF goto %0002792b
000460eb: goto %0003619e

0003619e:
000361a1: R0 := 0x430000
000361a7: R0 := R0 + 0x398
000361ae: R1 := mem[R0, el]:u64
000361b3: R0 := 0x430000
000361b9: R0 := R0 + 0x3A4
000361c0: R0 := pad:64[mem[R0, el]:u32]
000361c5: VF := 0
000361c8: CF := 1
000361cc: ZF := 31:0[R0] = 0
000361d0: NF := 31:31[R0]
000361dc: when ZF <> 1 goto %000361d5
000361dd: goto %000361d8

000361d8:
000361d9: R0 := 1
000361df: goto %000361db

000361d5:
000361d6: R0 := 0
000361de: goto %000361db

000361db:
000361e5: R0 := pad:64[7:0[R0]]
000361eb: R2 := pad:64[31:0[R0]]
000361f2: R0 := mem[R31 + 0x28, el]:u64
000361f7: R30 := 0x40F1BC
000361f9: call @copy_auth with return %0002792b

0002792b:
00027935: R0 := pad:64[mem[R31 + 0x74, el]:u32]
000460ec: goto %00027937

00036244:
0003624e: R0 := mem[R31 + 0x68, el]:u64
00036255: R0 := mem[R0 + 0x10, el]:u64
0003625d: mem := mem with [R31 + 0x38, el]:u64 <- R0
00036264: R0 := mem[R31 + 0x68, el]:u64
0003626b: R0 := mem[R0, el]:u64
00036270: R30 := 0x40F0F0
00036272: call @close with return %00036274

00036274:
00036279: R0 := mem[R31 + 0x38, el]:u64
00036281: mem := mem with [R31 + 0x68, el]:u64 <- R0
000460ed: goto %00036228

000364eb:
000364ee: R0 := 0xFFFFFFFE
000364f2: goto %00027937

00027937:
0002793c: R29 := mem[R31, el]:u64
00027941: R30 := mem[R31 + 8, el]:u64
00027945: R31 := R31 + 0x80
0002794a: call R30 with noreturn

000460ee: sub proxy_thread(proxy_thread_result)
0004638e: proxy_thread_result :: out u32 = low:32[R0]

000287b0:
000287b4: #221 := R31 - 0x40
000287ba: mem := mem with [#221, el]:u64 <- R29
000287c0: mem := mem with [#221 + 8, el]:u64 <- R30
000287c4: R31 := #221
000287ca: R29 := R31
000287d2: mem := mem with [R31 + 0x18, el]:u64 <- R0
000287d9: R0 := mem[R31 + 0x18, el]:u64
000287e0: R0 := pad:64[mem[R0, el]:u32]
000287e8: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R0]
000460ef: goto %000287ea

000287ea:
000287ef: mem := mem with [R31 + 0x38, el]:u64 <- 0
000287f6: mem := mem with [R31 + 0x30, el]:u32 <- 0
000287fb: R0 := 0x430000
00028801: R0 := R0 + 0x390
00028808: R0 := pad:64[mem[R0, el]:u32]
0002880d: VF := 0
00028810: CF := 1
00028814: ZF := 31:0[R0] = 0
00028818: NF := 31:31[R0]
0002881e: when ZF goto %0002881c
000460f0: goto %000335f3

000335f3:
000335f8: R1 := pad:64[mem[R31 + 0x34, el]:u32]
000335fd: R0 := 0x41A000
00033603: R0 := R0 + 0xE8
00033608: R30 := 0x408FF4
0003360a: call @printf with return %0003360c

0003360c:
00033611: R1 := pad:64[mem[R31 + 0x34, el]:u32]
00033616: R0 := 0x41A000
0003361c: R0 := R0 + 0x108
00033621: R30 := 0x409004
00033623: call @printf with return %0002881c

0002881c:
00028824: R30 := 0x409008
00028826: call @new_rr_data with return %00028828

00028828:
0002882e: mem := mem with [R31 + 0x20, el]:u64 <- R0
00028835: R0 := mem[R31 + 0x20, el]:u64
0002883b: R1 := R0
00028842: R0 := pad:64[mem[R31 + 0x34, el]:u32]
00028847: R30 := 0x40901C
0002884a: call @headers_recv with return %0002b0ba

0002b0ba:
0002b0bd: VF := 0
0002b0c0: CF := 1
0002b0c4: ZF := 31:0[R0] = 0
0002b0c8: NF := 31:31[R0]
0002b0ce: when ZF <> 1 goto %0002b0cc
000460f1: goto %000335e2

0002b0cc:
0002b0d6: R0 := mem[R31 + 0x38, el]:u64
0002b0db: VF := 0
0002b0de: CF := 1
0002b0e2: ZF := R0 = 0
0002b0e6: NF := 63:63[R0]
0002b0ec: when ZF goto %0002b0ea
000460f2: goto %000335c6

000335c6:
000335ca: R0 := R31 + 0x20
000335cf: R30 := 0x409044
000335d1: call @free_rr_data with return %000335d3

000335d3:
000335d8: R0 := mem[R31 + 0x38, el]:u64
000335e0: mem := mem with [R31 + 0x20, el]:u64 <- R0
000460f3: goto %0002b0ea

0002b0ea:
0002b0f4: R0 := mem[R31 + 0x20, el]:u64
0002b0fb: R3 := mem[R0 + 8, el]:u64
0002b100: R0 := 0x41A000
0002b106: R2 := R0 + 0x128
0002b10b: R0 := 0x41A000
0002b111: R1 := R0 + 0x138
0002b117: R0 := R3
0002b11c: R30 := 0x40906C
0002b11e: call @hlist_subcmp with return %0002b120

0002b120:
0002b126: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
0002b12d: R0 := mem[R31 + 0x20, el]:u64
0002b134: R0 := mem[R0 + 0x40, el]:u64
0002b139: R30 := 0x40907C
0002b13b: call @noproxy_match with return %0002b13d

0002b13d:
0002b140: VF := 0
0002b143: CF := 1
0002b147: ZF := 31:0[R0] = 0
0002b14b: NF := 31:31[R0]
0002b151: when ZF goto %0002b14f
000460f4: goto %0003359f

0002b14f:
0002b159: R0 := mem[R31 + 0x20, el]:u64
0002b15f: R1 := R0
0002b166: R0 := mem[R31 + 0x18, el]:u64
0002b16b: R30 := 0x4090AC
0002b16e: call @forward_request with return %0002ff4c

0002ff4c:
0002ff52: mem := mem with [R31 + 0x38, el]:u64 <- R0
0002ff59: R0 := mem[R31 + 0x38, el]:u64
0002ff5f: #314 := R0 + 2
0002ff64: VF := extend:128[#314] <> extend:128[R0] + 2
0002ff69: CF := pad:128[#314] <> pad:128[R0] + 2
0002ff6d: ZF := #314 = 0
0002ff71: NF := 63:63[#314]
0002ff77: when ZF <> 1 goto %0002ff75
000460f5: goto %00031a5e

00031a5e:
00031a63: R0 := mem[R31 + 0x20, el]:u64
00031a69: R1 := R0
00031a70: R0 := mem[R31 + 0x18, el]:u64
00031a75: R30 := 0x4090CC
00031a78: call @direct_request with return %00033597

00033597:
0003359d: mem := mem with [R31 + 0x38, el]:u64 <- R0
000460f6: goto %0002ff75

0003359f:
000335a4: R0 := mem[R31 + 0x20, el]:u64
000335aa: R1 := R0
000335b1: R0 := mem[R31 + 0x18, el]:u64
000335b6: R30 := 0x409094
000335b8: call @direct_request with return %000335ba

000335ba:
000335c0: mem := mem with [R31 + 0x38, el]:u64 <- R0
000335c4: goto %0002ff75

0002ff75:
0002ff7d: R0 := 0x430000
0002ff83: R0 := R0 + 0x390
0002ff8a: R0 := pad:64[mem[R0, el]:u32]
0002ff8f: VF := 0
0002ff92: CF := 1
0002ff96: ZF := 31:0[R0] = 0
0002ff9a: NF := 31:31[R0]
0002ffa0: when ZF goto %0002ff9e
000460f7: goto %00031a45

00031a45:
00031a4a: R1 := mem[R31 + 0x38, el]:u64
00031a4f: R0 := 0x41A000
00031a55: R0 := R0 + 0x150
00031a5a: R30 := 0x4090F4
00031a5c: call @printf with return %0002ff9e

0002ff9e:
0002ffa8: R0 := mem[R31 + 0x38, el]:u64
0002ffad: VF := 0
0002ffb0: CF := 1
0002ffb4: ZF := R0 = 0
0002ffb8: NF := 63:63[R0]
0002ffbe: when ZF goto %0002ffbc
000460f8: goto %00031a1f

00031a1f:
00031a24: R0 := mem[R31 + 0x38, el]:u64
00031a2a: #354 := R0 + 1
00031a2f: VF := extend:128[#354] <> extend:128[R0] + 1
00031a34: CF := pad:128[#354] <> pad:128[R0] + 1
00031a38: ZF := #354 = 0
00031a3c: NF := 63:63[#354]
00031a41: when ZF <> 1 goto %0002b0cc
000460f9: goto %0002ffbc

0002ffbc:
0002ffc5: R0 := R31 + 0x20
0002ffca: R30 := 0x409114
0002ffcc: call @free_rr_data with return %0002ffce

0002ffce:
0002ffd3: R0 := pad:64[mem[R31 + 0x30, el]:u32]
0002ffd8: VF := 0
0002ffdb: CF := 1
0002ffdf: ZF := 31:0[R0] = 0
0002ffe3: NF := 31:31[R0]
0002ffe9: when ZF goto %0002ffe7
000460fa: goto %000319d0

000319d0:
000319d5: R0 := mem[R31 + 0x38, el]:u64
000319db: #353 := R0 + 1
000319e0: VF := extend:128[#353] <> extend:128[R0] + 1
000319e5: CF := pad:128[#353] <> pad:128[R0] + 1
000319e9: ZF := #353 = 0
000319ed: NF := 63:63[#353]
000319f2: when ZF goto %0002ffe7
000460fb: goto %000319f6

000319f6:
000319f9: R0 := 0x430000
000319ff: R0 := R0 + 0x3A8
00031a06: R0 := pad:64[mem[R0, el]:u32]
00031a0b: VF := 0
00031a0e: CF := 1
00031a12: ZF := 31:0[R0] = 0
00031a16: NF := 31:31[R0]
00031a1b: when ZF goto %000287ea
000460fc: goto %0002ffe7

000335e2:
000335e6: R0 := R31 + 0x20
000335eb: R30 := 0x40902C
000335ed: call @free_rr_data with return %000335ef

000335ef:
000335f1: goto %0002ffe7

0002ffe7:
0002fff1: R0 := mem[R31 + 0x18, el]:u64
0002fff6: R30 := 0x409148
0002fff8: call @free with return %0002fffa

0002fffa:
0002ffff: R0 := pad:64[mem[R31 + 0x34, el]:u32]
00030004: R30 := 0x409150
00030006: call @close with return %00030008

00030008:
0003000b: R0 := 0x430000
00030011: R0 := R0 + 0x3A8
00030018: R0 := pad:64[mem[R0, el]:u32]
0003001d: VF := 0
00030020: CF := 1
00030024: ZF := 31:0[R0] = 0
00030028: NF := 31:31[R0]
0003002e: when ZF <> 1 goto %0003002c
000460fd: goto %0003195f

0003195f:
00031962: R0 := 0x430000
00031968: R0 := R0 + 0x3C0
0003196d: R30 := 0x409170
0003196f: call @pthread_mutex_lock with return %00031971

00031971:
00031974: R30 := 0x409174
00031976: call @pthread_self with return %00031978

00031978:
0003197e: mem := mem with [R31 + 0x28, el]:u64 <- R0
00031983: R0 := 0x430000
00031989: R0 := R0 + 0x3B8
00031990: R0 := mem[R0, el]:u64
00031995: R2 := 0
0003199c: R1 := mem[R31 + 0x28, el]:u64
000319a1: R30 := 0x409190
000319a3: call @plist_add with return %000319a5

000319a5:
000319a9: R1 := R0
000319ae: R0 := 0x430000
000319b4: R0 := R0 + 0x3B8
000319bc: mem := mem with [R0, el]:u64 <- R1
000319c1: R0 := 0x430000
000319c7: R0 := R0 + 0x3C0
000319cc: R30 := 0x4091AC
000319ce: call @pthread_mutex_unlock with return %0003002c

0003002c:
00030034: R0 := 0
0003003b: R29 := mem[R31, el]:u64
00030040: R30 := mem[R31 + 8, el]:u64
00030044: R31 := R31 + 0x40
00030049: call R30 with noreturn

000460fe: sub proxylist_add(proxylist_add_result)
0004638f: proxylist_add_result :: out u32 = low:32[R0]

00026eb0:
00026eb4: #188 := R31 - 0x40
00026eba: mem := mem with [#188, el]:u64 <- R29
00026ec0: mem := mem with [#188 + 8, el]:u64 <- R30
00026ec4: R31 := #188
00026eca: R29 := R31
00026ed2: mem := mem with [R31 + 0x28, el]:u64 <- R0
00026eda: mem := mem with [R31 + 0x20, el]:u64 <- R1
00026ee2: mem := mem with [R31 + 0x18, el]:u64 <- R2
00026ee9: R0 := mem[R31 + 0x28, el]:u64
00026ef1: mem := mem with [R31 + 0x38, el]:u64 <- R0
00026ef6: R0 := 0x18
00026efb: R30 := 0x40E3A8
00026efd: call @malloc with return %00026eff

00026eff:
00026f05: mem := mem with [R31 + 0x30, el]:u64 <- R0
00026f0c: R0 := mem[R31 + 0x30, el]:u64
00026f13: R1 := mem[R31 + 0x20, el]:u64
00026f1b: mem := mem with [R0, el]:u64 <- R1
00026f22: R0 := mem[R31 + 0x30, el]:u64
00026f29: R1 := mem[R31 + 0x18, el]:u64
00026f31: mem := mem with [R0 + 8, el]:u64 <- R1
00026f38: R0 := mem[R31 + 0x30, el]:u64
00026f3f: mem := mem with [R0 + 0x10, el]:u64 <- 0
00026f46: R0 := mem[R31 + 0x28, el]:u64
00026f4b: VF := 0
00026f4e: CF := 1
00026f52: ZF := R0 = 0
00026f56: NF := 63:63[R0]
00026f5c: when ZF <> 1 goto %00026f5a
000460ff: goto %00037261

00026f5a:
00026f64: R0 := mem[R31 + 0x38, el]:u64
00026f6b: R0 := mem[R0 + 0x10, el]:u64
00026f70: VF := 0
00026f73: CF := 1
00026f77: ZF := R0 = 0
00026f7b: NF := 63:63[R0]
00026f81: when ZF <> 1 goto %00026f7f
00046100: goto %00026f9a

00026f9a:
00026f9f: R0 := mem[R31 + 0x38, el]:u64
00026fa6: R1 := mem[R31 + 0x30, el]:u64
00026fae: mem := mem with [R0 + 0x10, el]:u64 <- R1
00026fb5: R0 := mem[R31 + 0x28, el]:u64
00046101: goto %00026fb7

00026f7f:
00026f89: R0 := mem[R31 + 0x38, el]:u64
00026f90: R0 := mem[R0 + 0x10, el]:u64
00026f98: mem := mem with [R31 + 0x38, el]:u64 <- R0
00046102: goto %00026f5a

00037261:
00037266: R0 := mem[R31 + 0x30, el]:u64
0003726a: goto %00026fb7

00026fb7:
00026fbc: R29 := mem[R31, el]:u64
00026fc1: R30 := mem[R31 + 8, el]:u64
00026fc5: R31 := R31 + 0x40
00026fca: call R30 with noreturn

00046103: sub proxylist_dump(proxylist_dump_result)
00046390: proxylist_dump_result :: out u32 = low:32[R0]

00027132:
00027136: #193 := R31 - 0x30
0002713c: mem := mem with [#193, el]:u64 <- R29
00027142: mem := mem with [#193 + 8, el]:u64 <- R30
00027146: R31 := #193
0002714c: R29 := R31
00027154: mem := mem with [R31 + 0x18, el]:u64 <- R0
0002715b: R0 := mem[R31 + 0x18, el]:u64
00027163: mem := mem with [R31 + 0x28, el]:u64 <- R0
00027168: goto %00027166

00027166:
0002716e: R0 := mem[R31 + 0x28, el]:u64
00027173: VF := 0
00027176: CF := 1
0002717a: ZF := R0 = 0
0002717e: NF := 63:63[R0]
00027184: when ZF <> 1 goto %00027182
00046104: goto %00027242

00027242:
0002724b: R29 := mem[R31, el]:u64
00027250: R30 := mem[R31 + 8, el]:u64
00027254: R31 := R31 + 0x30
00027259: call R30 with noreturn

00027182:
0002718c: R0 := mem[R31 + 0x28, el]:u64
00027193: R0 := mem[R0 + 8, el]:u64
0002719a: R0 := pad:64[mem[R0, el]:u32]
0002719f: VF := 0
000271a2: CF := 1
000271a6: ZF := 31:0[R0] = 0
000271aa: NF := 31:31[R0]
000271b0: when ZF <> 1 goto %000271ae
00046105: goto %00027218

000271ae:
000271b8: R0 := mem[R31 + 0x28, el]:u64
000271bf: R1 := mem[R0, el]:u64
000271c6: R0 := mem[R31 + 0x28, el]:u64
000271cd: R0 := mem[R0 + 8, el]:u64
000271d3: R2 := R0 + 4
000271da: R0 := mem[R31 + 0x28, el]:u64
000271e1: R0 := mem[R0 + 8, el]:u64
000271e8: R0 := pad:64[mem[R0 + 0x44, el]:u32]
000271ee: R3 := pad:64[31:0[R0]]
000271f3: R0 := 0x41B000
000271f9: R0 := R0 + 0xE90
000271fe: R30 := 0x40E57C
00027200: call @printf with return %00027202

00027218:
0002721d: R0 := mem[R31 + 0x28, el]:u64
00027224: R0 := mem[R0, el]:u64
0002722a: R1 := R0
0002722f: R0 := 0x41B000
00027235: R0 := R0 + 0xE70
0002723a: R30 := 0x40E548
0002723c: call @printf with return %0002723e

0002723e:
00027240: goto %00027202

00027202:
00027207: R0 := mem[R31 + 0x28, el]:u64
0002720e: R0 := mem[R0 + 0x10, el]:u64
00027216: mem := mem with [R31 + 0x28, el]:u64 <- R0
00046106: goto %00027166

00046107: sub proxylist_free(proxylist_free_result)
00046391: proxylist_free_result :: out u32 = low:32[R0]

0002725b:
0002725f: #194 := R31 - 0x30
00027265: mem := mem with [#194, el]:u64 <- R29
0002726b: mem := mem with [#194 + 8, el]:u64 <- R30
0002726f: R31 := #194
00027275: R29 := R31
0002727d: mem := mem with [R31 + 0x18, el]:u64 <- R0
00027285: mem := mem with [R31 + 0x14, el]:u32 <- 31:0[R1]
0002728a: goto %00027288

00027288:
00027290: R0 := mem[R31 + 0x18, el]:u64
00027295: VF := 0
00027298: CF := 1
0002729c: ZF := R0 = 0
000272a0: NF := 63:63[R0]
000272a6: when ZF <> 1 goto %000272a4
00046108: goto %00027333

00027333:
0002733c: R29 := mem[R31, el]:u64
00027341: R30 := mem[R31 + 8, el]:u64
00027345: R31 := R31 + 0x30
0002734a: call R30 with noreturn

000272a4:
000272ae: R0 := mem[R31 + 0x18, el]:u64
000272b5: R0 := mem[R0 + 0x10, el]:u64
000272bd: mem := mem with [R31 + 0x28, el]:u64 <- R0
000272c4: R0 := pad:64[mem[R31 + 0x14, el]:u32]
000272c9: VF := 0
000272cc: CF := 1
000272d0: ZF := 31:0[R0] = 0
000272d4: NF := 31:31[R0]
000272da: when ZF goto %000272d8
00046109: goto %000272fa

000272fa:
000272ff: R0 := mem[R31 + 0x18, el]:u64
00027306: R0 := mem[R0 + 8, el]:u64
0002730e: mem := mem with [R31 + 0x20, el]:u64 <- R0
00027315: R0 := mem[R31 + 0x20, el]:u64
0002731c: R0 := mem[R0 + 0x188, el]:u64
00027321: R30 := 0x40E5E8
00027323: call @freeaddrinfo with return %00027325

00027325:
0002732a: R0 := mem[R31 + 0x20, el]:u64
0002732f: R30 := 0x40E5F0
00027331: call @free with return %000272d8

000272d8:
000272e2: R0 := mem[R31 + 0x18, el]:u64
000272e7: R30 := 0x40E5F8
000272e9: call @free with return %000272eb

000272eb:
000272f0: R0 := mem[R31 + 0x28, el]:u64
000272f8: mem := mem with [R31 + 0x18, el]:u64 <- R0
0004610a: goto %00027288

0004610b: sub proxylist_get(proxylist_get_result)
00046392: proxylist_get_result :: out u32 = low:32[R0]

00026fcc:
00026fd0: R31 := R31 - 0x20
00026fd8: mem := mem with [R31 + 8, el]:u64 <- R0
00026fe0: mem := mem with [R31, el]:u64 <- R1
00026fe7: R0 := mem[R31 + 8, el]:u64
00026fef: mem := mem with [R31 + 0x18, el]:u64 <- R0
00026ff4: goto %00026ff2

00026ff2:
00026ffa: R0 := mem[R31 + 0x18, el]:u64
00026fff: VF := 0
00027002: CF := 1
00027006: ZF := R0 = 0
0002700a: NF := 63:63[R0]
00027010: when ZF <> 1 goto %0002700e
0004610c: goto %0003725d

0003725d:
0003725f: goto %00027050

0002700e:
00027018: R0 := mem[R31 + 0x18, el]:u64
0002701f: R0 := mem[R0, el]:u64
00027026: R1 := mem[R31, el]:u64
0002702c: #189 := ~R0
00027031: #190 := R1 + ~R0
00027037: VF := extend:128[#190 + 1] <> extend:128[R1] + extend:128[#189] + 1
0002703d: CF := pad:128[#190 + 1] <> pad:128[R1] + pad:128[#189] + 1
00027041: ZF := #190 + 1 = 0
00027045: NF := 63:63[#190 + 1]
0002704b: when ZF goto %00027049
0004610d: goto %00037247

00027049:
0004610e: goto %00027050

00027050:
00027055: R0 := mem[R31 + 0x18, el]:u64
0002705a: VF := 0
0002705d: CF := 1
00027061: ZF := R0 = 0
00027065: NF := 63:63[R0]
0002706b: when ZF goto %00027069
0004610f: goto %00037235

00027069:
00027071: R0 := 0
00046110: goto %00027073

00037235:
0003723a: R0 := mem[R31 + 0x18, el]:u64
00037241: R0 := mem[R0 + 8, el]:u64
00037245: goto %00027073

00027073:
00027077: R31 := R31 + 0x20
0002707c: call R30 with noreturn

00037247:
0003724c: R0 := mem[R31 + 0x18, el]:u64
00037253: R0 := mem[R0 + 0x10, el]:u64
0003725b: mem := mem with [R31 + 0x18, el]:u64 <- R0
00046111: goto %00026ff2

00046112: sub proxylist_get_next(proxylist_get_next_result)
00046393: proxylist_get_next_result :: out u32 = low:32[R0]

0002707e:
00027082: R31 := R31 - 0x20
0002708a: mem := mem with [R31 + 8, el]:u64 <- R0
00027092: mem := mem with [R31, el]:u64 <- R1
00027099: R0 := mem[R31 + 8, el]:u64
000270a1: mem := mem with [R31 + 0x18, el]:u64 <- R0
000270a6: goto %000270a4

000270a4:
000270ac: R0 := mem[R31 + 0x18, el]:u64
000270b1: VF := 0
000270b4: CF := 1
000270b8: ZF := R0 = 0
000270bc: NF := 63:63[R0]
000270c2: when ZF <> 1 goto %000270c0
00046113: goto %00037231

00037231:
00037233: goto %00027102

000270c0:
000270ca: R0 := mem[R31 + 0x18, el]:u64
000270d1: R0 := mem[R0, el]:u64
000270d8: R1 := mem[R31, el]:u64
000270de: #191 := ~R0
000270e3: #192 := R1 + ~R0
000270e9: VF := extend:128[#192 + 1] <> extend:128[R1] + extend:128[#191] + 1
000270ef: CF := pad:128[#192 + 1] <> pad:128[R1] + pad:128[#191] + 1
000270f3: ZF := #192 + 1 = 0
000270f7: NF := 63:63[#192 + 1]
000270fd: when ZF goto %000270fb
00046114: goto %0003721b

000270fb:
00046115: goto %00027102

00027102:
00027107: R0 := mem[R31 + 0x18, el]:u64
0002710c: VF := 0
0002710f: CF := 1
00027113: ZF := R0 = 0
00027117: NF := 63:63[R0]
0002711d: when ZF goto %0002711b
00046116: goto %000371e4

000371e4:
000371e9: R0 := mem[R31 + 0x18, el]:u64
000371f0: R0 := mem[R0 + 0x10, el]:u64
000371f5: VF := 0
000371f8: CF := 1
000371fc: ZF := R0 = 0
00037200: NF := 63:63[R0]
00037205: when ZF goto %0002711b
00046117: goto %00037209

0002711b:
00027125: R0 := mem[R31 + 8, el]:u64
00046118: goto %00027127

00037209:
0003720e: R0 := mem[R31 + 0x18, el]:u64
00037215: R0 := mem[R0 + 0x10, el]:u64
00037219: goto %00027127

00027127:
0002712b: R31 := R31 + 0x20
00027130: call R30 with noreturn

0003721b:
00037220: R0 := mem[R31 + 0x18, el]:u64
00037227: R0 := mem[R0 + 0x10, el]:u64
0003722f: mem := mem with [R31 + 0x18, el]:u64 <- R0
00046119: goto %000270a4

0004611a: sub pthread_attr_destroy(pthread_attr_destroy_result)
00046394: pthread_attr_destroy_result :: out u32 = low:32[R0]

0003b976:
0003fb0c: R16 := 0x430000
0003fb13: R17 := mem[R16 + 0x110, el]:u64
0003fb19: R16 := R16 + 0x110
0003fb1e: call R17 with noreturn

0004611b: sub pthread_attr_init(pthread_attr_init_result)
00046395: pthread_attr_init_result :: out u32 = low:32[R0]

0003b815:
0003f980: R16 := 0x430000
0003f987: R17 := mem[R16 + 0x80, el]:u64
0003f98d: R16 := R16 + 0x80
0003f992: call R17 with noreturn

0004611c: sub pthread_attr_setdetachstate(pthread_attr_setdetachstate_result)
00046396: pthread_attr_setdetachstate_result :: out u32 = low:32[R0]

0003b83b:
0003fb90: R16 := 0x430000
0003fb97: R17 := mem[R16 + 0x140, el]:u64
0003fb9d: R16 := R16 + 0x140
0003fba2: call R17 with noreturn

0004611d: sub pthread_attr_setguardsize(pthread_attr_setguardsize_result)
00046397: pthread_attr_setguardsize_result :: out u32 = low:32[R0]

0003b84e:
0003fda0: R16 := 0x430000
0003fda7: R17 := mem[R16 + 0x200, el]:u64
0003fdad: R16 := R16 + 0x200
0003fdb2: call R17 with noreturn

0004611e: sub pthread_attr_setstacksize(pthread_attr_setstacksize_result)
00046398: pthread_attr_setstacksize_result :: out u32 = low:32[R0]

0003b828:
000400e4: R16 := 0x430000
000400eb: R17 := mem[R16 + 0x330, el]:u64
000400f1: R16 := R16 + 0x330
000400f6: call R17 with noreturn

0004611f: sub pthread_create(pthread_create_result)
00046399: pthread_create_result :: out u32 = low:32[R0]

0003b9fb:
0003fe66: R16 := 0x430000
0003fe6d: R17 := mem[R16 + 0x248, el]:u64
0003fe73: R16 := R16 + 0x248
0003fe78: call R17 with noreturn

00046120: sub pthread_mutex_lock(pthread_mutex_lock_result)
0004639a: pthread_mutex_lock_result :: out u32 = low:32[R0]

000277da:
0004004a: R16 := 0x430000
00040051: R17 := mem[R16 + 0x2F8, el]:u64
00040057: R16 := R16 + 0x2F8
0004005c: call R17 with noreturn

00046121: sub pthread_mutex_unlock(pthread_mutex_unlock_result)
0004639b: pthread_mutex_unlock_result :: out u32 = low:32[R0]

00027828:
00040060: R16 := 0x430000
00040067: R17 := mem[R16 + 0x300, el]:u64
0004006d: R16 := R16 + 0x300
00040072: call R17 with noreturn

00046122: sub pthread_self(pthread_self_result)
0004639c: pthread_self_result :: out u32 = low:32[R0]

000304d0:
0003ff9a: R16 := 0x430000
0003ffa1: R17 := mem[R16 + 0x2B8, el]:u64
0003ffa7: R16 := R16 + 0x2B8
0003ffac: call R17 with noreturn

00046123: sub putchar(putchar_c, putchar_result)
0004639d: putchar_c :: in u32 = low:32[R0]
0004639e: putchar_result :: out u32 = low:32[R0]

0003ad84:
00040034: R16 := 0x430000
0004003b: R17 := mem[R16 + 0x2F0, el]:u64
00040041: R16 := R16 + 0x2F0
00040046: call R17 with noreturn

00046124: sub puts(puts_s, puts_result)
0004639f: puts_s :: in u64 = R0
000463a0: puts_result :: out u32 = low:32[R0]

00021011:
0003fcf0: R16 := 0x430000
0003fcf7: R17 := mem[R16 + 0x1C0, el]:u64
0003fcfd: R16 := R16 + 0x1C0
0003fd02: call R17 with noreturn

00046125: sub random(random_result)
000463a1: random_result :: out u64 = R0

00020fe2:
0003fb7a: R16 := 0x430000
0003fb81: R17 := mem[R16 + 0x138, el]:u64
0003fb87: R16 := R16 + 0x138
0003fb8c: call R17 with noreturn

00046126: sub read(read_fd, read_buf, read_nbytes, read_result)
000463a2: read_fd :: in u32 = low:32[R0]
000463a3: read_buf :: in out u64 = R1
000463a4: read_nbytes :: in u64 = R2
000463a5: read_result :: out u64 = R0

000253c9:
0003fed4: R16 := 0x430000
0003fedb: R17 := mem[R16 + 0x270, el]:u64
0003fee1: R16 := R16 + 0x270
0003fee6: call R17 with noreturn

00046127: sub realloc(realloc_ptr, realloc_size, realloc_result)
000463a6: realloc_ptr :: in out u64 = R0
000463a7: realloc_size :: in u64 = R1
000463a8: realloc_result :: out u64 = R0

0002551b:
0003fbd2: R16 := 0x430000
0003fbd9: R17 := mem[R16 + 0x158, el]:u64
0003fbdf: R16 := R16 + 0x158
0003fbe4: call R17 with noreturn

00046128: sub recv(recv_fd, recv_buf, recv_n, recv_flags, recv_result)
000463a9: recv_fd :: in u32 = low:32[R0]
000463aa: recv_buf :: in out u64 = R1
000463ab: recv_n :: in u64 = R2
000463ac: recv_flags :: in u32 = low:32[R3]
000463ad: recv_result :: out u64 = R0

000250c3:
0003fc56: R16 := 0x430000
0003fc5d: R17 := mem[R16 + 0x188, el]:u64
0003fc63: R16 := R16 + 0x188
0003fc68: call R17 with noreturn

00046129: sub register_tm_clones(register_tm_clones_result)
000463ae: register_tm_clones_result :: out u32 = low:32[R0]

0003f069:
0003f06c: R0 := 0x430000
0003f072: R0 := R0 + 0x348
0003f077: R1 := 0x430000
0003f07d: R1 := R1 + 0x348
0003f084: R1 := R1 + ~R0 + 1
0003f08a: R2 := pad:64[63:63[R1]]
0003f091: R1 := R2 + (R1 ~>> 3)
0003f097: R1 := extend:64[63:1[R1]]
0003f09d: when R1 = 0 goto %0003f09b
0004612a: goto %0003f112

0003f112:
0003f115: R2 := 0x42F000
0003f11c: R2 := mem[R2 + 0xFE0, el]:u64
0003f121: when R2 = 0 goto %0003f09b
0004612b: goto %0003f125

0003f09b:
0003f0a3: call R30 with noreturn

0003f125:
0003f129: R16 := R2
0003f12e: call R16 with noreturn

0004612c: sub reset_rr_data(reset_rr_data_result)
000463af: reset_rr_data_result :: out u32 = low:32[R0]

00022cc4:
00022ccb: #125 := R31 - 0x20
00022cd1: mem := mem with [#125, el]:u64 <- R29
00022cd7: mem := mem with [#125 + 8, el]:u64 <- R30
00022cdb: R31 := #125
00022ce1: R29 := R31
00022ce9: mem := mem with [R31 + 0x18, el]:u64 <- R0
00022cf0: R0 := mem[R31 + 0x18, el]:u64
00022cf5: VF := 0
00022cf8: CF := 1
00022cfc: ZF := R0 = 0
00022d00: NF := 63:63[R0]
00022d06: when ZF <> 1 goto %00022d04
0004612d: goto %00023433

00023433:
00023436: R0 := 0x430000
0002343c: R0 := R0 + 0x350
00023443: R0 := mem[R0, el]:u64
00023449: R3 := R0
0002344e: R2 := 0x36
00023453: R1 := 1
00023458: R0 := 0x41C000
0002345e: R0 := R0 + 0xC38
00023463: R30 := 0x411F00
00023465: call @fwrite with return %00023467

00023467:
0002346a: R0 := 0x41D000
00023470: R3 := R0 + 0x28
00023475: R2 := 0x266
0002347a: R0 := 0x41C000
00023480: R1 := R0 + 0xAF0
00023485: R0 := 0x41C000
0002348b: R0 := R0 + 0xBC0
00023490: R30 := 0x411F20
00023492: call @__assert_fail with return %00022d04

00022d04:
00022d0e: R0 := mem[R31 + 0x18, el]:u64
00022d15: mem := mem with [R0, el]:u32 <- 0
00022d1c: R0 := mem[R31 + 0x18, el]:u64
00022d23: mem := mem with [R0 + 0x10, el]:u32 <- 0
00022d2a: R0 := mem[R31 + 0x18, el]:u64
00022d31: mem := mem with [R0 + 0x14, el]:u32 <- 0
00022d38: R0 := mem[R31 + 0x18, el]:u64
00022d3f: mem := mem with [R0 + 0x18, el]:u32 <- 0
00022d46: R0 := mem[R31 + 0x18, el]:u64
00022d4b: R1 := 1
00022d53: mem := mem with [R0 + 0x1C, el]:u32 <- 31:0[R1]
00022d5a: R0 := mem[R31 + 0x18, el]:u64
00022d61: mem := mem with [R0 + 0x20, el]:u32 <- 0
00022d68: R0 := mem[R31 + 0x18, el]:u64
00022d6d: R1 := 0xFFFFFFFF
00022d75: mem := mem with [R0 + 0x24, el]:u32 <- 31:0[R1]
00022d7c: R0 := mem[R31 + 0x18, el]:u64
00022d83: R0 := mem[R0 + 8, el]:u64
00022d88: VF := 0
00022d8b: CF := 1
00022d8f: ZF := R0 = 0
00022d93: NF := 63:63[R0]
00022d99: when ZF goto %00022d97
0004612e: goto %0002341e

0002341e:
00023423: R0 := mem[R31 + 0x18, el]:u64
0002342a: R0 := mem[R0 + 8, el]:u64
0002342f: R30 := 0x411F7C
00023431: call @hlist_free with return %00022d97

00022d97:
00022da1: R0 := mem[R31 + 0x18, el]:u64
00022da8: R0 := mem[R0 + 0x28, el]:u64
00022dad: VF := 0
00022db0: CF := 1
00022db4: ZF := R0 = 0
00022db8: NF := 63:63[R0]
00022dbe: when ZF goto %00022dbc
0004612f: goto %00023409

00023409:
0002340e: R0 := mem[R31 + 0x18, el]:u64
00023415: R0 := mem[R0 + 0x28, el]:u64
0002341a: R30 := 0x411F98
0002341c: call @free with return %00022dbc

00022dbc:
00022dc6: R0 := mem[R31 + 0x18, el]:u64
00022dcd: R0 := mem[R0 + 0x30, el]:u64
00022dd2: VF := 0
00022dd5: CF := 1
00022dd9: ZF := R0 = 0
00022ddd: NF := 63:63[R0]
00022de3: when ZF goto %00022de1
00046130: goto %000233f4

000233f4:
000233f9: R0 := mem[R31 + 0x18, el]:u64
00023400: R0 := mem[R0 + 0x30, el]:u64
00023405: R30 := 0x411FB4
00023407: call @free with return %00022de1

00022de1:
00022deb: R0 := mem[R31 + 0x18, el]:u64
00022df2: R0 := mem[R0 + 0x38, el]:u64
00022df7: VF := 0
00022dfa: CF := 1
00022dfe: ZF := R0 = 0
00022e02: NF := 63:63[R0]
00022e08: when ZF goto %00022e06
00046131: goto %000233df

000233df:
000233e4: R0 := mem[R31 + 0x18, el]:u64
000233eb: R0 := mem[R0 + 0x38, el]:u64
000233f0: R30 := 0x411FD0
000233f2: call @free with return %00022e06

00022e06:
00022e10: R0 := mem[R31 + 0x18, el]:u64
00022e17: R0 := mem[R0 + 0x40, el]:u64
00022e1c: VF := 0
00022e1f: CF := 1
00022e23: ZF := R0 = 0
00022e27: NF := 63:63[R0]
00022e2d: when ZF goto %00022e2b
00046132: goto %000233ca

000233ca:
000233cf: R0 := mem[R31 + 0x18, el]:u64
000233d6: R0 := mem[R0 + 0x40, el]:u64
000233db: R30 := 0x411FEC
000233dd: call @free with return %00022e2b

00022e2b:
00022e35: R0 := mem[R31 + 0x18, el]:u64
00022e3c: R0 := mem[R0 + 0x48, el]:u64
00022e41: VF := 0
00022e44: CF := 1
00022e48: ZF := R0 = 0
00022e4c: NF := 63:63[R0]
00022e52: when ZF goto %00022e50
00046133: goto %000233b5

000233b5:
000233ba: R0 := mem[R31 + 0x18, el]:u64
000233c1: R0 := mem[R0 + 0x48, el]:u64
000233c6: R30 := 0x412008
000233c8: call @free with return %00022e50

00022e50:
00022e5a: R0 := mem[R31 + 0x18, el]:u64
00022e61: R0 := mem[R0 + 0x50, el]:u64
00022e66: VF := 0
00022e69: CF := 1
00022e6d: ZF := R0 = 0
00022e71: NF := 63:63[R0]
00022e77: when ZF goto %00022e75
00046134: goto %000233a0

000233a0:
000233a5: R0 := mem[R31 + 0x18, el]:u64
000233ac: R0 := mem[R0 + 0x50, el]:u64
000233b1: R30 := 0x412024
000233b3: call @free with return %00022e75

00022e75:
00022e7f: R0 := mem[R31 + 0x18, el]:u64
00022e86: R0 := mem[R0 + 0x58, el]:u64
00022e8b: VF := 0
00022e8e: CF := 1
00022e92: ZF := R0 = 0
00022e96: NF := 63:63[R0]
00022e9c: when ZF goto %00022e9a
00046135: goto %0002338b

0002338b:
00023390: R0 := mem[R31 + 0x18, el]:u64
00023397: R0 := mem[R0 + 0x58, el]:u64
0002339c: R30 := 0x412040
0002339e: call @free with return %00022e9a

00022e9a:
00022ea4: R0 := mem[R31 + 0x18, el]:u64
00022eab: mem := mem with [R0 + 8, el]:u64 <- 0
00022eb2: R0 := mem[R31 + 0x18, el]:u64
00022eb9: mem := mem with [R0 + 0x28, el]:u64 <- 0
00022ec0: R0 := mem[R31 + 0x18, el]:u64
00022ec7: mem := mem with [R0 + 0x30, el]:u64 <- 0
00022ece: R0 := mem[R31 + 0x18, el]:u64
00022ed5: mem := mem with [R0 + 0x38, el]:u64 <- 0
00022edc: R0 := mem[R31 + 0x18, el]:u64
00022ee3: mem := mem with [R0 + 0x40, el]:u64 <- 0
00022eea: R0 := mem[R31 + 0x18, el]:u64
00022ef1: mem := mem with [R0 + 0x48, el]:u64 <- 0
00022ef8: R0 := mem[R31 + 0x18, el]:u64
00022eff: mem := mem with [R0 + 0x50, el]:u64 <- 0
00022f06: R0 := mem[R31 + 0x18, el]:u64
00022f0d: mem := mem with [R0 + 0x58, el]:u64 <- 0
00022f14: R0 := mem[R31 + 0x18, el]:u64
00022f1b: mem := mem with [R0 + 0x60, el]:u64 <- 0
00022f22: R0 := mem[R31 + 0x18, el]:u64
00022f29: R29 := mem[R31, el]:u64
00022f2e: R30 := mem[R31 + 8, el]:u64
00022f32: R31 := R31 + 0x20
00022f37: call R30 with noreturn

00046136: sub scanmem(scanmem_result)
000463b0: scanmem_result :: out u32 = low:32[R0]

00016cee:
00016cf2: #25 := R31 - 0x40
00016cf8: mem := mem with [#25, el]:u64 <- R29
00016cfe: mem := mem with [#25 + 8, el]:u64 <- R30
00016d02: R31 := #25
00016d08: R29 := R31
00016d10: mem := mem with [R31 + 0x18, el]:u64 <- R0
00016d18: mem := mem with [R31 + 0x14, el]:u32 <- 31:0[R1]
00016d1f: R0 := mem[R31 + 0x18, el]:u64
00016d24: R30 := 0x412800
00016d26: call @strlen with return %00016d28

00016d28:
00016d2c: R0 := pad:64[0:0[R0]]
00016d31: VF := 0
00016d34: CF := 1
00016d38: ZF := R0 = 0
00016d3c: NF := 63:63[R0]
00016d42: when ZF goto %00016d40
00046137: goto %00021a0f

00016d40:
00016d4a: R0 := mem[R31 + 0x18, el]:u64
00016d4f: R30 := 0x41281C
00016d51: call @strlen with return %00016d53

00016d53:
00016d57: R0 := pad:64[63:1[R0]]
00016d5f: mem := mem with [R31 + 0x30, el]:u64 <- R0
00016d66: R0 := mem[R31 + 0x30, el]:u64
00016d6c: R0 := R0 + 1
00016d71: R30 := 0x412830
00016d73: call @zmalloc with return %00016d75

00016d75:
00016d7b: mem := mem with [R31 + 0x28, el]:u64 <- R0
00016d82: mem := mem with [R31 + 0x38, el]:u64 <- 0
00016d87: goto %00016d85

00016d85:
00016d8d: R1 := mem[R31 + 0x38, el]:u64
00016d94: R0 := mem[R31 + 0x30, el]:u64
00016d9a: #26 := ~R0
00016d9f: #27 := R1 + ~R0
00016da5: VF := extend:128[#27 + 1] <> extend:128[R1] + extend:128[#26] + 1
00016dab: CF := pad:128[#27 + 1] <> pad:128[R1] + pad:128[#26] + 1
00016daf: ZF := #27 + 1 = 0
00016db3: NF := 63:63[#27 + 1]
00016db9: when CF <> 1 goto %00016db7
00046138: goto %000219ec

000219ec:
000219f1: R1 := mem[R31 + 0x28, el]:u64
000219f8: R0 := mem[R31 + 0x38, el]:u64
000219ff: R0 := R1 + R0
00021a06: mem := mem with [R0] <- 0
00021a0d: R0 := mem[R31 + 0x28, el]:u64
00046139: goto %00016e88

00016db7:
00016dc1: R0 := mem[R31 + 0x38, el]:u64
00016dc7: R0 := 62:0[R0].0
00016dce: R1 := mem[R31 + 0x18, el]:u64
00016dd5: R0 := R1 + R0
00016ddc: R0 := pad:64[mem[R0]]
00016de2: R1 := pad:64[31:0[R0]]
00016de7: R0 := 0x41C000
00016ded: R0 := R0 + 0x890
00016df3: R1 := extend:64[31:0[R1]]
00016dfb: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00016e03: mem := mem with [R31 + 0x24, el]:u32 <- 31:0[R0]
00016e0a: R0 := mem[R31 + 0x38, el]:u64
00016e10: R0 := 62:0[R0].0
00016e16: R0 := R0 + 1
00016e1d: R1 := mem[R31 + 0x18, el]:u64
00016e24: R0 := R1 + R0
00016e2b: R0 := pad:64[mem[R0]]
00016e31: R1 := pad:64[31:0[R0]]
00016e36: R0 := 0x41C000
00016e3c: R0 := R0 + 0x890
00016e42: R1 := extend:64[31:0[R1]]
00016e4a: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00016e52: mem := mem with [R31 + 0x20, el]:u32 <- 31:0[R0]
00016e59: R0 := pad:64[mem[R31 + 0x24, el]:u32]
00016e5e: VF := 0
00016e61: CF := 1
00016e65: ZF := 31:0[R0] = 0
00016e69: NF := 31:31[R0]
00016e70: when NF <> VF goto %00016e6e
0004613a: goto %000219cd

000219cd:
000219d2: R0 := pad:64[mem[R31 + 0x20, el]:u32]
000219d7: VF := 0
000219da: CF := 1
000219de: ZF := 31:0[R0] = 0
000219e2: NF := 31:31[R0]
000219e8: when NF = VF goto %0002192a
0004613b: goto %00016e6e

0002192a:
0002192f: R0 := pad:64[mem[R31 + 0x24, el]:u32]
00021935: R0 := pad:64[7:0[R0]]
0002193b: R0 := pad:64[3:0[R0].0]
00021941: R1 := pad:64[7:0[R0]]
00021948: R0 := pad:64[mem[R31 + 0x20, el]:u32]
0002194e: R0 := pad:64[7:0[R0]]
00021955: R0 := pad:64[31:0[R1] + 31:0[R0]]
0002195b: R0 := pad:64[7:0[R0]]
00021961: R1 := pad:64[extend:32[7:0[R0]]]
00021968: R0 := pad:64[mem[R31 + 0x14, el]:u32]
0002196e: R0 := pad:64[7:0[R0]]
00021973: R2 := 7
0002197a: R0 := pad:64[31:0[R2] + ~31:0[R0] + 1]
00021980: R0 := pad:64[7:0[R0]]
00021986: R0 := pad:64[extend:32[7:0[R0]]]
0002198d: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
00021993: R2 := pad:64[extend:32[7:0[R0]]]
0002199a: R1 := mem[R31 + 0x28, el]:u64
000219a1: R0 := mem[R31 + 0x38, el]:u64
000219a8: R0 := R1 + R0
000219ae: R1 := pad:64[7:0[R2]]
000219b6: mem := mem with [R0] <- 7:0[R1]
000219bd: R0 := mem[R31 + 0x38, el]:u64
000219c3: R0 := R0 + 1
000219cb: mem := mem with [R31 + 0x38, el]:u64 <- R0
0004613c: goto %00016d85

00016e6e:
00016e78: R0 := mem[R31 + 0x28, el]:u64
00016e7d: R30 := 0x4128B8
00016e80: call @free with return %00016e82

00016e82:
00016e85: R0 := 0
00016e8a: goto %00016e88

00021a0f:
00021a12: R0 := 0
00021a16: goto %00016e88

00016e88:
00016e90: R29 := mem[R31, el]:u64
00016e95: R30 := mem[R31 + 8, el]:u64
00016e99: R31 := R31 + 0x40
00016e9e: call R30 with noreturn

0004613d: sub scanner_hook(scanner_hook_result)
000463b1: scanner_hook_result :: out u32 = low:32[R0]

0002d8df:
0002d8e6: #291 := R31 - 0x100
0002d8ec: mem := mem with [#291, el]:u64 <- R29
0002d8f2: mem := mem with [#291 + 8, el]:u64 <- R30
0002d8f6: R31 := #291
0002d8fc: R29 := R31
0002d904: mem := mem with [R31 + 0x10, el]:u64 <- R19
0002d90c: mem := mem with [R31 + 0x48, el]:u64 <- R0
0002d914: mem := mem with [R31 + 0x40, el]:u64 <- R1
0002d91c: mem := mem with [R31 + 0x38, el]:u64 <- R2
0002d924: mem := mem with [R31 + 0x34, el]:u32 <- 31:0[R3]
0002d92c: mem := mem with [R31 + 0x28, el]:u64 <- R4
0002d934: mem := mem with [R31 + 0x20, el]:u64 <- R5
0002d939: R0 := 1
0002d941: mem := mem with [R31 + 0xDC, el]:u32 <- 31:0[R0]
0002d948: mem := mem with [R31 + 0xD8, el]:u32 <- 0
0002d94f: mem := mem with [R31 + 0xD4, el]:u32 <- 0
0002d956: mem := mem with [R31 + 0xC8, el]:u64 <- 0
0002d95d: mem := mem with [R31 + 0xC0, el]:u64 <- 0
0002d964: R0 := mem[R31 + 0x48, el]:u64
0002d96b: R0 := pad:64[mem[R0, el]:u32]
0002d970: VF := 0
0002d973: CF := 1
0002d977: ZF := 31:0[R0] = 0
0002d97b: NF := 31:31[R0]
0002d981: when ZF goto %0002d97f
0004613e: goto %0002f04f

0002f04f:
0002f054: R0 := mem[R31 + 0x40, el]:u64
0002f05b: R0 := pad:64[mem[R0 + 0x10, el]:u32]
0002f061: #306 := 31:0[R0] - 0xC8
0002f066: VF := extend:64[#306] <> extend:64[31:0[R0]] - 0xC8
0002f06b: CF := pad:64[#306] <> pad:64[31:0[R0]] + 0xFFFFFF38
0002f06f: ZF := #306 = 0
0002f073: NF := 31:31[#306]
0002f078: when ZF <> 1 goto %0002d97f
0004613f: goto %0002f07c

0002f07c:
0002f081: R1 := mem[R31 + 0x40, el]:u64
0002f088: R0 := mem[R31 + 0x48, el]:u64
0002f08d: R30 := 0x40F844
0002f08f: call @http_has_body with return %0002f091

0002f091:
0002f095: #307 := R0 + 1
0002f09a: VF := extend:128[#307] <> extend:128[R0] + 1
0002f09f: CF := pad:128[#307] <> pad:128[R0] + 1
0002f0a3: ZF := #307 = 0
0002f0a7: NF := 63:63[#307]
0002f0ac: when ZF <> 1 goto %0002d97f
00046140: goto %0002f0b0

0002f0b0:
0002f0b5: R0 := mem[R31 + 0x40, el]:u64
0002f0bc: R3 := mem[R0 + 8, el]:u64
0002f0c1: R0 := 0x41C000
0002f0c7: R2 := R0 + 0x268
0002f0cc: R0 := 0x41C000
0002f0d2: R1 := R0 + 0x270
0002f0d8: R0 := R3
0002f0dd: R30 := 0x40F86C
0002f0df: call @hlist_subcmp with return %0002f0e1

0002f0e1:
0002f0e4: VF := 0
0002f0e7: CF := 1
0002f0eb: ZF := 31:0[R0] = 0
0002f0ef: NF := 31:31[R0]
0002f0f4: when ZF <> 1 goto %0002d97f
00046141: goto %0002f0f8

0002f0f8:
0002f0fd: R0 := mem[R31 + 0x40, el]:u64
0002f104: R3 := mem[R0 + 8, el]:u64
0002f109: R0 := 0x41C000
0002f10f: R2 := R0 + 0x288
0002f114: R0 := 0x41C000
0002f11a: R1 := R0 + 0x290
0002f120: R0 := R3
0002f125: R30 := 0x40F894
0002f127: call @hlist_subcmp with return %0002f129

0002f129:
0002f12c: VF := 0
0002f12f: CF := 1
0002f133: ZF := 31:0[R0] = 0
0002f137: NF := 31:31[R0]
0002f13c: when ZF <> 1 goto %0002d9a9
00046142: goto %0002d97f

0002d9a9:
0002d9ae: R0 := mem[R31 + 0x48, el]:u64
0002d9b5: R2 := mem[R0 + 8, el]:u64
0002d9ba: R0 := 0x41C000
0002d9c0: R1 := R0 + 0x2A8
0002d9c6: R0 := R2
0002d9cb: R30 := 0x40F8BC
0002d9cd: call @hlist_get with return %0002d9cf

0002d9cf:
0002d9d5: mem := mem with [R31 + 0xB0, el]:u64 <- R0
0002d9dc: R0 := mem[R31 + 0xB0, el]:u64
0002d9e1: VF := 0
0002d9e4: CF := 1
0002d9e8: ZF := R0 = 0
0002d9ec: NF := 63:63[R0]
0002d9f2: when ZF goto %0002d9f0
00046143: goto %0002eed2

0002eed2:
0002eed7: R0 := mem[R31 + 0xB0, el]:u64
0002eedc: R30 := 0x40F8D4
0002eede: call @strdup with return %0002eee0

0002eee0:
0002eee3: R30 := 0x40F8D8
0002eee5: call @lowercase with return %0002eee7

0002eee7:
0002eeed: mem := mem with [R31 + 0xB0, el]:u64 <- R0
0002eef2: R0 := 0x430000
0002eef8: R0 := R0 + 0x438
0002eeff: R0 := mem[R0, el]:u64
0002ef07: mem := mem with [R31 + 0xE0, el]:u64 <- R0
0002ef0c: goto %0002ef0a

0002ef0a:
0002ef12: R0 := mem[R31 + 0xE0, el]:u64
0002ef17: VF := 0
0002ef1a: CF := 1
0002ef1e: ZF := R0 = 0
0002ef22: NF := 63:63[R0]
0002ef28: when ZF <> 1 goto %0002ef26
00046144: goto %0002f00c

0002ef26:
0002ef30: R0 := mem[R31 + 0xE0, el]:u64
0002ef37: R0 := mem[R0 + 8, el]:u64
0002ef3c: R30 := 0x40F8FC
0002ef3e: call @strdup with return %0002ef40

0002ef40:
0002ef43: R30 := 0x40F900
0002ef45: call @lowercase with return %0002ef47

0002ef47:
0002ef4d: mem := mem with [R31 + 0xA8, el]:u64 <- R0
0002ef52: R0 := 0x430000
0002ef58: R0 := R0 + 0x390
0002ef5f: R0 := pad:64[mem[R0, el]:u32]
0002ef64: VF := 0
0002ef67: CF := 1
0002ef6b: ZF := 31:0[R0] = 0
0002ef6f: NF := 31:31[R0]
0002ef75: when ZF goto %0002ef73
00046145: goto %0002f02f

0002f02f:
0002f034: R2 := mem[R31 + 0xA8, el]:u64
0002f03b: R1 := mem[R31 + 0xB0, el]:u64
0002f040: R0 := 0x41C000
0002f046: R0 := R0 + 0x2B8
0002f04b: R30 := 0x40F92C
0002f04d: call @printf with return %0002ef73

0002ef73:
0002ef7b: R2 := 0
0002ef82: R1 := mem[R31 + 0xB0, el]:u64
0002ef89: R0 := mem[R31 + 0xA8, el]:u64
0002ef8e: R30 := 0x40F93C
0002ef90: call @fnmatch with return %0002ef92

0002ef92:
0002ef95: VF := 0
0002ef98: CF := 1
0002ef9c: ZF := 31:0[R0] = 0
0002efa0: NF := 31:31[R0]
0002efa6: when ZF <> 1 goto %0002efa4
00046146: goto %0002efcd

0002efa4:
0002efae: R0 := mem[R31 + 0xA8, el]:u64
0002efb3: R30 := 0x40F97C
0002efb5: call @free with return %0002efb7

0002efb7:
0002efbc: R0 := mem[R31 + 0xE0, el]:u64
0002efc3: R0 := mem[R0 + 0x10, el]:u64
0002efcb: mem := mem with [R31 + 0xE0, el]:u64 <- R0
00046147: goto %0002ef0a

0002efcd:
0002efd0: R0 := 0x430000
0002efd6: R0 := R0 + 0x390
0002efdd: R0 := pad:64[mem[R0, el]:u32]
0002efe2: VF := 0
0002efe5: CF := 1
0002efe9: ZF := 31:0[R0] = 0
0002efed: NF := 31:31[R0]
0002eff3: when ZF goto %0002eff1
00046148: goto %0002f01d

0002f01d:
0002f020: R0 := 0x41C000
0002f026: R0 := R0 + 0x2E8
0002f02b: R30 := 0x40F964
0002f02d: call @puts with return %0002eff1

0002eff1:
0002effb: mem := mem with [R31 + 0x20, el]:u64 <- 0
0002f002: R0 := mem[R31 + 0xA8, el]:u64
0002f007: R30 := 0x40F970
0002f009: call @free with return %0002f00b

0002f00b:
0002f00e: goto %0002f00c

0002f00c:
0002f014: R0 := mem[R31 + 0xB0, el]:u64
0002f019: R30 := 0x40F99C
0002f01b: call @free with return %0002d9f0

0002d9f0:
0002d9f8: R0 := 0x1000
0002da00: mem := mem with [R31 + 0xF4, el]:u32 <- 31:0[R0]
0002da07: R0 := extend:64[mem[R31 + 0xF4, el]:u32]
0002da0c: R30 := 0x40F9AC
0002da0e: call @zmalloc with return %0002da10

0002da10:
0002da16: mem := mem with [R31 + 0xF8, el]:u64 <- R0
0002da1d: mem := mem with [R31 + 0xF0, el]:u32 <- 0
00046149: goto %0002da1f

0002da1f:
0002da24: R0 := mem[R31 + 0x28, el]:u64
0002da2b: R3 := pad:64[mem[R0, el]:u32]
0002da32: R0 := extend:64[mem[R31 + 0xF0, el]:u32]
0002da39: R1 := mem[R31 + 0xF8, el]:u64
0002da40: R4 := R1 + R0
0002da45: R1 := 0xFFF
0002da4c: R0 := pad:64[mem[R31 + 0xF0, el]:u32]
0002da53: R0 := pad:64[31:0[R1] + ~31:0[R0] + 1]
0002da59: R0 := extend:64[31:0[R0]]
0002da5f: R2 := R0
0002da65: R1 := R4
0002da6b: R0 := pad:64[31:0[R3]]
0002da70: R30 := 0x40F9E8
0002da72: call @read with return %0002da74

0002da74:
0002da7a: mem := mem with [R31 + 0xA4, el]:u32 <- 31:0[R0]
0002da7f: R0 := 0x430000
0002da85: R0 := R0 + 0x390
0002da8c: R0 := pad:64[mem[R0, el]:u32]
0002da91: VF := 0
0002da94: CF := 1
0002da98: ZF := 31:0[R0] = 0
0002da9c: NF := 31:31[R0]
0002daa2: when ZF goto %0002daa0
0004614a: goto %0002eea0

0002eea0:
0002eea3: R1 := 0x1000
0002eeaa: R0 := pad:64[mem[R31 + 0xF0, el]:u32]
0002eeb1: R0 := pad:64[31:0[R1] + ~31:0[R0] + 1]
0002eeb7: R2 := pad:64[31:0[R0]]
0002eebe: R1 := pad:64[mem[R31 + 0xA4, el]:u32]
0002eec3: R0 := 0x41C000
0002eec9: R0 := R0 + 0x308
0002eece: R30 := 0x40FA20
0002eed0: call @printf with return %0002daa0

0002daa0:
0002daaa: R0 := pad:64[mem[R31 + 0xA4, el]:u32]
0002daaf: VF := 0
0002dab2: CF := 1
0002dab6: ZF := 31:0[R0] = 0
0002daba: NF := 31:31[R0]
0002dac2: when ~(NF = VF & ~ZF) goto %0002dac0
0004614b: goto %0002ee83

0002ee83:
0002ee88: R1 := pad:64[mem[R31 + 0xF0, el]:u32]
0002ee8f: R0 := pad:64[mem[R31 + 0xA4, el]:u32]
0002ee96: R0 := pad:64[31:0[R1] + 31:0[R0]]
0002ee9e: mem := mem with [R31 + 0xF0, el]:u32 <- 31:0[R0]
0004614c: goto %0002dac0

0002dac0:
0002daca: R0 := pad:64[mem[R31 + 0xA4, el]:u32]
0002dacf: VF := 0
0002dad2: CF := 1
0002dad6: ZF := 31:0[R0] = 0
0002dada: NF := 31:31[R0]
0002dae2: when ~(NF = VF & ~ZF) goto %0002dae0
0004614d: goto %0002ee5b

0002ee5b:
0002ee60: R0 := pad:64[mem[R31 + 0xF0, el]:u32]
0002ee66: #305 := 31:0[R0] - 0xFFE
0002ee6b: VF := extend:64[#305] <> extend:64[31:0[R0]] - 0xFFE
0002ee70: CF := pad:64[#305] <> pad:64[31:0[R0]] + 0xFFFFF002
0002ee74: ZF := #305 = 0
0002ee78: NF := 31:31[#305]
0002ee7f: when ~(NF = VF & ~ZF) goto %0002da1f
0004614e: goto %0002dae0

0002dae0:
0002dae8: R0 := 0x41C000
0002daee: R1 := R0 + 0x328
0002daf5: R0 := mem[R31 + 0xF8, el]:u64
0002dafa: R30 := 0x40FA64
0002dafc: call @strstr with return %0002dafe

0002dafe:
0002db01: VF := 0
0002db04: CF := 1
0002db08: ZF := R0 = 0
0002db0c: NF := 63:63[R0]
0002db12: when ZF goto %0002db10
0004614f: goto %0002dcc7

0002dcc7:
0002dcca: R0 := 0x41C000
0002dcd0: R1 := R0 + 0x350
0002dcd7: R0 := mem[R31 + 0xF8, el]:u64
0002dcdc: R30 := 0x40FA7C
0002dcde: call @strstr with return %0002dce0

0002dce0:
0002dce6: mem := mem with [R31 + 0x98, el]:u64 <- R0
0002dced: R0 := mem[R31 + 0x98, el]:u64
0002dcf2: VF := 0
0002dcf5: CF := 1
0002dcf9: ZF := R0 = 0
0002dcfd: NF := 63:63[R0]
0002dd02: when ZF goto %0002db10
00046150: goto %0002dd06

0002dd06:
0002dd09: R1 := 0x22
0002dd10: R0 := mem[R31 + 0x98, el]:u64
0002dd15: R30 := 0x40FA98
0002dd17: call @strchr with return %0002dd19

0002dd19:
0002dd1f: mem := mem with [R31 + 0x98, el]:u64 <- R0
0002dd26: R0 := mem[R31 + 0x98, el]:u64
0002dd2b: VF := 0
0002dd2e: CF := 1
0002dd32: ZF := R0 = 0
0002dd36: NF := 63:63[R0]
0002dd3b: when ZF goto %0002db10
00046151: goto %0002dd3f

0002dd3f:
0002dd44: R0 := mem[R31 + 0x98, el]:u64
0002dd4a: R0 := R0 + 1
0002dd52: mem := mem with [R31 + 0x98, el]:u64 <- R0
0002dd59: R0 := mem[R31 + 0x98, el]:u64
0002dd5e: R30 := 0x40FABC
0002dd60: call @strlen with return %0002dd62

0002dd62:
0002dd68: mem := mem with [R31 + 0x90, el]:u64 <- R0
0002dd6f: mem := mem with [R31 + 0xEC, el]:u32 <- 0
0002dd74: goto %0002dd72

0002dd72:
0002dd7a: R0 := extend:64[mem[R31 + 0xEC, el]:u32]
0002dd81: R1 := mem[R31 + 0x90, el]:u64
0002dd87: #292 := ~R0
0002dd8c: #293 := R1 + ~R0
0002dd92: VF := extend:128[#293 + 1] <> extend:128[R1] + extend:128[#292] + 1
0002dd98: CF := pad:128[#293 + 1] <> pad:128[R1] + pad:128[#292] + 1
0002dd9c: ZF := #293 + 1 = 0
0002dda0: NF := 63:63[#293 + 1]
0002dda8: when ~(NF = VF & ~ZF) goto %0002dda6
00046152: goto %0002ee0b

0002ee0b:
0002ee10: R0 := extend:64[mem[R31 + 0xEC, el]:u32]
0002ee17: R1 := mem[R31 + 0x98, el]:u64
0002ee1e: R0 := R1 + R0
0002ee25: R0 := pad:64[mem[R0]]
0002ee2b: #304 := 31:0[R0] - 0x22
0002ee30: VF := extend:64[#304] <> extend:64[31:0[R0]] - 0x22
0002ee35: CF := pad:64[#304] <> pad:64[31:0[R0]] + 0xFFFFFFDE
0002ee39: ZF := #304 = 0
0002ee3d: NF := 31:31[#304]
0002ee43: when ZF <> 1 goto %0002ee41
00046153: goto %0002dda6

0002dda6:
0002ddb0: R0 := extend:64[mem[R31 + 0xEC, el]:u32]
0002ddb7: R1 := mem[R31 + 0x98, el]:u64
0002ddbe: R0 := R1 + R0
0002ddc5: R0 := pad:64[mem[R0]]
0002ddcb: #294 := 31:0[R0] - 0x22
0002ddd0: VF := extend:64[#294] <> extend:64[31:0[R0]] - 0x22
0002ddd5: CF := pad:64[#294] <> pad:64[31:0[R0]] + 0xFFFFFFDE
0002ddd9: ZF := #294 = 0
0002dddd: NF := 31:31[#294]
0002dde3: when ZF <> 1 goto %0002dde1
00046154: goto %0002de21

0002dde1:
0002dde9: R0 := 0x430000
0002ddef: R0 := R0 + 0x390
0002ddf6: R0 := pad:64[mem[R0, el]:u32]
0002ddfb: VF := 0
0002ddfe: CF := 1
0002de02: ZF := 31:0[R0] = 0
0002de06: NF := 31:31[R0]
0002de0b: when ZF goto %0002db10
00046155: goto %0002de0f

0002de0f:
0002de12: R0 := 0x41C000
0002de18: R0 := R0 + 0x610
0002de1d: R30 := 0x41038C
0002de1f: call @puts with return %0002db10

0002de21:
0002de26: R2 := pad:64[mem[R31 + 0xEC, el]:u32]
0002de2b: R1 := 0
0002de32: R0 := mem[R31 + 0x98, el]:u64
0002de37: R30 := 0x40FB24
0002de39: call @substr with return %0002de3b

0002de3b:
0002de41: mem := mem with [R31 + 0x88, el]:u64 <- R0
0002de46: R0 := 0x430000
0002de4c: R0 := R0 + 0x390
0002de53: R0 := pad:64[mem[R0, el]:u32]
0002de58: VF := 0
0002de5b: CF := 1
0002de5f: ZF := 31:0[R0] = 0
0002de63: NF := 31:31[R0]
0002de69: when ZF goto %0002de67
00046156: goto %0002edf2

0002edf2:
0002edf7: R1 := mem[R31 + 0x88, el]:u64
0002edfc: R0 := 0x41C000
0002ee02: R0 := R0 + 0x368
0002ee07: R30 := 0x40FB4C
0002ee09: call @printf with return %0002de67

0002de67:
0002de6f: R0 := 0x1000
0002de77: mem := mem with [R31 + 0x64, el]:u32 <- 31:0[R0]
0002de7e: R0 := pad:64[mem[R31 + 0x64, el]:u32]
0002de84: R0 := extend:64[31:0[R0]]
0002de89: R30 := 0x40FB60
0002de8b: call @zmalloc with return %0002de8d

0002de8d:
0002de93: mem := mem with [R31 + 0x68, el]:u64 <- R0
00046157: goto %0002de95

0002de95:
0002de9a: R0 := mem[R31 + 0x28, el]:u64
0002dea1: R0 := pad:64[mem[R0, el]:u32]
0002dea7: R2 := R31 + 0x64
0002dead: R1 := R31 + 0x68
0002deb2: R30 := 0x40FB78
0002deb4: call @so_recvln with return %0002deb6

0002deb6:
0002debc: mem := mem with [R31 + 0xEC, el]:u32 <- 31:0[R0]
0002dec3: R0 := mem[R31 + 0x68, el]:u64
0002dec8: R30 := 0x40FB84
0002deca: call @strlen with return %0002decc

0002decc:
0002ded2: mem := mem with [R31 + 0x90, el]:u64 <- R0
0002ded9: R1 := extend:64[mem[R31 + 0xF0, el]:u32]
0002dee0: R0 := mem[R31 + 0x90, el]:u64
0002dee7: R1 := R1 + R0
0002deee: R0 := extend:64[mem[R31 + 0xF4, el]:u32]
0002def4: #295 := ~R0
0002def9: #296 := R1 + ~R0
0002deff: VF := extend:128[#296 + 1] <> extend:128[R1] + extend:128[#295] + 1
0002df05: CF := pad:128[#296 + 1] <> pad:128[R1] + pad:128[#295] + 1
0002df09: ZF := #296 + 1 = 0
0002df0d: NF := 63:63[#296 + 1]
0002df14: when NF <> VF goto %0002df12
00046158: goto %0002ed8d

0002ed8d:
0002ed92: R0 := pad:64[mem[R31 + 0xF4, el]:u32]
0002ed98: R0 := pad:64[30:0[R0].0]
0002eda0: mem := mem with [R31 + 0xF4, el]:u32 <- 31:0[R0]
0002eda7: R0 := extend:64[mem[R31 + 0xF4, el]:u32]
0002edad: R1 := R0
0002edb4: R0 := mem[R31 + 0xF8, el]:u64
0002edb9: R30 := 0x40FBBC
0002edbb: call @realloc with return %0002edbd

0002edbd:
0002edc3: mem := mem with [R31 + 0xB0, el]:u64 <- R0
0002edca: R0 := mem[R31 + 0xB0, el]:u64
0002edcf: VF := 0
0002edd2: CF := 1
0002edd6: ZF := R0 = 0
0002edda: NF := 63:63[R0]
0002eddf: when ZF goto %0002e73f
00046159: goto %0002ede3

0002e73f:
0002e743: goto %0002df9c

0002ede3:
0002ede8: R0 := mem[R31 + 0xB0, el]:u64
0002edf0: mem := mem with [R31 + 0xF8, el]:u64 <- R0
0004615a: goto %0002df12

0002df12:
0002df1c: R0 := mem[R31 + 0x68, el]:u64
0002df23: R1 := extend:64[mem[R31 + 0xF4, el]:u32]
0002df29: R2 := R1
0002df2f: R1 := R0
0002df36: R0 := mem[R31 + 0xF8, el]:u64
0002df3b: R30 := 0x40FBEC
0002df3d: call @strlcat with return %0002df3f

0002df3f:
0002df44: R0 := mem[R31 + 0x90, el]:u64
0002df4a: R1 := pad:64[31:0[R0]]
0002df51: R0 := pad:64[mem[R31 + 0xF0, el]:u32]
0002df58: R0 := pad:64[31:0[R1] + 31:0[R0]]
0002df60: mem := mem with [R31 + 0xF0, el]:u32 <- 31:0[R0]
0002df67: R0 := pad:64[mem[R31 + 0xEC, el]:u32]
0002df6c: VF := 0
0002df6f: CF := 1
0002df73: ZF := 31:0[R0] = 0
0002df77: NF := 31:31[R0]
0002df7e: when NF <> VF goto %0002df7c
0004615b: goto %0002e74d

0002e74d:
0002e752: mem := mem with [R31 + 0xBC, el]:u32 <- 0
0002e759: mem := mem with [R31 + 0xB8, el]:u32 <- 0
0002e760: R2 := mem[R31 + 0x68, el]:u64
0002e765: R0 := 0x41C000
0002e76b: R1 := R0 + 0x388
0002e771: R0 := R2
0002e776: R30 := 0x40FC28
0002e778: call @strstr with return %0002e77a

0002e77a:
0002e780: mem := mem with [R31 + 0x98, el]:u64 <- R0
0002e787: R0 := mem[R31 + 0x98, el]:u64
0002e78c: VF := 0
0002e78f: CF := 1
0002e793: ZF := R0 = 0
0002e797: NF := 63:63[R0]
0002e79d: when ZF goto %0002e79b
0004615c: goto %0002ed23

0002ed23:
0002ed26: R30 := 0x40FC3C
0002ed28: call @__ctype_b_loc with return %0002ed2a

0002ed2a:
0002ed2f: R1 := mem[R0, el]:u64
0002ed36: R0 := mem[R31 + 0x98, el]:u64
0002ed3c: R0 := R0 + 0xB
0002ed43: R0 := pad:64[mem[R0]]
0002ed49: R0 := pad:64[7:0[R0]]
0002ed4f: R0 := 62:0[R0].0
0002ed56: R0 := R1 + R0
0002ed5d: R0 := pad:64[mem[R0, el]:u16]
0002ed63: R0 := pad:64[11:11[R0].0]
0002ed68: VF := 0
0002ed6b: CF := 1
0002ed6f: ZF := 31:0[R0] = 0
0002ed73: NF := 31:31[R0]
0002ed78: when ZF goto %0002e79b
0004615d: goto %0002ed7c

0002e79b:
0002e7a5: R2 := mem[R31 + 0x68, el]:u64
0002e7aa: R0 := 0x41C000
0002e7b0: R1 := R0 + 0x398
0002e7b6: R0 := R2
0002e7bb: R30 := 0x40FC88
0002e7bd: call @strstr with return %0002e7bf

0002e7bf:
0002e7c5: mem := mem with [R31 + 0x98, el]:u64 <- R0
0002e7cc: R0 := mem[R31 + 0x98, el]:u64
0002e7d1: VF := 0
0002e7d4: CF := 1
0002e7d8: ZF := R0 = 0
0002e7dc: NF := 63:63[R0]
0002e7e2: when ZF goto %0002e7e0
0004615e: goto %0002ecbd

0002ecbd:
0002ecc0: R30 := 0x40FC9C
0002ecc2: call @__ctype_b_loc with return %0002ecc4

0002ecc4:
0002ecc9: R1 := mem[R0, el]:u64
0002ecd0: R0 := mem[R31 + 0x98, el]:u64
0002ecd6: R0 := R0 + 0x11
0002ecdd: R0 := pad:64[mem[R0]]
0002ece3: R0 := pad:64[7:0[R0]]
0002ece9: R0 := 62:0[R0].0
0002ecf0: R0 := R1 + R0
0002ecf7: R0 := pad:64[mem[R0, el]:u16]
0002ecfd: R0 := pad:64[11:11[R0].0]
0002ed02: VF := 0
0002ed05: CF := 1
0002ed09: ZF := 31:0[R0] = 0
0002ed0d: NF := 31:31[R0]
0002ed12: when ZF goto %0002e7e0
0004615f: goto %0002ed16

0002ed16:
0002ed19: R0 := 1
0002ed21: mem := mem with [R31 + 0xB8, el]:u32 <- 31:0[R0]
00046160: goto %0002e7e0

0002ed7c:
0002ed7f: R0 := 1
0002ed87: mem := mem with [R31 + 0xBC, el]:u32 <- 31:0[R0]
0002ed8b: goto %0002e7e0

0002e7e0:
0002e7ea: R0 := pad:64[mem[R31 + 0xBC, el]:u32]
0002e7ef: VF := 0
0002e7f2: CF := 1
0002e7f6: ZF := 31:0[R0] = 0
0002e7fa: NF := 31:31[R0]
0002e800: when ZF <> 1 goto %0002e7fe
00046161: goto %0002ec9f

0002ec9f:
0002eca4: R0 := pad:64[mem[R31 + 0xB8, el]:u32]
0002eca9: VF := 0
0002ecac: CF := 1
0002ecb0: ZF := 31:0[R0] = 0
0002ecb4: NF := 31:31[R0]
0002ecb9: when ZF goto %0002df7c
00046162: goto %0002e7fe

0002e7fe:
0002e808: R0 := pad:64[mem[R31 + 0xB8, el]:u32]
0002e80d: VF := 0
0002e810: CF := 1
0002e814: ZF := 31:0[R0] = 0
0002e818: NF := 31:31[R0]
0002e81e: when ZF goto %0002e81c
00046163: goto %0002ec92

0002ec92:
0002ec95: R0 := 1
0002ec9d: mem := mem with [R31 + 0xD8, el]:u32 <- 31:0[R0]
00046164: goto %0002e81c

0002e81c:
0002e824: R0 := 0x430000
0002e82a: R0 := R0 + 0x390
0002e831: R0 := pad:64[mem[R0, el]:u32]
0002e836: VF := 0
0002e839: CF := 1
0002e83d: ZF := 31:0[R0] = 0
0002e841: NF := 31:31[R0]
0002e847: when ZF goto %0002e845
00046165: goto %0002ec73

0002ec73:
0002ec78: R0 := mem[R31 + 0x68, el]:u64
0002ec7e: R1 := R0
0002ec83: R0 := 0x41C000
0002ec89: R0 := R0 + 0x3B0
0002ec8e: R30 := 0x40FD24
0002ec90: call @printf with return %0002e845

0002e845:
0002e84f: R2 := mem[R31 + 0x68, el]:u64
0002e854: R0 := 0x41C000
0002e85a: R1 := R0 + 0x3C8
0002e860: R0 := R2
0002e865: R30 := 0x40FD38
0002e867: call @strstr with return %0002e869

0002e869:
0002e86f: mem := mem with [R31 + 0x98, el]:u64 <- R0
0002e876: R0 := mem[R31 + 0x98, el]:u64
0002e87b: VF := 0
0002e87e: CF := 1
0002e882: ZF := R0 = 0
0002e886: NF := 63:63[R0]
0002e88c: when ZF goto %0002e88a
00046166: goto %0002ea69

0002ea69:
0002ea6e: R0 := mem[R31 + 0x98, el]:u64
0002ea74: R0 := R0 + 0x10
0002ea79: R30 := 0x40FD54
0002ea7b: call @atol with return %0002ea7d

0002ea7d:
0002ea83: mem := mem with [R31 + 0xC0, el]:u64 <- R0
0002ea88: R0 := 0x430000
0002ea8e: R0 := R0 + 0x390
0002ea95: R0 := pad:64[mem[R0, el]:u32]
0002ea9a: VF := 0
0002ea9d: CF := 1
0002eaa1: ZF := 31:0[R0] = 0
0002eaa5: NF := 31:31[R0]
0002eaab: when ZF goto %0002eaa9
00046167: goto %0002ebe5

0002ebe5:
0002ebea: R0 := mem[R31 + 0xC0, el]:u64
0002ebef: VF := 0
0002ebf2: CF := 1
0002ebf6: ZF := R0 = 0
0002ebfa: NF := 63:63[R0]
0002ec02: when ~(NF = VF & ~ZF) goto %0002ec00
00046168: goto %0002ec1b

0002ec00:
0002ec08: R0 := 0x41C000
0002ec0e: R0 := R0 + 0x418
0002ec13: R30 := 0x40FDB0
0002ec15: call @puts with return %0002ec17

0002ec17:
0002ec19: goto %0002df9c

0002ec1b:
0002ec20: R0 := mem[R31 + 0xC0, el]:u64
0002ec26: R1 := R0 + 0x3FF
0002ec2b: VF := 0
0002ec2e: CF := 1
0002ec32: ZF := R0 = 0
0002ec36: NF := 63:63[R0]
0002ec45: when NF <> VF goto %0002ec3d
0002ec46: goto %0002ec41

0002ec41:
0002ec42: R0 := R0
0002ec48: goto %0002ec44

0002ec3d:
0002ec3e: R0 := R1
0002ec47: goto %0002ec44

0002ec44:
0002ec4e: R0 := extend:64[63:10[R0]]
0002ec55: R2 := mem[R31 + 0x20, el]:u64
0002ec5b: R1 := R0
0002ec60: R0 := 0x41C000
0002ec66: R0 := R0 + 0x3E0
0002ec6b: R30 := 0x40FDA0
0002ec6d: call @printf with return %0002ec6f

0002ec6f:
0002ec71: goto %0002eaa9

0002eaa9:
0002eab3: R0 := mem[R31 + 0x20, el]:u64
0002eab8: VF := 0
0002eabb: CF := 1
0002eabf: ZF := R0 = 0
0002eac3: NF := 63:63[R0]
0002eac9: when ZF goto %0002eac7
00046169: goto %0002eb56

0002eb56:
0002eb5b: R0 := mem[R31 + 0x20, el]:u64
0002eb61: #301 := R0 - 1
0002eb66: VF := extend:128[#301] <> extend:128[R0] - 1
0002eb6b: CF := pad:128[#301] <> pad:128[R0] + 0xFFFFFFFFFFFFFFFF
0002eb6f: ZF := #301 = 0
0002eb73: NF := 63:63[#301]
0002eb78: when ZF goto %0002df9c
0004616a: goto %0002eb7c

0002eb7c:
0002eb81: R0 := mem[R31 + 0xC0, el]:u64
0002eb87: R1 := R0 + 0x3FF
0002eb8c: VF := 0
0002eb8f: CF := 1
0002eb93: ZF := R0 = 0
0002eb97: NF := 63:63[R0]
0002eba6: when NF <> VF goto %0002eb9e
0002eba7: goto %0002eba2

0002eba2:
0002eba3: R0 := R0
0002eba9: goto %0002eba5

0002eb9e:
0002eb9f: R0 := R1
0002eba8: goto %0002eba5

0002eba5:
0002ebaf: R0 := extend:64[63:10[R0]]
0002ebb5: R1 := R0
0002ebbc: R0 := mem[R31 + 0x20, el]:u64
0002ebc2: #302 := ~R1
0002ebc7: #303 := R0 + ~R1
0002ebcd: VF := extend:128[#303 + 1] <> extend:128[R0] + extend:128[#302] + 1
0002ebd3: CF := pad:128[#303 + 1] <> pad:128[R0] + pad:128[#302] + 1
0002ebd7: ZF := #303 + 1 = 0
0002ebdb: NF := 63:63[#303 + 1]
0002ebe1: when NF <> VF goto %0002df9c
0004616b: goto %0002eac7

0002eac7:
0002eacf: R0 := 1
0002ead7: mem := mem with [R31 + 0xD4, el]:u32 <- 31:0[R0]
0002eadc: R0 := 0x32
0002eae1: R30 := 0x40FE00
0002eae3: call @zmalloc with return %0002eae5

0002eae5:
0002eaeb: mem := mem with [R31 + 0xB0, el]:u64 <- R0
0002eaf2: R0 := mem[R31 + 0x48, el]:u64
0002eaf9: R0 := mem[R0 + 0x48, el]:u64
0002eaff: R3 := R0
0002eb04: R0 := 0x41C000
0002eb0a: R2 := R0 + 0x448
0002eb0f: R1 := 0x32
0002eb16: R0 := mem[R31 + 0xB0, el]:u64
0002eb1b: R30 := 0x40FE24
0002eb1d: call @snprintf with return %0002eb1f

0002eb1f:
0002eb24: R0 := mem[R31 + 0xB0, el]:u64
0002eb29: R30 := 0x40FE2C
0002eb2b: call @strlen with return %0002eb2d

0002eb2d:
0002eb31: R2 := R0
0002eb38: R1 := mem[R31 + 0xB0, el]:u64
0002eb3f: R0 := pad:64[mem[R31 + 0x34, el]:u32]
0002eb44: R30 := 0x40FE3C
0002eb46: call @write_wrapper with return %0002eb48

0002eb48:
0002eb4d: R0 := mem[R31 + 0xB0, el]:u64
0002eb52: R30 := 0x40FE44
0002eb54: call @free with return %0002e88a

0002e88a:
0002e894: R0 := pad:64[mem[R31 + 0xD4, el]:u32]
0002e899: VF := 0
0002e89c: CF := 1
0002e8a0: ZF := 31:0[R0] = 0
0002e8a4: NF := 31:31[R0]
0002e8aa: when ZF <> 1 goto %0002e8a8
0004616c: goto %0002ea2a

0002e8a8:
0002e8b2: R0 := pad:64[mem[R31 + 0xD8, el]:u32]
0002e8b7: VF := 0
0002e8ba: CF := 1
0002e8be: ZF := 31:0[R0] = 0
0002e8c2: NF := 31:31[R0]
0002e8c8: when ZF <> 1 goto %0002e8c6
0004616d: goto %0002e996

0002e996:
0002e999: R0 := 0x32
0002e99e: R30 := 0x40FE88
0002e9a0: call @zmalloc with return %0002e9a2

0002e9a2:
0002e9a8: mem := mem with [R31 + 0xB0, el]:u64 <- R0
0002e9af: R0 := mem[R31 + 0x68, el]:u64
0002e9b5: R0 := R0 + 0xC
0002e9ba: R30 := 0x40FE98
0002e9bd: call @atol with return %0002e9bf

0002e9bf:
0002e9c5: mem := mem with [R31 + 0xC8, el]:u64 <- R0
0002e9cc: R4 := mem[R31 + 0xC0, el]:u64
0002e9d3: R3 := mem[R31 + 0xC8, el]:u64
0002e9d8: R0 := 0x41C000
0002e9de: R2 := R0 + 0x498
0002e9e3: R1 := 0x32
0002e9ea: R0 := mem[R31 + 0xB0, el]:u64
0002e9ef: R30 := 0x40FEB8
0002e9f1: call @snprintf with return %0002e9f3

0002e9f3:
0002e9f8: R0 := mem[R31 + 0xB0, el]:u64
0002e9fd: R30 := 0x40FEC0
0002e9ff: call @strlen with return %0002ea01

0002ea01:
0002ea05: R2 := R0
0002ea0c: R1 := mem[R31 + 0xB0, el]:u64
0002ea13: R0 := pad:64[mem[R31 + 0x34, el]:u32]
0002ea18: R30 := 0x40FED0
0002ea1a: call @write_wrapper with return %0002ea1c

0002ea1c:
0002ea21: R0 := mem[R31 + 0xB0, el]:u64
0002ea26: R30 := 0x40FED8
0002ea28: call @free with return %0002e8c6

0002e8c6:
0002e8d0: R0 := mem[R31 + 0xC0, el]:u64
0002e8d5: VF := 0
0002e8d8: CF := 1
0002e8dc: ZF := R0 = 0
0002e8e0: NF := 63:63[R0]
0002e8e5: when ZF <> 1 goto %0002df7c
0004616e: goto %0002e8e9

0002e8e9:
0002e8ee: R0 := mem[R31 + 0x20, el]:u64
0002e8f3: VF := 0
0002e8f6: CF := 1
0002e8fa: ZF := R0 = 0
0002e8fe: NF := 63:63[R0]
0002e903: when ZF goto %0002df7c
0004616f: goto %0002e907

0002e907:
0002e90c: R0 := mem[R31 + 0x20, el]:u64
0002e912: #298 := R0 - 1
0002e917: VF := extend:128[#298] <> extend:128[R0] - 1
0002e91c: CF := pad:128[#298] <> pad:128[R0] + 0xFFFFFFFFFFFFFFFF
0002e920: ZF := #298 = 0
0002e924: NF := 63:63[#298]
0002e929: when ZF goto %0002df7c
00046170: goto %0002e92d

0002e92d:
0002e932: R0 := mem[R31 + 0xC8, el]:u64
0002e938: R1 := R0 + 0x3FF
0002e93d: VF := 0
0002e940: CF := 1
0002e944: ZF := R0 = 0
0002e948: NF := 63:63[R0]
0002e957: when NF <> VF goto %0002e94f
0002e958: goto %0002e953

0002e953:
0002e954: R0 := R0
0002e95a: goto %0002e956

0002e94f:
0002e950: R0 := R1
0002e959: goto %0002e956

0002e956:
0002e960: R0 := extend:64[63:10[R0]]
0002e966: R1 := R0
0002e96d: R0 := mem[R31 + 0x20, el]:u64
0002e973: #299 := ~R1
0002e978: #300 := R0 + ~R1
0002e97e: VF := extend:128[#300 + 1] <> extend:128[R0] + extend:128[#299] + 1
0002e984: CF := pad:128[#300 + 1] <> pad:128[R0] + pad:128[#299] + 1
0002e988: ZF := #300 + 1 = 0
0002e98c: NF := 63:63[#300 + 1]
0002e992: when NF <> VF goto %0002e74b
00046171: goto %0002df7c

0002e74b:
00046172: goto %0002df9c

0002df7c:
0002df86: R0 := pad:64[mem[R31 + 0xEC, el]:u32]
0002df8b: VF := 0
0002df8e: CF := 1
0002df92: ZF := 31:0[R0] = 0
0002df96: NF := 31:31[R0]
0002df9e: when ~(NF = VF & ~ZF) goto %0002df9c
00046173: goto %0002e71d

0002e71d:
0002e722: R0 := pad:64[mem[R31 + 0xD8, el]:u32]
0002e727: VF := 0
0002e72a: CF := 1
0002e72e: ZF := 31:0[R0] = 0
0002e732: NF := 31:31[R0]
0002e737: when ZF goto %0002de95
00046174: goto %0002e73b

0002e73b:
0002e73d: goto %0002df9c

0002ea2a:
0002ea2d: R0 := 0x430000
0002ea33: R0 := R0 + 0x390
0002ea3a: R0 := pad:64[mem[R0, el]:u32]
0002ea3f: VF := 0
0002ea42: CF := 1
0002ea46: ZF := 31:0[R0] = 0
0002ea4a: NF := 31:31[R0]
0002ea4f: when ZF goto %0002e745
00046175: goto %0002ea53

0002ea53:
0002ea56: R0 := 0x41C000
0002ea5c: R0 := R0 + 0x458
0002ea61: R30 := 0x40FE70
0002ea63: call @puts with return %0002ea65

0002ea65:
0002ea67: goto %0002e745

0002e745:
0002e749: goto %0002df9c

0002df9c:
0002dfa6: R0 := pad:64[mem[R31 + 0xEC, el]:u32]
0002dfab: VF := 0
0002dfae: CF := 1
0002dfb2: ZF := 31:0[R0] = 0
0002dfb6: NF := 31:31[R0]
0002dfbd: when NF <> VF goto %0002dfbb
00046176: goto %0002dfe0

0002dfe0:
0002dfe5: R0 := pad:64[mem[R31 + 0xD8, el]:u32]
0002dfea: VF := 0
0002dfed: CF := 1
0002dff1: ZF := 31:0[R0] = 0
0002dff5: NF := 31:31[R0]
0002dffa: when ZF goto %0002dfbb
00046177: goto %0002dffe

0002dffe:
0002e003: R2 := mem[R31 + 0x68, el]:u64
0002e008: R0 := 0x41C000
0002e00e: R1 := R0 + 0x4B8
0002e014: R0 := R2
0002e019: R30 := 0x40FF7C
0002e01b: call @strstr with return %0002e01d

0002e01d:
0002e021: R0 := R0 + 3
0002e029: mem := mem with [R31 + 0x98, el]:u64 <- R0
0002e030: R0 := mem[R31 + 0x98, el]:u64
0002e035: VF := 0
0002e038: CF := 1
0002e03c: ZF := R0 = 0
0002e040: NF := 63:63[R0]
0002e045: when ZF goto %0002dfbb
00046178: goto %0002e049

0002e049:
0002e04c: R1 := 0x22
0002e053: R0 := mem[R31 + 0x98, el]:u64
0002e058: R30 := 0x40FF9C
0002e05a: call @strchr with return %0002e05c

0002e05c:
0002e060: R1 := R0
0002e067: R0 := mem[R31 + 0x98, el]:u64
0002e06e: R0 := R1 + ~R0 + 1
0002e076: mem := mem with [R31 + 0x90, el]:u64 <- R0
0002e07d: R0 := mem[R31 + 0x90, el]:u64
0002e082: VF := 0
0002e085: CF := 1
0002e089: ZF := R0 = 0
0002e08d: NF := 63:63[R0]
0002e094: when ~(NF = VF & ~ZF) goto %0002dfbb
00046179: goto %0002e098

0002e098:
0002e09d: R0 := mem[R31 + 0x90, el]:u64
0002e0a3: R2 := pad:64[31:0[R0]]
0002e0a8: R1 := 0
0002e0af: R0 := mem[R31 + 0x98, el]:u64
0002e0b4: R30 := 0x40FFCC
0002e0b6: call @substr with return %0002e0b8

0002e0b8:
0002e0be: mem := mem with [R31 + 0xB0, el]:u64 <- R0
0002e0c5: R0 := mem[R31 + 0xB0, el]:u64
0002e0ca: R30 := 0x40FFD8
0002e0cc: call @urlencode with return %0002e0ce

0002e0ce:
0002e0d4: mem := mem with [R31 + 0x80, el]:u64 <- R0
0002e0db: R0 := mem[R31 + 0xB0, el]:u64
0002e0e0: R30 := 0x40FFE4
0002e0e2: call @free with return %0002e0e4

0002e0e4:
0002e0e9: R0 := mem[R31 + 0x48, el]:u64
0002e0f0: R0 := mem[R0 + 0x30, el]:u64
0002e0f5: R30 := 0x40FFF0
0002e0f7: call @urlencode with return %0002e0f9

0002e0f9:
0002e0ff: mem := mem with [R31 + 0x78, el]:u64 <- R0
0002e104: R0 := 0x1000
0002e109: R30 := 0x40FFFC
0002e10b: call @zmalloc with return %0002e10d

0002e10d:
0002e113: mem := mem with [R31 + 0x70, el]:u64 <- R0
0002e11a: R7 := mem[R31 + 0x78, el]:u64
0002e121: R6 := mem[R31 + 0x88, el]:u64
0002e128: R5 := mem[R31 + 0x88, el]:u64
0002e12f: R4 := mem[R31 + 0x80, el]:u64
0002e136: R3 := mem[R31 + 0x88, el]:u64
0002e13b: R0 := 0x41C000
0002e141: R2 := R0 + 0x4C0
0002e146: R1 := 0xFFF
0002e14d: R0 := mem[R31 + 0x70, el]:u64
0002e152: R30 := 0x410028
0002e154: call @snprintf with return %0002e156

0002e156:
0002e15b: R0 := mem[R31 + 0x80, el]:u64
0002e160: R30 := 0x410030
0002e162: call @free with return %0002e164

0002e164:
0002e167: R0 := 0x430000
0002e16d: R0 := R0 + 0x390
0002e174: R0 := pad:64[mem[R0, el]:u32]
0002e179: VF := 0
0002e17c: CF := 1
0002e180: ZF := 31:0[R0] = 0
0002e184: NF := 31:31[R0]
0002e18a: when ZF goto %0002e188
0004617a: goto %0002e6f7

0002e6f7:
0002e6fc: R0 := mem[R31 + 0x48, el]:u64
0002e703: R0 := mem[R0 + 0x30, el]:u64
0002e709: R1 := R0
0002e70e: R0 := 0x41C000
0002e714: R0 := R0 + 0x4E8
0002e719: R30 := 0x41005C
0002e71b: call @printf with return %0002e188

0002e188:
0002e190: R0 := 0x32
0002e195: R30 := 0x410064
0002e197: call @zmalloc with return %0002e199

0002e199:
0002e19f: mem := mem with [R31 + 0xB0, el]:u64 <- R0
0002e1a6: R0 := mem[R31 + 0x70, el]:u64
0002e1ab: R30 := 0x410070
0002e1ad: call @strlen with return %0002e1af

0002e1af:
0002e1b3: R3 := pad:64[31:0[R0]]
0002e1b8: R0 := 0x41C000
0002e1be: R2 := R0 + 0x518
0002e1c3: R1 := 0x32
0002e1ca: R0 := mem[R31 + 0xB0, el]:u64
0002e1cf: R30 := 0x410088
0002e1d1: call @snprintf with return %0002e1d3

0002e1d3:
0002e1d6: R30 := 0x41008C
0002e1d8: call @new_rr_data with return %0002e1da

0002e1da:
0002e1e0: mem := mem with [R31 + 0x50, el]:u64 <- R0
0002e1e7: R0 := mem[R31 + 0x48, el]:u64
0002e1ec: R30 := 0x410098
0002e1ee: call @dup_rr_data with return %0002e1f0

0002e1f0:
0002e1f6: mem := mem with [R31 + 0x58, el]:u64 <- R0
0002e1fd: R0 := mem[R31 + 0x58, el]:u64
0002e204: R0 := mem[R0 + 0x28, el]:u64
0002e209: R30 := 0x4100A8
0002e20b: call @free with return %0002e20d

0002e20d:
0002e212: R19 := mem[R31 + 0x58, el]:u64
0002e217: R0 := 0x41C000
0002e21d: R0 := R0 + 0x520
0002e222: R30 := 0x4100B8
0002e224: call @strdup with return %0002e226

0002e226:
0002e22c: mem := mem with [R19 + 0x28, el]:u64 <- R0
0002e233: R0 := mem[R31 + 0x58, el]:u64
0002e23a: R4 := mem[R0 + 8, el]:u64
0002e241: R0 := mem[R31 + 0x48, el]:u64
0002e248: R0 := mem[R0 + 0x30, el]:u64
0002e24d: R3 := 1
0002e253: R2 := R0
0002e258: R0 := 0x41C000
0002e25e: R1 := R0 + 0x528
0002e264: R0 := R4
0002e269: R30 := 0x4100E4
0002e26b: call @hlist_mod with return %0002e26d

0002e26d:
0002e272: R0 := mem[R31 + 0x58, el]:u64
0002e279: R4 := mem[R0 + 8, el]:u64
0002e27e: R3 := 1
0002e283: R0 := 0x41C000
0002e289: R2 := R0 + 0x530
0002e28e: R0 := 0x41C000
0002e294: R1 := R0 + 0x558
0002e29a: R0 := R4
0002e29f: R30 := 0x410108
0002e2a1: call @hlist_mod with return %0002e2a3

0002e2a3:
0002e2a8: R0 := mem[R31 + 0x58, el]:u64
0002e2af: R4 := mem[R0 + 8, el]:u64
0002e2b4: R3 := 1
0002e2bb: R2 := mem[R31 + 0xB0, el]:u64
0002e2c0: R0 := 0x41C000
0002e2c6: R1 := R0 + 0x568
0002e2cc: R0 := R4
0002e2d1: R30 := 0x410128
0002e2d3: call @hlist_mod with return %0002e2d5

0002e2d5:
0002e2da: R0 := mem[R31 + 0xB0, el]:u64
0002e2df: R30 := 0x410130
0002e2e1: call @free with return %0002e2e3

0002e2e3:
0002e2e8: R0 := mem[R31 + 0x58, el]:u64
0002e2ef: R1 := mem[R0 + 0x30, el]:u64
0002e2f6: R0 := mem[R31 + 0x58, el]:u64
0002e2fd: R0 := mem[R0 + 0x40, el]:u64
0002e303: R2 := R0
0002e30a: R0 := mem[R31 + 0x38, el]:u64
0002e30f: R30 := 0x41014C
0002e311: call @proxy_connect with return %0002e313

0002e313:
0002e319: mem := mem with [R31 + 0x60, el]:u32 <- 31:0[R0]
0002e320: R1 := mem[R31 + 0x58, el]:u64
0002e327: R2 := mem[R31 + 0x50, el]:u64
0002e32d: R0 := R31 + 0x60
0002e334: R3 := mem[R31 + 0x38, el]:u64
0002e339: R30 := 0x410164
0002e33b: call @proxy_authenticate with return %0002e33d

0002e33d:
0002e341: R0 := extend:64[31:0[R0]]
0002e349: mem := mem with [R31 + 0x90, el]:u64 <- R0
0002e350: R0 := mem[R31 + 0x90, el]:u64
0002e355: VF := 0
0002e358: CF := 1
0002e35c: ZF := R0 = 0
0002e360: NF := 63:63[R0]
0002e366: when ZF goto %0002e364
0004617b: goto %0002e68b

0002e68b:
0002e690: R0 := mem[R31 + 0x50, el]:u64
0002e697: R0 := pad:64[mem[R0 + 0x10, el]:u32]
0002e69d: #297 := 31:0[R0] - 0x197
0002e6a2: VF := extend:64[#297] <> extend:64[31:0[R0]] - 0x197
0002e6a7: CF := pad:64[#297] <> pad:64[31:0[R0]] + 0xFFFFFE69
0002e6ab: ZF := #297 = 0
0002e6af: NF := 31:31[#297]
0002e6b4: when ZF <> 1 goto %0002e364
0004617c: goto %0002e6b8

0002e364:
0002e36c: R0 := 0x430000
0002e372: R0 := R0 + 0x390
0002e379: R0 := pad:64[mem[R0, el]:u32]
0002e37e: VF := 0
0002e381: CF := 1
0002e385: ZF := 31:0[R0] = 0
0002e389: NF := 31:31[R0]
0002e38f: when ZF goto %0002e38d
0004617d: goto %0002e679

0002e679:
0002e67c: R0 := 0x41C000
0002e682: R0 := R0 + 0x5B0
0002e687: R30 := 0x4101CC
0002e689: call @puts with return %0002e38d

0002e38d:
0002e397: R0 := pad:64[mem[R31 + 0x60, el]:u32]
0002e39c: R30 := 0x4101D4
0002e39e: call @close with return %0002e3a0

0002e3a0:
0002e3a5: mem := mem with [R31 + 0x60, el]:u32 <- 0
0004617e: goto %0002e3a7

0002e6b8:
0002e6bb: R0 := 0x430000
0002e6c1: R0 := R0 + 0x390
0002e6c8: R0 := pad:64[mem[R0, el]:u32]
0002e6cd: VF := 0
0002e6d0: CF := 1
0002e6d4: ZF := 31:0[R0] = 0
0002e6d8: NF := 31:31[R0]
0002e6dd: when ZF goto %0002e3a7
0004617f: goto %0002e6e1

0002e6e1:
0002e6e4: R0 := 0x41C000
0002e6ea: R0 := R0 + 0x578
0002e6ef: R30 := 0x4101A8
0002e6f1: call @puts with return %0002e6f3

0002e6f3:
0002e6f5: goto %0002e3a7

0002e3a7:
0002e3ac: R0 := mem[R31 + 0x50, el]:u64
0002e3b1: R30 := 0x4101E0
0002e3b3: call @reset_rr_data with return %0002e3b5

0002e3b5:
0002e3ba: R0 := pad:64[mem[R31 + 0x60, el]:u32]
0002e3bf: VF := 0
0002e3c2: CF := 1
0002e3c6: ZF := 31:0[R0] = 0
0002e3ca: NF := 31:31[R0]
0002e3d0: when ZF goto %0002e3ce
00046180: goto %0002e444

0002e444:
0002e449: R0 := pad:64[mem[R31 + 0x60, el]:u32]
0002e450: R1 := mem[R31 + 0x58, el]:u64
0002e455: R30 := 0x4101F8
0002e457: call @headers_send with return %0002e459

0002e459:
0002e45c: VF := 0
0002e45f: CF := 1
0002e463: ZF := 31:0[R0] = 0
0002e467: NF := 31:31[R0]
0002e46c: when ZF goto %0002e3ce
00046181: goto %0002e470

0002e470:
0002e475: R19 := pad:64[mem[R31 + 0x60, el]:u32]
0002e47c: R0 := mem[R31 + 0x70, el]:u64
0002e481: R30 := 0x41020C
0002e483: call @strlen with return %0002e485

0002e485:
0002e489: R2 := R0
0002e490: R1 := mem[R31 + 0x70, el]:u64
0002e496: R0 := pad:64[31:0[R19]]
0002e49b: R30 := 0x41021C
0002e49d: call @write_wrapper with return %0002e49f

0002e49f:
0002e4a2: VF := 0
0002e4a5: CF := 1
0002e4a9: ZF := R0 = 0
0002e4ad: NF := 63:63[R0]
0002e4b2: when ZF goto %0002e3ce
00046182: goto %0002e4b6

0002e4b6:
0002e4bb: R0 := pad:64[mem[R31 + 0x60, el]:u32]
0002e4c2: R1 := mem[R31 + 0x50, el]:u64
0002e4c7: R30 := 0x410230
0002e4c9: call @headers_recv with return %0002e4cb

0002e4cb:
0002e4ce: VF := 0
0002e4d1: CF := 1
0002e4d5: ZF := 31:0[R0] = 0
0002e4d9: NF := 31:31[R0]
0002e4de: when ZF goto %0002e3ce
00046183: goto %0002e4e2

0002e3ce:
0002e3d6: R0 := 0x430000
0002e3dc: R0 := R0 + 0x390
0002e3e3: R0 := pad:64[mem[R0, el]:u32]
0002e3e8: VF := 0
0002e3eb: CF := 1
0002e3ef: ZF := 31:0[R0] = 0
0002e3f3: NF := 31:31[R0]
0002e3f9: when ZF goto %0002e3f7
00046184: goto %0002e432

0002e432:
0002e435: R0 := 0x41C000
0002e43b: R0 := R0 + 0x5E8
0002e440: R30 := 0x410338
0002e442: call @puts with return %0002e3f7

0002e4e2:
0002e4e5: R0 := 0x430000
0002e4eb: R0 := R0 + 0x390
0002e4f2: R0 := pad:64[mem[R0, el]:u32]
0002e4f7: VF := 0
0002e4fa: CF := 1
0002e4fe: ZF := 31:0[R0] = 0
0002e502: NF := 31:31[R0]
0002e508: when ZF goto %0002e506
00046185: goto %0002e664

0002e664:
0002e669: R0 := mem[R31 + 0x50, el]:u64
0002e670: R0 := mem[R0 + 8, el]:u64
0002e675: R30 := 0x410258
0002e677: call @hlist_dump with return %0002e506

0002e506:
0002e510: R0 := mem[R31 + 0xC0, el]:u64
0002e515: VF := 0
0002e518: CF := 1
0002e51c: ZF := R0 = 0
0002e520: NF := 63:63[R0]
0002e526: when ZF <> 1 goto %0002e524
00046186: goto %0002e646

0002e646:
0002e64b: R0 := mem[R31 + 0xC8, el]:u64
0002e650: VF := 0
0002e653: CF := 1
0002e657: ZF := R0 = 0
0002e65b: NF := 63:63[R0]
0002e660: when ZF goto %0002e5c7
00046187: goto %0002e524

0002e524:
0002e52c: R0 := 0x14
0002e531: R30 := 0x410278
0002e533: call @zmalloc with return %0002e535

0002e535:
0002e53b: mem := mem with [R31 + 0xB0, el]:u64 <- R0
0002e542: R0 := mem[R31 + 0xC0, el]:u64
0002e547: VF := 0
0002e54a: CF := 1
0002e54e: ZF := R0 = 0
0002e552: NF := 63:63[R0]
0002e558: when ZF goto %0002e556
00046188: goto %0002e63b

0002e556:
0002e560: R0 := mem[R31 + 0xC8, el]:u64
00046189: goto %0002e562

0002e63b:
0002e640: R0 := mem[R31 + 0xC0, el]:u64
0002e644: goto %0002e562

0002e562:
0002e566: R3 := R0
0002e56b: R0 := 0x41C000
0002e571: R2 := R0 + 0x5E0
0002e576: R1 := 0x14
0002e57d: R0 := mem[R31 + 0xB0, el]:u64
0002e582: R30 := 0x4102AC
0002e584: call @snprintf with return %0002e586

0002e586:
0002e58b: R0 := mem[R31 + 0x50, el]:u64
0002e592: R4 := mem[R0 + 8, el]:u64
0002e599: R19 := mem[R31 + 0x50, el]:u64
0002e59e: R3 := 1
0002e5a5: R2 := mem[R31 + 0xB0, el]:u64
0002e5aa: R0 := 0x41C000
0002e5b0: R1 := R0 + 0x568
0002e5b6: R0 := R4
0002e5bb: R30 := 0x4102D0
0002e5bd: call @hlist_mod with return %0002e5bf

0002e5bf:
0002e5c5: mem := mem with [R19 + 8, el]:u64 <- R0
0004618a: goto %0002e5c7

0002e5c7:
0002e5cc: R0 := mem[R31 + 0x50, el]:u64
0002e5d3: R1 := pad:64[mem[R31 + 0xD4, el]:u32]
0002e5db: mem := mem with [R0 + 0x14, el]:u32 <- 31:0[R1]
0002e5e2: R0 := mem[R31 + 0x50, el]:u64
0002e5e8: R1 := R0
0002e5ef: R0 := mem[R31 + 0x40, el]:u64
0002e5f4: R30 := 0x4102F0
0002e5f6: call @copy_rr_data with return %0002e5f8

0002e5f8:
0002e5fd: R0 := mem[R31 + 0x28, el]:u64
0002e604: R0 := pad:64[mem[R0, el]:u32]
0002e609: R30 := 0x4102FC
0002e60b: call @close with return %0002e60d

0002e60d:
0002e612: R1 := pad:64[mem[R31 + 0x60, el]:u32]
0002e619: R0 := mem[R31 + 0x28, el]:u64
0002e621: mem := mem with [R0, el]:u32 <- 31:0[R1]
0002e628: mem := mem with [R31 + 0xF0, el]:u32 <- 0
0002e62d: R0 := 3
0002e635: mem := mem with [R31 + 0xDC, el]:u32 <- 31:0[R0]
0002e639: goto %0002e3f7

0002e3f7:
0002e400: R0 := R31 + 0x58
0002e405: R30 := 0x410340
0002e407: call @free_rr_data with return %0002e409

0002e409:
0002e40d: R0 := R31 + 0x50
0002e412: R30 := 0x410348
0002e414: call @free_rr_data with return %0002e416

0002e416:
0002e41b: R0 := mem[R31 + 0x70, el]:u64
0002e420: R30 := 0x410350
0002e422: call @free with return %0002e424

0002e424:
0002e429: R0 := mem[R31 + 0x78, el]:u64
0002e42e: R30 := 0x410358
0002e430: call @free with return %0002dfbb

0002dfbb:
0002dfc5: R0 := mem[R31 + 0x68, el]:u64
0002dfca: R30 := 0x410360
0002dfcc: call @free with return %0002dfce

0002dfce:
0002dfd3: R0 := mem[R31 + 0x88, el]:u64
0002dfd8: R30 := 0x410368
0002dfda: call @free with return %0002dfdc

0002dfdc:
0002dfde: goto %0002db10

0002db10:
0002db1a: R0 := pad:64[mem[R31 + 0xF0, el]:u32]
0002db1f: VF := 0
0002db22: CF := 1
0002db26: ZF := 31:0[R0] = 0
0002db2a: NF := 31:31[R0]
0002db30: when ZF goto %0002db2e
0004618b: goto %0002db8a

0002db8a:
0002db8d: R0 := 0x430000
0002db93: R0 := R0 + 0x390
0002db9a: R0 := pad:64[mem[R0, el]:u32]
0002db9f: VF := 0
0002dba2: CF := 1
0002dba6: ZF := 31:0[R0] = 0
0002dbaa: NF := 31:31[R0]
0002dbb0: when ZF goto %0002dbae
0004618c: goto %0002dc99

0002dc99:
0002dc9e: R1 := pad:64[mem[R31 + 0xF0, el]:u32]
0002dca3: R0 := 0x41C000
0002dca9: R0 := R0 + 0x630
0002dcae: R30 := 0x4103BC
0002dcb0: call @printf with return %0002dcb2

0002dcb2:
0002dcb7: R0 := mem[R31 + 0x40, el]:u64
0002dcbe: R0 := mem[R0 + 8, el]:u64
0002dcc3: R30 := 0x4103C8
0002dcc5: call @hlist_dump with return %0002dbae

0002dbae:
0002dbb8: R1 := mem[R31 + 0x40, el]:u64
0002dbbf: R0 := pad:64[mem[R31 + 0x34, el]:u32]
0002dbc4: R30 := 0x4103D4
0002dbc6: call @headers_send with return %0002dbc8

0002dbc8:
0002dbcb: VF := 0
0002dbce: CF := 1
0002dbd2: ZF := 31:0[R0] = 0
0002dbd6: NF := 31:31[R0]
0002dbdc: when ZF <> 1 goto %0002dbda
0004618d: goto %0002dc47

0002dbda:
0002dbe4: R0 := extend:64[mem[R31 + 0xF0, el]:u32]
0002dbea: R2 := R0
0002dbf1: R1 := mem[R31 + 0xF8, el]:u64
0002dbf8: R0 := pad:64[mem[R31 + 0x34, el]:u32]
0002dbfd: R30 := 0x410420
0002dbff: call @write_wrapper with return %0002dc01

0002dc01:
0002dc07: mem := mem with [R31 + 0xA4, el]:u32 <- 31:0[R0]
0002dc0e: R0 := pad:64[mem[R31 + 0xA4, el]:u32]
0002dc13: VF := 0
0002dc16: CF := 1
0002dc1a: ZF := 31:0[R0] = 0
0002dc1e: NF := 31:31[R0]
0002dc26: when ~(NF = VF & ~ZF) goto %0002dc24
0004618e: goto %0002dc36

0002dc24:
0002dc2c: R0 := 0x8000
0002dc34: mem := mem with [R31 + 0xDC, el]:u32 <- 31:0[R0]
0004618f: goto %0002db2e

0002dc36:
0002dc39: R0 := 2
0002dc41: mem := mem with [R31 + 0xDC, el]:u32 <- 31:0[R0]
0002dc45: goto %0002db2e

0002db2e:
0002db36: R0 := 0x430000
0002db3c: R0 := R0 + 0x390
0002db43: R0 := pad:64[mem[R0, el]:u32]
0002db48: VF := 0
0002db4b: CF := 1
0002db4f: ZF := 31:0[R0] = 0
0002db53: NF := 31:31[R0]
0002db59: when ZF goto %0002db57
00046190: goto %0002db71

0002db71:
0002db76: R1 := pad:64[mem[R31 + 0xDC, el]:u32]
0002db7b: R0 := 0x41C000
0002db81: R0 := R0 + 0x688
0002db86: R30 := 0x410468
0002db88: call @printf with return %0002db57

0002db57:
0002db61: R0 := mem[R31 + 0xF8, el]:u64
0002db66: R30 := 0x410470
0002db68: call @free with return %0002db6a

0002db6a:
0002db6f: R0 := pad:64[mem[R31 + 0xDC, el]:u32]
00046191: goto %0002d98a

0002dc47:
0002dc4a: R0 := 0x430000
0002dc50: R0 := R0 + 0x390
0002dc57: R0 := pad:64[mem[R0, el]:u32]
0002dc5c: VF := 0
0002dc5f: CF := 1
0002dc63: ZF := 31:0[R0] = 0
0002dc67: NF := 31:31[R0]
0002dc6d: when ZF goto %0002dc6b
00046192: goto %0002dc87

0002dc87:
0002dc8a: R0 := 0x41C000
0002dc90: R0 := R0 + 0x660
0002dc95: R30 := 0x4103FC
0002dc97: call @puts with return %0002dc6b

0002dc6b:
0002dc75: R0 := mem[R31 + 0xF8, el]:u64
0002dc7a: R30 := 0x410404
0002dc7c: call @free with return %0002dc7e

0002dc7e:
0002dc81: R0 := 0x8000
0002dc85: goto %0002d98a

0002ee41:
0002ee4b: R0 := pad:64[mem[R31 + 0xEC, el]:u32]
0002ee51: R0 := pad:64[31:0[R0] + 1]
0002ee59: mem := mem with [R31 + 0xEC, el]:u32 <- 31:0[R0]
00046193: goto %0002dd72

0002d97f:
0002d987: R0 := 3
0002d98c: goto %0002d98a

0002d98a:
0002d992: R19 := mem[R31 + 0x10, el]:u64
0002d999: R29 := mem[R31, el]:u64
0002d99e: R30 := mem[R31 + 8, el]:u64
0002d9a2: R31 := R31 + 0x100
0002d9a7: call R30 with noreturn

00046194: sub select(select_result)
000463b2: select_result :: out u32 = low:32[R0]

000293b5:
0003ff16: R16 := 0x430000
0003ff1d: R17 := mem[R16 + 0x288, el]:u64
0003ff23: R16 := R16 + 0x288
0003ff28: call R17 with noreturn

00046195: sub setgid(setgid_arg1, setgid_result)
000463b3: setgid_arg1 :: in u32 = low:32[R0]
000463b4: setgid_result :: out u32 = low:32[R0]

0003c212:
0003fcc4: R16 := 0x430000
0003fccb: R17 := mem[R16 + 0x1B0, el]:u64
0003fcd1: R16 := R16 + 0x1B0
0003fcd6: call R17 with noreturn

00046196: sub setlogmask(setlogmask_result)
000463b5: setlogmask_result :: out u32 = low:32[R0]

0003b13f:
0003f928: R16 := 0x430000
0003f92f: R17 := mem[R16 + 0x60, el]:u64
0003f935: R16 := R16 + 0x60
0003f93a: call R17 with noreturn

00046197: sub setsid(setsid_result)
000463b6: setsid_result :: out u32 = low:32[R0]

0003c4ca:
0003ff2c: R16 := 0x430000
0003ff33: R17 := mem[R16 + 0x290, el]:u64
0003ff39: R16 := R16 + 0x290
0003ff3e: call R17 with noreturn

00046198: sub setsockopt(setsockopt_fd, setsockopt_level, setsockopt_optnmae, setsockopt_optval, setsockopt_len, setsockopt_result)
000463b7: setsockopt_fd :: in u32 = low:32[R0]
000463b8: setsockopt_level :: in u32 = low:32[R1]
000463b9: setsockopt_optnmae :: in u32 = low:32[R2]
000463ba: setsockopt_optval :: in out u64 = R3
000463bb: setsockopt_len :: in u64 = R4
000463bc: setsockopt_result :: out u32 = low:32[R0]

00024759:
0003fae0: R16 := 0x430000
0003fae7: R17 := mem[R16 + 0x100, el]:u64
0003faed: R16 := R16 + 0x100
0003faf2: call R17 with noreturn

00046199: sub setuid(setuid_arg1, setuid_result)
000463bd: setuid_arg1 :: in u32 = low:32[R0]
000463be: setuid_result :: out u32 = low:32[R0]

0003c238:
0003f862: R16 := 0x430000
0003f869: R17 := mem[R16 + 0x18, el]:u64
0003f86f: R16 := R16 + 0x18
0003f874: call R17 with noreturn

0004619a: sub sighandler(sighandler_result)
000463bf: sighandler_result :: out u32 = low:32[R0]

000280eb:
000280ef: #213 := R31 - 0x20
000280f5: mem := mem with [#213, el]:u64 <- R29
000280fb: mem := mem with [#213 + 8, el]:u64 <- R30
000280ff: R31 := #213
00028105: R29 := R31
0002810d: mem := mem with [R31 + 0x1C, el]:u32 <- 31:0[R0]
00028112: R0 := 0x430000
00028118: R0 := R0 + 0x3A0
0002811f: R0 := pad:64[mem[R0, el]:u32]
00028124: VF := 0
00028127: CF := 1
0002812b: ZF := 31:0[R0] = 0
0002812f: NF := 31:31[R0]
00028135: when ZF <> 1 goto %00028133
0004619b: goto %00033d25

00028133:
0002813d: R2 := pad:64[mem[R31 + 0x1C, el]:u32]
00028142: R0 := 0x419000
00028148: R1 := R0 + 0xF48
0002814d: R0 := 6
00028152: R30 := 0x408898
00028154: call @syslog with return %00028156

00033d25:
00033d2a: R2 := pad:64[mem[R31 + 0x1C, el]:u32]
00033d2f: R0 := 0x419000
00033d35: R1 := R0 + 0xF18
00033d3a: R0 := 6
00033d3f: R30 := 0x408880
00033d41: call @syslog with return %00033d43

00033d43:
00033d45: goto %00028156

00028156:
00028159: R0 := 0x430000
0002815f: R0 := R0 + 0x3A0
00028166: R0 := pad:64[mem[R0, el]:u32]
0002816c: R2 := pad:64[31:0[R0] + 1]
00028171: R1 := 0x430000
00028177: R1 := R1 + 0x3A0
0002817f: mem := mem with [R1, el]:u32 <- 31:0[R2]
00028184: VF := 0
00028187: CF := 1
0002818b: ZF := 31:0[R0] = 0
0002818f: NF := 31:31[R0]
00028195: when ZF <> 1 goto %00028193
0004619c: goto %00033cfc

00033cfc:
00033cff: R0 := 0x430000
00033d05: R0 := R0 + 0x390
00033d0c: R0 := pad:64[mem[R0, el]:u32]
00033d11: VF := 0
00033d14: CF := 1
00033d18: ZF := 31:0[R0] = 0
00033d1c: NF := 31:31[R0]
00033d21: when ZF goto %000281c3
0004619d: goto %00028193

00028193:
0002819b: R0 := 0x430000
000281a1: R0 := R0 + 0x3A0
000281a8: R0 := pad:64[mem[R0, el]:u32]
000281ae: R1 := pad:64[31:0[R0] + 1]
000281b3: R0 := 0x430000
000281b9: R0 := R0 + 0x3A0
000281c1: mem := mem with [R0, el]:u32 <- 31:0[R1]
0004619e: goto %000281c3

000281c3:
000281ca: R29 := mem[R31, el]:u64
000281cf: R30 := mem[R31 + 8, el]:u64
000281d3: R31 := R31 + 0x20
000281d8: call R30 with noreturn

0004619f: sub signal(signal_result)
000463c0: signal_result :: out u32 = low:32[R0]

0003b19b:
0003fa04: R16 := 0x430000
0003fa0b: R17 := mem[R16 + 0xB0, el]:u64
0003fa11: R16 := R16 + 0xB0
0003fa16: call R17 with noreturn

000461a0: sub snprintf(snprintf_str, snprintf_size, snprintf_format, snprintf_result)
000463c1: snprintf_str :: in out u64 = R0
000463c2: snprintf_size :: in u64 = R1
000463c3: snprintf_format :: in u64 = R2
000463c4: snprintf_result :: out u32 = low:32[R0]

00016959:
0003f9d8: R16 := 0x430000
0003f9df: R17 := mem[R16 + 0xA0, el]:u64
0003f9e5: R16 := R16 + 0xA0
0003f9ea: call R17 with noreturn

000461a1: sub so_closed(so_closed_result)
000463c5: so_closed_result :: out u32 = low:32[R0]

00025023:
0002502a: #156 := R31 - 0x30
00025030: mem := mem with [#156, el]:u64 <- R29
00025036: mem := mem with [#156 + 8, el]:u64 <- R30
0002503a: R31 := #156
00025040: R29 := R31
00025048: mem := mem with [R31 + 0x1C, el]:u32 <- 31:0[R0]
0002504f: R0 := pad:64[mem[R31 + 0x1C, el]:u32]
00025055: #157 := 31:0[R0] + 1
0002505a: VF := extend:64[#157] <> extend:64[31:0[R0]] + 1
0002505f: CF := pad:64[#157] <> pad:64[31:0[R0]] + 1
00025063: ZF := #157 = 0
00025067: NF := 31:31[#157]
0002506d: when ZF <> 1 goto %0002506b
000461a2: goto %00025620

0002506b:
00025075: R0 := pad:64[mem[R31 + 0x1C, el]:u32]
0002507a: R30 := 0x410C94
0002507d: call @so_recvtest with return %00025159

00025159:
0002515f: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
00025166: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0002516b: VF := 0
0002516e: CF := 1
00025172: ZF := 31:0[R0] = 0
00025176: NF := 31:31[R0]
0002517c: when ZF goto %0002517a
000461a3: goto %000255a0

000255a0:
000255a5: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
000255ab: #169 := 31:0[R0] + 1
000255b0: VF := extend:64[#169] <> extend:64[31:0[R0]] + 1
000255b5: CF := pad:64[#169] <> pad:64[31:0[R0]] + 1
000255b9: ZF := #169 = 0
000255bd: NF := 31:31[#169]
000255c2: when ZF <> 1 goto %0002559b
000461a4: goto %000255c6

000255c6:
000255c9: R30 := 0x410CB4
000255cb: call @__errno_location with return %000255cd

000255cd:
000255d2: R0 := pad:64[mem[R0, el]:u32]
000255d8: #170 := 31:0[R0] - 0xB
000255dd: VF := extend:64[#170] <> extend:64[31:0[R0]] - 0xB
000255e2: CF := pad:64[#170] <> pad:64[31:0[R0]] + 0xFFFFFFF5
000255e6: ZF := #170 = 0
000255ea: NF := 31:31[#170]
000255ef: when ZF goto %0002559b
000461a5: goto %000255f3

000255f3:
000255f6: R30 := 0x410CC4
000255f8: call @__errno_location with return %000255fa

000255fa:
000255ff: R0 := pad:64[mem[R0, el]:u32]
00025605: #171 := 31:0[R0] - 2
0002560a: VF := extend:64[#171] <> extend:64[31:0[R0]] - 2
0002560f: CF := pad:64[#171] <> pad:64[31:0[R0]] + 0xFFFFFFFE
00025613: ZF := #171 = 0
00025617: NF := 31:31[#171]
0002561c: when ZF goto %0002559b
000461a6: goto %0002517a

0002559b:
0002559e: R0 := 0
000461a7: goto %00025185

0002517a:
00025182: R0 := 1
00025187: goto %00025185

00025620:
00025623: R0 := 1
00025627: goto %00025185

00025185:
0002518d: R29 := mem[R31, el]:u64
00025192: R30 := mem[R31 + 8, el]:u64
00025196: R31 := R31 + 0x30
0002519b: call R30 with noreturn

000461a8: sub so_connect(so_connect_result)
000463c6: so_connect_result :: out u32 = low:32[R0]

00024463:
00024467: #140 := R31 - 0x70
0002446d: mem := mem with [#140, el]:u64 <- R29
00024473: mem := mem with [#140 + 8, el]:u64 <- R30
00024477: R31 := #140
0002447d: R29 := R31
00024485: mem := mem with [R31 + 0x18, el]:u64 <- R0
0002448a: R0 := 0xFFFFFFFF
00024492: mem := mem with [R31 + 0x6C, el]:u32 <- 31:0[R0]
00024498: R0 := R31 + 0x20
0002449d: V0 := 0
000244a5: mem := mem with [R0, el]:u128 <- V0
000244ab: mem := mem with [R0 + 0x10, el]:u128 <- V0
000244b3: mem := mem with [R0 + 0x1E, el]:u128 <- V0
000244ba: R0 := mem[R31 + 0x18, el]:u64
000244c2: mem := mem with [R31 + 0x60, el]:u64 <- R0
000244c7: goto %000244c5

000244c5:
000244cd: R0 := mem[R31 + 0x60, el]:u64
000244d2: VF := 0
000244d5: CF := 1
000244d9: ZF := R0 = 0
000244dd: NF := 63:63[R0]
000244e3: when ZF <> 1 goto %000244e1
000461a9: goto %00025d78

00025d78:
00025d7a: goto %0002462f

000244e1:
000244eb: R0 := mem[R31 + 0x60, el]:u64
000244f2: R0 := pad:64[mem[R0 + 4, el]:u32]
000244f7: R2 := 0
000244fc: R1 := 1
00024501: R30 := 0x4106C8
00024504: call @socket with return %00024506

00024506:
0002450c: mem := mem with [R31 + 0x6C, el]:u32 <- 31:0[R0]
00024513: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
00024518: VF := 0
0002451b: CF := 1
0002451f: ZF := 31:0[R0] = 0
00024523: NF := 31:31[R0]
0002452a: when NF = VF goto %00024528
000461aa: goto %00025d19

00024528:
00024530: R0 := 0x430000
00024536: R0 := R0 + 0x390
0002453d: R0 := pad:64[mem[R0, el]:u32]
00024542: VF := 0
00024545: CF := 1
00024549: ZF := 31:0[R0] = 0
0002454d: NF := 31:31[R0]
00024553: when ZF goto %00024551
000461ab: goto %00025bd2

00025bd2:
00025bd7: R0 := mem[R31 + 0x60, el]:u64
00025bde: R0 := mem[R0 + 0x18, el]:u64
00025be5: R0 := pad:64[mem[R0, el]:u16]
00025beb: R4 := pad:64[31:0[R0]]
00025bf2: R0 := mem[R31 + 0x60, el]:u64
00025bf9: R0 := mem[R0 + 0x18, el]:u64
00025c00: R0 := pad:64[mem[R0, el]:u16]
00025c06: #172 := 31:0[R0] - 2
00025c0b: VF := extend:64[#172] <> extend:64[31:0[R0]] - 2
00025c10: CF := pad:64[#172] <> pad:64[31:0[R0]] + 0xFFFFFFFE
00025c14: ZF := #172 = 0
00025c18: NF := 31:31[#172]
00025c1e: when ZF <> 1 goto %00025c1c
000461ac: goto %00025d01

00025c1c:
00025c26: R0 := mem[R31 + 0x60, el]:u64
00025c2d: R0 := mem[R0 + 0x18, el]:u64
00025c33: R0 := R0 + 8
000461ad: goto %00025c35

00025d01:
00025d06: R0 := mem[R31 + 0x60, el]:u64
00025d0d: R0 := mem[R0 + 0x18, el]:u64
00025d13: R0 := R0 + 4
00025d17: goto %00025c35

00025c35:
00025c39: R1 := R31 + 0x20
00025c3e: R3 := 0x2E
00025c44: R2 := R1
00025c4a: R1 := R0
00025c50: R0 := pad:64[31:0[R4]]
00025c55: R30 := 0x41077C
00025c57: call @inet_ntop with return %00025c59

00025c59:
00025c5e: R0 := mem[R31 + 0x60, el]:u64
00025c65: R0 := mem[R0 + 0x18, el]:u64
00025c6c: R0 := pad:64[mem[R0, el]:u16]
00025c72: #173 := 31:0[R0] - 2
00025c77: VF := extend:64[#173] <> extend:64[31:0[R0]] - 2
00025c7c: CF := pad:64[#173] <> pad:64[31:0[R0]] + 0xFFFFFFFE
00025c80: ZF := #173 = 0
00025c84: NF := 31:31[#173]
00025c8a: when ZF <> 1 goto %00025c88
000461ae: goto %00025ce8

00025c88:
00025c92: R0 := mem[R31 + 0x60, el]:u64
00025c99: R0 := mem[R0 + 0x18, el]:u64
00025ca0: R0 := pad:64[mem[R0 + 2, el]:u16]
000461af: goto %00025ca2

00025ce8:
00025ced: R0 := mem[R31 + 0x60, el]:u64
00025cf4: R0 := mem[R0 + 0x18, el]:u64
00025cfb: R0 := pad:64[mem[R0 + 2, el]:u16]
00025cff: goto %00025ca2

00025ca2:
00025ca8: mem := mem with [R31 + 0x5E, el]:u16 <- 15:0[R0]
00025caf: R0 := pad:64[mem[R31 + 0x5E, el]:u16]
00025cb4: R30 := 0x4107B8
00025cb6: call @ntohs with return %00025cb8

00025cb8:
00025cbc: R0 := pad:64[15:0[R0]]
00025cc2: R1 := pad:64[31:0[R0]]
00025cc8: R0 := R31 + 0x20
00025cce: R2 := pad:64[31:0[R1]]
00025cd4: R1 := R0
00025cd9: R0 := 0x41C000
00025cdf: R0 := R0 + 0x708
00025ce4: R30 := 0x4107D8
00025ce6: call @printf with return %00024551

00024551:
00024559: R2 := 0
0002455e: R1 := 3
00024565: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
0002456a: R30 := 0x4107E8
0002456d: call @fcntl with return %0002456f

0002456f:
00024575: mem := mem with [R31 + 0x58, el]:u32 <- 31:0[R0]
0002457c: R0 := pad:64[mem[R31 + 0x58, el]:u32]
00024581: VF := 0
00024584: CF := 1
00024588: ZF := 31:0[R0] = 0
0002458c: NF := 31:31[R0]
00024593: when NF = VF goto %00024591
000461b0: goto %00025b6a

00024591:
0002459b: R0 := mem[R31 + 0x60, el]:u64
000245a2: R1 := mem[R0 + 0x18, el]:u64
000245a9: R0 := mem[R31 + 0x60, el]:u64
000245b0: R0 := pad:64[mem[R0 + 0x10, el]:u32]
000245b6: R2 := pad:64[31:0[R0]]
000245bd: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
000245c2: R30 := 0x410850
000245c5: call @connect with return %000245c7

000245c7:
000245cd: mem := mem with [R31 + 0x54, el]:u32 <- 31:0[R0]
000245d4: R0 := pad:64[mem[R31 + 0x54, el]:u32]
000245d9: VF := 0
000245dc: CF := 1
000245e0: ZF := 31:0[R0] = 0
000245e4: NF := 31:31[R0]
000245eb: when NF = VF goto %000245e9
000461b1: goto %00025af5

000245e9:
000245f3: R0 := pad:64[mem[R31 + 0x58, el]:u32]
000245fa: R0 := pad:64[31:12[R0].pad:12[10:0[R0]]]
00024600: R2 := pad:64[31:0[R0]]
00024605: R1 := 4
0002460c: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
00024611: R30 := 0x4108BC
00024613: call @fcntl with return %00024615

00024615:
00024618: VF := 0
0002461b: CF := 1
0002461f: ZF := 31:0[R0] = 0
00024623: NF := 31:31[R0]
0002462a: when NF = VF goto %00024628
000461b2: goto %00025a6c

00024628:
000461b3: goto %0002462f

0002462f:
00024634: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
000461b4: goto %00024636

00025a6c:
00025a6f: R0 := 0x430000
00025a75: R0 := R0 + 0x390
00025a7c: R0 := pad:64[mem[R0, el]:u32]
00025a81: VF := 0
00025a84: CF := 1
00025a88: ZF := 31:0[R0] = 0
00025a8c: NF := 31:31[R0]
00025a92: when ZF goto %00025a90
000461b5: goto %00025ac8

00025ac8:
00025acb: R30 := 0x4108DC
00025acd: call @__errno_location with return %00025acf

00025acf:
00025ad4: R0 := pad:64[mem[R0, el]:u32]
00025ad9: R30 := 0x4108E4
00025adb: call @strerror with return %00025add

00025add:
00025ae1: R1 := R0
00025ae6: R0 := 0x41C000
00025aec: R0 := R0 + 0x750
00025af1: R30 := 0x4108F4
00025af3: call @printf with return %00025a90

00025a90:
00025a9a: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
00025a9f: R30 := 0x4108FC
00025aa1: call @close with return %00025aa3

00025aa3:
00025aa6: R0 := 0xFFFFFFFF
00025aae: mem := mem with [R31 + 0x6C, el]:u32 <- 31:0[R0]
000461b6: goto %00025ab2

00025af5:
00025af8: R0 := 0x430000
00025afe: R0 := R0 + 0x390
00025b05: R0 := pad:64[mem[R0, el]:u32]
00025b0a: VF := 0
00025b0d: CF := 1
00025b11: ZF := 31:0[R0] = 0
00025b15: NF := 31:31[R0]
00025b1b: when ZF goto %00025b19
000461b7: goto %00025b3d

00025b3d:
00025b40: R30 := 0x410878
00025b42: call @__errno_location with return %00025b44

00025b44:
00025b49: R0 := pad:64[mem[R0, el]:u32]
00025b4e: R30 := 0x410880
00025b50: call @strerror with return %00025b52

00025b52:
00025b56: R1 := R0
00025b5b: R0 := 0x41C000
00025b61: R0 := R0 + 0x740
00025b66: R30 := 0x410890
00025b68: call @printf with return %00025b19

00025b19:
00025b23: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
00025b28: R30 := 0x410898
00025b2a: call @close with return %00025b2c

00025b2c:
00025b2f: R0 := 0xFFFFFFFF
00025b37: mem := mem with [R31 + 0x6C, el]:u32 <- 31:0[R0]
00025b3b: goto %00025ab2

00025b6a:
00025b6d: R0 := 0x430000
00025b73: R0 := R0 + 0x390
00025b7a: R0 := pad:64[mem[R0, el]:u32]
00025b7f: VF := 0
00025b82: CF := 1
00025b86: ZF := 31:0[R0] = 0
00025b8a: NF := 31:31[R0]
00025b90: when ZF goto %00025b8e
000461b8: goto %00025ba5

00025ba5:
00025ba8: R30 := 0x410810
00025baa: call @__errno_location with return %00025bac

00025bac:
00025bb1: R0 := pad:64[mem[R0, el]:u32]
00025bb6: R30 := 0x410818
00025bb8: call @strerror with return %00025bba

00025bba:
00025bbe: R1 := R0
00025bc3: R0 := 0x41C000
00025bc9: R0 := R0 + 0x720
00025bce: R30 := 0x410828
00025bd0: call @printf with return %00025b8e

00025b8e:
00025b98: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
00025b9d: R30 := 0x410830
00025b9f: call @close with return %00025ba1

00025ba1:
00025ba3: goto %00025ab2

00025ab2:
00025ab7: R0 := mem[R31 + 0x60, el]:u64
00025abe: R0 := mem[R0 + 0x28, el]:u64
00025ac6: mem := mem with [R31 + 0x60, el]:u64 <- R0
000461b9: goto %000244c5

00025d19:
00025d1c: R0 := 0x430000
00025d22: R0 := R0 + 0x390
00025d29: R0 := pad:64[mem[R0, el]:u32]
00025d2e: VF := 0
00025d31: CF := 1
00025d35: ZF := 31:0[R0] = 0
00025d39: NF := 31:31[R0]
00025d3f: when ZF goto %00025d3d
000461ba: goto %00025d4b

00025d4b:
00025d4e: R30 := 0x4106F0
00025d50: call @__errno_location with return %00025d52

00025d52:
00025d57: R0 := pad:64[mem[R0, el]:u32]
00025d5c: R30 := 0x4106F8
00025d5e: call @strerror with return %00025d60

00025d60:
00025d64: R1 := R0
00025d69: R0 := 0x41C000
00025d6f: R0 := R0 + 0x6F0
00025d74: R30 := 0x410708
00025d76: call @printf with return %00025d3d

00025d3d:
00025d45: R0 := 0xFFFFFFFF
00025d49: goto %00024636

00024636:
0002463b: R29 := mem[R31, el]:u64
00024640: R30 := mem[R31 + 8, el]:u64
00024644: R31 := R31 + 0x70
00024649: call R30 with noreturn

000461bb: sub so_dataready(so_dataready_result)
000463c7: so_dataready_result :: out u32 = low:32[R0]

000250eb:
000250ef: #159 := R31 - 0x20
000250f5: mem := mem with [#159, el]:u64 <- R29
000250fb: mem := mem with [#159 + 8, el]:u64 <- R30
000250ff: R31 := #159
00025105: R29 := R31
0002510d: mem := mem with [R31 + 0x1C, el]:u32 <- 31:0[R0]
00025114: R0 := pad:64[mem[R31 + 0x1C, el]:u32]
00025119: R30 := 0x410C58
0002511b: call @so_recvtest with return %0002511d

0002511d:
00025120: VF := 0
00025123: CF := 1
00025127: ZF := 31:0[R0] = 0
0002512b: NF := 31:31[R0]
00025139: when ~(NF = VF & ~ZF) goto %00025132
0002513a: goto %00025135

00025135:
00025136: R0 := 1
0002513c: goto %00025138

00025132:
00025133: R0 := 0
0002513b: goto %00025138

00025138:
00025142: R0 := pad:64[7:0[R0]]
00025149: R29 := mem[R31, el]:u64
0002514e: R30 := mem[R31 + 8, el]:u64
00025152: R31 := R31 + 0x20
00025157: call R30 with noreturn

000461bc: sub so_listen(so_listen_result)
000463c8: so_listen_result :: out u32 = low:32[R0]

0002464b:
0002464f: #141 := R31 - 0x90
00024655: mem := mem with [#141, el]:u64 <- R29
0002465b: mem := mem with [#141 + 8, el]:u64 <- R30
0002465f: R31 := #141
00024665: R29 := R31
0002466d: mem := mem with [R31 + 0x10, el]:u64 <- R19
00024675: mem := mem with [R31 + 0x38, el]:u64 <- R0
0002467d: mem := mem with [R31 + 0x30, el]:u64 <- R1
00024685: mem := mem with [R31 + 0x28, el]:u64 <- R2
0002468b: R0 := R31 + 0x48
00024690: V0 := 0
00024698: mem := mem with [R0, el]:u128 <- V0
0002469e: mem := mem with [R0 + 0x10, el]:u128 <- V0
000246a6: mem := mem with [R0 + 0x1E, el]:u128 <- V0
000246ad: mem := mem with [R31 + 0x84, el]:u32 <- 0
000246b4: R0 := mem[R31 + 0x30, el]:u64
000246bc: mem := mem with [R31 + 0x88, el]:u64 <- R0
000246c1: goto %000246bf

000246bf:
000246c7: R0 := mem[R31 + 0x88, el]:u64
000246cc: VF := 0
000246cf: CF := 1
000246d3: ZF := R0 = 0
000246d7: NF := 63:63[R0]
000246dd: when ZF <> 1 goto %000246db
000461bd: goto %00025a49

00025a49:
00025a4e: R0 := pad:64[mem[R31 + 0x84, el]:u32]
00025a55: R19 := mem[R31 + 0x10, el]:u64
00025a5c: R29 := mem[R31, el]:u64
00025a61: R30 := mem[R31 + 8, el]:u64
00025a65: R31 := R31 + 0x90
00025a6a: call R30 with noreturn

000246db:
000246e5: R0 := mem[R31 + 0x88, el]:u64
000246ec: R0 := pad:64[mem[R0 + 4, el]:u32]
000246f1: R2 := 0
000246f6: R1 := 1
000246fb: R30 := 0x410980
000246fd: call @socket with return %000246ff

000246ff:
00024705: mem := mem with [R31 + 0x80, el]:u32 <- 31:0[R0]
0002470c: R0 := pad:64[mem[R31 + 0x80, el]:u32]
00024711: VF := 0
00024714: CF := 1
00024718: ZF := 31:0[R0] = 0
0002471c: NF := 31:31[R0]
00024723: when NF = VF goto %00024721
000461be: goto %000259e1

00024721:
00024729: R0 := 1
00024731: mem := mem with [R31 + 0x78, el]:u32 <- 31:0[R0]
00024737: R0 := R31 + 0x78
0002473c: R4 := 4
00024742: R3 := R0
00024747: R2 := 2
0002474c: R1 := 1
00024753: R0 := pad:64[mem[R31 + 0x80, el]:u32]
00024758: R30 := 0x4109F0
0002475b: call @setsockopt with return %0002475d

0002475d:
00024760: VF := 0
00024763: CF := 1
00024767: ZF := 31:0[R0] = 0
0002476b: NF := 31:31[R0]
00024771: when ZF goto %0002476f
000461bf: goto %000259af

000259af:
000259b2: R30 := 0x4109FC
000259b4: call @__errno_location with return %000259b6

000259b6:
000259bb: R0 := pad:64[mem[R0, el]:u32]
000259c0: R30 := 0x410A04
000259c2: call @strerror with return %000259c4

000259c4:
000259c8: R2 := R0
000259cd: R0 := 0x41C000
000259d3: R1 := R0 + 0x790
000259d8: R0 := 4
000259dd: R30 := 0x410A18
000259df: call @syslog with return %0002476f

0002476f:
00024779: R0 := mem[R31 + 0x88, el]:u64
00024780: R0 := pad:64[mem[R0 + 4, el]:u32]
00024786: #142 := 31:0[R0] - 0xA
0002478b: VF := extend:64[#142] <> extend:64[31:0[R0]] - 0xA
00024790: CF := pad:64[#142] <> pad:64[31:0[R0]] + 0xFFFFFFF6
00024794: ZF := #142 = 0
00024798: NF := 31:31[#142]
0002479e: when ZF <> 1 goto %0002479c
000461c0: goto %00025930

00025930:
00025933: R0 := 1
0002593b: mem := mem with [R31 + 0x78, el]:u32 <- 31:0[R0]
00025941: R0 := R31 + 0x78
00025946: R4 := 4
0002594c: R3 := R0
00025951: R2 := 0x1A
00025956: R1 := 0x29
0002595d: R0 := pad:64[mem[R31 + 0x80, el]:u32]
00025962: R30 := 0x410A4C
00025964: call @setsockopt with return %00025966

00025966:
00025969: VF := 0
0002596c: CF := 1
00025970: ZF := 31:0[R0] = 0
00025974: NF := 31:31[R0]
00025979: when ZF goto %0002479c
000461c1: goto %0002597d

0002597d:
00025980: R30 := 0x410A58
00025982: call @__errno_location with return %00025984

00025984:
00025989: R0 := pad:64[mem[R0, el]:u32]
0002598e: R30 := 0x410A60
00025990: call @strerror with return %00025992

00025992:
00025996: R2 := R0
0002599b: R0 := 0x41C000
000259a1: R1 := R0 + 0x7D0
000259a6: R0 := 4
000259ab: R30 := 0x410A74
000259ad: call @syslog with return %0002479c

0002479c:
000247a6: R0 := mem[R31 + 0x88, el]:u64
000247ad: R0 := mem[R0 + 0x18, el]:u64
000247b4: R0 := pad:64[mem[R0, el]:u16]
000247ba: R4 := pad:64[31:0[R0]]
000247c1: R0 := mem[R31 + 0x88, el]:u64
000247c8: R0 := mem[R0 + 0x18, el]:u64
000247cf: R0 := pad:64[mem[R0, el]:u16]
000247d5: #143 := 31:0[R0] - 2
000247da: VF := extend:64[#143] <> extend:64[31:0[R0]] - 2
000247df: CF := pad:64[#143] <> pad:64[31:0[R0]] + 0xFFFFFFFE
000247e3: ZF := #143 = 0
000247e7: NF := 31:31[#143]
000247ed: when ZF <> 1 goto %000247eb
000461c2: goto %00025918

000247eb:
000247f5: R0 := mem[R31 + 0x88, el]:u64
000247fc: R0 := mem[R0 + 0x18, el]:u64
00024802: R0 := R0 + 8
000461c3: goto %00024804

00025918:
0002591d: R0 := mem[R31 + 0x88, el]:u64
00025924: R0 := mem[R0 + 0x18, el]:u64
0002592a: R0 := R0 + 4
0002592e: goto %00024804

00024804:
00024808: R1 := R31 + 0x48
0002480d: R3 := 0x2E
00024813: R2 := R1
00024819: R1 := R0
0002481f: R0 := pad:64[31:0[R4]]
00024824: R30 := 0x410ACC
00024827: call @inet_ntop with return %00024829

00024829:
0002482e: R0 := mem[R31 + 0x88, el]:u64
00024835: R0 := mem[R0 + 0x18, el]:u64
0002483c: R0 := pad:64[mem[R0, el]:u16]
00024842: #144 := 31:0[R0] - 2
00024847: VF := extend:64[#144] <> extend:64[31:0[R0]] - 2
0002484c: CF := pad:64[#144] <> pad:64[31:0[R0]] + 0xFFFFFFFE
00024850: ZF := #144 = 0
00024854: NF := 31:31[#144]
0002485a: when ZF <> 1 goto %00024858
000461c4: goto %000258ff

00024858:
00024862: R0 := mem[R31 + 0x88, el]:u64
00024869: R0 := mem[R0 + 0x18, el]:u64
00024870: R0 := pad:64[mem[R0 + 2, el]:u16]
000461c5: goto %00024872

000258ff:
00025904: R0 := mem[R31 + 0x88, el]:u64
0002590b: R0 := mem[R0 + 0x18, el]:u64
00025912: R0 := pad:64[mem[R0 + 2, el]:u16]
00025916: goto %00024872

00024872:
00024878: mem := mem with [R31 + 0x7E, el]:u16 <- 15:0[R0]
0002487f: R0 := mem[R31 + 0x88, el]:u64
00024886: R1 := mem[R0 + 0x18, el]:u64
0002488d: R0 := mem[R31 + 0x88, el]:u64
00024894: R0 := pad:64[mem[R0 + 0x10, el]:u32]
0002489a: R2 := pad:64[31:0[R0]]
000248a1: R0 := pad:64[mem[R31 + 0x80, el]:u32]
000248a6: R30 := 0x410B1C
000248a9: call @bind with return %000248ab

000248ab:
000248ae: VF := 0
000248b1: CF := 1
000248b5: ZF := 31:0[R0] = 0
000248b9: NF := 31:31[R0]
000248bf: when ZF goto %000248bd
000461c6: goto %00025889

000248bd:
000248c5: R1 := 0x1000
000248cc: R0 := pad:64[mem[R31 + 0x80, el]:u32]
000248d1: R30 := 0x410B7C
000248d4: call @listen with return %000248d6

000248d6:
000248d9: VF := 0
000248dc: CF := 1
000248e0: ZF := 31:0[R0] = 0
000248e4: NF := 31:31[R0]
000248ea: when ZF goto %000248e8
000461c7: goto %00025877

000248e8:
000248f2: R0 := mem[R31 + 0x38, el]:u64
000248f9: R0 := mem[R0, el]:u64
00024900: R1 := extend:64[mem[R31 + 0x80, el]:u32]
00024907: R2 := mem[R31 + 0x28, el]:u64
0002490c: R30 := 0x410BA4
0002490f: call @plist_add with return %000257f3

000257f3:
000257f7: R1 := R0
000257fe: R0 := mem[R31 + 0x38, el]:u64
00025806: mem := mem with [R0, el]:u64 <- R1
0002580d: R0 := pad:64[mem[R31 + 0x7E, el]:u16]
00025812: R30 := 0x410BB8
00025815: call @ntohs with return %00025817

00025817:
0002581b: R0 := pad:64[15:0[R0]]
00025821: R1 := pad:64[31:0[R0]]
00025827: R0 := R31 + 0x48
0002582d: R3 := pad:64[31:0[R1]]
00025833: R2 := R0
00025838: R0 := 0x41C000
0002583e: R1 := R0 + 0x838
00025843: R0 := 6
00025848: R30 := 0x410BDC
0002584a: call @syslog with return %0002584c

0002584c:
00025851: R0 := pad:64[mem[R31 + 0x84, el]:u32]
00025857: R0 := pad:64[31:0[R0] + 1]
0002585f: mem := mem with [R31 + 0x84, el]:u32 <- 31:0[R0]
000461c8: goto %00025861

00025877:
0002587c: R0 := pad:64[mem[R31 + 0x80, el]:u32]
00025881: R30 := 0x410B8C
00025883: call @close with return %00025885

00025885:
00025887: goto %00025861

00025889:
0002588e: R0 := pad:64[mem[R31 + 0x7E, el]:u16]
00025893: R30 := 0x410B2C
00025895: call @ntohs with return %00025897

00025897:
0002589b: R0 := pad:64[15:0[R0]]
000258a1: R19 := pad:64[31:0[R0]]
000258a6: R30 := 0x410B38
000258a8: call @__errno_location with return %000258aa

000258aa:
000258af: R0 := pad:64[mem[R0, el]:u32]
000258b4: R30 := 0x410B40
000258b6: call @strerror with return %000258b8

000258b8:
000258bc: R1 := R0
000258c2: R0 := R31 + 0x48
000258c8: R4 := R1
000258ce: R3 := pad:64[31:0[R19]]
000258d4: R2 := R0
000258d9: R0 := 0x41C000
000258df: R1 := R0 + 0x810
000258e4: R0 := 3
000258e9: R30 := 0x410B64
000258eb: call @syslog with return %000258ed

000258ed:
000258f2: R0 := pad:64[mem[R31 + 0x80, el]:u32]
000258f7: R30 := 0x410B6C
000258f9: call @close with return %000258fb

000258fb:
000258fd: goto %00025861

000259e1:
000259e4: R0 := 0x430000
000259ea: R0 := R0 + 0x390
000259f1: R0 := pad:64[mem[R0, el]:u32]
000259f6: VF := 0
000259f9: CF := 1
000259fd: ZF := 31:0[R0] = 0
00025a01: NF := 31:31[R0]
00025a07: when ZF goto %00025a05
000461c9: goto %00025a1c

00025a1c:
00025a1f: R30 := 0x4109A8
00025a21: call @__errno_location with return %00025a23

00025a23:
00025a28: R0 := pad:64[mem[R0, el]:u32]
00025a2d: R30 := 0x4109B0
00025a2f: call @strerror with return %00025a31

00025a31:
00025a35: R1 := R0
00025a3a: R0 := 0x41C000
00025a40: R0 := R0 + 0x770
00025a45: R30 := 0x4109C0
00025a47: call @printf with return %00025a05

00025a05:
00025a0f: R0 := pad:64[mem[R31 + 0x80, el]:u32]
00025a14: R30 := 0x4109C8
00025a16: call @close with return %00025a18

00025a18:
00025a1a: goto %00025861

00025861:
00025866: R0 := mem[R31 + 0x88, el]:u64
0002586d: R0 := mem[R0 + 0x28, el]:u64
00025875: mem := mem with [R31 + 0x88, el]:u64 <- R0
000461ca: goto %000246bf

000461cb: sub so_recvln(so_recvln_result)
000463c9: so_recvln_result :: out u32 = low:32[R0]

0002519d:
000251a1: #160 := R31 - 0x50
000251a7: mem := mem with [#160, el]:u64 <- R29
000251ad: mem := mem with [#160 + 8, el]:u64 <- R30
000251b1: R31 := #160
000251b7: R29 := R31
000251bf: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
000251c7: mem := mem with [R31 + 0x20, el]:u64 <- R1
000251cf: mem := mem with [R31 + 0x18, el]:u64 <- R2
000251d6: mem := mem with [R31 + 0x4C, el]:u32 <- 0
000251db: R0 := 1
000251e3: mem := mem with [R31 + 0x48, el]:u32 <- 31:0[R0]
000251ea: mem := mem with [R31 + 0x3F] <- 0
000251ef: goto %000251ed

000251ed:
000251f5: R0 := mem[R31 + 0x18, el]:u64
000251fc: R0 := pad:64[mem[R0, el]:u32]
00025202: R0 := pad:64[31:0[R0] - 1]
00025209: R1 := pad:64[mem[R31 + 0x4C, el]:u32]
0002520f: #161 := ~31:0[R0]
00025214: #162 := 31:0[R1] + ~31:0[R0]
0002521a: VF := extend:64[#162 + 1] <> extend:64[31:0[R1]] + extend:64[#161]
          + 1
00025220: CF := pad:64[#162 + 1] <> pad:64[31:0[R1]] + pad:64[#161] + 1
00025224: ZF := #162 + 1 = 0
00025228: NF := 31:31[#162 + 1]
0002522f: when NF = VF goto %0002522d
000461cc: goto %00025387

00025387:
0002538c: R0 := pad:64[mem[R31 + 0x3F]]
00025392: #165 := 31:0[R0] - 0xA
00025397: VF := extend:64[#165] <> extend:64[31:0[R0]] - 0xA
0002539c: CF := pad:64[#165] <> pad:64[31:0[R0]] + 0xFFFFFFF6
000253a0: ZF := #165 = 0
000253a4: NF := 31:31[#165]
000253aa: when ZF <> 1 goto %000253a8
000461cd: goto %00025597

00025597:
00025599: goto %0002522d

000253a8:
000253b1: R0 := R31 + 0x3F
000253b6: R2 := 1
000253bc: R1 := R0
000253c3: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
000253c8: R30 := 0x410D20
000253cb: call @read with return %000253cd

000253cd:
000253d3: mem := mem with [R31 + 0x48, el]:u32 <- 31:0[R0]
000253da: R0 := pad:64[mem[R31 + 0x48, el]:u32]
000253df: VF := 0
000253e2: CF := 1
000253e6: ZF := 31:0[R0] = 0
000253ea: NF := 31:31[R0]
000253f2: when ~(NF = VF & ~ZF) goto %000253f0
000461ce: goto %000253f7

000253f0:
000461cf: goto %0002522d

0002522d:
00025237: R0 := mem[R31 + 0x20, el]:u64
0002523e: R1 := mem[R0, el]:u64
00025245: R0 := extend:64[mem[R31 + 0x4C, el]:u32]
0002524c: R0 := R1 + R0
00025253: mem := mem with [R0] <- 0
0002525a: R0 := pad:64[mem[R31 + 0x48, el]:u32]
000461d0: goto %0002525c

000253f7:
000253fc: R0 := mem[R31 + 0x20, el]:u64
00025403: R1 := mem[R0, el]:u64
0002540a: R0 := pad:64[mem[R31 + 0x4C, el]:u32]
00025410: R2 := pad:64[31:0[R0] + 1]
00025418: mem := mem with [R31 + 0x4C, el]:u32 <- 31:0[R2]
0002541e: R0 := extend:64[31:0[R0]]
00025425: R0 := R1 + R0
0002542c: R1 := pad:64[mem[R31 + 0x3F]]
00025434: mem := mem with [R0] <- 7:0[R1]
0002543b: R0 := mem[R31 + 0x18, el]:u64
00025442: R0 := pad:64[mem[R0, el]:u32]
00025448: R0 := pad:64[31:0[R0] - 1]
0002544f: R1 := pad:64[mem[R31 + 0x4C, el]:u32]
00025455: #166 := ~31:0[R0]
0002545a: #167 := 31:0[R1] + ~31:0[R0]
00025460: VF := extend:64[#167 + 1] <> extend:64[31:0[R1]] + extend:64[#166]
          + 1
00025466: CF := pad:64[#167 + 1] <> pad:64[31:0[R1]] + pad:64[#166] + 1
0002546a: ZF := #167 + 1 = 0
0002546e: NF := 31:31[#167 + 1]
00025473: when ZF <> 1 goto %000251ed
000461d1: goto %00025477

00025477:
0002547c: R0 := pad:64[mem[R31 + 0x3F]]
00025482: #168 := 31:0[R0] - 0xA
00025487: VF := extend:64[#168] <> extend:64[31:0[R0]] - 0xA
0002548c: CF := pad:64[#168] <> pad:64[31:0[R0]] + 0xFFFFFFF6
00025490: ZF := #168 = 0
00025494: NF := 31:31[#168]
00025499: when ZF goto %000251ed
000461d2: goto %0002549d

0002549d:
000254a0: R0 := 0x430000
000254a6: R0 := R0 + 0x390
000254ad: R0 := pad:64[mem[R0, el]:u32]
000254b2: VF := 0
000254b5: CF := 1
000254b9: ZF := 31:0[R0] = 0
000254bd: NF := 31:31[R0]
000254c3: when ZF goto %000254c1
000461d3: goto %00025564

00025564:
00025569: R0 := mem[R31 + 0x18, el]:u64
00025570: R0 := pad:64[mem[R0, el]:u32]
00025576: R0 := pad:64[30:0[R0].0]
0002557c: R2 := pad:64[31:0[R0]]
00025583: R1 := pad:64[mem[R31 + 0x2C, el]:u32]
00025588: R0 := 0x41C000
0002558e: R0 := R0 + 0x858
00025593: R30 := 0x410DAC
00025595: call @printf with return %000254c1

000254c1:
000254cb: R0 := mem[R31 + 0x18, el]:u64
000254d2: R0 := pad:64[mem[R0, el]:u32]
000254d8: R1 := pad:64[30:0[R0].0]
000254df: R0 := mem[R31 + 0x18, el]:u64
000254e7: mem := mem with [R0, el]:u32 <- 31:0[R1]
000254ee: R0 := mem[R31 + 0x20, el]:u64
000254f5: R2 := mem[R0, el]:u64
000254fc: R0 := mem[R31 + 0x18, el]:u64
00025503: R0 := pad:64[mem[R0, el]:u32]
00025509: R0 := extend:64[31:0[R0]]
0002550f: R1 := R0
00025515: R0 := R2
0002551a: R30 := 0x410DE0
0002551d: call @realloc with return %0002551f

0002551f:
00025525: mem := mem with [R31 + 0x40, el]:u64 <- R0
0002552c: R0 := mem[R31 + 0x40, el]:u64
00025531: VF := 0
00025534: CF := 1
00025538: ZF := R0 = 0
0002553c: NF := 63:63[R0]
00025542: when ZF <> 1 goto %00025540
000461d4: goto %0002555b

00025540:
0002554a: R0 := mem[R31 + 0x20, el]:u64
00025551: R1 := mem[R31 + 0x40, el]:u64
00025559: mem := mem with [R0, el]:u64 <- R1
000461d5: goto %000251ed

0002555b:
0002555e: R0 := 0xFFFFFFFF
00025562: goto %0002525c

0002525c:
00025261: R29 := mem[R31, el]:u64
00025266: R30 := mem[R31 + 8, el]:u64
0002526a: R31 := R31 + 0x50
0002526f: call R30 with noreturn

000461d6: sub so_recvtest(so_recvtest_result)
000463ca: so_recvtest_result :: out u32 = low:32[R0]

0002507b:
00025082: #158 := R31 - 0x30
00025088: mem := mem with [#158, el]:u64 <- R29
0002508e: mem := mem with [#158 + 8, el]:u64 <- R30
00025092: R31 := #158
00025098: R29 := R31
000250a0: mem := mem with [R31 + 0x1C, el]:u32 <- 31:0[R0]
000250a6: R0 := R31 + 0x2B
000250ab: R3 := 0x42
000250b0: R2 := 1
000250b6: R1 := R0
000250bd: R0 := pad:64[mem[R31 + 0x1C, el]:u32]
000250c2: R30 := 0x410C34
000250c5: call @recv with return %000250c7

000250c7:
000250cd: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
000250d4: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
000250db: R29 := mem[R31, el]:u64
000250e0: R30 := mem[R31 + 8, el]:u64
000250e4: R31 := R31 + 0x30
000250e9: call R30 with noreturn

000461d7: sub so_resolv(so_resolv_result)
000463cb: so_resolv_result :: out u32 = low:32[R0]

00024267:
0002426e: #138 := R31 - 0xB0
00024274: mem := mem with [#138, el]:u64 <- R29
0002427a: mem := mem with [#138 + 8, el]:u64 <- R30
0002427e: R31 := #138
00024284: R29 := R31
0002428c: mem := mem with [R31 + 0x28, el]:u64 <- R0
00024294: mem := mem with [R31 + 0x20, el]:u64 <- R1
0002429c: mem := mem with [R31 + 0x1C, el]:u32 <- 31:0[R2]
000242a2: R0 := R31 + 0x70
000242a7: R2 := 0x30
000242ac: R1 := 0
000242b1: R30 := 0x4104A4
000242b3: call @memset with return %000242b5

000242b5:
000242b8: R0 := 1
000242c0: mem := mem with [R31 + 0x78, el]:u32 <- 31:0[R0]
000242c6: R4 := R31 + 0x68
000242cd: R3 := pad:64[mem[R31 + 0x1C, el]:u32]
000242d2: R0 := 0x41C000
000242d8: R2 := R0 + 0x6A8
000242dd: R1 := 6
000242e3: R0 := R4
000242e8: R30 := 0x4104C8
000242ea: call @snprintf with return %000242ec

000242ec:
000242f0: R1 := R31 + 0x70
000242f6: R0 := R31 + 0x68
000242fd: R3 := mem[R31 + 0x28, el]:u64
00024303: R2 := R1
00024309: R1 := R0
00024310: R0 := mem[R31 + 0x20, el]:u64
00024315: R30 := 0x4104E4
00024318: call @getaddrinfo with return %0002431a

0002431a:
00024320: mem := mem with [R31 + 0xA4, el]:u32 <- 31:0[R0]
00024327: R0 := pad:64[mem[R31 + 0xA4, el]:u32]
0002432c: VF := 0
0002432f: CF := 1
00024333: ZF := 31:0[R0] = 0
00024337: NF := 31:31[R0]
0002433d: when ZF goto %0002433b
000461d8: goto %00025ece

0002433b:
00024343: R0 := 0x430000
00024349: R0 := R0 + 0x390
00024350: R0 := pad:64[mem[R0, el]:u32]
00024355: VF := 0
00024358: CF := 1
0002435c: ZF := 31:0[R0] = 0
00024360: NF := 31:31[R0]
00024366: when ZF goto %00024364
000461d9: goto %00025d89

00025d89:
00025d8d: R0 := R31 + 0x38
00025d92: V0 := 0
00025d9a: mem := mem with [R0, el]:u128 <- V0
00025da0: mem := mem with [R0 + 0x10, el]:u128 <- V0
00025da8: mem := mem with [R0 + 0x1E, el]:u128 <- V0
00025daf: R1 := mem[R31 + 0x20, el]:u64
00025db4: R0 := 0x41C000
00025dba: R0 := R0 + 0x6D0
00025dbf: R30 := 0x410564
00025dc1: call @printf with return %00025dc3

00025dc3:
00025dc8: R0 := mem[R31 + 0x28, el]:u64
00025dcf: R0 := mem[R0, el]:u64
00025dd7: mem := mem with [R31 + 0xA8, el]:u64 <- R0
00025ddc: goto %00025dda

00025dda:
00025de2: R0 := mem[R31 + 0xA8, el]:u64
00025de7: VF := 0
00025dea: CF := 1
00025dee: ZF := R0 = 0
00025df2: NF := 63:63[R0]
00025df8: when ZF <> 1 goto %00025df6
000461da: goto %00024364

00024364:
0002436c: R0 := 1
000461db: goto %0002436e

00025df6:
00025e00: R0 := mem[R31 + 0xA8, el]:u64
00025e07: R0 := mem[R0 + 0x18, el]:u64
00025e0e: R0 := pad:64[mem[R0, el]:u16]
00025e14: R4 := pad:64[31:0[R0]]
00025e1b: R0 := mem[R31 + 0xA8, el]:u64
00025e22: R0 := mem[R0 + 0x18, el]:u64
00025e29: R0 := pad:64[mem[R0, el]:u16]
00025e2f: #174 := 31:0[R0] - 2
00025e34: VF := extend:64[#174] <> extend:64[31:0[R0]] - 2
00025e39: CF := pad:64[#174] <> pad:64[31:0[R0]] + 0xFFFFFFFE
00025e3d: ZF := #174 = 0
00025e41: NF := 31:31[#174]
00025e47: when ZF <> 1 goto %00025e45
000461dc: goto %00025eb6

00025e45:
00025e4f: R0 := mem[R31 + 0xA8, el]:u64
00025e56: R0 := mem[R0 + 0x18, el]:u64
00025e5c: R0 := R0 + 8
000461dd: goto %00025e5e

00025eb6:
00025ebb: R0 := mem[R31 + 0xA8, el]:u64
00025ec2: R0 := mem[R0 + 0x18, el]:u64
00025ec8: R0 := R0 + 4
00025ecc: goto %00025e5e

00025e5e:
00025e62: R1 := R31 + 0x38
00025e67: R3 := 0x2E
00025e6d: R2 := R1
00025e73: R1 := R0
00025e79: R0 := pad:64[31:0[R4]]
00025e7e: R30 := 0x4105CC
00025e80: call @inet_ntop with return %00025e82

00025e82:
00025e86: R0 := R31 + 0x38
00025e8c: R1 := R0
00025e91: R0 := 0x41C000
00025e97: R0 := R0 + 0x6E0
00025e9c: R30 := 0x4105E0
00025e9e: call @printf with return %00025ea0

00025ea0:
00025ea5: R0 := mem[R31 + 0xA8, el]:u64
00025eac: R0 := mem[R0 + 0x28, el]:u64
00025eb4: mem := mem with [R31 + 0xA8, el]:u64 <- R0
000461de: goto %00025dda

00025ece:
00025ed1: R0 := 0x430000
00025ed7: R0 := R0 + 0x390
00025ede: R0 := pad:64[mem[R0, el]:u32]
00025ee3: VF := 0
00025ee6: CF := 1
00025eea: ZF := 31:0[R0] = 0
00025eee: NF := 31:31[R0]
00025ef4: when ZF goto %00025ef2
000461df: goto %00025f00

00025f00:
00025f05: R0 := pad:64[mem[R31 + 0xA4, el]:u32]
00025f0a: R30 := 0x410510
00025f0d: call @gai_strerror with return %00025f0f

00025f0f:
00025f14: R3 := pad:64[mem[R31 + 0xA4, el]:u32]
00025f1a: R2 := R0
00025f21: R1 := mem[R31 + 0x20, el]:u64
00025f26: R0 := 0x41C000
00025f2c: R0 := R0 + 0x6B0
00025f31: R30 := 0x410528
00025f33: call @printf with return %00025ef2

00025ef2:
00025efa: R0 := 0
00025efe: goto %0002436e

0002436e:
00024373: R29 := mem[R31, el]:u64
00024378: R30 := mem[R31 + 8, el]:u64
0002437c: R31 := R31 + 0xB0
00024381: call R30 with noreturn

000461e0: sub so_resolv_wildcard(so_resolv_wildcard_result)
000463cc: so_resolv_wildcard_result :: out u32 = low:32[R0]

00024383:
00024387: #139 := R31 - 0x60
0002438d: mem := mem with [#139, el]:u64 <- R29
00024393: mem := mem with [#139 + 8, el]:u64 <- R30
00024397: R31 := #139
0002439d: R29 := R31
000243a5: mem := mem with [R31 + 0x18, el]:u64 <- R0
000243ad: mem := mem with [R31 + 0x14, el]:u32 <- 31:0[R1]
000243b5: mem := mem with [R31 + 0x10, el]:u32 <- 31:0[R2]
000243bb: R4 := R31 + 0x28
000243c2: R3 := pad:64[mem[R31 + 0x14, el]:u32]
000243c7: R0 := 0x41C000
000243cd: R2 := R0 + 0x6A8
000243d2: R1 := 6
000243d8: R0 := R4
000243dd: R30 := 0x410634
000243df: call @snprintf with return %000243e1

000243e1:
000243e5: R0 := R31 + 0x30
000243ea: R2 := 0x30
000243ef: R1 := 0
000243f4: R30 := 0x410644
000243f6: call @memset with return %000243f8

000243f8:
000243fb: R0 := 1
00024403: mem := mem with [R31 + 0x38, el]:u32 <- 31:0[R0]
0002440a: R0 := pad:64[mem[R31 + 0x10, el]:u32]
0002440f: VF := 0
00024412: CF := 1
00024416: ZF := 31:0[R0] = 0
0002441a: NF := 31:31[R0]
00024420: when ZF goto %0002441e
000461e1: goto %00025d7c

00025d7c:
00025d7f: R0 := 1
00025d87: mem := mem with [R31 + 0x30, el]:u32 <- 31:0[R0]
000461e2: goto %0002441e

0002441e:
00024427: R1 := R31 + 0x30
0002442d: R0 := R31 + 0x28
00024434: R3 := mem[R31 + 0x18, el]:u64
0002443a: R2 := R1
00024440: R1 := R0
00024445: R0 := 0
0002444a: R30 := 0x41067C
0002444c: call @getaddrinfo with return %0002444e

0002444e:
00024453: R29 := mem[R31, el]:u64
00024458: R30 := mem[R31 + 8, el]:u64
0002445c: R31 := R31 + 0x60
00024461: call R30 with noreturn

000461e3: sub socket(socket_domain, socket_type, socket_protocol, socket_result)
000463cd: socket_domain :: in u32 = low:32[R0]
000463ce: socket_type :: in u32 = low:32[R1]
000463cf: socket_protocol :: in u32 = low:32[R2]
000463d0: socket_result :: out u32 = low:32[R0]

00024502:
0003fea8: R16 := 0x430000
0003feaf: R17 := mem[R16 + 0x260, el]:u64
0003feb5: R16 := R16 + 0x260
0003feba: call R17 with noreturn

000461e4: sub socks5_thread(socks5_thread_result)
000463d1: socks5_thread_result :: out u32 = low:32[R0]

000301a3:
000301a7: #317 := R31 - 0xE0
000301ad: mem := mem with [#317, el]:u64 <- R29
000301b3: mem := mem with [#317 + 8, el]:u64 <- R30
000301b7: R31 := #317
000301bd: R29 := R31
000301c5: mem := mem with [R31 + 0x18, el]:u64 <- R0
000301cc: mem := mem with [R31 + 0xC8, el]:u64 <- 0
000301d3: mem := mem with [R31 + 0xA8, el]:u64 <- 0
000301da: mem := mem with [R31 + 0xC0, el]:u64 <- 0
000301e1: mem := mem with [R31 + 0xB8, el]:u64 <- 0
000301e6: R0 := 0xFFFFFFFF
000301ee: mem := mem with [R31 + 0xB4, el]:u32 <- 31:0[R0]
000301f3: R0 := 0xFFFFFFFF
000301fb: mem := mem with [R31 + 0xB0, el]:u32 <- 31:0[R0]
00030200: R0 := 0x430000
00030206: R0 := R0 + 0x430
0003020d: R0 := mem[R0, el]:u64
00030212: R30 := 0x409314
00030214: call @hlist_count with return %00030216

00030216:
00030219: VF := 0
0003021c: CF := 1
00030220: ZF := 31:0[R0] = 0
00030224: NF := 31:31[R0]
00030230: when ZF <> 1 goto %00030229
00030231: goto %0003022c

0003022c:
0003022d: R0 := 1
00030233: goto %0003022f

00030229:
0003022a: R0 := 0
00030232: goto %0003022f

0003022f:
00030239: R0 := pad:64[7:0[R0]]
00030241: mem := mem with [R31 + 0xA4, el]:u32 <- 31:0[R0]
00030248: R0 := mem[R31 + 0x18, el]:u64
0003024f: R0 := pad:64[mem[R0, el]:u32]
00030257: mem := mem with [R31 + 0xA0, el]:u32 <- 31:0[R0]
0003025d: R0 := R31 + 0x30
00030262: V0 := 0
0003026a: mem := mem with [R0, el]:u128 <- V0
00030270: mem := mem with [R0 + 0x10, el]:u128 <- V0
00030278: mem := mem with [R0 + 0x1E, el]:u128 <- V0
0003027f: R0 := mem[R31 + 0x18, el]:u64
00030285: R0 := R0 + 0x10
0003028c: R0 := pad:64[mem[R0, el]:u16]
00030292: R4 := pad:64[31:0[R0]]
00030299: R0 := mem[R31 + 0x18, el]:u64
0003029f: R0 := R0 + 0x10
000302a6: R0 := pad:64[mem[R0, el]:u16]
000302ac: #318 := 31:0[R0] - 2
000302b1: VF := extend:64[#318] <> extend:64[31:0[R0]] - 2
000302b6: CF := pad:64[#318] <> pad:64[31:0[R0]] + 0xFFFFFFFE
000302ba: ZF := #318 = 0
000302be: NF := 31:31[#318]
000302c4: when ZF <> 1 goto %000302c2
000461e5: goto %000315b6

000302c2:
000302cc: R0 := mem[R31 + 0x18, el]:u64
000302d2: R0 := R0 + 0x10
000302d8: R0 := R0 + 8
000461e6: goto %000302da

000315b6:
000315bb: R0 := mem[R31 + 0x18, el]:u64
000315c1: R0 := R0 + 0x10
000315c7: R0 := R0 + 4
000315cb: goto %000302da

000302da:
000302de: R1 := R31 + 0x30
000302e3: R3 := 0x2E
000302e9: R2 := R1
000302ef: R1 := R0
000302f5: R0 := pad:64[31:0[R4]]
000302fa: R30 := 0x409398
000302fc: call @inet_ntop with return %000302fe

000302fe:
00030303: R0 := mem[R31 + 0x18, el]:u64
00030308: R30 := 0x4093A0
0003030a: call @free with return %0003030c

0003030c:
0003030f: R0 := 0xA
00030314: R30 := 0x4093A8
00030316: call @zmalloc with return %00030318

00030318:
0003031e: mem := mem with [R31 + 0xA8, el]:u64 <- R0
00030323: R0 := 0x104
00030328: R30 := 0x4093B4
0003032a: call @zmalloc with return %0003032c

0003032c:
00030332: mem := mem with [R31 + 0x98, el]:u64 <- R0
00030337: R0 := 0x32
0003033c: R30 := 0x4093C0
0003033e: call @zmalloc with return %00030340

00030340:
00030346: mem := mem with [R31 + 0x90, el]:u64 <- R0
0003034b: R2 := 2
00030352: R1 := mem[R31 + 0xA8, el]:u64
00030359: R0 := pad:64[mem[R31 + 0xA0, el]:u32]
0003035e: R30 := 0x4093D4
00030360: call @read with return %00030362

00030362:
00030368: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0003036f: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
00030375: #319 := 31:0[R0] - 2
0003037a: VF := extend:64[#319] <> extend:64[31:0[R0]] - 2
0003037f: CF := pad:64[#319] <> pad:64[31:0[R0]] + 0xFFFFFFFE
00030383: ZF := #319 = 0
00030387: NF := 31:31[#319]
0003038d: when ZF <> 1 goto %0003038b
000461e7: goto %000305b4

000305b4:
000305b9: R0 := mem[R31 + 0xA8, el]:u64
000305c0: R0 := pad:64[mem[R0]]
000305c6: #320 := 31:0[R0] - 5
000305cb: VF := extend:64[#320] <> extend:64[31:0[R0]] - 5
000305d0: CF := pad:64[#320] <> pad:64[31:0[R0]] + 0xFFFFFFFB
000305d4: ZF := #320 = 0
000305d8: NF := 31:31[#320]
000305dd: when ZF <> 1 goto %0003038b
000461e8: goto %000305e1

0003038b:
00030395: goto %00030393

000305e1:
000305e6: R0 := mem[R31 + 0xA8, el]:u64
000305ec: R0 := R0 + 1
000305f3: R0 := pad:64[mem[R0]]
000305fb: mem := mem with [R31 + 0xD8, el]:u32 <- 31:0[R0]
00030602: R0 := pad:64[mem[R31 + 0xD8, el]:u32]
00030608: R0 := pad:64[31:0[R0] + 1]
0003060e: R0 := extend:64[31:0[R0]]
00030613: R30 := 0x409414
00030615: call @zmalloc with return %00030617

00030617:
0003061d: mem := mem with [R31 + 0xC0, el]:u64 <- R0
00030624: R0 := extend:64[mem[R31 + 0xD8, el]:u32]
0003062a: R2 := R0
00030631: R1 := mem[R31 + 0xC0, el]:u64
00030638: R0 := pad:64[mem[R31 + 0xA0, el]:u32]
0003063d: R30 := 0x40942C
0003063f: call @read with return %00030641

00030641:
00030647: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0003064e: R1 := pad:64[mem[R31 + 0x8C, el]:u32]
00030655: R0 := pad:64[mem[R31 + 0xD8, el]:u32]
0003065b: #321 := ~31:0[R0]
00030660: #322 := 31:0[R1] + ~31:0[R0]
00030666: VF := extend:64[#322 + 1] <> extend:64[31:0[R1]] + extend:64[#321]
          + 1
0003066c: CF := pad:64[#322 + 1] <> pad:64[31:0[R1]] + pad:64[#321] + 1
00030670: ZF := #322 + 1 = 0
00030674: NF := 31:31[#322 + 1]
00030679: when ZF <> 1 goto %0003058e
000461e9: goto %0003067d

0003058e:
00030592: goto %00030393

0003067d:
00030682: R0 := pad:64[mem[R31 + 0xA4, el]:u32]
00030687: VF := 0
0003068a: CF := 1
0003068e: ZF := 31:0[R0] = 0
00030692: NF := 31:31[R0]
00030698: when ZF goto %00030696
000461ea: goto %000314ca

000314ca:
000314cf: mem := mem with [R31 + 0xD4, el]:u32 <- 0
000314d4: goto %000314d2

000314d2:
000314da: R1 := pad:64[mem[R31 + 0xD4, el]:u32]
000314e1: R0 := pad:64[mem[R31 + 0xD8, el]:u32]
000314e7: #347 := ~31:0[R0]
000314ec: #348 := 31:0[R1] + ~31:0[R0]
000314f2: VF := extend:64[#348 + 1] <> extend:64[31:0[R1]] + extend:64[#347]
          + 1
000314f8: CF := pad:64[#348 + 1] <> pad:64[31:0[R1]] + pad:64[#347] + 1
000314fc: ZF := #348 + 1 = 0
00031500: NF := 31:31[#348 + 1]
00031506: when NF = VF goto %00030696
000461eb: goto %0003150a

0003150a:
0003150f: R0 := pad:64[mem[R31 + 0xB4, el]:u32]
00031514: VF := 0
00031517: CF := 1
0003151b: ZF := 31:0[R0] = 0
0003151f: NF := 31:31[R0]
00031526: when NF <> VF goto %00031524
000461ec: goto %00030696

00030696:
000306a0: R0 := pad:64[mem[R31 + 0xB4, el]:u32]
000306a5: VF := 0
000306a8: CF := 1
000306ac: ZF := 31:0[R0] = 0
000306b0: NF := 31:31[R0]
000306b7: when NF = VF goto %000306b5
000461ed: goto %000313de

000313de:
000313e3: mem := mem with [R31 + 0xD4, el]:u32 <- 0
000313e8: goto %000313e6

000313e6:
000313ee: R1 := pad:64[mem[R31 + 0xD4, el]:u32]
000313f5: R0 := pad:64[mem[R31 + 0xD8, el]:u32]
000313fb: #343 := ~31:0[R0]
00031400: #344 := 31:0[R1] + ~31:0[R0]
00031406: VF := extend:64[#344 + 1] <> extend:64[31:0[R1]] + extend:64[#343]
          + 1
0003140c: CF := pad:64[#344 + 1] <> pad:64[31:0[R1]] + pad:64[#343] + 1
00031410: ZF := #344 + 1 = 0
00031414: NF := 31:31[#344 + 1]
0003141a: when NF = VF goto %000306b5
000461ee: goto %0003141e

0003141e:
00031423: R0 := pad:64[mem[R31 + 0xB4, el]:u32]
00031428: VF := 0
0003142b: CF := 1
0003142f: ZF := 31:0[R0] = 0
00031433: NF := 31:31[R0]
0003143a: when NF <> VF goto %00031438
000461ef: goto %000306b5

000306b5:
000306bf: R0 := pad:64[mem[R31 + 0xB4, el]:u32]
000306c4: VF := 0
000306c7: CF := 1
000306cb: ZF := 31:0[R0] = 0
000306cf: NF := 31:31[R0]
000306d6: when NF = VF goto %000306d4
000461f0: goto %00031385

000306d4:
000306de: R0 := mem[R31 + 0xA8, el]:u64
000306e3: R1 := 5
000306eb: mem := mem with [R0] <- 7:0[R1]
000306f2: R0 := mem[R31 + 0xA8, el]:u64
000306f8: R0 := R0 + 1
000306ff: R1 := pad:64[mem[R31 + 0xB4, el]:u32]
00030705: R1 := pad:64[7:0[R1]]
0003070d: mem := mem with [R0] <- 7:0[R1]
00030712: R2 := 2
00030719: R1 := mem[R31 + 0xA8, el]:u64
00030720: R0 := pad:64[mem[R31 + 0xA0, el]:u32]
00030725: R30 := 0x40959C
00030727: call @write_wrapper with return %00030729

00030729:
0003072f: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
00030736: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0003073c: #323 := 31:0[R0] - 2
00030741: VF := extend:64[#323] <> extend:64[31:0[R0]] - 2
00030746: CF := pad:64[#323] <> pad:64[31:0[R0]] + 0xFFFFFFFE
0003074a: ZF := #323 = 0
0003074e: NF := 31:31[#323]
00030754: when ZF goto %00030752
000461f1: goto %0003136e

0003136e:
00031371: R0 := 0x41A000
00031377: R1 := R0 + 0x1C0
0003137c: R0 := 3
00031381: R30 := 0x4095BC
00031383: call @syslog with return %00030752

00030752:
0003075c: R0 := pad:64[mem[R31 + 0xB4, el]:u32]
00030761: VF := 0
00030764: CF := 1
00030768: ZF := 31:0[R0] = 0
0003076c: NF := 31:31[R0]
00030772: when ZF goto %00030770
000461f2: goto %00030f6c

00030f6c:
00030f6f: R2 := 2
00030f76: R1 := mem[R31 + 0xA8, el]:u64
00030f7d: R0 := pad:64[mem[R31 + 0xA0, el]:u32]
00030f82: R30 := 0x4095D8
00030f84: call @read with return %00030f86

00030f86:
00030f8c: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
00030f93: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
00030f99: #337 := 31:0[R0] - 2
00030f9e: VF := extend:64[#337] <> extend:64[31:0[R0]] - 2
00030fa3: CF := pad:64[#337] <> pad:64[31:0[R0]] + 0xFFFFFFFE
00030fa7: ZF := #337 = 0
00030fab: NF := 31:31[#337]
00030fb1: when ZF goto %00030faf
000461f3: goto %00031322

00030faf:
00030fb9: R0 := mem[R31 + 0xA8, el]:u64
00030fbf: R0 := R0 + 1
00030fc6: R0 := pad:64[mem[R0]]
00030fce: mem := mem with [R31 + 0xD8, el]:u32 <- 31:0[R0]
00030fd5: R0 := pad:64[mem[R31 + 0xD8, el]:u32]
00030fdb: R0 := pad:64[31:0[R0] + 1]
00030fe1: R0 := extend:64[31:0[R0]]
00030fe6: R30 := 0x409638
00030fe8: call @zmalloc with return %00030fea

00030fea:
00030ff0: mem := mem with [R31 + 0x80, el]:u64 <- R0
00030ff7: R0 := pad:64[mem[R31 + 0xD8, el]:u32]
00030ffd: R0 := pad:64[31:0[R0] + 1]
00031003: R0 := extend:64[31:0[R0]]
00031009: R2 := R0
00031010: R1 := mem[R31 + 0x80, el]:u64
00031017: R0 := pad:64[mem[R31 + 0xA0, el]:u32]
0003101c: R30 := 0x409658
0003101e: call @read with return %00031020

00031020:
00031026: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0003102d: R0 := pad:64[mem[R31 + 0xD8, el]:u32]
00031033: R0 := pad:64[31:0[R0] + 1]
0003103a: R1 := pad:64[mem[R31 + 0x8C, el]:u32]
00031040: #338 := ~31:0[R0]
00031045: #339 := 31:0[R1] + ~31:0[R0]
0003104b: VF := extend:64[#339 + 1] <> extend:64[31:0[R1]] + extend:64[#338]
          + 1
00031051: CF := pad:64[#339 + 1] <> pad:64[31:0[R1]] + pad:64[#338] + 1
00031055: ZF := #339 + 1 = 0
00031059: NF := 31:31[#339 + 1]
0003105f: when ZF goto %0003105d
000461f4: goto %00031310

0003105d:
00031067: R0 := extend:64[mem[R31 + 0xD8, el]:u32]
0003106e: R1 := mem[R31 + 0x80, el]:u64
00031075: R0 := R1 + R0
0003107c: R0 := pad:64[mem[R0]]
00031084: mem := mem with [R31 + 0xD4, el]:u32 <- 31:0[R0]
0003108b: R0 := extend:64[mem[R31 + 0xD8, el]:u32]
00031092: R1 := mem[R31 + 0x80, el]:u64
00031099: R0 := R1 + R0
000310a0: mem := mem with [R0] <- 0
000310a7: R0 := pad:64[mem[R31 + 0xD4, el]:u32]
000310af: mem := mem with [R31 + 0xD8, el]:u32 <- 31:0[R0]
000310b6: R0 := pad:64[mem[R31 + 0xD8, el]:u32]
000310bc: R0 := pad:64[31:0[R0] + 1]
000310c2: R0 := extend:64[31:0[R0]]
000310c7: R30 := 0x4096B8
000310c9: call @zmalloc with return %000310cb

000310cb:
000310d1: mem := mem with [R31 + 0x78, el]:u64 <- R0
000310d8: R0 := extend:64[mem[R31 + 0xD8, el]:u32]
000310de: R2 := R0
000310e5: R1 := mem[R31 + 0x78, el]:u64
000310ec: R0 := pad:64[mem[R31 + 0xA0, el]:u32]
000310f1: R30 := 0x4096D0
000310f3: call @read with return %000310f5

000310f5:
000310fb: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
00031102: R1 := pad:64[mem[R31 + 0x8C, el]:u32]
00031109: R0 := pad:64[mem[R31 + 0xD8, el]:u32]
0003110f: #340 := ~31:0[R0]
00031114: #341 := 31:0[R1] + ~31:0[R0]
0003111a: VF := extend:64[#341 + 1] <> extend:64[31:0[R1]] + extend:64[#340]
          + 1
00031120: CF := pad:64[#341 + 1] <> pad:64[31:0[R1]] + pad:64[#340] + 1
00031124: ZF := #341 + 1 = 0
00031128: NF := 31:31[#341 + 1]
0003112e: when ZF goto %0003112c
000461f5: goto %000312f0

0003112c:
00031136: R0 := extend:64[mem[R31 + 0xD8, el]:u32]
0003113d: R1 := mem[R31 + 0x78, el]:u64
00031144: R0 := R1 + R0
0003114b: mem := mem with [R0] <- 0
00031150: R0 := 0x430000
00031156: R0 := R0 + 0x430
0003115d: R0 := mem[R0, el]:u64
00031164: R1 := mem[R31 + 0x80, el]:u64
00031169: R30 := 0x40971C
0003116b: call @hlist_get with return %0003116d

0003116d:
00031173: mem := mem with [R31 + 0x70, el]:u64 <- R0
00031178: R0 := 0x430000
0003117e: R0 := R0 + 0x430
00031185: R0 := mem[R0, el]:u64
0003118a: R30 := 0x409730
0003118c: call @hlist_count with return %0003118e

0003118e:
00031191: VF := 0
00031194: CF := 1
00031198: ZF := 31:0[R0] = 0
0003119c: NF := 31:31[R0]
000311a2: when ZF goto %000311a0
000461f6: goto %000312a5

000312a5:
000312aa: R0 := mem[R31 + 0x70, el]:u64
000312af: VF := 0
000312b2: CF := 1
000312b6: ZF := R0 = 0
000312ba: NF := 63:63[R0]
000312bf: when ZF goto %00031277
000461f7: goto %000312c3

000312c3:
000312c8: R1 := mem[R31 + 0x78, el]:u64
000312cf: R0 := mem[R31 + 0x70, el]:u64
000312d4: R30 := 0x409750
000312d7: call @strcmp with return %000312d9

000312d9:
000312dc: VF := 0
000312df: CF := 1
000312e3: ZF := 31:0[R0] = 0
000312e7: NF := 31:31[R0]
000312ec: when ZF <> 1 goto %00031277
000461f8: goto %000311a0

00031277:
0003127c: R0 := mem[R31 + 0xA8, el]:u64
00031281: R1 := 1
00031289: mem := mem with [R0] <- 7:0[R1]
00031290: R0 := mem[R31 + 0xA8, el]:u64
00031296: R0 := R0 + 1
0003129b: R1 := 0xFFFFFFFF
000312a3: mem := mem with [R0] <- 7:0[R1]
000461f9: goto %000311ce

000311a0:
000311aa: R0 := mem[R31 + 0xA8, el]:u64
000311af: R1 := 1
000311b7: mem := mem with [R0] <- 7:0[R1]
000311be: R0 := mem[R31 + 0xA8, el]:u64
000311c4: R0 := R0 + 1
000311cb: mem := mem with [R0] <- 0
000311d0: goto %000311ce

000311ce:
000311d4: R2 := 2
000311db: R1 := mem[R31 + 0xA8, el]:u64
000311e2: R0 := pad:64[mem[R31 + 0xA0, el]:u32]
000311e7: R30 := 0x4097A0
000311e9: call @write_wrapper with return %000311eb

000311eb:
000311f1: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
000311f8: R0 := pad:64[mem[R31 + 0x88, el]:u32]
000311fe: #342 := 31:0[R0] - 2
00031203: VF := extend:64[#342] <> extend:64[31:0[R0]] - 2
00031208: CF := pad:64[#342] <> pad:64[31:0[R0]] + 0xFFFFFFFE
0003120c: ZF := #342 = 0
00031210: NF := 31:31[#342]
00031216: when ZF goto %00031214
000461fa: goto %00031260

00031260:
00031263: R0 := 0x41A000
00031269: R1 := R0 + 0x1F8
0003126e: R0 := 3
00031273: R30 := 0x4097C0
00031275: call @syslog with return %00031214

00031214:
0003121e: R0 := mem[R31 + 0x78, el]:u64
00031223: R30 := 0x4097C8
00031225: call @free with return %00031227

00031227:
0003122c: R0 := mem[R31 + 0x80, el]:u64
00031231: R30 := 0x4097D0
00031233: call @free with return %00031235

00031235:
0003123a: R0 := mem[R31 + 0xA8, el]:u64
00031240: R0 := R0 + 1
00031247: R0 := pad:64[mem[R0]]
0003124c: VF := 0
0003124f: CF := 1
00031253: ZF := 31:0[R0] = 0
00031257: NF := 31:31[R0]
0003125c: when ZF <> 1 goto %00030594
000461fb: goto %00030770

00030594:
00030598: goto %00030393

00030770:
00030778: R2 := 4
0003077f: R1 := mem[R31 + 0xA8, el]:u64
00030786: R0 := pad:64[mem[R31 + 0xA0, el]:u32]
0003078b: R30 := 0x4097F4
0003078d: call @read with return %0003078f

0003078f:
00030795: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
0003079c: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
000307a2: #324 := 31:0[R0] - 4
000307a7: VF := extend:64[#324] <> extend:64[31:0[R0]] - 4
000307ac: CF := pad:64[#324] <> pad:64[31:0[R0]] + 0xFFFFFFFC
000307b0: ZF := #324 = 0
000307b4: NF := 31:31[#324]
000307b9: when ZF <> 1 goto %0003059a
000461fc: goto %000307bd

0003059a:
0003059e: goto %00030393

000307bd:
000307c2: R0 := mem[R31 + 0xA8, el]:u64
000307c8: R0 := R0 + 1
000307cf: R0 := pad:64[mem[R0]]
000307d5: #325 := 31:0[R0] - 1
000307da: VF := extend:64[#325] <> extend:64[31:0[R0]] - 1
000307df: CF := pad:64[#325] <> pad:64[31:0[R0]] + 0xFFFFFFFF
000307e3: ZF := #325 = 0
000307e7: NF := 31:31[#325]
000307ed: when ZF <> 1 goto %000307eb
000461fd: goto %00030f06

00030f06:
00030f0b: R0 := mem[R31 + 0xA8, el]:u64
00030f11: R0 := R0 + 3
00030f18: R0 := pad:64[mem[R0]]
00030f1e: #335 := 31:0[R0] - 1
00030f23: VF := extend:64[#335] <> extend:64[31:0[R0]] - 1
00030f28: CF := pad:64[#335] <> pad:64[31:0[R0]] + 0xFFFFFFFF
00030f2c: ZF := #335 = 0
00030f30: NF := 31:31[#335]
00030f35: when ZF goto %00030888
000461fe: goto %00030f39

00030f39:
00030f3e: R0 := mem[R31 + 0xA8, el]:u64
00030f44: R0 := R0 + 3
00030f4b: R0 := pad:64[mem[R0]]
00030f51: #336 := 31:0[R0] - 3
00030f56: VF := extend:64[#336] <> extend:64[31:0[R0]] - 3
00030f5b: CF := pad:64[#336] <> pad:64[31:0[R0]] + 0xFFFFFFFD
00030f5f: ZF := #336 = 0
00030f63: NF := 31:31[#336]
00030f68: when ZF goto %00030888
000461ff: goto %000307eb

00030888:
0003088d: R0 := mem[R31 + 0xA8, el]:u64
00030893: R0 := R0 + 3
0003089a: R0 := pad:64[mem[R0]]
000308a0: #326 := 31:0[R0] - 1
000308a5: VF := extend:64[#326] <> extend:64[31:0[R0]] - 1
000308aa: CF := pad:64[#326] <> pad:64[31:0[R0]] + 0xFFFFFFFF
000308ae: ZF := #326 = 0
000308b2: NF := 31:31[#326]
000308b8: when ZF <> 1 goto %000308b6
00046200: goto %00030ee8

000308b6:
000308c0: R0 := mem[R31 + 0xA8, el]:u64
000308c6: R0 := R0 + 3
000308cd: R0 := pad:64[mem[R0]]
000308d3: #327 := 31:0[R0] - 3
000308d8: VF := extend:64[#327] <> extend:64[31:0[R0]] - 3
000308dd: CF := pad:64[#327] <> pad:64[31:0[R0]] + 0xFFFFFFFD
000308e1: ZF := #327 = 0
000308e5: NF := 31:31[#327]
000308ea: when ZF <> 1 goto %000305a0
00046201: goto %000308ee

000305a0:
000305a4: goto %00030393

000308ee:
000308f1: R0 := 2
000308f9: mem := mem with [R31 + 0xDC, el]:u32 <- 31:0[R0]
000308ff: R0 := R31 + 0x2F
00030904: R2 := 1
0003090a: R1 := R0
00030911: R0 := pad:64[mem[R31 + 0xA0, el]:u32]
00030916: R30 := 0x4098F8
00030918: call @read with return %0003091a

0003091a:
00030920: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
00030927: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0003092d: #328 := 31:0[R0] - 1
00030932: VF := extend:64[#328] <> extend:64[31:0[R0]] - 1
00030937: CF := pad:64[#328] <> pad:64[31:0[R0]] + 0xFFFFFFFF
0003093b: ZF := #328 = 0
0003093f: NF := 31:31[#328]
00030944: when ZF <> 1 goto %000305a6
00046202: goto %00030948

000305a6:
000305aa: goto %00030393

00030948:
0003094d: R0 := pad:64[mem[R31 + 0x2F]]
00030955: mem := mem with [R31 + 0xD8, el]:u32 <- 31:0[R0]
00046203: goto %00030957

00030ee8:
00030eeb: R0 := 1
00030ef3: mem := mem with [R31 + 0xDC, el]:u32 <- 31:0[R0]
00030ef8: R0 := 4
00030f00: mem := mem with [R31 + 0xD8, el]:u32 <- 31:0[R0]
00030f04: goto %00030957

00030957:
0003095c: R0 := pad:64[mem[R31 + 0xD8, el]:u32]
00030962: R0 := pad:64[31:0[R0] + 0xB]
00030968: R0 := extend:64[31:0[R0]]
0003096d: R30 := 0x409920
0003096f: call @zmalloc with return %00030971

00030971:
00030977: mem := mem with [R31 + 0xB8, el]:u64 <- R0
0003097e: R0 := extend:64[mem[R31 + 0xD8, el]:u32]
00030984: R2 := R0
0003098b: R1 := mem[R31 + 0xB8, el]:u64
00030992: R0 := pad:64[mem[R31 + 0xA0, el]:u32]
00030997: R30 := 0x409938
00030999: call @read with return %0003099b

0003099b:
000309a1: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
000309a8: R1 := pad:64[mem[R31 + 0x8C, el]:u32]
000309af: R0 := pad:64[mem[R31 + 0xD8, el]:u32]
000309b5: #329 := ~31:0[R0]
000309ba: #330 := 31:0[R1] + ~31:0[R0]
000309c0: VF := extend:64[#330 + 1] <> extend:64[31:0[R1]] + extend:64[#329]
          + 1
000309c6: CF := pad:64[#330 + 1] <> pad:64[31:0[R1]] + pad:64[#329] + 1
000309ca: ZF := #330 + 1 = 0
000309ce: NF := 31:31[#330 + 1]
000309d3: when ZF <> 1 goto %000305ac
00046204: goto %000309d7

000305ac:
000305b0: goto %00030393

000309d7:
000309dc: R0 := extend:64[mem[R31 + 0xD8, el]:u32]
000309e3: R1 := mem[R31 + 0xB8, el]:u64
000309ea: R0 := R1 + R0
000309f1: mem := mem with [R0] <- 0
000309f8: R0 := pad:64[mem[R31 + 0xDC, el]:u32]
000309fe: #331 := 31:0[R0] - 1
00030a03: VF := extend:64[#331] <> extend:64[31:0[R0]] - 1
00030a08: CF := pad:64[#331] <> pad:64[31:0[R0]] + 0xFFFFFFFF
00030a0c: ZF := #331 = 0
00030a10: NF := 31:31[#331]
00030a16: when ZF <> 1 goto %00030a14
00046205: goto %00030e52

00030a14:
00030a1c: R2 := 0x104
00030a23: R1 := mem[R31 + 0xB8, el]:u64
00030a2a: R0 := mem[R31 + 0x98, el]:u64
00030a2f: R30 := 0x4099D8
00030a31: call @strlcpy with return %00030a33

00030e52:
00030e57: R0 := mem[R31 + 0xB8, el]:u64
00030e5e: R0 := pad:64[mem[R0]]
00030e64: R1 := pad:64[31:0[R0]]
00030e6b: R0 := mem[R31 + 0xB8, el]:u64
00030e71: R0 := R0 + 1
00030e78: R0 := pad:64[mem[R0]]
00030e7e: R2 := pad:64[31:0[R0]]
00030e85: R0 := mem[R31 + 0xB8, el]:u64
00030e8b: R0 := R0 + 2
00030e92: R0 := pad:64[mem[R0]]
00030e98: R3 := pad:64[31:0[R0]]
00030e9f: R0 := mem[R31 + 0xB8, el]:u64
00030ea5: R0 := R0 + 3
00030eac: R0 := pad:64[mem[R0]]
00030eb2: R6 := pad:64[31:0[R0]]
00030eb8: R5 := pad:64[31:0[R3]]
00030ebe: R4 := pad:64[31:0[R2]]
00030ec4: R3 := pad:64[31:0[R1]]
00030ec9: R0 := 0x41A000
00030ecf: R2 := R0 + 0x238
00030ed4: R1 := 0x104
00030edb: R0 := mem[R31 + 0x98, el]:u64
00030ee0: R30 := 0x4099C4
00030ee2: call @snprintf with return %00030ee4

00030ee4:
00030ee6: goto %00030a33

00030a33:
00030a37: R0 := R31 + 0x5E
00030a3c: R2 := 2
00030a42: R1 := R0
00030a49: R0 := pad:64[mem[R31 + 0xA0, el]:u32]
00030a4e: R30 := 0x4099EC
00030a50: call @read with return %00030a52

00030a52:
00030a58: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
00030a5f: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
00030a65: #332 := 31:0[R0] - 2
00030a6a: VF := extend:64[#332] <> extend:64[31:0[R0]] - 2
00030a6f: CF := pad:64[#332] <> pad:64[31:0[R0]] + 0xFFFFFFFE
00030a73: ZF := #332 = 0
00030a77: NF := 31:31[#332]
00030a7c: when ZF <> 1 goto %000305b2
00046206: goto %00030a80

000305b2:
00046207: goto %00030393

00030a80:
00030a85: mem := mem with [R31 + 0xD4, el]:u32 <- 0
00030a8c: R0 := mem[R31 + 0x98, el]:u64
00030a91: R30 := 0x409A08
00030a93: call @noproxy_match with return %00030a95

00030a95:
00030a98: VF := 0
00030a9b: CF := 1
00030a9f: ZF := 31:0[R0] = 0
00030aa3: NF := 31:31[R0]
00030aa9: when ZF goto %00030aa7
00046208: goto %00030dfd

00030aa7:
00030ab1: R0 := pad:64[mem[R31 + 0x5E, el]:u16]
00030ab6: R30 := 0x409A4C
00030ab8: call @ntohs with return %00030aba

00030aba:
00030abe: R0 := pad:64[15:0[R0]]
00030ac4: R3 := pad:64[31:0[R0]]
00030ac9: R0 := 0x41A000
00030acf: R2 := R0 + 0x248
00030ad4: R1 := 0x32
00030adb: R0 := mem[R31 + 0x90, el]:u64
00030ae0: R30 := 0x409A68
00030ae2: call @snprintf with return %00030ae4

00030ae4:
00030ae9: R0 := mem[R31 + 0x98, el]:u64
00030aee: R30 := 0x409A70
00030af0: call @strdup with return %00030af2

00030af2:
00030af8: mem := mem with [R31 + 0x68, el]:u64 <- R0
00030afd: R2 := 0x104
00030b02: R0 := 0x41A000
00030b08: R1 := R0 + 0x20
00030b0f: R0 := mem[R31 + 0x98, el]:u64
00030b14: R30 := 0x409A88
00030b16: call @strlcat with return %00030b18

00030b18:
00030b1b: R2 := 0x104
00030b22: R1 := mem[R31 + 0x90, el]:u64
00030b29: R0 := mem[R31 + 0x98, el]:u64
00030b2e: R30 := 0x409A98
00030b30: call @strlcat with return %00030b32

00030b32:
00030b35: R30 := 0x409A9C
00030b37: call @new_auth with return %00030b39

00030b39:
00030b3f: mem := mem with [R31 + 0xC8, el]:u64 <- R0
00030b46: R2 := mem[R31 + 0x68, el]:u64
00030b4d: R1 := mem[R31 + 0x98, el]:u64
00030b54: R0 := mem[R31 + 0xC8, el]:u64
00030b59: R30 := 0x409AB0
00030b5b: call @proxy_connect with return %00030b5d

00030b5d:
00030b63: mem := mem with [R31 + 0xB0, el]:u32 <- 31:0[R0]
00030b6a: R0 := pad:64[mem[R31 + 0xB0, el]:u32]
00030b70: #333 := 31:0[R0] + 2
00030b75: VF := extend:64[#333] <> extend:64[31:0[R0]] + 2
00030b7a: CF := pad:64[#333] <> pad:64[31:0[R0]] + 2
00030b7e: ZF := #333 = 0
00030b82: NF := 31:31[#333]
00030b88: when ZF <> 1 goto %00030b86
00046209: goto %00030da8

00030b86:
00030b90: R0 := pad:64[mem[R31 + 0xB0, el]:u32]
00030b95: VF := 0
00030b98: CF := 1
00030b9c: ZF := 31:0[R0] = 0
00030ba0: NF := 31:31[R0]
00030ba7: when NF <> VF goto %00030ba5
0004620a: goto %00030d84

00030d84:
00030d89: R2 := mem[R31 + 0x98, el]:u64
00030d90: R1 := mem[R31 + 0xC8, el]:u64
00030d97: R0 := pad:64[mem[R31 + 0xB0, el]:u32]
00030d9c: R30 := 0x409B10
00030d9e: call @prepare_http_connect with return %00030da0

00030da0:
00030da6: mem := mem with [R31 + 0xD4, el]:u32 <- 31:0[R0]
0004620b: goto %00030ba5

00030da8:
00030dad: R0 := pad:64[mem[R31 + 0x5E, el]:u16]
00030db2: R30 := 0x409AC8
00030db4: call @ntohs with return %00030db6

00030db6:
00030dba: R0 := pad:64[15:0[R0]]
00030dc0: R1 := pad:64[31:0[R0]]
00030dc7: R0 := mem[R31 + 0x68, el]:u64
00030dcc: R30 := 0x409AD8
00030dce: call @host_connect with return %00030dd0

00030dd0:
00030dd6: mem := mem with [R31 + 0xB0, el]:u32 <- 31:0[R0]
00030ddd: R0 := pad:64[mem[R31 + 0xB0, el]:u32]
00030de3: R0 := pad:64[~31:0[R0]]
00030de9: R0 := pad:64[31:31[R0]]
00030def: R0 := pad:64[7:0[R0]]
00030df7: mem := mem with [R31 + 0xD4, el]:u32 <- 31:0[R0]
00030dfb: goto %00030ba5

00030ba5:
00030baf: R0 := mem[R31 + 0x68, el]:u64
00030bb4: R30 := 0x409B1C
00030bb6: call @free with return %00030bb8

00030dfd:
00030e02: R0 := pad:64[mem[R31 + 0x5E, el]:u16]
00030e07: R30 := 0x409A18
00030e09: call @ntohs with return %00030e0b

00030e0b:
00030e0f: R0 := pad:64[15:0[R0]]
00030e15: R1 := pad:64[31:0[R0]]
00030e1c: R0 := mem[R31 + 0x98, el]:u64
00030e21: R30 := 0x409A28
00030e23: call @host_connect with return %00030e25

00030e25:
00030e2b: mem := mem with [R31 + 0xB0, el]:u32 <- 31:0[R0]
00030e32: R0 := pad:64[mem[R31 + 0xB0, el]:u32]
00030e38: R0 := pad:64[~31:0[R0]]
00030e3e: R0 := pad:64[31:31[R0]]
00030e44: R0 := pad:64[7:0[R0]]
00030e4c: mem := mem with [R31 + 0xD4, el]:u32 <- 31:0[R0]
00030e50: goto %00030bb8

00030bb8:
00030bbd: R0 := pad:64[mem[R31 + 0xD4, el]:u32]
00030bc2: VF := 0
00030bc5: CF := 1
00030bc9: ZF := 31:0[R0] = 0
00030bcd: NF := 31:31[R0]
00030bd3: when ZF <> 1 goto %00030bd1
0004620c: goto %00030cec

00030bd1:
00030bdb: R0 := mem[R31 + 0xA8, el]:u64
00030be0: R1 := 5
00030be8: mem := mem with [R0] <- 7:0[R1]
00030bef: R0 := mem[R31 + 0xA8, el]:u64
00030bf5: R0 := R0 + 1
00030bfc: mem := mem with [R0] <- 0
00030c03: R0 := mem[R31 + 0xA8, el]:u64
00030c09: R0 := R0 + 2
00030c10: mem := mem with [R0] <- 0
00030c17: R0 := mem[R31 + 0xA8, el]:u64
00030c1d: R0 := R0 + 3
00030c22: R1 := 1
00030c2a: mem := mem with [R0] <- 7:0[R1]
00030c31: R0 := mem[R31 + 0xA8, el]:u64
00030c37: R0 := R0 + 4
00030c3c: R2 := 6
00030c41: R1 := 0
00030c46: R30 := 0x409BD0
00030c48: call @memset with return %00030c4a

00030c4a:
00030c4d: R2 := 0xA
00030c54: R1 := mem[R31 + 0xA8, el]:u64
00030c5b: R0 := pad:64[mem[R31 + 0xA0, el]:u32]
00030c60: R30 := 0x409BE0
00030c62: call @write_wrapper with return %00030c64

00030c64:
00030c6a: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
00030c71: R0 := pad:64[mem[R31 + 0x88, el]:u32]
00030c77: #334 := 31:0[R0] - 0xA
00030c7c: VF := extend:64[#334] <> extend:64[31:0[R0]] - 0xA
00030c81: CF := pad:64[#334] <> pad:64[31:0[R0]] + 0xFFFFFFF6
00030c85: ZF := #334 = 0
00030c89: NF := 31:31[#334]
00030c8f: when ZF goto %00030c8d
0004620d: goto %00030cd5

00030cd5:
00030cd8: R0 := 0x41A000
00030cde: R1 := R0 + 0x250
00030ce3: R0 := 3
00030ce8: R30 := 0x409C00
00030cea: call @syslog with return %00030c8d

00030c8d:
00030c96: R0 := R31 + 0x30
00030c9d: R3 := mem[R31 + 0x98, el]:u64
00030ca3: R2 := R0
00030ca8: R0 := 0x41A000
00030cae: R1 := R0 + 0x290
00030cb3: R0 := 7
00030cb8: R30 := 0x409C1C
00030cba: call @syslog with return %00030cbc

00030cbc:
00030cc1: R1 := pad:64[mem[R31 + 0xB0, el]:u32]
00030cc8: R0 := pad:64[mem[R31 + 0xA0, el]:u32]
00030ccd: R30 := 0x409C28
00030ccf: call @tunnel with return %00030cd1

00030cd1:
00030cd3: goto %00030393

00030cec:
00030cf1: R0 := mem[R31 + 0xA8, el]:u64
00030cf6: R1 := 5
00030cfe: mem := mem with [R0] <- 7:0[R1]
00030d05: R0 := mem[R31 + 0xA8, el]:u64
00030d0b: R0 := R0 + 1
00030d10: R1 := 1
00030d18: mem := mem with [R0] <- 7:0[R1]
00030d1f: R0 := mem[R31 + 0xA8, el]:u64
00030d25: R0 := R0 + 2
00030d2c: mem := mem with [R0] <- 0
00030d33: R0 := mem[R31 + 0xA8, el]:u64
00030d39: R0 := R0 + 3
00030d3e: R1 := 1
00030d46: mem := mem with [R0] <- 7:0[R1]
00030d4d: R0 := mem[R31 + 0xA8, el]:u64
00030d53: R0 := R0 + 4
00030d58: R2 := 6
00030d5d: R1 := 0
00030d62: R30 := 0x409B74
00030d64: call @memset with return %00030d66

00030d66:
00030d69: R2 := 0xA
00030d70: R1 := mem[R31 + 0xA8, el]:u64
00030d77: R0 := pad:64[mem[R31 + 0xA0, el]:u32]
00030d7c: R30 := 0x409B84
00030d7e: call @write_wrapper with return %00030d80

00030d80:
00030d82: goto %00030393

000307eb:
000307f5: R0 := mem[R31 + 0xA8, el]:u64
000307fa: R1 := 5
00030802: mem := mem with [R0] <- 7:0[R1]
00030809: R0 := mem[R31 + 0xA8, el]:u64
0003080f: R0 := R0 + 1
00030814: R1 := 2
0003081c: mem := mem with [R0] <- 7:0[R1]
00030823: R0 := mem[R31 + 0xA8, el]:u64
00030829: R0 := R0 + 2
00030830: mem := mem with [R0] <- 0
00030837: R0 := mem[R31 + 0xA8, el]:u64
0003083d: R0 := R0 + 3
00030842: R1 := 1
0003084a: mem := mem with [R0] <- 7:0[R1]
00030851: R0 := mem[R31 + 0xA8, el]:u64
00030857: R0 := R0 + 4
0003085c: R2 := 6
00030861: R1 := 0
00030866: R30 := 0x40988C
00030868: call @memset with return %0003086a

0003086a:
0003086d: R2 := 0xA
00030874: R1 := mem[R31 + 0xA8, el]:u64
0003087b: R0 := pad:64[mem[R31 + 0xA0, el]:u32]
00030880: R30 := 0x40989C
00030882: call @write_wrapper with return %00030884

00030884:
00030886: goto %00030393

000312f0:
000312f5: R0 := mem[R31 + 0x78, el]:u64
000312fa: R30 := 0x4096EC
000312fc: call @free with return %000312fe

000312fe:
00031303: R0 := mem[R31 + 0x80, el]:u64
00031308: R30 := 0x4096F4
0003130a: call @free with return %0003130c

0003130c:
0003130e: goto %00030393

00031310:
00031315: R0 := mem[R31 + 0x80, el]:u64
0003131a: R30 := 0x409678
0003131c: call @free with return %0003131e

0003131e:
00031320: goto %00030393

00031322:
00031327: R0 := mem[R31 + 0xA8, el]:u64
0003132c: R1 := 1
00031334: mem := mem with [R0] <- 7:0[R1]
0003133b: R0 := mem[R31 + 0xA8, el]:u64
00031341: R0 := R0 + 1
00031346: R1 := 0xFFFFFFFF
0003134e: mem := mem with [R0] <- 7:0[R1]
00031353: R2 := 2
0003135a: R1 := mem[R31 + 0xA8, el]:u64
00031361: R0 := pad:64[mem[R31 + 0xA0, el]:u32]
00031366: R30 := 0x409614
00031368: call @write_wrapper with return %0003136a

0003136a:
0003136c: goto %00030393

00031385:
0003138a: R0 := mem[R31 + 0xA8, el]:u64
0003138f: R1 := 5
00031397: mem := mem with [R0] <- 7:0[R1]
0003139e: R0 := mem[R31 + 0xA8, el]:u64
000313a4: R0 := R0 + 1
000313a9: R1 := 0x41B000
000313af: R1 := R1 + 0x930
000313b6: R1 := pad:64[mem[R1]]
000313be: mem := mem with [R0] <- 7:0[R1]
000313c3: R2 := 2
000313ca: R1 := mem[R31 + 0xA8, el]:u64
000313d1: R0 := pad:64[mem[R31 + 0xA0, el]:u32]
000313d6: R30 := 0x409568
000313d8: call @write_wrapper with return %000313da

000313da:
000313dc: goto %00030393

00030393:
0003039b: R0 := mem[R31 + 0xB8, el]:u64
000303a0: VF := 0
000303a3: CF := 1
000303a7: ZF := R0 = 0
000303ab: NF := 63:63[R0]
000303b1: when ZF goto %000303af
0004620e: goto %00030580

00030580:
00030585: R0 := mem[R31 + 0xB8, el]:u64
0003058a: R30 := 0x409C7C
0003058c: call @free with return %000303af

000303af:
000303b9: R0 := mem[R31 + 0xC0, el]:u64
000303be: VF := 0
000303c1: CF := 1
000303c5: ZF := R0 = 0
000303c9: NF := 63:63[R0]
000303cf: when ZF goto %000303cd
0004620f: goto %00030572

00030572:
00030577: R0 := mem[R31 + 0xC0, el]:u64
0003057c: R30 := 0x409C90
0003057e: call @free with return %000303cd

000303cd:
000303d7: R0 := mem[R31 + 0x98, el]:u64
000303dc: VF := 0
000303df: CF := 1
000303e3: ZF := R0 = 0
000303e7: NF := 63:63[R0]
000303ed: when ZF goto %000303eb
00046210: goto %00030564

00030564:
00030569: R0 := mem[R31 + 0x98, el]:u64
0003056e: R30 := 0x409CA4
00030570: call @free with return %000303eb

000303eb:
000303f5: R0 := mem[R31 + 0x90, el]:u64
000303fa: VF := 0
000303fd: CF := 1
00030401: ZF := R0 = 0
00030405: NF := 63:63[R0]
0003040b: when ZF goto %00030409
00046211: goto %00030556

00030556:
0003055b: R0 := mem[R31 + 0x90, el]:u64
00030560: R30 := 0x409CB8
00030562: call @free with return %00030409

00030409:
00030413: R0 := mem[R31 + 0xA8, el]:u64
00030418: VF := 0
0003041b: CF := 1
0003041f: ZF := R0 = 0
00030423: NF := 63:63[R0]
00030429: when ZF goto %00030427
00046212: goto %00030548

00030548:
0003054d: R0 := mem[R31 + 0xA8, el]:u64
00030552: R30 := 0x409CCC
00030554: call @free with return %00030427

00030427:
00030431: R0 := mem[R31 + 0xC8, el]:u64
00030436: VF := 0
00030439: CF := 1
0003043d: ZF := R0 = 0
00030441: NF := 63:63[R0]
00030447: when ZF goto %00030445
00046213: goto %0003053a

0003053a:
0003053f: R0 := mem[R31 + 0xC8, el]:u64
00030544: R30 := 0x409CE0
00030546: call @free with return %00030445

00030445:
0003044f: R0 := pad:64[mem[R31 + 0xB0, el]:u32]
00030454: VF := 0
00030457: CF := 1
0003045b: ZF := 31:0[R0] = 0
0003045f: NF := 31:31[R0]
00030466: when NF <> VF goto %00030464
00046214: goto %0003052c

0003052c:
00030531: R0 := pad:64[mem[R31 + 0xB0, el]:u32]
00030536: R30 := 0x409CF4
00030538: call @close with return %00030464

00030464:
0003046e: R0 := pad:64[mem[R31 + 0xA0, el]:u32]
00030473: R30 := 0x409CFC
00030475: call @close with return %00030477

00030477:
0003047a: R0 := 0x430000
00030480: R0 := R0 + 0x3A8
00030487: R0 := pad:64[mem[R0, el]:u32]
0003048c: VF := 0
0003048f: CF := 1
00030493: ZF := 31:0[R0] = 0
00030497: NF := 31:31[R0]
0003049d: when ZF <> 1 goto %0003049b
00046215: goto %000304ba

000304ba:
000304bd: R0 := 0x430000
000304c3: R0 := R0 + 0x3C0
000304c8: R30 := 0x409D1C
000304ca: call @pthread_mutex_lock with return %000304cc

000304cc:
000304cf: R30 := 0x409D20
000304d2: call @pthread_self with return %000304d4

000304d4:
000304da: mem := mem with [R31 + 0x60, el]:u64 <- R0
000304df: R0 := 0x430000
000304e5: R0 := R0 + 0x3B8
000304ec: R0 := mem[R0, el]:u64
000304f1: R2 := 0
000304f8: R1 := mem[R31 + 0x60, el]:u64
000304fd: R30 := 0x409D3C
000304ff: call @plist_add with return %00030501

00030501:
00030505: R1 := R0
0003050a: R0 := 0x430000
00030510: R0 := R0 + 0x3B8
00030518: mem := mem with [R0, el]:u64 <- R1
0003051d: R0 := 0x430000
00030523: R0 := R0 + 0x3C0
00030528: R30 := 0x409D58
0003052a: call @pthread_mutex_unlock with return %0003049b

0003049b:
000304a3: R0 := 0
000304aa: R29 := mem[R31, el]:u64
000304af: R30 := mem[R31 + 8, el]:u64
000304b3: R31 := R31 + 0xE0
000304b8: call R30 with noreturn

00031438:
00031442: R0 := extend:64[mem[R31 + 0xD4, el]:u32]
00031449: R1 := mem[R31 + 0xC0, el]:u64
00031450: R0 := R1 + R0
00031457: R1 := pad:64[mem[R0]]
0003145c: R0 := 0x41B000
00031462: R0 := R0 + 0x92F
00031469: R0 := pad:64[mem[R0]]
0003146f: #345 := ~31:0[R0]
00031474: #346 := 31:0[R1] + ~31:0[R0]
0003147a: VF := extend:64[#346 + 1] <> extend:64[31:0[R1]] + extend:64[#345]
          + 1
00031480: CF := pad:64[#346 + 1] <> pad:64[31:0[R1]] + pad:64[#345] + 1
00031484: ZF := #346 + 1 = 0
00031488: NF := 31:31[#346 + 1]
0003148e: when ZF <> 1 goto %0003148c
00046216: goto %000314a6

000314a6:
000314ab: R0 := extend:64[mem[R31 + 0xD4, el]:u32]
000314b2: R1 := mem[R31 + 0xC0, el]:u64
000314b9: R0 := R1 + R0
000314c0: R0 := pad:64[mem[R0]]
000314c8: mem := mem with [R31 + 0xB4, el]:u32 <- 31:0[R0]
00046217: goto %0003148c

0003148c:
00031496: R0 := pad:64[mem[R31 + 0xD4, el]:u32]
0003149c: R0 := pad:64[31:0[R0] + 1]
000314a4: mem := mem with [R31 + 0xD4, el]:u32 <- 31:0[R0]
00046218: goto %000313e6

00031524:
0003152e: R0 := extend:64[mem[R31 + 0xD4, el]:u32]
00031535: R1 := mem[R31 + 0xC0, el]:u64
0003153c: R0 := R1 + R0
00031543: R1 := pad:64[mem[R0]]
00031548: R0 := 0x41B000
0003154e: R0 := R0 + 0x92E
00031555: R0 := pad:64[mem[R0]]
0003155b: #349 := ~31:0[R0]
00031560: #350 := 31:0[R1] + ~31:0[R0]
00031566: VF := extend:64[#350 + 1] <> extend:64[31:0[R1]] + extend:64[#349]
          + 1
0003156c: CF := pad:64[#350 + 1] <> pad:64[31:0[R1]] + pad:64[#349] + 1
00031570: ZF := #350 + 1 = 0
00031574: NF := 31:31[#350 + 1]
0003157a: when ZF <> 1 goto %00031578
00046219: goto %00031592

00031592:
00031597: R0 := extend:64[mem[R31 + 0xD4, el]:u32]
0003159e: R1 := mem[R31 + 0xC0, el]:u64
000315a5: R0 := R1 + R0
000315ac: R0 := pad:64[mem[R0]]
000315b4: mem := mem with [R31 + 0xB4, el]:u32 <- 31:0[R0]
0004621a: goto %00031578

00031578:
00031582: R0 := pad:64[mem[R31 + 0xD4, el]:u32]
00031588: R0 := pad:64[31:0[R0] + 1]
00031590: mem := mem with [R31 + 0xD4, el]:u32 <- 31:0[R0]
0004621b: goto %000314d2

0004621c: sub srandom(srandom_arg1)
000463d2: srandom_arg1 :: in u32 = low:32[R0]

0003b1f4:
0003ff58: R16 := 0x430000
0003ff5f: R17 := mem[R16 + 0x2A0, el]:u64
0003ff65: R16 := R16 + 0x2A0
0003ff6a: call R17 with noreturn

0004621d: sub strcasecmp(strcasecmp_s1, strcasecmp_s2, strcasecmp_result)
000463d3: strcasecmp_s1 :: in u64 = R0
000463d4: strcasecmp_s2 :: in u64 = R1
000463d5: strcasecmp_result :: out u32 = low:32[R0]

000222e2:
0003fbbc: R16 := 0x430000
0003fbc3: R17 := mem[R16 + 0x150, el]:u64
0003fbc9: R16 := R16 + 0x150
0003fbce: call R17 with noreturn

0004621e: sub strchr(strchr_s, strchr_c, strchr_result)
000463d6: strchr_s :: in u64 = R0
000463d7: strchr_c :: in u32 = low:32[R1]
000463d8: strchr_result :: out u64 = R0

00027f5d:
0003fe3a: R16 := 0x430000
0003fe41: R17 := mem[R16 + 0x238, el]:u64
0003fe47: R16 := R16 + 0x238
0003fe4c: call R17 with noreturn

0004621f: sub strcmp(strcmp_s1, strcmp_s2, strcmp_result)
000463d9: strcmp_s1 :: in u64 = R0
000463da: strcmp_s2 :: in u64 = R1
000463db: strcmp_result :: out u32 = low:32[R0]

000312d5:
0003fd48: R16 := 0x430000
0003fd4f: R17 := mem[R16 + 0x1E0, el]:u64
0003fd55: R16 := R16 + 0x1E0
0003fd5a: call R17 with noreturn

00046220: sub strcspn(strcspn_s, strcspn_reject, strcspn_result)
000463dc: strcspn_s :: in u64 = R0
000463dd: strcspn_reject :: in u64 = R1
000463de: strcspn_result :: out u64 = R0

0002a427:
0003ffc6: R16 := 0x430000
0003ffcd: R17 := mem[R16 + 0x2C8, el]:u64
0003ffd3: R16 := R16 + 0x2C8
0003ffd8: call R17 with noreturn

00046221: sub strdup(strdup_s, strdup_result)
000463df: strdup_s :: in u64 = R0
000463e0: strdup_result :: out u64 = R0

000225bd:
0003fbe8: R16 := 0x430000
0003fbef: R17 := mem[R16 + 0x160, el]:u64
0003fbf5: R16 := R16 + 0x160
0003fbfa: call R17 with noreturn

00046222: sub strerror(strerror_result)
000463e1: strerror_result :: out u32 = low:32[R0]

00020ea4:
0003fbfe: R16 := 0x430000
0003fc05: R17 := mem[R16 + 0x168, el]:u64
0003fc0b: R16 := R16 + 0x168
0003fc10: call R17 with noreturn

00046223: sub strlcat(strlcat_result)
000463e2: strlcat_result :: out u32 = low:32[R0]

00028c8d:
0003fd06: R16 := 0x430000
0003fd0d: R17 := mem[R16 + 0x1C8, el]:u64
0003fd13: R16 := R16 + 0x1C8
0003fd18: call R17 with noreturn

00046224: sub strlcpy(strlcpy_result)
000463e3: strlcpy_result :: out u32 = low:32[R0]

00021d05:
0003fdf8: R16 := 0x430000
0003fdff: R17 := mem[R16 + 0x220, el]:u64
0003fe05: R16 := R16 + 0x220
0003fe0a: call R17 with noreturn

00046225: sub strlen(strlen_s, strlen_result)
000463e4: strlen_s :: in u64 = R0
000463e5: strlen_result :: out u64 = R0

00016413:
0003f88e: R16 := 0x430000
0003f895: R17 := mem[R16 + 0x28, el]:u64
0003f89b: R16 := R16 + 0x28
0003f8a0: call R17 with noreturn

00046226: sub strncasecmp(strncasecmp_s1, strncasecmp_s2, strncasecmp_n, strncasecmp_result)
000463e6: strncasecmp_s1 :: in u64 = R0
000463e7: strncasecmp_s2 :: in u64 = R1
000463e8: strncasecmp_n :: in u64 = R2
000463e9: strncasecmp_result :: out u32 = low:32[R0]

0002a195:
0003fe0e: R16 := 0x430000
0003fe15: R17 := mem[R16 + 0x228, el]:u64
0003fe1b: R16 := R16 + 0x228
0003fe20: call R17 with noreturn

00046227: sub strncpy(strncpy_dst, strncpy_src, strncpy_n, strncpy_result)
000463ea: strncpy_dst :: in out u64 = R0
000463eb: strncpy_src :: in u64 = R1
000463ec: strncpy_n :: in u64 = R2
000463ed: strncpy_result :: out u64 = R0

00033e13:
0003ff84: R16 := 0x430000
0003ff8b: R17 := mem[R16 + 0x2B0, el]:u64
0003ff91: R16 := R16 + 0x2B0
0003ff96: call R17 with noreturn

00046228: sub strrchr(strrchr_s, strrchr_c, strrchr_result)
000463ee: strrchr_s :: in u64 = R0
000463ef: strrchr_c :: in u32 = low:32[R1]
000463f0: strrchr_result :: out u64 = R0

0002739e:
0003fc2a: R16 := 0x430000
0003fc31: R17 := mem[R16 + 0x178, el]:u64
0003fc37: R16 := R16 + 0x178
0003fc3c: call R17 with noreturn

00046229: sub strsep(strsep_stringp, strsep_delim, strsep_result)
000463f1: strsep_stringp :: in out u64 = R0
000463f2: strsep_delim :: in u64 = R1
000463f3: strsep_result :: out u64 = R0

00036763:
0003fd32: R16 := 0x430000
0003fd39: R17 := mem[R16 + 0x1D8, el]:u64
0003fd3f: R16 := R16 + 0x1D8
0003fd44: call R17 with noreturn

0004622a: sub strstr(strstr_haystack, strstr_needle, strstr_result)
000463f4: strstr_haystack :: in u64 = R0
000463f5: strstr_needle :: in u64 = R1
000463f6: strstr_result :: out u64 = R0

0002278e:
0003ff42: R16 := 0x430000
0003ff49: R17 := mem[R16 + 0x298, el]:u64
0003ff4f: R16 := R16 + 0x298
0003ff54: call R17 with noreturn

0004622b: sub strtok_r(strtok_r_str, strtok_r_delim, strtok_r_saveptr, strtok_r_result)
000463f7: strtok_r_str :: in out u64 = R0
000463f8: strtok_r_delim :: in u64 = R1
000463f9: strtok_r_saveptr :: in out u64 = R2
000463fa: strtok_r_result :: out u64 = R0

0002852d:
0003fa5c: R16 := 0x430000
0003fa63: R17 := mem[R16 + 0xD0, el]:u64
0003fa69: R16 := R16 + 0xD0
0003fa6e: call R17 with noreturn

0004622c: sub strtol(strtol_nptr, strtol_endptr, strtol_base, strtol_result)
000463fb: strtol_nptr :: in u64 = R0
000463fc: strtol_endptr :: in out u64 = R1
000463fd: strtol_base :: in u32 = low:32[R2]
000463fe: strtol_result :: out u64 = R0

0002900e:
0003fd74: R16 := 0x430000
0003fd7b: R17 := mem[R16 + 0x1F0, el]:u64
0003fd81: R16 := R16 + 0x1F0
0003fd86: call R17 with noreturn

0004622d: sub strtoul(strtoul_nptr, strtoul_endptr, strtoul_base, strtoul_result)
000463ff: strtoul_nptr :: in u64 = R0
00046400: strtoul_endptr :: in out u64 = R1
00046401: strtoul_base :: in u32 = low:32[R2]
00046402: strtoul_result :: out u64 = R0

00039ee5:
0003f878: R16 := 0x430000
0003f87f: R17 := mem[R16 + 0x20, el]:u64
0003f885: R16 := R16 + 0x20
0003f88a: call R17 with noreturn

0004622e: sub substr(substr_result)
00046403: substr_result :: out u32 = low:32[R0]

00022972:
00022976: #120 := R31 - 0x30
0002297c: mem := mem with [#120, el]:u64 <- R29
00022982: mem := mem with [#120 + 8, el]:u64 <- R30
00022986: R31 := #120
0002298c: R29 := R31
00022994: mem := mem with [R31 + 0x18, el]:u64 <- R0
0002299c: mem := mem with [R31 + 0x14, el]:u32 <- 31:0[R1]
000229a4: mem := mem with [R31 + 0x10, el]:u32 <- 31:0[R2]
000229ab: R0 := mem[R31 + 0x18, el]:u64
000229b0: VF := 0
000229b3: CF := 1
000229b7: ZF := R0 = 0
000229bb: NF := 63:63[R0]
000229c1: when ZF <> 1 goto %000229bf
0004622f: goto %00023efc

00023efc:
00023eff: R0 := 0x41D000
00023f05: R3 := R0
00023f0a: R2 := 0x1F6
00023f0f: R0 := 0x41C000
00023f15: R1 := R0 + 0xAF0
00023f1a: R0 := 0x41C000
00023f20: R0 := R0 + 0xB58
00023f25: R30 := 0x4119E8
00023f27: call @__assert_fail with return %000229bf

000229bf:
000229c9: R0 := pad:64[mem[R31 + 0x14, el]:u32]
000229ce: VF := 0
000229d1: CF := 1
000229d5: ZF := 31:0[R0] = 0
000229d9: NF := 31:31[R0]
000229e0: when NF = VF goto %000229de
00046230: goto %00023ecf

00023ecf:
00023ed2: R0 := 0x41D000
00023ed8: R3 := R0
00023edd: R2 := 0x1F7
00023ee2: R0 := 0x41C000
00023ee8: R1 := R0 + 0xAF0
00023eed: R0 := 0x41C000
00023ef3: R0 := R0 + 0xB68
00023ef8: R30 := 0x411A14
00023efa: call @__assert_fail with return %000229de

000229de:
000229e8: R0 := pad:64[mem[R31 + 0x10, el]:u32]
000229ed: VF := 0
000229f0: CF := 1
000229f4: ZF := 31:0[R0] = 0
000229f8: NF := 31:31[R0]
000229ff: when NF = VF goto %000229fd
00046231: goto %00023ea2

00023ea2:
00023ea5: R0 := 0x41D000
00023eab: R3 := R0
00023eb0: R2 := 0x1F8
00023eb5: R0 := 0x41C000
00023ebb: R1 := R0 + 0xAF0
00023ec0: R0 := 0x41C000
00023ec6: R0 := R0 + 0xB78
00023ecb: R30 := 0x411A40
00023ecd: call @__assert_fail with return %000229fd

000229fd:
00022a07: R0 := pad:64[mem[R31 + 0x10, el]:u32]
00022a0c: VF := 0
00022a0f: CF := 1
00022a13: ZF := 31:0[R0] = 0
00022a17: NF := 31:31[R0]
00022a1d: when ZF <> 1 goto %00022a1b
00046232: goto %00023e8c

00023e8c:
00023e91: R0 := mem[R31 + 0x18, el]:u64
00023e96: R30 := 0x411A54
00023e98: call @strlen with return %00023e9a

00023e9a:
00023ea0: mem := mem with [R31 + 0x10, el]:u32 <- 31:0[R0]
00046233: goto %00022a1b

00022a1b:
00022a25: R0 := mem[R31 + 0x18, el]:u64
00022a2a: R30 := 0x411A60
00022a2c: call @strlen with return %00022a2e

00022a2e:
00022a32: R1 := pad:64[31:0[R0]]
00022a39: R0 := pad:64[mem[R31 + 0x14, el]:u32]
00022a40: R0 := pad:64[31:0[R1] + ~31:0[R0] + 1]
00022a47: R1 := pad:64[mem[R31 + 0x10, el]:u32]
00022a4d: #121 := ~31:0[R0]
00022a52: #122 := 31:0[R1] + ~31:0[R0]
00022a58: VF := extend:64[#122 + 1] <> extend:64[31:0[R1]] + extend:64[#121]
          + 1
00022a5e: CF := pad:64[#122 + 1] <> pad:64[31:0[R1]] + pad:64[#121] + 1
00022a62: ZF := #122 + 1 = 0
00022a66: NF := 31:31[#122 + 1]
00022a6d: when NF <> VF goto %00022a6b
00046234: goto %00023e66

00022a6b:
00022a75: R0 := pad:64[mem[R31 + 0x10, el]:u32]
00046235: goto %00022a77

00023e66:
00023e6b: R0 := mem[R31 + 0x18, el]:u64
00023e70: R30 := 0x411A80
00023e72: call @strlen with return %00023e74

00023e74:
00023e78: R1 := pad:64[31:0[R0]]
00023e7f: R0 := pad:64[mem[R31 + 0x14, el]:u32]
00023e86: R0 := pad:64[31:0[R1] + ~31:0[R0] + 1]
00023e8a: goto %00022a77

00022a77:
00022a7d: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
00022a84: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00022a89: VF := 0
00022a8c: CF := 1
00022a90: ZF := 31:0[R0] = 0
00022a94: NF := 31:31[R0]
00022a9c: when NF = VF & ~ZF goto %00022a9a
00046236: goto %00023e56

00022a9a:
00022aa4: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00022aaa: R0 := pad:64[31:0[R0] + 1]
00022ab0: R0 := extend:64[31:0[R0]]
00022ab5: R30 := 0x411AC0
00022ab7: call @zmalloc with return %00022ab9

00022ab9:
00022abf: mem := mem with [R31 + 0x20, el]:u64 <- R0
00022ac6: R0 := extend:64[mem[R31 + 0x14, el]:u32]
00022acd: R1 := mem[R31 + 0x18, el]:u64
00022ad4: R1 := R1 + R0
00022adb: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00022ae1: R0 := pad:64[31:0[R0] + 1]
00022ae7: R0 := extend:64[31:0[R0]]
00022aed: R2 := R0
00022af4: R0 := mem[R31 + 0x20, el]:u64
00022af9: R30 := 0x411AE8
00022afb: call @strlcpy with return %00022afd

00022afd:
00022b02: R0 := mem[R31 + 0x20, el]:u64
00046237: goto %00022b04

00023e56:
00023e59: R0 := 1
00023e5e: R30 := 0x411AAC
00023e60: call @zmalloc with return %00023e62

00023e62:
00023e64: goto %00022b04

00022b04:
00022b09: R29 := mem[R31, el]:u64
00022b0e: R30 := mem[R31 + 8, el]:u64
00022b12: R31 := R31 + 0x30
00022b17: call R30 with noreturn

00046238: sub syslog(syslog_result)
00046404: syslog_result :: out u32 = low:32[R0]

00020e7f:
0003f8ba: R16 := 0x430000
0003f8c1: R17 := mem[R16 + 0x38, el]:u64
0003f8c7: R16 := R16 + 0x38
0003f8cc: call R17 with noreturn

00046239: sub tcgetattr(tcgetattr_result)
00046405: tcgetattr_result :: out u32 = low:32[R0]

0003ac53:
0003f9ee: R16 := 0x430000
0003f9f5: R17 := mem[R16 + 0xA8, el]:u64
0003f9fb: R16 := R16 + 0xA8
0003fa00: call R17 with noreturn

0004623a: sub tcsetattr(tcsetattr_result)
00046406: tcsetattr_result :: out u32 = low:32[R0]

0003acd0:
0003feea: R16 := 0x430000
0003fef1: R17 := mem[R16 + 0x278, el]:u64
0003fef7: R16 := R16 + 0x278
0003fefc: call R17 with noreturn

0004623b: sub time(time_result)
00046407: time_result :: out u32 = low:32[R0]

0003431c:
0003fa88: R16 := 0x430000
0003fa8f: R17 := mem[R16 + 0xE0, el]:u64
0003fa95: R16 := R16 + 0xE0
0003fa9a: call R17 with noreturn

0004623c: sub to_base64(to_base64_result)
00046408: to_base64_result :: out u32 = low:32[R0]

00016f51:
00016f55: R31 := R31 - 0x30
00016f5d: mem := mem with [R31 + 0x18, el]:u64 <- R0
00016f65: mem := mem with [R31 + 0x10, el]:u64 <- R1
00016f6d: mem := mem with [R31 + 8, el]:u64 <- R2
00016f75: mem := mem with [R31, el]:u64 <- R3
00016f7a: goto %00016f78

00016f78:
00016f80: R0 := mem[R31 + 8, el]:u64
00016f86: #30 := R0 - 2
00016f8b: VF := extend:128[#30] <> extend:128[R0] - 2
00016f90: CF := pad:128[#30] <> pad:128[R0] + 0xFFFFFFFFFFFFFFFE
00016f94: ZF := #30 = 0
00016f98: NF := 63:63[#30]
00016f9f: when ~(CF & ~ZF) goto %00016f9d
0004623d: goto %00021725

00021725:
0002172a: R0 := mem[R31, el]:u64
00021730: #103 := R0 - 0xA
00021735: VF := extend:128[#103] <> extend:128[R0] - 0xA
0002173a: CF := pad:128[#103] <> pad:128[R0] + 0xFFFFFFFFFFFFFFF6
0002173e: ZF := #103 = 0
00021742: NF := 63:63[#103]
00021749: when CF & ~ZF goto %00021747
0004623e: goto %00016f9d

00016f9d:
00016fa7: R0 := mem[R31 + 8, el]:u64
00016fac: VF := 0
00016faf: CF := 1
00016fb3: ZF := R0 = 0
00016fb7: NF := 63:63[R0]
00016fbd: when ZF goto %00016fbb
0004623f: goto %0002153e

0002153e:
00021543: R0 := mem[R31, el]:u64
00021549: #100 := R0 - 4
0002154e: VF := extend:128[#100] <> extend:128[R0] - 4
00021553: CF := pad:128[#100] <> pad:128[R0] + 0xFFFFFFFFFFFFFFFC
00021557: ZF := #100 = 0
0002155b: NF := 63:63[#100]
00021561: when ~(CF & ~ZF) goto %00016fbb
00046240: goto %00021565

00021565:
0002156a: R0 := mem[R31 + 0x10, el]:u64
00021571: R0 := pad:64[mem[R0]]
00021577: R0 := pad:64[31:2[R0]]
0002157d: R0 := pad:64[7:0[R0]]
00021583: R3 := pad:64[31:0[R0]]
0002158a: R0 := mem[R31 + 0x18, el]:u64
00021590: R1 := R0 + 1
00021598: mem := mem with [R31 + 0x18, el]:u64 <- R1
0002159d: R1 := 0x41C000
000215a3: R2 := R1 + 0xCD0
000215a9: R1 := extend:64[31:0[R3]]
000215b1: R1 := pad:64[mem[R2 + R1]]
000215b9: mem := mem with [R0] <- 7:0[R1]
000215c0: R0 := mem[R31 + 0x10, el]:u64
000215c7: R0 := pad:64[mem[R0]]
000215cd: R0 := pad:64[3:0[R0].0]
000215d3: R0 := pad:64[7:0[R0]]
000215d9: R0 := pad:64[5:4[R0].0]
000215e1: mem := mem with [R31 + 0x2F] <- 7:0[R0]
000215e8: R0 := mem[R31 + 8, el]:u64
000215ee: #101 := R0 - 1
000215f3: VF := extend:128[#101] <> extend:128[R0] - 1
000215f8: CF := pad:128[#101] <> pad:128[R0] + 0xFFFFFFFFFFFFFFFF
000215fc: ZF := #101 = 0
00021600: NF := 63:63[#101]
00021607: when ~(CF & ~ZF) goto %00021605
00046241: goto %000216ef

000216ef:
000216f4: R0 := mem[R31 + 0x10, el]:u64
000216fa: R0 := R0 + 1
00021701: R0 := pad:64[mem[R0]]
00021707: R0 := pad:64[31:4[R0]]
0002170d: R1 := pad:64[7:0[R0]]
00021714: R0 := pad:64[mem[R31 + 0x2F]]
0002171b: R0 := pad:64[31:0[R1] | 31:0[R0]]
00021723: mem := mem with [R31 + 0x2F] <- 7:0[R0]
00046242: goto %00021605

00021605:
0002160f: R3 := pad:64[mem[R31 + 0x2F]]
00021616: R0 := mem[R31 + 0x18, el]:u64
0002161c: R1 := R0 + 1
00021624: mem := mem with [R31 + 0x18, el]:u64 <- R1
00021629: R1 := 0x41C000
0002162f: R2 := R1 + 0xCD0
00021635: R1 := extend:64[31:0[R3]]
0002163d: R1 := pad:64[mem[R2 + R1]]
00021645: mem := mem with [R0] <- 7:0[R1]
0002164c: R0 := mem[R31 + 8, el]:u64
00021652: #102 := R0 - 1
00021657: VF := extend:128[#102] <> extend:128[R0] - 1
0002165c: CF := pad:128[#102] <> pad:128[R0] + 0xFFFFFFFFFFFFFFFF
00021660: ZF := #102 = 0
00021664: NF := 63:63[#102]
0002166b: when ~(CF & ~ZF) goto %00021669
00046243: goto %000216b2

00021669:
00021671: R1 := 0x3D
00046244: goto %00021673

000216b2:
000216b7: R0 := mem[R31 + 0x10, el]:u64
000216bd: R0 := R0 + 1
000216c4: R0 := pad:64[mem[R0]]
000216ca: R0 := pad:64[29:0[R0].0]
000216d0: R2 := pad:64[5:2[R0].0]
000216d5: R0 := 0x41C000
000216db: R1 := R0 + 0xCD0
000216e1: R0 := extend:64[31:0[R2]]
000216e9: R1 := pad:64[mem[R1 + R0]]
000216ed: goto %00021673

00021673:
00021678: R0 := mem[R31 + 0x18, el]:u64
0002167e: R2 := R0 + 1
00021686: mem := mem with [R31 + 0x18, el]:u64 <- R2
0002168e: mem := mem with [R0] <- 7:0[R1]
00021695: R0 := mem[R31 + 0x18, el]:u64
0002169b: R1 := R0 + 1
000216a3: mem := mem with [R31 + 0x18, el]:u64 <- R1
000216a8: R1 := 0x3D
000216b0: mem := mem with [R0] <- 7:0[R1]
00046245: goto %00016fbb

00016fbb:
00016fc5: R0 := mem[R31 + 0x18, el]:u64
00016fcc: mem := mem with [R0] <- 0
00016fd4: R31 := R31 + 0x30
00016fd9: call R30 with noreturn

00021747:
00021751: R0 := mem[R31 + 0x10, el]:u64
00021758: R0 := pad:64[mem[R0]]
0002175e: R0 := pad:64[31:2[R0]]
00021764: R0 := pad:64[7:0[R0]]
0002176a: R3 := pad:64[31:0[R0]]
00021771: R0 := mem[R31 + 0x18, el]:u64
00021777: R1 := R0 + 1
0002177f: mem := mem with [R31 + 0x18, el]:u64 <- R1
00021784: R1 := 0x41C000
0002178a: R2 := R1 + 0xCD0
00021790: R1 := extend:64[31:0[R3]]
00021798: R1 := pad:64[mem[R2 + R1]]
000217a0: mem := mem with [R0] <- 7:0[R1]
000217a7: R0 := mem[R31 + 0x10, el]:u64
000217ae: R0 := pad:64[mem[R0]]
000217b4: R0 := pad:64[27:0[R0].0]
000217ba: R0 := pad:64[5:4[R0].0]
000217c1: R1 := mem[R31 + 0x10, el]:u64
000217c7: R1 := R1 + 1
000217ce: R1 := pad:64[mem[R1]]
000217d4: R1 := pad:64[31:4[R1]]
000217da: R1 := pad:64[7:0[R1]]
000217e1: R3 := pad:64[31:0[R0] | 31:0[R1]]
000217e8: R0 := mem[R31 + 0x18, el]:u64
000217ee: R1 := R0 + 1
000217f6: mem := mem with [R31 + 0x18, el]:u64 <- R1
000217fb: R1 := 0x41C000
00021801: R2 := R1 + 0xCD0
00021807: R1 := extend:64[31:0[R3]]
0002180f: R1 := pad:64[mem[R2 + R1]]
00021817: mem := mem with [R0] <- 7:0[R1]
0002181e: R0 := mem[R31 + 0x10, el]:u64
00021824: R0 := R0 + 1
0002182b: R0 := pad:64[mem[R0]]
00021831: R0 := pad:64[29:0[R0].0]
00021837: R0 := pad:64[5:2[R0].0]
0002183e: R1 := mem[R31 + 0x10, el]:u64
00021844: R1 := R1 + 2
0002184b: R1 := pad:64[mem[R1]]
00021851: R1 := pad:64[31:6[R1]]
00021857: R1 := pad:64[7:0[R1]]
0002185e: R3 := pad:64[31:0[R0] | 31:0[R1]]
00021865: R0 := mem[R31 + 0x18, el]:u64
0002186b: R1 := R0 + 1
00021873: mem := mem with [R31 + 0x18, el]:u64 <- R1
00021878: R1 := 0x41C000
0002187e: R2 := R1 + 0xCD0
00021884: R1 := extend:64[31:0[R3]]
0002188c: R1 := pad:64[mem[R2 + R1]]
00021894: mem := mem with [R0] <- 7:0[R1]
0002189b: R0 := mem[R31 + 0x10, el]:u64
000218a1: R0 := R0 + 2
000218a8: R0 := pad:64[mem[R0]]
000218ae: R3 := pad:64[5:0[R0]]
000218b5: R0 := mem[R31 + 0x18, el]:u64
000218bb: R1 := R0 + 1
000218c3: mem := mem with [R31 + 0x18, el]:u64 <- R1
000218c8: R1 := 0x41C000
000218ce: R2 := R1 + 0xCD0
000218d4: R1 := extend:64[31:0[R3]]
000218dc: R1 := pad:64[mem[R2 + R1]]
000218e4: mem := mem with [R0] <- 7:0[R1]
000218eb: R0 := mem[R31, el]:u64
000218f1: R0 := R0 - 4
000218f9: mem := mem with [R31, el]:u64 <- R0
00021900: R0 := mem[R31 + 8, el]:u64
00021906: R0 := R0 - 3
0002190e: mem := mem with [R31 + 8, el]:u64 <- R0
00021915: R0 := mem[R31 + 0x10, el]:u64
0002191b: R0 := R0 + 3
00021923: mem := mem with [R31 + 0x10, el]:u64 <- R0
00046246: goto %00016f78

00046247: sub tolower(tolower_c, tolower_result)
00046409: tolower_c :: in u32 = low:32[R0]
0004640a: tolower_result :: out u32 = low:32[R0]

0001646a:
0004001e: R16 := 0x430000
00040025: R17 := mem[R16 + 0x2E8, el]:u64
0004002b: R16 := R16 + 0x2E8
00040030: call R17 with noreturn

00046248: sub toupper(toupper_c, toupper_result)
0004640b: toupper_c :: in u32 = low:32[R0]
0004640c: toupper_result :: out u32 = low:32[R0]

00016576:
0003faca: R16 := 0x430000
0003fad1: R17 := mem[R16 + 0xF8, el]:u64
0003fad7: R16 := R16 + 0xF8
0003fadc: call R17 with noreturn

00046249: sub trimr(trimr_result)
0004640d: trimr_result :: out u32 = low:32[R0]

00022fc6:
00022fca: #127 := R31 - 0x30
00022fd0: mem := mem with [#127, el]:u64 <- R29
00022fd6: mem := mem with [#127 + 8, el]:u64 <- R30
00022fda: R31 := #127
00022fe0: R29 := R31
00022fe8: mem := mem with [R31 + 0x18, el]:u64 <- R0
00022fef: R0 := mem[R31 + 0x18, el]:u64
00022ff4: VF := 0
00022ff7: CF := 1
00022ffb: ZF := R0 = 0
00022fff: NF := 63:63[R0]
00023005: when ZF <> 1 goto %00023003
0004624a: goto %000230fb

000230fb:
000230fe: R0 := 0x41D000
00023104: R3 := R0 + 0x48
00023109: R2 := 0x2A9
0002310e: R0 := 0x41C000
00023114: R1 := R0 + 0xAF0
00023119: R0 := 0x41C000
0002311f: R0 := R0 + 0xCA8
00023124: R30 := 0x41224C
00023126: call @__assert_fail with return %00023003

00023003:
0002300d: R0 := mem[R31 + 0x18, el]:u64
00023012: R30 := 0x412254
00023014: call @strlen with return %00023016

00023016:
0002301a: R0 := pad:64[31:0[R0] - 1]
00023022: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
00023027: goto %00023025

00023025:
0002302d: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00023032: VF := 0
00023035: CF := 1
00023039: ZF := 31:0[R0] = 0
0002303d: NF := 31:31[R0]
00023044: when NF <> VF goto %00023042
0004624b: goto %00023085

00023085:
00023088: R30 := 0x41227C
0002308a: call @__ctype_b_loc with return %0002308c

0002308c:
00023091: R1 := mem[R0, el]:u64
00023098: R0 := extend:64[mem[R31 + 0x2C, el]:u32]
0002309f: R2 := mem[R31 + 0x18, el]:u64
000230a6: R0 := R2 + R0
000230ad: R0 := pad:64[mem[R0]]
000230b3: R0 := pad:64[7:0[R0]]
000230b9: R0 := 62:0[R0].0
000230c0: R0 := R1 + R0
000230c7: R0 := pad:64[mem[R0, el]:u16]
000230cd: R0 := pad:64[13:13[R0].0]
000230d2: VF := 0
000230d5: CF := 1
000230d9: ZF := 31:0[R0] = 0
000230dd: NF := 31:31[R0]
000230e3: when ZF <> 1 goto %000230e1
0004624c: goto %00023042

00023042:
0002304c: R0 := extend:64[mem[R31 + 0x2C, el]:u32]
00023052: R0 := R0 + 1
00023059: R1 := mem[R31 + 0x18, el]:u64
00023060: R0 := R1 + R0
00023067: mem := mem with [R0] <- 0
0002306e: R0 := mem[R31 + 0x18, el]:u64
00023075: R29 := mem[R31, el]:u64
0002307a: R30 := mem[R31 + 8, el]:u64
0002307e: R31 := R31 + 0x30
00023083: call R30 with noreturn

000230e1:
000230eb: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
000230f1: R0 := pad:64[31:0[R0] - 1]
000230f9: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
0004624d: goto %00023025

0004624e: sub tunnel(tunnel_result)
0004640e: tunnel_result :: out u32 = low:32[R0]

0002919d:
000291a1: #231 := R31 - 0xD0
000291a7: mem := mem with [#231, el]:u64 <- R29
000291ad: mem := mem with [#231 + 8, el]:u64 <- R30
000291b1: R31 := #231
000291b7: R29 := R31
000291bf: mem := mem with [R31 + 0x1C, el]:u32 <- 31:0[R0]
000291c7: mem := mem with [R31 + 0x18, el]:u32 <- 31:0[R1]
000291cc: R0 := 0x1000
000291d1: R30 := 0x407DC0
000291d3: call @zmalloc with return %000291d5

000291d5:
000291db: mem := mem with [R31 + 0xB8, el]:u64 <- R0
000291e0: R0 := 0x430000
000291e6: R0 := R0 + 0x390
000291ed: R0 := pad:64[mem[R0, el]:u32]
000291f2: VF := 0
000291f5: CF := 1
000291f9: ZF := 31:0[R0] = 0
000291fd: NF := 31:31[R0]
00029203: when ZF goto %00029201
0004624f: goto %00029594

00029594:
00029599: R2 := pad:64[mem[R31 + 0x18, el]:u32]
000295a0: R1 := pad:64[mem[R31 + 0x1C, el]:u32]
000295a5: R0 := 0x419000
000295ab: R0 := R0 + 0xCD0
000295b0: R30 := 0x407DEC
000295b2: call @printf with return %00029201

00029201:
0002920a: R0 := R31 + 0x28
00029212: mem := mem with [R31 + 0xB0, el]:u64 <- R0
00029219: mem := mem with [R31 + 0xC4, el]:u32 <- 0
0002921e: goto %0002921c

0002921c:
00029224: R0 := pad:64[mem[R31 + 0xC4, el]:u32]
0002922a: #232 := 31:0[R0] - 0xF
0002922f: VF := extend:64[#232] <> extend:64[31:0[R0]] - 0xF
00029234: CF := pad:64[#232] <> pad:64[31:0[R0]] + 0xFFFFFFF1
00029238: ZF := #232 = 0
0002923c: NF := 31:31[#232]
00029243: when ~(CF & ~ZF) goto %00029241
00046250: goto %00029271

00029271:
00029276: R0 := pad:64[mem[R31 + 0x1C, el]:u32]
0002927c: R1 := pad:64[31:0[R0] + 0x3F]
00029281: VF := 0
00029284: CF := 1
00029288: ZF := 31:0[R0] = 0
0002928c: NF := 31:31[R0]
0002929b: when NF <> VF goto %00029293
0002929c: goto %00029297

00029297:
00029298: R0 := pad:64[31:0[R0]]
0002929e: goto %0002929a

00029293:
00029294: R0 := pad:64[31:0[R1]]
0002929d: goto %0002929a

0002929a:
000292a4: R0 := pad:64[extend:32[31:6[R0]]]
000292aa: R3 := pad:64[31:0[R0]]
000292b0: R0 := extend:64[31:0[R3]]
000292b6: R0 := 60:0[R0].0
000292bc: R1 := R31 + 0x28
000292c4: R0 := mem[R1 + R0, el]:u64
000292cb: R1 := pad:64[mem[R31 + 0x1C, el]:u32]
000292d1: R1 := pad:64[5:0[R1]]
000292d6: R2 := 1
000292dd: R1 := R2 << pad:12[5:0[R1]]
000292e4: R2 := R0 | R1
000292ea: R0 := extend:64[31:0[R3]]
000292f0: R0 := 60:0[R0].0
000292f6: R1 := R31 + 0x28
000292ff: mem := mem with [R1 + R0, el]:u64 <- R2
00029306: R0 := pad:64[mem[R31 + 0x18, el]:u32]
0002930c: R1 := pad:64[31:0[R0] + 0x3F]
00029311: VF := 0
00029314: CF := 1
00029318: ZF := 31:0[R0] = 0
0002931c: NF := 31:31[R0]
0002932b: when NF <> VF goto %00029323
0002932c: goto %00029327

00029327:
00029328: R0 := pad:64[31:0[R0]]
0002932e: goto %0002932a

00029323:
00029324: R0 := pad:64[31:0[R1]]
0002932d: goto %0002932a

0002932a:
00029334: R0 := pad:64[extend:32[31:6[R0]]]
0002933a: R3 := pad:64[31:0[R0]]
00029340: R0 := extend:64[31:0[R3]]
00029346: R0 := 60:0[R0].0
0002934c: R1 := R31 + 0x28
00029354: R0 := mem[R1 + R0, el]:u64
0002935b: R1 := pad:64[mem[R31 + 0x18, el]:u32]
00029361: R1 := pad:64[5:0[R1]]
00029366: R2 := 1
0002936d: R1 := R2 << pad:12[5:0[R1]]
00029374: R2 := R0 | R1
0002937a: R0 := extend:64[31:0[R3]]
00029380: R0 := 60:0[R0].0
00029386: R1 := R31 + 0x28
0002938f: mem := mem with [R1 + R0, el]:u64 <- R2
00029395: R0 := R31 + 0x28
0002939a: R4 := 0
0002939f: R3 := 0
000293a4: R2 := 0
000293aa: R1 := R0
000293af: R0 := 0x400
000293b4: R30 := 0x407ED4
000293b7: call @select with return %000293b9

000293b9:
000293bf: mem := mem with [R31 + 0xAC, el]:u32 <- 31:0[R0]
000293c6: R0 := pad:64[mem[R31 + 0xAC, el]:u32]
000293cb: VF := 0
000293ce: CF := 1
000293d2: ZF := 31:0[R0] = 0
000293d6: NF := 31:31[R0]
000293de: when ~(NF = VF & ~ZF) goto %000293dc
00046251: goto %00029428

000293dc:
000293e6: R0 := pad:64[mem[R31 + 0xAC, el]:u32]
000293eb: VF := 0
000293ee: CF := 1
000293f2: ZF := 31:0[R0] = 0
000293f6: NF := 31:31[R0]
000293fc: when NF = VF goto %00029201
00046252: goto %00029400

00029400:
00029405: R0 := mem[R31 + 0xB8, el]:u64
0002940a: R30 := 0x407FB0
0002940c: call @free with return %0002940e

0002940e:
00029411: R0 := 0
00046253: goto %00029413

00029428:
0002942d: R0 := pad:64[mem[R31 + 0x1C, el]:u32]
00029433: R1 := pad:64[31:0[R0] + 0x3F]
00029438: VF := 0
0002943b: CF := 1
0002943f: ZF := 31:0[R0] = 0
00029443: NF := 31:31[R0]
00029452: when NF <> VF goto %0002944a
00029453: goto %0002944e

0002944e:
0002944f: R0 := pad:64[31:0[R0]]
00029455: goto %00029451

0002944a:
0002944b: R0 := pad:64[31:0[R1]]
00029454: goto %00029451

00029451:
0002945b: R0 := pad:64[extend:32[31:6[R0]]]
00029461: R0 := extend:64[31:0[R0]]
00029467: R0 := 60:0[R0].0
0002946d: R1 := R31 + 0x28
00029475: R0 := mem[R1 + R0, el]:u64
0002947c: R1 := pad:64[mem[R31 + 0x1C, el]:u32]
00029482: R1 := pad:64[5:0[R1]]
00029487: R2 := 1
0002948e: R1 := R2 << pad:12[5:0[R1]]
00029495: R0 := R0 & R1
0002949a: VF := 0
0002949d: CF := 1
000294a1: ZF := R0 = 0
000294a5: NF := 63:63[R0]
000294ab: when ZF goto %000294a9
00046254: goto %00029572

000294a9:
000294b3: R0 := pad:64[mem[R31 + 0x18, el]:u32]
000294bb: mem := mem with [R31 + 0xCC, el]:u32 <- 31:0[R0]
000294c2: R0 := pad:64[mem[R31 + 0x1C, el]:u32]
000294ca: mem := mem with [R31 + 0xC8, el]:u32 <- 31:0[R0]
00046255: goto %000294cc

00029572:
00029577: R0 := pad:64[mem[R31 + 0x1C, el]:u32]
0002957f: mem := mem with [R31 + 0xCC, el]:u32 <- 31:0[R0]
00029586: R0 := pad:64[mem[R31 + 0x18, el]:u32]
0002958e: mem := mem with [R31 + 0xC8, el]:u32 <- 31:0[R0]
00029592: goto %000294cc

000294cc:
000294cf: R2 := 0x1000
000294d6: R1 := mem[R31 + 0xB8, el]:u64
000294dd: R0 := pad:64[mem[R31 + 0xCC, el]:u32]
000294e2: R30 := 0x407F58
000294e4: call @read with return %000294e6

000294e6:
000294ec: mem := mem with [R31 + 0xA8, el]:u32 <- 31:0[R0]
000294f3: R0 := pad:64[mem[R31 + 0xA8, el]:u32]
000294f8: VF := 0
000294fb: CF := 1
000294ff: ZF := 31:0[R0] = 0
00029503: NF := 31:31[R0]
0002950b: when ~(NF = VF & ~ZF) goto %00029509
00046256: goto %0002954c

00029509:
00029513: R0 := mem[R31 + 0xB8, el]:u64
00029518: R30 := 0x407F88
0002951a: call @free with return %0002951c

0002951c:
00029521: R0 := pad:64[mem[R31 + 0xA8, el]:u32]
00029526: VF := 0
00029529: CF := 1
0002952d: ZF := 31:0[R0] = 0
00029531: NF := 31:31[R0]
0002953d: when ZF <> 1 goto %00029536
0002953e: goto %00029539

00029539:
0002953a: R0 := 1
00029540: goto %0002953c

00029536:
00029537: R0 := 0
0002953f: goto %0002953c

0002953c:
00029546: R0 := pad:64[7:0[R0]]
0002954a: goto %00029413

00029413:
00029418: R29 := mem[R31, el]:u64
0002941d: R30 := mem[R31 + 8, el]:u64
00029421: R31 := R31 + 0xD0
00029426: call R30 with noreturn

0002954c:
00029551: R0 := extend:64[mem[R31 + 0xA8, el]:u32]
00029557: R2 := R0
0002955e: R1 := mem[R31 + 0xB8, el]:u64
00029565: R0 := pad:64[mem[R31 + 0xC8, el]:u32]
0002956a: R30 := 0x407F7C
0002956c: call @write_wrapper with return %0002956e

0002956e:
00029570: goto %00029201

00029241:
0002924b: R0 := mem[R31 + 0xB0, el]:u64
00029252: R1 := pad:64[mem[R31 + 0xC4, el]:u32]
0002925a: mem := mem with [R0 + (60:0[R1].0), el]:u64 <- 0
00029261: R0 := pad:64[mem[R31 + 0xC4, el]:u32]
00029267: R0 := pad:64[31:0[R0] + 1]
0002926f: mem := mem with [R31 + 0xC4, el]:u32 <- 31:0[R0]
00046257: goto %0002921c

00046258: sub tunnel_add(tunnel_add_result)
0004640f: tunnel_add_result :: out u32 = low:32[R0]

0002830c:
00028310: #215 := R31 - 0x90
00028316: mem := mem with [#215, el]:u64 <- R29
0002831c: mem := mem with [#215 + 8, el]:u64 <- R30
00028320: R31 := #215
00028326: R29 := R31
0002832e: mem := mem with [R31 + 0x10, el]:u64 <- R19
00028336: mem := mem with [R31 + 0x38, el]:u64 <- R0
0002833e: mem := mem with [R31 + 0x30, el]:u64 <- R1
00028346: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R2]
0002834d: R0 := mem[R31 + 0x30, el]:u64
00028352: R30 := 0x408AB4
00028354: call @strdup with return %00028356

00028356:
0002835c: mem := mem with [R31 + 0x30, el]:u64 <- R0
00028363: R0 := mem[R31 + 0x30, el]:u64
00028368: R30 := 0x408AC0
0002836a: call @strlen with return %0002836c

0002836c:
00028372: mem := mem with [R31 + 0x80, el]:u32 <- 31:0[R0]
00028378: R0 := R31 + 0x40
0002837f: R1 := mem[R31 + 0x30, el]:u64
00028387: mem := mem with [R0, el]:u64 <- R1
0002838c: R0 := 1
00028394: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0002839b: mem := mem with [R31 + 0x8C, el]:u32 <- 0
000283a0: goto %0002839e

0002839e:
000283a6: R0 := pad:64[mem[R31 + 0x88, el]:u32]
000283ac: #216 := 31:0[R0] - 3
000283b1: VF := extend:64[#216] <> extend:64[31:0[R0]] - 3
000283b6: CF := pad:64[#216] <> pad:64[31:0[R0]] + 0xFFFFFFFD
000283ba: ZF := #216 = 0
000283be: NF := 31:31[#216]
000283c6: when NF = VF & ~ZF goto %000283c4
00046259: goto %00033a32

00033a32:
00033a37: R1 := pad:64[mem[R31 + 0x8C, el]:u32]
00033a3e: R0 := pad:64[mem[R31 + 0x80, el]:u32]
00033a44: #370 := ~31:0[R0]
00033a49: #371 := 31:0[R1] + ~31:0[R0]
00033a4f: VF := extend:64[#371 + 1] <> extend:64[31:0[R1]] + extend:64[#370]
          + 1
00033a55: CF := pad:64[#371 + 1] <> pad:64[31:0[R1]] + pad:64[#370] + 1
00033a59: ZF := #371 + 1 = 0
00033a5d: NF := 31:31[#371 + 1]
00033a64: when NF <> VF goto %00033a62
0004625a: goto %000283c4

000283c4:
000283ce: mem := mem with [R31 + 0x84, el]:u32 <- 0
000283d5: R0 := pad:64[mem[R31 + 0x88, el]:u32]
000283db: #217 := 31:0[R0] - 4
000283e0: VF := extend:64[#217] <> extend:64[31:0[R0]] - 4
000283e5: CF := pad:64[#217] <> pad:64[31:0[R0]] + 0xFFFFFFFC
000283e9: ZF := #217 = 0
000283ed: NF := 31:31[#217]
000283f3: when ZF <> 1 goto %000283f1
0004625b: goto %0003392c

000283f1:
000283fa: R0 := R31 + 0x40
00028401: R1 := extend:64[mem[R31 + 0x84, el]:u32]
00028409: R0 := mem[R0 + (60:0[R1].0), el]:u64
0002840e: R30 := 0x408C0C
00028410: call @atoi with return %00028412

00028412:
00028418: mem := mem with [R31 + 0x7C, el]:u32 <- 31:0[R0]
0002841f: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
00028424: VF := 0
00028427: CF := 1
0002842b: ZF := 31:0[R0] = 0
0002842f: NF := 31:31[R0]
00028435: when ZF <> 1 goto %00028433
0004625c: goto %000338ee

000338ee:
000338f2: R0 := R31 + 0x40
000338f9: R1 := extend:64[mem[R31 + 0x84, el]:u32]
00033901: R0 := mem[R0 + (60:0[R1].0), el]:u64
00033907: R2 := R0
0003390c: R0 := 0x419000
00033912: R1 := R0 + 0xFE0
00033917: R0 := 3
0003391c: R30 := 0x408C3C
0003391e: call @syslog with return %00033920

00033920:
00033923: R0 := 1
00033928: R30 := 0x408C44
0003392a: call @myexit with return %00028433

00028433:
0002843c: R0 := R31 + 0x60
00028443: R2 := pad:64[mem[R31 + 0x2C, el]:u32]
0002844a: R1 := pad:64[mem[R31 + 0x7C, el]:u32]
0002844f: R30 := 0x408C54
00028451: call @so_resolv_wildcard with return %00028453

0003392c:
00033931: R0 := pad:64[mem[R31 + 0x84, el]:u32]
00033937: R1 := pad:64[31:0[R0] + 1]
0003393d: R0 := R31 + 0x40
00033943: R1 := extend:64[31:0[R1]]
0003394b: R0 := mem[R0 + (60:0[R1].0), el]:u64
00033950: R30 := 0x408B80
00033952: call @atoi with return %00033954

00033954:
0003395a: mem := mem with [R31 + 0x7C, el]:u32 <- 31:0[R0]
00033961: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
00033966: VF := 0
00033969: CF := 1
0003396d: ZF := 31:0[R0] = 0
00033971: NF := 31:31[R0]
00033977: when ZF goto %00033975
0004625d: goto %000339f2

000339f2:
000339f6: R0 := R31 + 0x40
000339fd: R1 := extend:64[mem[R31 + 0x84, el]:u32]
00033a05: R1 := mem[R0 + (60:0[R1].0), el]:u64
00033a0b: R0 := R31 + 0x60
00033a12: R2 := pad:64[mem[R31 + 0x7C, el]:u32]
00033a17: R30 := 0x408BA8
00033a19: call @so_resolv with return %00033a1b

00033a1b:
00033a1e: VF := 0
00033a21: CF := 1
00033a25: ZF := 31:0[R0] = 0
00033a29: NF := 31:31[R0]
00033a2e: when ZF <> 1 goto %000339d9
0004625e: goto %00033975

00033975:
0003397e: R0 := R31 + 0x40
00033985: R1 := extend:64[mem[R31 + 0x84, el]:u32]
0003398d: R2 := mem[R0 + (60:0[R1].0), el]:u64
00033994: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0003399a: R1 := pad:64[31:0[R0] + 1]
000339a0: R0 := R31 + 0x40
000339a6: R1 := extend:64[31:0[R1]]
000339ae: R0 := mem[R0 + (60:0[R1].0), el]:u64
000339b4: R3 := R0
000339b9: R0 := 0x419000
000339bf: R1 := R0 + 0xFB0
000339c4: R0 := 3
000339c9: R30 := 0x408BE4
000339cb: call @syslog with return %000339cd

000339cd:
000339d0: R0 := 1
000339d5: R30 := 0x408BEC
000339d7: call @myexit with return %000339d9

000339d9:
000339de: R0 := pad:64[mem[R31 + 0x84, el]:u32]
000339e4: R0 := pad:64[31:0[R0] + 1]
000339ec: mem := mem with [R31 + 0x84, el]:u32 <- 31:0[R0]
000339f0: goto %00028453

00028453:
00028458: R1 := pad:64[mem[R31 + 0x88, el]:u32]
0002845f: R0 := pad:64[mem[R31 + 0x84, el]:u32]
00028466: R0 := pad:64[31:0[R1] + ~31:0[R0] + 1]
0002846c: #218 := 31:0[R0] - 3
00028471: VF := extend:64[#218] <> extend:64[31:0[R0]] - 3
00028476: CF := pad:64[#218] <> pad:64[31:0[R0]] + 0xFFFFFFFD
0002847a: ZF := #218 = 0
0002847e: NF := 31:31[#218]
00028484: when ZF <> 1 goto %00028482
0004625f: goto %00033657

00028482:
0002848a: R0 := 0x41A000
00028490: R0 := R0 + 0x58
00028495: R30 := 0x408DF8
00028497: call @puts with return %00028499

00028499:
0002849c: R0 := 1
000284a1: R30 := 0x408E00
000284a3: call @myexit with return %000284a5

00033657:
0003365c: R0 := pad:64[mem[R31 + 0x84, el]:u32]
00033662: R1 := pad:64[31:0[R0] + 1]
00033668: R0 := R31 + 0x40
0003366e: R1 := extend:64[31:0[R1]]
00033676: R0 := mem[R0 + (60:0[R1].0), el]:u64
0003367d: R0 := pad:64[mem[R0]]
00033682: VF := 0
00033685: CF := 1
00033689: ZF := 31:0[R0] = 0
0003368d: NF := 31:31[R0]
00033693: when ZF goto %00033691
00046260: goto %000338af

000338af:
000338b4: R0 := pad:64[mem[R31 + 0x84, el]:u32]
000338ba: R1 := pad:64[31:0[R0] + 2]
000338c0: R0 := R31 + 0x40
000338c6: R1 := extend:64[31:0[R1]]
000338ce: R0 := mem[R0 + (60:0[R1].0), el]:u64
000338d5: R0 := pad:64[mem[R0]]
000338da: VF := 0
000338dd: CF := 1
000338e1: ZF := 31:0[R0] = 0
000338e5: NF := 31:31[R0]
000338ea: when ZF <> 1 goto %00033701
00046261: goto %00033691

00033691:
0003369b: R0 := pad:64[mem[R31 + 0x84, el]:u32]
000336a1: R1 := pad:64[31:0[R0] + 1]
000336a7: R0 := R31 + 0x40
000336ad: R1 := extend:64[31:0[R1]]
000336b5: R2 := mem[R0 + (60:0[R1].0), el]:u64
000336bc: R0 := pad:64[mem[R31 + 0x84, el]:u32]
000336c2: R1 := pad:64[31:0[R0] + 2]
000336c8: R0 := R31 + 0x40
000336ce: R1 := extend:64[31:0[R1]]
000336d6: R0 := mem[R0 + (60:0[R1].0), el]:u64
000336dc: R3 := R0
000336e1: R0 := 0x41A000
000336e7: R1 := R0
000336ec: R0 := 3
000336f1: R30 := 0x408CE4
000336f3: call @syslog with return %000336f5

000336f5:
000336f8: R0 := 1
000336fd: R30 := 0x408CEC
000336ff: call @myexit with return %00033701

00033701:
00033706: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0003370c: R1 := pad:64[31:0[R0] + 1]
00033712: R0 := R31 + 0x40
00033718: R1 := extend:64[31:0[R1]]
00033720: R0 := mem[R0 + (60:0[R1].0), el]:u64
00033725: R30 := 0x408D04
00033727: call @strlen with return %00033729

00033729:
0003372d: R19 := R0
00033734: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0003373a: R1 := pad:64[31:0[R0] + 2]
00033740: R0 := R31 + 0x40
00033746: R1 := extend:64[31:0[R1]]
0003374e: R0 := mem[R0 + (60:0[R1].0), el]:u64
00033753: R30 := 0x408D20
00033755: call @strlen with return %00033757

00033757:
0003375c: R0 := R19 + R0
00033762: R0 := R0 + 3
0003376a: mem := mem with [R31 + 0x70, el]:u64 <- R0
00033771: R0 := mem[R31 + 0x70, el]:u64
00033776: R30 := 0x408D34
00033778: call @zmalloc with return %0003377a

0003377a:
00033780: mem := mem with [R31 + 0x68, el]:u64 <- R0
00033787: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0003378d: R1 := pad:64[31:0[R0] + 1]
00033793: R0 := R31 + 0x40
00033799: R1 := extend:64[31:0[R1]]
000337a1: R0 := mem[R0 + (60:0[R1].0), el]:u64
000337a8: R2 := mem[R31 + 0x70, el]:u64
000337ae: R1 := R0
000337b5: R0 := mem[R31 + 0x68, el]:u64
000337ba: R30 := 0x408D5C
000337bc: call @strlcpy with return %000337be

000337be:
000337c3: R2 := mem[R31 + 0x70, el]:u64
000337c8: R0 := 0x41A000
000337ce: R1 := R0 + 0x20
000337d5: R0 := mem[R31 + 0x68, el]:u64
000337da: R30 := 0x408D70
000337dc: call @strlcat with return %000337de

000337de:
000337e3: R0 := pad:64[mem[R31 + 0x84, el]:u32]
000337e9: R1 := pad:64[31:0[R0] + 2]
000337ef: R0 := R31 + 0x40
000337f5: R1 := extend:64[31:0[R1]]
000337fd: R0 := mem[R0 + (60:0[R1].0), el]:u64
00033804: R2 := mem[R31 + 0x70, el]:u64
0003380a: R1 := R0
00033811: R0 := mem[R31 + 0x68, el]:u64
00033816: R30 := 0x408D94
00033818: call @strlcat with return %0003381a

0003381a:
0003381f: R0 := mem[R31 + 0x60, el]:u64
00033826: R2 := mem[R31 + 0x68, el]:u64
0003382c: R1 := R0
00033833: R0 := mem[R31 + 0x38, el]:u64
00033838: R30 := 0x408DA8
0003383a: call @so_listen with return %0003383c

0003383c:
00033842: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
00033849: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
0003384e: VF := 0
00033851: CF := 1
00033855: ZF := 31:0[R0] = 0
00033859: NF := 31:31[R0]
00033861: when ~(NF = VF & ~ZF) goto %0003385f
00046262: goto %0003388d

0003385f:
00033867: R0 := 0x41A000
0003386d: R1 := R0 + 0x40
00033872: R0 := 3
00033877: R30 := 0x408DE0
00033879: call @syslog with return %0003387b

0003387b:
00033880: R0 := mem[R31 + 0x68, el]:u64
00033885: R30 := 0x408DE8
00033887: call @free with return %00033889

00033889:
0003388b: goto %000284a5

0003388d:
00033892: R2 := mem[R31 + 0x68, el]:u64
00033897: R0 := 0x41A000
0003389d: R1 := R0 + 0x28
000338a2: R0 := 6
000338a7: R30 := 0x408DCC
000338a9: call @syslog with return %000338ab

000338ab:
000338ad: goto %000284a5

000284a5:
000284aa: R0 := mem[R31 + 0x30, el]:u64
000284af: R30 := 0x408E08
000284b1: call @free with return %000284b3

000284b3:
000284b8: R0 := mem[R31 + 0x60, el]:u64
000284bd: R30 := 0x408E10
000284bf: call @freeaddrinfo with return %000284c1

000284c1:
000284c8: R19 := mem[R31 + 0x10, el]:u64
000284cf: R29 := mem[R31, el]:u64
000284d4: R30 := mem[R31 + 8, el]:u64
000284d8: R31 := R31 + 0x90
000284dd: call R30 with noreturn

00033a62:
00033a6c: R0 := extend:64[mem[R31 + 0x8C, el]:u32]
00033a73: R1 := mem[R31 + 0x30, el]:u64
00033a7a: R0 := R1 + R0
00033a81: R0 := pad:64[mem[R0]]
00033a87: #372 := 31:0[R0] - 0x3A
00033a8c: VF := extend:64[#372] <> extend:64[31:0[R0]] - 0x3A
00033a91: CF := pad:64[#372] <> pad:64[31:0[R0]] + 0xFFFFFFC6
00033a95: ZF := #372 = 0
00033a99: NF := 31:31[#372]
00033a9f: when ZF <> 1 goto %00033a9d
00046263: goto %00033ab7

00033ab7:
00033abc: R0 := extend:64[mem[R31 + 0x8C, el]:u32]
00033ac3: R1 := mem[R31 + 0x30, el]:u64
00033aca: R0 := R1 + R0
00033ad1: mem := mem with [R0] <- 0
00033ad8: R0 := extend:64[mem[R31 + 0x8C, el]:u32]
00033ade: R1 := R0 + 1
00033ae5: R0 := pad:64[mem[R31 + 0x88, el]:u32]
00033aeb: R2 := pad:64[31:0[R0] + 1]
00033af3: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R2]
00033afa: R2 := mem[R31 + 0x30, el]:u64
00033b01: R2 := R2 + R1
00033b07: R1 := R31 + 0x40
00033b0d: R0 := extend:64[31:0[R0]]
00033b16: mem := mem with [R1 + (60:0[R0].0), el]:u64 <- R2
00046264: goto %00033a9d

00033a9d:
00033aa7: R0 := pad:64[mem[R31 + 0x8C, el]:u32]
00033aad: R0 := pad:64[31:0[R0] + 1]
00033ab5: mem := mem with [R31 + 0x8C, el]:u32 <- 31:0[R0]
00046265: goto %0002839e

00046266: sub tunnel_thread(tunnel_thread_result)
00046410: tunnel_thread_result :: out u32 = low:32[R0]

0003004b:
0003004f: #315 := R31 - 0x40
00030055: mem := mem with [#315, el]:u64 <- R29
0003005b: mem := mem with [#315 + 8, el]:u64 <- R30
0003005f: R31 := #315
00030065: R29 := R31
0003006d: mem := mem with [R31 + 0x18, el]:u64 <- R0
00030074: R0 := mem[R31 + 0x18, el]:u64
00030079: VF := 0
0003007c: CF := 1
00030080: ZF := R0 = 0
00030084: NF := 63:63[R0]
0003008a: when ZF <> 1 goto %00030088
00046267: goto %00031932

00031932:
00031935: R0 := 0x41B000
0003193b: R3 := R0 + 0x920
00031940: R2 := 0x168
00031945: R0 := 0x41A000
0003194b: R1 := R0 + 0x170
00031950: R0 := 0x41A000
00031956: R0 := R0 + 0x1A8
0003195b: R30 := 0x4091F0
0003195d: call @__assert_fail with return %00030088

00030088:
00030092: R0 := mem[R31 + 0x18, el]:u64
00030099: R0 := mem[R0 + 8, el]:u64
000300a1: mem := mem with [R31 + 0x38, el]:u64 <- R0
000300a8: R0 := mem[R31 + 0x38, el]:u64
000300ad: R30 := 0x409204
000300af: call @strdup with return %000300b1

000300b1:
000300b7: mem := mem with [R31 + 0x30, el]:u64 <- R0
000300bc: R1 := 0x3A
000300c3: R0 := mem[R31 + 0x30, el]:u64
000300c8: R30 := 0x409214
000300ca: call @strchr with return %000300cc

000300cc:
000300d2: mem := mem with [R31 + 0x28, el]:u64 <- R0
000300d9: R0 := mem[R31 + 0x28, el]:u64
000300de: VF := 0
000300e1: CF := 1
000300e5: ZF := R0 = 0
000300e9: NF := 63:63[R0]
000300ef: when ZF goto %000300ed
00046268: goto %00031924

00031924:
00031929: R0 := mem[R31 + 0x28, el]:u64
00031930: mem := mem with [R0] <- 0
00046269: goto %000300ed

000300ed:
000300f7: R0 := mem[R31 + 0x30, el]:u64
000300fc: R30 := 0x409234
000300fe: call @noproxy_match with return %00030100

00030100:
00030103: VF := 0
00030106: CF := 1
0003010a: ZF := 31:0[R0] = 0
0003010e: NF := 31:31[R0]
00030114: when ZF goto %00030112
0004626a: goto %00031912

00030112:
0003011c: R0 := mem[R31 + 0x18, el]:u64
00030121: R30 := 0x409250
00030123: call @forward_tunnel with return %00030125

00030125:
00030129: #316 := 31:0[R0] + 2
0003012e: VF := extend:64[#316] <> extend:64[31:0[R0]] + 2
00030133: CF := pad:64[#316] <> pad:64[31:0[R0]] + 2
00030137: ZF := #316 = 0
0003013b: NF := 31:31[#316]
00030141: when ZF <> 1 goto %0003013f
0004626b: goto %0003163e

0003163e:
00031643: R0 := mem[R31 + 0x18, el]:u64
00031648: R30 := 0x409260
0003164b: call @direct_tunnel with return %0003013f

00031912:
00031917: R0 := mem[R31 + 0x18, el]:u64
0003191c: R30 := 0x409244
0003191e: call @direct_tunnel with return %00031920

00031920:
00031922: goto %0003013f

0003013f:
00030149: R0 := mem[R31 + 0x30, el]:u64
0003014e: R30 := 0x409268
00030150: call @free with return %00030152

00030152:
00030157: R0 := mem[R31 + 0x18, el]:u64
0003015c: R30 := 0x409270
0003015e: call @free with return %00030160

00030160:
00030163: R0 := 0x430000
00030169: R0 := R0 + 0x3A8
00030170: R0 := pad:64[mem[R0, el]:u32]
00030175: VF := 0
00030178: CF := 1
0003017c: ZF := 31:0[R0] = 0
00030180: NF := 31:31[R0]
00030186: when ZF <> 1 goto %00030184
0004626c: goto %000315cd

000315cd:
000315d0: R0 := 0x430000
000315d6: R0 := R0 + 0x3C0
000315db: R30 := 0x409290
000315dd: call @pthread_mutex_lock with return %000315df

000315df:
000315e2: R30 := 0x409294
000315e4: call @pthread_self with return %000315e6

000315e6:
000315ec: mem := mem with [R31 + 0x20, el]:u64 <- R0
000315f1: R0 := 0x430000
000315f7: R0 := R0 + 0x3B8
000315fe: R0 := mem[R0, el]:u64
00031603: R2 := 0
0003160a: R1 := mem[R31 + 0x20, el]:u64
0003160f: R30 := 0x4092B0
00031611: call @plist_add with return %00031613

00031613:
00031617: R1 := R0
0003161c: R0 := 0x430000
00031622: R0 := R0 + 0x3B8
0003162a: mem := mem with [R0, el]:u64 <- R1
0003162f: R0 := 0x430000
00031635: R0 := R0 + 0x3C0
0003163a: R30 := 0x4092CC
0003163c: call @pthread_mutex_unlock with return %00030184

00030184:
0003018c: R0 := 0
00030193: R29 := mem[R31, el]:u64
00030198: R30 := mem[R31 + 8, el]:u64
0003019c: R31 := R31 + 0x40
000301a1: call R30 with noreturn

0004626d: sub umask(umask_result)
00046411: umask_result :: out u32 = low:32[R0]

0003bf8a:
0003ffb0: R16 := 0x430000
0003ffb7: R17 := mem[R16 + 0x2C0, el]:u64
0003ffbd: R16 := R16 + 0x2C0
0003ffc2: call R17 with noreturn

0004626e: sub unicode(unicode_result)
00046412: unicode_result :: out u32 = low:32[R0]

000165d4:
000165d8: #9 := R31 - 0x30
000165de: mem := mem with [#9, el]:u64 <- R29
000165e4: mem := mem with [#9 + 8, el]:u64 <- R30
000165e8: R31 := #9
000165ee: R29 := R31
000165f6: mem := mem with [R31 + 0x18, el]:u64 <- R0
000165fe: mem := mem with [R31 + 0x10, el]:u64 <- R1
00016605: R0 := mem[R31 + 0x10, el]:u64
0001660a: VF := 0
0001660d: CF := 1
00016611: ZF := R0 = 0
00016615: NF := 63:63[R0]
0001661b: when ZF <> 1 goto %00016619
0004626f: goto %00021a57

00016619:
00016623: R0 := mem[R31 + 0x10, el]:u64
00016628: R30 := 0x412460
0001662a: call @strlen with return %0001662c

0001662c:
00016630: #10 := R0 - 0x40
00016635: VF := extend:128[#10] <> extend:128[R0] - 0x40
0001663a: CF := pad:128[#10] <> pad:128[R0] + 0xFFFFFFFFFFFFFFC0
0001663e: ZF := #10 = 0
00016642: NF := 63:63[#10]
00016649: when CF & ~ZF goto %00016647
00046270: goto %00021a45

00016647:
0001664f: R0 := 0x40
00046271: goto %00016651

00021a45:
00021a4a: R0 := mem[R31 + 0x10, el]:u64
00021a4f: R30 := 0x412470
00021a51: call @strlen with return %00021a53

00021a53:
00021a55: goto %00016651

00016651:
00016657: mem := mem with [R31 + 0x28, el]:u32 <- 31:0[R0]
0001665e: R0 := pad:64[mem[R31 + 0x28, el]:u32]
00016664: R0 := pad:64[30:0[R0].0]
0001666a: R0 := extend:64[31:0[R0]]
0001666f: R30 := 0x41248C
00016671: call @zmalloc with return %00016673

00016673:
00016679: mem := mem with [R31 + 0x20, el]:u64 <- R0
00016680: mem := mem with [R31 + 0x2C, el]:u32 <- 0
00016685: goto %00016683

00016683:
0001668b: R1 := pad:64[mem[R31 + 0x2C, el]:u32]
00016692: R0 := pad:64[mem[R31 + 0x28, el]:u32]
00016698: #11 := ~31:0[R0]
0001669d: #12 := 31:0[R1] + ~31:0[R0]
000166a3: VF := extend:64[#12 + 1] <> extend:64[31:0[R1]] + extend:64[#11] +
          1
000166a9: CF := pad:64[#12 + 1] <> pad:64[31:0[R1]] + pad:64[#11] + 1
000166ad: ZF := #12 + 1 = 0
000166b1: NF := 31:31[#12 + 1]
000166b8: when NF <> VF goto %000166b6
00046272: goto %00016715

00016715:
0001671a: R0 := mem[R31 + 0x18, el]:u64
00016721: R1 := mem[R31 + 0x20, el]:u64
00016729: mem := mem with [R0, el]:u64 <- R1
00016730: R0 := pad:64[mem[R31 + 0x28, el]:u32]
00016736: R0 := pad:64[30:0[R0].0]
00046273: goto %00016738

000166b6:
000166c0: R0 := extend:64[mem[R31 + 0x2C, el]:u32]
000166c7: R1 := mem[R31 + 0x10, el]:u64
000166ce: R1 := R1 + R0
000166d5: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
000166db: R0 := pad:64[30:0[R0].0]
000166e1: R0 := extend:64[31:0[R0]]
000166e8: R2 := mem[R31 + 0x20, el]:u64
000166ef: R0 := R2 + R0
000166f6: R1 := pad:64[mem[R1]]
000166fe: mem := mem with [R0] <- 7:0[R1]
00016705: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
0001670b: R0 := pad:64[31:0[R0] + 1]
00016713: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R0]
00046274: goto %00016683

00021a57:
00021a5c: R0 := mem[R31 + 0x18, el]:u64
00021a63: mem := mem with [R0, el]:u64 <- 0
00021a68: R0 := 0
00021a6c: goto %00016738

00016738:
0001673d: R29 := mem[R31, el]:u64
00016742: R30 := mem[R31 + 8, el]:u64
00016746: R31 := R31 + 0x30
0001674b: call R30 with noreturn

00046275: sub unlink(unlink_name, unlink_result)
00046413: unlink_name :: in u64 = R0
00046414: unlink_result :: out u32 = low:32[R0]

0003bf40:
00040076: R16 := 0x430000
0004007d: R17 := mem[R16 + 0x308, el]:u64
00040083: R16 := R16 + 0x308
00040088: call R17 with noreturn

00046276: sub uppercase(uppercase_result)
00046415: uppercase_result :: out u32 = low:32[R0]

000164c8:
000164cc: #6 := R31 - 0x30
000164d2: mem := mem with [#6, el]:u64 <- R29
000164d8: mem := mem with [#6 + 8, el]:u64 <- R30
000164dc: R31 := #6
000164e2: R29 := R31
000164ea: mem := mem with [R31 + 0x18, el]:u64 <- R0
000164f1: R0 := mem[R31 + 0x18, el]:u64
000164f6: VF := 0
000164f9: CF := 1
000164fd: ZF := R0 = 0
00016501: NF := 63:63[R0]
00016507: when ZF <> 1 goto %00016505
00046277: goto %00021a6e

00021a6e:
00021a71: R0 := 0x41D000
00021a77: R3 := R0 + 0x60
00021a7c: R2 := 0x326
00021a81: R0 := 0x41C000
00021a87: R1 := R0 + 0xAF0
00021a8c: R0 := 0x41C000
00021a92: R0 := R0 + 0xCB8
00021a97: R30 := 0x4123C8
00021a99: call @__assert_fail with return %00016505

00016505:
0001650f: mem := mem with [R31 + 0x28, el]:u64 <- 0
00016514: goto %00016512

00016512:
0001651a: R0 := mem[R31 + 0x18, el]:u64
0001651f: R30 := 0x412410
00016521: call @strlen with return %00016523

00016523:
00016527: R1 := R0
0001652e: R0 := mem[R31 + 0x28, el]:u64
00016534: #7 := ~R1
00016539: #8 := R0 + ~R1
0001653f: VF := extend:128[#8 + 1] <> extend:128[R0] + extend:128[#7] + 1
00016545: CF := pad:128[#8 + 1] <> pad:128[R0] + pad:128[#7] + 1
00016549: ZF := #8 + 1 = 0
0001654d: NF := 63:63[#8 + 1]
00016553: when CF <> 1 goto %00016551
00046278: goto %000165b8

000165b8:
000165bd: R0 := mem[R31 + 0x18, el]:u64
000165c4: R29 := mem[R31, el]:u64
000165c9: R30 := mem[R31 + 8, el]:u64
000165cd: R31 := R31 + 0x30
000165d2: call R30 with noreturn

00016551:
0001655b: R1 := mem[R31 + 0x18, el]:u64
00016562: R0 := mem[R31 + 0x28, el]:u64
00016569: R0 := R1 + R0
00016570: R0 := pad:64[mem[R0]]
00016575: R30 := 0x4123E4
00016578: call @toupper with return %0001657a

0001657a:
0001657e: R2 := pad:64[31:0[R0]]
00016585: R1 := mem[R31 + 0x18, el]:u64
0001658c: R0 := mem[R31 + 0x28, el]:u64
00016593: R0 := R1 + R0
00016599: R1 := pad:64[7:0[R2]]
000165a1: mem := mem with [R0] <- 7:0[R1]
000165a8: R0 := mem[R31 + 0x28, el]:u64
000165ae: R0 := R0 + 1
000165b6: mem := mem with [R31 + 0x28, el]:u64 <- R0
00046279: goto %00016512

0004627a: sub urlencode(urlencode_result)
00046416: urlencode_result :: out u32 = low:32[R0]

0001674d:
00016751: #13 := R31 - 0x50
00016757: mem := mem with [#13, el]:u64 <- R29
0001675d: mem := mem with [#13 + 8, el]:u64 <- R30
00016761: R31 := #13
00016767: R29 := R31
0001676f: mem := mem with [R31 + 0x18, el]:u64 <- R0
00016776: R0 := mem[R31 + 0x18, el]:u64
0001677b: VF := 0
0001677e: CF := 1
00016782: ZF := R0 = 0
00016786: NF := 63:63[R0]
0001678c: when ZF <> 1 goto %0001678a
0004627b: goto %00021a18

00021a18:
00021a1b: R0 := 0x41D000
00021a21: R3 := R0 + 0x70
00021a26: R2 := 0x346
00021a2b: R0 := 0x41C000
00021a31: R1 := R0 + 0xAF0
00021a36: R0 := 0x41C000
00021a3c: R0 := R0 + 0xCB8
00021a41: R30 := 0x412530
00021a43: call @__assert_fail with return %0001678a

0001678a:
00016794: R0 := mem[R31 + 0x18, el]:u64
00016799: R30 := 0x412538
0001679b: call @strlen with return %0001679d

0001679d:
000167a3: mem := mem with [R31 + 0x38, el]:u64 <- R0
000167aa: R1 := mem[R31 + 0x38, el]:u64
000167b0: R0 := R1
000167b6: R0 := 62:0[R0].0
000167bd: R0 := R0 + R1
000167c3: R0 := R0 + 1
000167cb: mem := mem with [R31 + 0x30, el]:u64 <- R0
000167d2: R0 := mem[R31 + 0x30, el]:u64
000167d7: R30 := 0x41255C
000167d9: call @zmalloc with return %000167db

000167db:
000167e1: mem := mem with [R31 + 0x28, el]:u64 <- R0
000167e8: mem := mem with [R31 + 0x40, el]:u64 <- 0
000167ef: mem := mem with [R31 + 0x48, el]:u64 <- 0
000167f4: goto %000167f2

000167f2:
000167fa: R1 := mem[R31 + 0x48, el]:u64
00016801: R0 := mem[R31 + 0x38, el]:u64
00016807: #14 := ~R0
0001680c: #15 := R1 + ~R0
00016812: VF := extend:128[#15 + 1] <> extend:128[R1] + extend:128[#14] + 1
00016818: CF := pad:128[#15 + 1] <> pad:128[R1] + pad:128[#14] + 1
0001681c: ZF := #15 + 1 = 0
00016820: NF := 63:63[#15 + 1]
00016826: when CF <> 1 goto %00016824
0004627c: goto %00016ae6

00016ae6:
00016aeb: R0 := mem[R31 + 0x28, el]:u64
00016af2: R29 := mem[R31, el]:u64
00016af7: R30 := mem[R31 + 8, el]:u64
00016afb: R31 := R31 + 0x50
00016b00: call R30 with noreturn

00016824:
0001682c: R30 := 0x412570
0001682f: call @__ctype_b_loc with return %00016831

00016831:
00016836: R1 := mem[R0, el]:u64
0001683d: R2 := mem[R31 + 0x18, el]:u64
00016844: R0 := mem[R31 + 0x48, el]:u64
0001684b: R0 := R2 + R0
00016852: R0 := pad:64[mem[R0]]
00016858: R0 := pad:64[7:0[R0]]
0001685e: R0 := 62:0[R0].0
00016865: R0 := R1 + R0
0001686c: R0 := pad:64[mem[R0, el]:u16]
00016872: R0 := pad:64[11:11[R0].0]
00016877: VF := 0
0001687a: CF := 1
0001687e: ZF := 31:0[R0] = 0
00016882: NF := 31:31[R0]
00016888: when ZF <> 1 goto %00016886
0004627d: goto %00016972

00016972:
00016977: R1 := mem[R31 + 0x18, el]:u64
0001697e: R0 := mem[R31 + 0x48, el]:u64
00016985: R0 := R1 + R0
0001698c: R0 := pad:64[mem[R0]]
00016991: R30 := 0x4125B4
00016993: call @tolower with return %00016995

00016995:
00016999: #16 := 31:0[R0] - 0x60
0001699e: VF := extend:64[#16] <> extend:64[31:0[R0]] - 0x60
000169a3: CF := pad:64[#16] <> pad:64[31:0[R0]] + 0xFFFFFFA0
000169a7: ZF := #16 = 0
000169ab: NF := 31:31[#16]
000169b3: when ~(NF = VF & ~ZF) goto %000169b1
0004627e: goto %00016aa2

00016aa2:
00016aa7: R1 := mem[R31 + 0x18, el]:u64
00016aae: R0 := mem[R31 + 0x48, el]:u64
00016ab5: R0 := R1 + R0
00016abc: R0 := pad:64[mem[R0]]
00016ac1: R30 := 0x4125D0
00016ac3: call @tolower with return %00016ac5

00016ac5:
00016ac9: #21 := 31:0[R0] - 0x7A
00016ace: VF := extend:64[#21] <> extend:64[31:0[R0]] - 0x7A
00016ad3: CF := pad:64[#21] <> pad:64[31:0[R0]] + 0xFFFFFF86
00016ad7: ZF := #21 = 0
00016adb: NF := 31:31[#21]
00016ae2: when ~(NF = VF & ~ZF) goto %00016886
0004627f: goto %000169b1

000169b1:
000169bb: R1 := mem[R31 + 0x18, el]:u64
000169c2: R0 := mem[R31 + 0x48, el]:u64
000169c9: R0 := R1 + R0
000169d0: R0 := pad:64[mem[R0]]
000169d6: #17 := 31:0[R0] - 0x2E
000169db: VF := extend:64[#17] <> extend:64[31:0[R0]] - 0x2E
000169e0: CF := pad:64[#17] <> pad:64[31:0[R0]] + 0xFFFFFFD2
000169e4: ZF := #17 = 0
000169e8: NF := 31:31[#17]
000169ed: when ZF goto %00016886
00046280: goto %000169f1

000169f1:
000169f6: R1 := mem[R31 + 0x18, el]:u64
000169fd: R0 := mem[R31 + 0x48, el]:u64
00016a04: R0 := R1 + R0
00016a0b: R0 := pad:64[mem[R0]]
00016a11: #18 := 31:0[R0] - 0x2D
00016a16: VF := extend:64[#18] <> extend:64[31:0[R0]] - 0x2D
00016a1b: CF := pad:64[#18] <> pad:64[31:0[R0]] + 0xFFFFFFD3
00016a1f: ZF := #18 = 0
00016a23: NF := 31:31[#18]
00016a28: when ZF goto %00016886
00046281: goto %00016a2c

00016a2c:
00016a31: R1 := mem[R31 + 0x18, el]:u64
00016a38: R0 := mem[R31 + 0x48, el]:u64
00016a3f: R0 := R1 + R0
00016a46: R0 := pad:64[mem[R0]]
00016a4c: #19 := 31:0[R0] - 0x5F
00016a51: VF := extend:64[#19] <> extend:64[31:0[R0]] - 0x5F
00016a56: CF := pad:64[#19] <> pad:64[31:0[R0]] + 0xFFFFFFA1
00016a5a: ZF := #19 = 0
00016a5e: NF := 31:31[#19]
00016a63: when ZF goto %00016886
00046282: goto %00016a67

00016a67:
00016a6c: R1 := mem[R31 + 0x18, el]:u64
00016a73: R0 := mem[R31 + 0x48, el]:u64
00016a7a: R0 := R1 + R0
00016a81: R0 := pad:64[mem[R0]]
00016a87: #20 := 31:0[R0] - 0x7E
00016a8c: VF := extend:64[#20] <> extend:64[31:0[R0]] - 0x7E
00016a91: CF := pad:64[#20] <> pad:64[31:0[R0]] + 0xFFFFFF82
00016a95: ZF := #20 = 0
00016a99: NF := 31:31[#20]
00016a9e: when ZF <> 1 goto %000168f2
00046283: goto %00016886

000168f2:
000168f7: R1 := mem[R31 + 0x28, el]:u64
000168fe: R0 := mem[R31 + 0x40, el]:u64
00016905: R4 := R1 + R0
0001690c: R1 := mem[R31 + 0x30, el]:u64
00016913: R0 := mem[R31 + 0x40, el]:u64
0001691a: R5 := R1 + ~R0 + 1
00016921: R1 := mem[R31 + 0x18, el]:u64
00016928: R0 := mem[R31 + 0x48, el]:u64
0001692f: R0 := R1 + R0
00016936: R0 := pad:64[mem[R0]]
0001693c: R3 := pad:64[31:0[R0]]
00016941: R0 := 0x41C000
00016947: R2 := R0 + 0xCC8
0001694d: R1 := R5
00016953: R0 := R4
00016958: R30 := 0x4126A8
0001695b: call @snprintf with return %0001695d

0001695d:
00016962: R0 := mem[R31 + 0x40, el]:u64
00016968: R0 := R0 + 3
00016970: mem := mem with [R31 + 0x40, el]:u64 <- R0
00046284: goto %000168da

00016886:
00016890: R1 := mem[R31 + 0x18, el]:u64
00016897: R0 := mem[R31 + 0x48, el]:u64
0001689e: R1 := R1 + R0
000168a5: R2 := mem[R31 + 0x28, el]:u64
000168ac: R0 := mem[R31 + 0x40, el]:u64
000168b3: R0 := R2 + R0
000168ba: R1 := pad:64[mem[R1]]
000168c2: mem := mem with [R0] <- 7:0[R1]
000168c9: R0 := mem[R31 + 0x40, el]:u64
000168cf: R0 := R0 + 1
000168d7: mem := mem with [R31 + 0x40, el]:u64 <- R0
000168dc: goto %000168da

000168da:
000168e2: R0 := mem[R31 + 0x48, el]:u64
000168e8: R0 := R0 + 1
000168f0: mem := mem with [R31 + 0x48, el]:u64 <- R0
00046285: goto %000167f2

00046286: sub write(write_arg1, write_arg2, write_arg3, write_result)
00046417: write_arg1 :: in u32 = low:32[R0]
00046418: write_arg2 :: in out u64 = R1
00046419: write_arg3 :: in u64 = R2
0004641a: write_result :: out u64 = R0

00020f63:
0003fc82: R16 := 0x430000
0003fc89: R17 := mem[R16 + 0x198, el]:u64
0003fc8f: R16 := R16 + 0x198
0003fc94: call R17 with noreturn

00046287: sub write_wrapper(write_wrapper_result)
0004641b: write_wrapper_result :: out u32 = low:32[R0]

00017154:
00017158: #35 := R31 - 0x60
0001715e: mem := mem with [#35, el]:u64 <- R29
00017164: mem := mem with [#35 + 8, el]:u64 <- R30
00017168: R31 := #35
0001716e: R29 := R31
00017176: mem := mem with [R31 + 0x10, el]:u64 <- R19
0001717e: mem := mem with [R31 + 0x3C, el]:u32 <- 31:0[R0]
00017186: mem := mem with [R31 + 0x30, el]:u64 <- R1
0001718e: mem := mem with [R31 + 0x28, el]:u64 <- R2
00017195: mem := mem with [R31 + 0x58, el]:u64 <- 0
0001719a: R0 := 0x32
000171a2: mem := mem with [R31 + 0x40, el]:u64 <- R0
000171a9: mem := mem with [R31 + 0x50, el]:u64 <- 0
000171b0: R0 := mem[R31 + 0x30, el]:u64
000171b5: VF := 0
000171b8: CF := 1
000171bc: ZF := R0 = 0
000171c0: NF := 63:63[R0]
000171c6: when ZF goto %000171c4
00046288: goto %00020fc0

00020fc0:
00020fc5: R0 := mem[R31 + 0x28, el]:u64
00020fca: VF := 0
00020fcd: CF := 1
00020fd1: ZF := R0 = 0
00020fd5: NF := 63:63[R0]
00020fda: when ZF <> 1 goto %00020dae
00046289: goto %000171c4

00020dae:
00020db3: mem := mem with [R31 + 0x48, el]:u64 <- 0
00020db8: goto %00020db6

00020db6:
00020dbe: R1 := mem[R31 + 0x48, el]:u64
00020dc5: R0 := mem[R31 + 0x40, el]:u64
00020dcb: #84 := ~R0
00020dd0: #85 := R1 + ~R0
00020dd6: VF := extend:128[#85 + 1] <> extend:128[R1] + extend:128[#84] + 1
00020ddc: CF := pad:128[#85 + 1] <> pad:128[R1] + pad:128[#84] + 1
00020de0: ZF := #85 + 1 = 0
00020de4: NF := 63:63[#85 + 1]
00020dea: when CF goto %00020de8
0004628a: goto %00020ecf

00020ecf:
00020ed4: R1 := mem[R31 + 0x50, el]:u64
00020edb: R0 := mem[R31 + 0x28, el]:u64
00020ee1: #88 := ~R0
00020ee6: #89 := R1 + ~R0
00020eec: VF := extend:128[#89 + 1] <> extend:128[R1] + extend:128[#88] + 1
00020ef2: CF := pad:128[#89 + 1] <> pad:128[R1] + pad:128[#88] + 1
00020ef6: ZF := #89 + 1 = 0
00020efa: NF := 63:63[#89 + 1]
00020eff: when CF goto %00020de8
0004628b: goto %00020f03

00020f03:
00020f08: R0 := mem[R31 + 0x58, el]:u64
00020f0d: VF := 0
00020f10: CF := 1
00020f14: ZF := R0 = 0
00020f18: NF := 63:63[R0]
00020f1f: when NF = VF goto %00020f1d
0004628c: goto %00020de8

00020de8:
00020df2: R0 := mem[R31 + 0x58, el]:u64
00020df7: VF := 0
00020dfa: CF := 1
00020dfe: ZF := R0 = 0
00020e02: NF := 63:63[R0]
00020e09: when NF = VF goto %00020e07
0004628d: goto %00020e83

00020e07:
00020e11: R0 := mem[R31 + 0x50, el]:u64
00020e19: mem := mem with [R31 + 0x58, el]:u64 <- R0
00020e20: R1 := mem[R31 + 0x50, el]:u64
00020e27: R0 := mem[R31 + 0x28, el]:u64
00020e2d: #86 := ~R0
00020e32: #87 := R1 + ~R0
00020e38: VF := extend:128[#87 + 1] <> extend:128[R1] + extend:128[#86] + 1
00020e3e: CF := pad:128[#87 + 1] <> pad:128[R1] + pad:128[#86] + 1
00020e42: ZF := #87 + 1 = 0
00020e46: NF := 63:63[#87 + 1]
00020e4c: when CF goto %00020e4a
0004628e: goto %00020e56

00020e56:
00020e5b: R4 := mem[R31 + 0x40, el]:u64
00020e62: R3 := mem[R31 + 0x28, el]:u64
00020e69: R2 := mem[R31 + 0x50, el]:u64
00020e6e: R0 := 0x41C000
00020e74: R1 := R0 + 0xFA8
00020e79: R0 := 3
00020e7e: R30 := 0x4130CC
00020e81: call @syslog with return %00020e4a

00020e83:
00020e86: R30 := 0x41306C
00020e89: call @__errno_location with return %00020e8b

00020e8b:
00020e90: R19 := pad:64[mem[R0, el]:u32]
00020e95: R30 := 0x413074
00020e97: call @__errno_location with return %00020e99

00020e99:
00020e9e: R0 := pad:64[mem[R0, el]:u32]
00020ea3: R30 := 0x41307C
00020ea6: call @strerror with return %00020ea8

00020ea8:
00020eac: R3 := R0
00020eb2: R2 := pad:64[31:0[R19]]
00020eb7: R0 := 0x41C000
00020ebd: R1 := R0 + 0xF80
00020ec2: R0 := 3
00020ec7: R30 := 0x413094
00020ec9: call @syslog with return %00020ecb

00020ecb:
00020ecd: goto %00020e4a

00020e4a:
00020e54: R0 := mem[R31 + 0x58, el]:u64
0004628f: goto %000171cf

00020f1d:
00020f27: R1 := mem[R31 + 0x30, el]:u64
00020f2e: R0 := mem[R31 + 0x50, el]:u64
00020f35: R3 := R1 + R0
00020f3c: R1 := mem[R31 + 0x28, el]:u64
00020f43: R0 := mem[R31 + 0x50, el]:u64
00020f4a: R0 := R1 + ~R0 + 1
00020f50: R2 := R0
00020f56: R1 := R3
00020f5d: R0 := pad:64[mem[R31 + 0x3C, el]:u32]
00020f62: R30 := 0x413004
00020f65: call @write with return %00020f67

00020f67:
00020f6d: mem := mem with [R31 + 0x58, el]:u64 <- R0
00020f74: R0 := mem[R31 + 0x58, el]:u64
00020f79: VF := 0
00020f7c: CF := 1
00020f80: ZF := R0 = 0
00020f84: NF := 63:63[R0]
00020f8b: when NF <> VF goto %00020f89
00046290: goto %00020fa3

00020fa3:
00020fa8: R0 := mem[R31 + 0x58, el]:u64
00020faf: R1 := mem[R31 + 0x50, el]:u64
00020fb6: R0 := R1 + R0
00020fbe: mem := mem with [R31 + 0x50, el]:u64 <- R0
00046291: goto %00020f89

00020f89:
00020f93: R0 := mem[R31 + 0x48, el]:u64
00020f99: R0 := R0 + 1
00020fa1: mem := mem with [R31 + 0x48, el]:u64 <- R0
00046292: goto %00020db6

000171c4:
000171cc: R0 := 0
000171d1: goto %000171cf

000171cf:
000171d7: R19 := mem[R31 + 0x10, el]:u64
000171de: R29 := mem[R31, el]:u64
000171e3: R30 := mem[R31 + 8, el]:u64
000171e7: R31 := R31 + 0x60
000171ec: call R30 with noreturn

00046293: sub www_authenticate(www_authenticate_result)
0004641c: www_authenticate_result :: out u32 = low:32[R0]

00025f8d:
00025f91: #175 := R31 - 0x80
00025f97: mem := mem with [#175, el]:u64 <- R29
00025f9d: mem := mem with [#175 + 8, el]:u64 <- R30
00025fa1: R31 := #175
00025fa7: R29 := R31
00025faf: mem := mem with [R31 + 0x10, el]:u64 <- R19
00025fb7: mem := mem with [R31 + 0x4C, el]:u32 <- 31:0[R0]
00025fbf: mem := mem with [R31 + 0x48, el]:u32 <- 31:0[R1]
00025fc7: mem := mem with [R31 + 0x40, el]:u64 <- R2
00025fcf: mem := mem with [R31 + 0x38, el]:u64 <- R3
00025fd7: mem := mem with [R31 + 0x30, el]:u64 <- R4
00025fdf: mem := mem with [R31 + 0x2C, el]:u32 <- 31:0[R5]
00025fe6: mem := mem with [R31 + 0x7C, el]:u32 <- 0
00025feb: R0 := 0x1000
00025ff0: R30 := 0x40398C
00025ff2: call @zmalloc with return %00025ff4

00025ff4:
00025ffa: mem := mem with [R31 + 0x70, el]:u64 <- R0
00025fff: R2 := 0x1000
00026004: R0 := 0x418000
0002600a: R1 := R0 + 0xC00
00026011: R0 := mem[R31 + 0x70, el]:u64
00026016: R30 := 0x4039A4
00026018: call @strlcpy with return %0002601a

0002601a:
0002601e: R0 := R31 + 0x58
00026025: R1 := mem[R31 + 0x30, el]:u64
0002602a: R30 := 0x4039B0
0002602d: call @ntlm_request with return %00037d87

00037d87:
00037d8d: mem := mem with [R31 + 0x6C, el]:u32 <- 31:0[R0]
00037d94: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
00037d99: VF := 0
00037d9c: CF := 1
00037da0: ZF := 31:0[R0] = 0
00037da4: NF := 31:31[R0]
00037daa: when ZF goto %00037da8
00046294: goto %00038593

00038593:
00038598: R0 := mem[R31 + 0x70, el]:u64
0003859e: R0 := R0 + 5
000385a5: R1 := mem[R31 + 0x58, el]:u64
000385ac: R2 := extend:64[mem[R31 + 0x6C, el]:u32]
000385b1: R3 := 0xFFB
000385b6: R30 := 0x4039D8
000385b8: call @to_base64 with return %000385ba

000385ba:
000385bf: R0 := mem[R31 + 0x58, el]:u64
000385c4: R30 := 0x4039E0
000385c6: call @free with return %00037da8

00037da8:
00037db2: R0 := mem[R31 + 0x40, el]:u64
00037db7: R30 := 0x4039E8
00037db9: call @dup_rr_data with return %00037dbb

00037dbb:
00037dc1: mem := mem with [R31 + 0x50, el]:u64 <- R0
00037dc8: R0 := mem[R31 + 0x50, el]:u64
00037dcf: R4 := mem[R0 + 8, el]:u64
00037dd6: R19 := mem[R31 + 0x50, el]:u64
00037ddb: R3 := 1
00037de0: R0 := 0x418000
00037de6: R2 := R0 + 0xC08
00037deb: R0 := 0x418000
00037df1: R1 := R0 + 0xC18
00037df7: R0 := R4
00037dfc: R30 := 0x403A14
00037dfe: call @hlist_mod with return %00037e00

00037e00:
00037e06: mem := mem with [R19 + 8, el]:u64 <- R0
00037e0d: R0 := mem[R31 + 0x50, el]:u64
00037e14: R4 := mem[R0 + 8, el]:u64
00037e1b: R19 := mem[R31 + 0x50, el]:u64
00037e20: R3 := 1
00037e27: R2 := mem[R31 + 0x70, el]:u64
00037e2c: R0 := 0x418000
00037e32: R1 := R0 + 0xC28
00037e38: R0 := R4
00037e3d: R30 := 0x403A3C
00037e3f: call @hlist_mod with return %00037e41

00037e41:
00037e47: mem := mem with [R19 + 8, el]:u64 <- R0
00037e4e: R0 := mem[R31 + 0x50, el]:u64
00037e55: R4 := mem[R0 + 8, el]:u64
00037e5c: R19 := mem[R31 + 0x50, el]:u64
00037e61: R3 := 1
00037e66: R0 := 0x418000
00037e6c: R2 := R0 + 0xC38
00037e71: R0 := 0x418000
00037e77: R1 := R0 + 0xC40
00037e7d: R0 := R4
00037e82: R30 := 0x403A68
00037e84: call @hlist_mod with return %00037e86

00037e86:
00037e8c: mem := mem with [R19 + 8, el]:u64 <- R0
00037e93: R0 := mem[R31 + 0x50, el]:u64
00037e9a: R2 := mem[R0 + 8, el]:u64
00037ea1: R19 := mem[R31 + 0x50, el]:u64
00037ea6: R0 := 0x418000
00037eac: R1 := R0 + 0xC50
00037eb2: R0 := R2
00037eb7: R30 := 0x403A88
00037eb9: call @hlist_del with return %00037ebb

00037ebb:
00037ec1: mem := mem with [R19 + 8, el]:u64 <- R0
00037ec8: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
00037ecd: VF := 0
00037ed0: CF := 1
00037ed4: ZF := 31:0[R0] = 0
00037ed8: NF := 31:31[R0]
00037ede: when ZF <> 1 goto %00037edc
00046295: goto %00038567

00038567:
0003856c: R1 := mem[R31 + 0x38, el]:u64
00038573: R0 := pad:64[mem[R31 + 0x4C, el]:u32]
00038578: R30 := 0x403AA4
0003857a: call @http_body_drop with return %0003857c

0003857c:
0003857f: VF := 0
00038582: CF := 1
00038586: ZF := 31:0[R0] = 0
0003858a: NF := 31:31[R0]
0003858f: when ZF goto %00038265
00046296: goto %00037edc

00038265:
00038269: goto %00037f3f

00037edc:
00037ee4: R0 := 0x430000
00037eea: R0 := R0 + 0x390
00037ef1: R0 := pad:64[mem[R0, el]:u32]
00037ef6: VF := 0
00037ef9: CF := 1
00037efd: ZF := 31:0[R0] = 0
00037f01: NF := 31:31[R0]
00037f07: when ZF goto %00037f05
00046297: goto %00038540

00038540:
00038543: R0 := 0x418000
00038549: R0 := R0 + 0xC68
0003854e: R30 := 0x403ACC
00038550: call @puts with return %00038552

00038552:
00038557: R0 := mem[R31 + 0x50, el]:u64
0003855e: R0 := mem[R0 + 8, el]:u64
00038563: R30 := 0x403AD8
00038565: call @hlist_dump with return %00037f05

00037f05:
00037f0f: R0 := mem[R31 + 0x50, el]:u64
00037f15: R1 := R0
00037f1c: R0 := pad:64[mem[R31 + 0x4C, el]:u32]
00037f21: R30 := 0x403AE8
00037f23: call @headers_send with return %00037f25

00037f25:
00037f28: VF := 0
00037f2b: CF := 1
00037f2f: ZF := 31:0[R0] = 0
00037f33: NF := 31:31[R0]
00037f39: when ZF goto %00037f37
00046298: goto %00037fdf

00037f37:
00037f41: goto %00037f3f

00037fdf:
00037fe2: R0 := 0x430000
00037fe8: R0 := R0 + 0x390
00037fef: R0 := pad:64[mem[R0, el]:u32]
00037ff4: VF := 0
00037ff7: CF := 1
00037ffb: ZF := 31:0[R0] = 0
00037fff: NF := 31:31[R0]
00038005: when ZF goto %00038003
00046299: goto %0003852e

0003852e:
00038531: R0 := 0x418000
00038537: R0 := R0 + 0xC88
0003853c: R30 := 0x403B10
0003853e: call @puts with return %00038003

00038003:
0003800d: R0 := mem[R31 + 0x50, el]:u64
00038012: R30 := 0x403B18
00038014: call @reset_rr_data with return %00038016

00038016:
0003801b: R0 := mem[R31 + 0x50, el]:u64
00038021: R1 := R0
00038028: R0 := pad:64[mem[R31 + 0x4C, el]:u32]
0003802d: R30 := 0x403B28
0003802f: call @headers_recv with return %00038031

00038031:
00038034: VF := 0
00038037: CF := 1
0003803b: ZF := 31:0[R0] = 0
0003803f: NF := 31:31[R0]
00038044: when ZF goto %00037fb9
0004629a: goto %00038048

00037fb9:
00037fbd: goto %00037f3f

00038048:
0003804b: R0 := 0x430000
00038051: R0 := R0 + 0x390
00038058: R0 := pad:64[mem[R0, el]:u32]
0003805d: VF := 0
00038060: CF := 1
00038064: ZF := 31:0[R0] = 0
00038068: NF := 31:31[R0]
0003806e: when ZF goto %0003806c
0004629b: goto %00038519

00038519:
0003851e: R0 := mem[R31 + 0x50, el]:u64
00038525: R0 := mem[R0 + 8, el]:u64
0003852a: R30 := 0x403B50
0003852c: call @hlist_dump with return %0003806c

0003806c:
00038076: R0 := mem[R31 + 0x50, el]:u64
0003807d: R0 := pad:64[mem[R0 + 0x10, el]:u32]
00038083: #421 := 31:0[R0] - 0x191
00038088: VF := extend:64[#421] <> extend:64[31:0[R0]] - 0x191
0003808d: CF := pad:64[#421] <> pad:64[31:0[R0]] + 0xFFFFFE6F
00038091: ZF := #421 = 0
00038095: NF := 31:31[#421]
0003809a: when ZF <> 1 goto %00037fbf
0004629c: goto %0003809e

00037fbf:
00037fc3: goto %00037f3f

0003809e:
000380a3: R0 := mem[R31 + 0x50, el]:u64
000380a9: R1 := R0
000380b0: R0 := pad:64[mem[R31 + 0x4C, el]:u32]
000380b5: R30 := 0x403B70
000380b7: call @http_body_drop with return %000380b9

000380b9:
000380bc: VF := 0
000380bf: CF := 1
000380c3: ZF := 31:0[R0] = 0
000380c7: NF := 31:31[R0]
000380cc: when ZF goto %00037fc5
0004629d: goto %000380d0

00037fc5:
00037fc9: goto %00037f3f

000380d0:
000380d5: R0 := mem[R31 + 0x50, el]:u64
000380dc: R2 := mem[R0 + 8, el]:u64
000380e1: R0 := 0x418000
000380e7: R1 := R0 + 0xCA8
000380ed: R0 := R2
000380f2: R30 := 0x403B90
000380f4: call @hlist_get with return %000380f6

000380f6:
000380fc: mem := mem with [R31 + 0x58, el]:u64 <- R0
00038103: R0 := mem[R31 + 0x58, el]:u64
00038108: VF := 0
0003810b: CF := 1
0003810f: ZF := R0 = 0
00038113: NF := 63:63[R0]
00038119: when ZF goto %00038117
0004629e: goto %000382bd

000382bd:
000382c2: R0 := mem[R31 + 0x58, el]:u64
000382c7: R30 := 0x403BA8
000382c9: call @strlen with return %000382cb

000382cb:
000382cf: #422 := R0 - 0xE
000382d4: VF := extend:128[#422] <> extend:128[R0] - 0xE
000382d9: CF := pad:128[#422] <> pad:128[R0] + 0xFFFFFFFFFFFFFFF2
000382dd: ZF := #422 = 0
000382e1: NF := 63:63[#422]
000382e7: when ~(CF & ~ZF) goto %00038117
0004629f: goto %000382eb

00038117:
0003811f: R0 := 0x418000
00038125: R1 := R0 + 0xD40
0003812a: R0 := 4
0003812f: R30 := 0x403D00
00038131: call @syslog with return %00038133

00038133:
00038138: R0 := mem[R31 + 0x38, el]:u64
0003813d: R1 := 0x418000
00038143: R1 := R1 + 0xD68
0003814b: mem := mem with [R0 + 0x60, el]:u64 <- R1
0003814f: goto %00037f3f

000382eb:
000382f0: R0 := mem[R31 + 0x58, el]:u64
000382f5: R30 := 0x403BB8
000382f7: call @strlen with return %000382f9

000382f9:
000382fd: R0 := R0 + 6
00038302: R30 := 0x403BC0
00038304: call @zmalloc with return %00038306

00038306:
0003830c: mem := mem with [R31 + 0x60, el]:u64 <- R0
00038313: R0 := mem[R31 + 0x58, el]:u64
00038319: R0 := R0 + 5
0003831f: R1 := R0
00038326: R0 := mem[R31 + 0x60, el]:u64
0003832b: R30 := 0x403BD8
0003832d: call @from_base64 with return %0003832f

0003832f:
00038335: mem := mem with [R31 + 0x6C, el]:u32 <- 31:0[R0]
0003833c: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
00038342: #423 := 31:0[R0] - 0x28
00038347: VF := extend:64[#423] <> extend:64[31:0[R0]] - 0x28
0003834c: CF := pad:64[#423] <> pad:64[31:0[R0]] + 0xFFFFFFD8
00038350: ZF := #423 = 0
00038354: NF := 31:31[#423]
0003835c: when ~(NF = VF & ~ZF) goto %0003835a
000462a0: goto %000383a2

0003835a:
00038362: R0 := 0x418000
00038368: R1 := R0 + 0xD18
0003836d: R0 := 3
00038372: R30 := 0x403CD4
00038374: call @syslog with return %00038376

00038376:
0003837b: R0 := mem[R31 + 0x38, el]:u64
00038380: R1 := 0x418000
00038386: R1 := R1 + 0xCF0
0003838e: mem := mem with [R0 + 0x60, el]:u64 <- R1
00038395: R0 := mem[R31 + 0x60, el]:u64
0003839a: R30 := 0x403CEC
0003839c: call @free with return %0003839e

0003839e:
000383a0: goto %00037f3f

000383a2:
000383a7: mem := mem with [R31 + 0x58, el]:u64 <- 0
000383ad: R0 := R31 + 0x58
000383b4: R3 := mem[R31 + 0x30, el]:u64
000383bb: R2 := pad:64[mem[R31 + 0x6C, el]:u32]
000383c2: R1 := mem[R31 + 0x60, el]:u64
000383c7: R30 := 0x403C00
000383c9: call @ntlm_response with return %000383cb

000383cb:
000383d1: mem := mem with [R31 + 0x6C, el]:u32 <- 31:0[R0]
000383d8: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
000383dd: VF := 0
000383e0: CF := 1
000383e4: ZF := 31:0[R0] = 0
000383e8: NF := 31:31[R0]
000383f0: when ~(NF = VF & ~ZF) goto %000383ee
000462a1: goto %00038444

000383ee:
000383f6: R0 := 0x418000
000383fc: R1 := R0 + 0xCC0
00038401: R0 := 3
00038406: R30 := 0x403CA0
00038408: call @syslog with return %0003840a

0003840a:
0003840f: R0 := mem[R31 + 0x38, el]:u64
00038414: R1 := 0x418000
0003841a: R1 := R1 + 0xCF0
00038422: mem := mem with [R0 + 0x60, el]:u64 <- R1
00038429: R0 := mem[R31 + 0x60, el]:u64
0003842e: R30 := 0x403CB8
00038430: call @free with return %00038432

00038432:
00038437: R0 := mem[R31 + 0x58, el]:u64
0003843c: R30 := 0x403CC0
0003843e: call @free with return %00038440

00038440:
00038442: goto %00037f3f

00038444:
00038447: R2 := 0x1000
0003844c: R0 := 0x418000
00038452: R1 := R0 + 0xC00
00038459: R0 := mem[R31 + 0x70, el]:u64
0003845e: R30 := 0x403C24
00038460: call @strlcpy with return %00038462

00038462:
00038467: R0 := mem[R31 + 0x70, el]:u64
0003846d: R0 := R0 + 5
00038474: R1 := mem[R31 + 0x58, el]:u64
0003847b: R2 := extend:64[mem[R31 + 0x6C, el]:u32]
00038480: R3 := 0xFFB
00038485: R30 := 0x403C3C
00038487: call @to_base64 with return %00038489

00038489:
0003848e: R0 := mem[R31 + 0x40, el]:u64
00038495: R4 := mem[R0 + 8, el]:u64
0003849a: R3 := 1
000384a1: R2 := mem[R31 + 0x70, el]:u64
000384a6: R0 := 0x418000
000384ac: R1 := R0 + 0xC28
000384b2: R0 := R4
000384b7: R30 := 0x403C5C
000384b9: call @hlist_mod with return %000384bb

000384bb:
000384bf: R1 := R0
000384c6: R0 := mem[R31 + 0x40, el]:u64
000384ce: mem := mem with [R0 + 8, el]:u64 <- R1
000384d5: R0 := mem[R31 + 0x58, el]:u64
000384da: R30 := 0x403C70
000384dc: call @free with return %000384de

000384de:
000384e3: R0 := mem[R31 + 0x60, el]:u64
000384e8: R30 := 0x403C78
000384ea: call @free with return %000384ec

000384ec:
000384ef: R0 := 0x430000
000384f5: R0 := R0 + 0x390
000384fc: R0 := pad:64[mem[R0, el]:u32]
00038501: VF := 0
00038504: CF := 1
00038508: ZF := 31:0[R0] = 0
0003850c: NF := 31:31[R0]
00038511: when ZF goto %00038163
000462a2: goto %00038515

00038515:
00038517: goto %00038151

00038151:
00038154: R0 := 0x418000
0003815a: R0 := R0 + 0xD90
0003815f: R30 := 0x403D20
00038161: call @puts with return %00038163

00038163:
00038168: R1 := mem[R31 + 0x40, el]:u64
0003816f: R0 := pad:64[mem[R31 + 0x4C, el]:u32]
00038174: R30 := 0x403D2C
00038176: call @headers_send with return %00038178

00038178:
0003817b: VF := 0
0003817e: CF := 1
00038182: ZF := 31:0[R0] = 0
00038186: NF := 31:31[R0]
0003818b: when ZF goto %00037fcb
000462a3: goto %0003818f

00037fcb:
00037fcf: goto %00037f3f

0003818f:
00038194: R0 := mem[R31 + 0x50, el]:u64
00038199: R30 := 0x403D3C
0003819b: call @reset_rr_data with return %0003819d

0003819d:
000381a2: R0 := pad:64[mem[R31 + 0x2C, el]:u32]
000381a7: VF := 0
000381aa: CF := 1
000381ae: ZF := 31:0[R0] = 0
000381b2: NF := 31:31[R0]
000381b8: when ZF goto %000381b6
000462a4: goto %0003827d

0003827d:
00038282: R0 := mem[R31 + 0x50, el]:u64
00038288: R3 := R0
0003828f: R2 := mem[R31 + 0x40, el]:u64
00038296: R1 := pad:64[mem[R31 + 0x48, el]:u32]
0003829d: R0 := pad:64[mem[R31 + 0x4C, el]:u32]
000382a2: R30 := 0x403D60
000382a4: call @http_body_send with return %000382a6

000382a6:
000382a9: VF := 0
000382ac: CF := 1
000382b0: ZF := 31:0[R0] = 0
000382b4: NF := 31:31[R0]
000382b9: when ZF goto %00037fd1
000462a5: goto %000381b6

00037fd1:
00037fd5: goto %00037f3f

000381b6:
000381be: R0 := 0x430000
000381c4: R0 := R0 + 0x390
000381cb: R0 := pad:64[mem[R0, el]:u32]
000381d0: VF := 0
000381d3: CF := 1
000381d7: ZF := 31:0[R0] = 0
000381db: NF := 31:31[R0]
000381e1: when ZF goto %000381df
000462a6: goto %0003826b

0003826b:
0003826e: R0 := 0x418000
00038274: R0 := R0 + 0xDA8
00038279: R30 := 0x403D88
0003827b: call @puts with return %000381df

000381df:
000381e9: R0 := mem[R31 + 0x50, el]:u64
000381ef: R1 := R0
000381f6: R0 := pad:64[mem[R31 + 0x4C, el]:u32]
000381fb: R30 := 0x403D98
000381fd: call @headers_recv with return %000381ff

000381ff:
00038202: VF := 0
00038205: CF := 1
00038209: ZF := 31:0[R0] = 0
0003820d: NF := 31:31[R0]
00038212: when ZF goto %00037fd7
000462a7: goto %00038216

00037fd7:
00037fdb: goto %00037f3f

00038216:
00038219: R0 := 1
00038221: mem := mem with [R31 + 0x7C, el]:u32 <- 31:0[R0]
00038226: R0 := 0x430000
0003822c: R0 := R0 + 0x390
00038233: R0 := pad:64[mem[R0, el]:u32]
00038238: VF := 0
0003823b: CF := 1
0003823f: ZF := 31:0[R0] = 0
00038243: NF := 31:31[R0]
00038248: when ZF goto %00037fdd
000462a8: goto %0003824c

00037fdd:
000462a9: goto %00037f3f

0003824c:
00038251: R0 := mem[R31 + 0x50, el]:u64
00038258: R0 := mem[R0 + 8, el]:u64
0003825d: R30 := 0x403DC8
0003825f: call @hlist_dump with return %00038261

00038261:
00038263: goto %00037f3f

00037f3f:
00037f47: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
00037f4c: VF := 0
00037f4f: CF := 1
00037f53: ZF := 31:0[R0] = 0
00037f57: NF := 31:31[R0]
00037f5d: when ZF goto %00037f5b
000462aa: goto %00037f9e

00037f9e:
00037fa3: R0 := mem[R31 + 0x50, el]:u64
00037fa9: R1 := R0
00037fb0: R0 := mem[R31 + 0x38, el]:u64
00037fb5: R30 := 0x403E2C
00037fb7: call @copy_rr_data with return %00037f5b

00037f5b:
00037f64: R0 := R31 + 0x50
00037f69: R30 := 0x403E34
00037f6b: call @free_rr_data with return %00037f6d

00037f6d:
00037f72: R0 := mem[R31 + 0x70, el]:u64
00037f77: R30 := 0x403E3C
00037f79: call @free with return %00037f7b

00037f7b:
00037f80: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
00037f87: R19 := mem[R31 + 0x10, el]:u64
00037f8e: R29 := mem[R31, el]:u64
00037f93: R30 := mem[R31 + 8, el]:u64
00037f97: R31 := R31 + 0x80
00037f9c: call R30 with noreturn

000462ab: sub zmalloc(zmalloc_result)
0004641d: zmalloc_result :: out u32 = low:32[R0]

0001635c:
00016363: #2 := R31 - 0x30
00016369: mem := mem with [#2, el]:u64 <- R29
0001636f: mem := mem with [#2 + 8, el]:u64 <- R30
00016373: R31 := #2
00016379: R29 := R31
00016381: mem := mem with [R31 + 0x18, el]:u64 <- R0
00016388: R1 := mem[R31 + 0x18, el]:u64
0001638d: R0 := 1
00016392: R30 := 0x4122E4
00016395: call @calloc with return %00016397

00016397:
0001639d: mem := mem with [R31 + 0x28, el]:u64 <- R0
000163a4: R0 := mem[R31 + 0x28, el]:u64
000163ab: R29 := mem[R31, el]:u64
000163b0: R30 := mem[R31 + 8, el]:u64
000163b4: R31 := R31 + 0x30
000163b9: call R30 with noreturn
