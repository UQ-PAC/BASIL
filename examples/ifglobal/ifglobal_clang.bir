0000083f: program
00000823: sub __cxa_finalize(__cxa_finalize_result)
00000840: __cxa_finalize_result :: out u32 = low:32[R0]

00000595:
00000676: R16 := 0x11000
0000067d: R17 := mem[R16, el]:u64
00000683: R16 := R16
00000688: call R17 with noreturn

00000824: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
00000841: __do_global_dtors_aux_result :: out u32 = low:32[R0]

0000033c:
00000340: #5 := R31 - 0x20
00000346: mem := mem with [#5, el]:u64 <- R29
0000034c: mem := mem with [#5 + 8, el]:u64 <- R30
00000350: R31 := #5
00000356: R29 := R31
0000035e: mem := mem with [R31 + 0x10, el]:u64 <- R19
00000363: R19 := 0x11000
0000036a: R0 := pad:64[mem[R19 + 0x30]]
00000371: when 31:0[R0] <> 0 goto %0000036f
00000825: goto %0000055e

0000055e:
00000561: R0 := 0x10000
00000568: R0 := mem[R0 + 0xFC0, el]:u64
0000056e: when R0 = 0 goto %0000056c
00000826: goto %00000585

00000585:
00000588: R0 := 0x11000
0000058f: R0 := mem[R0 + 0x28, el]:u64
00000594: R30 := 0x700
00000597: call @__cxa_finalize with return %0000056c

0000056c:
00000574: R30 := 0x704
00000576: call @deregister_tm_clones with return %00000578

00000578:
0000057b: R0 := 1
00000583: mem := mem with [R19 + 0x30] <- 7:0[R0]
00000827: goto %0000036f

0000036f:
00000379: R19 := mem[R31 + 0x10, el]:u64
00000380: R29 := mem[R31, el]:u64
00000385: R30 := mem[R31 + 8, el]:u64
00000389: R31 := R31 + 0x20
0000038e: call R30 with noreturn

00000828: sub __libc_csu_fini(__libc_csu_fini_result)
00000842: __libc_csu_fini_result :: out u32 = low:32[R0]

000004e4:
000004e7: call R30 with noreturn

00000829: sub __libc_csu_init(__libc_csu_init_result)
00000843: __libc_csu_init_result :: out u32 = low:32[R0]

000003f1:
000003f5: #7 := R31 - 0x40
000003fb: mem := mem with [#7, el]:u64 <- R29
00000401: mem := mem with [#7 + 8, el]:u64 <- R30
00000405: R31 := #7
0000040b: R29 := R31
00000411: #8 := R31 + 0x10
00000417: mem := mem with [#8, el]:u64 <- R19
0000041d: mem := mem with [#8 + 8, el]:u64 <- R20
00000422: R20 := 0x10000
00000428: R20 := R20 + 0xDC0
0000042e: #9 := R31 + 0x20
00000434: mem := mem with [#9, el]:u64 <- R21
0000043a: mem := mem with [#9 + 8, el]:u64 <- R22
0000043f: R21 := 0x10000
00000445: R21 := R21 + 0xDB8
0000044c: R20 := R20 + ~R21 + 1
00000452: R22 := pad:64[31:0[R0]]
00000458: #10 := R31 + 0x30
0000045e: mem := mem with [#10, el]:u64 <- R23
00000464: mem := mem with [#10 + 8, el]:u64 <- R24
0000046a: R23 := R1
00000470: R24 := R2
00000475: R30 := 0x790
00000478: call @_init with return %0000047a

0000047a:
0000047e: #11 := ~(R20 ~>> 3)
00000482: #12 := ~(R20 ~>> 3) + 1
00000487: VF := extend:65[#12] <> extend:65[#11] + 1
0000048c: CF := pad:65[#12] <> pad:65[#11] + 1
00000490: ZF := #12 = 0
00000494: NF := 63:63[#12]
0000049a: when ZF goto %00000498
0000082a: goto %000004e9

000004e9:
000004ef: R20 :=

          >> 3 | R20 << 0x3D]
000004f4: R19 := 0
0000082b: goto %000004f6

000004f6:
000004fc: R3 := mem[R21 + (60:0[R19].0), el]:u64
00000502: R2 := R24
00000508: R19 := R19 + 1
0000050e: R1 := R23
00000514: R0 := pad:64[31:0[R22]]
00000519: R30 := 0x7B8
0000051c: call R3 with return %0000051e

0000051e:
00000522: #16 := ~R19
00000527: #17 := R20 + ~R19 + 1
0000052d: VF := extend:65[#17] <> extend:65[R20] + extend:65[#16] + 1
00000533: CF := pad:65[#17] <> pad:65[R20] + pad:65[#16] + 1
00000537: ZF := #17 = 0
0000053b: NF := 63:63[#17]
00000540: when ZF <> 1 goto %000004f6
0000082c: goto %00000498

00000498:
000004a1: #13 := R31 + 0x10
000004a6: R19 := mem[#13, el]:u64
000004ab: R20 := mem[#13 + 8, el]:u64
000004b1: #14 := R31 + 0x20
000004b6: R21 := mem[#14, el]:u64
000004bb: R22 := mem[#14 + 8, el]:u64
000004c1: #15 := R31 + 0x30
000004c6: R23 := mem[#15, el]:u64
000004cb: R24 := mem[#15 + 8, el]:u64
000004d2: R29 := mem[R31, el]:u64
000004d7: R30 := mem[R31 + 8, el]:u64
000004db: R31 := R31 + 0x40
000004e0: call R30 with noreturn

0000082d: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
00000844: __libc_start_main_main :: in u64 = R0
00000845: __libc_start_main_arg2 :: in u32 = low:32[R1]
00000846: __libc_start_main_arg3 :: in out u64 = R2
00000847: __libc_start_main_auxv :: in out u64 = R3
00000848: __libc_start_main_result :: out u32 = low:32[R0]

0000027a:
0000068c: R16 := 0x11000
00000693: R17 := mem[R16 + 8, el]:u64
00000699: R16 := R16 + 8
0000069e: call R17 with noreturn

0000082e: sub _fini(_fini_result)
00000849: _fini_result :: out u32 = low:32[R0]

00000030:
00000034: #0 := R31 - 0x10
0000003a: mem := mem with [#0, el]:u64 <- R29
00000040: mem := mem with [#0 + 8, el]:u64 <- R30
00000044: R31 := #0
0000004a: R29 := R31
00000051: R29 := mem[R31, el]:u64
00000056: R30 := mem[R31 + 8, el]:u64
0000005a: R31 := R31 + 0x10
0000005f: call R30 with noreturn

0000082f: sub _init(_init_result)
0000084a: _init_result :: out u32 = low:32[R0]

00000476:
0000075e: #19 := R31 - 0x10
00000764: mem := mem with [#19, el]:u64 <- R29
0000076a: mem := mem with [#19 + 8, el]:u64 <- R30
0000076e: R31 := #19
00000774: R29 := R31
00000779: R30 := 0x5A4
0000077b: call @call_weak_fn with return %0000077d

0000077d:
00000782: R29 := mem[R31, el]:u64
00000787: R30 := mem[R31 + 8, el]:u64
0000078b: R31 := R31 + 0x10
00000790: call R30 with noreturn

00000830: sub _start(_start_result)
0000084b: _start_result :: out u32 = low:32[R0]

0000022f:
00000232: R29 := 0
00000237: R30 := 0
0000023d: R5 := R0
00000244: R1 := mem[R31, el]:u64
0000024a: R2 := R31 + 8
00000250: R6 := R31
00000255: R0 := 0x10000
0000025c: R0 := mem[R0 + 0xFD8, el]:u64
00000261: R3 := 0x10000
00000268: R3 := mem[R3 + 0xFD0, el]:u64
0000026d: R4 := 0x10000
00000274: R4 := mem[R4 + 0xFB0, el]:u64
00000279: R30 := 0x644
0000027c: call @__libc_start_main with return %0000027e

0000027e:
00000281: R30 := 0x648
00000284: call @abort with return %00000831

00000831:
00000832: call @call_weak_fn with noreturn

00000833: sub abort()


00000282:
000006b8: R16 := 0x11000
000006bf: R17 := mem[R16 + 0x18, el]:u64
000006c5: R16 := R16 + 0x18
000006ca: call R17 with noreturn

00000834: sub call_weak_fn(call_weak_fn_result)
0000084c: call_weak_fn_result :: out u32 = low:32[R0]

00000286:
00000289: R0 := 0x10000
00000290: R0 := mem[R0 + 0xFC8, el]:u64
00000296: when R0 = 0 goto %00000294
00000835: goto %000005d5

00000294:
0000029c: call R30 with noreturn

000005d5:
000005d8: goto @__gmon_start__

000005d6:
000006a2: R16 := 0x11000
000006a9: R17 := mem[R16 + 0x10, el]:u64
000006af: R16 := R16 + 0x10
000006b4: call R17 with noreturn

00000836: sub deregister_tm_clones(deregister_tm_clones_result)
0000084d: deregister_tm_clones_result :: out u32 = low:32[R0]

000002a0:
000002a3: R0 := 0x11000
000002a9: R0 := R0 + 0x30
000002ae: R1 := 0x11000
000002b4: R1 := R1 + 0x30
000002ba: #1 := ~R0
000002bf: #2 := R1 + ~R0 + 1
000002c5: VF := extend:65[#2] <> extend:65[R1] + extend:65[#1] + 1
000002cb: CF := pad:65[#2] <> pad:65[R1] + pad:65[#1] + 1
000002cf: ZF := #2 = 0
000002d3: NF := 63:63[#2]
000002d9: when ZF goto %000002d7
00000837: goto %000005b7

000005b7:
000005ba: R1 := 0x10000
000005c1: R1 := mem[R1 + 0xFB8, el]:u64
000005c6: when R1 = 0 goto %000002d7
00000838: goto %000005ca

000002d7:
000002df: call R30 with noreturn

000005ca:
000005ce: R16 := R1
000005d3: call R16 with noreturn

00000839: sub frame_dummy(frame_dummy_result)
0000084e: frame_dummy_result :: out u32 = low:32[R0]

00000390:
00000392: call @register_tm_clones with noreturn

0000083a: sub main(main_argc, main_argv, main_result)
0000084f: main_argc :: in u32 = low:32[R0]
00000850: main_argv :: in out u64 = R1
00000851: main_result :: out u32 = low:32[R0]

00000394:
00000398: R31 := R31 - 0x10
0000039f: mem := mem with [R31 + 0xC, el]:u32 <- 0
000003a4: R8 := 0x11000
000003ab: R8 := pad:64[mem[R8 + 0x34, el]:u32]
000003b1: #6 := 31:0[R8] + 0
000003b6: VF := extend:33[#6] <> extend:33[31:0[R8]] + 0
000003bb: CF := pad:33[#6] <> pad:33[31:0[R8]] - 0x100000000
000003bf: ZF := #6 = 0
000003c3: NF := 31:31[#6]
000003c7: R8 := pad:64[#6]
000003d3: when ZF goto %000003cc
000003d4: goto %000003cf

000003cf:
000003d0: R8 := 1
000003d6: goto %000003d2

000003cc:
000003cd: R8 := 0
000003d5: goto %000003d2

000003d2:
000003dc: when 0:0[R8] goto %000003da
0000083b: goto %00000544

00000544:
00000547: goto %00000545

00000545:
0000054b: R8 := 1
00000550: R9 := 0x11000
00000558: mem := mem with [R9 + 0x34, el]:u32 <- 31:0[R8]
0000055c: goto %000003da

000003da:
000003e4: R0 := pad:64[mem[R31 + 0xC, el]:u32]
000003ea: R31 := R31 + 0x10
000003ef: call R30 with noreturn

0000083c: sub register_tm_clones(register_tm_clones_result)
00000852: register_tm_clones_result :: out u32 = low:32[R0]

000002e1:
000002e4: R0 := 0x11000
000002ea: R0 := R0 + 0x30
000002ef: R1 := 0x11000
000002f5: R1 := R1 + 0x30
000002fc: R1 := R1 + ~R0 + 1
00000303: R2 := 0.0:0[R1 >> 0x3F | R1 << 1]
0000030a: R1 := R2 + (R1 ~>> 3)
00000310: #3 := ~(R1 ~>> 1)
00000314: #4 := ~(R1 ~>> 1) + 1
00000319: VF := extend:65[#4] <> extend:65[#3] + 1
0000031e: CF := pad:65[#4] <> pad:65[#3] + 1
00000322: ZF := #4 = 0
00000326: NF := 63:63[#4]
0000032e: R1 :=

          >> 1 | R1 << 0x3F]
00000334: when ZF goto %00000332
0000083d: goto %00000599

00000599:
0000059c: R2 := 0x10000
000005a3: R2 := mem[R2 + 0xFE0, el]:u64
000005a8: when R2 = 0 goto %00000332
0000083e: goto %000005ac

00000332:
0000033a: call R30 with noreturn

000005ac:
000005b0: R16 := R2
000005b5: call R16 with noreturn
