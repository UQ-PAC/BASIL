00000804: program
000007e7: sub __cxa_finalize(__cxa_finalize_result)
00000805: __cxa_finalize_result :: out u32 = low:32[R0]

00000561:
00000642: R16 := 0x10000
00000649: R17 := mem[R16 + 0xFA0, el]:u64
0000064f: R16 := R16 + 0xFA0
00000654: call R17 with noreturn

000007e8: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
00000806: __do_global_dtors_aux_result :: out u32 = low:32[R0]

0000032c:
00000330: #5 := R31 - 0x20
00000336: mem := mem with [#5, el]:u64 <- R29
0000033c: mem := mem with [#5 + 8, el]:u64 <- R30
00000340: R31 := #5
00000346: R29 := R31
0000034e: mem := mem with [R31 + 0x10, el]:u64 <- R19
00000353: R19 := 0x11000
0000035a: R0 := pad:64[mem[R19 + 0x10]]
00000361: when 31:0[R0] <> 0 goto %0000035f
000007e9: goto %0000052a

0000052a:
0000052d: R0 := 0x10000
00000534: R0 := mem[R0 + 0xFD8, el]:u64
0000053a: when R0 = 0 goto %00000538
000007ea: goto %00000551

00000551:
00000554: R0 := 0x11000
0000055b: R0 := mem[R0 + 8, el]:u64
00000560: R30 := 0x700
00000563: call @__cxa_finalize with return %00000538

00000538:
00000540: R30 := 0x704
00000542: call @deregister_tm_clones with return %00000544

00000544:
00000547: R0 := 1
0000054f: mem := mem with [R19 + 0x10] <- 7:0[R0]
000007eb: goto %0000035f

0000035f:
00000369: R19 := mem[R31 + 0x10, el]:u64
00000370: R29 := mem[R31, el]:u64
00000375: R30 := mem[R31 + 8, el]:u64
00000379: R31 := R31 + 0x20
0000037e: call R30 with noreturn

000007ec: sub __libc_csu_fini(__libc_csu_fini_result)
00000807: __libc_csu_fini_result :: out u32 = low:32[R0]

000004b2:
000004b5: call R30 with noreturn

000007ed: sub __libc_csu_init(__libc_csu_init_result)
00000808: __libc_csu_init_result :: out u32 = low:32[R0]

000003bf:
000003c3: #7 := R31 - 0x40
000003c9: mem := mem with [#7, el]:u64 <- R29
000003cf: mem := mem with [#7 + 8, el]:u64 <- R30
000003d3: R31 := #7
000003d9: R29 := R31
000003df: #8 := R31 + 0x10
000003e5: mem := mem with [#8, el]:u64 <- R19
000003eb: mem := mem with [#8 + 8, el]:u64 <- R20
000003f0: R20 := 0x10000
000003f6: R20 := R20 + 0xD90
000003fc: #9 := R31 + 0x20
00000402: mem := mem with [#9, el]:u64 <- R21
00000408: mem := mem with [#9 + 8, el]:u64 <- R22
0000040d: R21 := 0x10000
00000413: R21 := R21 + 0xD88
0000041a: R20 := R20 + ~R21 + 1
00000420: R22 := pad:64[31:0[R0]]
00000426: #10 := R31 + 0x30
0000042c: mem := mem with [#10, el]:u64 <- R23
00000432: mem := mem with [#10 + 8, el]:u64 <- R24
00000438: R23 := R1
0000043e: R24 := R2
00000443: R30 := 0x780
00000446: call @_init with return %00000448

00000448:
0000044c: #11 := ~(R20 ~>> 3)
00000450: #12 := ~(R20 ~>> 3) + 1
00000455: VF := extend:65[#12] <> extend:65[#11] + 1
0000045a: CF := pad:65[#12] <> pad:65[#11] + 1
0000045e: ZF := #12 = 0
00000462: NF := 63:63[#12]
00000468: when ZF goto %00000466
000007ee: goto %000004b7

000004b7:
000004bd: R20 :=
          63:61[63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20].63:63[R20]].60:0[R20
          >> 3 | R20 << 0x3D]
000004c2: R19 := 0
000007ef: goto %000004c4

000004c4:
000004ca: R3 := mem[R21 + (60:0[R19].0), el]:u64
000004d0: R2 := R24
000004d6: R19 := R19 + 1
000004dc: R1 := R23
000004e2: R0 := pad:64[31:0[R22]]
000004e7: R30 := 0x7A8
000004ea: call R3 with return %000004ec

000004ec:
000004f0: #16 := ~R19
000004f5: #17 := R20 + ~R19 + 1
000004fb: VF := extend:65[#17] <> extend:65[R20] + extend:65[#16] + 1
00000501: CF := pad:65[#17] <> pad:65[R20] + pad:65[#16] + 1
00000505: ZF := #17 = 0
00000509: NF := 63:63[#17]
0000050e: when ZF <> 1 goto %000004c4
000007f0: goto %00000466

00000466:
0000046f: #13 := R31 + 0x10
00000474: R19 := mem[#13, el]:u64
00000479: R20 := mem[#13 + 8, el]:u64
0000047f: #14 := R31 + 0x20
00000484: R21 := mem[#14, el]:u64
00000489: R22 := mem[#14 + 8, el]:u64
0000048f: #15 := R31 + 0x30
00000494: R23 := mem[#15, el]:u64
00000499: R24 := mem[#15 + 8, el]:u64
000004a0: R29 := mem[R31, el]:u64
000004a5: R30 := mem[R31 + 8, el]:u64
000004a9: R31 := R31 + 0x40
000004ae: call R30 with noreturn

000007f1: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
00000809: __libc_start_main_main :: in u64 = R0
0000080a: __libc_start_main_arg2 :: in u32 = low:32[R1]
0000080b: __libc_start_main_arg3 :: in out u64 = R2
0000080c: __libc_start_main_auxv :: in out u64 = R3
0000080d: __libc_start_main_result :: out u32 = low:32[R0]

0000026a:
00000658: R16 := 0x10000
0000065f: R17 := mem[R16 + 0xFA8, el]:u64
00000665: R16 := R16 + 0xFA8
0000066a: call R17 with noreturn

000007f2: sub _fini(_fini_result)
0000080e: _fini_result :: out u32 = low:32[R0]

00000030:
00000034: #0 := R31 - 0x10
0000003a: mem := mem with [#0, el]:u64 <- R29
00000040: mem := mem with [#0 + 8, el]:u64 <- R30
00000044: R31 := #0
0000004a: R29 := R31
00000051: R29 := mem[R31, el]:u64
00000056: R30 := mem[R31 + 8, el]:u64
0000005a: R31 := R31 + 0x10
0000005f: call R30 with noreturn

000007f3: sub _init(_init_result)
0000080f: _init_result :: out u32 = low:32[R0]

00000444:
00000726: #19 := R31 - 0x10
0000072c: mem := mem with [#19, el]:u64 <- R29
00000732: mem := mem with [#19 + 8, el]:u64 <- R30
00000736: R31 := #19
0000073c: R29 := R31
00000741: R30 := 0x5A4
00000743: call @call_weak_fn with return %00000745

00000745:
0000074a: R29 := mem[R31, el]:u64
0000074f: R30 := mem[R31 + 8, el]:u64
00000753: R31 := R31 + 0x10
00000758: call R30 with noreturn

000007f4: sub _start(_start_result)
00000810: _start_result :: out u32 = low:32[R0]

0000021f:
00000222: R29 := 0
00000227: R30 := 0
0000022d: R5 := R0
00000234: R1 := mem[R31, el]:u64
0000023a: R2 := R31 + 8
00000240: R6 := R31
00000245: R0 := 0x10000
0000024c: R0 := mem[R0 + 0xFF0, el]:u64
00000251: R3 := 0x10000
00000258: R3 := mem[R3 + 0xFE8, el]:u64
0000025d: R4 := 0x10000
00000264: R4 := mem[R4 + 0xFC8, el]:u64
00000269: R30 := 0x644
0000026c: call @__libc_start_main with return %0000026e

0000026e:
00000271: R30 := 0x648
00000274: call @abort with return %000007f5

000007f5:
000007f6: call @call_weak_fn with noreturn

000007f7: sub abort()


00000272:
00000684: R16 := 0x10000
0000068b: R17 := mem[R16 + 0xFB8, el]:u64
00000691: R16 := R16 + 0xFB8
00000696: call R17 with noreturn

000007f8: sub call_weak_fn(call_weak_fn_result)
00000811: call_weak_fn_result :: out u32 = low:32[R0]

00000276:
00000279: R0 := 0x10000
00000280: R0 := mem[R0 + 0xFE0, el]:u64
00000286: when R0 = 0 goto %00000284
000007f9: goto %000005a1

00000284:
0000028c: call R30 with noreturn

000005a1:
000005a4: goto @__gmon_start__

000005a2:
0000066e: R16 := 0x10000
00000675: R17 := mem[R16 + 0xFB0, el]:u64
0000067b: R16 := R16 + 0xFB0
00000680: call R17 with noreturn

000007fa: sub deregister_tm_clones(deregister_tm_clones_result)
00000812: deregister_tm_clones_result :: out u32 = low:32[R0]

00000290:
00000293: R0 := 0x11000
00000299: R0 := R0 + 0x10
0000029e: R1 := 0x11000
000002a4: R1 := R1 + 0x10
000002aa: #1 := ~R0
000002af: #2 := R1 + ~R0 + 1
000002b5: VF := extend:65[#2] <> extend:65[R1] + extend:65[#1] + 1
000002bb: CF := pad:65[#2] <> pad:65[R1] + pad:65[#1] + 1
000002bf: ZF := #2 = 0
000002c3: NF := 63:63[#2]
000002c9: when ZF goto %000002c7
000007fb: goto %00000583

00000583:
00000586: R1 := 0x10000
0000058d: R1 := mem[R1 + 0xFD0, el]:u64
00000592: when R1 = 0 goto %000002c7
000007fc: goto %00000596

000002c7:
000002cf: call R30 with noreturn

00000596:
0000059a: R16 := R1
0000059f: call R16 with noreturn

000007fd: sub frame_dummy(frame_dummy_result)
00000813: frame_dummy_result :: out u32 = low:32[R0]

00000380:
00000382: call @register_tm_clones with noreturn

000007fe: sub main(main_argc, main_argv, main_result)
00000814: main_argc :: in u32 = low:32[R0]
00000815: main_argv :: in out u64 = R1
00000816: main_result :: out u32 = low:32[R0]

00000384:
00000387: R0 := 0x11000
0000038d: R0 := R0 + 0x14
00000394: R0 := pad:64[mem[R0, el]:u32]
0000039a: #6 := 31:0[R0] + 0
0000039f: VF := extend:33[#6] <> extend:33[31:0[R0]] + 0
000003a4: CF := pad:33[#6] <> pad:33[31:0[R0]] - 0x100000000
000003a8: ZF := #6 = 0
000003ac: NF := 31:31[#6]
000003b2: when ZF <> 1 goto %000003b0
000007ff: goto %00000512

00000512:
00000515: R0 := 0x11000
0000051b: R0 := R0 + 0x14
00000520: R1 := 1
00000528: mem := mem with [R0, el]:u32 <- 31:0[R1]
00000800: goto %000003b0

000003b0:
000003b8: R0 := 0
000003bd: call R30 with noreturn

00000801: sub register_tm_clones(register_tm_clones_result)
00000817: register_tm_clones_result :: out u32 = low:32[R0]

000002d1:
000002d4: R0 := 0x11000
000002da: R0 := R0 + 0x10
000002df: R1 := 0x11000
000002e5: R1 := R1 + 0x10
000002ec: R1 := R1 + ~R0 + 1
000002f3: R2 := 0.0:0[R1 >> 0x3F | R1 << 1]
000002fa: R1 := R2 + (R1 ~>> 3)
00000300: #3 := ~(R1 ~>> 1)
00000304: #4 := ~(R1 ~>> 1) + 1
00000309: VF := extend:65[#4] <> extend:65[#3] + 1
0000030e: CF := pad:65[#4] <> pad:65[#3] + 1
00000312: ZF := #4 = 0
00000316: NF := 63:63[#4]
0000031e: R1 :=

          >> 1 | R1 << 0x3F]
00000324: when ZF goto %00000322
00000802: goto %00000565

00000565:
00000568: R2 := 0x10000
0000056f: R2 := mem[R2 + 0xFF8, el]:u64
00000574: when R2 = 0 goto %00000322
00000803: goto %00000578

00000322:
0000032a: call R30 with noreturn

00000578:
0000057c: R16 := R2
00000581: call R16 with noreturn
