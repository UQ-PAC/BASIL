00000975: program
00000959: sub __cxa_finalize(__cxa_finalize_result)
00000976: __cxa_finalize_result :: out u32 = low:32[R0]

0000069f:
00000780: R16 := 0x10000
00000787: R17 := mem[R16 + 0xF88, el]:u64
0000078d: R16 := R16 + 0xF88
00000792: call R17 with noreturn

0000095a: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
00000977: __do_global_dtors_aux_result :: out u32 = low:32[R0]

00000396:
0000039a: #5 := R31 - 0x20
000003a0: mem := mem with [#5, el]:u64 <- R29
000003a6: mem := mem with [#5 + 8, el]:u64 <- R30
000003aa: R31 := #5
000003b0: R29 := R31
000003b8: mem := mem with [R31 + 0x10, el]:u64 <- R19
000003bd: R19 := 0x11000
000003c4: R0 := pad:64[mem[R19 + 0x10]]
000003cb: when 31:0[R0] <> 0 goto %000003c9
0000095b: goto %00000668

00000668:
0000066b: R0 := 0x10000
00000672: R0 := mem[R0 + 0xFC0, el]:u64
00000678: when R0 = 0 goto %00000676
0000095c: goto %0000068f

0000068f:
00000692: R0 := 0x11000
00000699: R0 := mem[R0 + 8, el]:u64
0000069e: R30 := 0x800
000006a1: call @__cxa_finalize with return %00000676

00000676:
0000067e: R30 := 0x804
00000680: call @deregister_tm_clones with return %00000682

00000682:
00000685: R0 := 1
0000068d: mem := mem with [R19 + 0x10] <- 7:0[R0]
0000095d: goto %000003c9

000003c9:
000003d3: R19 := mem[R31 + 0x10, el]:u64
000003da: R29 := mem[R31, el]:u64
000003df: R30 := mem[R31 + 8, el]:u64
000003e3: R31 := R31 + 0x20
000003e8: call R30 with noreturn

0000095e: sub __libc_csu_fini(__libc_csu_fini_result)
00000978: __libc_csu_fini_result :: out u32 = low:32[R0]

000005f4:
000005f7: call R30 with noreturn

0000095f: sub __libc_csu_init(__libc_csu_init_result)
00000979: __libc_csu_init_result :: out u32 = low:32[R0]

00000501:
00000505: #9 := R31 - 0x40
0000050b: mem := mem with [#9, el]:u64 <- R29
00000511: mem := mem with [#9 + 8, el]:u64 <- R30
00000515: R31 := #9
0000051b: R29 := R31
00000521: #10 := R31 + 0x10
00000527: mem := mem with [#10, el]:u64 <- R19
0000052d: mem := mem with [#10 + 8, el]:u64 <- R20
00000532: R20 := 0x10000
00000538: R20 := R20 + 0xD68
0000053e: #11 := R31 + 0x20
00000544: mem := mem with [#11, el]:u64 <- R21
0000054a: mem := mem with [#11 + 8, el]:u64 <- R22
0000054f: R21 := 0x10000
00000555: R21 := R21 + 0xD60
0000055c: R20 := R20 + ~R21 + 1
00000562: R22 := pad:64[31:0[R0]]
00000568: #12 := R31 + 0x30
0000056e: mem := mem with [#12, el]:u64 <- R23
00000574: mem := mem with [#12 + 8, el]:u64 <- R24
0000057a: R23 := R1
00000580: R24 := R2
00000585: R30 := 0x8E8
00000588: call @_init with return %0000058a

0000058a:
0000058e: #13 := ~(R20 ~>> 3)
00000592: #14 := ~(R20 ~>> 3) + 1
00000597: VF := extend:65[#14] <> extend:65[#13] + 1
0000059c: CF := pad:65[#14] <> pad:65[#13] + 1
000005a0: ZF := #14 = 0
000005a4: NF := 63:63[#14]
000005aa: when ZF goto %000005a8
00000960: goto %000005f9

000005f9:
000005ff: R20 :=

          >> 3 | R20 << 0x3D]
00000604: R19 := 0
00000961: goto %00000606

00000606:
0000060c: R3 := mem[R21 + (60:0[R19].0), el]:u64
00000612: R2 := R24
00000618: R19 := R19 + 1
0000061e: R1 := R23
00000624: R0 := pad:64[31:0[R22]]
00000629: R30 := 0x910
0000062c: call R3 with return %0000062e

0000062e:
00000632: #18 := ~R19
00000637: #19 := R20 + ~R19 + 1
0000063d: VF := extend:65[#19] <> extend:65[R20] + extend:65[#18] + 1
00000643: CF := pad:65[#19] <> pad:65[R20] + pad:65[#18] + 1
00000647: ZF := #19 = 0
0000064b: NF := 63:63[#19]
00000650: when ZF <> 1 goto %00000606
00000962: goto %000005a8

000005a8:
000005b1: #15 := R31 + 0x10
000005b6: R19 := mem[#15, el]:u64
000005bb: R20 := mem[#15 + 8, el]:u64
000005c1: #16 := R31 + 0x20
000005c6: R21 := mem[#16, el]:u64
000005cb: R22 := mem[#16 + 8, el]:u64
000005d1: #17 := R31 + 0x30
000005d6: R23 := mem[#17, el]:u64
000005db: R24 := mem[#17 + 8, el]:u64
000005e2: R29 := mem[R31, el]:u64
000005e7: R30 := mem[R31 + 8, el]:u64
000005eb: R31 := R31 + 0x40
000005f0: call R30 with noreturn

00000963: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
0000097a: __libc_start_main_main :: in u64 = R0
0000097b: __libc_start_main_arg2 :: in u32 = low:32[R1]
0000097c: __libc_start_main_arg3 :: in out u64 = R2
0000097d: __libc_start_main_auxv :: in out u64 = R3
0000097e: __libc_start_main_result :: out u32 = low:32[R0]

000002d4:
00000796: R16 := 0x10000
0000079d: R17 := mem[R16 + 0xF90, el]:u64
000007a3: R16 := R16 + 0xF90
000007a8: call R17 with noreturn

00000964: sub _fini(_fini_result)
0000097f: _fini_result :: out u32 = low:32[R0]

00000032:
00000036: #0 := R31 - 0x10
0000003c: mem := mem with [#0, el]:u64 <- R29
00000042: mem := mem with [#0 + 8, el]:u64 <- R30
00000046: R31 := #0
0000004c: R29 := R31
00000053: R29 := mem[R31, el]:u64
00000058: R30 := mem[R31 + 8, el]:u64
0000005c: R31 := R31 + 0x10
00000061: call R30 with noreturn

00000965: sub _init(_init_result)
00000980: _init_result :: out u32 = low:32[R0]

00000586:
0000087e: #21 := R31 - 0x10
00000884: mem := mem with [#21, el]:u64 <- R29
0000088a: mem := mem with [#21 + 8, el]:u64 <- R30
0000088e: R31 := #21
00000894: R29 := R31
00000899: R30 := 0x69C
0000089b: call @call_weak_fn with return %0000089d

0000089d:
000008a2: R29 := mem[R31, el]:u64
000008a7: R30 := mem[R31 + 8, el]:u64
000008ab: R31 := R31 + 0x10
000008b0: call R30 with noreturn

00000966: sub _start(_start_result)
00000981: _start_result :: out u32 = low:32[R0]

00000289:
0000028c: R29 := 0
00000291: R30 := 0
00000297: R5 := R0
0000029e: R1 := mem[R31, el]:u64
000002a4: R2 := R31 + 8
000002aa: R6 := R31
000002af: R0 := 0x10000
000002b6: R0 := mem[R0 + 0xFF0, el]:u64
000002bb: R3 := 0x10000
000002c2: R3 := mem[R3 + 0xFE8, el]:u64
000002c7: R4 := 0x10000
000002ce: R4 := mem[R4 + 0xFB0, el]:u64
000002d3: R30 := 0x744
000002d6: call @__libc_start_main with return %000002d8

000002d8:
000002db: R30 := 0x748
000002de: call @abort with return %00000967

00000967:
00000968: call @call_weak_fn with noreturn

00000969: sub abort()


000002dc:
000007c2: R16 := 0x10000
000007c9: R17 := mem[R16 + 0xFA0, el]:u64
000007cf: R16 := R16 + 0xFA0
000007d4: call R17 with noreturn

0000096a: sub call_weak_fn(call_weak_fn_result)
00000982: call_weak_fn_result :: out u32 = low:32[R0]

000002e0:
000002e3: R0 := 0x10000
000002ea: R0 := mem[R0 + 0xFD8, el]:u64
000002f0: when R0 = 0 goto %000002ee
0000096b: goto %000006df

000002ee:
000002f6: call R30 with noreturn

000006df:
000006e2: goto @__gmon_start__

000006e0:
000007ac: R16 := 0x10000
000007b3: R17 := mem[R16 + 0xF98, el]:u64
000007b9: R16 := R16 + 0xF98
000007be: call R17 with noreturn

0000096c: sub deregister_tm_clones(deregister_tm_clones_result)
00000983: deregister_tm_clones_result :: out u32 = low:32[R0]

000002fa:
000002fd: R0 := 0x11000
00000303: R0 := R0 + 0x10
00000308: R1 := 0x11000
0000030e: R1 := R1 + 0x10
00000314: #1 := ~R0
00000319: #2 := R1 + ~R0 + 1
0000031f: VF := extend:65[#2] <> extend:65[R1] + extend:65[#1] + 1
00000325: CF := pad:65[#2] <> pad:65[R1] + pad:65[#1] + 1
00000329: ZF := #2 = 0
0000032d: NF := 63:63[#2]
00000333: when ZF goto %00000331
0000096d: goto %000006c1

000006c1:
000006c4: R1 := 0x10000
000006cb: R1 := mem[R1 + 0xFB8, el]:u64
000006d0: when R1 = 0 goto %00000331
0000096e: goto %000006d4

00000331:
00000339: call R30 with noreturn

000006d4:
000006d8: R16 := R1
000006dd: call R16 with noreturn

0000096f: sub frame_dummy(frame_dummy_result)
00000984: frame_dummy_result :: out u32 = low:32[R0]

000003ea:
000003ec: call @register_tm_clones with noreturn

00000970: sub main(main_argc, main_argv, main_result)
00000985: main_argc :: in u32 = low:32[R0]
00000986: main_argv :: in out u64 = R1
00000987: main_result :: out u32 = low:32[R0]

000003ee:
000003f2: #6 := R31 - 0x30
000003f8: mem := mem with [#6, el]:u64 <- R29
000003fe: mem := mem with [#6 + 8, el]:u64 <- R30
00000402: R31 := #6
00000408: R29 := R31
0000040d: R0 := 0x10000
00000414: R0 := mem[R0 + 0xFE0, el]:u64
0000041b: R1 := mem[R0, el]:u64
00000423: mem := mem with [R31 + 0x28, el]:u64 <- R1
00000428: R1 := 0
0000042d: R0 := 4
00000432: R1 := 0x10000
00000439: R1 := mem[R1 + 0xFC8, el]:u64
0000043e: R30 := 0x848
00000441: call R1 with return %00000443

00000443:
00000449: mem := mem with [R31 + 0x18, el]:u64 <- R0
0000044f: R0 := R31 + 0x18
00000457: mem := mem with [R31 + 0x20, el]:u64 <- R0
0000045e: R0 := mem[R31 + 0x18, el]:u64
00000466: mem := mem with [R31 + 0x20, el]:u64 <- R0
0000046d: R0 := mem[R31 + 0x18, el]:u64
00000473: R1 := pad:64[31:0[R0]]
0000047a: R0 := mem[R31 + 0x20, el]:u64
00000482: mem := mem with [R0, el]:u32 <- 31:0[R1]
00000489: R0 := mem[R31 + 0x20, el]:u64
00000490: R0 := pad:64[mem[R0, el]:u32]
00000497: R0 :=

0000049f: mem := mem with [R31 + 0x18, el]:u64 <- R0
000004a6: R0 := 0x10000
000004ad: R0 := mem[R0 + 0xFE0, el]:u64
000004b4: R1 := mem[R31 + 0x28, el]:u64
000004bb: R2 := mem[R0, el]:u64
000004c1: #7 := ~R2
000004c6: #8 := R1 + ~R2 + 1
000004cc: VF := extend:65[#8] <> extend:65[R1] + extend:65[#7] + 1
000004d2: CF := pad:65[#8] <> pad:65[R1] + pad:65[#7] + 1
000004d6: ZF := #8 = 0
000004da: NF := 63:63[#8]
000004de: R1 := #8
000004e3: R2 := 0
000004e9: when ZF goto %000004e7
00000971: goto %00000654

00000654:
00000657: R0 := 0x10000
0000065e: R0 := mem[R0 + 0xFD0, el]:u64
00000663: R30 := 0x8A8
00000666: call R0 with return %000004e7

000004e7:
000004f1: R29 := mem[R31, el]:u64
000004f6: R30 := mem[R31 + 8, el]:u64
000004fa: R31 := R31 + 0x30
000004ff: call R30 with noreturn

00000972: sub register_tm_clones(register_tm_clones_result)
00000988: register_tm_clones_result :: out u32 = low:32[R0]

0000033b:
0000033e: R0 := 0x11000
00000344: R0 := R0 + 0x10
00000349: R1 := 0x11000
0000034f: R1 := R1 + 0x10
00000356: R1 := R1 + ~R0 + 1
0000035d: R2 := 0.0:0[R1 >> 0x3F | R1 << 1]
00000364: R1 := R2 + (R1 ~>> 3)
0000036a: #3 := ~(R1 ~>> 1)
0000036e: #4 := ~(R1 ~>> 1) + 1
00000373: VF := extend:65[#4] <> extend:65[#3] + 1
00000378: CF := pad:65[#4] <> pad:65[#3] + 1
0000037c: ZF := #4 = 0
00000380: NF := 63:63[#4]
00000388: R1 :=

          >> 1 | R1 << 0x3F]
0000038e: when ZF goto %0000038c
00000973: goto %000006a3

000006a3:
000006a6: R2 := 0x10000
000006ad: R2 := mem[R2 + 0xFF8, el]:u64
000006b2: when R2 = 0 goto %0000038c
00000974: goto %000006b6

0000038c:
00000394: call R30 with noreturn

000006b6:
000006ba: R16 := R2
000006bf: call R16 with noreturn
