0000037f: program
00000351: sub __cxa_finalize(__cxa_finalize_result)
00000380: __cxa_finalize_result :: out u32 = R0

00000298:
000002f3: R16 := 0x10000
000002f7: R17 := mem[R16 + 0xFA0, el]:u64
000002fb: R16 := R16 + 0xFA0
000002ff: call R17 with noreturn

00000352: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
00000381: __do_global_dtors_aux_result :: out u32 = R0

000000d9:
000000db: mem := mem with [R31 - 0x20, el]:u64 <- R29
000000dd: mem := mem with [R31 - 0x18, el]:u64 <- R30
000000df: R31 := R31 - 0x20
000000e3: R29 := R31
000000e7: mem := mem with [R31 + 0x10, el]:u64 <- R19
000000eb: R19 := 0x11000
000000ef: #28 := pad:64[mem[R19 + 0x10]]
000000f1: R0 := 0
000000f3: R0 := R0 & 0xFFFFFFFF00000000 | pad:64[#28]
000000fc: #29 := extract:31:0[R0] <> 0
000000f8: when #29 goto %000000f6
0000036e: goto %0000026d

0000026d:
0000026f: R0 := 0x10000
00000273: R0 := mem[R0 + 0xFD8, el]:u64
0000027c: #97 := R0 = 0
00000278: when #97 goto %00000276
0000036f: goto %0000028d

0000028d:
0000028f: R0 := 0x11000
00000293: R0 := mem[R0 + 8, el]:u64
00000297: R30 := 0x700
0000029a: call @__cxa_finalize with return %00000276

00000276:
0000027f: R30 := 0x704
00000281: call @deregister_tm_clones with return %00000283

00000283:
00000285: R0 := 0
00000287: R0 := R0 & 0xFFFFFFFF00000000 | 1
0000028b: mem := mem with [R19 + 0x10] <- low:8[extract:31:0[R0]]
00000370: goto %000000f6

000000f6:
000000ff: R19 := mem[R31 + 0x10, el]:u64
00000103: R29 := mem[R31, el]:u64
00000105: R30 := mem[R31 + 8, el]:u64
00000107: R31 := R31 + 0x20
0000010b: call R30 with noreturn

00000356: sub __libc_csu_fini(__libc_csu_fini_result)
00000382: __libc_csu_fini_result :: out u32 = R0

00000207:
00000209: call R30 with noreturn

00000357: sub __libc_csu_init(__libc_csu_init_result)
00000383: __libc_csu_init_result :: out u32 = R0

00000189:
0000018b: mem := mem with [R31 - 0x40, el]:u64 <- R29
0000018d: mem := mem with [R31 - 0x38, el]:u64 <- R30
0000018f: R31 := R31 - 0x40
00000193: R29 := R31
00000197: mem := mem with [R31, el]:u64 <- R31 + 0x20
00000199: mem := mem with [R31, el]:u64 <- R31 + 0x28
0000019d: R20 := 0x10000
000001a1: R20 := R20 + 0xD90
000001a5: mem := mem with [R31, el]:u64 <- R31 + 0x40
000001a7: mem := mem with [R31, el]:u64 <- R31 + 0x48
000001ab: R21 := 0x10000
000001af: R21 := R21 + 0xD88
000001b3: R20 := R20 - R21
000001b7: #56 := extract:31:0[R0]
000001b9: R22 := 0
000001bb: R22 := R22 & 0xFFFFFFFF00000000 | pad:64[#56]
000001bf: mem := mem with [R31, el]:u64 <- R31 + 0x60
000001c1: mem := mem with [R31, el]:u64 <- R31 + 0x68
000001c5: R23 := R1
000001c9: R24 := R2
000001cd: R30 := 0x7B8
000001d0: call @_init with return %000001d2

000001d2:
000001d4: #67 := ~(R20 ~>> 3) + 1
000001d6: NF := extract:63:63[#67]
000001d8: VF := ~extract:63:63[~(R20 ~>> 3)] & extract:63:63[#67]
000001da: ZF := #67 = 0
000001dc: CF := extract:63:63[~(R20 ~>> 3)] & ~extract:63:63[#67]
000001e5: #69 := ZF
000001e1: when #69 goto %000001df
00000371: goto %0000020c

0000020c:
0000020e: R20 := R20 >> 3
00000212: R19 := 0
00000372: goto %00000214

00000214:
00000216: R3 := mem[R21 + (R19 << 3), el]:u64
0000021a: R2 := R24
0000021e: R19 := R19 + 1
00000222: R1 := R23
00000226: #84 := extract:31:0[R22]
00000228: R0 := 0
0000022a: R0 := R0 & 0xFFFFFFFF00000000 | pad:64[#84]
0000022e: R30 := 0x7E0
00000230: call R3 with return %00000233

00000233:
00000235: #88 := 1 + ~R19 + R20
00000237: NF := extract:63:63[#88]
00000239: VF := extract:63:63[R20] & extract:63:63[~R19] &
          ~extract:63:63[#88] | ~extract:63:63[R20] & ~extract:63:63[~R19] &
          extract:63:63[#88]
0000023b: ZF := #88 = 0
0000023d: CF := extract:63:63[R20] & extract:63:63[~R19] |
          extract:63:63[~R19] & ~extract:63:63[#88] | extract:63:63[R20] &
          ~extract:63:63[#88]
00000245: #90 := ~ZF <> 0
00000241: when #90 goto %00000214
00000373: goto %000001df

000001df:
000001e8: R19 := mem[R31 + 0x10, el]:u64
000001ea: R20 := mem[R31 + 0x18, el]:u64
000001ee: R21 := mem[R31 + 0x20, el]:u64
000001f0: R22 := mem[R31 + 0x28, el]:u64
000001f4: R23 := mem[R31 + 0x30, el]:u64
000001f6: R24 := mem[R31 + 0x38, el]:u64
000001fa: R29 := mem[R31, el]:u64
000001fc: R30 := mem[R31 + 8, el]:u64
000001fe: R31 := R31 + 0x40
00000202: call R30 with noreturn

0000035b: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
00000384: __libc_start_main_main :: in u64 = R0
00000385: __libc_start_main_arg2 :: in u32 = R1
00000386: __libc_start_main_arg3 :: in out u64 = R2
00000387: __libc_start_main_auxv :: in out u64 = R3
00000388: __libc_start_main_result :: out u32 = R0

00000055:
00000303: R16 := 0x10000
00000307: R17 := mem[R16 + 0xFA8, el]:u64
0000030b: R16 := R16 + 0xFA8
0000030f: call R17 with noreturn

0000035c: sub _fini(_fini_result)
00000389: _fini_result :: out u32 = R0

00000009:
0000000b: mem := mem with [R31 - 0x10, el]:u64 <- R29
0000000d: mem := mem with [R31 - 8, el]:u64 <- R30
0000000f: R31 := R31 - 0x10
00000013: R29 := R31
00000017: R29 := mem[R31, el]:u64
00000019: R30 := mem[R31 + 8, el]:u64
0000001b: R31 := R31 + 0x10
0000001f: call R30 with noreturn

0000035d: sub _init(_init_result)
0000038a: _init_result :: out u32 = R0

000001ce:
00000333: mem := mem with [R31 - 0x10, el]:u64 <- R29
00000335: mem := mem with [R31 - 8, el]:u64 <- R30
00000337: R31 := R31 - 0x10
0000033b: R29 := R31
0000033f: R30 := 0x5A4
00000341: call @call_weak_fn with return %00000343

00000343:
00000345: R29 := mem[R31, el]:u64
00000347: R30 := mem[R31 + 8, el]:u64
00000349: R31 := R31 + 0x10
0000034d: call R30 with noreturn

0000035e: sub _start(_start_result)
0000038b: _start_result :: out u32 = R0

00000022:
00000024: R29 := 0
00000028: R30 := 0
0000002c: R5 := R0
00000030: R1 := mem[R31, el]:u64
00000034: R2 := R31 + 8
00000038: R6 := R31
0000003c: R0 := 0x10000
00000040: R0 := mem[R0 + 0xFF0, el]:u64
00000044: R3 := 0x10000
00000048: R3 := mem[R3 + 0xFE8, el]:u64
0000004c: R4 := 0x10000
00000050: R4 := mem[R4 + 0xFC8, el]:u64
00000054: R30 := 0x644
00000057: call @__libc_start_main with return %00000059

00000059:
0000005b: R30 := 0x648
0000005e: call @abort with return %00000374

00000374:
00000375: call @call_weak_fn with noreturn

00000361: sub abort()


0000005c:
00000323: R16 := 0x10000
00000327: R17 := mem[R16 + 0xFB8, el]:u64
0000032b: R16 := R16 + 0xFB8
0000032f: call R17 with noreturn

00000362: sub call_weak_fn(call_weak_fn_result)
0000038c: call_weak_fn_result :: out u32 = R0

00000060:
00000062: R0 := 0x10000
00000066: R0 := mem[R0 + 0xFE0, el]:u64
0000006f: #5 := R0 = 0
0000006b: when #5 goto %00000069
00000376: goto %000002ce

00000069:
00000072: call R30 with noreturn

000002ce:
000002d1: goto @__gmon_start__

000002cf:
00000313: R16 := 0x10000
00000317: R17 := mem[R16 + 0xFB0, el]:u64
0000031b: R16 := R16 + 0xFB0
0000031f: call R17 with noreturn

00000364: sub deregister_tm_clones(deregister_tm_clones_result)
0000038d: deregister_tm_clones_result :: out u32 = R0

00000077:
00000079: R0 := 0x11000
0000007d: R0 := R0 + 0x10
00000081: R1 := 0x11000
00000085: R1 := R1 + 0x10
00000089: #9 := 1 + ~R0 + R1
0000008b: NF := extract:63:63[#9]
0000008d: VF := extract:63:63[R1] & extract:63:63[~R0] & ~extract:63:63[#9] |
          ~extract:63:63[R1] & ~extract:63:63[~R0] & extract:63:63[#9]
0000008f: ZF := #9 = 0
00000091: CF := extract:63:63[R1] & extract:63:63[~R0] | extract:63:63[~R0] &
          ~extract:63:63[#9] | extract:63:63[R1] & ~extract:63:63[#9]
0000009a: #11 := ZF
00000096: when #11 goto %00000094
00000377: goto %000002b5

000002b5:
000002b7: R1 := 0x10000
000002bb: R1 := mem[R1 + 0xFD0, el]:u64
000002c3: #103 := R1 = 0
000002bf: when #103 goto %00000094
00000378: goto %000002c5

00000094:
0000009d: call R30 with noreturn

000002c5:
000002c7: R16 := R1
000002cb: call R16 with noreturn

00000367: sub frame_dummy(frame_dummy_result)
0000038e: frame_dummy_result :: out u32 = R0

0000010e:
00000110: call @register_tm_clones with noreturn

00000368: sub main(main_argc, main_argv, main_result)
0000038f: main_argc :: in u32 = R0
00000390: main_argv :: in out u64 = R1
00000391: main_result :: out u32 = R0

00000112:
00000114: R31 := R31 - 0x10
00000118: R0 := 0
0000011a: R0 := R0 & 0xFFFFFFFF00000000 | 2
0000011e: mem := mem with [R31 + 8, el]:u32 <- low:32[extract:31:0[R0]]
00000122: mem := mem with [R31 + 0xC, el]:u32 <- 0
00000126: #34 := pad:64[mem[R31 + 8, el]:u32]
00000128: R0 := 0
0000012a: R0 := R0 & 0xFFFFFFFF00000000 | pad:64[#34]
0000012e: #35 := extend:64[extract:31:0[R0]]
00000130: NF := extract:63:63[#35]
00000132: VF := extract:31:31[extract:31:0[R0]] & ~extract:63:63[#35]
00000134: ZF := #35 = 0
00000136: CF := extract:31:31[extract:31:0[R0]] |
          extract:31:31[extract:31:0[R0]] & ~extract:63:63[#35] |
          ~extract:63:63[#35]
0000013f: #37 := ~ZF <> 0
0000013b: when #37 goto %00000139
00000379: goto %0000025f

00000139:
00000142: #38 := pad:64[mem[R31 + 8, el]:u32]
00000144: R0 := 0
00000146: R0 := R0 & 0xFFFFFFFF00000000 | pad:64[#38]
0000014a: #39 := 0xFFFFFFFFFFFFFFFF + extend:64[extract:31:0[R0]]
0000014c: NF := extract:63:63[#39]
0000014e: VF := extract:31:31[extract:31:0[R0]] & ~extract:63:63[#39]
00000150: ZF := #39 = 0
00000152: CF := extract:31:31[extract:31:0[R0]] |
          extract:31:31[extract:31:0[R0]] & ~extract:63:63[#39] |
          ~extract:63:63[#39]
0000015b: #41 := ~ZF <> 0
00000157: when #41 goto %00000155
0000037a: goto %00000251

00000155:
0000015e: #42 := pad:64[mem[R31 + 8, el]:u32]
00000160: R0 := 0
00000162: R0 := R0 & 0xFFFFFFFF00000000 | pad:64[#42]
00000166: #43 := 0xFFFFFFFFFFFFFFFE + extend:64[extract:31:0[R0]]
00000168: NF := extract:63:63[#43]
0000016a: VF := extract:31:31[extract:31:0[R0]] & ~extract:63:63[#43]
0000016c: ZF := #43 = 0
0000016e: CF := extract:31:31[extract:31:0[R0]] |
          extract:31:31[extract:31:0[R0]] & ~extract:63:63[#43] |
          ~extract:63:63[#43]
00000177: #45 := ~ZF <> 0
00000173: when #45 goto %00000171
0000037b: goto %00000247

00000247:
00000249: R0 := 0
0000024b: R0 := R0 & 0xFFFFFFFF00000000 | 7
0000024f: mem := mem with [R31 + 0xC, el]:u32 <- low:32[extract:31:0[R0]]
0000037c: goto %00000171

00000251:
00000253: R0 := 0
00000255: R0 := R0 & 0xFFFFFFFF00000000 | 5
00000259: mem := mem with [R31 + 0xC, el]:u32 <- low:32[extract:31:0[R0]]
0000025d: goto %00000171

0000025f:
00000261: R0 := 0
00000263: R0 := R0 & 0xFFFFFFFF00000000 | 3
00000267: mem := mem with [R31 + 0xC, el]:u32 <- low:32[extract:31:0[R0]]
0000026b: goto %00000171

00000171:
0000017a: R0 := 0
0000017c: R0 := R0 & 0xFFFFFFFF00000000
00000180: R31 := R31 + 0x10
00000184: call R30 with noreturn

0000036d: sub register_tm_clones(register_tm_clones_result)
00000392: register_tm_clones_result :: out u32 = R0

000000a0:
000000a2: R0 := 0x11000
000000a6: R0 := R0 + 0x10
000000aa: R1 := 0x11000
000000ae: R1 := R1 + 0x10
000000b2: R1 := R1 - R0
000000b6: R2 := R1 >> 0x3F
000000ba: R1 := R2 + (R1 ~>> 3)
000000be: #22 := ~(R1 ~>> 1) + 1
000000c0: NF := extract:63:63[#22]
000000c2: VF := ~extract:63:63[~(R1 ~>> 1)] & extract:63:63[#22]
000000c4: ZF := #22 = 0
000000c6: CF := extract:63:63[~(R1 ~>> 1)] & ~extract:63:63[#22]
000000ca: R1 := R1 >> 1
000000d3: #25 := ZF
000000cf: when #25 goto %000000cd
0000037d: goto %0000029c

0000029c:
0000029e: R2 := 0x10000
000002a2: R2 := mem[R2 + 0xFF8, el]:u64
000002aa: #99 := R2 = 0
000002a6: when #99 goto %000000cd
0000037e: goto %000002ac

000000cd:
000000d6: call R30 with noreturn

000002ac:
000002ae: R16 := R2
000002b2: call R16 with noreturn
