00000967: program
00000949: sub __cxa_finalize(__cxa_finalize_result)
00000968: __cxa_finalize_result :: out u32 = low:32[R0]

00000693:
00000774: R16 := 0x11000
0000077b: R17 := mem[R16, el]:u64
00000781: R16 := R16
00000786: call R17 with noreturn

0000094a: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
00000969: __do_global_dtors_aux_result :: out u32 = low:32[R0]

0000038a:
0000038e: #5 := R31 - 0x20
00000394: mem := mem with [#5, el]:u64 <- R29
0000039a: mem := mem with [#5 + 8, el]:u64 <- R30
0000039e: R31 := #5
000003a4: R29 := R31
000003ac: mem := mem with [R31 + 0x10, el]:u64 <- R19
000003b1: R19 := 0x11000
000003b8: R0 := pad:64[mem[R19 + 0x30]]
000003bf: when 31:0[R0] <> 0 goto %000003bd
0000094b: goto %0000065c

0000065c:
0000065f: R0 := 0x10000
00000666: R0 := mem[R0 + 0xFC0, el]:u64
0000066c: when R0 = 0 goto %0000066a
0000094c: goto %00000683

00000683:
00000686: R0 := 0x11000
0000068d: R0 := mem[R0 + 0x28, el]:u64
00000692: R30 := 0x700
00000695: call @__cxa_finalize with return %0000066a

0000066a:
00000672: R30 := 0x704
00000674: call @deregister_tm_clones with return %00000676

00000676:
00000679: R0 := 1
00000681: mem := mem with [R19 + 0x30] <- 7:0[R0]
0000094d: goto %000003bd

000003bd:
000003c7: R19 := mem[R31 + 0x10, el]:u64
000003ce: R29 := mem[R31, el]:u64
000003d3: R30 := mem[R31 + 8, el]:u64
000003d7: R31 := R31 + 0x20
000003dc: call R30 with noreturn

0000094e: sub __libc_csu_fini(__libc_csu_fini_result)
0000096a: __libc_csu_fini_result :: out u32 = low:32[R0]

000005bd:
000005c0: call R30 with noreturn

0000094f: sub __libc_csu_init(__libc_csu_init_result)
0000096b: __libc_csu_init_result :: out u32 = low:32[R0]

000004ca:
000004ce: #9 := R31 - 0x40
000004d4: mem := mem with [#9, el]:u64 <- R29
000004da: mem := mem with [#9 + 8, el]:u64 <- R30
000004de: R31 := #9
000004e4: R29 := R31
000004ea: #10 := R31 + 0x10
000004f0: mem := mem with [#10, el]:u64 <- R19
000004f6: mem := mem with [#10 + 8, el]:u64 <- R20
000004fb: R20 := 0x10000
00000501: R20 := R20 + 0xDC0
00000507: #11 := R31 + 0x20
0000050d: mem := mem with [#11, el]:u64 <- R21
00000513: mem := mem with [#11 + 8, el]:u64 <- R22
00000518: R21 := 0x10000
0000051e: R21 := R21 + 0xDB8
00000525: R20 := R20 + ~R21 + 1
0000052b: R22 := pad:64[31:0[R0]]
00000531: #12 := R31 + 0x30
00000537: mem := mem with [#12, el]:u64 <- R23
0000053d: mem := mem with [#12 + 8, el]:u64 <- R24
00000543: R23 := R1
00000549: R24 := R2
0000054e: R30 := 0x7E0
00000551: call @_init with return %00000553

00000553:
00000557: #13 := ~(R20 ~>> 3)
0000055b: #14 := ~(R20 ~>> 3) + 1
00000560: VF := extend:65[#14] <> extend:65[#13] + 1
00000565: CF := pad:65[#14] <> pad:65[#13] + 1
00000569: ZF := #14 = 0
0000056d: NF := 63:63[#14]
00000573: when ZF goto %00000571
00000950: goto %000005c2

000005c2:
000005c8: R20 :=

          >> 3 | R20 << 0x3D]
000005cd: R19 := 0
00000951: goto %000005cf

000005cf:
000005d5: R3 := mem[R21 + (60:0[R19].0), el]:u64
000005db: R2 := R24
000005e1: R19 := R19 + 1
000005e7: R1 := R23
000005ed: R0 := pad:64[31:0[R22]]
000005f2: R30 := 0x808
000005f5: call R3 with return %000005f7

000005f7:
000005fb: #18 := ~R19
00000600: #19 := R20 + ~R19 + 1
00000606: VF := extend:65[#19] <> extend:65[R20] + extend:65[#18] + 1
0000060c: CF := pad:65[#19] <> pad:65[R20] + pad:65[#18] + 1
00000610: ZF := #19 = 0
00000614: NF := 63:63[#19]
00000619: when ZF <> 1 goto %000005cf
00000952: goto %00000571

00000571:
0000057a: #15 := R31 + 0x10
0000057f: R19 := mem[#15, el]:u64
00000584: R20 := mem[#15 + 8, el]:u64
0000058a: #16 := R31 + 0x20
0000058f: R21 := mem[#16, el]:u64
00000594: R22 := mem[#16 + 8, el]:u64
0000059a: #17 := R31 + 0x30
0000059f: R23 := mem[#17, el]:u64
000005a4: R24 := mem[#17 + 8, el]:u64
000005ab: R29 := mem[R31, el]:u64
000005b0: R30 := mem[R31 + 8, el]:u64
000005b4: R31 := R31 + 0x40
000005b9: call R30 with noreturn

00000953: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
0000096c: __libc_start_main_main :: in u64 = R0
0000096d: __libc_start_main_arg2 :: in u32 = low:32[R1]
0000096e: __libc_start_main_arg3 :: in out u64 = R2
0000096f: __libc_start_main_auxv :: in out u64 = R3
00000970: __libc_start_main_result :: out u32 = low:32[R0]

000002c8:
0000078a: R16 := 0x11000
00000791: R17 := mem[R16 + 8, el]:u64
00000797: R16 := R16 + 8
0000079c: call R17 with noreturn

00000954: sub _fini(_fini_result)
00000971: _fini_result :: out u32 = low:32[R0]

0000002e:
00000032: #0 := R31 - 0x10
00000038: mem := mem with [#0, el]:u64 <- R29
0000003e: mem := mem with [#0 + 8, el]:u64 <- R30
00000042: R31 := #0
00000048: R29 := R31
0000004f: R29 := mem[R31, el]:u64
00000054: R30 := mem[R31 + 8, el]:u64
00000058: R31 := R31 + 0x10
0000005d: call R30 with noreturn

00000955: sub _init(_init_result)
00000972: _init_result :: out u32 = low:32[R0]

0000054f:
00000870: #21 := R31 - 0x10
00000876: mem := mem with [#21, el]:u64 <- R29
0000087c: mem := mem with [#21 + 8, el]:u64 <- R30
00000880: R31 := #21
00000886: R29 := R31
0000088b: R30 := 0x5A4
0000088d: call @call_weak_fn with return %0000088f

0000088f:
00000894: R29 := mem[R31, el]:u64
00000899: R30 := mem[R31 + 8, el]:u64
0000089d: R31 := R31 + 0x10
000008a2: call R30 with noreturn

00000956: sub _start(_start_result)
00000973: _start_result :: out u32 = low:32[R0]

0000027d:
00000280: R29 := 0
00000285: R30 := 0
0000028b: R5 := R0
00000292: R1 := mem[R31, el]:u64
00000298: R2 := R31 + 8
0000029e: R6 := R31
000002a3: R0 := 0x10000
000002aa: R0 := mem[R0 + 0xFD8, el]:u64
000002af: R3 := 0x10000
000002b6: R3 := mem[R3 + 0xFD0, el]:u64
000002bb: R4 := 0x10000
000002c2: R4 := mem[R4 + 0xFB0, el]:u64
000002c7: R30 := 0x644
000002ca: call @__libc_start_main with return %000002cc

000002cc:
000002cf: R30 := 0x648
000002d2: call @abort with return %00000957

00000957:
00000958: call @call_weak_fn with noreturn

00000959: sub abort()


000002d0:
000007b6: R16 := 0x11000
000007bd: R17 := mem[R16 + 0x18, el]:u64
000007c3: R16 := R16 + 0x18
000007c8: call R17 with noreturn

0000095a: sub call_weak_fn(call_weak_fn_result)
00000974: call_weak_fn_result :: out u32 = low:32[R0]

000002d4:
000002d7: R0 := 0x10000
000002de: R0 := mem[R0 + 0xFC8, el]:u64
000002e4: when R0 = 0 goto %000002e2
0000095b: goto %000006d3

000002e2:
000002ea: call R30 with noreturn

000006d3:
000006d6: goto @__gmon_start__

000006d4:
000007a0: R16 := 0x11000
000007a7: R17 := mem[R16 + 0x10, el]:u64
000007ad: R16 := R16 + 0x10
000007b2: call R17 with noreturn

0000095c: sub deregister_tm_clones(deregister_tm_clones_result)
00000975: deregister_tm_clones_result :: out u32 = low:32[R0]

000002ee:
000002f1: R0 := 0x11000
000002f7: R0 := R0 + 0x30
000002fc: R1 := 0x11000
00000302: R1 := R1 + 0x30
00000308: #1 := ~R0
0000030d: #2 := R1 + ~R0 + 1
00000313: VF := extend:65[#2] <> extend:65[R1] + extend:65[#1] + 1
00000319: CF := pad:65[#2] <> pad:65[R1] + pad:65[#1] + 1
0000031d: ZF := #2 = 0
00000321: NF := 63:63[#2]
00000327: when ZF goto %00000325
0000095d: goto %000006b5

000006b5:
000006b8: R1 := 0x10000
000006bf: R1 := mem[R1 + 0xFB8, el]:u64
000006c4: when R1 = 0 goto %00000325
0000095e: goto %000006c8

00000325:
0000032d: call R30 with noreturn

000006c8:
000006cc: R16 := R1
000006d1: call R16 with noreturn

0000095f: sub frame_dummy(frame_dummy_result)
00000976: frame_dummy_result :: out u32 = low:32[R0]

000003de:
000003e0: call @register_tm_clones with noreturn

00000960: sub main(main_argc, main_argv, main_result)
00000977: main_argc :: in u32 = low:32[R0]
00000978: main_argv :: in out u64 = R1
00000979: main_result :: out u32 = low:32[R0]

000003e2:
000003e6: R31 := R31 - 0x10
000003ed: mem := mem with [R31 + 0xC, el]:u32 <- 0
000003f2: R8 := 2
000003fa: mem := mem with [R31 + 8, el]:u32 <- 31:0[R8]
00000401: mem := mem with [R31 + 4, el]:u32 <- 0
00000408: R8 := pad:64[mem[R31 + 8, el]:u32]
0000040e: #6 := 31:0[R8] + 0
00000413: VF := extend:33[#6] <> extend:33[31:0[R8]] + 0
00000418: CF := pad:33[#6] <> pad:33[31:0[R8]] - 0x100000000
0000041c: ZF := #6 = 0
00000420: NF := 31:31[#6]
00000424: R8 := pad:64[#6]
00000430: when ZF goto %00000429
00000431: goto %0000042c

0000042c:
0000042d: R8 := 1
00000433: goto %0000042f

00000429:
0000042a: R8 := 0
00000432: goto %0000042f

0000042f:
00000439: when 0:0[R8] goto %00000437
00000961: goto %00000647

00000437:
00000441: R8 := pad:64[mem[R31 + 8, el]:u32]
00000447: #7 := 31:0[R8] - 1
0000044c: VF := extend:33[#7] <> extend:33[31:0[R8]] - 1
00000451: CF := pad:33[#7] <> pad:33[31:0[R8]] + 0xFFFFFFFF
00000455: ZF := #7 = 0
00000459: NF := 31:31[#7]
0000045d: R8 := pad:64[#7]
00000469: when ZF goto %00000462
0000046a: goto %00000465

00000465:
00000466: R8 := 1
0000046c: goto %00000468

00000462:
00000463: R8 := 0
0000046b: goto %00000468

00000468:
00000472: when 0:0[R8] goto %00000470
00000962: goto %00000632

00000470:
0000047a: R8 := pad:64[mem[R31 + 8, el]:u32]
00000480: #8 := 31:0[R8] - 2
00000485: VF := extend:33[#8] <> extend:33[31:0[R8]] - 2
0000048a: CF := pad:33[#8] <> pad:33[31:0[R8]] + 0xFFFFFFFE
0000048e: ZF := #8 = 0
00000492: NF := 31:31[#8]
00000496: R8 := pad:64[#8]
000004a2: when ZF goto %0000049b
000004a3: goto %0000049e

0000049e:
0000049f: R8 := 1
000004a5: goto %000004a1

0000049b:
0000049c: R8 := 0
000004a4: goto %000004a1

000004a1:
000004ab: when 0:0[R8] goto %000004a9
00000963: goto %0000061d

0000061d:
00000620: goto %0000061e

0000061e:
00000624: R8 := 7
0000062c: mem := mem with [R31 + 4, el]:u32 <- 31:0[R8]
00000630: goto %000004a9

000004a9:
000004b1: goto %000004af

00000632:
00000635: goto %00000633

00000633:
00000639: R8 := 5
00000641: mem := mem with [R31 + 4, el]:u32 <- 31:0[R8]
00000645: goto %000004af

000004af:
000004b5: goto %000004b3

00000647:
0000064a: goto %00000648

00000648:
0000064e: R8 := 3
00000656: mem := mem with [R31 + 4, el]:u32 <- 31:0[R8]
0000065a: goto %000004b3

000004b3:
000004bb: R0 := pad:64[mem[R31 + 0xC, el]:u32]
000004c1: R31 := R31 + 0x10
000004c6: call R30 with noreturn

00000964: sub register_tm_clones(register_tm_clones_result)
0000097a: register_tm_clones_result :: out u32 = low:32[R0]

0000032f:
00000332: R0 := 0x11000
00000338: R0 := R0 + 0x30
0000033d: R1 := 0x11000
00000343: R1 := R1 + 0x30
0000034a: R1 := R1 + ~R0 + 1
00000351: R2 := 0.0:0[R1 >> 0x3F | R1 << 1]
00000358: R1 := R2 + (R1 ~>> 3)
0000035e: #3 := ~(R1 ~>> 1)
00000362: #4 := ~(R1 ~>> 1) + 1
00000367: VF := extend:65[#4] <> extend:65[#3] + 1
0000036c: CF := pad:65[#4] <> pad:65[#3] + 1
00000370: ZF := #4 = 0
00000374: NF := 63:63[#4]
0000037c: R1 :=

          >> 1 | R1 << 0x3F]
00000382: when ZF goto %00000380
00000965: goto %00000697

00000697:
0000069a: R2 := 0x10000
000006a1: R2 := mem[R2 + 0xFE0, el]:u64
000006a6: when R2 = 0 goto %00000380
00000966: goto %000006aa

00000380:
00000388: call R30 with noreturn

000006aa:
000006ae: R16 := R2
000006b3: call R16 with noreturn
