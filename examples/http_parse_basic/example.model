*** MODEL
#4 -> 
#4@0 -> 52bv64
$buf_addr -> 131200bv64
$password_addr -> 131168bv64
$stext_addr -> 131176bv64
Gamma_#4 -> 
Gamma_malloc_base -> 
Gamma_malloc_base@0 -> 
Gamma_malloc_count -> 
Gamma_malloc_count@0 -> 
Gamma_malloc_end -> 
Gamma_malloc_end@0 -> 
Gamma_malloc_id -> 
Gamma_mem -> (_ (as-array) (k!2))
Gamma_mem@0 -> (_ (as-array) (k!2))
Gamma_mem@1 -> (_ (as-array) (k!18))
Gamma_mem@10 -> (_ (as-array) (k!21))
Gamma_mem@11 -> (_ (as-array) (k!21))
Gamma_mem@2 -> (_ (as-array) (k!18))
Gamma_mem@3 -> (_ (as-array) (k!21))
Gamma_mem@4 -> (_ (as-array) (k!21))
Gamma_mem@5 -> (_ (as-array) (k!21))
Gamma_mem@6 -> (_ (as-array) (k!21))
Gamma_mem@7 -> (_ (as-array) (k!21))
Gamma_mem@8 -> (_ (as-array) (k!21))
Gamma_mem@9 -> (_ (as-array) (k!21))
Gamma_R0 -> 
Gamma_R0@0 -> true
Gamma_R0@1 -> true
Gamma_R0@2 -> true
Gamma_R0@3 -> true
Gamma_R0@4 -> true
Gamma_R0@5 -> true
Gamma_R0@6 -> true
Gamma_R0@7 -> true
Gamma_R1 -> 
Gamma_R16 -> 
Gamma_R16@0 -> 
Gamma_R16@1 -> 
Gamma_R16@2 -> 
Gamma_R16@3 -> 
Gamma_R16@4 -> 
Gamma_R16@5 -> 
Gamma_R17 -> 
Gamma_R17@0 -> 
Gamma_R17@1 -> 
Gamma_R17@2 -> 
Gamma_R17@3 -> 
Gamma_R17@4 -> 
Gamma_R17@5 -> 
Gamma_R19 -> false
Gamma_R19@0 -> true
Gamma_R19@1 -> true
Gamma_R2 -> 
Gamma_R29 -> false
Gamma_R30 -> false
Gamma_R31 -> 
Gamma_stack -> (_ (as-array) (k!6))
Gamma_stack@0 -> (_ (as-array) (k!7))
Gamma_stack@1 -> (_ (as-array) (k!9))
Gamma_stack@2 -> (_ (as-array) (k!11))
Gamma_stack@3 -> (_ (as-array) (k!13))
Gamma_stack@4 -> (_ (as-array) (k!20))
Gamma_stack@5 -> (_ (as-array) (k!20))
malloc_base -> 
malloc_base@0 -> (store (_ (as (const) (Array (Int) (bv64))) 131183bv64) 1 (_ 354064218980352 64))
malloc_count -> 0
malloc_count@0 -> 1
malloc_end -> 
malloc_end@0 -> (store (_ (as (const) (Array (Int) (bv64))) 131183bv64) 1 (_ 354064218980363 64))
malloc_id -> 
mem -> (_ (as-array) (k!3))
mem@0 -> (_ (as-array) (k!3))
mem@1 -> (_ (as-array) (k!17))
mem@10 -> (_ (as-array) (k!22))
mem@11 -> (_ (as-array) (k!22))
mem@2 -> (_ (as-array) (k!17))
mem@3 -> (_ (as-array) (k!19))
mem@4 -> (_ (as-array) (k!19))
mem@5 -> (_ (as-array) (k!19))
mem@6 -> (_ (as-array) (k!19))
mem@7 -> (_ (as-array) (k!107))
mem@8 -> (_ (as-array) (k!107))
mem@9 -> (_ (as-array) (k!107))
R0 -> 
R0@0 -> 354064218980352bv64
R0@1 -> 131200bv64
R0@10 -> 354064218980354bv64
R0@11 -> 131200bv64
R0@12 -> 131200bv64
R0@13 -> 354064218980352bv64
R0@14 -> 2bv64
R0@15 -> 131200bv64
R0@16 -> 354064218980352bv64
R0@2 -> 131200bv64
R0@3 -> 131176bv64
R0@4 -> 6bv64
R0@5 -> 131200bv64
R0@6 -> 354064218980352bv64
R0@7 -> 131200bv64
R0@8 -> 354064218980352bv64
R0@9 -> 354064218980354bv64
R1 -> 
R1@0 -> 131176bv64
R16 -> 
R16@0 -> 
R16@1 -> 
R16@2 -> 
R16@3 -> 
R16@4 -> 
R16@5 -> 
R17 -> 
R17@0 -> 
R17@1 -> 
R17@2 -> 
R17@3 -> 
R17@4 -> 
R17@5 -> 
R19 -> 128bv64
R19@0 -> 354064218980352bv64
R19@1 -> 354064218980352bv64
R2 -> 
R29 -> 0bv64
R30 -> 0bv64
R31 -> 100bv64
stack -> (let (_ (a!1 (store (store (store (_ (as (const) (Array (bv64) (bv8))) (_ (bv0) 8)) (_ (bv92) 64) (_ (bv8) 8)) (_ (bv67) 64) (_ (bv2) 8)) (_ (bv53) 64) (_ (bv1) 8)))) (store (store (a!1) (_ (bv96) 64) (_ (bv4) 8)) (_ (bv84) 64) (_ 128 8)))
stack@0 -> (let (_ (a!1 (store (store (store (_ (as (const) (Array (bv64) (bv8))) (_ (bv0) 8)) (_ (bv92) 64) (_ (bv8) 8)) (_ (bv96) 64) (_ (bv4) 8)) (_ (bv67) 64) (_ (bv2) 8)))) (store (a!1) (_ (bv84) 64) (_ 128 8)))
stack@1 -> (store (store (store (_ (as (const) (Array (bv64) (bv8))) 0bv8) (_ (bv92) 64) (_ (bv8) 8)) (_ (bv96) 64) (_ (bv4) 8)) (_ (bv84) 64) (_ 128 8))
stack@2 -> (let (_ (a!1 (store (store (store (_ (as (const) (Array (bv64) (bv8))) (_ (bv0) 8)) (_ (bv92) 64) (_ (bv8) 8)) (_ (bv68) 64) (_ 128 8)) (_ (bv96) 64) (_ (bv4) 8)))) (store (a!1) (_ (bv84) 64) (_ 128 8)))
stack@3 -> (store (store (_ (as (const) (Array (bv64) (bv8))) 0bv8) (_ (bv68) 64) (_ 128 8)) (_ (bv84) 64) (_ 128 8))
stack@4 -> (store (_ (as (const) (Array (bv64) (bv8))) 0bv8) (_ (bv68) 64) (_ 128 8))
stack@5 -> (let (_ (a!1 (store (store (store (_ (as (const) (Array (bv64) (bv8))) (_ (bv0) 8)) (_ (bv92) 64) (_ (bv2) 8)) (_ (bv97) 64) (_ (bv66) 8)) (_ (bv98) 64) (_ (bv1) 8)))) (store (store (a!1) (_ (bv96) 64) (_ (bv5) 8)) (_ (bv68) 64) (_ 128 8)))
ControlFlow -> {
  0 10 -> 2
  0 2 -> (- 1)
  else -> 10
}
gamma_load32 -> {
  else -> true
}
gamma_load64 -> {
  else -> true
}
gamma_load8 -> {
  (_ (as-array) (k!18)) 0bv64 -> false
  (_ (as-array) (k!18)) 1153275568825827328bv64 -> false
  (_ (as-array) (k!18)) 131179bv64 -> false
  (_ (as-array) (k!18)) 131180bv64 -> false
  (_ (as-array) (k!18)) 1bv64 -> false
  (_ (as-array) (k!18)) 56bv64 -> false
  (_ (as-array) (k!18)) 64bv64 -> false
  (_ (as-array) (k!18)) 97bv64 -> false
  (_ (as-array) (k!2)) 131168bv64 -> false
  (_ (as-array) (k!21)) 0bv64 -> false
  (_ (as-array) (k!21)) 1153275568825827328bv64 -> false
  (_ (as-array) (k!21)) 131179bv64 -> false
  (_ (as-array) (k!21)) 131180bv64 -> false
  (_ (as-array) (k!21)) 1bv64 -> false
  (_ (as-array) (k!21)) 354064218980355bv64 -> false
  (_ (as-array) (k!21)) 354064218980356bv64 -> false
  (_ (as-array) (k!21)) 56bv64 -> false
  (_ (as-array) (k!21)) 64bv64 -> false
  (_ (as-array) (k!21)) 97bv64 -> false
  else -> true
}
gamma_store64 -> {
  (_ (as-array) (k!11)) 92bv64 true -> (_ (as-array) (k!13))
  (_ (as-array) (k!2)) 131200bv64 true -> (_ (as-array) (k!18))
  (_ (as-array) (k!6)) 52bv64 false -> (_ (as-array) (k!7))
  (_ (as-array) (k!7)) 60bv64 false -> (_ (as-array) (k!9))
  (_ (as-array) (k!9)) 68bv64 false -> (_ (as-array) (k!11))
  else -> (_ (as-array) (k!20))
}
gamma_store8 -> {
  else -> (_ (as-array) (k!21))
}
k!107 -> {
  0bv64 -> 8bv8
  130504bv64 -> 208bv8
  130505bv64 -> 8bv8
  130512bv64 -> 128bv8
  130513bv64 -> 8bv8
  131032bv64 -> 212bv8
  131033bv64 -> 8bv8
  131160bv64 -> 88bv8
  131162bv64 -> 2bv8
  131168bv64 -> 7bv8
  131176bv64 -> 104bv8
  131177bv64 -> 101bv8
  131178bv64 -> 108bv8
  131179bv64 -> 108bv8
  131180bv64 -> 111bv8
  131204bv64 -> 5bv8
  131205bv64 -> 66bv8
  131206bv64 -> 1bv8
  2488bv64 -> 1bv8
  2490bv64 -> 2bv8
  32768bv64 -> 4bv8
  354064218980352bv64 -> 104bv8
  else -> 0bv8
}
k!11 -> {
  else -> (or (= (:var 0) 0bv64) (= (:var 0) (_ 1153275568825827328 64)) (= (:var 0) (_ 131201 64)) (= (:var 0) (_ 32768 64)))
}
k!13 -> {
  else -> (or (= (:var 0) 94bv64) (= (:var 0) (_ (bv0) 64)) (= (:var 0) (_ 1153275568825827328 64)) (= (:var 0) (_ (bv95) 64)) (= (:var 0) (_ 131201 64)) (= (:var 0) (_ (bv97) 64)) (= (:var 0) (_ 32768 64)) (= (:var 0) (_ (bv99) 64)) (= (:var 0) (_ (bv93) 64)) (= (:var 0) (_ (bv96) 64)) (= (:var 0) (_ (bv98) 64)) (= (:var 0) (_ (bv92) 64)))
}
k!17 -> {
  0bv64 -> 8bv8
  130504bv64 -> 208bv8
  130505bv64 -> 8bv8
  130512bv64 -> 128bv8
  130513bv64 -> 8bv8
  131032bv64 -> 212bv8
  131033bv64 -> 8bv8
  131160bv64 -> 88bv8
  131162bv64 -> 2bv8
  131168bv64 -> 7bv8
  131176bv64 -> 104bv8
  131177bv64 -> 101bv8
  131178bv64 -> 108bv8
  131179bv64 -> 108bv8
  131180bv64 -> 111bv8
  131181bv64 -> 111bv8
  131204bv64 -> 5bv8
  131205bv64 -> 66bv8
  131206bv64 -> 1bv8
  2488bv64 -> 1bv8
  2490bv64 -> 2bv8
  32768bv64 -> 4bv8
  354064218980352bv64 -> 169bv8
  else -> 0bv8
}
k!18 -> {
  else -> (or (= (:var 0) 17bv64) (= (:var 0) (_ (bv6) 64)) (= (:var 0) (_ 8589934592 64)) (= (:var 0) (_ 131204 64)) (= (:var 0) (_ (bv2) 64)) (= (:var 0) (_ 354064218980355 64)) (= (:var 0) (_ 131178 64)) (= (:var 0) (_ 131200 64)) (= (:var 0) (_ 131207 64)) (= (:var 0) (_ 122524351096169 64)) (= (:var 0) (_ 122524351096171 64)) (= (:var 0) (_ 354064218980356 64)) (= (:var 0) (_ 131201 64)) (= (:var 0) (_ (bv72) 64)) (= (:var 0) (_ 131205 64)) (= (:var 0) (_ 131202 64)) (= (:var 0) (_ 131206 64)) (= (:var 0) (_ 524359 64)) (= (:var 0) (_ 122524351096168 64)) (= (:var 0) (_ (bv73) 64)) (= (:var 0) (_ 122524351096170 64)) (= (:var 0) (_ 131203 64)))
}
k!19 -> {
  0bv64 -> 8bv8
  130504bv64 -> 208bv8
  130505bv64 -> 8bv8
  130512bv64 -> 128bv8
  130513bv64 -> 8bv8
  131032bv64 -> 212bv8
  131033bv64 -> 8bv8
  131160bv64 -> 88bv8
  131162bv64 -> 2bv8
  131168bv64 -> 7bv8
  131176bv64 -> 104bv8
  131177bv64 -> 101bv8
  131178bv64 -> 108bv8
  131179bv64 -> 108bv8
  131180bv64 -> 111bv8
  131204bv64 -> 5bv8
  131205bv64 -> 66bv8
  131206bv64 -> 1bv8
  2488bv64 -> 1bv8
  2490bv64 -> 2bv8
  32768bv64 -> 4bv8
  354064218980352bv64 -> 104bv8
  354064218980354bv64 -> 108bv8
  else -> 0bv8
}
k!2 -> {
  else -> (or (= (:var 0) 17bv64) (= (:var 0) (_ (bv6) 64)) (= (:var 0) (_ 8589934592 64)) (= (:var 0) (_ 354064218980355 64)) (= (:var 0) (_ 131178 64)) (= (:var 0) (_ 122524351096169 64)) (= (:var 0) (_ (bv2) 64)) (= (:var 0) (_ 122524351096171 64)) (= (:var 0) (_ 354064218980356 64)) (= (:var 0) (_ (bv72) 64)) (= (:var 0) (_ 524359 64)) (= (:var 0) (_ (bv73) 64)) (= (:var 0) (_ 122524351096170 64)) (= (:var 0) (_ 122524351096168 64)))
}
k!20 -> {
  else -> (or (= (:var 0) 94bv64) (= (:var 0) (_ (bv84) 64)) (= (:var 0) (_ (bv0) 64)) (= (:var 0) (_ 1153275568825827328 64)) (= (:var 0) (_ (bv88) 64)) (= (:var 0) (_ (bv95) 64)) (= (:var 0) (_ 131201 64)) (= (:var 0) (_ (bv86) 64)) (= (:var 0) (_ (bv97) 64)) (= (:var 0) (_ 32768 64)) (= (:var 0) (_ (bv85) 64)) (= (:var 0) (_ (bv99) 64)) (= (:var 0) (_ (bv89) 64)) (= (:var 0) (_ (bv93) 64)) (= (:var 0) (_ (bv96) 64)) (= (:var 0) (_ (bv91) 64)) (= (:var 0) (_ (bv90) 64)) (= (:var 0) (_ (bv98) 64)) (= (:var 0) (_ (bv87) 64)) (= (:var 0) (_ (bv92) 64)))
}
k!21 -> {
  else -> (or (= (:var 0) 17bv64) (= (:var 0) (_ 8589934592 64)) (= (:var 0) (_ 131205 64)) (= (:var 0) (_ 131204 64)) (= (:var 0) (_ 131202 64)) (= (:var 0) (_ 354064218980354 64)) (= (:var 0) (_ 131206 64)) (= (:var 0) (_ 131178 64)) (= (:var 0) (_ 131200 64)) (= (:var 0) (_ 524359 64)) (= (:var 0) (_ 131207 64)) (= (:var 0) (_ 131203 64)) (= (:var 0) (_ 131201 64)))
}
k!22 -> {
  0bv64 -> 8bv8
  130504bv64 -> 208bv8
  130505bv64 -> 8bv8
  130512bv64 -> 128bv8
  130513bv64 -> 8bv8
  131032bv64 -> 212bv8
  131033bv64 -> 8bv8
  131160bv64 -> 88bv8
  131162bv64 -> 2bv8
  131168bv64 -> 7bv8
  131204bv64 -> 5bv8
  131205bv64 -> 66bv8
  131206bv64 -> 1bv8
  2488bv64 -> 1bv8
  2490bv64 -> 2bv8
  354064218980352bv64 -> 1bv8
  else -> 0bv8
}
k!3 -> {
  0bv64 -> 8bv8
  130504bv64 -> 208bv8
  130505bv64 -> 8bv8
  130512bv64 -> 128bv8
  130513bv64 -> 8bv8
  131032bv64 -> 212bv8
  131033bv64 -> 8bv8
  131160bv64 -> 88bv8
  131162bv64 -> 2bv8
  131168bv64 -> 7bv8
  131176bv64 -> 104bv8
  131177bv64 -> 101bv8
  131178bv64 -> 108bv8
  131179bv64 -> 108bv8
  131180bv64 -> 111bv8
  131181bv64 -> 111bv8
  131207bv64 -> 2bv8
  2488bv64 -> 1bv8
  2490bv64 -> 2bv8
  32768bv64 -> 4bv8
  354064218980352bv64 -> 169bv8
  else -> 0bv8
}
k!6 -> {
  else -> (or (= (:var 0) 69bv64) (= (:var 0) (_ (bv56) 64)) (= (:var 0) (_ (bv0) 64)) (= (:var 0) (_ 32768 64)) (= (:var 0) (_ 1153275568825827328 64)) (= (:var 0) (_ (bv60) 64)) (= (:var 0) (_ 131201 64)) (= (:var 0) (_ (bv72) 64)) (= (:var 0) (_ (bv64) 64)))
}
k!7 -> {
  else -> (or (= (:var 0) 69bv64) (= (:var 0) (_ (bv0) 64)) (= (:var 0) (_ 32768 64)) (= (:var 0) (_ 1153275568825827328 64)) (= (:var 0) (_ (bv60) 64)) (= (:var 0) (_ 131201 64)) (= (:var 0) (_ (bv72) 64)) (= (:var 0) (_ (bv64) 64)))
}
k!9 -> {
  else -> (or (= (:var 0) 69bv64) (= (:var 0) (_ (bv0) 64)) (= (:var 0) (_ 32768 64)) (= (:var 0) (_ 1153275568825827328 64)) (= (:var 0) (_ 131201 64)) (= (:var 0) (_ (bv72) 64)))
}
memory_load64_le -> {
  (_ (as-array) (k!115)) 92bv64 -> 354064218980354bv64
  (_ (as-array) (k!3)) 131176bv64 -> 122524351096168bv64
  else -> 354064218980352bv64
}
memory_load8_le -> {
  (_ (as-array) (k!107)) 0bv64 -> 8bv8
  (_ (as-array) (k!107)) 130504bv64 -> 208bv8
  (_ (as-array) (k!107)) 130505bv64 -> 8bv8
  (_ (as-array) (k!107)) 130512bv64 -> 128bv8
  (_ (as-array) (k!107)) 130513bv64 -> 8bv8
  (_ (as-array) (k!107)) 131032bv64 -> 212bv8
  (_ (as-array) (k!107)) 131033bv64 -> 8bv8
  (_ (as-array) (k!107)) 131160bv64 -> 88bv8
  (_ (as-array) (k!107)) 131162bv64 -> 2bv8
  (_ (as-array) (k!107)) 131168bv64 -> 7bv8
  (_ (as-array) (k!107)) 131204bv64 -> 5bv8
  (_ (as-array) (k!107)) 131205bv64 -> 66bv8
  (_ (as-array) (k!107)) 131206bv64 -> 1bv8
  (_ (as-array) (k!107)) 2488bv64 -> 1bv8
  (_ (as-array) (k!107)) 2490bv64 -> 2bv8
  (_ (as-array) (k!107)) 354064218980352bv64 -> 104bv8
  (_ (as-array) (k!17)) 0bv64 -> 8bv8
  (_ (as-array) (k!17)) 130504bv64 -> 208bv8
  (_ (as-array) (k!17)) 130505bv64 -> 8bv8
  (_ (as-array) (k!17)) 130512bv64 -> 128bv8
  (_ (as-array) (k!17)) 130513bv64 -> 8bv8
  (_ (as-array) (k!17)) 131032bv64 -> 212bv8
  (_ (as-array) (k!17)) 131033bv64 -> 8bv8
  (_ (as-array) (k!17)) 131160bv64 -> 88bv8
  (_ (as-array) (k!17)) 131162bv64 -> 2bv8
  (_ (as-array) (k!17)) 131168bv64 -> 7bv8
  (_ (as-array) (k!17)) 131176bv64 -> 104bv8
  (_ (as-array) (k!17)) 131177bv64 -> 101bv8
  (_ (as-array) (k!17)) 131178bv64 -> 108bv8
  (_ (as-array) (k!17)) 131179bv64 -> 108bv8
  (_ (as-array) (k!17)) 131180bv64 -> 111bv8
  (_ (as-array) (k!17)) 131204bv64 -> 5bv8
  (_ (as-array) (k!17)) 131205bv64 -> 66bv8
  (_ (as-array) (k!17)) 131206bv64 -> 1bv8
  (_ (as-array) (k!17)) 2488bv64 -> 1bv8
  (_ (as-array) (k!17)) 2490bv64 -> 2bv8
  (_ (as-array) (k!17)) 32768bv64 -> 4bv8
  (_ (as-array) (k!17)) 354064218980352bv64 -> 169bv8
  (_ (as-array) (k!19)) 130504bv64 -> 208bv8
  (_ (as-array) (k!19)) 130505bv64 -> 8bv8
  (_ (as-array) (k!19)) 130512bv64 -> 128bv8
  (_ (as-array) (k!19)) 130513bv64 -> 8bv8
  (_ (as-array) (k!19)) 131032bv64 -> 212bv8
  (_ (as-array) (k!19)) 131033bv64 -> 8bv8
  (_ (as-array) (k!19)) 131160bv64 -> 88bv8
  (_ (as-array) (k!19)) 131162bv64 -> 2bv8
  (_ (as-array) (k!19)) 131168bv64 -> 7bv8
  (_ (as-array) (k!19)) 131176bv64 -> 104bv8
  (_ (as-array) (k!19)) 131177bv64 -> 101bv8
  (_ (as-array) (k!19)) 131178bv64 -> 108bv8
  (_ (as-array) (k!19)) 131180bv64 -> 111bv8
  (_ (as-array) (k!19)) 2488bv64 -> 1bv8
  (_ (as-array) (k!19)) 2490bv64 -> 2bv8
  (_ (as-array) (k!22)) 130504bv64 -> 208bv8
  (_ (as-array) (k!22)) 130505bv64 -> 8bv8
  (_ (as-array) (k!22)) 130512bv64 -> 128bv8
  (_ (as-array) (k!22)) 130513bv64 -> 8bv8
  (_ (as-array) (k!22)) 131032bv64 -> 212bv8
  (_ (as-array) (k!22)) 131033bv64 -> 8bv8
  (_ (as-array) (k!22)) 131160bv64 -> 88bv8
  (_ (as-array) (k!22)) 131162bv64 -> 2bv8
  (_ (as-array) (k!22)) 131168bv64 -> 7bv8
  (_ (as-array) (k!22)) 2488bv64 -> 1bv8
  (_ (as-array) (k!22)) 2490bv64 -> 2bv8
  (_ (as-array) (k!3)) 130504bv64 -> 208bv8
  (_ (as-array) (k!3)) 130505bv64 -> 8bv8
  (_ (as-array) (k!3)) 130512bv64 -> 128bv8
  (_ (as-array) (k!3)) 130513bv64 -> 8bv8
  (_ (as-array) (k!3)) 131032bv64 -> 212bv8
  (_ (as-array) (k!3)) 131033bv64 -> 8bv8
  (_ (as-array) (k!3)) 131160bv64 -> 88bv8
  (_ (as-array) (k!3)) 131162bv64 -> 2bv8
  (_ (as-array) (k!3)) 131168bv64 -> 7bv8
  (_ (as-array) (k!3)) 131176bv64 -> 104bv8
  (_ (as-array) (k!3)) 131177bv64 -> 101bv8
  (_ (as-array) (k!3)) 131178bv64 -> 108bv8
  (_ (as-array) (k!3)) 131179bv64 -> 108bv8
  (_ (as-array) (k!3)) 131180bv64 -> 111bv8
  (_ (as-array) (k!3)) 131181bv64 -> 111bv8
  (_ (as-array) (k!3)) 2488bv64 -> 1bv8
  (_ (as-array) (k!3)) 2490bv64 -> 2bv8
  else -> 0bv8
}
memory_store64_le -> {
  (_ (as-array) (k!10)) 92bv64 0bv64 -> (store (store (_ (as (const) (Array (bv64) (bv8))) 0bv8) (_ (bv68) 64) (_ 128 8)) (_ (bv84) 64) (_ 128 8))
  (_ (as-array) (k!12)) 84bv64 0bv64 -> (store (_ (as (const) (Array (bv64) (bv8))) 0bv8) (_ (bv68) 64) (_ 128 8))
  (_ (as-array) (k!14)) 92bv64 354064218980354bv64 -> (let (_ (a!1 (store (store (store (_ (as (const) (Array (bv64) (bv8))) (_ (bv0) 8)) (_ (bv92) 64) (_ (bv2) 8)) (_ (bv97) 64) (_ (bv66) 8)) (_ (bv98) 64) (_ (bv1) 8)))) (store (store (a!1) (_ (bv96) 64) (_ (bv5) 8)) (_ (bv68) 64) (_ 128 8)))
  (_ (as-array) (k!3)) 131200bv64 354064218980352bv64 -> (_ (as-array) (k!17))
  (_ (as-array) (k!5)) 60bv64 0bv64 -> (store (store (store (_ (as (const) (Array (bv64) (bv8))) 0bv8) (_ (bv92) 64) (_ (bv8) 8)) (_ (bv96) 64) (_ (bv4) 8)) (_ (bv84) 64) (_ 128 8))
  (_ (as-array) (k!8)) 68bv64 128bv64 -> (let (_ (a!1 (store (store (store (_ (as (const) (Array (bv64) (bv8))) (_ (bv0) 8)) (_ (bv92) 64) (_ (bv8) 8)) (_ (bv68) 64) (_ 128 8)) (_ (bv96) 64) (_ (bv4) 8)))) (store (a!1) (_ (bv84) 64) (_ 128 8)))
  else -> (let (_ (a!1 (store (store (store (_ (as (const) (Array (bv64) (bv8))) (_ (bv0) 8)) (_ (bv92) 64) (_ (bv8) 8)) (_ (bv96) 64) (_ (bv4) 8)) (_ (bv67) 64) (_ (bv2) 8)))) (store (a!1) (_ (bv84) 64) (_ 128 8)))
}
memory_store8_le -> {
  else -> (_ (as-array) (k!107))
}
tickleBool -> {
  else -> true
}
*** STATE <initial>
  #4 -> 
  Gamma_#4 -> 
  Gamma_malloc_base -> 
  Gamma_malloc_count -> 
  Gamma_malloc_end -> 
  Gamma_malloc_id -> 
  Gamma_mem -> (_ (as-array) (k!2))
  Gamma_R0 -> 
  Gamma_R1 -> 
  Gamma_R16 -> 
  Gamma_R17 -> 
  Gamma_R19 -> false
  Gamma_R2 -> 
  Gamma_R29 -> false
  Gamma_R30 -> false
  Gamma_R31 -> 
  Gamma_stack -> (_ (as-array) (k!6))
  malloc_base -> 
  malloc_count -> 0
  malloc_end -> 
  malloc_id -> 
  mem -> (_ (as-array) (k!3))
  R0 -> 
  R1 -> 
  R16 -> 
  R17 -> 
  R19 -> 128bv64
  R2 -> 
  R29 -> 0bv64
  R30 -> 0bv64
  R31 -> 100bv64
  stack -> (let (_ (a!1 (store (store (store (_ (as (const) (Array (bv64) (bv8))) (_ (bv0) 8)) (_ (bv92) 64) (_ (bv8) 8)) (_ (bv67) 64) (_ (bv2) 8)) (_ (bv53) 64) (_ (bv1) 8)))) (store (store (a!1) (_ (bv96) 64) (_ (bv4) 8)) (_ (bv84) 64) (_ 128 8)))
*** END_STATE
*** STATE lmain
*** END_STATE
*** STATE %00000384
  #4 -> 52bv64
  Gamma_#4 -> 
  Gamma_stack -> (_ (as-array) (k!7))
  stack -> (let (_ (a!1 (store (store (store (_ (as (const) (Array (bv64) (bv8))) (_ (bv0) 8)) (_ (bv92) 64) (_ (bv8) 8)) (_ (bv96) 64) (_ (bv4) 8)) (_ (bv67) 64) (_ (bv2) 8)))) (store (a!1) (_ (bv84) 64) (_ 128 8)))
*** END_STATE
*** STATE %0000038a
  Gamma_stack -> (_ (as-array) (k!9))
  stack -> (store (store (store (_ (as (const) (Array (bv64) (bv8))) 0bv8) (_ (bv92) 64) (_ (bv8) 8)) (_ (bv96) 64) (_ (bv4) 8)) (_ (bv84) 64) (_ 128 8))
*** END_STATE
*** STATE %0000039c
  Gamma_R29 -> 
  Gamma_R31 -> 
  Gamma_stack -> (_ (as-array) (k!11))
  R29 -> 52bv64
  R31 -> 52bv64
  stack -> (let (_ (a!1 (store (store (store (_ (as (const) (Array (bv64) (bv8))) (_ (bv0) 8)) (_ (bv92) 64) (_ (bv8) 8)) (_ (bv68) 64) (_ 128 8)) (_ (bv96) 64) (_ (bv4) 8)))) (store (a!1) (_ (bv84) 64) (_ 128 8)))
*** END_STATE
*** STATE %000003a3
  Gamma_stack -> (_ (as-array) (k!13))
  stack -> (store (store (_ (as (const) (Array (bv64) (bv8))) 0bv8) (_ (bv68) 64) (_ 128 8)) (_ (bv84) 64) (_ 128 8))
*** END_STATE
*** STATE %000003aa
  Gamma_stack -> (_ (as-array) (k!20))
  stack -> (store (_ (as (const) (Array (bv64) (bv8))) 0bv8) (_ (bv68) 64) (_ 128 8))
*** END_STATE
*** STATE l000003b9
  Gamma_malloc_base -> 
  Gamma_malloc_count -> 
  Gamma_malloc_end -> 
  Gamma_R0 -> true
  Gamma_R16 -> 
  Gamma_R17 -> 
  Gamma_R30 -> true
  malloc_base -> (store (_ (as (const) (Array (Int) (bv64))) 131183bv64) 1 (_ 354064218980352 64))
  malloc_count -> 1
  malloc_end -> (store (_ (as (const) (Array (Int) (bv64))) 131183bv64) 1 (_ 354064218980363 64))
  R0 -> 354064218980352bv64
  R16 -> 
  R17 -> 
  R30 -> 2288bv64
*** END_STATE
*** STATE %000003d0
  Gamma_mem -> (_ (as-array) (k!18))
  Gamma_R0 -> true
  Gamma_R1 -> true
  mem -> (_ (as-array) (k!17))
  R0 -> 131200bv64
  R1 -> 354064218980352bv64
*** END_STATE
*** STATE l000003f7
  Gamma_mem -> (_ (as-array) (k!18))
  Gamma_R0 -> true
  Gamma_R16 -> 
  Gamma_R17 -> 
  Gamma_R19 -> true
  Gamma_R30 -> true
  mem -> (_ (as-array) (k!17))
  R0 -> 6bv64
  R16 -> 
  R17 -> 
  R19 -> 354064218980352bv64
  R30 -> 2328bv64
*** END_STATE
*** STATE l00000416
  Gamma_mem -> (_ (as-array) (k!21))
  Gamma_R0 -> true
  Gamma_R1 -> true
  Gamma_R16 -> 
  Gamma_R17 -> 
  Gamma_R2 -> true
  Gamma_R30 -> true
  mem -> (_ (as-array) (k!19))
  R0 -> 354064218980352bv64
  R1 -> 131176bv64
  R16 -> 
  R17 -> 
  R2 -> 6bv64
  R30 -> 2348bv64
*** END_STATE
*** STATE l00000430
  Gamma_mem -> (_ (as-array) (k!21))
  Gamma_R0 -> true
  Gamma_R16 -> 
  Gamma_R17 -> 
  Gamma_R30 -> true
  mem -> (_ (as-array) (k!19))
  R0 -> 354064218980352bv64
  R16 -> 
  R17 -> 
  R30 -> 2364bv64
*** END_STATE
*** STATE %0000044e
  Gamma_mem -> (_ (as-array) (k!21))
  Gamma_R0 -> true
  Gamma_stack -> (_ (as-array) (k!20))
  mem -> (_ (as-array) (k!19))
  R0 -> 354064218980354bv64
  stack -> (let (_ (a!1 (store (store (store (_ (as (const) (Array (bv64) (bv8))) (_ (bv0) 8)) (_ (bv92) 64) (_ (bv2) 8)) (_ (bv97) 64) (_ (bv66) 8)) (_ (bv98) 64) (_ (bv1) 8)))) (store (store (a!1) (_ (bv96) 64) (_ (bv5) 8)) (_ (bv68) 64) (_ 128 8)))
*** END_STATE
*** STATE %0000045c
  Gamma_mem -> (_ (as-array) (k!21))
  Gamma_R0 -> true
  mem -> (_ (as-array) (k!107))
  R0 -> 354064218980354bv64
*** END_STATE
*** STATE l00000489
  Gamma_mem -> (_ (as-array) (k!21))
  Gamma_R0 -> true
  Gamma_R16 -> 
  Gamma_R17 -> 
  Gamma_R19 -> true
  Gamma_R30 -> true
  mem -> (_ (as-array) (k!107))
  R0 -> 2bv64
  R16 -> 
  R17 -> 
  R19 -> 354064218980352bv64
  R30 -> 2420bv64
*** END_STATE
*** STATE l000004a2
  Gamma_mem -> (_ (as-array) (k!21))
  Gamma_R0 -> true
  Gamma_R1 -> true
  Gamma_R16 -> 
  Gamma_R17 -> 
  Gamma_R2 -> true
  Gamma_R30 -> true
  mem -> (_ (as-array) (k!22))
  R0 -> 354064218980352bv64
  R1 -> 1bv64
  R16 -> 
  R17 -> 
  R2 -> 2bv64
  R30 -> 2436bv64
*** END_STATE
*** END_MODEL
