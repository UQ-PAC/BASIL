00000829: program
0000080d: sub __cxa_finalize(__cxa_finalize_result)
0000082a: __cxa_finalize_result :: out u32 = low:32[R0]

00000583:
00000664: R16 := 0x11000
0000066b: R17 := mem[R16, el]:u64
00000671: R16 := R16
00000676: call R17 with noreturn

0000080e: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
0000082b: __do_global_dtors_aux_result :: out u32 = low:32[R0]

00000334:
00000338: #5 := R31 - 0x20
0000033e: mem := mem with [#5, el]:u64 <- R29
00000344: mem := mem with [#5 + 8, el]:u64 <- R30
00000348: R31 := #5
0000034e: R29 := R31
00000356: mem := mem with [R31 + 0x10, el]:u64 <- R19
0000035b: R19 := 0x11000
00000362: R0 := pad:64[mem[R19 + 0x30]]
00000369: when 31:0[R0] <> 0 goto %00000367
0000080f: goto %0000054c

0000054c:
0000054f: R0 := 0x10000
00000556: R0 := mem[R0 + 0xFC0, el]:u64
0000055c: when R0 = 0 goto %0000055a
00000810: goto %00000573

00000573:
00000576: R0 := 0x11000
0000057d: R0 := mem[R0 + 0x28, el]:u64
00000582: R30 := 0x700
00000585: call @__cxa_finalize with return %0000055a

0000055a:
00000562: R30 := 0x704
00000564: call @deregister_tm_clones with return %00000566

00000566:
00000569: R0 := 1
00000571: mem := mem with [R19 + 0x30] <- 7:0[R0]
00000811: goto %00000367

00000367:
00000371: R19 := mem[R31 + 0x10, el]:u64
00000378: R29 := mem[R31, el]:u64
0000037d: R30 := mem[R31 + 8, el]:u64
00000381: R31 := R31 + 0x20
00000386: call R30 with noreturn

00000812: sub __libc_csu_fini(__libc_csu_fini_result)
0000082c: __libc_csu_fini_result :: out u32 = low:32[R0]

000004d7:
000004da: call R30 with noreturn

00000813: sub __libc_csu_init(__libc_csu_init_result)
0000082d: __libc_csu_init_result :: out u32 = low:32[R0]

000003e4:
000003e8: #7 := R31 - 0x40
000003ee: mem := mem with [#7, el]:u64 <- R29
000003f4: mem := mem with [#7 + 8, el]:u64 <- R30
000003f8: R31 := #7
000003fe: R29 := R31
00000404: #8 := R31 + 0x10
0000040a: mem := mem with [#8, el]:u64 <- R19
00000410: mem := mem with [#8 + 8, el]:u64 <- R20
00000415: R20 := 0x10000
0000041b: R20 := R20 + 0xDC0
00000421: #9 := R31 + 0x20
00000427: mem := mem with [#9, el]:u64 <- R21
0000042d: mem := mem with [#9 + 8, el]:u64 <- R22
00000432: R21 := 0x10000
00000438: R21 := R21 + 0xDB8
0000043f: R20 := R20 + ~R21 + 1
00000445: R22 := pad:64[31:0[R0]]
0000044b: #10 := R31 + 0x30
00000451: mem := mem with [#10, el]:u64 <- R23
00000457: mem := mem with [#10 + 8, el]:u64 <- R24
0000045d: R23 := R1
00000463: R24 := R2
00000468: R30 := 0x788
0000046b: call @_init with return %0000046d

0000046d:
00000471: #11 := ~(R20 ~>> 3)
00000475: #12 := ~(R20 ~>> 3) + 1
0000047a: VF := extend:65[#12] <> extend:65[#11] + 1
0000047f: CF := pad:65[#12] <> pad:65[#11] + 1
00000483: ZF := #12 = 0
00000487: NF := 63:63[#12]
0000048d: when ZF goto %0000048b
00000814: goto %000004dc

000004dc:
000004e2: R20 :=

          >> 3 | R20 << 0x3D]
000004e7: R19 := 0
00000815: goto %000004e9

000004e9:
000004ef: R3 := mem[R21 + (60:0[R19].0), el]:u64
000004f5: R2 := R24
000004fb: R19 := R19 + 1
00000501: R1 := R23
00000507: R0 := pad:64[31:0[R22]]
0000050c: R30 := 0x7B0
0000050f: call R3 with return %00000511

00000511:
00000515: #16 := ~R19
0000051a: #17 := R20 + ~R19 + 1
00000520: VF := extend:65[#17] <> extend:65[R20] + extend:65[#16] + 1
00000526: CF := pad:65[#17] <> pad:65[R20] + pad:65[#16] + 1
0000052a: ZF := #17 = 0
0000052e: NF := 63:63[#17]
00000533: when ZF <> 1 goto %000004e9
00000816: goto %0000048b

0000048b:
00000494: #13 := R31 + 0x10
00000499: R19 := mem[#13, el]:u64
0000049e: R20 := mem[#13 + 8, el]:u64
000004a4: #14 := R31 + 0x20
000004a9: R21 := mem[#14, el]:u64
000004ae: R22 := mem[#14 + 8, el]:u64
000004b4: #15 := R31 + 0x30
000004b9: R23 := mem[#15, el]:u64
000004be: R24 := mem[#15 + 8, el]:u64
000004c5: R29 := mem[R31, el]:u64
000004ca: R30 := mem[R31 + 8, el]:u64
000004ce: R31 := R31 + 0x40
000004d3: call R30 with noreturn

00000817: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
0000082e: __libc_start_main_main :: in u64 = R0
0000082f: __libc_start_main_arg2 :: in u32 = low:32[R1]
00000830: __libc_start_main_arg3 :: in out u64 = R2
00000831: __libc_start_main_auxv :: in out u64 = R3
00000832: __libc_start_main_result :: out u32 = low:32[R0]

00000272:
0000067a: R16 := 0x11000
00000681: R17 := mem[R16 + 8, el]:u64
00000687: R16 := R16 + 8
0000068c: call R17 with noreturn

00000818: sub _fini(_fini_result)
00000833: _fini_result :: out u32 = low:32[R0]

00000030:
00000034: #0 := R31 - 0x10
0000003a: mem := mem with [#0, el]:u64 <- R29
00000040: mem := mem with [#0 + 8, el]:u64 <- R30
00000044: R31 := #0
0000004a: R29 := R31
00000051: R29 := mem[R31, el]:u64
00000056: R30 := mem[R31 + 8, el]:u64
0000005a: R31 := R31 + 0x10
0000005f: call R30 with noreturn

00000819: sub _init(_init_result)
00000834: _init_result :: out u32 = low:32[R0]

00000469:
0000074a: #19 := R31 - 0x10
00000750: mem := mem with [#19, el]:u64 <- R29
00000756: mem := mem with [#19 + 8, el]:u64 <- R30
0000075a: R31 := #19
00000760: R29 := R31
00000765: R30 := 0x5A4
00000767: call @call_weak_fn with return %00000769

00000769:
0000076e: R29 := mem[R31, el]:u64
00000773: R30 := mem[R31 + 8, el]:u64
00000777: R31 := R31 + 0x10
0000077c: call R30 with noreturn

0000081a: sub _start(_start_result)
00000835: _start_result :: out u32 = low:32[R0]

00000227:
0000022a: R29 := 0
0000022f: R30 := 0
00000235: R5 := R0
0000023c: R1 := mem[R31, el]:u64
00000242: R2 := R31 + 8
00000248: R6 := R31
0000024d: R0 := 0x10000
00000254: R0 := mem[R0 + 0xFD8, el]:u64
00000259: R3 := 0x10000
00000260: R3 := mem[R3 + 0xFD0, el]:u64
00000265: R4 := 0x10000
0000026c: R4 := mem[R4 + 0xFB0, el]:u64
00000271: R30 := 0x644
00000274: call @__libc_start_main with return %00000276

00000276:
00000279: R30 := 0x648
0000027c: call @abort with return %0000081b

0000081b:
0000081c: call @call_weak_fn with noreturn

0000081d: sub abort()


0000027a:
000006a6: R16 := 0x11000
000006ad: R17 := mem[R16 + 0x18, el]:u64
000006b3: R16 := R16 + 0x18
000006b8: call R17 with noreturn

0000081e: sub call_weak_fn(call_weak_fn_result)
00000836: call_weak_fn_result :: out u32 = low:32[R0]

0000027e:
00000281: R0 := 0x10000
00000288: R0 := mem[R0 + 0xFC8, el]:u64
0000028e: when R0 = 0 goto %0000028c
0000081f: goto %000005c3

0000028c:
00000294: call R30 with noreturn

000005c3:
000005c6: goto @__gmon_start__

000005c4:
00000690: R16 := 0x11000
00000697: R17 := mem[R16 + 0x10, el]:u64
0000069d: R16 := R16 + 0x10
000006a2: call R17 with noreturn

00000820: sub deregister_tm_clones(deregister_tm_clones_result)
00000837: deregister_tm_clones_result :: out u32 = low:32[R0]

00000298:
0000029b: R0 := 0x11000
000002a1: R0 := R0 + 0x30
000002a6: R1 := 0x11000
000002ac: R1 := R1 + 0x30
000002b2: #1 := ~R0
000002b7: #2 := R1 + ~R0 + 1
000002bd: VF := extend:65[#2] <> extend:65[R1] + extend:65[#1] + 1
000002c3: CF := pad:65[#2] <> pad:65[R1] + pad:65[#1] + 1
000002c7: ZF := #2 = 0
000002cb: NF := 63:63[#2]
000002d1: when ZF goto %000002cf
00000821: goto %000005a5

000005a5:
000005a8: R1 := 0x10000
000005af: R1 := mem[R1 + 0xFB8, el]:u64
000005b4: when R1 = 0 goto %000002cf
00000822: goto %000005b8

000002cf:
000002d7: call R30 with noreturn

000005b8:
000005bc: R16 := R1
000005c1: call R16 with noreturn

00000823: sub frame_dummy(frame_dummy_result)
00000838: frame_dummy_result :: out u32 = low:32[R0]

00000388:
0000038a: call @register_tm_clones with noreturn

00000824: sub main(main_argc, main_argv, main_result)
00000839: main_argc :: in u32 = low:32[R0]
0000083a: main_argv :: in out u64 = R1
0000083b: main_result :: out u32 = low:32[R0]

0000038c:
00000390: R31 := R31 - 0x10
00000397: mem := mem with [R31 + 0xC, el]:u32 <- 0
0000039e: R8 := pad:64[mem[R31 + 8, el]:u32]
000003a4: #6 := 31:0[R8] + 0
000003a9: VF := extend:33[#6] <> extend:33[31:0[R8]] + 0
000003ae: CF := pad:33[#6] <> pad:33[31:0[R8]] - 0x100000000
000003b2: ZF := #6 = 0
000003b6: NF := 31:31[#6]
000003ba: R8 := pad:64[#6]
000003c6: when ZF goto %000003bf
000003c7: goto %000003c2

000003c2:
000003c3: R8 := 1
000003c9: goto %000003c5

000003bf:
000003c0: R8 := 0
000003c8: goto %000003c5

000003c5:
000003cf: when 0:0[R8] goto %000003cd
00000825: goto %00000537

00000537:
0000053a: goto %00000538

00000538:
0000053e: R8 := 1
00000546: mem := mem with [R31 + 8, el]:u32 <- 31:0[R8]
0000054a: goto %000003cd

000003cd:
000003d7: R0 := pad:64[mem[R31 + 0xC, el]:u32]
000003dd: R31 := R31 + 0x10
000003e2: call R30 with noreturn

00000826: sub register_tm_clones(register_tm_clones_result)
0000083c: register_tm_clones_result :: out u32 = low:32[R0]

000002d9:
000002dc: R0 := 0x11000
000002e2: R0 := R0 + 0x30
000002e7: R1 := 0x11000
000002ed: R1 := R1 + 0x30
000002f4: R1 := R1 + ~R0 + 1
000002fb: R2 := 0.0:0[R1 >> 0x3F | R1 << 1]
00000302: R1 := R2 + (R1 ~>> 3)
00000308: #3 := ~(R1 ~>> 1)
0000030c: #4 := ~(R1 ~>> 1) + 1
00000311: VF := extend:65[#4] <> extend:65[#3] + 1
00000316: CF := pad:65[#4] <> pad:65[#3] + 1
0000031a: ZF := #4 = 0
0000031e: NF := 63:63[#4]
00000326: R1 :=

          >> 1 | R1 << 0x3F]
0000032c: when ZF goto %0000032a
00000827: goto %00000587

00000587:
0000058a: R2 := 0x10000
00000591: R2 := mem[R2 + 0xFE0, el]:u64
00000596: when R2 = 0 goto %0000032a
00000828: goto %0000059a

0000032a:
00000332: call R30 with noreturn

0000059a:
0000059e: R16 := R2
000005a3: call R16 with noreturn
