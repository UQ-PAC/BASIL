00000874: program
00000838: sub __cxa_finalize(__cxa_finalize_result)
00000875: __cxa_finalize_result :: out u32 = low:32[R0]

000005a2:
00000683: R16 := 0x10000
0000068a: R17 := mem[R16 + 0xFA0, el]:u64
00000690: R16 := R16 + 0xFA0
00000695: call R17 with noreturn

00000839: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
00000876: __do_global_dtors_aux_result :: out u32 = low:32[R0]

0000034c:
00000350: #5 := R31 - 0x20
00000356: mem := mem with [#5, el]:u64 <- R29
0000035c: mem := mem with [#5 + 8, el]:u64 <- R30
00000360: R31 := #5
00000366: R29 := R31
0000036e: mem := mem with [R31 + 0x10, el]:u64 <- R19
00000373: R19 := 0x11000
0000037a: R0 := pad:64[mem[R19 + 0x10]]
00000381: when 31:0[R0] <> 0 goto %0000037f
00000867: goto %0000056b

0000056b:
0000056e: R0 := 0x10000
00000575: R0 := mem[R0 + 0xFD8, el]:u64
0000057b: when R0 = 0 goto %00000579
00000868: goto %00000592

00000592:
00000595: R0 := 0x11000
0000059c: R0 := mem[R0 + 8, el]:u64
000005a1: R30 := 0x700
000005a4: call @__cxa_finalize with return %00000579

00000579:
00000581: R30 := 0x704
00000583: call @deregister_tm_clones with return %00000585

00000585:
00000588: R0 := 1
00000590: mem := mem with [R19 + 0x10] <- 7:0[R0]
00000869: goto %0000037f

0000037f:
00000389: R19 := mem[R31 + 0x10, el]:u64
00000390: R29 := mem[R31, el]:u64
00000395: R30 := mem[R31 + 8, el]:u64
00000399: R31 := R31 + 0x20
0000039e: call R30 with noreturn

0000083d: sub __libc_csu_fini(__libc_csu_fini_result)
00000877: __libc_csu_fini_result :: out u32 = low:32[R0]

0000050b:
0000050e: call R30 with noreturn

0000083e: sub __libc_csu_init(__libc_csu_init_result)
00000878: __libc_csu_init_result :: out u32 = low:32[R0]

00000418:
0000041c: #6 := R31 - 0x40
00000422: mem := mem with [#6, el]:u64 <- R29
00000428: mem := mem with [#6 + 8, el]:u64 <- R30
0000042c: R31 := #6
00000432: R29 := R31
00000438: #7 := R31 + 0x10
0000043e: mem := mem with [#7, el]:u64 <- R19
00000444: mem := mem with [#7 + 8, el]:u64 <- R20
00000449: R20 := 0x10000
0000044f: R20 := R20 + 0xD90
00000455: #8 := R31 + 0x20
0000045b: mem := mem with [#8, el]:u64 <- R21
00000461: mem := mem with [#8 + 8, el]:u64 <- R22
00000466: R21 := 0x10000
0000046c: R21 := R21 + 0xD88
00000473: R20 := R20 + ~R21 + 1
00000479: R22 := pad:64[31:0[R0]]
0000047f: #9 := R31 + 0x30
00000485: mem := mem with [#9, el]:u64 <- R23
0000048b: mem := mem with [#9 + 8, el]:u64 <- R24
00000491: R23 := R1
00000497: R24 := R2
0000049c: R30 := 0x7A0
0000049f: call @_init with return %000004a1

000004a1:
000004a5: #10 := ~(R20 ~>> 3)
000004a9: #11 := ~(R20 ~>> 3) + 1
000004ae: VF := extend:65[#11] <> extend:65[#10] + 1
000004b3: CF := pad:65[#11] <> pad:65[#10] + 1
000004b7: ZF := #11 = 0
000004bb: NF := 63:63[#11]
000004c1: when ZF goto %000004bf
0000086a: goto %00000510

00000510:
00000516: R20 :=

          >> 3 | R20 << 0x3D]
0000051b: R19 := 0
0000086b: goto %0000051d

0000051d:
00000523: R3 := mem[R21 + (60:0[R19].0), el]:u64
00000529: R2 := R24
0000052f: R19 := R19 + 1
00000535: R1 := R23
0000053b: R0 := pad:64[31:0[R22]]
00000540: R30 := 0x7C8
00000543: call R3 with return %00000545

00000545:
00000549: #15 := ~R19
0000054e: #16 := R20 + ~R19 + 1
00000554: VF := extend:65[#16] <> extend:65[R20] + extend:65[#15] + 1
0000055a: CF := pad:65[#16] <> pad:65[R20] + pad:65[#15] + 1
0000055e: ZF := #16 = 0
00000562: NF := 63:63[#16]
00000567: when ZF <> 1 goto %0000051d
0000086c: goto %000004bf

000004bf:
000004c8: #12 := R31 + 0x10
000004cd: R19 := mem[#12, el]:u64
000004d2: R20 := mem[#12 + 8, el]:u64
000004d8: #13 := R31 + 0x20
000004dd: R21 := mem[#13, el]:u64
000004e2: R22 := mem[#13 + 8, el]:u64
000004e8: #14 := R31 + 0x30
000004ed: R23 := mem[#14, el]:u64
000004f2: R24 := mem[#14 + 8, el]:u64
000004f9: R29 := mem[R31, el]:u64
000004fe: R30 := mem[R31 + 8, el]:u64
00000502: R31 := R31 + 0x40
00000507: call R30 with noreturn

00000842: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
00000879: __libc_start_main_main :: in u64 = R0
0000087a: __libc_start_main_arg2 :: in u32 = low:32[R1]
0000087b: __libc_start_main_arg3 :: in out u64 = R2
0000087c: __libc_start_main_auxv :: in out u64 = R3
0000087d: __libc_start_main_result :: out u32 = low:32[R0]

0000028a:
00000699: R16 := 0x10000
000006a0: R17 := mem[R16 + 0xFA8, el]:u64
000006a6: R16 := R16 + 0xFA8
000006ab: call R17 with noreturn

00000843: sub _fini(_fini_result)
0000087e: _fini_result :: out u32 = low:32[R0]

00000030:
00000034: #0 := R31 - 0x10
0000003a: mem := mem with [#0, el]:u64 <- R29
00000040: mem := mem with [#0 + 8, el]:u64 <- R30
00000044: R31 := #0
0000004a: R29 := R31
00000051: R29 := mem[R31, el]:u64
00000056: R30 := mem[R31 + 8, el]:u64
0000005a: R31 := R31 + 0x10
0000005f: call R30 with noreturn

00000844: sub _init(_init_result)
0000087f: _init_result :: out u32 = low:32[R0]

0000049d:
0000076f: #18 := R31 - 0x10
00000775: mem := mem with [#18, el]:u64 <- R29
0000077b: mem := mem with [#18 + 8, el]:u64 <- R30
0000077f: R31 := #18
00000785: R29 := R31
0000078a: R30 := 0x5A4
0000078c: call @call_weak_fn with return %0000078e

0000078e:
00000793: R29 := mem[R31, el]:u64
00000798: R30 := mem[R31 + 8, el]:u64
0000079c: R31 := R31 + 0x10
000007a1: call R30 with noreturn

00000845: sub _start(_start_result)
00000880: _start_result :: out u32 = low:32[R0]

0000023f:
00000242: R29 := 0
00000247: R30 := 0
0000024d: R5 := R0
00000254: R1 := mem[R31, el]:u64
0000025a: R2 := R31 + 8
00000260: R6 := R31
00000265: R0 := 0x10000
0000026c: R0 := mem[R0 + 0xFF0, el]:u64
00000271: R3 := 0x10000
00000278: R3 := mem[R3 + 0xFE8, el]:u64
0000027d: R4 := 0x10000
00000284: R4 := mem[R4 + 0xFC8, el]:u64
00000289: R30 := 0x644
0000028c: call @__libc_start_main with return %0000028e

0000028e:
00000291: R30 := 0x648
00000294: call @abort with return %0000086d

0000086d:
0000086e: call @call_weak_fn with noreturn

00000848: sub abort()


00000292:
000006c5: R16 := 0x10000
000006cc: R17 := mem[R16 + 0xFB8, el]:u64
000006d2: R16 := R16 + 0xFB8
000006d7: call R17 with noreturn

00000849: sub call_weak_fn(call_weak_fn_result)
00000881: call_weak_fn_result :: out u32 = low:32[R0]

00000296:
00000299: R0 := 0x10000
000002a0: R0 := mem[R0 + 0xFE0, el]:u64
000002a6: when R0 = 0 goto %000002a4
0000086f: goto %000005e2

000002a4:
000002ac: call R30 with noreturn

000005e2:
000005e5: goto @__gmon_start__

000005e3:
000006af: R16 := 0x10000
000006b6: R17 := mem[R16 + 0xFB0, el]:u64
000006bc: R16 := R16 + 0xFB0
000006c1: call R17 with noreturn

0000084b: sub deregister_tm_clones(deregister_tm_clones_result)
00000882: deregister_tm_clones_result :: out u32 = low:32[R0]

000002b0:
000002b3: R0 := 0x11000
000002b9: R0 := R0 + 0x10
000002be: R1 := 0x11000
000002c4: R1 := R1 + 0x10
000002ca: #1 := ~R0
000002cf: #2 := R1 + ~R0 + 1
000002d5: VF := extend:65[#2] <> extend:65[R1] + extend:65[#1] + 1
000002db: CF := pad:65[#2] <> pad:65[R1] + pad:65[#1] + 1
000002df: ZF := #2 = 0
000002e3: NF := 63:63[#2]
000002e9: when ZF goto %000002e7
00000870: goto %000005c4

000005c4:
000005c7: R1 := 0x10000
000005ce: R1 := mem[R1 + 0xFD0, el]:u64
000005d3: when R1 = 0 goto %000002e7
00000871: goto %000005d7

000002e7:
000002ef: call R30 with noreturn

000005d7:
000005db: R16 := R1
000005e0: call R16 with noreturn

0000084e: sub frame_dummy(frame_dummy_result)
00000883: frame_dummy_result :: out u32 = low:32[R0]

000003a0:
000003a2: call @register_tm_clones with noreturn

0000084f: sub main(main_argc, main_argv, main_result)
00000884: main_argc :: in u32 = low:32[R0]
00000885: main_argv :: in out u64 = R1
00000886: main_result :: out u32 = low:32[R0]

000003a4:
000003a8: R31 := R31 - 0x10
000003b0: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R0]
000003b5: R0 := 0x11000
000003bb: R0 := R0 + 0x14
000003c0: R1 := 1
000003c8: mem := mem with [R0, el]:u32 <- 31:0[R1]
000003cd: R0 := 0x11000
000003d3: R0 := R0 + 0x18
000003da: R1 := pad:64[mem[R31 + 0xC, el]:u32]
000003e2: mem := mem with [R0, el]:u32 <- 31:0[R1]
000003e7: R0 := 0x11000
000003ed: R0 := R0 + 0x18
000003f4: mem := mem with [R0, el]:u32 <- 0
000003f9: R0 := 0x11000
000003ff: R0 := R0 + 0x14
00000406: mem := mem with [R0, el]:u32 <- 0
0000040b: R0 := 0
00000411: R31 := R31 + 0x10
00000416: call R30 with noreturn

00000850: sub register_tm_clones(register_tm_clones_result)
00000887: register_tm_clones_result :: out u32 = low:32[R0]

000002f1:
000002f4: R0 := 0x11000
000002fa: R0 := R0 + 0x10
000002ff: R1 := 0x11000
00000305: R1 := R1 + 0x10
0000030c: R1 := R1 + ~R0 + 1
00000313: R2 := 0.0:0[R1 >> 0x3F | R1 << 1]
0000031a: R1 := R2 + (R1 ~>> 3)
00000320: #3 := ~(R1 ~>> 1)
00000324: #4 := ~(R1 ~>> 1) + 1
00000329: VF := extend:65[#4] <> extend:65[#3] + 1
0000032e: CF := pad:65[#4] <> pad:65[#3] + 1
00000332: ZF := #4 = 0
00000336: NF := 63:63[#4]
0000033e: R1 :=

          >> 1 | R1 << 0x3F]
00000344: when ZF goto %00000342
00000872: goto %000005a6

000005a6:
000005a9: R2 := 0x10000
000005b0: R2 := mem[R2 + 0xFF8, el]:u64
000005b5: when R2 = 0 goto %00000342
00000873: goto %000005b9

00000342:
0000034a: call R30 with noreturn

000005b9:
000005bd: R16 := R2
000005c2: call R16 with noreturn
