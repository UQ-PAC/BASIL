0000080d: program
000007f2: sub __cxa_finalize(__cxa_finalize_result)
0000080e: __cxa_finalize_result :: out u32 = low:32[R0]

00000568:
00000649: R16 := 0x11000
00000650: R17 := mem[R16, el]:u64
00000656: R16 := R16
0000065b: call R17 with noreturn

000007f3: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
0000080f: __do_global_dtors_aux_result :: out u32 = low:32[R0]

00000334:
00000338: #5 := R31 - 0x20
0000033e: mem := mem with [#5, el]:u64 <- R29
00000344: mem := mem with [#5 + 8, el]:u64 <- R30
00000348: R31 := #5
0000034e: R29 := R31
00000356: mem := mem with [R31 + 0x10, el]:u64 <- R19
0000035b: R19 := 0x11000
00000362: R0 := pad:64[mem[R19 + 0x30]]
00000369: when 31:0[R0] <> 0 goto %00000367
000007f4: goto %00000531

00000531:
00000534: R0 := 0x10000
0000053b: R0 := mem[R0 + 0xFC0, el]:u64
00000541: when R0 = 0 goto %0000053f
000007f5: goto %00000558

00000558:
0000055b: R0 := 0x11000
00000562: R0 := mem[R0 + 0x28, el]:u64
00000567: R30 := 0x700
0000056a: call @__cxa_finalize with return %0000053f

0000053f:
00000547: R30 := 0x704
00000549: call @deregister_tm_clones with return %0000054b

0000054b:
0000054e: R0 := 1
00000556: mem := mem with [R19 + 0x30] <- 7:0[R0]
000007f6: goto %00000367

00000367:
00000371: R19 := mem[R31 + 0x10, el]:u64
00000378: R29 := mem[R31, el]:u64
0000037d: R30 := mem[R31 + 8, el]:u64
00000381: R31 := R31 + 0x20
00000386: call R30 with noreturn

000007f7: sub __libc_csu_fini(__libc_csu_fini_result)
00000810: __libc_csu_fini_result :: out u32 = low:32[R0]

000004d1:
000004d4: call R30 with noreturn

000007f8: sub __libc_csu_init(__libc_csu_init_result)
00000811: __libc_csu_init_result :: out u32 = low:32[R0]

000003de:
000003e2: #6 := R31 - 0x40
000003e8: mem := mem with [#6, el]:u64 <- R29
000003ee: mem := mem with [#6 + 8, el]:u64 <- R30
000003f2: R31 := #6
000003f8: R29 := R31
000003fe: #7 := R31 + 0x10
00000404: mem := mem with [#7, el]:u64 <- R19
0000040a: mem := mem with [#7 + 8, el]:u64 <- R20
0000040f: R20 := 0x10000
00000415: R20 := R20 + 0xDC0
0000041b: #8 := R31 + 0x20
00000421: mem := mem with [#8, el]:u64 <- R21
00000427: mem := mem with [#8 + 8, el]:u64 <- R22
0000042c: R21 := 0x10000
00000432: R21 := R21 + 0xDB8
00000439: R20 := R20 + ~R21 + 1
0000043f: R22 := pad:64[31:0[R0]]
00000445: #9 := R31 + 0x30
0000044b: mem := mem with [#9, el]:u64 <- R23
00000451: mem := mem with [#9 + 8, el]:u64 <- R24
00000457: R23 := R1
0000045d: R24 := R2
00000462: R30 := 0x788
00000465: call @_init with return %00000467

00000467:
0000046b: #10 := ~(R20 ~>> 3)
0000046f: #11 := ~(R20 ~>> 3) + 1
00000474: VF := extend:65[#11] <> extend:65[#10] + 1
00000479: CF := pad:65[#11] <> pad:65[#10] + 1
0000047d: ZF := #11 = 0
00000481: NF := 63:63[#11]
00000487: when ZF goto %00000485
000007f9: goto %000004d6

000004d6:
000004dc: R20 :=

          >> 3 | R20 << 0x3D]
000004e1: R19 := 0
000007fa: goto %000004e3

000004e3:
000004e9: R3 := mem[R21 + (60:0[R19].0), el]:u64
000004ef: R2 := R24
000004f5: R19 := R19 + 1
000004fb: R1 := R23
00000501: R0 := pad:64[31:0[R22]]
00000506: R30 := 0x7B0
00000509: call R3 with return %0000050b

0000050b:
0000050f: #15 := ~R19
00000514: #16 := R20 + ~R19 + 1
0000051a: VF := extend:65[#16] <> extend:65[R20] + extend:65[#15] + 1
00000520: CF := pad:65[#16] <> pad:65[R20] + pad:65[#15] + 1
00000524: ZF := #16 = 0
00000528: NF := 63:63[#16]
0000052d: when ZF <> 1 goto %000004e3
000007fb: goto %00000485

00000485:
0000048e: #12 := R31 + 0x10
00000493: R19 := mem[#12, el]:u64
00000498: R20 := mem[#12 + 8, el]:u64
0000049e: #13 := R31 + 0x20
000004a3: R21 := mem[#13, el]:u64
000004a8: R22 := mem[#13 + 8, el]:u64
000004ae: #14 := R31 + 0x30
000004b3: R23 := mem[#14, el]:u64
000004b8: R24 := mem[#14 + 8, el]:u64
000004bf: R29 := mem[R31, el]:u64
000004c4: R30 := mem[R31 + 8, el]:u64
000004c8: R31 := R31 + 0x40
000004cd: call R30 with noreturn

000007fc: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
00000812: __libc_start_main_main :: in u64 = R0
00000813: __libc_start_main_arg2 :: in u32 = low:32[R1]
00000814: __libc_start_main_arg3 :: in out u64 = R2
00000815: __libc_start_main_auxv :: in out u64 = R3
00000816: __libc_start_main_result :: out u32 = low:32[R0]

00000272:
0000065f: R16 := 0x11000
00000666: R17 := mem[R16 + 8, el]:u64
0000066c: R16 := R16 + 8
00000671: call R17 with noreturn

000007fd: sub _fini(_fini_result)
00000817: _fini_result :: out u32 = low:32[R0]

00000030:
00000034: #0 := R31 - 0x10
0000003a: mem := mem with [#0, el]:u64 <- R29
00000040: mem := mem with [#0 + 8, el]:u64 <- R30
00000044: R31 := #0
0000004a: R29 := R31
00000051: R29 := mem[R31, el]:u64
00000056: R30 := mem[R31 + 8, el]:u64
0000005a: R31 := R31 + 0x10
0000005f: call R30 with noreturn

000007fe: sub _init(_init_result)
00000818: _init_result :: out u32 = low:32[R0]

00000463:
0000072f: #18 := R31 - 0x10
00000735: mem := mem with [#18, el]:u64 <- R29
0000073b: mem := mem with [#18 + 8, el]:u64 <- R30
0000073f: R31 := #18
00000745: R29 := R31
0000074a: R30 := 0x5A4
0000074c: call @call_weak_fn with return %0000074e

0000074e:
00000753: R29 := mem[R31, el]:u64
00000758: R30 := mem[R31 + 8, el]:u64
0000075c: R31 := R31 + 0x10
00000761: call R30 with noreturn

000007ff: sub _start(_start_result)
00000819: _start_result :: out u32 = low:32[R0]

00000227:
0000022a: R29 := 0
0000022f: R30 := 0
00000235: R5 := R0
0000023c: R1 := mem[R31, el]:u64
00000242: R2 := R31 + 8
00000248: R6 := R31
0000024d: R0 := 0x10000
00000254: R0 := mem[R0 + 0xFD8, el]:u64
00000259: R3 := 0x10000
00000260: R3 := mem[R3 + 0xFD0, el]:u64
00000265: R4 := 0x10000
0000026c: R4 := mem[R4 + 0xFB0, el]:u64
00000271: R30 := 0x644
00000274: call @__libc_start_main with return %00000276

00000276:
00000279: R30 := 0x648
0000027c: call @abort with return %00000800

00000800:
00000801: call @call_weak_fn with noreturn

00000802: sub abort()


0000027a:
0000068b: R16 := 0x11000
00000692: R17 := mem[R16 + 0x18, el]:u64
00000698: R16 := R16 + 0x18
0000069d: call R17 with noreturn

00000803: sub call_weak_fn(call_weak_fn_result)
0000081a: call_weak_fn_result :: out u32 = low:32[R0]

0000027e:
00000281: R0 := 0x10000
00000288: R0 := mem[R0 + 0xFC8, el]:u64
0000028e: when R0 = 0 goto %0000028c
00000804: goto %000005a8

0000028c:
00000294: call R30 with noreturn

000005a8:
000005ab: goto @__gmon_start__

000005a9:
00000675: R16 := 0x11000
0000067c: R17 := mem[R16 + 0x10, el]:u64
00000682: R16 := R16 + 0x10
00000687: call R17 with noreturn

00000805: sub deregister_tm_clones(deregister_tm_clones_result)
0000081b: deregister_tm_clones_result :: out u32 = low:32[R0]

00000298:
0000029b: R0 := 0x11000
000002a1: R0 := R0 + 0x30
000002a6: R1 := 0x11000
000002ac: R1 := R1 + 0x30
000002b2: #1 := ~R0
000002b7: #2 := R1 + ~R0 + 1
000002bd: VF := extend:65[#2] <> extend:65[R1] + extend:65[#1] + 1
000002c3: CF := pad:65[#2] <> pad:65[R1] + pad:65[#1] + 1
000002c7: ZF := #2 = 0
000002cb: NF := 63:63[#2]
000002d1: when ZF goto %000002cf
00000806: goto %0000058a

0000058a:
0000058d: R1 := 0x10000
00000594: R1 := mem[R1 + 0xFB8, el]:u64
00000599: when R1 = 0 goto %000002cf
00000807: goto %0000059d

000002cf:
000002d7: call R30 with noreturn

0000059d:
000005a1: R16 := R1
000005a6: call R16 with noreturn

00000808: sub frame_dummy(frame_dummy_result)
0000081c: frame_dummy_result :: out u32 = low:32[R0]

00000388:
0000038a: call @register_tm_clones with noreturn

00000809: sub main(main_argc, main_argv, main_result)
0000081d: main_argc :: in u32 = low:32[R0]
0000081e: main_argv :: in out u64 = R1
0000081f: main_result :: out u32 = low:32[R0]

0000038c:
00000390: R31 := R31 - 0x10
00000398: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R0]
0000039d: R8 := 0x11000
000003a2: R9 := 1
000003aa: mem := mem with [R8 + 0x34, el]:u32 <- 31:0[R9]
000003b1: R10 := pad:64[mem[R31 + 0xC, el]:u32]
000003b6: R9 := 0x11000
000003be: mem := mem with [R9 + 0x38, el]:u32 <- 31:0[R10]
000003c3: R0 := 0
000003ca: mem := mem with [R9 + 0x38, el]:u32 <- 0
000003d1: mem := mem with [R8 + 0x34, el]:u32 <- 0
000003d7: R31 := R31 + 0x10
000003dc: call R30 with noreturn

0000080a: sub register_tm_clones(register_tm_clones_result)
00000820: register_tm_clones_result :: out u32 = low:32[R0]

000002d9:
000002dc: R0 := 0x11000
000002e2: R0 := R0 + 0x30
000002e7: R1 := 0x11000
000002ed: R1 := R1 + 0x30
000002f4: R1 := R1 + ~R0 + 1
000002fb: R2 := 0.0:0[R1 >> 0x3F | R1 << 1]
00000302: R1 := R2 + (R1 ~>> 3)
00000308: #3 := ~(R1 ~>> 1)
0000030c: #4 := ~(R1 ~>> 1) + 1
00000311: VF := extend:65[#4] <> extend:65[#3] + 1
00000316: CF := pad:65[#4] <> pad:65[#3] + 1
0000031a: ZF := #4 = 0
0000031e: NF := 63:63[#4]
00000326: R1 :=

          >> 1 | R1 << 0x3F]
0000032c: when ZF goto %0000032a
0000080b: goto %0000056c

0000056c:
0000056f: R2 := 0x10000
00000576: R2 := mem[R2 + 0xFE0, el]:u64
0000057b: when R2 = 0 goto %0000032a
0000080c: goto %0000057f

0000032a:
00000332: call R30 with noreturn

0000057f:
00000583: R16 := R2
00000588: call R16 with noreturn
