000383f3: program
000383f4: sub __ctype_b_loc(__ctype_b_loc_result)
00038a81: __ctype_b_loc_result :: out u32 = low:32[R0]

0000f902:
000305b5: R16 := 0x27000
000305bd: R17 := mem[R16 + 0xE30, el]:u64
000305c4: R16 := R16 + 0xE30
000305c9: call R17 with noreturn

000383f5: sub __ctype_tolower_loc(__ctype_tolower_loc_result)
00038a82: __ctype_tolower_loc_result :: out u32 = low:32[R0]

0000f5b4:
00030169: R16 := 0x27000
00030171: R17 := mem[R16 + 0xCD0, el]:u64
00030178: R16 := R16 + 0xCD0
0003017d: call R17 with noreturn

000383f6: sub __ctype_toupper_loc(__ctype_toupper_loc_result)
00038a83: __ctype_toupper_loc_result :: out u32 = low:32[R0]

0000f66d:
0003040c: R16 := 0x27000
00030414: R17 := mem[R16 + 0xDA8, el]:u64
0003041b: R16 := R16 + 0xDA8
00030420: call R17 with noreturn

000383f7: sub __cxa_finalize(__cxa_finalize_result)
00038a84: __cxa_finalize_result :: out u32 = low:32[R0]

0002e90c:
000300ec: R16 := 0x27000
000300f4: R17 := mem[R16 + 0xCA8, el]:u64
000300fb: R16 := R16 + 0xCA8
00030100: call R17 with noreturn

000383f8: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
00038a85: __do_global_dtors_aux_result :: out u32 = low:32[R0]

0002e86b:
0002e873: mem := mem with [R31 - 0x20, el]:u64 <- R29
0002e877: mem := mem with [R31 - 0x18, el]:u64 <- R30
0002e87a: R31 := R31 - 0x20
0002e881: R29 := R31
0002e889: mem := mem with [R31 + 0x10, el]:u64 <- R19
0002e88f: R19 := 0x28000
0002e898: R0 := pad:64[mem[R19 + 0x498]]
0002e8a4: #17399 := ~31:0[R0] = 0
0002e89e: when #17399 goto %0002e89c
000383fb: goto %0002e8ca

0002e8ca:
0002e8ce: R0 := 0x27000
0002e8d6: R0 := mem[R0 + 0xF58, el]:u64
0002e8e2: #17401 := R0 = 0
0002e8dc: when #17401 goto %0002e8da
000383fa: goto %0002e8fa

0002e8fa:
0002e8fe: R0 := 0x28000
0002e906: R0 := mem[R0 + 8, el]:u64
0002e90b: R30 := 0x47E8
0002e90e: call @__cxa_finalize with return %0002e8da

0002e8da:
0002e8e7: R30 := 0x47EC
0002e8e9: call @deregister_tm_clones with return %0002e8eb

0002e8eb:
0002e8f0: R0 := 1
0002e8f8: mem := mem with [R19 + 0x498] <- low:8[31:0[R0]]
000383f9: goto %0002e89c

0002e89c:
0002e8ac: R19 := mem[R31 + 0x10, el]:u64
0002e8b6: R29 := mem[R31, el]:u64
0002e8ba: R30 := mem[R31 + 8, el]:u64
0002e8bd: R31 := R31 + 0x20
0002e8c2: call R30 with noreturn

000383fc: sub __errno_location(__errno_location_result)
00038a86: __errno_location_result :: out u64 = R0

000161c2:
00030858: R16 := 0x27000
00030860: R17 := mem[R16 + 0xF08, el]:u64
00030867: R16 := R16 + 0xF08
0003086c: call R17 with noreturn

000383fd: sub __fdelt_chk(__fdelt_chk_result)
00038a87: __fdelt_chk_result :: out u32 = low:32[R0]

0001e04d:
00030295: R16 := 0x27000
0003029d: R17 := mem[R16 + 0xD30, el]:u64
000302a4: R16 := R16 + 0xD30
000302a9: call R17 with noreturn

000383fe: sub __fprintf_chk(__fprintf_chk_result)
00038a88: __fprintf_chk_result :: out u32 = low:32[R0]

00020263:
00030583: R16 := 0x27000
0003058b: R17 := mem[R16 + 0xE20, el]:u64
00030592: R16 := R16 + 0xE20
00030597: call R17 with noreturn

000383ff: sub __libc_csu_fini(__libc_csu_fini_result)
00038a89: __libc_csu_fini_result :: out u32 = low:32[R0]

000224d3:
000224d6: call R30 with noreturn

00038400: sub __libc_csu_init(__libc_csu_init_result)
00038a8a: __libc_csu_init_result :: out u32 = low:32[R0]

000223ef:
000223f7: mem := mem with [R31 - 0x40, el]:u64 <- R29
000223fb: mem := mem with [R31 - 0x38, el]:u64 <- R30
000223fe: R31 := R31 - 0x40
00022405: R29 := R31
0002240e: mem := mem with [R31, el]:u64 <- R31 + 0x20
00022412: mem := mem with [R31, el]:u64 <- R31 + 0x28
00022418: R20 := 0x27000
0002241f: R20 := R20 + 0xA10
00022428: mem := mem with [R31, el]:u64 <- R31 + 0x40
0002242c: mem := mem with [R31, el]:u64 <- R31 + 0x48
00022432: R21 := 0x27000
00022439: R21 := R21 + 0xA08
00022441: R20 := R20 - R21
0002244a: R22 := 31:0[R0]
00022453: mem := mem with [R31, el]:u64 <- R31 + 0x60
00022457: mem := mem with [R31, el]:u64 <- R31 + 0x68
0002245f: R23 := R1
00022467: R24 := R2
0002246c: R30 := 0x11610
0002246f: call @_init with return %00022471

00022471:
00022477: #12734 := ~(R20 ~>> 3) + 1
0002247b: NF := 63:63[#12734]
0002247e: VF := ~63:63[~(R20 ~>> 3)] & 63:63[#12734]
00022481: ZF := #12734 = 0
00022484: CF := 63:63[~(R20 ~>> 3)] & ~63:63[#12734]
00022492: #12736 := ZF
0002248c: when #12736 goto %0002248a
00038403: goto %000224d8

000224d8:
000224dd: R20 := R20 >> 3
000224e3: R19 := 0
00038402: goto %000224e5

000224e5:
000224ec: R3 := mem[R21 + (R19 << 3), el]:u64
000224f4: R2 := R24
000224fb: R19 := R19 + 1
00022503: R1 := R23
0002250c: R0 := 31:0[R22]
00022512: R30 := 0x11638
00022514: call R3 with return %00022516

00022516:
0002251c: #12754 := 1 + ~R19 + R20
00022520: NF := 63:63[#12754]
00022523: VF := 63:63[R20] & 63:63[~R19] & ~63:63[#12754] | ~63:63[R20] &
          ~63:63[~R19] & 63:63[#12754]
00022526: ZF := #12754 = 0
00022529: CF := 63:63[R20] & 63:63[~R19] | 63:63[~R19] & ~63:63[#12754] |
          63:63[R20] & ~63:63[#12754]
00022536: #12756 := ~ZF <> 0
00022530: when #12756 goto %000224e5
00038401: goto %0002248a

0002248a:
0002249b: R19 := mem[R31 + 0x10, el]:u64
0002249f: R20 := mem[R31 + 0x18, el]:u64
000224a8: R21 := mem[R31 + 0x20, el]:u64
000224ac: R22 := mem[R31 + 0x28, el]:u64
000224b5: R23 := mem[R31 + 0x30, el]:u64
000224b9: R24 := mem[R31 + 0x38, el]:u64
000224c3: R29 := mem[R31, el]:u64
000224c7: R30 := mem[R31 + 8, el]:u64
000224ca: R31 := R31 + 0x40
000224cf: call R30 with noreturn

00038404: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
00038a8b: __libc_start_main_main :: in u64 = R0
00038a8c: __libc_start_main_arg2 :: in u32 = low:32[R1]
00038a8d: __libc_start_main_arg3 :: in out u64 = R2
00038a8e: __libc_start_main_auxv :: in out u64 = R3
00038a8f: __libc_start_main_result :: out u32 = low:32[R0]

0002e79e:
000302c7: R16 := 0x27000
000302cf: R17 := mem[R16 + 0xD40, el]:u64
000302d6: R16 := R16 + 0xD40
000302db: call R17 with noreturn

00038405: sub __posix_getopt(__posix_getopt_result)
00038a90: __posix_getopt_result :: out u32 = low:32[R0]

0002b49e:
0003035d: R16 := 0x27000
00030365: R17 := mem[R16 + 0xD70, el]:u64
0003036c: R16 := R16 + 0xD70
00030371: call R17 with noreturn

00038406: sub __printf_chk(__printf_chk_result)
00038a91: __printf_chk_result :: out u32 = low:32[R0]

00013ec3:
000302f9: R16 := 0x27000
00030301: R17 := mem[R16 + 0xD50, el]:u64
00030308: R16 := R16 + 0xD50
0003030d: call R17 with noreturn

00038407: sub __snprintf_chk(__snprintf_chk_result)
00038a92: __snprintf_chk_result :: out u32 = low:32[R0]

00020942:
000301b4: R16 := 0x27000
000301bc: R17 := mem[R16 + 0xCE8, el]:u64
000301c3: R16 := R16 + 0xCE8
000301c8: call R17 with noreturn

00038408: sub __sprintf_chk(__sprintf_chk_result)
00038a93: __sprintf_chk_result :: out u32 = low:32[R0]

0000f8bc:
0003003d: R16 := 0x27000
00030045: R17 := mem[R16 + 0xC70, el]:u64
0003004c: R16 := R16 + 0xC70
00030051: call R17 with noreturn

00038409: sub __stack_chk_fail(__stack_chk_fail_result)
00038a94: __stack_chk_fail_result :: out u32 = low:32[R0]

0001061f:
00030457: R16 := 0x27000
0003045f: R17 := mem[R16 + 0xDC0, el]:u64
00030466: R16 := R16 + 0xDC0
0003046b: call R17 with noreturn

0003840a: sub __syslog_chk(__syslog_chk_result)
00038a95: __syslog_chk_result :: out u32 = low:32[R0]

00014ec3:
000306c8: R16 := 0x27000
000306d0: R17 := mem[R16 + 0xE88, el]:u64
000306d7: R16 := R16 + 0xE88
000306dc: call R17 with noreturn

0003840b: sub _fini(_fini_result)
00038a96: _fini_result :: out u32 = low:32[R0]

0000001b:
00000023: mem := mem with [R31 - 0x10, el]:u64 <- R29
00000027: mem := mem with [R31 - 8, el]:u64 <- R30
0000002a: R31 := R31 - 0x10
00000031: R29 := R31
0000003b: R29 := mem[R31, el]:u64
0000003f: R30 := mem[R31 + 8, el]:u64
00000042: R31 := R31 + 0x10
00000047: call R30 with noreturn

0003840c: sub _init(_init_result)
00038a97: _init_result :: out u32 = low:32[R0]

0002246d:
000345a5: mem := mem with [R31 - 0x10, el]:u64 <- R29
000345a9: mem := mem with [R31 - 8, el]:u64 <- R30
000345ac: R31 := R31 - 0x10
000345b3: R29 := R31
000345b8: R30 := 0x1DDC
000345ba: call @call_weak_fn with return %000345bc

000345bc:
000345c4: R29 := mem[R31, el]:u64
000345c8: R30 := mem[R31 + 8, el]:u64
000345cb: R31 := R31 + 0x10
000345d0: call R30 with noreturn

0003840d: sub _start(_start_result)
00038a98: _start_result :: out u32 = low:32[R0]

0002e746:
0002e74a: R29 := 0
0002e750: R30 := 0
0002e758: R5 := R0
0002e760: R1 := mem[R31, el]:u64
0002e767: R2 := R31 + 8
0002e76e: R6 := R31
0002e774: R0 := 0x27000
0002e77c: R0 := mem[R0 + 0xFD8, el]:u64
0002e782: R3 := 0x27000
0002e78a: R3 := mem[R3 + 0xFC8, el]:u64
0002e790: R4 := 0x27000
0002e798: R4 := mem[R4 + 0xF40, el]:u64
0002e79d: R30 := 0x4730
0002e7a0: call @__libc_start_main with return %0002e7a2

0002e7a2:
0002e7a5: R30 := 0x4734
0002e7a8: call @abort with return %0003840e

0003840e:
0003840f: call @call_weak_fn with noreturn

00038410: sub abort()


0002e7a6:
00030506: R16 := 0x27000
0003050e: R17 := mem[R16 + 0xDF8, el]:u64
00030515: R16 := R16 + 0xDF8
0003051a: call R17 with noreturn

00038411: sub accept(accept_fd, accept_addr, accept_len_ptr, accept_result)
00038a99: accept_fd :: in u32 = low:32[R0]
00038a9a: accept_addr :: in u64 = R1
00038a9b: accept_len_ptr :: in out u64 = R2
00038a9c: accept_result :: out u32 = low:32[R0]

0002c88d:
00030376: R16 := 0x27000
0003037e: R17 := mem[R16 + 0xD78, el]:u64
00030385: R16 := R16 + 0xD78
0003038a: call R17 with noreturn

00038412: sub acl_add(acl_add_result)
00038a9d: acl_add_result :: out u32 = low:32[R0]

00014c7e:
00014c86: mem := mem with [R31 - 0x70, el]:u64 <- R29
00014c8a: mem := mem with [R31 - 0x68, el]:u64 <- R30
00014c8d: R31 := R31 - 0x70
00014c94: R29 := R31
00014c9d: mem := mem with [R31, el]:u64 <- R31 + 0x40
00014ca1: mem := mem with [R31, el]:u64 <- R31 + 0x48
00014ca7: R21 := 0x27000
00014caf: R3 := mem[R21 + 0xFB8, el]:u64
00014cb8: mem := mem with [R31, el]:u64 <- R31 + 0x20
00014cbc: mem := mem with [R31, el]:u64 <- R31 + 0x28
00014cc4: R20 := R0
00014ccc: R0 := R1
00014cd4: R1 := mem[R3, el]:u64
00014cdc: mem := mem with [R31 + 0x68, el]:u64 <- R1
00014ce2: R1 := 0
00014ceb: mem := mem with [R31, el]:u64 <- R31 + 0x80
00014cef: mem := mem with [R31, el]:u64 <- R31 + 0x88
00014cf6: R25 := 0
00014d02: #5224 := R20 = 0
00014cfc: when #5224 goto %00014cfa
00038422: goto %00015e1d

00015e1d:
00015e24: mem := mem with [R31, el]:u64 <- R31 + 0x60
00015e28: mem := mem with [R31, el]:u64 <- R31 + 0x68
00015e31: R23 := 31:0[R2]
00015e36: R30 := 0xAE04
00015e38: call @strdup with return %00015e3a

00015e3a:
00015e40: R19 := R0
00015e46: R0 := 8
00015e4b: R30 := 0xAE10
00015e4d: call @new with return %00015e4f

00015e4f:
00015e55: R22 := R0
00015e5b: R1 := 0x12000
00015e63: R0 := R19
00015e6a: R1 := R1 + 0x508
00015e6f: R30 := 0xAE24
00015e72: call @strcspn with return %00015e74

00015e74:
00015e7a: R24 := R0
00015e81: R26 := 0x20
00015e89: R0 := R19
00015e90: R24 := extend:64[31:0[R24]]
00015e95: R30 := 0xAE38
00015e97: call @strlen with return %00015e99

00015e99:
00015e9f: #5742 := 1 + ~R0 + R24
00015ea3: NF := 63:63[#5742]
00015ea6: VF := 63:63[R24] & 63:63[~R0] & ~63:63[#5742] | ~63:63[R24] &
          ~63:63[~R0] & 63:63[#5742]
00015ea9: ZF := #5742 = 0
00015eac: CF := 63:63[R24] & 63:63[~R0] | 63:63[~R0] & ~63:63[#5742] |
          63:63[R24] & ~63:63[#5742]
00015eb9: #5744 := ~CF <> 0
00015eb3: when #5744 goto %00015d0b
00038421: goto %00015db2

00015d0b:
00015d12: R25 := R24 + 1
00015d1a: R0 := R19 + R25
00015d21: R1 := R31 + 0x60
00015d28: R2 := 0xA
00015d2d: R30 := 0xAF78
00015d30: call @strtol with return %00015d32

00015d32:
00015d38: #5697 := 1 + extend:64[~31:0[R26]] + extend:64[31:0[R0]]
00015d3c: NF := 63:63[#5697]
00015d3f: VF := 31:31[~31:0[R26]] & 31:31[R0] & ~63:63[#5697] |
          ~31:31[~31:0[R26]] & ~31:31[R0] & 63:63[#5697]
00015d42: ZF := #5697 = 0
00015d45: CF := 31:31[~31:0[R26]] & 31:31[R0] | 31:31[R0] & ~63:63[#5697] |
          31:31[~31:0[R26]] & ~63:63[#5697]
00015d55: #5699 := (CF & ~ZF) <> 0
00015d4f: when #5699 goto %00015d4d
00038420: goto %00015d81

00015d81:
00015d88: R1 := high:32[R1].pad:64[mem[R19 + R25]]
00015d93: #5703 := 31:0[R1] = 0
00015d8d: when #5703 goto %00015d4d
0003841f: goto %00015d96

00015d96:
00015d9c: R1 := mem[R31 + 0x60, el]:u64
00015da5: R26 := 31:0[R0]
00015dae: R1 := pad:64[mem[R1]]
00015dba: #5707 := 31:0[R1] = 0
00015db4: when #5707 goto %00015db2
0003841e: goto %00015d4d

00015d4d:
00015d5b: R2 := 0x12000
00015d63: R3 := R19
00015d6a: R2 := R2 + 0x510
00015d71: R1 := 1
00015d78: R0 := 3
00015d7f: R25 := 0
0003841d: goto %00014ebc

00015db2:
00015dc3: R0 := pad:64[mem[R19]]
00015dca: #5708 := 0xFFFFFFFFFFFFFFD6 + extend:64[31:0[R0]]
00015dce: NF := 63:63[#5708]
00015dd1: VF := 31:31[R0] & ~63:63[#5708]
00015dd4: ZF := #5708 = 0
00015dd7: CF := 31:31[R0] | 31:31[R0] & ~63:63[#5708] | ~63:63[#5708]
00015de5: #5710 := ~ZF <> 0
00015ddf: when #5710 goto %00014e35
0003841c: goto %00015de8

00015de8:
00015def: R1 := pad:64[mem[R19 + 1]]
00015df8: R2 := -31:0[R1]
00015e03: #5714 := ~31:0[R1] = 0
00015dfd: when #5714 goto %00014e35
0003841b: goto %00015e06

00014e35:
00014e3a: #5252 := 0xFFFFFFFFFFFFFFD0 + extend:64[31:0[R0]]
00014e3e: NF := 63:63[#5252]
00014e41: VF := 31:31[R0] & ~63:63[#5252]
00014e44: ZF := #5252 = 0
00014e47: CF := 31:31[R0] | 31:31[R0] & ~63:63[#5252] | ~63:63[#5252]
00014e56: #5254 := ZF
00014e50: when #5254 goto %00014e4e
0003841a: goto %00014e63

00014e4e:
00014e5f: R0 := pad:64[mem[R19 + 1]]
00014e6b: #5255 := ~31:0[R0] = 0
00014e65: when #5255 goto %00014e63
00038419: goto %00015e10

00015e10:
00015e17: R2 := 31:0[R26]
00015e1b: goto %00015e06

00014e63:
00014e73: R1 := R19
00014e7a: R0 := R31 + 0x58
00014e7f: R30 := 0xAF08
00014e81: call @so_resolv with return %00014e83

00014e83:
00014e8a: R25 := 31:0[R0]
00014e96: #5262 := 31:0[R0] = 0
00014e90: when #5262 goto %00014e8e
00038418: goto %00014ef6

00014e8e:
00014e9c: R2 := 0x12000
00014ea4: R3 := R19
00014eab: R2 := R2 + 0x530
00014eb2: R1 := 1
00014eb9: R0 := 3
00014ebe: goto %00014ebc

00014ebc:
00014ec2: R30 := 0xAFB4
00014ec5: call @__syslog_chk with return %00014ec7

00014ec7:
00014ecd: R0 := R22
00014ed2: R30 := 0xAFBC
00014ed4: call @free with return %00014ed6

00014ed6:
00014edc: R0 := R19
00014ee1: R30 := 0xAFC4
00014ee3: call @free with return %00014ee5

00014ee5:
00014eec: R23 := mem[R31 + 0x30, el]:u64
00014ef0: R24 := mem[R31 + 0x38, el]:u64
00014ef4: goto %00014cfa

00014ef6:
00014efb: R0 := 0x20
00014f04: R0 := 31:0[R0] - 31:0[R26]
00014f0d: R1 := pad:64[mem[R31 + 0x58, el]:u32]
00014f13: R24 := 1
00014f1e: R0 := -31:0[R0]
00014f30: #5280 := ZF
00014f2a: when #5280 goto %00014f28
00038417: goto %00015cc2

00015cc2:
00015cc9: R0 := pad:64[mem[R31 + 0x58, el]:u32]
00015cce: R30 := 0xAF40
00015cd0: call @inet_ntoa with return %00015cd2

00015cd2:
00015cd8: R3 := R0
00015ce1: R4 := pad:64[mem[R22 + 4, el]:u32]
00015cea: R1 := 31:0[R24]
00015cf0: R2 := 0x12000
00015cf7: R0 := 4
00015cfe: R2 := R2 + 0x558
00015d03: R30 := 0xAF5C
00015d05: call @__syslog_chk with return %00015d07

00015d07:
00015d09: goto %00014f28

00015e06:
00015e0c: mem := mem with [R31 + 0x58, el]:u32 <- 0
00038416: goto %00014f28

00014f28:
00014f39: R0 := pad:64[mem[R31 + 0x58, el]:u32]
00014f40: #5281 := extend:64[31:0[R23]]
00014f44: NF := 63:63[#5281]
00014f47: VF := 31:31[R23] & ~63:63[#5281]
00014f4a: ZF := #5281 = 0
00014f4d: CF := 31:31[R23] | 31:31[R23] & ~63:63[#5281] | ~63:63[#5281]
00014f56: R3 := 0x12000
00014f5d: R3 := R3 + 0x500
00014f63: R24 := 0x12000
00014f6a: R24 := R24 + 0x4F8
00014f80: #5283 := ZF
00014f81: goto %00014f78

00014f78:
00014f7a: when #5283 goto %00014f72
00014f7b: goto %00014f75

00014f75:
00014f76: R24 := R3
00014f7d: goto %00014f79

00014f72:
00014f73: R24 := R24
00014f7c: goto %00014f79

00014f79:
00014f89: R25 := 1
00014f8e: R30 := 0xAE84
00014f91: call @inet_ntoa with return %00014f93

00014f93:
00014f99: R4 := R0
00014fa2: R5 := pad:64[mem[R22 + 4, el]:u32]
00014faa: R3 := R24
00014fb3: R1 := 31:0[R25]
00014fba: R0 := 6
00014fc0: R2 := 0x12000
00014fc7: R2 := R2 + 0x588
00014fcc: R30 := 0xAEA4
00014fce: call @__syslog_chk with return %00014fd0

00014fd0:
00014fd6: R0 := mem[R20, el]:u64
00014fdf: R1 := 31:0[R23]
00014fe7: R2 := R22
00014fec: R30 := 0xAEB4
00014fef: call @plist_add with return %00015c9e

00015c9e:
00015ca4: mem := mem with [R20, el]:u64 <- R0
00015cac: R0 := R19
00015cb1: R30 := 0xAEC0
00015cb3: call @free with return %00015cb5

00015cb5:
00015cbc: R23 := mem[R31 + 0x30, el]:u64
00015cc0: R24 := mem[R31 + 0x38, el]:u64
00038415: goto %00014cfa

00014cfa:
00014d0a: R21 := mem[R21 + 0xFB8, el]:u64
00014d12: R0 := mem[R31 + 0x68, el]:u64
00014d1a: R1 := mem[R21, el]:u64
00014d22: #5228 := 1 + ~R1 + R0
00014d26: NF := 63:63[#5228]
00014d29: VF := 63:63[R0] & 63:63[~R1] & ~63:63[#5228] | ~63:63[R0] &
          ~63:63[~R1] & 63:63[#5228]
00014d2c: ZF := #5228 = 0
00014d2f: CF := 63:63[R0] & 63:63[~R1] | 63:63[~R1] & ~63:63[#5228] |
          63:63[R0] & ~63:63[#5228]
00014d33: R0 := #5228
00014d39: R1 := 0
00014d45: #5230 := ~ZF <> 0
00014d3f: when #5230 goto %00014d3d
00038414: goto %00014def

00014d3d:
00014d4e: mem := mem with [R31, el]:u64 <- R31 + 0x60
00014d52: mem := mem with [R31, el]:u64 <- R31 + 0x68
00014d57: R30 := 0xAFFC
00014d59: call @__stack_chk_fail with return %00014d5b

00014d5b:
00038413: call @acl_check with noreturn

00014def:
00014df6: R0 := 31:0[R25]
00014dff: R19 := mem[R31 + 0x10, el]:u64
00014e03: R20 := mem[R31 + 0x18, el]:u64
00014e0c: R21 := mem[R31 + 0x20, el]:u64
00014e10: R22 := mem[R31 + 0x28, el]:u64
00014e19: R25 := mem[R31 + 0x40, el]:u64
00014e1d: R26 := mem[R31 + 0x48, el]:u64
00014e27: R29 := mem[R31, el]:u64
00014e2b: R30 := mem[R31 + 8, el]:u64
00014e2e: R31 := R31 + 0x70
00014e33: call R30 with noreturn

00038423: sub acl_check(acl_check_result)
00038a9e: acl_check_result :: out u32 = low:32[R0]

00014d5d:
00014d67: #5232 := R0 = 0
00014d61: when #5232 goto %00014d5f
00038427: goto %00014d75

00014d5f:
00014d6e: R0 := 0
00014d73: call R30 with noreturn

00014d75:
00014d7a: R5 := 0x20
00014d80: R4 := 1
00014d85: goto %00014d83

00014d83:
00014d8c: R3 := mem[R0 + 8, el]:u64
00014d95: R2 := pad:64[mem[R3 + 4, el]:u32]
00014d9e: R3 := pad:64[mem[R3, el]:u32]
00014da7: R2 := 31:0[R5] - 31:0[R2]
00014db0: R3 := 31:0[R1] ^ 31:0[R3]
00014dbb: R2 := -31:0[R2]
00014dcb: #5243 := ~ZF <> 0
00014dc5: when #5243 goto %00014dc3
00038426: goto %00014de6

00014de6:
00014ded: R0 := pad:64[mem[R0, el]:u32]
00038425: goto %00014dd7

00014dc3:
00014dd3: R0 := mem[R0 + 0x10, el]:u64
00014ddf: #5244 := R0 = 0
00014dd9: when #5244 goto %00014dd7
00038424: goto %00014d83

00014dd7:
00014de4: call R30 with noreturn

00038428: sub bind(bind_fd, bind_addr, bind_len, bind_result)
00038a9f: bind_fd :: in u32 = low:32[R0]
00038aa0: bind_addr :: in u64 = R1
00038aa1: bind_len :: in u64 = R2
00038aa2: bind_result :: out u32 = low:32[R0]

000163d1:
000300d3: R16 := 0x27000
000300db: R17 := mem[R16 + 0xCA0, el]:u64
000300e2: R16 := R16 + 0xCA0
000300e7: call R17 with noreturn

00038429: sub call_weak_fn(call_weak_fn_result)
00038aa3: call_weak_fn_result :: out u32 = low:32[R0]

0002e7aa:
0002e7ae: R0 := 0x27000
0002e7b6: R0 := mem[R0 + 0xFB0, el]:u64
0002e7c2: #17376 := R0 = 0
0002e7bc: when #17376 goto %0002e7ba
0003842a: goto %0002e95e

0002e7ba:
0002e7c7: call R30 with noreturn

0002e95e:
0002e961: goto @__gmon_start__

0002e95f:
000304bb: R16 := 0x27000
000304c3: R17 := mem[R16 + 0xDE0, el]:u64
000304ca: R16 := R16 + 0xDE0
000304cf: call R17 with noreturn

0003842b: sub calloc(calloc_nmemb, calloc_size, calloc_result)
00038aa4: calloc_nmemb :: in u64 = R0
00038aa5: calloc_size :: in u64 = R1
00038aa6: calloc_result :: out u64 = R0

0000f542:
000303c1: R16 := 0x27000
000303c9: R17 := mem[R16 + 0xD90, el]:u64
000303d0: R16 := R16 + 0xD90
000303d5: call R17 with noreturn

0003842c: sub chdir(chdir_arg1, chdir_result)
00038aa7: chdir_arg1 :: in u64 = R0
00038aa8: chdir_result :: out u32 = low:32[R0]

0002f2cb:
00030600: R16 := 0x27000
00030608: R17 := mem[R16 + 0xE48, el]:u64
0003060f: R16 := R16 + 0xE48
00030614: call R17 with noreturn

0003842d: sub chunked_data_send(chunked_data_send_result)
00038aa9: chunked_data_send_result :: out u32 = low:32[R0]

0001dce2:
0001dcea: mem := mem with [R31 - 0x70, el]:u64 <- R29
0001dcee: mem := mem with [R31 - 0x68, el]:u64 <- R30
0001dcf1: R31 := R31 - 0x70
0001dcf8: R29 := R31
0001dd01: mem := mem with [R31, el]:u64 <- R31 + 0x80
0001dd05: mem := mem with [R31, el]:u64 <- R31 + 0x88
0001dd0b: R25 := 0x27000
0001dd13: R2 := mem[R25 + 0xFB8, el]:u64
0001dd1c: mem := mem with [R31, el]:u64 <- R31 + 0x20
0001dd20: mem := mem with [R31, el]:u64 <- R31 + 0x28
0001dd29: R20 := 31:0[R1]
0001dd31: R3 := mem[R2, el]:u64
0001dd39: mem := mem with [R31 + 0x68, el]:u64 <- R3
0001dd3f: R3 := 0
0001dd46: R1 := 0x1000
0001dd4f: mem := mem with [R31, el]:u64 <- R31 + 0x40
0001dd53: mem := mem with [R31, el]:u64 <- R31 + 0x48
0001dd5c: R21 := 31:0[R0]
0001dd62: R0 := 0x1000
0001dd6b: mem := mem with [R31, el]:u64 <- R31 + 0x60
0001dd6f: mem := mem with [R31, el]:u64 <- R31 + 0x68
0001dd76: R22 := R31 + 0x58
0001dd7d: R23 := R31 + 0x54
0001dd85: mem := mem with [R31 + 0x54, el]:u32 <- 31:0[R1]
0001dd8c: R24 := R31 + 0x60
0001dd94: mem := mem with [R31 + 0x60, el]:u64 <- 0
0001dd99: R30 := 0xC18C
0001dd9b: call @new with return %0001dd9d

0001dd9d:
0001dda3: mem := mem with [R31 + 0x58, el]:u64 <- R0
0001ddaf: #10851 := ~31:31[R21]
0001dda9: when #10851 goto %0001dda7
00038445: goto %0002994b

0001dda7:
0001ddb7: R2 := R23
0001ddbf: R1 := R22
0001ddc8: R0 := 31:0[R20]
0001ddcd: R30 := 0xC240
0001ddcf: call @so_recvln with return %0001ddd1

0001ddd1:
0001ddd6: #10861 := extend:64[31:0[R0]]
0001ddda: NF := 63:63[#10861]
0001dddd: VF := 31:31[R0] & ~63:63[#10861]
0001dde0: ZF := #10861 = 0
0001dde3: CF := 31:31[R0] | 31:31[R0] & ~63:63[#10861] | ~63:63[#10861]
0001ddf4: #10863 := (NF <> VF | ZF) <> 0
0001ddee: when #10863 goto %0001ddec
00038444: goto %000297a5

000297a5:
000297ab: R0 := mem[R31 + 0x58, el]:u64
000297b3: R1 := R24
000297ba: R2 := 0x10
000297bf: R30 := 0xC258
000297c1: call @strtol with return %000297c3

000297c3:
000297c9: R19 := R0
000297ce: R30 := 0xC260
000297d0: call @__ctype_b_loc with return %000297d2

000297d2:
000297d8: R2 := mem[R31 + 0x60, el]:u64
000297e0: R1 := mem[R0, el]:u64
000297e9: R0 := pad:64[mem[R2]]
000297f0: #15460 := 0xFFFFFFFFFFFFFFC5 + extend:64[31:0[R0]]
000297f4: NF := 63:63[#15460]
000297f7: VF := 31:31[R0] & ~63:63[#15460]
000297fa: ZF := #15460 = 0
000297fd: CF := 31:31[R0] | 31:31[R0] & ~63:63[#15460] | ~63:63[#15460]
00029807: R0 := pad:64[7:0[R0]] << 1
00029811: R0 := 31:0[R0] & 0x2000
00029837: #15488 := ~ZF <> 0
00029838: goto %0002982f

0002982f:
00029831: when #15488 goto %00029817
00029832: goto %00029823

00029823:
00029824: NF := 0
00029827: ZF := 0
0002982a: CF := 0
0002982d: VF := 0
00029834: goto %00029830

00029817:
00029818: NF := 63:63[extend:64[31:0[R0]] + 0]
0002981b: VF := 31:31[R0] & ~63:63[extend:64[31:0[R0]] + 0]
0002981e: ZF := extend:64[31:0[R0]] + 0 = 0
00029821: CF := 31:31[R0] | ~63:63[extend:64[31:0[R0]] + 0] | 31:31[R0] &
          ~63:63[extend:64[31:0[R0]] + 0]
00029833: goto %00029830

00029830:
00029844: #15491 := ZF
0002983e: when #15491 goto %000296d0
00038443: goto %00029847

00029847:
0002984d: R26 := mem[R31 + 0x58, el]:u64
00029855: R0 := R26
0002985a: R30 := 0xC290
0002985c: call @strlen with return %0002985e

0002985e:
00029864: R1 := R26
0002986c: R2 := R0
00029875: R0 := 31:0[R21]
0002987a: R30 := 0xC2A0
0002987c: call @write with return %0002987e

0002987e:
00029887: #15504 := 31:0[R19] = 0
00029881: when #15504 goto %000295a1
00038442: goto %0002988a

0002988a:
00029895: #15506 := ZF
0002988f: when #15506 goto %0001dda7
00038441: goto %00029898

00029898:
0002989d: R2 := extend:64[31:0[R19]]
000298a6: R1 := 31:0[R20]
000298af: R0 := 31:0[R21]
000298b4: R30 := 0xC2BC
000298b6: call @sub_b518 with return %000298b8

000298b8:
000298c2: #15514 := 31:0[R0] = 0
000298bc: when #15514 goto %000298ba
00038440: goto %00029906

00029906:
0002990c: R2 := R23
00029914: R1 := R22
0002991d: R0 := 31:0[R20]
00029922: R30 := 0xC2D0
00029924: call @so_recvln with return %00029926

00029926:
0002992b: #15525 := extend:64[31:0[R0]]
0002992f: NF := 63:63[#15525]
00029932: VF := 31:31[R0] & ~63:63[#15525]
00029935: ZF := #15525 = 0
00029938: CF := 31:31[R0] | 31:31[R0] & ~63:63[#15525] | ~63:63[#15525]
00029948: #15527 := (NF = VF & ~ZF) <> 0
00029942: when #15527 goto %000297a5
0003843f: goto %0001ddec

0002994b:
0003843e: goto %0002994d

0002994d:
00029953: R2 := R23
0002995b: R1 := R22
00029964: R0 := 31:0[R20]
00029969: R30 := 0xC1A8
0002996b: call @so_recvln with return %0002996d

0002996d:
00029972: #15537 := extend:64[31:0[R0]]
00029976: NF := 63:63[#15537]
00029979: VF := 31:31[R0] & ~63:63[#15537]
0002997c: ZF := #15537 = 0
0002997f: CF := 31:31[R0] | 31:31[R0] & ~63:63[#15537] | ~63:63[#15537]
0002998f: #15539 := (NF <> VF | ZF) <> 0
00029989: when #15539 goto %0001ddec
0003843d: goto %00029992

0001ddec:
0001ddfa: R0 := 0x27000
0001de02: R0 := mem[R0 + 0xF78, el]:u64
0001de0b: R0 := pad:64[mem[R0, el]:u32]
0001de17: #10864 := ~31:0[R0] = 0
0001de11: when #10864 goto %0001de0f
0003843c: goto %0001de35

0001de0f:
0001de1d: R1 := 0x12000
0001de24: R0 := 1
0001de2b: R1 := R1 + 0x848
0001de30: R30 := 0xC3E8
0001de32: call @__printf_chk with return %0001de34

0001de34:
0001de37: goto %0001de35

00029992:
00029998: R0 := mem[R31 + 0x58, el]:u64
000299a0: R1 := R24
000299a7: R2 := 0x10
000299ac: R30 := 0xC1C0
000299ae: call @strtol with return %000299b0

000299b0:
000299b6: R19 := R0
000299bb: R30 := 0xC1C8
000299bd: call @__ctype_b_loc with return %000299bf

000299bf:
000299c5: R1 := mem[R31 + 0x60, el]:u64
000299cd: R0 := mem[R0, el]:u64
000299d6: R2 := pad:64[mem[R1]]
000299dd: #15546 := 0xFFFFFFFFFFFFFFC5 + extend:64[31:0[R2]]
000299e1: NF := 63:63[#15546]
000299e4: VF := 31:31[R2] & ~63:63[#15546]
000299e7: ZF := #15546 = 0
000299ea: CF := 31:31[R2] | 31:31[R2] & ~63:63[#15546] | ~63:63[#15546]
000299f4: R2 := pad:64[7:0[R2]] << 1
000299fe: R0 := 31:0[R0] & 0x2000
00029a24: #15574 := ~ZF <> 0
00029a25: goto %00029a1c

00029a1c:
00029a1e: when #15574 goto %00029a04
00029a1f: goto %00029a10

00029a10:
00029a11: NF := 0
00029a14: ZF := 0
00029a17: CF := 0
00029a1a: VF := 0
00029a21: goto %00029a1d

00029a04:
00029a05: NF := 63:63[extend:64[31:0[R0]] + 0]
00029a08: VF := 31:31[R0] & ~63:63[extend:64[31:0[R0]] + 0]
00029a0b: ZF := extend:64[31:0[R0]] + 0 = 0
00029a0e: CF := 31:31[R0] | ~63:63[extend:64[31:0[R0]] + 0] | 31:31[R0] &
          ~63:63[extend:64[31:0[R0]] + 0]
00029a20: goto %00029a1d

00029a1d:
00029a31: #15577 := ZF
00029a2b: when #15577 goto %000296d0
0003843b: goto %00029a34

000296d0:
000296d4: R0 := 0x27000
000296dc: R0 := mem[R0 + 0xF78, el]:u64
000296e5: R0 := pad:64[mem[R0, el]:u32]
000296f0: #15435 := 31:0[R0] = 0
000296ea: when #15435 goto %0001de35
0003843a: goto %000296f3

000296f3:
000296f7: R1 := 0x12000
000296fe: R0 := 1
00029705: R1 := R1 + 0x878
0002970a: R30 := 0xC3C4
0002970c: call @__printf_chk with return %0002970e

0002970e:
00029710: goto %0001de35

00029a34:
00029a3d: #15578 := 31:0[R19] = 0
00029a37: when #15578 goto %000295a1
00038439: goto %00029a40

000295a1:
000295a8: R0 := ~31:0[R21]
000295b0: R19 := pad:64[1:1[R0]]
000295b5: goto %000295b3

000295b3:
000295bc: R2 := R23
000295c4: R1 := R22
000295cd: R0 := 31:0[R20]
000295d2: R30 := 0xC35C
000295d4: call @so_recvln with return %000295d6

000295d6:
000295db: #15420 := extend:64[31:0[R0]]
000295df: NF := 63:63[#15420]
000295e2: VF := 31:31[R0] & ~63:63[#15420]
000295e5: ZF := #15420 = 0
000295e8: CF := 31:31[R0] | 31:31[R0] & ~63:63[#15420] | ~63:63[#15420]
00029613: #15422 := (NF = VF & ~ZF) <> 0
00029614: goto %0002960b

0002960b:
0002960d: when #15422 goto %000295f3
0002960e: goto %000295ff

000295ff:
00029600: NF := 0
00029603: ZF := 1
00029606: CF := 0
00029609: VF := 0
00029610: goto %0002960c

000295f3:
000295f4: NF := 63:63[extend:64[31:0[R19]] + 0]
000295f7: VF := 31:31[R19] & ~63:63[extend:64[31:0[R19]] + 0]
000295fa: ZF := extend:64[31:0[R19]] + 0 = 0
000295fd: CF := 31:31[R19] | ~63:63[extend:64[31:0[R19]] + 0] | 31:31[R19] &
          ~63:63[extend:64[31:0[R19]] + 0]
0002960f: goto %0002960c

0002960c:
00029621: #15425 := ZF
0002961b: when #15425 goto %00029619
00038438: goto %00029712

00029712:
00029718: R24 := mem[R31 + 0x58, el]:u64
00029720: R0 := R24
00029725: R30 := 0xC374
00029727: call @strlen with return %00029729

00029729:
0002972f: R1 := R24
00029737: R2 := R0
00029740: R0 := 31:0[R21]
00029745: R30 := 0xC384
00029747: call @write with return %00029749

00029749:
0002974f: R0 := mem[R31 + 0x58, el]:u64
00029758: R1 := pad:64[mem[R0]]
0002975f: #15448 := 0xFFFFFFFFFFFFFFF3 + extend:64[31:0[R1]]
00029763: NF := 63:63[#15448]
00029766: VF := 31:31[R1] & ~63:63[#15448]
00029769: ZF := #15448 = 0
0002976c: CF := 31:31[R1] | 31:31[R1] & ~63:63[#15448] | ~63:63[#15448]
00029795: #15450 := ~ZF <> 0
00029796: goto %0002978d

0002978d:
0002978f: when #15450 goto %00029775
00029790: goto %00029781

00029781:
00029782: NF := 0
00029785: ZF := 1
00029788: CF := 0
0002978b: VF := 0
00029792: goto %0002978e

00029775:
00029776: NF := 63:63[extend:64[31:0[R1]] - 0xA]
00029779: VF := 31:31[R1] & ~63:63[extend:64[31:0[R1]] - 0xA]
0002977c: ZF := extend:64[31:0[R1]] - 0xA = 0
0002977f: CF := 31:31[R1] | ~63:63[extend:64[31:0[R1]] - 0xA] | 31:31[R1] &
          ~63:63[extend:64[31:0[R1]] - 0xA]
00029791: goto %0002978e

0002978e:
000297a2: #15453 := ~ZF <> 0
0002979c: when #15453 goto %000295b3
00038437: goto %000296b4

00029619:
00029628: #15426 := extend:64[31:0[R0]]
0002962c: NF := 63:63[#15426]
0002962f: VF := 31:31[R0] & ~63:63[#15426]
00029632: ZF := #15426 = 0
00029635: CF := 31:31[R0] | 31:31[R0] & ~63:63[#15426] | ~63:63[#15426]
00029646: #15428 := (NF <> VF | ZF) <> 0
00029640: when #15428 goto %0002963e
00038436: goto %00029662

0002963e:
0002964e: R0 := mem[R31 + 0x58, el]:u64
00029653: R30 := 0xC3D0
00029655: call @free with return %00029657

00029657:
0002965c: R0 := 1
00029660: goto %0001de4e

00029662:
00029668: R0 := mem[R31 + 0x58, el]:u64
00029671: R1 := pad:64[mem[R0]]
00029678: #15429 := 0xFFFFFFFFFFFFFFF3 + extend:64[31:0[R1]]
0002967c: NF := 63:63[#15429]
0002967f: VF := 31:31[R1] & ~63:63[#15429]
00029682: ZF := #15429 = 0
00029685: CF := 31:31[R1] | 31:31[R1] & ~63:63[#15429] | ~63:63[#15429]
000296ae: #15431 := ~ZF <> 0
000296af: goto %000296a6

000296a6:
000296a8: when #15431 goto %0002968e
000296a9: goto %0002969a

0002969a:
0002969b: NF := 0
0002969e: ZF := 1
000296a1: CF := 0
000296a4: VF := 0
000296ab: goto %000296a7

0002968e:
0002968f: NF := 63:63[extend:64[31:0[R1]] - 0xA]
00029692: VF := 31:31[R1] & ~63:63[extend:64[31:0[R1]] - 0xA]
00029695: ZF := extend:64[31:0[R1]] - 0xA = 0
00029698: CF := 31:31[R1] | ~63:63[extend:64[31:0[R1]] - 0xA] | 31:31[R1] &
          ~63:63[extend:64[31:0[R1]] - 0xA]
000296aa: goto %000296a7

000296a7:
000296bc: #15434 := ZF
000296b6: when #15434 goto %000296b4
00038435: goto %000295b3

000296b4:
000296c1: R30 := 0xC39C
000296c3: call @free with return %000296c5

000296c5:
000296ca: R0 := 1
000296ce: goto %0001de4e

00029a40:
00029a4b: #15580 := ZF
00029a45: when #15580 goto %0002994d
00038434: goto %00029a4e

00029a4e:
00029a53: R2 := extend:64[31:0[R19]]
00029a5c: R1 := 31:0[R20]
00029a65: R0 := 31:0[R21]
00029a6a: R30 := 0xC208
00029a6c: call @sub_b518 with return %00029a6e

00029a6e:
00029a77: #15588 := ~31:0[R0] = 0
00029a71: when #15588 goto %0002994d
00038433: goto %000298ba

000298ba:
000298c8: R0 := 0x27000
000298d0: R0 := mem[R0 + 0xF78, el]:u64
000298d9: R0 := pad:64[mem[R0, el]:u32]
000298e4: #15515 := 31:0[R0] = 0
000298de: when #15515 goto %0001de35
00038432: goto %000298e7

000298e7:
000298eb: R1 := 0x12000
000298f2: R0 := 1
000298f9: R1 := R1 + 0x8B0
000298fe: R30 := 0xC22C
00029900: call @__printf_chk with return %00029902

00029902:
00029904: goto %0001de35

0001de35:
0001de3e: R0 := mem[R31 + 0x58, el]:u64
0001de43: R30 := 0xC2F0
0001de45: call @free with return %0001de47

0001de47:
0001de4c: R0 := 0
00038431: goto %0001de4e

0001de4e:
0001de54: R25 := mem[R25 + 0xFB8, el]:u64
0001de5c: R1 := mem[R31 + 0x68, el]:u64
0001de64: R2 := mem[R25, el]:u64
0001de6c: #10868 := 1 + ~R2 + R1
0001de70: NF := 63:63[#10868]
0001de73: VF := 63:63[R1] & 63:63[~R2] & ~63:63[#10868] | ~63:63[R1] &
          ~63:63[~R2] & 63:63[#10868]
0001de76: ZF := #10868 = 0
0001de79: CF := 63:63[R1] & 63:63[~R2] | 63:63[~R2] & ~63:63[#10868] |
          63:63[R1] & ~63:63[#10868]
0001de7d: R1 := #10868
0001de83: R2 := 0
0001de8f: #10870 := ~ZF <> 0
0001de89: when #10870 goto %0001de87
00038430: goto %00029557

0001de87:
0001de94: R30 := 0xC3F0
0001de96: call @__stack_chk_fail with return %0003842e

0003842e:
0003842f: call @tunnel with noreturn

00029557:
0002955e: R19 := mem[R31 + 0x10, el]:u64
00029562: R20 := mem[R31 + 0x18, el]:u64
0002956b: R21 := mem[R31 + 0x20, el]:u64
0002956f: R22 := mem[R31 + 0x28, el]:u64
00029578: R23 := mem[R31 + 0x30, el]:u64
0002957c: R24 := mem[R31 + 0x38, el]:u64
00029585: R25 := mem[R31 + 0x40, el]:u64
00029589: R26 := mem[R31 + 0x48, el]:u64
00029593: R29 := mem[R31, el]:u64
00029597: R30 := mem[R31 + 8, el]:u64
0002959a: R31 := R31 + 0x70
0002959f: call R30 with noreturn

00038446: sub close(close_fd, close_result)
00038aaa: close_fd :: in u32 = low:32[R0]
00038aab: close_result :: out u32 = low:32[R0]

000148e0:
00030470: R16 := 0x27000
00030478: R17 := mem[R16 + 0xDC8, el]:u64
0003047f: R16 := R16 + 0xDC8
00030484: call R17 with noreturn

00038447: sub config_close(config_close_result)
00038aac: config_close_result :: out u32 = low:32[R0]

0001455e:
00014568: #5077 := R0 = 0
00014562: when #5077 goto %00014560
00038448: goto %000168f3

00014560:
0001456d: call R30 with noreturn

000168f3:
000168fb: mem := mem with [R31 - 0x20, el]:u64 <- R29
000168ff: mem := mem with [R31 - 0x18, el]:u64 <- R30
00016902: R31 := R31 - 0x20
00016909: R29 := R31
00016911: mem := mem with [R31 + 0x10, el]:u64 <- R19
00016919: R19 := R0
00016921: R0 := mem[R0, el]:u64
00016926: R30 := 0xA5EC
00016928: call @hlist_free with return %0001692a

0001692a:
00016930: R0 := R19
00016938: R19 := mem[R31 + 0x10, el]:u64
00016942: R29 := mem[R31, el]:u64
00016946: R30 := mem[R31 + 8, el]:u64
00016949: R31 := R31 + 0x20
0001694d: call @free with noreturn

00038449: sub config_count(config_count_result)
00038aad: config_count_result :: out u32 = low:32[R0]

00014552:
00014558: R0 := mem[R0, el]:u64
0001455c: call @hlist_count with noreturn

0003844a: sub config_open(config_open_result)
00038aae: config_open_result :: out u32 = low:32[R0]

00012d7a:
00012d82: mem := mem with [R31 - 0xB0, el]:u64 <- R29
00012d86: mem := mem with [R31 - 0xA8, el]:u64 <- R30
00012d89: R31 := R31 - 0xB0
00012d8f: R4 := 0x6C67
00012d96: R4 := R4 & 0xFFFFFFFF0000FFFF | 0x626F0000
00012d9d: R29 := R31
00012da6: mem := mem with [R31, el]:u64 <- R31 + 0x40
00012daa: mem := mem with [R31, el]:u64 <- R31 + 0x48
00012db0: R22 := 0x27000
00012db7: R4 := R4 & 0xFFFF0000FFFFFFFF | 0x6C6100000000
00012dbf: R2 := mem[R22 + 0xFB8, el]:u64
00012dc5: R5 := 0
00012dcb: R1 := 0x12000
00012dd2: R1 := R1 + 0x3B0
00012dda: R3 := mem[R2, el]:u64
00012de2: mem := mem with [R31 + 0xA8, el]:u64 <- R3
00012de8: R3 := 0
00012df1: mem := mem with [R31, el]:u64 <- R31 + 0x60
00012df5: mem := mem with [R31, el]:u64 <- R31 + 0x68
00012dfe: mem := mem with [R31, el]:u64 <- R31 + 0xE0
00012e02: mem := mem with [R31, el]:u64 <- R31 + 0xE8
00012e0b: mem := mem with [R31, el]:u64 <- R31 + 0x100
00012e0f: mem := mem with [R31, el]:u64 <- R31 + 0x108
00012e18: mem := mem with [R31, el]:u64 <- R31 + 0x120
00012e1c: mem := mem with [R31, el]:u64 <- R31 + 0x128
00012e23: R30 := 0xA1C0
00012e26: call @fopen with return %00012e28

00012e28:
00012e32: #4504 := R0 = 0
00012e2c: when #4504 goto %00012e2a
00038477: goto %00017178

00012e2a:
00012e38: R23 := 0
00012e3d: goto %00012e3b

00017178:
0001717c: R24 := 0x27000
00017184: R21 := R0
0001718a: R0 := 0x1000
00017193: mem := mem with [R31, el]:u64 <- R31 + 0x20
00017197: mem := mem with [R31, el]:u64 <- R31 + 0x28
000171a0: mem := mem with [R31, el]:u64 <- R31 + 0x80
000171a4: mem := mem with [R31, el]:u64 <- R31 + 0x88
000171aa: R25 := 0x12000
000171b1: R26 := R31 + 0x70
000171ba: mem := mem with [R31, el]:u64 <- R31 + 0xA0
000171be: mem := mem with [R31, el]:u64 <- R31 + 0xA8
000171c3: R30 := 0xA1E8
000171c5: call @new with return %000171c7

000171c7:
000171cd: R20 := R0
000171d3: R0 := 8
000171d8: R30 := 0xA1F4
000171da: call @new with return %000171dc

000171dc:
000171e2: R24 := mem[R24 + 0xF78, el]:u64
000171ea: R23 := R0
000171f1: R25 := R25 + 0x3D0
000171f9: mem := mem with [R0, el]:u64 <- 0
00038476: goto %000169d2

000169d2:
000169e2: R0 := R21
000169e7: R30 := 0xA210
000169e9: call @feof with return %000169eb

000169eb:
000169f5: #6005 := ~31:0[R0] = 0
000169ef: when #6005 goto %000169ed
00038475: goto %00016a3d

00016a3d:
00016a43: R2 := R21
00016a4b: R0 := R20
00016a52: R1 := 0x1000
00016a57: R30 := 0xA224
00016a5a: call @fgets with return %00016a5c

00016a5c:
00016a65: #6021 := R0 = 0
00016a5f: when #6021 goto %000169ed
00038474: goto %00016a68

00016a68:
00016a6e: R0 := R20
00016a73: R30 := 0xA230
00016a75: call @strlen with return %00016a77

00016a77:
00016a7c: #6025 := 0xFFFFFFFFFFFFF000 + R0
00016a80: NF := 63:63[#6025]
00016a83: VF := 63:63[R0] & ~63:63[#6025]
00016a86: ZF := #6025 = 0
00016a89: CF := 63:63[R0] | ~63:63[#6025] | 63:63[R0] & ~63:63[#6025]
00016a97: #6027 := (CF & ~ZF) <> 0
00016a91: when #6027 goto %000169b5
00038473: goto %00016a9a

000169b5:
000169ba: R19 := 0x1000
000169bf: goto %000169bd

00016a9a:
00016aa1: R19 := 31:0[R0]
00016aac: #6031 := R0 = 0
00016aa6: when #6031 goto %000169d2
00038472: goto %000169bd

000169bd:
000169c6: R0 := R21
000169cb: R30 := 0xA248
000169ce: call @feof with return %000169d0

000169d0:
000169da: #6001 := ~31:0[R0] = 0
000169d4: when #6001 goto %000169d2
00038471: goto %00016aaf

00016aaf:
00016ab2: R30 := 0xA250
00016ab4: call @__ctype_b_loc with return %00016ab6

00016ab6:
00016abc: R28 := R0
00016ac2: R2 := 0
00016aca: R5 := mem[R0, el]:u64
00016acf: goto %00016acd

00016acd:
00016ad7: R4 := high:32[R4].pad:64[mem[R20 + R2]]
00016ae0: R1 := 31:0[R2]
00016ae7: R3 := pad:64[7:0[R4]] << 1
00016af5: #6040 := ~~13:13[R3]
00016aef: when #6040 goto %00016aed
00038470: goto %00016b24

00016b24:
00016b29: #6047 := 0xFFFFFFFFFFFFFFDD + extend:64[31:0[R4]]
00016b2d: NF := 63:63[#6047]
00016b30: VF := 31:31[R4] & ~63:63[#6047]
00016b33: ZF := #6047 = 0
00016b36: CF := 31:31[R4] | 31:31[R4] & ~63:63[#6047] | ~63:63[#6047]
00016b40: R0 := 0x3B
00016b6c: #6049 := ~ZF <> 0
00016b6d: goto %00016b64

00016b64:
00016b66: when #6049 goto %00016b47
00016b67: goto %00016b58

00016b58:
00016b59: NF := 0
00016b5c: ZF := 1
00016b5f: CF := 0
00016b62: VF := 0
00016b69: goto %00016b65

00016b47:
00016b48: #6050 := ~31:0[R0]
00016b4d: NF := 63:63[extend:64[31:0[R4]] + extend:64[#6050] + 1]
00016b50: VF := 31:31[R4] & 31:31[#6050] & ~63:63[extend:64[31:0[R4]] +
          extend:64[#6050] + 1] | ~31:31[R4] & ~31:31[#6050] &
          63:63[extend:64[31:0[R4]] + extend:64[#6050] + 1]
00016b53: ZF := extend:64[31:0[R4]] + extend:64[#6050] + 1 = 0
00016b56: CF := 31:31[R4] & 31:31[#6050] | 31:31[#6050] &
          ~63:63[extend:64[31:0[R4]] + extend:64[#6050] + 1] | 31:31[R4] &
          ~63:63[extend:64[31:0[R4]] + extend:64[#6050] + 1]
00016b68: goto %00016b65

00016b65:
00016b75: R4 := extend:64[31:0[R2]]
00016b80: #6053 := ZF
00016b7a: when #6053 goto %000169d2
0003846f: goto %00016b83

00016b83:
00016b8d: #6054 := ~3:3[R3]
00016b87: when #6054 goto %00016b85
0003846e: goto %00017134

00017134:
00017139: R4 := R4 + 1
00017141: #6258 := 1 + extend:64[~31:0[R4]] + extend:64[31:0[R19]]
00017145: NF := 63:63[#6258]
00017148: VF := 31:31[~31:0[R4]] & 31:31[R19] & ~63:63[#6258] |
          ~31:31[~31:0[R4]] & ~31:31[R19] & 63:63[#6258]
0001714b: ZF := #6258 = 0
0001714e: CF := 31:31[~31:0[R4]] & 31:31[R19] | 31:31[R19] & ~63:63[#6258] |
          31:31[~31:0[R4]] & ~63:63[#6258]
0001715e: #6260 := (NF <> VF | ZF) <> 0
00017158: when #6260 goto %000169d2
0003846d: goto %00017161

00017161:
00017168: R2 := high:32[R2].pad:64[mem[R20 + R4]]
00017175: #6261 := ~~3:3[R3]
0001716f: when #6261 goto %00017134
0003846c: goto %00016b85

00016b85:
00016b95: #6058 := 1 + extend:64[~31:0[R4]] + extend:64[31:0[R19]]
00016b99: NF := 63:63[#6058]
00016b9c: VF := 31:31[~31:0[R4]] & 31:31[R19] & ~63:63[#6058] |
          ~31:31[~31:0[R4]] & ~31:31[R19] & 63:63[#6058]
00016b9f: ZF := #6058 = 0
00016ba2: CF := 31:31[~31:0[R4]] & 31:31[R19] | 31:31[R19] & ~63:63[#6058] |
          31:31[~31:0[R4]] & ~63:63[#6058]
00016bb2: #6060 := (NF <> VF | ZF) <> 0
00016bac: when #6060 goto %000169d2
0003846b: goto %00016bb5

00016bb5:
00016bbc: R27 := extend:64[31:0[R4]]
00016bc3: #6062 := 0xFFFFFFFFFFFFFFA5 + extend:64[31:0[R0]]
00016bc7: NF := 63:63[#6062]
00016bca: VF := 31:31[R0] & ~63:63[#6062]
00016bcd: ZF := #6062 = 0
00016bd0: CF := 31:31[R0] | 31:31[R0] & ~63:63[#6062] | ~63:63[#6062]
00016bdf: #6064 := ZF
00016bd9: when #6064 goto %00016bd7
0003846a: goto %00016dc0

00016bd7:
00016be7: R0 := extend:64[31:0[R4]] + 1
00016bef: #6068 := 1 + extend:64[~31:0[R0]] + extend:64[31:0[R19]]
00016bf3: NF := 63:63[#6068]
00016bf6: VF := 31:31[~31:0[R0]] & 31:31[R19] & ~63:63[#6068] |
          ~31:31[~31:0[R0]] & ~31:31[R19] & 63:63[#6068]
00016bf9: ZF := #6068 = 0
00016bfc: CF := 31:31[~31:0[R0]] & 31:31[R19] | 31:31[R19] & ~63:63[#6068] |
          31:31[~31:0[R0]] & ~63:63[#6068]
00016c0c: #6070 := (NF <> VF | ZF) <> 0
00016c06: when #6070 goto %000169d2
00038469: goto %00016c0f

00016c0f:
00016c14: R0 := extend:64[31:0[R0]]
00016c19: goto %00016c17

00016c17:
00016c21: R2 := high:32[R2].pad:64[mem[R20 + R0]]
00016c2a: R6 := 31:0[R0]
00016c32: R1 := R20 + R0
00016c40: #6078 := ~~13:13[R2]
00016c3a: when #6078 goto %00016c38
00038468: goto %00016c6f

00016c6f:
00016c75: #6088 := 1 + extend:64[~31:0[R0]] + extend:64[31:0[R19]]
00016c79: NF := 63:63[#6088]
00016c7c: VF := 31:31[~31:0[R0]] & 31:31[R19] & ~63:63[#6088] |
          ~31:31[~31:0[R0]] & ~31:31[R19] & 63:63[#6088]
00016c7f: ZF := #6088 = 0
00016c82: CF := 31:31[~31:0[R0]] & 31:31[R19] | 31:31[R19] & ~63:63[#6088] |
          31:31[~31:0[R0]] & ~63:63[#6088]
00016c92: #6090 := (NF <> VF | ZF) <> 0
00016c8c: when #6090 goto %000169d2
00038467: goto %00016c95

00016c95:
00016c9b: R4 := extend:64[31:0[R19]] - 1
00016ca2: R0 := extend:64[31:0[R0]]
00016cab: R4 := 31:0[R4] - 31:0[R6]
00016cb2: R7 := 1
00016cb9: R8 := R0 + 0x31
00016cc1: R4 := R4 + R0
00016cca: R7 := 31:0[R7] - 31:0[R6]
00016ccf: goto %00016ccd

00016ccd:
00016cd7: R2 := high:32[R2].pad:64[mem[R20 + R0]]
00016ce0: R3 := 31:0[R0]
00016ce7: #6104 := 0xFFFFFFFFFFFFFFA3 + extend:64[31:0[R2]]
00016ceb: NF := 63:63[#6104]
00016cee: VF := 31:31[R2] & ~63:63[#6104]
00016cf1: ZF := #6104 = 0
00016cf4: CF := 31:31[R2] | 31:31[R2] & ~63:63[#6104] | ~63:63[#6104]
00016d03: #6106 := ~ZF <> 0
00016cfd: when #6106 goto %00016cfb
00038466: goto %00016d10

00016cfb:
00016d0a: R2 := pad:64[7:0[R2]] << 1
00016d18: #6109 := ~~13:13[R2]
00016d12: when #6109 goto %00016d10
00038465: goto %00016d6a

00016d10:
00016d21: R3 := 31:0[R3] - 31:0[R6]
00038464: goto %00016d23

00016d6a:
00016d71: R3 := 31:0[R7] + 31:0[R3]
00016d79: #6126 := 1 + ~R4 + R0
00016d7d: NF := 63:63[#6126]
00016d80: VF := 63:63[R0] & 63:63[~R4] & ~63:63[#6126] | ~63:63[R0] &
          ~63:63[~R4] & 63:63[#6126]
00016d83: ZF := #6126 = 0
00016d86: CF := 63:63[R0] & 63:63[~R4] | 63:63[~R4] & ~63:63[#6126] |
          63:63[R0] & ~63:63[#6126]
00016d93: #6128 := ZF
00016d8d: when #6128 goto %00016d23
00038463: goto %00016d96

00016d96:
00016d9b: R0 := R0 + 1
00016da3: #6132 := 1 + ~R0 + R8
00016da7: NF := 63:63[#6132]
00016daa: VF := 63:63[R8] & 63:63[~R0] & ~63:63[#6132] | ~63:63[R8] &
          ~63:63[~R0] & 63:63[#6132]
00016dad: ZF := #6132 = 0
00016db0: CF := 63:63[R8] & 63:63[~R0] | 63:63[~R0] & ~63:63[#6132] |
          63:63[R8] & ~63:63[#6132]
00016dbd: #6134 := ZF
00016db7: when #6134 goto %00016d23
00038462: goto %00016ccd

00016d23:
00016d28: #6113 := extend:64[31:0[R3]]
00016d2c: NF := 63:63[#6113]
00016d2f: VF := 31:31[R3] & ~63:63[#6113]
00016d32: ZF := #6113 = 0
00016d35: CF := 31:31[R3] | 31:31[R3] & ~63:63[#6113] | ~63:63[#6113]
00016d45: #6115 := (NF <> VF | ZF) <> 0
00016d3f: when #6115 goto %000169d2
00038461: goto %00016d48

00016d48:
00016d4e: R3 := extend:64[31:0[R3]] + 1
00016d56: R0 := R26
00016d5d: R2 := extend:64[31:0[R3]]
00016d62: R30 := 0xA49C
00016d64: call @strlcpy with return %00016d66

00016d66:
00016d68: goto %000169d2

00016c38:
00016c47: R0 := R0 + 1
00016c4f: #6082 := 1 + extend:64[~31:0[R0]] + extend:64[31:0[R19]]
00016c53: NF := 63:63[#6082]
00016c56: VF := 31:31[~31:0[R0]] & 31:31[R19] & ~63:63[#6082] |
          ~31:31[~31:0[R0]] & ~31:31[R19] & 63:63[#6082]
00016c59: ZF := #6082 = 0
00016c5c: CF := 31:31[~31:0[R0]] & 31:31[R19] | 31:31[R19] & ~63:63[#6082] |
          31:31[~31:0[R0]] & ~63:63[#6082]
00016c6c: #6084 := (NF <> VF | ZF) <> 0
00016c66: when #6084 goto %000169d2
00038460: goto %00016c17

00016dc0:
00016dc7: R2 := 31:0[R4] - 31:0[R1]
00016dcf: R0 := R20
00016dd4: R30 := 0xA2D4
00016dd6: call @substr with return %00016dd8

00016dd8:
00016dde: R3 := R0
00016de6: R5 := mem[R28, el]:u64
00016deb: goto %00016de9

00016de9:
00016df3: R1 := high:32[R1].pad:64[mem[R20 + R27]]
00016dfa: R4 := pad:64[7:0[R1]] << 1
00016e08: #6146 := ~~13:13[R4]
00016e02: when #6146 goto %00016e00
0003845f: goto %00016e37

00016e37:
00016e3d: #6156 := 1 + extend:64[~31:0[R27]] + extend:64[31:0[R19]]
00016e41: NF := 63:63[#6156]
00016e44: VF := 31:31[~31:0[R27]] & 31:31[R19] & ~63:63[#6156] |
          ~31:31[~31:0[R27]] & ~31:31[R19] & 63:63[#6156]
00016e47: ZF := #6156 = 0
00016e4a: CF := 31:31[~31:0[R27]] & 31:31[R19] | 31:31[R19] & ~63:63[#6156] |
          31:31[~31:0[R27]] & ~63:63[#6156]
00016e5a: #6158 := (NF <> VF | ZF) <> 0
00016e54: when #6158 goto %000169d2
0003845e: goto %00016e5d

00016e5d:
00016e62: #6159 := 0xFFFFFFFFFFFFFFC5 + extend:64[31:0[R1]]
00016e66: NF := 63:63[#6159]
00016e69: VF := 31:31[R1] & ~63:63[#6159]
00016e6c: ZF := #6159 = 0
00016e6f: CF := 31:31[R1] | 31:31[R1] & ~63:63[#6159] | ~63:63[#6159]
00016e79: R0 := 0x23
00016ea5: #6161 := ~ZF <> 0
00016ea6: goto %00016e9d

00016e9d:
00016e9f: when #6161 goto %00016e80
00016ea0: goto %00016e91

00016e91:
00016e92: NF := 0
00016e95: ZF := 1
00016e98: CF := 0
00016e9b: VF := 0
00016ea2: goto %00016e9e

00016e80:
00016e81: #6162 := ~31:0[R0]
00016e86: NF := 63:63[extend:64[31:0[R1]] + extend:64[#6162] + 1]
00016e89: VF := 31:31[R1] & 31:31[#6162] & ~63:63[extend:64[31:0[R1]] +
          extend:64[#6162] + 1] | ~31:31[R1] & ~31:31[#6162] &
          63:63[extend:64[31:0[R1]] + extend:64[#6162] + 1]
00016e8c: ZF := extend:64[31:0[R1]] + extend:64[#6162] + 1 = 0
00016e8f: CF := 31:31[R1] & 31:31[#6162] | 31:31[#6162] &
          ~63:63[extend:64[31:0[R1]] + extend:64[#6162] + 1] | 31:31[R1] &
          ~63:63[extend:64[31:0[R1]] + extend:64[#6162] + 1]
00016ea1: goto %00016e9e

00016e9e:
00016eb2: #6164 := ZF
00016eac: when #6164 goto %000169d2
0003845d: goto %00016eb5

00016eb5:
00016eba: #6165 := 0xFFFFFFFFFFFFFFDE + extend:64[31:0[R1]]
00016ebe: NF := 63:63[#6165]
00016ec1: VF := 31:31[R1] & ~63:63[#6165]
00016ec4: ZF := #6165 = 0
00016ec7: CF := 31:31[R1] | 31:31[R1] & ~63:63[#6165] | ~63:63[#6165]
00016ed6: #6167 := ZF
00016ed0: when #6167 goto %00016ece
0003845c: goto %0001708a

00016ece:
00016ede: R1 := extend:64[31:0[R27]] + 1
00016ee6: #6171 := 1 + extend:64[~31:0[R1]] + extend:64[31:0[R19]]
00016eea: NF := 63:63[#6171]
00016eed: VF := 31:31[~31:0[R1]] & 31:31[R19] & ~63:63[#6171] |
          ~31:31[~31:0[R1]] & ~31:31[R19] & 63:63[#6171]
00016ef0: ZF := #6171 = 0
00016ef3: CF := 31:31[~31:0[R1]] & 31:31[R19] | 31:31[R19] & ~63:63[#6171] |
          31:31[~31:0[R1]] & ~63:63[#6171]
00016f03: #6173 := (NF <> VF | ZF) <> 0
00016efd: when #6173 goto %000169d2
0003845b: goto %00016f06

00016f06:
00016f0d: #6174 := 0xFFFFFFFFFFFFFFDE + extend:64[31:0[R0]]
00016f11: NF := 63:63[#6174]
00016f14: VF := 31:31[R0] & ~63:63[#6174]
00016f17: ZF := #6174 = 0
00016f1a: CF := 31:31[R0] | 31:31[R0] & ~63:63[#6174] | ~63:63[#6174]
00016f29: #6176 := ZF
00016f23: when #6176 goto %00016f21
0003845a: goto %00017012

00016f21:
00016f32: R2 := 31:0[R1]
00016f37: goto %00016f35

00017012:
00017018: R2 := extend:64[31:0[R27]] + 2
0001701f: R5 := R20 - 1
00017026: R4 := extend:64[31:0[R2]]
00038459: goto %00017028

00017028:
0001702f: R2 := 31:0[R4]
00017036: R4 := R4 + 1
0001703f: R0 := high:32[R0].pad:64[mem[R5 + R4]]
00017046: #6213 := 0xFFFFFFFFFFFFFFDE + extend:64[31:0[R0]]
0001704a: NF := 63:63[#6213]
0001704d: VF := 31:31[R0] & ~63:63[#6213]
00017050: ZF := #6213 = 0
00017053: CF := 31:31[R0] | 31:31[R0] & ~63:63[#6213] | ~63:63[#6213]
00017061: #6215 := ~ZF <> 0
0001705b: when #6215 goto %00017028
00038458: goto %00017064

00017064:
0001706a: #6219 := 1 + extend:64[~31:0[R2]] + extend:64[31:0[R19]]
0001706e: NF := 63:63[#6219]
00017071: VF := 31:31[~31:0[R2]] & 31:31[R19] & ~63:63[#6219] |
          ~31:31[~31:0[R2]] & ~31:31[R19] & 63:63[#6219]
00017074: ZF := #6219 = 0
00017077: CF := 31:31[~31:0[R2]] & 31:31[R19] | 31:31[R19] & ~63:63[#6219] |
          31:31[~31:0[R2]] & ~63:63[#6219]
00017087: #6221 := (NF <> VF | ZF) <> 0
00017081: when #6221 goto %000169d2
00038457: goto %00016f35

00016f35:
00016f3f: R2 := 31:0[R2] - 31:0[R1]
00016f47: R0 := R20
00016f4f: mem := mem with [R31 + 0x68, el]:u64 <- R3
00016f54: R30 := 0xA51C
00016f56: call @substr with return %00016f58

00016f58:
00016f5e: R19 := R0
00016f66: R3 := mem[R31 + 0x68, el]:u64
00016f6b: goto %00016f69

0001708a:
00017091: R2 := 31:0[R19] - 31:0[R27]
0001709a: R1 := 31:0[R27]
000170a2: R0 := R20
000170aa: mem := mem with [R31 + 0x68, el]:u64 <- R3
000170af: R30 := 0xA330
000170b1: call @substr with return %000170b3

000170b3:
000170b9: R19 := R0
000170c1: R1 := R25
000170c6: R30 := 0xA33C
000170c8: call @strcspn with return %000170ca

000170ca:
000170d0: R27 := R0
000170d8: R0 := R19
000170df: R27 := extend:64[31:0[R27]]
000170e4: R30 := 0xA34C
000170e6: call @strlen with return %000170e8

000170e8:
000170ee: #6248 := 1 + ~R0 + R27
000170f2: NF := 63:63[#6248]
000170f5: VF := 63:63[R27] & 63:63[~R0] & ~63:63[#6248] | ~63:63[R27] &
          ~63:63[~R0] & 63:63[#6248]
000170f8: ZF := #6248 = 0
000170fb: CF := 63:63[R27] & 63:63[~R0] | 63:63[~R0] & ~63:63[#6248] |
          63:63[R27] & ~63:63[#6248]
00017105: R3 := mem[R31 + 0x68, el]:u64
00017111: #6250 := ZF
0001710b: when #6250 goto %00017109
00038456: goto %00017132

00017132:
00038455: goto %00017109

00017109:
00017119: R0 := R19
00017121: mem := mem with [R31 + 0x68, el]:u64 <- R3
00017126: R30 := 0xA368
00017128: call @trimr with return %0001712a

0001712a:
00017130: R3 := mem[R31 + 0x68, el]:u64
00038454: goto %00016f69

00016f69:
00016f73: R0 := pad:64[mem[R24, el]:u32]
00016f7f: #6190 := ~31:0[R0] = 0
00016f79: when #6190 goto %00016f77
00038453: goto %00016fbd

00016f77:
00016f87: R4 := R19
00016f8f: R2 := R26
00016f95: R1 := 0x12000
00016f9c: R0 := 1
00016fa3: R1 := R1 + 0x3B8
00016fab: mem := mem with [R31 + 0x68, el]:u64 <- R3
00016fb0: R30 := 0xA4C4
00016fb2: call @__printf_chk with return %00016fb4

00016fb4:
00016fba: R3 := mem[R31 + 0x68, el]:u64
00016fbf: goto %00016fbd

00016fbd:
00016fc6: R0 := mem[R23, el]:u64
00016fce: R1 := R3
00016fd6: R2 := R19
00016fdd: R4 := 0
00016fe4: R3 := 0
00016fe9: R30 := 0xA38C
00016feb: call @hlist_add with return %00016fed

00016fed:
00016ff3: mem := mem with [R23, el]:u64 <- R0
00016ffb: R0 := R21
00017000: R30 := 0xA398
00017002: call @feof with return %00017004

00017004:
0001700d: #6208 := 31:0[R0] = 0
00017007: when #6208 goto %00016a3d
00038452: goto %00017010

00017010:
00038451: goto %000169ed

000169ed:
000169fd: R0 := R20
00016a02: R30 := 0xA3A8
00016a04: call @free with return %00016a06

00016a06:
00016a0c: R0 := R21
00016a11: R30 := 0xA3B0
00016a14: call @fclose with return %00016a16

00016a16:
00016a1d: R19 := mem[R31 + 0x10, el]:u64
00016a21: R20 := mem[R31 + 0x18, el]:u64
00016a2a: R25 := mem[R31 + 0x40, el]:u64
00016a2e: R26 := mem[R31 + 0x48, el]:u64
00016a37: R27 := mem[R31 + 0x50, el]:u64
00016a3b: R28 := mem[R31 + 0x58, el]:u64
00038450: goto %00012e3b

00012e3b:
00012e44: R22 := mem[R22 + 0xFB8, el]:u64
00012e4c: R0 := mem[R31 + 0xA8, el]:u64
00012e54: R1 := mem[R22, el]:u64
00012e5c: #4508 := 1 + ~R1 + R0
00012e60: NF := 63:63[#4508]
00012e63: VF := 63:63[R0] & 63:63[~R1] & ~63:63[#4508] | ~63:63[R0] &
          ~63:63[~R1] & 63:63[#4508]
00012e66: ZF := #4508 = 0
00012e69: CF := 63:63[R0] & 63:63[~R1] | 63:63[~R1] & ~63:63[#4508] |
          63:63[R0] & ~63:63[#4508]
00012e6d: R0 := #4508
00012e73: R1 := 0
00012e7f: #4510 := ~ZF <> 0
00012e79: when #4510 goto %00012e77
0003844f: goto %0001697d

00012e77:
00012e88: mem := mem with [R31, el]:u64 <- R31 + 0x20
00012e8c: mem := mem with [R31, el]:u64 <- R31 + 0x28
00012e95: mem := mem with [R31, el]:u64 <- R31 + 0x80
00012e99: mem := mem with [R31, el]:u64 <- R31 + 0x88
00012ea2: mem := mem with [R31, el]:u64 <- R31 + 0xA0
00012ea6: mem := mem with [R31, el]:u64 <- R31 + 0xA8
00012eab: R30 := 0xA540
00012ead: call @__stack_chk_fail with return %0003844d

0003844d:
0003844e: call @config_set with noreturn

0001697d:
00016983: R0 := R23
0001698c: R21 := mem[R31 + 0x20, el]:u64
00016990: R22 := mem[R31 + 0x28, el]:u64
00016999: R23 := mem[R31 + 0x30, el]:u64
0001699d: R24 := mem[R31 + 0x38, el]:u64
000169a7: R29 := mem[R31, el]:u64
000169ab: R30 := mem[R31 + 8, el]:u64
000169ae: R31 := R31 + 0xB0
000169b3: call R30 with noreturn

00016e00:
00016e0f: R27 := R27 + 1
00016e17: #6150 := 1 + extend:64[~31:0[R27]] + extend:64[31:0[R19]]
00016e1b: NF := 63:63[#6150]
00016e1e: VF := 31:31[~31:0[R27]] & 31:31[R19] & ~63:63[#6150] |
          ~31:31[~31:0[R27]] & ~31:31[R19] & 63:63[#6150]
00016e21: ZF := #6150 = 0
00016e24: CF := 31:31[~31:0[R27]] & 31:31[R19] | 31:31[R19] & ~63:63[#6150] |
          31:31[~31:0[R27]] & ~63:63[#6150]
00016e34: #6152 := (NF <> VF | ZF) <> 0
00016e2e: when #6152 goto %000169d2
0003844c: goto %00016de9

00016aed:
00016afc: R2 := R2 + 1
00016b04: #6044 := 1 + extend:64[~31:0[R2]] + extend:64[31:0[R19]]
00016b08: NF := 63:63[#6044]
00016b0b: VF := 31:31[~31:0[R2]] & 31:31[R19] & ~63:63[#6044] |
          ~31:31[~31:0[R2]] & ~31:31[R19] & 63:63[#6044]
00016b0e: ZF := #6044 = 0
00016b11: CF := 31:31[~31:0[R2]] & 31:31[R19] | 31:31[R19] & ~63:63[#6044] |
          31:31[~31:0[R2]] & ~63:63[#6044]
00016b21: #6046 := (NF <> VF | ZF) <> 0
00016b1b: when #6046 goto %000169d2
0003844b: goto %00016acd

00038478: sub config_pop(config_pop_result)
00038aaf: config_pop_result :: out u32 = low:32[R0]

000144bd:
000144c5: mem := mem with [R31 - 0x30, el]:u64 <- R29
000144c9: mem := mem with [R31 - 0x28, el]:u64 <- R30
000144cc: R31 := R31 - 0x30
000144d3: R29 := R31
000144dc: mem := mem with [R31, el]:u64 <- R31 + 0x20
000144e0: mem := mem with [R31, el]:u64 <- R31 + 0x28
000144e8: R20 := R0
000144f0: R0 := mem[R0, el]:u64
000144f8: mem := mem with [R31 + 0x20, el]:u64 <- R21
00014500: R21 := R1
00014505: R30 := 0xA590
00014507: call @hlist_get with return %00014509

00014509:
0001450f: R19 := R0
0001451b: #5071 := R0 = 0
00014515: when #5071 goto %00014513
0003847a: goto %0001694f

0001694f:
00016952: R30 := 0xA59C
00016954: call @strdup with return %00016956

00016956:
0001695c: R19 := R0
00016964: R0 := mem[R20, el]:u64
0001696c: R1 := R21
00016971: R30 := 0xA5AC
00016973: call @hlist_del with return %00016975

00016975:
0001697b: mem := mem with [R20, el]:u64 <- R0
00038479: goto %00014513

00014513:
00014523: R0 := R19
0001452c: R19 := mem[R31 + 0x10, el]:u64
00014530: R20 := mem[R31 + 0x18, el]:u64
00014538: R21 := mem[R31 + 0x20, el]:u64
00014542: R29 := mem[R31, el]:u64
00014546: R30 := mem[R31 + 8, el]:u64
00014549: R31 := R31 + 0x30
0001454e: call R30 with noreturn

0003847b: sub config_set(config_set_result)
00038ab0: config_set_result :: out u32 = low:32[R0]

00012eaf:
00012eb7: mem := mem with [R31 - 0x20, el]:u64 <- R29
00012ebb: mem := mem with [R31 - 0x18, el]:u64 <- R30
00012ebe: R31 := R31 - 0x20
00012ec5: R3 := 1
00012ecc: R29 := R31
00012ed4: mem := mem with [R31 + 0x10, el]:u64 <- R19
00012edc: R19 := R0
00012ee4: R0 := mem[R0, el]:u64
00012ee9: R30 := 0xA55C
00012eec: call @hlist_mod with return %00014495

00014495:
0001449b: mem := mem with [R19, el]:u64 <- R0
000144a3: R19 := mem[R31 + 0x10, el]:u64
000144ad: R29 := mem[R31, el]:u64
000144b1: R30 := mem[R31 + 8, el]:u64
000144b4: R31 := R31 + 0x20
000144b9: call R30 with noreturn

0003847c: sub connect(connect_fd, connect_addr, connect_len, connect_result)
00038ab1: connect_fd :: in u32 = low:32[R0]
00038ab2: connect_addr :: in u64 = R1
00038ab3: connect_len :: in u64 = R2
00038ab4: connect_result :: out u32 = low:32[R0]

0001663e:
00030664: R16 := 0x27000
0003066c: R17 := mem[R16 + 0xE68, el]:u64
00030673: R16 := R16 + 0xE68
00030678: call R17 with noreturn

0003847d: sub copy_auth(copy_auth_result)
00038ab5: copy_auth_result :: out u32 = low:32[R0]

0000f3c3:
0000f3cb: mem := mem with [R31 - 0x40, el]:u64 <- R29
0000f3cf: mem := mem with [R31 - 0x38, el]:u64 <- R30
0000f3d2: R31 := R31 - 0x40
0000f3d9: R4 := R1 + 0x200
0000f3e0: R3 := R0 + 0x200
0000f3e7: R29 := R31
0000f3f0: mem := mem with [R31, el]:u64 <- R31 + 0x20
0000f3f4: mem := mem with [R31, el]:u64 <- R31 + 0x28
0000f3fc: R20 := R1
0000f407: mem := mem with [R31, el]:u64 <- R31 + 0x40
0000f40b: mem := mem with [R31, el]:u64 <- R31 + 0x48
0000f413: R19 := R0
0000f41a: R1 := R1 + 0x32
0000f423: mem := mem with [R31, el]:u64 <- R31 + 0x60
0000f427: mem := mem with [R31, el]:u64 <- R31 + 0x68
0000f42e: R0 := R0 + 0x32
0000f437: R24 := 31:0[R2]
0000f43f: R2 := 0x32
0000f448: R4 := pad:64[mem[R20 + 0x134, el]:u32]
0000f44f: R22 := R19 + 0xFA
0000f458: R3 := pad:64[mem[R20 + 0x138, el]:u32]
0000f45f: R23 := R19 + 0xC8
0000f467: mem := mem with [R19 + 0x134, el]:u32 <- 31:0[R4]
0000f46e: R21 := R19 + 0x96
0000f476: mem := mem with [R19 + 0x138, el]:u32 <- 31:0[R3]
0000f47b: R30 := 0xB154
0000f47e: call @strlcpy with return %0002af17

0002af17:
0002af1c: R1 := R20 + 0x64
0002af23: R0 := R19 + 0x64
0002af29: R2 := 0x32
0002af2e: R30 := 0xB164
0002af30: call @strlcpy with return %0002af32

0002af32:
0002af3c: #16208 := 31:0[R24] = 0
0002af36: when #16208 goto %0002af34
0003847e: goto %0002b027

0002af34:
0002af45: mem := mem with [R19, el]:u64 <- R19
0002af49: mem := mem with [R19, el]:u64 <- R19 + 8
0002af51: R0 := R19
0002af5a: mem := mem with [R19, el]:u64 <- R19 + 0x20
0002af5e: mem := mem with [R19, el]:u64 <- R19 + 0x28
0002af67: mem := mem with [R19, el]:u64 <- R19 + 0x40
0002af6b: mem := mem with [R19, el]:u64 <- R19 + 0x48
0002af76: mem := mem with [R22, el]:u64 <- R22
0002af7a: mem := mem with [R22, el]:u64 <- R22 + 8
0002af83: mem := mem with [R22, el]:u64 <- R22 + 0x20
0002af87: mem := mem with [R22, el]:u64 <- R22 + 0x28
0002af90: mem := mem with [R22, el]:u64 <- R22 + 0x40
0002af94: mem := mem with [R22, el]:u64 <- R22 + 0x48
0002af9f: mem := mem with [R19, el]:u64 <- R19 + 0x190
0002afa3: mem := mem with [R19, el]:u64 <- R19 + 0x198
0002afac: mem := mem with [R23, el]:u64 <- R23 + 0x20
0002afb0: mem := mem with [R23, el]:u64 <- R23 + 0x28
0002afb9: mem := mem with [R23, el]:u64 <- R23 + 0x40
0002afbd: mem := mem with [R23, el]:u64 <- R23 + 0x48
0002afc8: mem := mem with [R21, el]:u64 <- R21
0002afcc: mem := mem with [R21, el]:u64 <- R21 + 8
0002afd5: mem := mem with [R21, el]:u64 <- R21 + 0x20
0002afd9: mem := mem with [R21, el]:u64 <- R21 + 0x28
0002afe2: mem := mem with [R21, el]:u64 <- R21 + 0x40
0002afe6: mem := mem with [R21, el]:u64 <- R21 + 0x48
0002aff1: R19 := mem[R31 + 0x10, el]:u64
0002aff5: R20 := mem[R31 + 0x18, el]:u64
0002affe: R21 := mem[R31 + 0x20, el]:u64
0002b002: R22 := mem[R31 + 0x28, el]:u64
0002b00b: R23 := mem[R31 + 0x30, el]:u64
0002b00f: R24 := mem[R31 + 0x38, el]:u64
0002b019: R29 := mem[R31, el]:u64
0002b01d: R30 := mem[R31 + 8, el]:u64
0002b020: R31 := R31 + 0x40
0002b025: call R30 with noreturn

0002b027:
0002b02d: R1 := R20
0002b035: R0 := R19
0002b03b: R2 := 0x32
0002b040: R30 := 0xB178
0002b042: call @strlcpy with return %0002b044

0002b044:
0002b049: R1 := R20 + 0xFA
0002b050: R0 := R20 + 0x96
0002b059: R2 := mem[R1, el]:u64
0002b05d: R3 := mem[R1 + 8, el]:u64
0002b066: mem := mem with [R22, el]:u64 <- R22
0002b06a: mem := mem with [R22, el]:u64 <- R22 + 8
0002b073: R2 := mem[R1 + 0x10, el]:u64
0002b077: R3 := mem[R1 + 0x18, el]:u64
0002b080: mem := mem with [R22, el]:u64 <- R22 + 0x20
0002b084: mem := mem with [R22, el]:u64 <- R22 + 0x28
0002b08d: R2 := mem[R1 + 0x20, el]:u64
0002b091: R3 := mem[R1 + 0x28, el]:u64
0002b09a: mem := mem with [R22, el]:u64 <- R22 + 0x40
0002b09e: mem := mem with [R22, el]:u64 <- R22 + 0x48
0002b0ab: R2 := mem[R20 + 0xC8, el]:u64
0002b0af: R3 := mem[R20 + 0xD0, el]:u64
0002b0b8: mem := mem with [R19, el]:u64 <- R19 + 0x190
0002b0bc: mem := mem with [R19, el]:u64 <- R19 + 0x198
0002b0c5: R2 := mem[R20 + 0xD8, el]:u64
0002b0c9: R3 := mem[R20 + 0xE0, el]:u64
0002b0d2: mem := mem with [R23, el]:u64 <- R23 + 0x20
0002b0d6: mem := mem with [R23, el]:u64 <- R23 + 0x28
0002b0df: R2 := mem[R20 + 0xE8, el]:u64
0002b0e3: R3 := mem[R20 + 0xF0, el]:u64
0002b0ec: mem := mem with [R23, el]:u64 <- R23 + 0x40
0002b0f0: mem := mem with [R23, el]:u64 <- R23 + 0x48
0002b0fd: R2 := mem[R0, el]:u64
0002b101: R3 := mem[R0 + 8, el]:u64
0002b10a: mem := mem with [R21, el]:u64 <- R21
0002b10e: mem := mem with [R21, el]:u64 <- R21 + 8
0002b117: R2 := mem[R0 + 0x10, el]:u64
0002b11b: R3 := mem[R0 + 0x18, el]:u64
0002b124: mem := mem with [R21, el]:u64 <- R21 + 0x20
0002b128: mem := mem with [R21, el]:u64 <- R21 + 0x28
0002b131: R2 := mem[R0 + 0x20, el]:u64
0002b135: R3 := mem[R0 + 0x28, el]:u64
0002b13e: mem := mem with [R21, el]:u64 <- R21 + 0x40
0002b142: mem := mem with [R21, el]:u64 <- R21 + 0x48
0002b14e: R0 := R19
0002b157: R19 := mem[R31 + 0x10, el]:u64
0002b15b: R20 := mem[R31 + 0x18, el]:u64
0002b164: R21 := mem[R31 + 0x20, el]:u64
0002b168: R22 := mem[R31 + 0x28, el]:u64
0002b171: R23 := mem[R31 + 0x30, el]:u64
0002b175: R24 := mem[R31 + 0x38, el]:u64
0002b17f: R29 := mem[R31, el]:u64
0002b183: R30 := mem[R31 + 8, el]:u64
0002b186: R31 := R31 + 0x40
0002b18b: call R30 with noreturn

0003847f: sub copy_rr_data(copy_rr_data_result)
00038ab6: copy_rr_data_result :: out u32 = low:32[R0]

00013544:
0001354c: mem := mem with [R31 - 0x50, el]:u64 <- R29
00013550: mem := mem with [R31 - 0x48, el]:u64 <- R30
00013553: R31 := R31 - 0x50
0001355a: #4702 := R1
0001355e: NF := 63:63[#4702]
00013561: VF := 63:63[R1] & ~63:63[#4702]
00013564: ZF := #4702 = 0
00013567: CF := 63:63[R1] | ~63:63[#4702] | 63:63[R1] & ~63:63[#4702]
0001358f: #4704 := ~ZF <> 0
00013590: goto %00013587

00013587:
00013589: when #4704 goto %0001356f
0001358a: goto %0001357b

0001357b:
0001357c: NF := 0
0001357f: ZF := 1
00013582: CF := 0
00013585: VF := 0
0001358c: goto %00013588

0001356f:
00013570: NF := 63:63[R0 + 0]
00013573: VF := 63:63[R0] & ~63:63[R0 + 0]
00013576: ZF := R0 + 0 = 0
00013579: CF := 63:63[R0] | ~63:63[R0 + 0] | 63:63[R0] & ~63:63[R0 + 0]
0001358b: goto %00013588

00013588:
00013598: R29 := R31
000135a1: mem := mem with [R31, el]:u64 <- R31 + 0x20
000135a5: mem := mem with [R31, el]:u64 <- R31 + 0x28
000135ab: R20 := 0
000135b7: #4708 := ZF
000135b1: when #4708 goto %000135af
00038498: goto %00013bf7

00013bf7:
00013bfd: R19 := R1
00013c05: R20 := R0
00013c0e: mem := mem with [R31, el]:u64 <- R31 + 0x40
00013c12: mem := mem with [R31, el]:u64 <- R31 + 0x48
00013c17: R30 := 0x5464
00013c19: call @reset_rr_data with return %00013c1b

00013c1b:
00013c22: R0 := pad:64[mem[R19, el]:u32]
00013c2a: R22 := mem[R19 + 8, el]:u64
00013c32: mem := mem with [R20, el]:u32 <- 31:0[R0]
00013c3f: R0 := pad:64[mem[R19 + 0x20, el]:u32]
00013c47: mem := mem with [R20 + 0x20, el]:u32 <- 31:0[R0]
00013c52: #4861 := R22 = 0
00013c4c: when #4861 goto %0001377e
00038497: goto %00013c55

00013c55:
00013c5c: mem := mem with [R31, el]:u64 <- R31 + 0x60
00013c60: mem := mem with [R31, el]:u64 <- R31 + 0x68
00013c66: R23 := 0
00013c6e: mem := mem with [R31 + 0x40, el]:u64 <- R25
00038496: goto %0001366d

0001366d:
0001367e: R25 := mem[R22, el]:u64
00013682: R24 := mem[R22 + 8, el]:u64
00013689: #4733 := R25
0001368d: NF := 63:63[#4733]
00013690: VF := 63:63[R25] & ~63:63[#4733]
00013693: ZF := #4733 = 0
00013696: CF := 63:63[R25] | ~63:63[#4733] | 63:63[R25] & ~63:63[#4733]
000136be: #4735 := ~ZF <> 0
000136bf: goto %000136b6

000136b6:
000136b8: when #4735 goto %0001369e
000136b9: goto %000136aa

000136aa:
000136ab: NF := 0
000136ae: ZF := 1
000136b1: CF := 0
000136b4: VF := 0
000136bb: goto %000136b7

0001369e:
0001369f: NF := 63:63[R24 + 0]
000136a2: VF := 63:63[R24] & ~63:63[R24 + 0]
000136a5: ZF := R24 + 0 = 0
000136a8: CF := 63:63[R24] | ~63:63[R24 + 0] | 63:63[R24] & ~63:63[R24 + 0]
000136ba: goto %000136b7

000136b7:
000136cb: #4738 := ZF
000136c5: when #4738 goto %00013660
00038495: goto %000136ce

000136ce:
000136d2: R0 := 0x20
000136d7: R30 := 0x54A8
000136d9: call @malloc with return %000136db

000136db:
000136e1: R21 := R0
000136e9: R0 := R25
000136ee: R30 := 0x54B4
000136f0: call @strdup with return %000136f2

000136f2:
000136f8: R1 := R0
00013700: R0 := R24
00013708: mem := mem with [R21, el]:u64 <- R1
0001370d: R30 := 0x54C4
0001370f: call @strdup with return %00013711

00013711:
00013717: mem := mem with [R21 + 8, el]:u64 <- R0
0001371f: mem := mem with [R21 + 0x10, el]:u32 <- 0
00013727: mem := mem with [R21 + 0x18, el]:u64 <- 0
00013732: #4755 := R23 = 0
0001372c: when #4755 goto %00013657
00038494: goto %00013735

00013657:
0001365d: R23 := R21
00013662: goto %00013660

00013735:
0001373b: R0 := R23
00038493: goto %0001373d

0001373d:
00013743: R1 := R0
0001374b: R0 := mem[R0 + 0x18, el]:u64
00013756: #4762 := ~R0 = 0
00013750: when #4762 goto %0001373d
00038492: goto %00013759

00013759:
0001375f: mem := mem with [R1 + 0x18, el]:u64 <- R21
00038491: goto %00013660

00013660:
00013669: R22 := mem[R22 + 0x18, el]:u64
00013675: #4731 := ~R22 = 0
0001366f: when #4731 goto %0001366d
00038490: goto %00013761

00013761:
00013767: R25 := mem[R31 + 0x40, el]:u64
0001376f: mem := mem with [R20 + 8, el]:u64 <- R23
00013778: R23 := mem[R31 + 0x30, el]:u64
0001377c: R24 := mem[R31 + 0x38, el]:u64
0003848f: goto %0001377e

0001377e:
00013784: R0 := mem[R19 + 0x28, el]:u64
00013790: #4766 := R0 = 0
0001378a: when #4766 goto %00013788
0003848e: goto %00013890

00013890:
00013893: R30 := 0x5508
00013895: call @strdup with return %00013897

00013897:
0001389d: mem := mem with [R20 + 0x28, el]:u64 <- R0
0003848d: goto %00013788

00013788:
00013798: R0 := mem[R19 + 0x30, el]:u64
000137a4: #4767 := R0 = 0
0001379e: when #4767 goto %0001379c
0003848c: goto %00013881

00013881:
00013884: R30 := 0x5518
00013886: call @strdup with return %00013888

00013888:
0001388e: mem := mem with [R20 + 0x30, el]:u64 <- R0
0003848b: goto %0001379c

0001379c:
000137ac: R0 := mem[R19 + 0x38, el]:u64
000137b8: #4768 := R0 = 0
000137b2: when #4768 goto %000137b0
0003848a: goto %00013872

00013872:
00013875: R30 := 0x5528
00013877: call @strdup with return %00013879

00013879:
0001387f: mem := mem with [R20 + 0x38, el]:u64 <- R0
00038489: goto %000137b0

000137b0:
000137c0: R0 := mem[R19 + 0x40, el]:u64
000137cc: #4769 := R0 = 0
000137c6: when #4769 goto %000137c4
00038488: goto %00013863

00013863:
00013866: R30 := 0x5538
00013868: call @strdup with return %0001386a

0001386a:
00013870: mem := mem with [R20 + 0x40, el]:u64 <- R0
00038487: goto %000137c4

000137c4:
000137d4: R0 := mem[R19 + 0x48, el]:u64
000137e0: #4770 := R0 = 0
000137da: when #4770 goto %000137d8
00038486: goto %00013854

00013854:
00013857: R30 := 0x5548
00013859: call @strdup with return %0001385b

0001385b:
00013861: mem := mem with [R20 + 0x48, el]:u64 <- R0
00038485: goto %000137d8

000137d8:
000137e8: R0 := mem[R19 + 0x50, el]:u64
000137f4: #4771 := R0 = 0
000137ee: when #4771 goto %000137ec
00038484: goto %00013845

00013845:
00013848: R30 := 0x5558
0001384a: call @strdup with return %0001384c

0001384c:
00013852: mem := mem with [R20 + 0x50, el]:u64 <- R0
00038483: goto %000137ec

000137ec:
000137fc: R0 := mem[R19 + 0x58, el]:u64
00013808: #4772 := R0 = 0
00013802: when #4772 goto %00013800
00038482: goto %00013817

00013817:
0001381e: R2 := pad:64[mem[R19 + 0x18, el]:u32]
00013825: #4774 := extend:64[31:0[R2]]
00013829: NF := 63:63[#4774]
0001382c: VF := 31:31[R2] & ~63:63[#4774]
0001382f: ZF := #4774 = 0
00013832: CF := 31:31[R2] | 31:31[R2] & ~63:63[#4774] | ~63:63[#4774]
00013842: #4776 := (NF = VF & ~ZF) <> 0
0001383c: when #4776 goto %000135e4
00038481: goto %00013800

000135e4:
000135e9: R21 := extend:64[31:0[R2]]
000135ef: R1 := 1
000135f7: R0 := R21
000135fc: R30 := 0x5594
000135fe: call @calloc with return %00013600

00013600:
00013606: mem := mem with [R20 + 0x58, el]:u64 <- R0
0001360e: R2 := R21
00013616: R1 := mem[R19 + 0x58, el]:u64
0001361b: R30 := 0x55A4
0001361d: call @memcpy with return %0001361f

0001361f:
00013625: R0 := R20
0001362e: R19 := mem[R31 + 0x10, el]:u64
00013632: R20 := mem[R31 + 0x18, el]:u64
0001363b: R21 := mem[R31 + 0x20, el]:u64
0001363f: R22 := mem[R31 + 0x28, el]:u64
00013649: R29 := mem[R31, el]:u64
0001364d: R30 := mem[R31 + 8, el]:u64
00013650: R31 := R31 + 0x50
00013655: call R30 with noreturn

00013800:
00013811: R21 := mem[R31 + 0x20, el]:u64
00013815: R22 := mem[R31 + 0x28, el]:u64
00038480: goto %000135af

000135af:
000135bf: R0 := R20
000135c8: R19 := mem[R31 + 0x10, el]:u64
000135cc: R20 := mem[R31 + 0x18, el]:u64
000135d6: R29 := mem[R31, el]:u64
000135da: R30 := mem[R31 + 8, el]:u64
000135dd: R31 := R31 + 0x50
000135e2: call R30 with noreturn

00038499: sub croak(croak_result)
00038ab7: croak_result :: out u32 = low:32[R0]

00020bd1:
00020bd9: mem := mem with [R31 - 0x10, el]:u64 <- R29
00020bdd: mem := mem with [R31 - 8, el]:u64 <- R30
00020be0: R31 := R31 - 0x10
00020be7: R29 := R31
00020bf3: #11964 := 31:0[R1] = 0
00020bed: when #11964 goto %00020beb
0003849a: goto %00020c33

00020c33:
00020c39: R2 := R0
00020c3f: R1 := 0x11000
00020c46: R0 := 1
00020c4d: R1 := R1 + 0x6B0
00020c52: R30 := 0x4868
00020c54: call @__printf_chk with return %00020c20

00020c20:
00020c28: R0 := 1
00020c2d: R30 := 0x4870
00020c2f: call @myexit with return %00020beb

00020beb:
00020bfb: R3 := R0
00020c01: R2 := 0x11000
00020c08: R1 := 1
00020c0f: R2 := R2 + 0x6B0
00020c16: R0 := 3
00020c1b: R30 := 0x4888
00020c1d: call @__syslog_chk with return %00020c1f

00020c1f:
00020c22: goto %00020c20

0003849b: sub data_send(data_send_result)
00038ab8: data_send_result :: out u32 = low:32[R0]

0001dcd2:
0001dcdc: #10835 := ~R2 = 0
0001dcd6: when #10835 goto %0001dcd4
0003849c: goto %00029a7a

0001dcd4:
0001dce0: call @sub_b518 with noreturn

00029a7a:
00029a7f: R0 := 1
00029a84: call R30 with noreturn

0003849d: sub deregister_tm_clones(deregister_tm_clones_result)
00038ab9: deregister_tm_clones_result :: out u32 = low:32[R0]

0002e7c9:
0002e7cd: R0 := 0x28000
0002e7d4: R0 := R0 + 0x498
0002e7da: R1 := 0x28000
0002e7e1: R1 := R1 + 0x498
0002e7e9: #17380 := 1 + ~R0 + R1
0002e7ed: NF := 63:63[#17380]
0002e7f0: VF := 63:63[R1] & 63:63[~R0] & ~63:63[#17380] | ~63:63[R1] &
          ~63:63[~R0] & 63:63[#17380]
0002e7f3: ZF := #17380 = 0
0002e7f6: CF := 63:63[R1] & 63:63[~R0] | 63:63[~R0] & ~63:63[#17380] |
          63:63[R1] & ~63:63[#17380]
0002e804: #17382 := ZF
0002e7fe: when #17382 goto %0002e7fc
0003849f: goto %0002e937

0002e937:
0002e93b: R1 := 0x27000
0002e943: R1 := mem[R1 + 0xF48, el]:u64
0002e94e: #17406 := R1 = 0
0002e948: when #17406 goto %0002e7fc
0003849e: goto %0002e951

0002e7fc:
0002e809: call R30 with noreturn

0002e951:
0002e957: R16 := R1
0002e95c: call R16 with noreturn

000384a0: sub des_key_schedule(des_key_schedule_result)
00038aba: des_key_schedule_result :: out u32 = low:32[R0]

0000fe44:
0000fe4f: mem := mem with [R31 - 0x50, el]:u64 <- R29
0000fe53: mem := mem with [R31 - 0x48, el]:u64 <- R30
0000fe56: R31 := R31 - 0x50
0000fe5c: R3 := 0x11000
0000fe63: R3 := R3 + 0x8E0
0000fe6a: R29 := R31
0000fe73: mem := mem with [R31, el]:u64 <- R31 + 0x20
0000fe77: mem := mem with [R31, el]:u64 <- R31 + 0x28
0000fe7e: R4 := R3 + 0x40
0000fe85: R6 := R3 + 0x80
0000fe8e: mem := mem with [R31, el]:u64 <- R31 + 0x40
0000fe92: mem := mem with [R31, el]:u64 <- R31 + 0x48
0000fe99: R12 := R1 + 0x80
0000fea0: R11 := 0x1C
0000fea9: mem := mem with [R31, el]:u64 <- R31 + 0x60
0000fead: mem := mem with [R31, el]:u64 <- R31 + 0x68
0000feb4: R10 := 0x24000000
0000febb: R9 := 0x2080000
0000fec3: mem := mem with [R31 + 0x40, el]:u64 <- R25
0000feca: R8 := 0x808
0000fed1: R7 := 0x11
0000fee0: R0 := 31:0[R2] ^ 31:0[R5] >> 4
0000fee8: R0 := 31:0[R0] & 0xF0F0F0F
0000fef1: R2 := 31:0[R2] ^ 31:0[R0]
0000fefa: R0 := 31:0[R5] ^ 31:0[R0] << 4
0000ff03: R5 := 31:0[R2] ^ 31:0[R0]
0000ff0b: R5 := 31:0[R5] & 0x10101010
0000ff14: R2 := 31:0[R2] ^ 31:0[R5]
0000ff1d: R0 := 31:0[R0] ^ 31:0[R5]
0000ff24: R22 := R2 & 0xF
0000ff2b: R13 := pad:64[3:0[R2]]
0000ff32: R14 := pad:64[11:8[R2]]
0000ff39: R19 := pad:64[11:8[R2]]
0000ff40: R16 := pad:64[12:9[R0]]
0000ff47: R15 := pad:64[7:4[R0]]
0000ff52: R5 := pad:64[12:9[R0]]
0000ff5c: R20 := pad:64[15:12[R0]]
0000ff65: R21 := pad:64[low:4[0xF & R2 >> 0xD]]
0000ff6c: R23 := pad:64[4:1[R0]]
0000ff74: R13 := 31:0[R13] << 0x21
0000ff7b: R18 := pad:64[8:5[R2]]
0000ff83: R17 := pad:64[7:5[R2]]
0000ff8c: R14 := 31:0[R13] | 31:0[R14] << 2
0000ff95: R22 := 31:0[R19] | 31:0[R22] << 3
0000ff9e: R16 := pad:64[4:1[R0]]
0000ffa7: R15 := pad:64[7:4[R0]]
0000ffb0: R2 := pad:64[8:5[R2]]
0000ffb9: R0 := pad:64[15:12[R0]]
0000ffc3: R19 := 31:0[R19] << 0x27
0000ffcd: R5 := 31:0[R5] << 0x22
0000ffd8: R20 := 31:0[R13] | 31:0[R20] << 4
0000ffe2: R21 := 31:0[R21] << 0x26
0000ffed: R5 := 31:0[R5] | 31:0[R23] << 3
0000fff8: R18 := 31:0[R21] | 31:0[R18] << 7
00010003: R3 := 31:0[R14] | 31:0[R22]
0001000d: R14 := 31:0[R17] << 0x24
00010016: R0 := 31:0[R5] | 31:0[R20]
0001001e: R4 := 31:0[R15] << 0x25
00010027: R5 := 31:0[R19] | 31:0[R16] << 1
00010030: R3 := 31:0[R3] | 31:0[R18]
00010039: R13 := 31:0[R14] | 31:0[R13] << 5
00010042: R0 := 31:0[R0] | 31:0[R5]
0001004b: R2 := 31:0[R4] | 31:0[R2] << 6
00010054: R13 := 31:0[R13] | 31:0[R3]
0001005d: R2 := 31:0[R2] | 31:0[R0]
00010065: R13 := 31:0[R13] & 0xFFFFFFF
0001006d: R2 := 31:0[R2] & 0xFFFFFFF
000384a2: goto %00010071

00010071:
0001007a: R3 := 31:0[R11] - 31:0[R16]
00010087: R0 := 31:0[R0] | 31:0[R13]
00010091: R13 := 31:0[R0] & 0xFFFFFFF
00010099: R5 := 31:0[R0] << 0x2E
000100a2: R18 := 31:0[R9] & 31:0[R0] << 0x12
000100aa: R17 := pad:64[0:0[R0]] << 0x3C
000100b2: R14 := 31:0[R0] << 0x29
000100bb: R15 := 31:0[R10] & 31:0[R0] << 4
000100c3: R4 := 31:0[R0] << 0x26
000100cb: R5 := 31:0[R5] & 0x8000000
000100d3: R21 := 31:0[R0] << 0x2F
000100dc: R5 := 31:0[R5] | 31:0[R18]
000100e5: R15 := 31:0[R15] | 31:0[R17]
000100ed: R19 := 31:0[R0] << 0x36
000100f5: R18 := 31:0[R0] << 0x31
000100ff: R4 := 31:0[R4] & 0x1000000
00010108: R2 := 31:0[R2] | 31:0[R3]
00010110: R16 := 31:0[R0] << 0x2A
00010118: R3 := 31:0[R14] & 0x200000
0001011f: R14 := pad:64[27:1[R0]]
00010128: R4 := 31:0[R4] | 31:0[R3]
00010130: R23 := 31:0[R16] & 0x40000
00010138: R17 := 31:0[R21] & 0x20000000
00010141: R15 := 31:0[R15] | 31:0[R5]
00010149: R16 := 31:0[R16] & 0x8000000
00010151: R30 := pad:64[27:0[R0]] << 0x22
00010158: R22 := pad:64[27:10[R0]]
0001015f: R3 := pad:64[27:2[R0]]
00010167: R20 := pad:64[27:0[R0]] << 0x21
0001016f: R14 := 31:0[R14] & 0x100000
00010177: R19 := 31:0[R19] & 0x4000000
0001017f: R18 := 31:0[R18] & 0x10000000
00010188: R5 := 31:0[R15] | 31:0[R4]
00010191: R14 := 31:0[R14] | 31:0[R23]
0001019a: R19 := 31:0[R19] | 31:0[R16]
000101a1: R23 := pad:64[27:13[R2]]
000101a9: R4 := 31:0[R0] << 0x30
000101b1: R30 := 31:0[R30] & 0x20000
000101b9: R22 := 31:0[R22] & 0x10000
000101c0: R15 := pad:64[27:4[R2]]
000101c9: R18 := 31:0[R18] | 31:0[R17]
000101d1: R3 := 31:0[R3] & 0x2000000
000101d9: R20 := 31:0[R20] & 0x1000000
000101e1: R24 := 31:0[R0] << 0x2B
000101ea: R16 := 31:0[R3] | 31:0[R20]
000101f3: R17 := 31:0[R19] | 31:0[R18]
000101fb: R3 := 31:0[R4] & 0x200000
00010204: R5 := 31:0[R5] | 31:0[R14]
0001020c: R25 := 31:0[R2] << 0x26
00010215: R14 := 31:0[R30] | 31:0[R22]
0001021d: R24 := 31:0[R24] & 0x100000
00010225: R22 := 31:0[R23] & 0x2000
0001022d: R30 := pad:64[27:0[R0]] << 0x23
00010234: R23 := pad:64[27:1[R2]]
0001023b: R4 := pad:64[27:6[R0]]
00010243: R15 := 31:0[R15] & 0x1000
0001024c: R15 := 31:0[R22] | 31:0[R15]
00010254: R18 := 31:0[R23] & 0x400
0001025b: R20 := pad:64[27:14[R2]]
00010262: R19 := pad:64[27:5[R2]]
0001026b: R5 := 31:0[R5] | 31:0[R14]
00010274: R17 := 31:0[R17] | 31:0[R16]
0001027c: R4 := 31:0[R4] & 0x40000
00010285: R16 := 31:0[R3] | 31:0[R24]
0001028d: R14 := 31:0[R25] & 0x800
00010295: R30 := 31:0[R30] & 0x80000
0001029c: R0 := pad:64[27:4[R0]]
000102a5: R14 := 31:0[R14] | 31:0[R18]
000102ae: R17 := 31:0[R17] | 31:0[R16]
000102b5: R18 := pad:64[27:3[R2]]
000102be: R5 := 31:0[R5] | 31:0[R15]
000102c6: R22 := 31:0[R20] & 0x200
000102ce: R15 := 31:0[R19] & 0x20
000102d6: R3 := 31:0[R21] & 0x20000
000102dd: R19 := pad:64[27:10[R2]]
000102e6: R30 := 31:0[R30] | 31:0[R4]
000102ee: R0 := 31:0[R0] & 0x10000
000102f5: R16 := pad:64[27:2[R2]]
000102fd: R24 := 31:0[R2] << 0x28
00010306: R4 := 31:0[R17] | 31:0[R30]
0001030f: R5 := 31:0[R5] | 31:0[R14]
00010318: R22 := 31:0[R15] | 31:0[R22]
00010320: R21 := 31:0[R18] & 8
00010327: R15 := pad:64[27:18[R2]]
0001032e: R23 := pad:64[3:2[R2]]
00010337: R3 := 31:0[R0] | 31:0[R3]
0001033e: R14 := pad:64[27:9[R2]]
00010346: R0 := 31:0[R24] & 0x1000
0001034e: R19 := 31:0[R19] & 0x10
00010356: R16 := 31:0[R16] & 0x2000
0001035f: R5 := 31:0[R5] | 31:0[R22]
00010368: R19 := 31:0[R19] | 31:0[R21]
00010370: R17 := 31:0[R23] & 2
00010379: R3 := 31:0[R4] | 31:0[R3]
00010382: R16 := 31:0[R16] | 31:0[R0]
00010389: R30 := pad:64[27:7[R2]]
00010391: R0 := 31:0[R2] << 0x27
0001039a: R20 := 31:0[R20] & 31:0[R8]
000103a2: R15 := 31:0[R15] & 4
000103aa: R14 := 31:0[R14] & 0x400
000103b3: R4 := 31:0[R5] | 31:0[R19]
000103bc: R15 := 31:0[R15] | 31:0[R17]
000103c4: R19 := 31:0[R2] & 0x100
000103cb: R17 := pad:64[0:0[R2]]
000103d4: R14 := 31:0[R14] | 31:0[R20]
000103dc: R5 := 31:0[R0] & 0x100
000103e5: R3 := 31:0[R3] | 31:0[R16]
000103ed: R0 := 31:0[R30] & 0x20
000103f6: R5 := 31:0[R5] | 31:0[R0]
000103ff: R4 := 31:0[R4] | 31:0[R15]
00010408: R3 := 31:0[R3] | 31:0[R14]
0001040f: R0 := pad:64[27:21[R2]]
00010417: R14 := pad:64[0:0[R2]] << 0x22
00010420: R18 := 31:0[R18] & 31:0[R7]
00010429: R15 := 31:0[R17] | 31:0[R19]
00010432: R3 := 31:0[R3] | 31:0[R5]
0001043b: R4 := 31:0[R4] | 31:0[R15]
00010443: R5 := 31:0[R2] & 0x200
0001044c: R18 := 31:0[R14] | 31:0[R18]
00010454: R0 := 31:0[R0] & 2
0001045f: R3 := 31:0[R3] | 31:0[R18]
00010468: R0 := 31:0[R0] | 31:0[R5]
00010470: R2 := 31:0[R2] & 0xFFFFFFF
00010479: R3 := 31:0[R3] | 31:0[R0]
00010481: mem := mem with [R1 - 4, el]:u32 <- 31:0[R3]
00010489: #1657 := 1 + ~R1 + R12
0001048d: NF := 63:63[#1657]
00010490: VF := 63:63[R12] & 63:63[~R1] & ~63:63[#1657] | ~63:63[R12] &
          ~63:63[~R1] & 63:63[#1657]
00010493: ZF := #1657 = 0
00010496: CF := 63:63[R12] & 63:63[~R1] | 63:63[~R1] & ~63:63[#1657] |
          63:63[R12] & ~63:63[#1657]
000104a3: #1659 := ~ZF <> 0
0001049d: when #1659 goto %00010071
000384a1: goto %000104a6

000104a6:
000104ad: R19 := mem[R31 + 0x10, el]:u64
000104b1: R20 := mem[R31 + 0x18, el]:u64
000104ba: R21 := mem[R31 + 0x20, el]:u64
000104be: R22 := mem[R31 + 0x28, el]:u64
000104c7: R23 := mem[R31 + 0x30, el]:u64
000104cb: R24 := mem[R31 + 0x38, el]:u64
000104d3: R25 := mem[R31 + 0x40, el]:u64
000104dd: R29 := mem[R31, el]:u64
000104e1: R30 := mem[R31 + 8, el]:u64
000104e4: R31 := R31 + 0x50
000104e9: call R30 with noreturn

000384a3: sub direct_request(direct_request_result)
00038abb: direct_request_result :: out u32 = low:32[R0]

00020664:
0002066c: mem := mem with [R31 - 0x110, el]:u64 <- R29
00020670: mem := mem with [R31 - 0x108, el]:u64 <- R30
00020673: R31 := R31 - 0x110
00020679: R2 := 0x27000
00020680: R29 := R31
00020689: mem := mem with [R31, el]:u64 <- R31 + 0x60
0002068d: mem := mem with [R31, el]:u64 <- R31 + 0x68
00020693: R24 := 0x27000
0002069b: R3 := mem[R24 + 0xF78, el]:u64
000206a4: mem := mem with [R31, el]:u64 <- R31 + 0x20
000206a8: mem := mem with [R31, el]:u64 <- R31 + 0x28
000206b0: R19 := R1
000206b8: R2 := mem[R2 + 0xFB8, el]:u64
000206c1: mem := mem with [R31, el]:u64 <- R31 + 0x40
000206c5: mem := mem with [R31, el]:u64 <- R31 + 0x48
000206ce: R1 := pad:64[mem[R3, el]:u32]
000206d6: R3 := mem[R2, el]:u64
000206de: mem := mem with [R31 + 0x108, el]:u64 <- R3
000206e4: R3 := 0
000206ed: R2 := pad:64[mem[R0, el]:u32]
000206f5: R0 := mem[R0 + 0x10, el]:u64
000206fe: mem := mem with [R31, el]:u64 <- R31 + 0x80
00020702: mem := mem with [R31, el]:u64 <- R31 + 0x88
0002070b: mem := mem with [R31, el]:u64 <- R31 + 0xA0
0002070f: mem := mem with [R31, el]:u64 <- R31 + 0xA8
00020717: mem := mem with [R31 + 0x7C, el]:u32 <- 31:0[R2]
0002071f: mem := mem with [R31 + 0xB0, el]:u64 <- R0
00020727: mem := mem with [R31 + 0xD4, el]:u32 <- 31:0[R2]
00020733: #11855 := ~31:0[R1] = 0
0002072d: when #11855 goto %0002072b
000384e0: goto %00020751

0002072b:
00020739: R1 := 0x13000
00020740: R0 := 1
00020747: R1 := R1 + 0x578
0002074c: R30 := 0xF250
0002074e: call @__printf_chk with return %00020750

00020750:
00020753: goto %00020751

00020751:
00020757: R30 := 0xED84
00020759: call @__errno_location with return %0002075b

0002075b:
00020762: R20 := pad:64[mem[R19 + 0x20, el]:u32]
0002076a: R1 := mem[R19 + 0x40, el]:u64
00020772: mem := mem with [R0, el]:u32 <- 0
00020779: R28 := R31 + 0xD0
00020780: R25 := 0xFFFFFFFFFFFFFFFF
00020788: mem := mem with [R31 + 0xB8, el]:u64 <- R0
00020790: R0 := R28
00020795: R30 := 0xEDA4
00020797: call @so_resolv with return %00020799

00020799:
000207a3: #11861 := 31:0[R0] = 0
0002079d: when #11861 goto %0002079b
000384df: goto %00025f87

00025f87:
00025f8e: R0 := pad:64[mem[R31 + 0xD0, el]:u32]
00025f97: R1 := 31:0[R20]
00025f9c: R30 := 0xEDB4
00025f9e: call @so_connect with return %00025fa0

00025fa0:
00025fa6: mem := mem with [R31 + 0xD0, el]:u32 <- 31:0[R0]
00025faf: R25 := 31:0[R0]
00025fba: #14246 := ~~31:31[R0]
00025fb4: when #14246 goto %0002079b
000384de: goto %00025fbd

0002079b:
000207ab: R22 := mem[R31 + 0xB8, el]:u64
000207b1: R1 := 0xFFFFFFFFFFFFFFFF
000207b9: R20 := mem[R19 + 0x40, el]:u64
000207c1: mem := mem with [R31 + 0x80, el]:u64 <- R1
000207ca: R0 := pad:64[mem[R22, el]:u32]
000207d3: R21 := pad:64[mem[R19 + 0x20, el]:u32]
000207d8: R30 := 0xF270
000207da: call @strerror with return %000207dc

000207dc:
000207e2: R5 := R0
000207eb: R4 := 31:0[R21]
000207f3: R3 := R20
000207fa: R1 := 1
00020801: R0 := 4
00020807: R2 := 0x13000
0002080e: R2 := R2 + 0x598
00020813: R30 := 0xF290
00020815: call @__syslog_chk with return %00020817

00020817:
0002081e: R0 := pad:64[mem[R22, el]:u32]
00020826: R19 := mem[R19 + 0x48, el]:u64
0002082b: R30 := 0xF29C
0002082d: call @strerror with return %0002082f

0002082f:
00020835: R1 := R0
0002083d: R0 := R19
00020842: R30 := 0xF2A8
00020845: call @gen_502_page with return %000250b1

000250b1:
000250b7: R19 := R0
000250bc: R30 := 0xF2B0
000250be: call @strlen with return %000250c0

000250c0:
000250c6: R2 := R0
000250cf: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
000250d7: R1 := R19
000250dc: R30 := 0xF2C0
000250de: call @write with return %000250e0

000250e0:
000250e6: R0 := R19
000250eb: R30 := 0xF2C8
000250ed: call @free with return %000250ef

000250ef:
000250f2: goto %000250f0

00025fbd:
00025fc1: R0 := 0x27000
00025fc8: R1 := 1
00025fd0: R0 := mem[R0 + 0xF80, el]:u64
00025fd8: R0 := mem[R0, el]:u64
00025fdd: R30 := 0xEDD4
00025fe0: call @dup_auth with return %00026328

00026328:
0002632e: R1 := R0
00026336: R0 := mem[R19 + 0x40, el]:u64
0002633e: mem := mem with [R31 + 0xA0, el]:u64 <- R1
00026349: #14324 := R0 = 0
00026343: when #14324 goto %000258d2
000384dd: goto %0002634c

000258d2:
000258d8: R0 := mem[R19 + 0x48, el]:u64
000258de: R1 := 0x13000
000258e5: R1 := R1 + 0x5C0
000258ea: R30 := 0xF488
000258ec: call @gen_502_page with return %000258ee

000258ee:
000258f4: R19 := R0
000258f9: R30 := 0xF490
000258fb: call @strlen with return %000258fd

000258fd:
00025903: R2 := R0
0002590c: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
00025914: R1 := R19
00025919: R30 := 0xF4A0
0002591b: call @write with return %0002591d

0002591d:
00025923: R0 := R19
00025928: R30 := 0xF4A8
0002592a: call @free with return %0002592c

0002592c:
00025932: R0 := mem[R31 + 0xA0, el]:u64
0002593e: #14116 := R0 = 0
00025938: when #14116 goto %00025936
000384dc: goto %00025952

00025936:
00025944: R0 := 0xFFFFFFFFFFFFFFFF
0002594c: mem := mem with [R31 + 0x80, el]:u64 <- R0
00025950: goto %000250f0

00025952:
00025956: R1 := 0xFFFFFFFFFFFFFFFF
0002595e: mem := mem with [R31 + 0x80, el]:u64 <- R1
00025963: R30 := 0xF4BC
00025965: call @free with return %00025967

00025967:
00025969: goto %000250f0

0002634c:
0002634f: R30 := 0xEDE8
00026351: call @strdup with return %00026353

00026353:
00026359: R23 := R0
00026362: R1 := pad:64[mem[R19 + 0x20, el]:u32]
0002636a: R0 := R19
00026372: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R1]
00026377: R30 := 0xEDFC
00026379: call @dup_rr_data with return %0002637b

0002637b:
00026381: R19 := R0
00026387: R0 := 0x13000
0002638e: R0 := R0 + 0x5D8
00026396: mem := mem with [R31 + 0x98, el]:u64 <- R0
0002639d: R0 := R31 + 0xD4
000263a5: mem := mem with [R31 + 0x68, el]:u64 <- R0
000263ac: R0 := R31 + 0xE8
000263b4: mem := mem with [R31 + 0x70, el]:u64 <- R0
000263bb: R0 := R31 + 0xD8
000263c3: mem := mem with [R31 + 0x60, el]:u64 <- R0
000263ca: R0 := R31 + 0xC8
000263d2: mem := mem with [R31 + 0x80, el]:u64 <- 0
000263da: mem := mem with [R31 + 0xA8, el]:u64 <- R0
000263e2: mem := mem with [R31 + 0xD8, el]:u64 <- R19
000384db: goto %00025571

00025571:
00025577: R30 := 0xEE38
00025579: call @new_rr_data with return %0002557b

0002557b:
0002557f: R26 := 0x12000
00025587: R21 := R0
0002558e: R0 := R26 + 0xD80
00025596: R22 := mem[R31 + 0x70, el]:u64
0002559e: mem := mem with [R31 + 0x88, el]:u64 <- R0
000255a6: R0 := mem[R31 + 0x68, el]:u64
000255ac: R20 := 0
000255b3: R27 := 0
000255bb: mem := mem with [R31 + 0xE0, el]:u64 <- R21
000255c3: mem := mem with [R31 + 0xE8, el]:u64 <- R0
000255cc: mem := mem with [R31, el]:u64 <- R31 + 0x1E0
000255d0: mem := mem with [R31, el]:u64 <- R31 + 0x1E8
000255d8: mem := mem with [R31 + 0x100, el]:u64 <- R0
000384da: goto %000251bb

000251bb:
000251c4: R0 := mem[R31 + 0x60, el]:u64
000251cd: R25 := 31:0[R20]
000251d6: R26 := mem[R0 + (R20 << 3), el]:u64
000251de: R0 := mem[R24 + 0xF78, el]:u64
000251e7: R1 := pad:64[mem[R26 + 0x1C, el]:u32]
000251f0: R2 := pad:64[mem[R0, el]:u32]
000251fc: #13928 := 31:0[R1] = 0
000251f6: when #13928 goto %000251f4
000384d9: goto %00025ec0

00025ec0:
00025ec6: R0 := mem[R22, el]:u64
00025ecf: R5 := pad:64[mem[R0, el]:u32]
00025edb: #14226 := ~31:0[R2] = 0
00025ed5: when #14226 goto %00025ed3
000384d8: goto %00025f4f

00025ed3:
00025ee4: R3 := pad:64[mem[R31 + 0x7C, el]:u32]
00025eec: R2 := extend:64[31:0[R20]] + 1
00025ef5: R4 := pad:64[mem[R31 + 0xD0, el]:u32]
00025efc: R0 := 1
00025f04: R1 := mem[R31 + 0x98, el]:u64
00025f0c: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R5]
00025f11: R30 := 0xF0E8
00025f13: call @__printf_chk with return %00025f15

00025f15:
00025f1c: R5 := pad:64[mem[R31 + 0x94, el]:u32]
00025f23: R0 := 1
00025f2b: R1 := mem[R31 + 0x88, el]:u64
00025f34: R2 := 31:0[R5]
00025f3c: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R5]
00025f41: R30 := 0xF100
00025f43: call @__printf_chk with return %00025f45

00025f45:
00025f4c: R5 := pad:64[mem[R31 + 0x94, el]:u32]
00025f51: goto %00025f4f

00025f4f:
00025f59: R0 := 31:0[R5]
00025f61: R1 := R26
00025f66: R30 := 0xEE9C
00025f68: call @headers_recv with return %00025f6a

00025f6a:
00025f73: #14238 := 31:0[R0] = 0
00025f6d: when #14238 goto %0002543e
000384d7: goto %00025f76

00025f76:
00025f7c: R0 := mem[R24 + 0xF78, el]:u64
00025f85: R2 := pad:64[mem[R0, el]:u32]
000384d6: goto %000251f4

000251f4:
00025204: R25 := 31:0[R25] ^ 1
0002520b: #13951 := R23
0002520f: NF := 63:63[#13951]
00025212: VF := 63:63[R23] & ~63:63[#13951]
00025215: ZF := #13951 = 0
00025218: CF := 63:63[R23] | ~63:63[#13951] | 63:63[R23] & ~63:63[#13951]
00025232: #13953 := ~ZF <> 0
00025233: goto %0002522a

0002522a:
0002522c: when #13953 goto %00025223
0002522d: goto %00025227

00025227:
00025228: R25 := 0
0002522f: goto %0002522b

00025223:
00025224: R25 := 31:0[R25]
0002522e: goto %0002522b

0002522b:
00025240: #13954 := 31:0[R25] = 0
0002523a: when #13954 goto %00025238
000384d5: goto %00025e4a

00025e4a:
00025e50: R1 := mem[R19 + 0x40, el]:u64
00025e5b: #14214 := R1 = 0
00025e55: when #14214 goto %00025238
000384d4: goto %00025e5e

00025e5e:
00025e64: R0 := R23
00025e6c: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R2]
00025e71: R30 := 0xEECC
00025e73: call @strcasecmp with return %00025e75

00025e75:
00025e7c: R2 := pad:64[mem[R31 + 0x94, el]:u32]
00025e87: #14219 := ~31:0[R0] = 0
00025e81: when #14219 goto %00025841
000384d3: goto %00025e8a

00025e8a:
00025e91: R0 := pad:64[mem[R19 + 0x20, el]:u32]
00025e9a: R1 := pad:64[mem[R31 + 0x90, el]:u32]
00025ea2: #14223 := 1 + extend:64[~31:0[R1]] + extend:64[31:0[R0]]
00025ea6: NF := 63:63[#14223]
00025ea9: VF := 31:31[~31:0[R1]] & 31:31[R0] & ~63:63[#14223] |
          ~31:31[~31:0[R1]] & ~31:31[R0] & 63:63[#14223]
00025eac: ZF := #14223 = 0
00025eaf: CF := 31:31[~31:0[R1]] & 31:31[R0] | 31:31[R0] & ~63:63[#14223] |
          31:31[~31:0[R1]] & ~63:63[#14223]
00025ebd: #14225 := ~ZF <> 0
00025eb7: when #14225 goto %00025841
000384d2: goto %00025238

00025841:
0002584b: #14089 := ~31:0[R2] = 0
00025845: when #14089 goto %00025843
000384d1: goto %00025871

00025843:
00025853: R2 := mem[R19 + 0x30, el]:u64
00025859: R1 := 0x13000
00025860: R0 := 1
00025867: R1 := R1 + 0x600
0002586c: R30 := 0xF4F0
0002586e: call @__printf_chk with return %00025870

00025870:
00025873: goto %00025871

00025871:
0002587a: R0 := R19
0002587f: R30 := 0xF450
00025881: call @dup_rr_data with return %00025883

00025883:
00025889: R1 := R0
00025891: R0 := R19
00025899: mem := mem with [R31 + 0x80, el]:u64 <- R1
0002589e: R30 := 0xF460
000258a0: call @free_rr_data with return %000258a2

000258a2:
000258a8: R0 := R21
000258ad: R30 := 0xF468
000258af: call @free_rr_data with return %000258b1

000258b1:
000258b7: R0 := mem[R31 + 0xA0, el]:u64
000258c0: R25 := pad:64[mem[R31 + 0xD0, el]:u32]
000258cb: #14103 := ~R0 = 0
000258c5: when #14103 goto %000254ac
000384d0: goto %000258ce

000258ce:
000258d0: goto %0002549d

00025238:
0002524c: #13955 := ~31:0[R2] = 0
00025246: when #13955 goto %00025244
000384cf: goto %00025e3e

00025244:
00025254: R0 := mem[R26 + 8, el]:u64
00025259: R30 := 0xEF98
0002525b: call @hlist_dump with return %0002525d

0002525d:
00025267: #13956 := R20 = 0
00025261: when #13956 goto %0002525f
000384ce: goto %00025dd1

00025e3e:
00025e47: #14213 := ~R20 = 0
00025e41: when #14213 goto %00025dd1
000384cd: goto %0002525f

00025dd1:
00025dd8: R0 := pad:64[mem[R21 + 0x10, el]:u32]
00025dde: R25 := 0x12000
00025de4: R27 := 0x12000
00025deb: #14209 := 0xFFFFFFFFFFFFFE6F + extend:64[31:0[R0]]
00025def: NF := 63:63[#14209]
00025df2: VF := 31:31[R0] & ~63:63[#14209]
00025df5: ZF := #14209 = 0
00025df8: CF := 31:31[R0] | 31:31[R0] & ~63:63[#14209] | ~63:63[#14209]
00025e03: R0 := mem[R21 + 8, el]:u64
00025e0f: #14211 := ZF
00025e09: when #14211 goto %00025e07
000384cc: goto %00025b39

00025e07:
00025e15: R2 := 0x12000
00025e1b: R1 := 0x13000
00025e22: R2 := R2 + 0xA80
00025e29: R1 := R1 + 0x460
00025e2e: R30 := 0xF2E0
00025e30: call @hlist_subcmp_all with return %00025e32

00025e32:
00025e3b: #14212 := ~31:0[R0] = 0
00025e35: when #14212 goto %00025cda
000384cb: goto %00025b26

00025cda:
00025ce0: R0 := mem[R21 + 8, el]:u64
00025ce7: R2 := R27 + 0x950
00025cee: R1 := R25 + 0x958
00025cf3: R30 := 0xF370
00025cf5: call @hlist_subcmp with return %00025cf7

00025cf7:
00025cfe: R4 := pad:64[mem[R31 + 0xD0, el]:u32]
00025d09: #14197 := 31:0[R0] = 0
00025d03: when #14197 goto %00025abf
000384ca: goto %00025d0c

00025d0c:
00025d12: R0 := mem[R24 + 0xF78, el]:u64
00025d1b: R0 := pad:64[mem[R0, el]:u32]
00025d26: #14198 := ~31:0[R0] = 0
00025d20: when #14198 goto %0002596b
000384c9: goto %00025998

0002596b:
0002596f: R1 := 0x13000
00025976: R0 := 1
0002597d: R1 := R1 + 0x648
00025985: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R4]
0002598a: R30 := 0xF4D4
0002598c: call @__printf_chk with return %0002598e

0002598e:
00025995: R4 := pad:64[mem[R31 + 0x94, el]:u32]
0002599a: goto %00025998

00025998:
000259a2: R0 := 31:0[R4]
000259a7: R30 := 0xF38C
000259a9: call @close with return %000259ab

000259ab:
000259b2: R2 := pad:64[mem[R19 + 0x20, el]:u32]
000259ba: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R2]
000259c2: R2 := mem[R31 + 0xB8, el]:u64
000259ca: R1 := mem[R19 + 0x40, el]:u64
000259d2: R0 := mem[R31 + 0xA8, el]:u64
000259da: mem := mem with [R2, el]:u32 <- 0
000259df: R30 := 0xF3A8
000259e1: call @so_resolv with return %000259e3

000259e3:
000259ea: R2 := pad:64[mem[R31 + 0x94, el]:u32]
000259f6: #14125 := 31:0[R0] = 0
000259f0: when #14125 goto %000259ee
000384c8: goto %00025a7c

000259ee:
000259fd: R0 := 0xFFFFFFFFFFFFFFFF
00025a06: R25 := 31:0[R0]
00025a0e: mem := mem with [R31 + 0xD0, el]:u32 <- 31:0[R0]
000384c7: goto %00025a10

00025a7c:
00025a83: R0 := pad:64[mem[R31 + 0xC8, el]:u32]
00025a8c: R1 := 31:0[R2]
00025a91: R30 := 0xF3BC
00025a93: call @so_connect with return %00025a95

00025a95:
00025a9b: mem := mem with [R31 + 0xD0, el]:u32 <- 31:0[R0]
00025aa4: R4 := 31:0[R0]
00025ab0: #14150 := ~~31:31[R0]
00025aaa: when #14150 goto %00025aa8
000384c6: goto %00025abf

00025aa8:
00025ab9: R25 := 31:0[R0]
00025abd: goto %00025a10

00025a10:
00025a16: R0 := mem[R19 + 0x48, el]:u64
00025a1c: R1 := 0x13000
00025a23: R1 := R1 + 0x668
00025a29: R2 := 0xFFFFFFFFFFFFFFFF
00025a31: mem := mem with [R31 + 0x80, el]:u64 <- R2
00025a36: R30 := 0xF580
00025a38: call @gen_502_page with return %00025a3a

00025a3a:
00025a40: R19 := R0
00025a45: R30 := 0xF588
00025a47: call @strlen with return %00025a49

00025a49:
00025a4f: R2 := R0
00025a58: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
00025a60: R1 := R19
00025a65: R30 := 0xF598
00025a67: call @write with return %00025a69

00025a69:
00025a6f: R0 := R19
00025a74: R30 := 0xF5A0
00025a76: call @free with return %00025a78

00025a78:
00025a7a: goto %0002547d

00025abf:
00025ac5: R3 := mem[R31 + 0xA0, el]:u64
00025ace: R0 := 31:0[R4]
00025ad6: R2 := R21
00025ade: R1 := R19
00025ae6: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R4]
00025aeb: R30 := 0xF3E0
00025aed: call @www_authenticate with return %00025aef

00025aef:
00025af6: R4 := pad:64[mem[R31 + 0x94, el]:u32]
00025b01: #14164 := 31:0[R0] = 0
00025afb: when #14164 goto %00025738
000384c5: goto %00025b04

00025738:
0002573e: R24 := mem[R24 + 0xF78, el]:u64
00025747: R25 := 31:0[R4]
00025750: R0 := pad:64[mem[R24, el]:u32]
0002575c: #14066 := ~31:0[R0] = 0
00025756: when #14066 goto %00025754
000384c4: goto %0002577a

00025754:
00025762: R1 := 0x13000
00025769: R0 := 1
00025770: R1 := R1 + 0x690
00025775: R30 := 0xF5B4
00025777: call @__printf_chk with return %00025779

00025779:
0002577c: goto %0002577a

0002577a:
00025783: R2 := mem[R21 + 0x60, el]:u64
00025789: R3 := 0xFFFFFFFFFFFFFFFF
00025791: R0 := mem[R21 + 0x48, el]:u64
00025798: #14067 := R2
0002579c: NF := 63:63[#14067]
0002579f: VF := 63:63[R2] & ~63:63[#14067]
000257a2: ZF := #14067 = 0
000257a5: CF := 63:63[R2] | ~63:63[#14067] | 63:63[R2] & ~63:63[#14067]
000257ad: R1 := 0x13000
000257b4: R1 := R1 + 0x558
000257ca: #14069 := ZF
000257cb: goto %000257c2

000257c2:
000257c4: when #14069 goto %000257bc
000257c5: goto %000257bf

000257bf:
000257c0: R1 := R2
000257c7: goto %000257c3

000257bc:
000257bd: R1 := R1
000257c6: goto %000257c3

000257c3:
000257d4: mem := mem with [R31 + 0x80, el]:u64 <- R3
000257d9: R30 := 0xF558
000257db: call @gen_502_page with return %000257dd

000257dd:
000257e0: goto %000257de

00025b04:
00025b0b: R0 := pad:64[mem[R21 + 0x10, el]:u32]
00025b12: #14165 := 0xFFFFFFFFFFFFFE6F + extend:64[31:0[R0]]
00025b16: NF := 63:63[#14165]
00025b19: VF := 31:31[R0] & ~63:63[#14165]
00025b1c: ZF := #14165 = 0
00025b1f: CF := 31:31[R0] | 31:31[R0] & ~63:63[#14165] | ~63:63[#14165]
00025b2e: #14167 := ~ZF <> 0
00025b28: when #14167 goto %00025b26
000384c3: goto %00025d29

00025d29:
00025d2d: R0 := 0xFFFFFFFFFFFFFFFF
00025d36: R2 := pad:64[mem[R19 + 0x20, el]:u32]
00025d3e: mem := mem with [R31 + 0x80, el]:u64 <- R0
00025d47: R25 := 31:0[R4]
00025d4f: R1 := mem[R19 + 0x40, el]:u64
00025d57: R0 := mem[R21 + 0x48, el]:u64
00025d5c: R30 := 0xF410
00025d5e: call @gen_401_page with return %000257de

000257de:
000257e7: R20 := R0
000257ec: R30 := 0xF418
000257ee: call @strlen with return %000257f0

000257f0:
000257f6: R2 := R0
000257ff: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
00025807: R1 := R20
0002580c: R30 := 0xF428
0002580e: call @write with return %00025810

00025810:
00025816: R0 := R20
0002581b: R30 := 0xF430
0002581d: call @free with return %0002581f

0002581f:
00025825: R0 := R19
0002582a: R30 := 0xF438
0002582c: call @free_rr_data with return %0002582e

0002582e:
00025834: R0 := R21
00025839: R30 := 0xF440
0002583b: call @free_rr_data with return %0002583d

0002583d:
0002583f: goto %0002547d

00025b26:
00025b36: R0 := mem[R21 + 8, el]:u64
00025b3b: goto %00025b39

00025b39:
00025b41: R25 := R25 + 0x958
00025b48: R2 := R27 + 0x950
00025b50: R1 := R25
00025b55: R30 := 0xEFC4
00025b57: call @hlist_subcmp with return %00025b59

00025b59:
00025b63: #14171 := ~31:0[R0] = 0
00025b5d: when #14171 goto %00025b5b
000384c2: goto %00025be4

00025be4:
00025bea: R1 := R21
00025bf2: R0 := R19
00025bf7: R30 := 0xEFD4
00025bf9: call @http_has_body with return %00025bfb

00025bfb:
00025c07: #14182 := ~ZF <> 0
00025c01: when #14182 goto %00025bff
000384c1: goto %00025b5b

00025bff:
00025c0f: R0 := mem[R21 + 8, el]:u64
00025c15: R27 := 0x12000
00025c1c: R27 := R27 + 0xE30
00025c23: R3 := 1
00025c2b: R2 := R27
00025c31: R1 := 0x12000
00025c38: R1 := R1 + 0xE40
00025c3d: R30 := 0xF30C
00025c3f: call @hlist_mod with return %00025c41

00025c41:
00025c47: mem := mem with [R21 + 8, el]:u64 <- R0
00025c4f: R2 := R27
00025c57: R1 := R25
00025c5e: R3 := 1
00025c63: R30 := 0xF320
00025c65: call @hlist_mod with return %00025c67

00025c67:
00025c6c: R27 := 1
00025c74: R1 := mem[R24 + 0xF78, el]:u64
00025c7c: mem := mem with [R21 + 8, el]:u64 <- R0
00025c85: R2 := pad:64[mem[R1, el]:u32]
00025c89: goto %00025394

00025b5b:
00025b6b: R0 := mem[R21 + 8, el]:u64
00025b72: R2 := R27 + 0x950
00025b78: R1 := 0x12000
00025b7f: R3 := 1
00025b86: R1 := R1 + 0xE40
00025b8d: R27 := 0
00025b92: R30 := 0xEFF8
00025b94: call @hlist_mod with return %00025b96

00025b96:
00025b9c: mem := mem with [R21 + 8, el]:u64 <- R0
00025ba4: R1 := mem[R24 + 0xF78, el]:u64
00025bab: R0 := R31 + 0xF8
00025bb1: R2 := 0xFFFFFFFFFFFFFFFF
00025bb9: mem := mem with [R31 + 0x80, el]:u64 <- R2
00025bc2: R2 := pad:64[mem[R1, el]:u32]
00025bcb: R0 := mem[R0 + (R20 << 3), el]:u64
00025bd4: R25 := pad:64[mem[R0, el]:u32]
00025bdf: #14174 := 31:0[R2] = 0
00025bd9: when #14174 goto %000255dc
000384c0: goto %00025be2

00025be2:
000384bf: goto %000253b9

0002525f:
00025270: R0 := pad:64[mem[R19, el]:u32]
0002527c: #13957 := ~31:0[R0] = 0
00025276: when #13957 goto %00025274
000384be: goto %00025dc0

00025274:
00025284: R0 := mem[R31 + 0xB0, el]:u64
0002528b: R0 := R0 >> 0x20
00025290: R30 := 0xF114
00025292: call @inet_ntoa with return %00025294

00025294:
0002529b: R4 := mem[R19 + 0x28, el]:u64
0002529f: R5 := mem[R19 + 0x30, el]:u64
000252a7: R3 := R0
000252ad: R2 := 0x12000
000252b4: R0 := 7
000252bb: R2 := R2 + 0xDC0
000252c2: R1 := 1
000252c7: R30 := 0xF130
000252c9: call @__syslog_chk with return %000252cb

000252cb:
000252d1: R0 := mem[R19 + 0x38, el]:u64
000252dd: #13963 := R0 = 0
000252d7: when #13963 goto %000252d5
000384bd: goto %00025d86

00025d86:
00025d8c: R1 := mem[R19 + 0x30, el]:u64
00025d98: #14204 := R1 = 0
00025d92: when #14204 goto %00025d90
000384bc: goto %00025da9

00025da9:
00025daf: R0 := R1
00025db4: R30 := 0xF148
00025db6: call @free with return %00025db8

00025db8:
00025dbe: R0 := mem[R19 + 0x38, el]:u64
000384bb: goto %00025d90

00025d90:
00025d9d: R30 := 0xF150
00025d9f: call @strdup with return %00025da1

00025da1:
00025da7: mem := mem with [R19 + 0x30, el]:u64 <- R0
000384ba: goto %000252d5

000252d5:
000252e5: R0 := mem[R19 + 8, el]:u64
000252eb: R2 := 0x12000
000252f2: R2 := R2 + 0xE30
000252f9: R3 := 1
000252ff: R25 := 0x12000
00025306: R1 := R25 + 0x958
0002530b: R30 := 0xF170
0002530d: call @hlist_mod with return %0002530f

0002530f:
00025315: mem := mem with [R19 + 8, el]:u64 <- R0
0002531b: R1 := 0x12000
00025322: R1 := R1 + 0xB58
00025327: R30 := 0xF180
00025329: call @hlist_del with return %0002532b

0002532b:
00025331: mem := mem with [R19 + 8, el]:u64 <- R0
00025339: R2 := mem[R31 + 0xA0, el]:u64
0002533f: R1 := 0x13000
00025346: R1 := R1 + 0x410
0002534b: R30 := 0xF194
0002534d: call @http_parse_basic with return %0002534f

0002534f:
00025354: #13966 := extend:64[31:0[R0]]
00025358: NF := 63:63[#13966]
0002535b: VF := 31:31[R0] & ~63:63[#13966]
0002535e: ZF := #13966 = 0
00025361: CF := 31:31[R0] | 31:31[R0] & ~63:63[#13966] | ~63:63[#13966]
00025372: #13968 := (NF <> VF | ZF) <> 0
0002536c: when #13968 goto %0002536a
000384b9: goto %00025d60

0002536a:
0002537a: R1 := mem[R24 + 0xF78, el]:u64
00025383: R0 := pad:64[mem[R19, el]:u32]
0002538c: R2 := pad:64[mem[R1, el]:u32]
00025391: goto %0002538f

00025d60:
00025d66: R25 := mem[R24 + 0xF78, el]:u64
00025d6f: R2 := pad:64[mem[R25, el]:u32]
00025d7a: #14203 := ~31:0[R2] = 0
00025d74: when #14203 goto %00025c8b
000384b8: goto %00025d7d

00025c8b:
00025c91: R0 := mem[R31 + 0xA0, el]:u64
00025c97: R1 := 0x12000
00025c9e: R1 := R1 + 0xDD0
00025ca5: R2 := R0 + 0x32
00025cac: R4 := R0 + 0x64
00025cb4: R3 := R0
00025cbb: R0 := 1
00025cc0: R30 := 0xF354
00025cc2: call @__printf_chk with return %00025cc4

00025cc4:
00025ccb: R2 := pad:64[mem[R25, el]:u32]
00025cd4: R0 := pad:64[mem[R19, el]:u32]
00025cd8: goto %0002538f

00025d7d:
00025d84: R0 := pad:64[mem[R19, el]:u32]
000384b7: goto %0002538f

0002538f:
0002539c: #13969 := 31:0[R0] = 0
00025396: when #13969 goto %00025394
000384b6: goto %00025600

00025600:
00025606: R1 := mem[R19 + 0x28, el]:u64
0002560c: R0 := 0x12000
00025613: R0 := R0 + 0xF00
0002561b: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R2]
00025620: R30 := 0xF1C4
00025622: call @strcasecmp with return %00025624

00025624:
0002562b: R2 := pad:64[mem[R31 + 0x94, el]:u32]
00025636: #14039 := ~31:0[R0] = 0
00025630: when #14039 goto %00025394
000384b5: goto %00025639

00025639:
00025643: #14040 := ~31:0[R2] = 0
0002563d: when #14040 goto %0002563b
000384b4: goto %00025661

0002563b:
00025649: R1 := 0x13000
00025650: R0 := 1
00025657: R1 := R1 + 0x620
0002565c: R30 := 0xF520
0002565e: call @__printf_chk with return %00025660

00025660:
00025663: goto %00025661

00025661:
00025669: R0 := 0xC8
00025671: mem := mem with [R21, el]:u32 <- 0
00025679: mem := mem with [R21 + 0x10, el]:u32 <- 31:0[R0]
0002567f: R0 := 0x13000
00025687: mem := mem with [R21 + 0x1C, el]:u32 <- 0
0002568e: R0 := R0 + 0x630
00025693: R30 := 0xF1EC
00025695: call @strdup with return %00025697

00025697:
0002569d: R1 := R0
000256a5: R0 := mem[R19 + 0x48, el]:u64
000256ad: mem := mem with [R21 + 0x50, el]:u64 <- R1
000256b2: R30 := 0xF1FC
000256b4: call @strdup with return %000256b6

000256b6:
000256bc: mem := mem with [R21 + 0x48, el]:u64 <- R0
000256c5: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
000256cd: R1 := R21
000256d2: R30 := 0xF20C
000256d4: call @headers_send with return %000256d6

000256d6:
000256dd: R25 := pad:64[mem[R31 + 0xD0, el]:u32]
000256e9: #14052 := ~31:0[R0] = 0
000256e3: when #14052 goto %000256e1
000384b3: goto %00025705

000256e1:
000256f2: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
000256fb: R1 := 31:0[R25]
00025700: R30 := 0xF50C
00025702: call @tunnel with return %00025704

00025704:
00025707: goto %00025705

00025705:
0002570c: R1 := 0xFFFFFFFFFFFFFFFF
00025714: R0 := R19
0002571c: mem := mem with [R31 + 0x80, el]:u64 <- R1
00025721: R30 := 0xF224
00025723: call @free_rr_data with return %00025725

00025725:
0002572b: R0 := R21
00025730: R30 := 0xF22C
00025732: call @free_rr_data with return %00025734

00025734:
00025736: goto %0002547d

00025dc0:
00025dc6: R0 := mem[R24 + 0xF78, el]:u64
00025dcf: R2 := pad:64[mem[R0, el]:u32]
000384b2: goto %00025394

00025394:
000253a3: R0 := R31 + 0xF8
000253ac: R0 := mem[R0 + (R20 << 3), el]:u64
000253b5: R25 := pad:64[mem[R0, el]:u32]
000253c1: #13970 := ~31:0[R2] = 0
000253bb: when #13970 goto %000253b9
000384b1: goto %000255dc

000253b9:
000253ca: R2 := 31:0[R25]
000253d0: R1 := 0x12000
000253d7: R0 := 1
000253de: R1 := R1 + 0xFD8
000253e3: R30 := 0xF034
000253e5: call @__printf_chk with return %000253e7

000253e7:
000253ed: R1 := R26
000253f6: R0 := 31:0[R25]
000253fb: R30 := 0xF040
000253fd: call @headers_send with return %000253ff

000253ff:
00025409: #13980 := ~31:0[R0] = 0
00025403: when #13980 goto %00025401
000384b0: goto %000255da

000255da:
000384af: goto %0002543e

000255dc:
000255e2: R1 := R26
000255eb: R0 := 31:0[R25]
000255f0: R30 := 0xEF18
000255f2: call @headers_send with return %000255f4

000255f4:
000255fd: #14037 := 31:0[R0] = 0
000255f7: when #14037 goto %0002543e
000384ae: goto %00025401

00025401:
00025411: R1 := mem[R22, el]:u64
0002541a: R0 := 31:0[R25]
00025422: R3 := R21
0002542a: R2 := R19
00025433: R1 := pad:64[mem[R1, el]:u32]
00025438: R30 := 0xEF34
0002543a: call @http_body_send with return %0002543c

0002543c:
00025446: #13990 := 31:0[R0] = 0
00025440: when #13990 goto %0002543e
000384ad: goto %000254bb

0002543e:
0002544c: R1 := 0xFFFFFFFFFFFFFFFF
00025454: R0 := R19
0002545c: mem := mem with [R31 + 0x80, el]:u64 <- R1
00025461: R30 := 0xF058
00025463: call @free_rr_data with return %00025465

00025465:
0002546b: R0 := R21
00025470: R30 := 0xF060
00025472: call @free_rr_data with return %00025474

00025474:
0002547b: R25 := pad:64[mem[R31 + 0xD0, el]:u32]
000384ac: goto %0002547d

000254bb:
000254c0: R22 := R22 + 8
000254cb: #14003 := R20 = 0
000254c5: when #14003 goto %000251b4
000384ab: goto %000254ce

000251b4:
000251b8: R20 := 1
000251bd: goto %000251bb

000254ce:
000254d4: R0 := R19
000254d9: R30 := 0xEF48
000254db: call @free_rr_data with return %000254dd

000254dd:
000254e3: R0 := R21
000254e8: R30 := 0xEF50
000254ea: call @free_rr_data with return %000254ec

000254ec:
000254f3: R25 := pad:64[mem[R31 + 0xD0, el]:u32]
000254fe: #14010 := 31:0[R27] = 0
000254f8: when #14010 goto %0002547d
000384aa: goto %00025501

00025501:
00025508: R0 := 31:0[R25]
0002550d: R30 := 0xEF60
0002550f: call @so_closed with return %00025511

00025511:
0002551a: #14014 := ~31:0[R0] = 0
00025514: when #14014 goto %0002547d
000384a9: goto %0002551d

0002551d:
00025524: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
00025529: R30 := 0xEF6C
0002552b: call @so_closed with return %0002552d

0002552d:
00025531: R1 := 0x27000
00025539: R1 := mem[R1 + 0xFD0, el]:u64
00025542: R1 := pad:64[mem[R1, el]:u32]
0002554b: R0 := 31:0[R0] | 31:0[R1]
00025556: #14018 := ~31:0[R0] = 0
00025550: when #14018 goto %0002547d
000384a8: goto %00025559

0002547d:
00025483: R0 := mem[R31 + 0xA0, el]:u64
0002548f: #13998 := R0 = 0
00025489: when #13998 goto %00025487
000384a7: goto %000254ac

000254ac:
000254b2: R0 := mem[R31 + 0xA0, el]:u64
000254b7: R30 := 0xF074
000254b9: call @free with return %00025487

00025487:
0002549a: #13999 := R23 = 0
00025494: when #13999 goto %000250f0
000384a6: goto %0002549d

0002549d:
000254a3: R0 := R23
000254a8: R30 := 0xF080
000254aa: call @free with return %000250f0

000250f0:
000250fa: R0 := 31:0[R25]
000250ff: R30 := 0xF088
00025101: call @close with return %00025103

00025103:
00025107: R0 := 0x27000
0002510f: R0 := mem[R0 + 0xFB8, el]:u64
00025117: R1 := mem[R31 + 0x108, el]:u64
0002511f: R2 := mem[R0, el]:u64
00025127: #13916 := 1 + ~R2 + R1
0002512b: NF := 63:63[#13916]
0002512e: VF := 63:63[R1] & 63:63[~R2] & ~63:63[#13916] | ~63:63[R1] &
          ~63:63[~R2] & 63:63[#13916]
00025131: ZF := #13916 = 0
00025134: CF := 63:63[R1] & 63:63[~R2] | 63:63[~R2] & ~63:63[#13916] |
          63:63[R1] & ~63:63[#13916]
00025138: R1 := #13916
0002513e: R2 := 0
0002514a: #13918 := ~ZF <> 0
00025144: when #13918 goto %00025142
000384a5: goto %00025155

00025142:
0002514f: R30 := 0xF5C4
00025151: call @__stack_chk_fail with return %00025153

00025153:
000384a4: call @direct_tunnel with noreturn

00025155:
0002515c: R19 := mem[R31 + 0x10, el]:u64
00025160: R20 := mem[R31 + 0x18, el]:u64
00025169: R21 := mem[R31 + 0x20, el]:u64
0002516d: R22 := mem[R31 + 0x28, el]:u64
00025176: R23 := mem[R31 + 0x30, el]:u64
0002517a: R24 := mem[R31 + 0x38, el]:u64
00025183: R25 := mem[R31 + 0x40, el]:u64
00025187: R26 := mem[R31 + 0x48, el]:u64
00025190: R27 := mem[R31 + 0x50, el]:u64
00025194: R28 := mem[R31 + 0x58, el]:u64
0002519c: R0 := mem[R31 + 0x80, el]:u64
000251a6: R29 := mem[R31, el]:u64
000251aa: R30 := mem[R31 + 8, el]:u64
000251ad: R31 := R31 + 0x110
000251b2: call R30 with noreturn

00025559:
0002555c: R30 := 0xEF84
0002555e: call @new_rr_data with return %00025560

00025560:
00025566: R19 := R0
0002556e: mem := mem with [R31 + 0xD8, el]:u64 <- R0
00025573: goto %00025571

000384e1: sub direct_tunnel(direct_tunnel_result)
00038abc: direct_tunnel_result :: out u32 = low:32[R0]

00022754:
0002275f: mem := mem with [R31 - 0x50, el]:u64 <- R29
00022763: mem := mem with [R31 - 0x48, el]:u64 <- R30
00022766: R31 := R31 - 0x50
0002276e: R1 := R0
00022775: R29 := R31
0002277e: mem := mem with [R31, el]:u64 <- R31 + 0x20
00022782: mem := mem with [R31, el]:u64 <- R31 + 0x28
00022788: R20 := 0x27000
0002278f: R19 := 0
00022797: R0 := mem[R20 + 0xFB8, el]:u64
000227a0: mem := mem with [R31, el]:u64 <- R31 + 0x60
000227a4: mem := mem with [R31, el]:u64 <- R31 + 0x68
000227ad: R23 := mem[R1 + 8, el]:u64
000227b1: R24 := mem[R1 + 0x10, el]:u64
000227b9: R2 := mem[R0, el]:u64
000227c1: mem := mem with [R31 + 0x48, el]:u64 <- R2
000227c7: R2 := 0
000227d0: mem := mem with [R31, el]:u64 <- R31 + 0x40
000227d4: mem := mem with [R31, el]:u64 <- R31 + 0x48
000227dd: R22 := pad:64[mem[R1, el]:u32]
000227e5: R0 := R23
000227ea: R30 := 0xF608
000227ec: call @strdup with return %000227ee

000227ee:
000227f3: R1 := 0x3A
000227fb: R21 := R0
00022800: R30 := 0xF614
00022802: call @strchr with return %00022804

00022804:
0002280e: #12836 := R0 = 0
00022808: when #12836 goto %00022806
000384e8: goto %000245de

000245de:
000245e5: R2 := 0xA
000245eb: R1 := 0
000245f0: R30 := 0xF628
000245f2: call @strtol with return %000245f4

000245f4:
000245fb: R19 := 31:0[R0]
000384e7: goto %00022806

00022806:
00022813: R30 := 0xF630
00022815: call @__errno_location with return %00022817

00022817:
0002281d: R2 := R0
00022825: R1 := R21
0002282c: R0 := R31 + 0x40
00022834: mem := mem with [R2, el]:u32 <- 0
00022839: R30 := 0xF644
0002283b: call @so_resolv with return %0002283d

0002283d:
00022847: #12844 := 31:0[R0] = 0
00022841: when #12844 goto %0002283f
000384e6: goto %00024534

0002283f:
0002284e: R19 := 0xFFFFFFFFFFFFFFFF
00022853: goto %00022851

00024534:
0002453b: R0 := pad:64[mem[R31 + 0x40, el]:u32]
00024544: R1 := 31:0[R19]
00024549: R30 := 0xF654
0002454b: call @so_connect with return %0002454d

0002454d:
00024554: R19 := 31:0[R0]
0002455b: #13565 := extend:64[31:0[R0]]
0002455f: NF := 63:63[#13565]
00024562: VF := 31:31[R0] & ~63:63[#13565]
00024565: ZF := #13565 = 0
00024568: CF := 31:31[R0] | 31:31[R0] & ~63:63[#13565] | ~63:63[#13565]
00024578: #13567 := (NF <> VF | ZF) <> 0
00024572: when #13567 goto %00022851
000384e5: goto %0002457b

0002457b:
00024580: R0 := R24 >> 0x20
00024585: R30 := 0xF668
00024587: call @inet_ntoa with return %00024589

00024589:
0002458f: R4 := R23
00024597: R3 := R0
0002459d: R2 := 0x13000
000245a4: R0 := 7
000245ab: R2 := R2 + 0x6B0
000245b2: R1 := 1
000245b7: R30 := 0xF684
000245b9: call @__syslog_chk with return %000245bb

000245bb:
000245bf: R0 := 0x27000
000245c7: R0 := mem[R0 + 0xF78, el]:u64
000245d0: R0 := pad:64[mem[R0, el]:u32]
000245db: #13575 := ~31:0[R0] = 0
000245d5: when #13575 goto %000244eb
000384e4: goto %00024518

000244eb:
000244f1: R2 := R23
000244fa: R3 := 31:0[R22]
00024500: R1 := 0x13000
00024507: R0 := 1
0002450e: R1 := R1 + 0x6C0
00024513: R30 := 0xF6FC
00024515: call @__printf_chk with return %00024517

00024517:
0002451a: goto %00024518

00024518:
00024522: R1 := 31:0[R19]
0002452b: R0 := 31:0[R22]
00024530: R30 := 0xF6A0
00024532: call @tunnel with return %00022851

00022851:
0002285a: R0 := R21
0002285f: R30 := 0xF6A8
00022861: call @free with return %00022863

00022863:
0002286a: R0 := 31:0[R19]
0002286f: R30 := 0xF6B0
00022871: call @close with return %00022873

00022873:
0002287a: R0 := 31:0[R22]
0002287f: R30 := 0xF6B8
00022881: call @close with return %00022883

00022883:
00022889: R20 := mem[R20 + 0xFB8, el]:u64
00022891: R0 := mem[R31 + 0x48, el]:u64
00022899: R1 := mem[R20, el]:u64
000228a1: #12857 := 1 + ~R1 + R0
000228a5: NF := 63:63[#12857]
000228a8: VF := 63:63[R0] & 63:63[~R1] & ~63:63[#12857] | ~63:63[R0] &
          ~63:63[~R1] & 63:63[#12857]
000228ab: ZF := #12857 = 0
000228ae: CF := 63:63[R0] & 63:63[~R1] | 63:63[~R1] & ~63:63[#12857] |
          63:63[R0] & ~63:63[#12857]
000228b2: R0 := #12857
000228b8: R1 := 0
000228c4: #12859 := ~ZF <> 0
000228be: when #12859 goto %000228bc
000384e3: goto %000244ae

000228bc:
000228c9: R30 := 0xF70C
000228cb: call @__stack_chk_fail with return %000228cd

000228cd:
000384e2: call @scanner_hook with noreturn

000244ae:
000244b5: R19 := mem[R31 + 0x10, el]:u64
000244b9: R20 := mem[R31 + 0x18, el]:u64
000244c2: R21 := mem[R31 + 0x20, el]:u64
000244c6: R22 := mem[R31 + 0x28, el]:u64
000244cf: R23 := mem[R31 + 0x30, el]:u64
000244d3: R24 := mem[R31 + 0x38, el]:u64
000244dd: R29 := mem[R31, el]:u64
000244e1: R30 := mem[R31 + 8, el]:u64
000244e4: R31 := R31 + 0x50
000244e9: call R30 with noreturn

000384e9: sub dump_auth(dump_auth_result)
00038abd: dump_auth_result :: out u32 = low:32[R0]

0001c9cb:
0001c9d6: mem := mem with [R31 - 0x30, el]:u64 <- R29
0001c9da: mem := mem with [R31 - 0x28, el]:u64 <- R30
0001c9dd: R31 := R31 - 0x30
0001c9e3: R1 := 0x12000
0001c9ea: R1 := R1 + 0x5A0
0001c9f1: R29 := R31
0001c9fa: mem := mem with [R31, el]:u64 <- R31 + 0x20
0001c9fe: mem := mem with [R31, el]:u64 <- R31 + 0x28
0001ca06: R19 := R0
0001ca0d: R0 := 1
0001ca12: R30 := 0xB3D0
0001ca14: call @__printf_chk with return %0001ca16

0001ca16:
0001ca20: #10390 := R19 = 0
0001ca1a: when #10390 goto %0001ca18
000384ea: goto %0002a360

0001ca18:
0001ca29: R19 := mem[R31 + 0x10, el]:u64
0001ca2d: R20 := mem[R31 + 0x18, el]:u64
0001ca33: R1 := 0x12000
0001ca3d: R29 := mem[R31, el]:u64
0001ca41: R30 := mem[R31 + 8, el]:u64
0001ca44: R31 := R31 + 0x30
0001ca4b: R1 := R1 + 0x5C0
0001ca52: R0 := 1
0001ca56: call @__printf_chk with noreturn

0002a360:
0002a366: R2 := R19
0002a36c: R1 := 0x12000
0002a373: R0 := 1
0002a37a: R1 := R1 + 0x5E0
0002a37f: R30 := 0xB3E8
0002a381: call @__printf_chk with return %0002a383

0002a383:
0002a388: R2 := R19 + 0x32
0002a38e: R1 := 0x12000
0002a395: R0 := 1
0002a39c: R1 := R1 + 0x5F0
0002a3a1: R30 := 0xB3FC
0002a3a3: call @__printf_chk with return %0002a3a5

0002a3a5:
0002a3aa: R2 := R19 + 0x64
0002a3b0: R1 := 0x12000
0002a3b7: R0 := 1
0002a3be: R1 := R1 + 0x600
0002a3c3: R30 := 0xB410
0002a3c5: call @__printf_chk with return %0002a3c7

0002a3c7:
0002a3ce: R2 := pad:64[mem[R19 + 0x12C, el]:u32]
0002a3d4: R1 := 0x12000
0002a3db: R0 := 1
0002a3e2: R1 := R1 + 0x610
0002a3e7: R30 := 0xB424
0002a3e9: call @__printf_chk with return %0002a3eb

0002a3eb:
0002a3f2: R2 := pad:64[mem[R19 + 0x130, el]:u32]
0002a3f8: R1 := 0x12000
0002a3ff: R0 := 1
0002a406: R1 := R1 + 0x620
0002a40b: R30 := 0xB438
0002a40d: call @__printf_chk with return %0002a40f

0002a40f:
0002a416: R2 := pad:64[mem[R19 + 0x134, el]:u32]
0002a41c: R1 := 0x12000
0002a423: R0 := 1
0002a42a: R1 := R1 + 0x630
0002a42f: R30 := 0xB44C
0002a431: call @__printf_chk with return %0002a433

0002a433:
0002a43a: R2 := pad:64[mem[R19 + 0x138, el]:u32]
0002a440: R1 := 0x12000
0002a447: R0 := 1
0002a44e: R1 := R1 + 0x640
0002a453: R30 := 0xB460
0002a455: call @__printf_chk with return %0002a457

0002a457:
0002a45c: R0 := R19 + 0xFA
0002a463: R2 := 8
0002a469: R1 := 0x10
0002a46e: R30 := 0xB470
0002a470: call @printmem with return %0002a472

0002a472:
0002a476: R1 := 0x12000
0002a47e: R2 := R0
0002a485: R1 := R1 + 0x650
0002a48d: R20 := R0
0002a494: R0 := 1
0002a499: R30 := 0xB488
0002a49b: call @__printf_chk with return %0002a49d

0002a49d:
0002a4a3: R0 := R20
0002a4a8: R30 := 0xB490
0002a4aa: call @free with return %0002a4ac

0002a4ac:
0002a4b1: R0 := R19 + 0xC8
0002a4b8: R2 := 8
0002a4be: R1 := 0x10
0002a4c3: R30 := 0xB4A0
0002a4c5: call @printmem with return %0002a4c7

0002a4c7:
0002a4cb: R1 := 0x12000
0002a4d3: R2 := R0
0002a4da: R1 := R1 + 0x660
0002a4e2: R20 := R0
0002a4e9: R0 := 1
0002a4ee: R30 := 0xB4B8
0002a4f0: call @__printf_chk with return %0002a4f2

0002a4f2:
0002a4f8: R0 := R20
0002a4fd: R30 := 0xB4C0
0002a4ff: call @free with return %0002a501

0002a501:
0002a506: R0 := R19 + 0x96
0002a50d: R2 := 8
0002a513: R1 := 0x10
0002a518: R30 := 0xB4D0
0002a51a: call @printmem with return %0002a51c

0002a51c:
0002a520: R1 := 0x12000
0002a528: R19 := R0
0002a530: R2 := R0
0002a537: R1 := R1 + 0x670
0002a53f: mem := mem with [R31 + 0x28, el]:u64 <- R0
0002a546: R0 := 1
0002a54b: R30 := 0xB4EC
0002a54d: call @__printf_chk with return %0002a54f

0002a54f:
0002a555: R0 := R19
0002a55e: R19 := mem[R31 + 0x10, el]:u64
0002a562: R20 := mem[R31 + 0x18, el]:u64
0002a56c: R29 := mem[R31, el]:u64
0002a570: R30 := mem[R31 + 8, el]:u64
0002a573: R31 := R31 + 0x30
0002a577: call @free with noreturn

000384eb: sub dup2(dup2_fd, dup2_fd2, dup2_result)
00038abe: dup2_fd :: in u32 = low:32[R0]
00038abf: dup2_fd2 :: in u32 = low:32[R1]
00038ac0: dup2_result :: out u32 = low:32[R0]

0002c14c:
000307db: R16 := 0x27000
000307e3: R17 := mem[R16 + 0xEE0, el]:u64
000307ea: R16 := R16 + 0xEE0
000307ef: call R17 with noreturn

000384ec: sub dup_auth(dup_auth_result)
00038ac1: dup_auth_result :: out u32 = low:32[R0]

00025fde:
00025fe9: mem := mem with [R31 - 0x40, el]:u64 <- R29
00025fed: mem := mem with [R31 - 0x38, el]:u64 <- R30
00025ff0: R31 := R31 - 0x40
00025ff7: R29 := R31
00026000: mem := mem with [R31, el]:u64 <- R31 + 0x20
00026004: mem := mem with [R31, el]:u64 <- R31 + 0x28
0002600c: R20 := R0
00026015: mem := mem with [R31, el]:u64 <- R31 + 0x60
00026019: mem := mem with [R31, el]:u64 <- R31 + 0x68
00026022: R24 := 31:0[R1]
00026027: R30 := 0xB26C
00026029: call @new_auth with return %0002602b

0002602b:
00026031: R19 := R0
0002603d: #14259 := R0 = 0
00026037: when #14259 goto %00026035
000384ef: goto %00026160

00026160:
00026165: R3 := R20 + 0x200
0002616c: R4 := R0 + 0x200
00026175: mem := mem with [R31, el]:u64 <- R31 + 0x40
00026179: mem := mem with [R31, el]:u64 <- R31 + 0x48
0002617f: R2 := 0x32
00026187: R1 := R20 + R2
00026191: R0 := R0 + R2
00026198: R22 := R19 + 0xFA
0002619f: R23 := R19 + 0xC8
000261a6: R21 := R19 + 0x96
000261b1: R4 := pad:64[mem[R20 + 0x134, el]:u32]
000261ba: R3 := pad:64[mem[R20 + 0x138, el]:u32]
000261c2: mem := mem with [R19 + 0x134, el]:u32 <- 31:0[R4]
000261ca: mem := mem with [R19 + 0x138, el]:u32 <- 31:0[R3]
000261cf: R30 := 0xB2B4
000261d1: call @strlcpy with return %000261d3

000261d3:
000261d8: R1 := R20 + 0x64
000261df: R0 := R19 + 0x64
000261e5: R2 := 0x32
000261ea: R30 := 0xB2C4
000261ec: call @strlcpy with return %000261ee

000261ee:
000261f7: #14294 := 31:0[R24] = 0
000261f1: when #14294 goto %00026077
000384ee: goto %000261fa

00026077:
0002607e: mem := mem with [R19, el]:u64 <- R19
00026082: mem := mem with [R19, el]:u64 <- R19 + 8
0002608a: R0 := R19
00026093: mem := mem with [R19, el]:u64 <- R19 + 0x20
00026097: mem := mem with [R19, el]:u64 <- R19 + 0x28
000260a0: mem := mem with [R19, el]:u64 <- R19 + 0x40
000260a4: mem := mem with [R19, el]:u64 <- R19 + 0x48
000260af: mem := mem with [R22, el]:u64 <- R22
000260b3: mem := mem with [R22, el]:u64 <- R22 + 8
000260bc: mem := mem with [R22, el]:u64 <- R22 + 0x20
000260c0: mem := mem with [R22, el]:u64 <- R22 + 0x28
000260c9: mem := mem with [R22, el]:u64 <- R22 + 0x40
000260cd: mem := mem with [R22, el]:u64 <- R22 + 0x48
000260d8: mem := mem with [R19, el]:u64 <- R19 + 0x190
000260dc: mem := mem with [R19, el]:u64 <- R19 + 0x198
000260e5: mem := mem with [R23, el]:u64 <- R23 + 0x20
000260e9: mem := mem with [R23, el]:u64 <- R23 + 0x28
000260f2: mem := mem with [R23, el]:u64 <- R23 + 0x40
000260f6: mem := mem with [R23, el]:u64 <- R23 + 0x48
00026101: mem := mem with [R21, el]:u64 <- R21
00026105: mem := mem with [R21, el]:u64 <- R21 + 8
0002610e: mem := mem with [R21, el]:u64 <- R21 + 0x20
00026112: mem := mem with [R21, el]:u64 <- R21 + 0x28
0002611b: mem := mem with [R21, el]:u64 <- R21 + 0x40
0002611f: mem := mem with [R21, el]:u64 <- R21 + 0x48
0002612a: R19 := mem[R31 + 0x10, el]:u64
0002612e: R20 := mem[R31 + 0x18, el]:u64
00026137: R21 := mem[R31 + 0x20, el]:u64
0002613b: R22 := mem[R31 + 0x28, el]:u64
00026144: R23 := mem[R31 + 0x30, el]:u64
00026148: R24 := mem[R31 + 0x38, el]:u64
00026152: R29 := mem[R31, el]:u64
00026156: R30 := mem[R31 + 8, el]:u64
00026159: R31 := R31 + 0x40
0002615e: call R30 with noreturn

000261fa:
00026200: R1 := R20
00026206: R2 := 0x32
0002620e: R0 := R19
00026213: R30 := 0xB2D8
00026215: call @strlcpy with return %00026217

00026217:
0002621c: R1 := R20 + 0xFA
00026223: R0 := R20 + 0x96
0002622c: R2 := mem[R1, el]:u64
00026230: R3 := mem[R1 + 8, el]:u64
00026239: mem := mem with [R22, el]:u64 <- R22
0002623d: mem := mem with [R22, el]:u64 <- R22 + 8
00026246: R2 := mem[R1 + 0x10, el]:u64
0002624a: R3 := mem[R1 + 0x18, el]:u64
00026253: mem := mem with [R22, el]:u64 <- R22 + 0x20
00026257: mem := mem with [R22, el]:u64 <- R22 + 0x28
00026260: R2 := mem[R1 + 0x20, el]:u64
00026264: R3 := mem[R1 + 0x28, el]:u64
0002626d: mem := mem with [R22, el]:u64 <- R22 + 0x40
00026271: mem := mem with [R22, el]:u64 <- R22 + 0x48
0002627e: R2 := mem[R20 + 0xC8, el]:u64
00026282: R3 := mem[R20 + 0xD0, el]:u64
0002628b: mem := mem with [R19, el]:u64 <- R19 + 0x190
0002628f: mem := mem with [R19, el]:u64 <- R19 + 0x198
00026298: R2 := mem[R20 + 0xD8, el]:u64
0002629c: R3 := mem[R20 + 0xE0, el]:u64
000262a5: mem := mem with [R23, el]:u64 <- R23 + 0x20
000262a9: mem := mem with [R23, el]:u64 <- R23 + 0x28
000262b2: R2 := mem[R20 + 0xE8, el]:u64
000262b6: R3 := mem[R20 + 0xF0, el]:u64
000262bf: mem := mem with [R23, el]:u64 <- R23 + 0x40
000262c3: mem := mem with [R23, el]:u64 <- R23 + 0x48
000262d0: R2 := mem[R0, el]:u64
000262d4: R3 := mem[R0 + 8, el]:u64
000262dd: mem := mem with [R21, el]:u64 <- R21
000262e1: mem := mem with [R21, el]:u64 <- R21 + 8
000262ea: R2 := mem[R0 + 0x10, el]:u64
000262ee: R3 := mem[R0 + 0x18, el]:u64
000262f7: mem := mem with [R21, el]:u64 <- R21 + 0x20
000262fb: mem := mem with [R21, el]:u64 <- R21 + 0x28
00026304: R2 := mem[R0 + 0x20, el]:u64
00026308: R3 := mem[R0 + 0x28, el]:u64
00026311: mem := mem with [R21, el]:u64 <- R21 + 0x40
00026315: mem := mem with [R21, el]:u64 <- R21 + 0x48
00026322: R21 := mem[R31 + 0x20, el]:u64
00026326: R22 := mem[R31 + 0x28, el]:u64
000384ed: goto %00026035

00026035:
00026045: R0 := R19
0002604e: R19 := mem[R31 + 0x10, el]:u64
00026052: R20 := mem[R31 + 0x18, el]:u64
0002605b: R23 := mem[R31 + 0x30, el]:u64
0002605f: R24 := mem[R31 + 0x38, el]:u64
00026069: R29 := mem[R31, el]:u64
0002606d: R30 := mem[R31 + 8, el]:u64
00026070: R31 := R31 + 0x40
00026075: call R30 with noreturn

000384f0: sub dup_rr_data(dup_rr_data_result)
00038ac2: dup_rr_data_result :: out u32 = low:32[R0]

0001389f:
000138a9: #4783 := R0 = 0
000138a3: when #4783 goto %000138a1
000384f1: goto %00013b71

000138a1:
000138ae: call R30 with noreturn

00013b71:
00013b79: mem := mem with [R31 - 0x20, el]:u64 <- R29
00013b7d: mem := mem with [R31 - 0x18, el]:u64 <- R30
00013b80: R31 := R31 - 0x20
00013b87: R29 := R31
00013b8f: mem := mem with [R31 + 0x10, el]:u64 <- R19
00013b97: R19 := R0
00013b9d: R0 := 0x68
00013ba2: R30 := 0x55DC
00013ba4: call @malloc with return %00013ba6

00013ba6:
00013baa: R2 := 0x11000
00013bb2: R1 := R19
00013bbe: R19 := mem[R31 + 0x10, el]:u64
00013bc6: mem := mem with [R0, el]:u32 <- 0
00013bce: mem := mem with [R0 + 8, el]:u64 <- 0
00013bd6: mem := mem with [R0 + 0x20, el]:u32 <- 0
00013bea: R29 := mem[R31, el]:u64
00013bee: R30 := mem[R31 + 8, el]:u64
00013bf1: R31 := R31 + 0x20
00013bf5: call @copy_rr_data with noreturn

000384f2: sub exit(exit_code)
00038ac3: exit_code :: in u32 = low:32[R0]

00020bcb:
00030056: R16 := 0x27000
0003005e: R17 := mem[R16 + 0xC78, el]:u64
00030065: R16 := R16 + 0xC78
0003006a: call R17 with noreturn

000384f3: sub fclose(fclose_fp, fclose_result)
00038ac4: fclose_fp :: in out u64 = R0
00038ac5: fclose_result :: out u32 = low:32[R0]

00016a12:
000301cd: R16 := 0x27000
000301d5: R17 := mem[R16 + 0xCF0, el]:u64
000301dc: R16 := R16 + 0xCF0
000301e1: call R17 with noreturn

000384f4: sub fcntl(fcntl_result)
00038ac6: fcntl_result :: out u32 = low:32[R0]

00016609:
000306af: R16 := 0x27000
000306b7: R17 := mem[R16 + 0xE80, el]:u64
000306be: R16 := R16 + 0xE80
000306c3: call R17 with noreturn

000384f5: sub feof(feof_stream, feof_result)
00038ac7: feof_stream :: in out u64 = R0
00038ac8: feof_result :: out u32 = low:32[R0]

000169cc:
00030551: R16 := 0x27000
00030559: R17 := mem[R16 + 0xE10, el]:u64
00030560: R16 := R16 + 0xE10
00030565: call R17 with noreturn

000384f6: sub ferror(ferror_stream, ferror_result)
00038ac9: ferror_stream :: in out u64 = R0
00038aca: ferror_result :: out u32 = low:32[R0]

00011cff:
000308d5: R16 := 0x27000
000308dd: R17 := mem[R16 + 0xF30, el]:u64
000308e4: R16 := R16 + 0xF30
000308e9: call R17 with noreturn

000384f7: sub fgets(fgets_s, fgets_size, fgets_stream, fgets_result)
00038acb: fgets_s :: in out u64 = R0
00038acc: fgets_size :: in u32 = low:32[R1]
00038acd: fgets_stream :: in out u64 = R2
00038ace: fgets_result :: out u64 = R0

00016a58:
000308bc: R16 := 0x27000
000308c4: R17 := mem[R16 + 0xF28, el]:u64
000308cb: R16 := R16 + 0xF28
000308d0: call R17 with noreturn

000384f8: sub fnmatch(fnmatch_result)
00038acf: fnmatch_result :: out u32 = low:32[R0]

000213c8:
00030696: R16 := 0x27000
0003069e: R17 := mem[R16 + 0xE78, el]:u64
000306a5: R16 := R16 + 0xE78
000306aa: call R17 with noreturn

000384f9: sub fopen(fopen_path, fopen_mode, fopen_result)
00038ad0: fopen_path :: in u64 = R0
00038ad1: fopen_mode :: in u64 = R1
00038ad2: fopen_result :: out u64 = R0

00012e24:
00030218: R16 := 0x27000
00030220: R17 := mem[R16 + 0xD08, el]:u64
00030227: R16 := R16 + 0xD08
0003022c: call R17 with noreturn

000384fa: sub fork(fork_result)
00038ad3: fork_result :: out u32 = low:32[R0]

0002f263:
00030150: R16 := 0x27000
00030158: R17 := mem[R16 + 0xCC8, el]:u64
0003015f: R16 := R16 + 0xCC8
00030164: call R17 with noreturn

000384fb: sub forward_request(forward_request_result)
00038ad4: forward_request_result :: out u32 = low:32[R0]

0001f674:
0001f67c: mem := mem with [R31 - 0xE0, el]:u64 <- R29
0001f680: mem := mem with [R31 - 0xD8, el]:u64 <- R30
0001f683: R31 := R31 - 0xE0
0001f689: R2 := 0x27000
0001f690: R29 := R31
0001f698: R2 := mem[R2 + 0xFB8, el]:u64
0001f6a1: mem := mem with [R31, el]:u64 <- R31 + 0x20
0001f6a5: mem := mem with [R31, el]:u64 <- R31 + 0x28
0001f6ad: R20 := R1
0001f6b5: R1 := mem[R0 + 0x10, el]:u64
0001f6bd: mem := mem with [R31 + 0x90, el]:u64 <- R1
0001f6c5: R1 := mem[R2, el]:u64
0001f6cd: mem := mem with [R31 + 0xD8, el]:u64 <- R1
0001f6d3: R1 := 0
0001f6da: R2 := R31 + 0xBC
0001f6e0: R1 := 0x14000
0001f6e7: R1 := R1 + 0xD00
0001f6ef: mem := mem with [R31 + 0xA0, el]:u64 <- R1
0001f6f6: R1 := R31 + 0xC0
0001f6fe: mem := mem with [R31 + 0x80, el]:u64 <- R1
0001f705: R1 := R31 + 0xC8
0001f70e: R0 := pad:64[mem[R0, el]:u32]
0001f717: mem := mem with [R31, el]:u64 <- R31 + 0x60
0001f71b: mem := mem with [R31, el]:u64 <- R31 + 0x68
0001f722: R23 := R31 + 0xB8
0001f72b: mem := mem with [R31, el]:u64 <- R31 + 0x80
0001f72f: mem := mem with [R31, el]:u64 <- R31 + 0x88
0001f735: R25 := 0
0001f73e: mem := mem with [R31, el]:u64 <- R31 + 0xA0
0001f742: mem := mem with [R31, el]:u64 <- R31 + 0xA8
0001f749: R27 := 0
0001f752: R26 := 31:0[R27]
0001f75a: mem := mem with [R31 + 0x70, el]:u64 <- R1
0001f762: R1 := R2
0001f76b: mem := mem with [R31, el]:u64 <- R31 + 0x40
0001f76f: mem := mem with [R31, el]:u64 <- R31 + 0x48
0001f775: R21 := 0x27000
0001f77d: mem := mem with [R31 + 0x78, el]:u64 <- R2
0001f785: mem := mem with [R31 + 0xBC, el]:u32 <- 31:0[R0]
0001f78d: mem := mem with [R31 + 0xC0, el]:u64 <- 0
0003854d: goto %0001f78f

0001f78f:
0001f795: R0 := mem[R21 + 0xF78, el]:u64
0001f79d: mem := mem with [R31 + 0xB8, el]:u32 <- 0
0001f7a6: mem := mem with [R31, el]:u64 <- R31 + 0x190
0001f7aa: mem := mem with [R31, el]:u64 <- R31 + 0x198
0001f7b3: R0 := pad:64[mem[R0, el]:u32]
0001f7bf: #11504 := 31:0[R0] = 0
0001f7b9: when #11504 goto %0001f7b7
0003854c: goto %000285ca

000285ca:
000285cf: #15117 := extend:64[31:0[R26]]
000285d3: NF := 63:63[#15117]
000285d6: VF := 31:31[R26] & ~63:63[#15117]
000285d9: ZF := #15117 = 0
000285dc: CF := 31:31[R26] | 31:31[R26] & ~63:63[#15117] | ~63:63[#15117]
000285e5: R2 := 0x12000
000285ed: R0 := mem[R31 + 0xA0, el]:u64
000285f4: R2 := R2 + 0xCD0
000285fa: R1 := 0x12000
00028601: R1 := R1 + 0xCE0
00028617: #15119 := ~ZF <> 0
00028618: goto %0002860f

0002860f:
00028611: when #15119 goto %00028609
00028612: goto %0002860c

0002860c:
0002860d: R2 := R0
00028614: goto %00028610

00028609:
0002860a: R2 := R2
00028613: goto %00028610

00028610:
00028620: R0 := 1
00028625: R30 := 0xD5F4
00028627: call @__printf_chk with return %00028629

00028629:
0002862d: R0 := 0x27000
00028635: R19 := mem[R0 + 0xF60, el]:u64
0002863d: R0 := R19
00028642: R30 := 0xD604
00028644: call @pthread_mutex_lock with return %00028646

00028646:
0002864a: R0 := 0x27000
00028652: R0 := mem[R0 + 0xFC0, el]:u64
0002865a: R0 := mem[R0, el]:u64
0002865f: R30 := 0xD614
00028661: call @plist_dump with return %00028663

00028663:
00028669: R0 := R19
0002866e: R30 := 0xD61C
00028670: call @pthread_mutex_unlock with return %0001f7b7

0001f7b7:
0001f7c5: R0 := 0x27000
0001f7cd: R19 := mem[R0 + 0xF60, el]:u64
0001f7d5: R0 := R19
0001f7da: R30 := 0xD62C
0001f7dc: call @pthread_mutex_lock with return %0001f7de

0001f7de:
0001f7e2: R0 := 0x27000
0001f7ea: R1 := mem[R31 + 0x80, el]:u64
0001f7f2: R0 := mem[R0 + 0xFC0, el]:u64
0001f7f7: R30 := 0xD63C
0001f7f9: call @plist_pop with return %0001f7fb

0001f7fb:
0001f802: R22 := 31:0[R0]
0001f80a: R0 := R19
0001f812: mem := mem with [R31 + 0x6C, el]:u32 <- 31:0[R22]
0001f817: R30 := 0xD64C
0001f819: call @pthread_mutex_unlock with return %0001f81b

0001f81b:
0001f825: #11515 := 31:0[R22] = 0
0001f81f: when #11515 goto %0001f81d
0003854b: goto %0002858d

0001f81d:
0001f82a: R30 := 0xDC1C
0001f82c: call @new_auth with return %0001f82e

0001f82e:
0001f834: mem := mem with [R31 + 0xC0, el]:u64 <- R0
0001f839: R30 := 0xDC24
0001f83b: call @proxy_connect with return %0001f83d

0001f83d:
0001f843: mem := mem with [R31 + 0xB8, el]:u32 <- 31:0[R0]
0001f84a: #11518 := extend:64[31:0[R0]]
0001f84e: NF := 63:63[#11518]
0001f851: VF := 31:31[R0] & ~63:63[#11518]
0001f854: ZF := #11518 = 0
0001f857: CF := 31:31[R0] | 31:31[R0] & ~63:63[#11518] | ~63:63[#11518]
0001f868: #11520 := (NF = VF & ~ZF) <> 0
0001f862: when #11520 goto %0001f860
0003854a: goto %00028514

00028514:
0002851a: R0 := mem[R20 + 0x48, el]:u64
00028520: R1 := 0x12000
00028527: R1 := R1 + 0xD20
0002852e: R22 := 0
00028535: R28 := 0
0002853c: R23 := 0
00028541: R30 := 0xDC4C
00028543: call @gen_502_page with return %00028545

00028545:
0002854b: R19 := R0
00028550: R30 := 0xDC54
00028552: call @strlen with return %00028554

00028554:
0002855a: R2 := R0
00028563: R0 := pad:64[mem[R31 + 0xBC, el]:u32]
0002856b: R1 := R19
00028571: R24 := 0xFFFFFFFFFFFFFFFF
00028576: R30 := 0xDC68
00028578: call @write with return %0002857a

0002857a:
00028580: R0 := R19
00028585: R30 := 0xDC70
00028587: call @free with return %00028589

00028589:
0002858b: goto %0001faf6

0002858d:
00028593: R0 := mem[R21 + 0xF78, el]:u64
0002859c: R0 := pad:64[mem[R0, el]:u32]
000285a7: #15114 := ~31:0[R0] = 0
000285a1: when #15114 goto %00027cd0
00038549: goto %000285aa

00027cd0:
00027cd7: R2 := pad:64[mem[R31 + 0x6C, el]:u32]
00027cdd: R1 := 0x12000
00027ce4: R0 := 1
00027ceb: R1 := R1 + 0xCF8
00027cf0: R30 := 0xDB24
00027cf2: call @__printf_chk with return %00027cf4

00027cf4:
00027cfb: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
00027d03: mem := mem with [R31 + 0xB8, el]:u32 <- 31:0[R0]
00027d0a: R0 := 1
00027d12: mem := mem with [R31 + 0x6C, el]:u32 <- 31:0[R0]
00027d16: goto %0001f860

000285aa:
000285b1: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
000285b9: mem := mem with [R31 + 0xB8, el]:u32 <- 31:0[R0]
000285c0: R0 := 1
000285c8: mem := mem with [R31 + 0x6C, el]:u32 <- 31:0[R0]
00038548: goto %0001f860

0001f860:
0001f874: #11521 := R25 = 0
0001f86e: when #11521 goto %0001f86c
00038547: goto %0001f880

0001f86c:
0001f87c: R25 := mem[R20 + 0x40, el]:u64
0001f888: #11522 := R25 = 0
0001f882: when #11522 goto %0001f880
00038546: goto %000284cc

000284cc:
000284d2: R0 := R25
000284d7: R30 := 0xDC84
000284d9: call @strdup with return %000284db

000284db:
000284e1: R25 := R0
000284e7: R0 := 0x12000
000284ee: R0 := R0 + 0xD40
000284f6: mem := mem with [R31 + 0x98, el]:u64 <- R0
000284ff: R22 := pad:64[mem[R31 + 0x6C, el]:u32]
00028506: R27 := 0
00028511: #15101 := ~R20 = 0
0002850b: when #15101 goto %000284c0
00038545: goto %0001f8b1

0001f880:
0001f88e: R0 := 0x12000
0001f895: R0 := R0 + 0xD40
0001f89d: mem := mem with [R31 + 0x98, el]:u64 <- R0
0001f8a4: R27 := 0
0001f8ad: R22 := pad:64[mem[R31 + 0x6C, el]:u32]
0001f8b9: #11524 := R20 = 0
0001f8b3: when #11524 goto %0001f8b1
00038544: goto %000284c0

000284c0:
000284c9: #15093 := 31:0[R26] = 0
000284c3: when #15093 goto %000284a5
00038543: goto %0001f8cb

000284a5:
000284ab: R0 := R20
000284b0: R30 := 0xDCB4
000284b2: call @dup_rr_data with return %000284b4

000284b4:
000284ba: R20 := R0
000284be: goto %0001f8cb

0001f8cb:
0001f8d1: R30 := 0xD690
0001f8d3: call @new_rr_data with return %0001f8d5

0001f8d5:
0001f8db: R24 := R20
0001f8e3: R19 := R0
0001f8e9: R28 := 0x12000
0001f8f0: R26 := 0
0001f8f7: R0 := R28 + 0xD80
0001f8ff: mem := mem with [R31 + 0x88, el]:u64 <- R0
00038542: goto %0001f901

0001f901:
0001f907: R0 := mem[R21 + 0xF78, el]:u64
0001f910: R1 := pad:64[mem[R24 + 0x1C, el]:u32]
0001f919: R28 := pad:64[mem[R0, el]:u32]
0001f925: #11535 := 31:0[R1] = 0
0001f91f: when #11535 goto %0001f91d
00038541: goto %00028481

00028481:
00028487: R1 := mem[R31 + 0x70, el]:u64
0002848e: R0 := extend:64[31:0[R26]]
00028497: R7 := mem[R1 + (R0 << 3), el]:u64
000284a2: #15086 := ~31:0[R28] = 0
0002849c: when #15086 goto %000276be
00038540: goto %00027728

000276be:
000276c7: R6 := 31:0[R27]
000276cf: R1 := mem[R31 + 0x98, el]:u64
000276d8: R5 := 31:0[R22]
000276e0: R2 := extend:64[31:0[R26]] + 1
000276e7: R0 := 1
000276ef: mem := mem with [R31 + 0xA8, el]:u64 <- R7
000276f4: R30 := 0xD914
000276f6: call @__printf_chk with return %000276f8

000276f8:
000276fe: R7 := mem[R31 + 0xA8, el]:u64
00027705: R0 := 1
0002770d: R1 := mem[R31 + 0x88, el]:u64
00027716: R2 := pad:64[mem[R7, el]:u32]
0002771b: R30 := 0xD928
0002771d: call @__printf_chk with return %0002771f

0002771f:
00027725: R7 := mem[R31 + 0xA8, el]:u64
0002772a: goto %00027728

00027728:
00027732: R0 := pad:64[mem[R7, el]:u32]
0002773a: R1 := R24
0002773f: R30 := 0xD6D4
00027741: call @headers_recv with return %00027743

00027743:
0002774d: #14758 := 31:0[R0] = 0
00027747: when #14758 goto %00027745
0003853f: goto %00028334

00027745:
00027756: R28 := 31:0[R0]
0002775b: goto %00027759

00028334:
0002833a: R0 := mem[R21 + 0xF78, el]:u64
00028343: R28 := pad:64[mem[R0, el]:u32]
0003853e: goto %0001f91d

0001f91d:
0001f92c: #11536 := R25
0001f930: NF := 63:63[#11536]
0001f933: VF := 63:63[R25] & ~63:63[#11536]
0001f936: ZF := #11536 = 0
0001f939: CF := 63:63[R25] | ~63:63[#11536] | 63:63[R25] & ~63:63[#11536]
0001f943: R0 := 31:0[R26] ^ 1
0001f95b: #11560 := ~ZF <> 0
0001f95c: goto %0001f953

0001f953:
0001f955: when #11560 goto %0001f94c
0001f956: goto %0001f950

0001f950:
0001f951: R0 := 0
0001f958: goto %0001f954

0001f94c:
0001f94d: R0 := 31:0[R0]
0001f957: goto %0001f954

0001f954:
0001f969: #11561 := 31:0[R0] = 0
0001f963: when #11561 goto %0001f961
0003853d: goto %00028452

00028452:
00028458: R1 := mem[R20 + 0x40, el]:u64
00028463: #15080 := R1 = 0
0002845d: when #15080 goto %0001f961
0003853c: goto %00028466

00028466:
0002846c: R0 := R25
00028471: R30 := 0xD700
00028473: call @strcasecmp with return %00028475

00028475:
0002847e: #15084 := ~31:0[R0] = 0
00028478: when #15084 goto %00028328
0003853b: goto %0001f961

00028328:
00028331: #15067 := ~31:0[R28] = 0
0002832b: when #15067 goto %00028233
0003853a: goto %00028257

00028233:
00028239: R2 := mem[R20 + 0x30, el]:u64
0002823f: R1 := 0x12000
00028246: R0 := 1
0002824d: R1 := R1 + 0xDA0
00028252: R30 := 0xDF00
00028254: call @__printf_chk with return %00028256

00028256:
00028259: goto %00028257

00028257:
00028260: R0 := R20
00028265: R30 := 0xDE48
00028267: call @dup_rr_data with return %00028269

00028269:
0002826f: R24 := R0
00028277: R0 := R20
0002827c: R30 := 0xDE54
0002827e: call @free_rr_data with return %00028280

00028280:
00028286: R23 := 31:0[R22] & 1
0002828f: R28 := 31:0[R22]
00028297: R0 := R19
0002829c: R30 := 0xDE64
0002829e: call @free_rr_data with return %000282a0

000282a0:
000282a3: goto %000282a1

0001f961:
0001f975: #11562 := ~31:0[R28] = 0
0001f96f: when #11562 goto %0001f96d
00038539: goto %00028446

0001f96d:
0001f97d: R0 := mem[R24 + 8, el]:u64
0001f982: R30 := 0xD760
0001f984: call @hlist_dump with return %0001f986

0001f986:
0001f990: #11563 := 31:0[R26] = 0
0001f98a: when #11563 goto %0001f988
00038538: goto %0002841a

00028446:
0002844f: #15079 := ~31:0[R26] = 0
00028449: when #15079 goto %0002841a
00038537: goto %0001f988

0002841a:
00028421: R0 := pad:64[mem[R19 + 0x10, el]:u32]
00028428: #15076 := 0xFFFFFFFFFFFFFE69 + extend:64[31:0[R0]]
0002842c: NF := 63:63[#15076]
0002842f: VF := 31:31[R0] & ~63:63[#15076]
00028432: ZF := #15076 = 0
00028435: CF := 31:31[R0] | 31:31[R0] & ~63:63[#15076] | ~63:63[#15076]
00028443: #15078 := ZF
0002843d: when #15078 goto %00028188
00038536: goto %00027d8c

0001f988:
0001f999: R0 := pad:64[mem[R20, el]:u32]
0001f9a5: #11564 := ~31:0[R0] = 0
0001f99f: when #11564 goto %0001f99d
00038535: goto %0001f9ff

0001f99d:
0001f9ad: R0 := mem[R31 + 0x90, el]:u64
0001f9b4: R0 := R0 >> 0x20
0001f9b9: R30 := 0xD93C
0001f9bb: call @inet_ntoa with return %0001f9bd

0001f9bd:
0001f9c4: R4 := mem[R20 + 0x28, el]:u64
0001f9c8: R5 := mem[R20 + 0x30, el]:u64
0001f9d0: R3 := R0
0001f9d6: R2 := 0x12000
0001f9dd: R0 := 7
0001f9e4: R2 := R2 + 0xDC0
0001f9eb: R1 := 1
0001f9f0: R30 := 0xD958
0001f9f2: call @__syslog_chk with return %0001f9f4

0001f9f4:
0001f9fb: R0 := pad:64[mem[R20, el]:u32]
0001fa07: #11570 := 31:0[R0] = 0
0001fa01: when #11570 goto %0001f9ff
00038534: goto %000283b4

000283b4:
000283ba: R0 := mem[R24 + 8, el]:u64
000283c0: R26 := 0x12000
000283c8: R2 := mem[R31 + 0xC0, el]:u64
000283cf: R1 := R26 + 0xB58
000283d4: R30 := 0xD974
000283d6: call @http_parse_basic with return %000283d8

000283d8:
000283dd: #15072 := extend:64[31:0[R0]]
000283e1: NF := 63:63[#15072]
000283e4: VF := 31:31[R0] & ~63:63[#15072]
000283e7: ZF := #15072 = 0
000283ea: CF := 31:31[R0] | 31:31[R0] & ~63:63[#15072] | ~63:63[#15072]
000283fa: #15074 := (NF <> VF | ZF) <> 0
000283f4: when #15074 goto %00027eb0
00038533: goto %000283fd

00027eb0:
00027eb4: R0 := 0x27000
00027ebc: R0 := mem[R0 + 0xF90, el]:u64
00027ec5: R0 := pad:64[mem[R0, el]:u32]
00027ed1: #14952 := 31:0[R0] = 0
00027ecb: when #14952 goto %00027ec9
00038532: goto %0002816b

0002816b:
00028171: R0 := mem[R21 + 0xF78, el]:u64
0002817a: R0 := pad:64[mem[R0, el]:u32]
00028185: #15005 := ~31:0[R0] = 0
0002817f: when #15005 goto %00027c2e
00038531: goto %00027c4a

00027c2e:
00027c32: R1 := 0x12000
00027c39: R0 := 1
00027c40: R1 := R1 + 0xE00
00027c45: R30 := 0xDF44
00027c47: call @__printf_chk with return %00027c49

00027c49:
00027c4c: goto %00027c4a

00027c4a:
00027c53: R0 := mem[R24 + 0x48, el]:u64
00027c5a: R28 := 0
00027c61: R23 := 0
00027c67: R24 := 0xFFFFFFFFFFFFFFFF
00027c6c: R30 := 0xDADC
00027c6e: call @gen_407_page with return %00027c70

00027c70:
00027c76: R26 := R0
00027c7b: R30 := 0xDAE4
00027c7d: call @strlen with return %00027c7f

00027c7f:
00027c85: R2 := R0
00027c8e: R0 := pad:64[mem[R31 + 0xBC, el]:u32]
00027c96: R1 := R26
00027c9b: R30 := 0xDAF4
00027c9d: call @write with return %00027c9f

00027c9f:
00027ca5: R0 := R26
00027caa: R30 := 0xDAFC
00027cac: call @free with return %00027cae

00027cae:
00027cb4: R0 := R20
00027cb9: R30 := 0xDB04
00027cbb: call @free_rr_data with return %00027cbd

00027cbd:
00027cc3: R0 := R19
00027cc8: R30 := 0xDB0C
00027cca: call @free_rr_data with return %00027ccc

00027ccc:
00027cce: goto %0001faf6

000283fd:
00028403: R0 := mem[R21 + 0xF78, el]:u64
0002840c: R0 := pad:64[mem[R0, el]:u32]
00028417: #15075 := ~31:0[R0] = 0
00028411: when #15075 goto %00028368
00038530: goto %00027ec9

00028368:
0002836e: R3 := mem[R31 + 0xC0, el]:u64
00028374: R1 := 0x12000
0002837b: R0 := 1
00028382: R1 := R1 + 0xDD0
00028389: R4 := R3 + 0x64
00028390: R2 := R3 + 0x32
00028395: R30 := 0xDDA0
00028397: call @__printf_chk with return %00028399

00028399:
0002839b: goto %00027ec9

00027ec9:
00027ed7: R1 := 0x27000
00027edf: R0 := mem[R20 + 8, el]:u64
00027ee7: R1 := mem[R1 + 0xF50, el]:u64
00027eef: R28 := mem[R1, el]:u64
00027efb: #14953 := R28 = 0
00027ef5: when #14953 goto %00027ef3
0003852f: goto %00028132

00028132:
0003852e: goto %00028134

00028134:
0002813b: R1 := mem[R28, el]:u64
0002813f: R2 := mem[R28 + 8, el]:u64
00028146: R3 := 0
0002814b: R30 := 0xD9AC
0002814d: call @hlist_mod with return %0002814f

0002814f:
00028155: R28 := mem[R28 + 0x18, el]:u64
0002815d: mem := mem with [R20 + 8, el]:u64 <- R0
00028168: #15004 := ~R28 = 0
00028162: when #15004 goto %00028134
0003852d: goto %00027ef3

00027ef3:
00027f01: R2 := 0x12000
00027f07: R1 := 0x12000
00027f0e: R2 := R2 + 0xE30
00027f15: R1 := R1 + 0xE40
00027f1c: R3 := 1
00027f21: R30 := 0xD9D0
00027f23: call @hlist_mod with return %00027f25

00027f25:
00027f2b: mem := mem with [R20 + 8, el]:u64 <- R0
00027f32: R26 := R26 + 0xB58
00027f3a: R0 := mem[R24 + 8, el]:u64
00027f3f: goto %00027f3d

00027f3d:
00027f46: R1 := R26
00027f4b: R30 := 0xD9F8
00027f4d: call @hlist_get with return %00027f4f

00027f4f:
00027f59: #14958 := ~R0 = 0
00027f53: when #14958 goto %00027f51
0003852c: goto %00027f7a

00027f7a:
00027f81: R0 := pad:64[mem[R20, el]:u32]
00027f8c: #14963 := 31:0[R0] = 0
00027f86: when #14963 goto %0001f9ff
0003852b: goto %00027f8f

00027f8f:
00027f96: R0 := 31:0[R22] | 31:0[R27]
00027fa1: #14967 := ~31:0[R0] = 0
00027f9b: when #14967 goto %0001f9ff
0003852a: goto %00027fa4

00027fa4:
00027faa: R3 := mem[R31 + 0xC0, el]:u64
00027fb2: R2 := R19
00027fba: R1 := R20
00027fc2: R0 := R23
00027fc7: R30 := 0xDA20
00027fc9: call @proxy_authenticate with return %00027fcb

00027fcb:
00027fd5: #14977 := 31:0[R0] = 0
00027fcf: when #14977 goto %00027fcd
00038529: goto %0002808b

00027fcd:
00027fde: R28 := 31:0[R0]
00027fe6: R0 := mem[R21 + 0xF78, el]:u64
00027fef: R0 := pad:64[mem[R0, el]:u32]
00027ffb: #14981 := ~31:0[R0] = 0
00027ff5: when #14981 goto %00027ff3
00038528: goto %00028019

00027ff3:
00028001: R1 := 0x12000
00028008: R0 := 1
0002800f: R1 := R1 + 0xE58
00028014: R30 := 0xDCCC
00028016: call @__printf_chk with return %00028018

00028018:
0002801b: goto %00028019

00028019:
00028022: R0 := R20
00028027: R30 := 0xDB68
00028029: call @free_rr_data with return %0002802b

0002802b:
00028031: R0 := R19
00028038: R22 := 0
0002803f: R23 := 0
00028045: R24 := 0xFFFFFFFFFFFFFFFF
0002804a: R30 := 0xDB7C
0002804c: call @free_rr_data with return %0002804e

0002804e:
00028050: goto %0001faf6

0002808b:
00028092: R0 := pad:64[mem[R19 + 0x10, el]:u32]
00028099: #14990 := 0xFFFFFFFFFFFFFE69 + extend:64[31:0[R0]]
0002809d: NF := 63:63[#14990]
000280a0: VF := 31:31[R0] & ~63:63[#14990]
000280a3: ZF := #14990 = 0
000280a6: CF := 31:31[R0] | 31:31[R0] & ~63:63[#14990] | ~63:63[#14990]
000280b5: #14992 := ZF
000280af: when #14992 goto %000280ad
00038527: goto %00028115

000280ad:
000280bd: R0 := R19
000280c2: R30 := 0xDBD0
000280c4: call @reset_rr_data with return %000280c6

000280c6:
000280cc: R1 := mem[R21 + 0xF78, el]:u64
000280d3: R22 := 0
000280dc: R0 := pad:64[mem[R23, el]:u32]
000280e3: R27 := 0
000280ec: R1 := pad:64[mem[R1, el]:u32]
000280f8: #14996 := 31:0[R1] = 0
000280f2: when #14996 goto %000280f0
00038526: goto %0001fa25

00028115:
0002811b: R1 := mem[R21 + 0xF78, el]:u64
00028124: R1 := pad:64[mem[R1, el]:u32]
0002812f: #15001 := ~31:0[R1] = 0
00028129: when #15001 goto %00027d18
00038525: goto %00027d3d

00027d18:
00027d1c: R1 := 0x12000
00027d23: R0 := 1
00027d2a: R1 := R1 + 0xE78
00027d2f: R30 := 0xDB48
00027d31: call @__printf_chk with return %00027d33

00027d33:
00027d3a: R0 := pad:64[mem[R19 + 0x10, el]:u32]
00027d3f: goto %00027d3d

00027d3d:
00027d45: #14901 := 0xFFFFFFFFFFFFFE71 + extend:64[31:0[R0]]
00027d49: NF := 63:63[#14901]
00027d4c: VF := 31:31[R0] & ~63:63[#14901]
00027d4f: ZF := #14901 = 0
00027d52: CF := 31:31[R0] | 31:31[R0] & ~63:63[#14901] | ~63:63[#14901]
00027d6f: #14903 := (NF = VF & ~ZF) <> 0
00027d70: goto %00027d67

00027d67:
00027d69: when #14903 goto %00027d60
00027d6a: goto %00027d64

00027d64:
00027d65: R27 := 1
00027d6c: goto %00027d68

00027d60:
00027d61: R27 := 0
00027d6b: goto %00027d68

00027d68:
00027d78: #14904 := 0xFFFFFFFFFFFFFE69 + extend:64[31:0[R0]]
00027d7c: NF := 63:63[#14904]
00027d7f: VF := 31:31[R0] & ~63:63[#14904]
00027d82: ZF := #14904 = 0
00027d85: CF := 31:31[R0] | 31:31[R0] & ~63:63[#14904] | ~63:63[#14904]
00027d94: #14906 := ~ZF <> 0
00027d8e: when #14906 goto %00027d8c
00038524: goto %00028188

00028188:
0002818f: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
00028198: R26 := 31:0[R0] | 31:0[R27]
000281a4: #15009 := ~31:0[R26] = 0
0002819e: when #15009 goto %0002819c
00038523: goto %000282ba

0002819c:
000281ac: R0 := mem[R21 + 0xF78, el]:u64
000281b5: R0 := pad:64[mem[R0, el]:u32]
000281c1: #15010 := ~31:0[R0] = 0
000281bb: when #15010 goto %000281b9
00038522: goto %000281f1

000281b9:
000281ca: R2 := pad:64[mem[R31 + 0x6C, el]:u32]
000281d3: R3 := 31:0[R27]
000281d9: R1 := 0x12000
000281e0: R0 := 1
000281e7: R1 := R1 + 0xEA8
000281ec: R30 := 0xDF1C
000281ee: call @__printf_chk with return %000281f0

000281f0:
000281f3: goto %000281f1

000281f1:
000281fa: R0 := mem[R31 + 0xC0, el]:u64
00028206: #15014 := R0 = 0
00028200: when #15014 goto %000281fe
00038521: goto %000282b3

000282b3:
000282b6: R30 := 0xDED4
000282b8: call @free with return %000281fe

000281fe:
0002820e: R0 := R19
00028213: R30 := 0xDEDC
00028215: call @free_rr_data with return %00028217

00028217:
0002821e: R0 := pad:64[mem[R31 + 0xB8, el]:u32]
00028223: R30 := 0xDEE4
00028225: call @close with return %00028227

00028227:
0002822d: R1 := mem[R31 + 0x78, el]:u64
00028231: goto %0001f78f

000282ba:
000282be: R0 := 0x27000
000282c5: R1 := 1
000282cd: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R1]
000282d4: R27 := 0
000282dc: R0 := mem[R0 + 0xFF0, el]:u64
000282e3: R26 := 0x7FFF
000282ec: R0 := pad:64[mem[R0, el]:u32]
000282f7: #15059 := 31:0[R0] = 0
000282f1: when #15059 goto %00027e60
00038520: goto %00027df6

00027d8c:
00027d9a: R0 := 0x27000
00027da1: R1 := 1
00027da9: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R1]
00027db0: #14908 := 0xFFFFFFFFFFFFFFFF + extend:64[31:0[R27]]
00027db4: NF := 63:63[#14908]
00027db7: VF := 31:31[R27] & ~63:63[#14908]
00027dba: ZF := #14908 = 0
00027dbd: CF := 31:31[R27] | 31:31[R27] & ~63:63[#14908] | ~63:63[#14908]
00027dc8: R0 := mem[R0 + 0xFF0, el]:u64
00027de0: #14910 := ZF
00027de1: goto %00027dd8

00027dd8:
00027dda: when #14910 goto %00027dd1
00027ddb: goto %00027dd5

00027dd5:
00027dd6: R22 := 1
00027ddd: goto %00027dd9

00027dd1:
00027dd2: R22 := 31:0[R22]
00027ddc: goto %00027dd9

00027dd9:
00027de9: R26 := 0x7FFF
00027df2: R0 := pad:64[mem[R0, el]:u32]
00027dfe: #14911 := ~31:0[R0] = 0
00027df8: when #14911 goto %00027df6
0003851f: goto %00027e60

00027df6:
00027e04: R5 := 0x27000
00027e0d: R3 := pad:64[mem[R31 + 0xBC, el]:u32]
00027e15: R2 := mem[R31 + 0xC0, el]:u64
00027e1d: R4 := R23
00027e25: R5 := mem[R5 + 0xF98, el]:u64
00027e2d: R1 := R19
00027e35: R0 := R20
00027e3d: R5 := mem[R5, el]:u64
00027e42: R30 := 0xDA9C
00027e44: call @scanner_hook with return %00027e46

00027e46:
00027e4d: R26 := 31:0[R0]
00027e55: R0 := 31:0[R0] & 1
00027e5d: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
00027e62: goto %00027e60

00027e60:
00027e69: R0 := mem[R19 + 8, el]:u64
00027e6f: R1 := 0x12000
00027e76: R24 := R1 + 0x958
00027e7c: R2 := 0x12000
00027e84: R1 := R24
00027e8b: R2 := R2 + 0xE30
00027e90: R30 := 0xD7B0
00027e92: call @hlist_subcmp with return %00027e94

00027e94:
00027e9a: mem := mem with [R31 + 0xA8, el]:u32 <- 31:0[R0]
00027ea5: #14951 := 31:0[R0] = 0
00027e9f: when #14951 goto %00027815
0003851e: goto %00027ea8

00027815:
0002781b: R0 := mem[R19 + 8, el]:u64
00027823: R1 := R24
00027829: R2 := 0x12000
00027830: R3 := 1
00027837: R2 := R2 + 0x950
0002783c: R30 := 0xDD3C
0002783e: call @hlist_mod with return %00027840

00027840:
00027846: mem := mem with [R19 + 8, el]:u64 <- R0
0002784b: goto %00027849

00027ea8:
00027eae: R0 := mem[R19 + 8, el]:u64
0003851d: goto %00027849

00027849:
00027850: R1 := 0x12000
00027857: R28 := R1 + 0xBC0
0002785c: goto %0002785a

0002785a:
00027863: R1 := R28
00027868: R30 := 0xD7E0
0002786a: call @hlist_get with return %0002786c

0002786c:
00027876: #14785 := ~R0 = 0
00027870: when #14785 goto %0002786e
0003851c: goto %00027897

00027897:
0002789d: R24 := R0
000278a6: R0 := pad:64[mem[R19 + 0x10, el]:u32]
000278ad: #14793 := 0xFFFFFFFFFFFFFE69 + extend:64[31:0[R0]]
000278b1: NF := 63:63[#14793]
000278b4: VF := 31:31[R0] & ~63:63[#14793]
000278b7: ZF := #14793 = 0
000278ba: CF := 31:31[R0] | 31:31[R0] & ~63:63[#14793] | ~63:63[#14793]
000278c9: #14795 := ZF
000278c3: when #14795 goto %000278c1
0003851b: goto %000278ff

000278c1:
000278d1: R0 := mem[R19 + 8, el]:u64
000278d9: R1 := R28
000278df: R2 := 0x12000
000278e6: R3 := 1
000278ed: R2 := R2 + 0xEE0
000278f2: R30 := 0xDE34
000278f4: call @hlist_mod with return %000278f6

000278f6:
000278fc: mem := mem with [R19 + 8, el]:u64 <- R0
00027901: goto %000278ff

000278ff:
00027909: R0 := pad:64[mem[R31 + 0x88, el]:u32]
00027915: #14800 := ~31:0[R0] = 0
0002790f: when #14800 goto %0002790d
0003851a: goto %00027982

0002790d:
0002791d: R0 := mem[R21 + 0xF78, el]:u64
00027925: R1 := mem[R31 + 0x78, el]:u64
0002792e: R0 := pad:64[mem[R0, el]:u32]
00027937: R2 := pad:64[mem[R1, el]:u32]
00027943: #14801 := ~31:0[R0] = 0
0002793d: when #14801 goto %0002793b
00038519: goto %00028300

0002793b:
00027949: R1 := 0x12000
00027950: R0 := 1
00027957: R1 := R1 + 0xFD8
0002795c: R30 := 0xDF80
0002795e: call @__printf_chk with return %00027960

00027960:
00027966: R0 := mem[R31 + 0x78, el]:u64
0002796e: R1 := R19
00027977: R0 := pad:64[mem[R0, el]:u32]
0002797c: R30 := 0xDF90
0002797e: call @headers_send with return %00027980

00027980:
0002798a: #14805 := ~31:0[R0] = 0
00027984: when #14805 goto %00027982
00038518: goto %000282fc

000282fc:
000282fe: goto %0001fab9

00028300:
00028307: R0 := 31:0[R2]
0002830f: R1 := R19
00028314: R30 := 0xDF68
00028316: call @headers_send with return %00028318

00028318:
00028321: #15066 := ~31:0[R0] = 0
0002831b: when #15066 goto %00027982
00038517: goto %00028324

00028324:
00028326: goto %0001fab9

00027982:
00027996: #14806 := R20 = 0
00027990: when #14806 goto %0002798e
00038516: goto %00027b3f

00027b3f:
00027b46: R0 := pad:64[mem[R20, el]:u32]
00027b51: #14863 := 31:0[R0] = 0
00027b4b: when #14863 goto %0002798e
00038515: goto %00027b54

00027b54:
00027b5a: R1 := mem[R20 + 0x28, el]:u64
00027b60: R0 := 0x12000
00027b67: R0 := R0 + 0xF00
00027b6c: R30 := 0xD818
00027b6e: call @strcasecmp with return %00027b70

00027b70:
00027b77: R1 := 31:0[R0]
00027b82: #14867 := ~31:0[R0] = 0
00027b7c: when #14867 goto %0002798e
00038514: goto %00027b85

00027b85:
00027b8c: R0 := pad:64[mem[R19 + 0x10, el]:u32]
00027b93: #14868 := 0xFFFFFFFFFFFFFF38 + extend:64[31:0[R0]]
00027b97: NF := 63:63[#14868]
00027b9a: VF := 31:31[R0] & ~63:63[#14868]
00027b9d: ZF := #14868 = 0
00027ba0: CF := 31:31[R0] | 31:31[R0] & ~63:63[#14868] | ~63:63[#14868]
00027baf: #14870 := ZF
00027ba9: when #14870 goto %00027ba7
00038513: goto %000282fa

00027ba7:
00027bb7: R0 := mem[R21 + 0xF78, el]:u64
00027bc0: R28 := 31:0[R1]
00027bc9: R0 := pad:64[mem[R0, el]:u32]
00027bd5: #14874 := ~31:0[R0] = 0
00027bcf: when #14874 goto %00027bcd
00038512: goto %00027bf3

00027bcd:
00027bdb: R1 := 0x12000
00027be2: R0 := 1
00027be9: R1 := R1 + 0xF08
00027bee: R30 := 0xDF30
00027bf0: call @__printf_chk with return %00027bf2

00027bf2:
00027bf5: goto %00027bf3

00027bf3:
00027bfd: R23 := 0
00027c03: R24 := 0xFFFFFFFFFFFFFFFF
00027c08: R30 := 0xDE88
00027c0a: call @tunnel with return %00027c0c

00027c0c:
00027c12: R0 := R20
00027c17: R30 := 0xDE90
00027c19: call @free_rr_data with return %00027c1b

00027c1b:
00027c21: R0 := R19
00027c26: R30 := 0xDE98
00027c28: call @free_rr_data with return %00027c2a

00027c2a:
00027c2c: goto %0001faf6

000282fa:
00038511: goto %0002798e

0002798e:
000279a2: #14807 := ~~1:1[R26]
0002799c: when #14807 goto %0002799a
00038510: goto %000279df

0002799a:
000279aa: R0 := mem[R31 + 0x78, el]:u64
000279b2: R3 := R19
000279ba: R1 := mem[R31 + 0xD0, el]:u64
000279c2: R2 := R20
000279cb: R0 := pad:64[mem[R0, el]:u32]
000279d4: R1 := pad:64[mem[R1, el]:u32]
000279d9: R30 := 0xDD60
000279db: call @http_body_send with return %000279dd

000279dd:
000279e7: #14814 := ~31:0[R0] = 0
000279e1: when #14814 goto %000279df
0003850f: goto %0001fab9

000279df:
000279ef: R0 := mem[R19 + 8, el]:u64
000279f5: R1 := 0x12000
000279fc: R2 := R1 + 0xE30
00027a02: R1 := 0x12000
00027a09: R1 := R1 + 0xE40
00027a0e: R30 := 0xD84C
00027a10: call @hlist_subcmp with return %00027a12

00027a12:
00027a19: R1 := 31:0[R0]
00027a25: #14818 := ~31:0[R0] = 0
00027a1f: when #14818 goto %00027a1d
0003850e: goto %00027afa

00027a1d:
00027a2d: R0 := R20
00027a35: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R1]
00027a3a: R30 := 0xDDC4
00027a3c: call @free_rr_data with return %00027a3e

00027a3e:
00027a44: R0 := R19
00027a49: R30 := 0xDDCC
00027a4b: call @free_rr_data with return %00027a4d

00027a4d:
00027a54: R0 := pad:64[mem[R31 + 0xA8, el]:u32]
00027a5d: R1 := pad:64[mem[R31 + 0x88, el]:u32]
00027a69: #14826 := 31:0[R0] = 0
00027a63: when #14826 goto %00027a61
0003850d: goto %00027a80

00027a80:
00027a87: R0 := pad:64[mem[R31 + 0xB8, el]:u32]
00027a8f: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R1]
00027a94: R30 := 0xDDE4
00027a96: call @so_closed with return %00027a98

00027a98:
00027a9f: R1 := pad:64[mem[R31 + 0x88, el]:u32]
00027aaa: #14853 := ~31:0[R0] = 0
00027aa4: when #14853 goto %00027a61
0003850c: goto %00027aad

00027aad:
00027ab4: R0 := pad:64[mem[R31 + 0xBC, el]:u32]
00027abc: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R1]
00027ac1: R30 := 0xDDF8
00027ac3: call @so_closed with return %00027ac5

00027ac5:
00027ac9: R2 := 0x27000
00027ad2: R1 := pad:64[mem[R31 + 0x88, el]:u32]
00027ada: R2 := mem[R2 + 0xFD0, el]:u64
00027ae3: R2 := pad:64[mem[R2, el]:u32]
00027aec: R26 := 31:0[R0] | 31:0[R2]
00027af7: #14858 := 31:0[R26] = 0
00027af1: when #14858 goto %0001f8b1
0003850b: goto %00027a61

00027a61:
00027a72: R28 := 31:0[R1]
00027a7a: R23 := 31:0[R22] & 1
00027a7e: goto %0001faf6

0001f8b1:
0001f8be: R30 := 0xDCA4
0001f8c0: call @new_rr_data with return %0001f8c2

0001f8c2:
0001f8c8: R20 := R0
0001f8cd: goto %0001f8cb

00027afa:
00027b00: R0 := mem[R21 + 0xF78, el]:u64
00027b09: R28 := 31:0[R1]
00027b12: R0 := pad:64[mem[R0, el]:u32]
00027b1e: #14862 := ~31:0[R0] = 0
00027b18: when #14862 goto %00027b16
0003850a: goto %00027759

00027b16:
00027b24: R1 := 0x12000
00027b2b: R0 := 1
00027b32: R1 := R1 + 0xF30
00027b37: R30 := 0xDDB4
00027b39: call @__printf_chk with return %00027b3b

00027b3b:
00027b3d: goto %00027759

00027759:
00027762: R0 := R20
00027767: R30 := 0xD86C
00027769: call @free_rr_data with return %0002776b

0002776b:
00027771: R0 := R19
00027778: R23 := 0
0002777e: R24 := 0xFFFFFFFFFFFFFFFF
00027783: R30 := 0xD87C
00027785: call @free_rr_data with return %0001faf6

0002786e:
0002787e: R0 := mem[R19 + 8, el]:u64
00027886: R1 := R28
0002788b: R30 := 0xD7D4
0002788d: call @hlist_del with return %0002788f

0002788f:
00027895: mem := mem with [R19 + 8, el]:u64 <- R0
00038509: goto %0002785a

00027f51:
00027f61: R0 := mem[R24 + 8, el]:u64
00027f69: R1 := R26
00027f6e: R30 := 0xD9EC
00027f70: call @hlist_del with return %00027f72

00027f72:
00027f78: mem := mem with [R24 + 8, el]:u64 <- R0
00038508: goto %00027f3d

0001f9ff:
0001fa0f: R1 := mem[R21 + 0xF78, el]:u64
0001fa18: R0 := pad:64[mem[R23, el]:u32]
0001fa21: R1 := pad:64[mem[R1, el]:u32]
0001fa2d: #11571 := ~31:0[R1] = 0
0001fa27: when #11571 goto %0001fa25
00038507: goto %000280f0

0001fa25:
0001fa36: R2 := 31:0[R0]
0001fa3c: R1 := 0x12000
0001fa43: R0 := 1
0001fa4a: R1 := R1 + 0xFD8
0001fa4f: R30 := 0xDBFC
0001fa51: call @__printf_chk with return %0001fa53

0001fa53:
0001fa59: R0 := mem[R20 + 8, el]:u64
0001fa5e: R30 := 0xDC04
0001fa60: call @hlist_dump with return %0001fa62

0001fa62:
0001fa69: R0 := pad:64[mem[R23, el]:u32]
0001fa71: R1 := R20
0001fa76: R30 := 0xDC10
0001fa78: call @headers_send with return %0001fa7a

0001fa7a:
0001fa84: #11578 := ~31:0[R0] = 0
0001fa7e: when #11578 goto %0001fa7c
00038506: goto %000283b0

000283b0:
000283b2: goto %0001fab9

000280f0:
00028100: R1 := R20
00028105: R30 := 0xD72C
00028107: call @headers_send with return %00028109

00028109:
00028112: #15000 := 31:0[R0] = 0
0002810c: when #15000 goto %0001fab9
00038505: goto %0001fa7c

0001fa7c:
0001fa8c: R1 := mem[R31 + 0xC8, el]:u64
0001fa94: R3 := R19
0001fa9d: R0 := pad:64[mem[R23, el]:u32]
0001faa5: R2 := R20
0001faae: R1 := pad:64[mem[R1, el]:u32]
0001fab3: R30 := 0xD748
0001fab5: call @http_body_send with return %0001fab7

0001fab7:
0001fac1: #11585 := 31:0[R0] = 0
0001fabb: when #11585 goto %0001fab9
00038504: goto %0002839d

0001fab9:
0001fac9: R0 := R20
0001face: R30 := 0xDD6C
0001fad0: call @free_rr_data with return %0001fad2

0001fad2:
0001fad8: R0 := R19
0001fadf: R23 := 0
0001fae6: R28 := 0
0001faec: R24 := 0xFFFFFFFFFFFFFFFF
0001faf1: R30 := 0xDD80
0001faf3: call @free_rr_data with return %0001faf5

0001faf5:
0001faf8: goto %0001faf6

0001faf6:
0001fb03: #11592 := R25 = 0
0001fafd: when #11592 goto %0001fafb
00038503: goto %000282a1

000282a1:
000282aa: R0 := R25
000282af: R30 := 0xD888
000282b1: call @free with return %0001fafb

0001fafb:
0001fb0b: R0 := mem[R21 + 0xF78, el]:u64
0001fb14: R0 := pad:64[mem[R0, el]:u32]
0001fb20: #11593 := ~31:0[R0] = 0
0001fb1a: when #11593 goto %0001fb18
00038502: goto %0001fba4

0001fb18:
0001fb26: R1 := 0x27000
0001fb2f: R0 := pad:64[mem[R31 + 0xB8, el]:u32]
0001fb37: R1 := mem[R1 + 0xF90, el]:u64
0001fb40: R19 := pad:64[mem[R1, el]:u32]
0001fb45: R30 := 0xDB94
0001fb47: call @so_closed with return %0001fb49

0001fb49:
0001fb50: R3 := 31:0[R22]
0001fb59: R5 := 31:0[R0]
0001fb62: R4 := 31:0[R19]
0001fb6b: R2 := 31:0[R28]
0001fb71: R1 := 0x12000
0001fb78: R0 := 1
0001fb7f: R1 := R1 + 0xF50
0001fb84: R30 := 0xDBB4
0001fb86: call @__printf_chk with return %0001fb88

0001fb88:
0001fb8c: R1 := 0x12000
0001fb93: R0 := 1
0001fb9a: R1 := R1 + 0xF90
0001fb9f: R30 := 0xDBC4
0001fba1: call @__printf_chk with return %0001fba3

0001fba3:
0001fba6: goto %0001fba4

0001fba4:
0001fbb1: #11606 := 31:0[R23] = 0
0001fbab: when #11606 goto %0001fba9
00038501: goto %00028345

00028345:
00028349: R0 := 0x27000
00028351: R0 := mem[R0 + 0xF90, el]:u64
0002835a: R0 := pad:64[mem[R0, el]:u32]
00028365: #15068 := 31:0[R0] = 0
0002835f: when #15068 goto %00028052
00038500: goto %0001fba9

00028052:
00028059: R0 := pad:64[mem[R31 + 0xB8, el]:u32]
0002805e: R30 := 0xDCD8
00028060: call @so_closed with return %00028062

00028062:
0002806b: #14988 := ~31:0[R0] = 0
00028065: when #14988 goto %0001fba9
000384ff: goto %0002806e

0002806e:
00028074: R21 := mem[R21 + 0xF78, el]:u64
0002807d: R0 := pad:64[mem[R21, el]:u32]
00028088: #14989 := ~31:0[R0] = 0
00028082: when #14989 goto %00027787
000384fe: goto %000277a5

00027787:
0002778d: R1 := 0x12000
00027794: R0 := 1
0002779b: R1 := R1 + 0xFA8
000277a0: R30 := 0xDEB8
000277a2: call @__printf_chk with return %000277a4

000277a4:
000277a7: goto %000277a5

000277a5:
000277ac: R0 := 0x27000
000277b4: R20 := mem[R0 + 0xF60, el]:u64
000277bc: R0 := R20
000277c1: R30 := 0xDCF8
000277c3: call @pthread_mutex_lock with return %000277c5

000277c5:
000277c9: R0 := 0x27000
000277d1: R1 := extend:64[mem[R31 + 0xB8, el]:u32]
000277d9: R2 := mem[R31 + 0xC0, el]:u64
000277e1: R19 := mem[R0 + 0xFC0, el]:u64
000277e9: R0 := mem[R19, el]:u64
000277ee: R30 := 0xDD10
000277f0: call @plist_add with return %000277f2

000277f2:
000277f8: R1 := R0
00027800: R0 := R20
00027808: mem := mem with [R19, el]:u64 <- R1
0002780d: R30 := 0xDD20
0002780f: call @pthread_mutex_unlock with return %00027811

00027811:
00027813: goto %0001fbd2

0001fba9:
0001fbb9: R0 := mem[R31 + 0xC0, el]:u64
0001fbbe: R30 := 0xD8B0
0001fbc0: call @free with return %0001fbc2

0001fbc2:
0001fbc9: R0 := pad:64[mem[R31 + 0xB8, el]:u32]
0001fbce: R30 := 0xD8B8
0001fbd0: call @close with return %0001fbd2

0001fbd2:
0001fbd6: R0 := 0x27000
0001fbde: R0 := mem[R0 + 0xFB8, el]:u64
0001fbe6: R1 := mem[R31 + 0xD8, el]:u64
0001fbee: R2 := mem[R0, el]:u64
0001fbf6: #11610 := 1 + ~R2 + R1
0001fbfa: NF := 63:63[#11610]
0001fbfd: VF := 63:63[R1] & 63:63[~R2] & ~63:63[#11610] | ~63:63[R1] &
          ~63:63[~R2] & 63:63[#11610]
0001fc00: ZF := #11610 = 0
0001fc03: CF := 63:63[R1] & 63:63[~R2] | 63:63[~R2] & ~63:63[#11610] |
          63:63[R1] & ~63:63[#11610]
0001fc07: R1 := #11610
0001fc0d: R2 := 0
0001fc19: #11612 := ~ZF <> 0
0001fc13: when #11612 goto %0001fc11
000384fd: goto %0002765f

0001fc11:
0001fc1e: R30 := 0xDF9C
0001fc20: call @__stack_chk_fail with return %0001fc22

0001fc22:
000384fc: call @prepare_http_connect with noreturn

0002765f:
00027665: R0 := R24
0002766e: R19 := mem[R31 + 0x10, el]:u64
00027672: R20 := mem[R31 + 0x18, el]:u64
0002767b: R21 := mem[R31 + 0x20, el]:u64
0002767f: R22 := mem[R31 + 0x28, el]:u64
00027688: R23 := mem[R31 + 0x30, el]:u64
0002768c: R24 := mem[R31 + 0x38, el]:u64
00027695: R25 := mem[R31 + 0x40, el]:u64
00027699: R26 := mem[R31 + 0x48, el]:u64
000276a2: R27 := mem[R31 + 0x50, el]:u64
000276a6: R28 := mem[R31 + 0x58, el]:u64
000276b0: R29 := mem[R31, el]:u64
000276b4: R30 := mem[R31 + 8, el]:u64
000276b7: R31 := R31 + 0xE0
000276bc: call R30 with noreturn

0002839d:
000283a3: R24 := R19
000283aa: R26 := 1
000283ae: goto %0001f901

0003854e: sub forward_tunnel(forward_tunnel_result)
00038ad5: forward_tunnel_result :: out u32 = low:32[R0]

0001ff64:
0001ff6c: mem := mem with [R31 - 0x50, el]:u64 <- R29
0001ff70: mem := mem with [R31 - 0x48, el]:u64 <- R30
0001ff73: R31 := R31 - 0x50
0001ff7a: R29 := R31
0001ff83: mem := mem with [R31, el]:u64 <- R31 + 0x20
0001ff87: mem := mem with [R31, el]:u64 <- R31 + 0x28
0001ff8d: R20 := 0x27000
0001ff95: R1 := mem[R20 + 0xFB8, el]:u64
0001ff9e: mem := mem with [R31, el]:u64 <- R31 + 0x40
0001ffa2: mem := mem with [R31, el]:u64 <- R31 + 0x48
0001ffab: R22 := pad:64[mem[R0, el]:u32]
0001ffb3: R2 := mem[R1, el]:u64
0001ffbb: mem := mem with [R31 + 0x48, el]:u64 <- R2
0001ffc1: R2 := 0
0001ffca: mem := mem with [R31, el]:u64 <- R31 + 0x60
0001ffce: mem := mem with [R31, el]:u64 <- R31 + 0x68
0001ffd7: R23 := mem[R0 + 8, el]:u64
0001ffdb: R24 := mem[R0 + 0x10, el]:u64
0001ffe0: R30 := 0xE294
0001ffe2: call @new_auth with return %0001ffe4

0001ffe4:
0001ffea: R21 := R0
0001ffef: R30 := 0xE29C
0001fff1: call @proxy_connect with return %0001fff3

0001fff3:
0001fffa: R19 := 31:0[R0]
00020001: #11699 := extend:64[31:0[R0]]
00020005: NF := 63:63[#11699]
00020008: VF := 31:31[R0] & ~63:63[#11699]
0002000b: ZF := #11699 = 0
0002000e: CF := 31:31[R0] | 31:31[R0] & ~63:63[#11699] | ~63:63[#11699]
0002001f: #11701 := (NF <> VF | ZF) <> 0
00020019: when #11701 goto %00020017
00038554: goto %000272fd

000272fd:
00027302: R0 := R24 >> 0x20
00027307: R30 := 0xE2B0
00027309: call @inet_ntoa with return %0002730b

0002730b:
00027311: R4 := R23
00027319: R3 := R0
0002731f: R2 := 0x13000
00027326: R0 := 7
0002732d: R2 := R2 + 0x110
00027334: R1 := 1
00027339: R30 := 0xE2CC
0002733b: call @__syslog_chk with return %0002733d

0002733d:
00027341: R0 := 0x27000
00027349: R0 := mem[R0 + 0xF78, el]:u64
00027352: R0 := pad:64[mem[R0, el]:u32]
0002735d: #14684 := ~31:0[R0] = 0
00027357: when #14684 goto %000272a1
00038553: goto %00027360

000272a1:
000272a8: R3 := 31:0[R22]
000272b0: R2 := R23
000272b6: R1 := 0x13000
000272bd: R0 := 1
000272c4: R1 := R1 + 0x120
000272c9: R30 := 0xE358
000272cb: call @__printf_chk with return %000272cd

000272cd:
000272d3: R2 := R23
000272db: R1 := R21
000272e4: R0 := 31:0[R19]
000272e9: R30 := 0xE368
000272eb: call @prepare_http_connect with return %000272ed

000272ed:
000272f6: #14676 := 31:0[R0] = 0
000272f0: when #14676 goto %00020017
00038552: goto %000272f9

000272f9:
000272fb: goto %00027284

00027360:
00027366: R2 := R23
0002736e: R1 := R21
00027377: R0 := 31:0[R19]
0002737c: R30 := 0xE2EC
0002737e: call @prepare_http_connect with return %00027380

00027380:
00027389: #14694 := ~31:0[R0] = 0
00027383: when #14694 goto %00027284
00038551: goto %00020017

00027284:
0002728b: R1 := 31:0[R19]
00027294: R0 := 31:0[R22]
00027299: R30 := 0xE33C
0002729b: call @tunnel with return %0002729d

0002729d:
0002729f: goto %00020017

00020017:
00020028: R0 := 31:0[R19]
0002002d: R30 := 0xE2F8
0002002f: call @close with return %00020031

00020031:
00020038: R0 := 31:0[R22]
0002003d: R30 := 0xE300
0002003f: call @close with return %00020041

00020041:
00020047: R20 := mem[R20 + 0xFB8, el]:u64
0002004f: R0 := mem[R31 + 0x48, el]:u64
00020057: R1 := mem[R20, el]:u64
0002005f: #11711 := 1 + ~R1 + R0
00020063: NF := 63:63[#11711]
00020066: VF := 63:63[R0] & 63:63[~R1] & ~63:63[#11711] | ~63:63[R0] &
          ~63:63[~R1] & 63:63[#11711]
00020069: ZF := #11711 = 0
0002006c: CF := 63:63[R0] & 63:63[~R1] | 63:63[~R1] & ~63:63[#11711] |
          63:63[R0] & ~63:63[#11711]
00020070: R0 := #11711
00020076: R1 := 0
00020082: #11713 := ~ZF <> 0
0002007c: when #11713 goto %0002007a
00038550: goto %00027240

0002007a:
00020087: R30 := 0xE374
00020089: call @__stack_chk_fail with return %0002008b

0002008b:
0003854f: call @magic_auth_detect with noreturn

00027240:
00027246: R0 := R21
0002724f: R19 := mem[R31 + 0x10, el]:u64
00027253: R20 := mem[R31 + 0x18, el]:u64
0002725c: R21 := mem[R31 + 0x20, el]:u64
00027260: R22 := mem[R31 + 0x28, el]:u64
00027269: R23 := mem[R31 + 0x30, el]:u64
0002726d: R24 := mem[R31 + 0x38, el]:u64
00027277: R29 := mem[R31, el]:u64
0002727b: R30 := mem[R31 + 8, el]:u64
0002727e: R31 := R31 + 0x50
00027282: call @free with noreturn

00038555: sub frame_dummy(frame_dummy_result)
00038ad6: frame_dummy_result :: out u32 = low:32[R0]

0002e8c4:
0002e8c6: call @register_tm_clones with noreturn

00038556: sub fread(fread_ptr, fread_size, fread_nmemb, fread_stream, fread_result)
00038ad7: fread_ptr :: in out u64 = R0
00038ad8: fread_size :: in u64 = R1
00038ad9: fread_nmemb :: in u64 = R2
00038ada: fread_stream :: in out u64 = R3
00038adb: fread_result :: out u64 = R0

00011cb9:
000305e7: R16 := 0x27000
000305ef: R17 := mem[R16 + 0xE40, el]:u64
000305f6: R16 := R16 + 0xE40
000305fb: call R17 with noreturn

00038557: sub free(free_ptr)
00038adc: free_ptr :: in out u64 = R0

000131cc:
00030619: R16 := 0x27000
00030621: R17 := mem[R16 + 0xE50, el]:u64
00030628: R16 := R16 + 0xE50
0003062d: call R17 with noreturn

00038558: sub free_rr_data(free_rr_data_result)
00038add: free_rr_data_result :: out u32 = low:32[R0]

000138b2:
000138bc: #4784 := R0 = 0
000138b6: when #4784 goto %000138b4
00038564: goto %000139f0

000138b4:
000138c1: call R30 with noreturn

000139f0:
000139f8: mem := mem with [R31 - 0x30, el]:u64 <- R29
000139fc: mem := mem with [R31 - 0x28, el]:u64 <- R30
000139ff: R31 := R31 - 0x30
00013a06: R29 := R31
00013a0f: mem := mem with [R31, el]:u64 <- R31 + 0x20
00013a13: mem := mem with [R31, el]:u64 <- R31 + 0x28
00013a1b: R19 := R0
00013a23: R20 := mem[R0 + 8, el]:u64
00013a2f: #4819 := R20 = 0
00013a29: when #4819 goto %00013a27
00038563: goto %00013b18

00013b18:
00013b1e: mem := mem with [R31 + 0x20, el]:u64 <- R21
00038562: goto %00013b20

00013b20:
00013b26: R21 := R20
00013b2e: R20 := mem[R20 + 0x18, el]:u64
00013b36: R0 := mem[R21, el]:u64
00013b3b: R30 := 0x5650
00013b3d: call @free with return %00013b3f

00013b3f:
00013b45: R0 := mem[R21 + 8, el]:u64
00013b4a: R30 := 0x5658
00013b4c: call @free with return %00013b4e

00013b4e:
00013b54: R0 := R21
00013b59: R30 := 0x5660
00013b5b: call @free with return %00013b5d

00013b5d:
00013b66: #4839 := ~R20 = 0
00013b60: when #4839 goto %00013b20
00038561: goto %00013b69

00013b69:
00013b6f: R21 := mem[R31 + 0x20, el]:u64
00038560: goto %00013a27

00013a27:
00013a37: R0 := mem[R19 + 0x28, el]:u64
00013a43: #4820 := R0 = 0
00013a3d: when #4820 goto %00013a3b
0003855f: goto %00013b11

00013b11:
00013b14: R30 := 0x5674
00013b16: call @free with return %00013a3b

00013a3b:
00013a4b: R0 := mem[R19 + 0x30, el]:u64
00013a57: #4821 := R0 = 0
00013a51: when #4821 goto %00013a4f
0003855e: goto %00013b0a

00013b0a:
00013b0d: R30 := 0x5680
00013b0f: call @free with return %00013a4f

00013a4f:
00013a5f: R0 := mem[R19 + 0x38, el]:u64
00013a6b: #4822 := R0 = 0
00013a65: when #4822 goto %00013a63
0003855d: goto %00013b03

00013b03:
00013b06: R30 := 0x568C
00013b08: call @free with return %00013a63

00013a63:
00013a73: R0 := mem[R19 + 0x40, el]:u64
00013a7f: #4823 := R0 = 0
00013a79: when #4823 goto %00013a77
0003855c: goto %00013afc

00013afc:
00013aff: R30 := 0x5698
00013b01: call @free with return %00013a77

00013a77:
00013a87: R0 := mem[R19 + 0x48, el]:u64
00013a93: #4824 := R0 = 0
00013a8d: when #4824 goto %00013a8b
0003855b: goto %00013af5

00013af5:
00013af8: R30 := 0x56A4
00013afa: call @free with return %00013a8b

00013a8b:
00013a9b: R0 := mem[R19 + 0x50, el]:u64
00013aa7: #4825 := R0 = 0
00013aa1: when #4825 goto %00013a9f
0003855a: goto %00013aee

00013aee:
00013af1: R30 := 0x56B0
00013af3: call @free with return %00013a9f

00013a9f:
00013aaf: R0 := mem[R19 + 0x58, el]:u64
00013abb: #4826 := R0 = 0
00013ab5: when #4826 goto %00013ab3
00038559: goto %00013ae7

00013ae7:
00013aea: R30 := 0x56BC
00013aec: call @free with return %00013ab3

00013ab3:
00013ac3: R0 := R19
00013acc: R19 := mem[R31 + 0x10, el]:u64
00013ad0: R20 := mem[R31 + 0x18, el]:u64
00013ada: R29 := mem[R31, el]:u64
00013ade: R30 := mem[R31 + 8, el]:u64
00013ae1: R31 := R31 + 0x30
00013ae5: call @free with noreturn

00038565: sub freeaddrinfo(freeaddrinfo_result)
00038ade: freeaddrinfo_result :: out u32 = low:32[R0]

000166ce:
0002ffd9: R16 := 0x27000
0002ffe1: R17 := mem[R16 + 0xC50, el]:u64
0002ffe8: R16 := R16 + 0xC50
0002ffed: call R17 with noreturn

00038566: sub from_base64(from_base64_result)
00038adf: from_base64_result :: out u32 = low:32[R0]

0000fc55:
0000fc59: R3 := 0x28000
0000fc60: R3 := R3 + 0x10
0000fc68: R7 := R0
0000fc6f: R3 := R3 + 0x260
0000fc76: R8 := 0
0000fc7b: goto %0000fc79

0000fc79:
0000fc83: R2 := pad:64[mem[R1]]
0000fc8f: #265 := ~~7:7[R2]
0000fc89: when #265 goto %0000fc87
00038575: goto %0002a67d

0002a67d:
0002a68b: #15890 := ZF
0002a685: when #15890 goto %0002a683
00038574: goto %0002a692

0002a692:
0002a699: R2 := pad:64[mem[R1 + 1]]
0002a6a4: #15891 := ~~7:7[R2]
0002a69e: when #15891 goto %0000fc87
00038573: goto %0002a6a7

0002a6a7:
0002a6ae: R4 := 31:0[R2]
0002a6bd: #15896 := ZF
0002a6b7: when #15896 goto %0000fc87
00038572: goto %0002a6c0

0002a6c0:
0002a6c7: R2 := pad:64[mem[R1 + 2]]
0002a6d2: #15897 := ~~7:7[R2]
0002a6cc: when #15897 goto %0000fc87
00038571: goto %0002a6d5

0002a6d5:
0002a6da: #15898 := 0xFFFFFFFFFFFFFFC3 + extend:64[31:0[R2]]
0002a6de: NF := 63:63[#15898]
0002a6e1: VF := 31:31[R2] & ~63:63[#15898]
0002a6e4: ZF := #15898 = 0
0002a6e7: CF := 31:31[R2] | 31:31[R2] & ~63:63[#15898] | ~63:63[#15898]
0002a6f6: #15900 := ZF
0002a6f0: when #15900 goto %0002a6ee
00038570: goto %0002a868

0002a868:
0002a86f: R5 := 31:0[R2]
0002a87e: #15940 := ZF
0002a878: when #15940 goto %0000fc87
0003856f: goto %0002a6ee

0002a6ee:
0002a6ff: R5 := pad:64[mem[R1 + 3]]
0002a70a: #15901 := ~~7:7[R5]
0002a704: when #15901 goto %0000fc87
0003856e: goto %0002a70d

0000fc87:
0000fc96: R0 := 0xFFFFFFFFFFFFFFFF
0000fc9b: call R30 with noreturn

0002a70d:
0002a712: #15902 := 0xFFFFFFFFFFFFFFC3 + extend:64[31:0[R5]]
0002a716: NF := 63:63[#15902]
0002a719: VF := 31:31[R5] & ~63:63[#15902]
0002a71c: ZF := #15902 = 0
0002a71f: CF := 31:31[R5] | 31:31[R5] & ~63:63[#15902] | ~63:63[#15902]
0002a72e: #15904 := ZF
0002a728: when #15904 goto %0002a726
0003856d: goto %0002a84f

0002a84f:
0002a856: R9 := 31:0[R5]
0002a865: #15935 := ZF
0002a85f: when #15935 goto %0000fc9d
0003856c: goto %0002a726

0000fc9d:
0000fca4: R0 := 31:0[R9]
0000fca9: call R30 with noreturn

0002a726:
0002a736: R6 := extend:64[31:4[R6]]
0002a73d: R1 := R1 + 4
0002a746: R0 := 31:0[R6] | 31:0[R0] << 2
0002a74e: mem := mem with [R7] <- low:8[31:0[R0]]
0002a755: #15909 := 0xFFFFFFFFFFFFFFC3 + extend:64[31:0[R2]]
0002a759: NF := 63:63[#15909]
0002a75c: VF := 31:31[R2] & ~63:63[#15909]
0002a75f: ZF := #15909 = 0
0002a762: CF := 31:31[R2] | 31:31[R2] & ~63:63[#15909] | ~63:63[#15909]
0002a771: #15911 := ~ZF <> 0
0002a76b: when #15911 goto %0002a769
0003856b: goto %0002a83c

0002a83c:
0002a841: R7 := R7 + 1
0002a849: R8 := extend:64[31:0[R8]] + 1
0002a84d: goto %0002a7e8

0002a769:
0002a77a: #15912 := 0xFFFFFFFFFFFFFFC3 + extend:64[31:0[R5]]
0002a77e: NF := 63:63[#15912]
0002a781: VF := 31:31[R5] & ~63:63[#15912]
0002a784: ZF := #15912 = 0
0002a787: CF := 31:31[R5] | 31:31[R5] & ~63:63[#15912] | ~63:63[#15912]
0002a794: R4 := extend:64[31:2[R4]]
0002a79d: R0 := 31:0[R4] | 31:0[R0] << 4
0002a7a5: mem := mem with [R7 + 1] <- low:8[31:0[R0]]
0002a7b1: #15918 := ZF
0002a7ab: when #15918 goto %0002a7a9
0003856a: goto %0002a7bb

0002a7a9:
0002a7b9: R0 := extend:64[31:0[R8]] + 2
00038569: goto %0002a683

0002a683:
0002a690: call R30 with noreturn

0002a7bb:
0002a7c2: R4 := 31:0[R5]
0002a7cc: R8 := extend:64[31:0[R8]] + 3
0002a7d3: R7 := R7 + 3
0002a7de: R0 := 31:0[R2] | 31:0[R0] << 6
0002a7e6: mem := mem with [R7 - 1] <- low:8[31:0[R0]]
00038568: goto %0002a7e8

0002a7e8:
0002a7ef: R0 := pad:64[mem[R1]]
0002a7f6: #15925 := 0xFFFFFFFFFFFFFFC3 + extend:64[31:0[R5]]
0002a7fa: NF := 63:63[#15925]
0002a7fd: VF := 31:31[R5] & ~63:63[#15925]
0002a800: ZF := #15925 = 0
0002a803: CF := 31:31[R5] | 31:31[R5] & ~63:63[#15925] | ~63:63[#15925]
0002a82c: #15927 := ~ZF <> 0
0002a82d: goto %0002a824

0002a824:
0002a826: when #15927 goto %0002a80c
0002a827: goto %0002a818

0002a818:
0002a819: NF := 0
0002a81c: ZF := 1
0002a81f: CF := 0
0002a822: VF := 0
0002a829: goto %0002a825

0002a80c:
0002a80d: NF := 63:63[extend:64[31:0[R0]] + 0]
0002a810: VF := 31:31[R0] & ~63:63[extend:64[31:0[R0]] + 0]
0002a813: ZF := extend:64[31:0[R0]] + 0 = 0
0002a816: CF := 31:31[R0] | ~63:63[extend:64[31:0[R0]] + 0] | 31:31[R0] &
          ~63:63[extend:64[31:0[R0]] + 0]
0002a828: goto %0002a825

0002a825:
0002a839: #15930 := ZF
0002a833: when #15930 goto %0000fcab
00038567: goto %0000fc79

0000fcab:
0000fcb2: R0 := 31:0[R8]
0000fcb7: call R30 with noreturn

00038576: sub gai_strerror(gai_strerror_result)
00038ae0: gai_strerror_result :: out u32 = low:32[R0]

00014666:
0002ffc0: R16 := 0x27000
0002ffc8: R17 := mem[R16 + 0xC48, el]:u64
0002ffcf: R16 := R16 + 0xC48
0002ffd4: call R17 with noreturn

00038577: sub gen_401_page(gen_401_page_result)
00038ae1: gen_401_page_result :: out u32 = low:32[R0]

00023465:
0002346d: mem := mem with [R31 - 0x30, el]:u64 <- R29
00023471: mem := mem with [R31 - 0x28, el]:u64 <- R30
00023474: R31 := R31 - 0x30
0002347b: #13149 := R0
0002347f: NF := 63:63[#13149]
00023482: VF := 63:63[R0] & ~63:63[#13149]
00023485: ZF := #13149 = 0
00023488: CF := 63:63[R0] | ~63:63[#13149] | 63:63[R0] & ~63:63[#13149]
00023491: R29 := R31
0002349a: mem := mem with [R31, el]:u64 <- R31 + 0x20
0002349e: mem := mem with [R31, el]:u64 <- R31 + 0x28
000234a6: R19 := R0
000234ac: R0 := 0x13000
000234b3: R0 := R0 + 0xAD0
000234bb: R20 := R1
000234d1: #13158 := ZF
000234d2: goto %000234c9

000234c9:
000234cb: when #13158 goto %000234c3
000234cc: goto %000234c6

000234c6:
000234c7: R19 := R19
000234ce: goto %000234ca

000234c3:
000234c4: R19 := R0
000234cd: goto %000234ca

000234ca:
000234d9: R0 := 0x1000
000234e1: mem := mem with [R31 + 0x20, el]:u64 <- R21
000234ea: R21 := 31:0[R2]
000234ef: R30 := 0x1038C
000234f1: call @new with return %000234f3

000234f3:
000234f9: R5 := R19
00023502: R7 := 31:0[R21]
0002350a: R6 := R20
00023512: R19 := R0
00023518: R3 := 0xFFFFFFFFFFFFFFFF
0002351f: R2 := 1
00023525: R1 := 0xFFF
0002352b: R4 := 0x13000
00023532: R4 := R4 + 0xBD0
00023537: R30 := 0x103B4
00023539: call @__snprintf_chk with return %0002353b

0002353b:
00023541: R0 := R19
0002354a: R19 := mem[R31 + 0x10, el]:u64
0002354e: R20 := mem[R31 + 0x18, el]:u64
00023556: R21 := mem[R31 + 0x20, el]:u64
00023560: R29 := mem[R31, el]:u64
00023564: R30 := mem[R31 + 8, el]:u64
00023567: R31 := R31 + 0x30
0002356c: call R30 with noreturn

00038578: sub gen_407_page(gen_407_page_result)
00038ae2: gen_407_page_result :: out u32 = low:32[R0]

00023398:
000233a0: mem := mem with [R31 - 0x20, el]:u64 <- R29
000233a4: mem := mem with [R31 - 0x18, el]:u64 <- R30
000233a7: R31 := R31 - 0x20
000233ae: #13131 := R0
000233b2: NF := 63:63[#13131]
000233b5: VF := 63:63[R0] & ~63:63[#13131]
000233b8: ZF := #13131 = 0
000233bb: CF := 63:63[R0] | ~63:63[#13131] | 63:63[R0] & ~63:63[#13131]
000233c3: R1 := 0x13000
000233ca: R1 := R1 + 0xAD0
000233d1: R29 := R31
000233d9: mem := mem with [R31 + 0x10, el]:u64 <- R19
000233e1: R19 := R0
000233f7: #13137 := ZF
000233f8: goto %000233ef

000233ef:
000233f1: when #13137 goto %000233e9
000233f2: goto %000233ec

000233ec:
000233ed: R19 := R19
000233f4: goto %000233f0

000233e9:
000233ea: R19 := R1
000233f3: goto %000233f0

000233f0:
000233ff: R0 := 0x1000
00023404: R30 := 0x10328
00023406: call @new with return %00023408

00023408:
0002340e: R5 := R19
00023414: R3 := 0xFFFFFFFFFFFFFFFF
0002341c: R19 := R0
00023423: R2 := 1
00023429: R1 := 0xFFF
0002342f: R4 := 0x13000
00023436: R4 := R4 + 0xAE0
0002343b: R30 := 0x10348
0002343d: call @__snprintf_chk with return %0002343f

0002343f:
00023445: R0 := R19
0002344d: R19 := mem[R31 + 0x10, el]:u64
00023457: R29 := mem[R31, el]:u64
0002345b: R30 := mem[R31 + 8, el]:u64
0002345e: R31 := R31 + 0x20
00023463: call R30 with noreturn

00038579: sub gen_502_page(gen_502_page_result)
00038ae3: gen_502_page_result :: out u32 = low:32[R0]

00020843:
0002084e: mem := mem with [R31 - 0x20, el]:u64 <- R29
00020852: mem := mem with [R31 - 0x18, el]:u64 <- R30
00020855: R31 := R31 - 0x20
0002085c: #11879 := R0
00020860: NF := 63:63[#11879]
00020863: VF := 63:63[R0] & ~63:63[#11879]
00020866: ZF := #11879 = 0
00020869: CF := 63:63[R0] | ~63:63[#11879] | 63:63[R0] & ~63:63[#11879]
00020872: R29 := R31
0002087b: mem := mem with [R31, el]:u64 <- R31 + 0x20
0002087f: mem := mem with [R31, el]:u64 <- R31 + 0x28
00020887: R19 := R1
0002088f: R20 := R0
00020895: R0 := 0x13000
0002089c: R0 := R0 + 0xAD0
000208b2: #11888 := ZF
000208b3: goto %000208aa

000208aa:
000208ac: when #11888 goto %000208a4
000208ad: goto %000208a7

000208a7:
000208a8: R20 := R20
000208af: goto %000208ab

000208a4:
000208a5: R20 := R0
000208ae: goto %000208ab

000208ab:
000208ba: R1 := 0x13000
000208c1: #11889 := R19
000208c5: NF := 63:63[#11889]
000208c8: VF := 63:63[R19] & ~63:63[#11889]
000208cb: ZF := #11889 = 0
000208ce: CF := 63:63[R19] | ~63:63[#11889] | 63:63[R19] & ~63:63[#11889]
000208d7: R1 := R1 + 0xD78
000208ed: #11891 := ZF
000208ee: goto %000208e5

000208e5:
000208e7: when #11891 goto %000208df
000208e8: goto %000208e2

000208e2:
000208e3: R19 := R19
000208ea: goto %000208e6

000208df:
000208e0: R19 := R1
000208e9: goto %000208e6

000208e6:
000208f5: R0 := 0x1000
000208fa: R30 := 0x1045C
000208fc: call @new with return %000208fe

000208fe:
00020904: R5 := R20
0002090c: R7 := R19
00020914: R6 := R19
0002091a: R3 := 0xFFFFFFFFFFFFFFFF
00020922: R19 := R0
00020929: R2 := 1
0002092f: R1 := 0xFFF
00020935: R4 := 0x13000
0002093c: R4 := R4 + 0xD88
00020941: R30 := 0x10484
00020944: call @__snprintf_chk with return %00020946

00020946:
0002094c: R0 := R19
00020955: R19 := mem[R31 + 0x10, el]:u64
00020959: R20 := mem[R31 + 0x18, el]:u64
00020963: R29 := mem[R31, el]:u64
00020967: R30 := mem[R31 + 8, el]:u64
0002096a: R31 := R31 + 0x20
0002096f: call R30 with noreturn

0003857a: sub gen_denied_page(gen_denied_page_result)
00038ae4: gen_denied_page_result :: out u32 = low:32[R0]

0002356e:
00023576: mem := mem with [R31 - 0x20, el]:u64 <- R29
0002357a: mem := mem with [R31 - 0x18, el]:u64 <- R30
0002357d: R31 := R31 - 0x20
00023584: #13181 := R0
00023588: NF := 63:63[#13181]
0002358b: VF := 63:63[R0] & ~63:63[#13181]
0002358e: ZF := #13181 = 0
00023591: CF := 63:63[R0] | ~63:63[#13181] | 63:63[R0] & ~63:63[#13181]
00023599: R1 := 0x13000
000235a0: R1 := R1 + 0xCC0
000235a7: R29 := R31
000235af: mem := mem with [R31 + 0x10, el]:u64 <- R19
000235b7: R19 := R0
000235cd: #13187 := ZF
000235ce: goto %000235c5

000235c5:
000235c7: when #13187 goto %000235bf
000235c8: goto %000235c2

000235c2:
000235c3: R19 := R19
000235ca: goto %000235c6

000235bf:
000235c0: R19 := R1
000235c9: goto %000235c6

000235c6:
000235d5: R0 := 0x1000
000235da: R30 := 0x103F0
000235dc: call @new with return %000235de

000235de:
000235e4: R5 := R19
000235ea: R3 := 0xFFFFFFFFFFFFFFFF
000235f2: R19 := R0
000235f9: R2 := 1
000235ff: R1 := 0xFFF
00023605: R4 := 0x13000
0002360c: R4 := R4 + 0xCC8
00023611: R30 := 0x10410
00023613: call @__snprintf_chk with return %00023615

00023615:
0002361b: R0 := R19
00023623: R19 := mem[R31 + 0x10, el]:u64
0002362d: R29 := mem[R31, el]:u64
00023631: R30 := mem[R31 + 8, el]:u64
00023634: R31 := R31 + 0x20
00023639: call R30 with noreturn

0003857b: sub get_http_header_name(get_http_header_name_result)
00038ae5: get_http_header_name_result :: out u32 = low:32[R0]

0001cfbc:
0001cfc4: mem := mem with [R31 - 0x20, el]:u64 <- R29
0001cfc8: mem := mem with [R31 - 0x18, el]:u64 <- R30
0001cfcb: R31 := R31 - 0x20
0001cfd1: R1 := 0x12000
0001cfd8: R1 := R1 + 0x728
0001cfdf: R29 := R31
0001cfe8: mem := mem with [R31, el]:u64 <- R31 + 0x20
0001cfec: mem := mem with [R31, el]:u64 <- R31 + 0x28
0001cff4: R19 := R0
0001cff9: R30 := 0xB7F4
0001cffb: call @strcspn with return %0001cffd

0001cffd:
0001d003: R20 := R0
0001d00b: R0 := R19
0001d010: R30 := 0xB800
0001d012: call @strlen with return %0001d014

0001d014:
0001d020: #10534 := ZF
0001d01a: when #10534 goto %0001d018
0003857c: goto %0002a14f

0001d018:
0001d026: R0 := 0
0001d02f: R19 := mem[R31 + 0x10, el]:u64
0001d033: R20 := mem[R31 + 0x18, el]:u64
0001d03d: R29 := mem[R31, el]:u64
0001d041: R30 := mem[R31 + 8, el]:u64
0001d044: R31 := R31 + 0x20
0001d049: call R30 with noreturn

0002a14f:
0002a156: R2 := 31:0[R20]
0002a15e: R0 := R19
0002a167: R19 := mem[R31 + 0x10, el]:u64
0002a16b: R20 := mem[R31 + 0x18, el]:u64
0002a172: R1 := 0
0002a17c: R29 := mem[R31, el]:u64
0002a180: R30 := mem[R31 + 8, el]:u64
0002a183: R31 := R31 + 0x20
0002a187: call @substr with noreturn

0003857d: sub get_http_header_value(get_http_header_value_result)
00038ae6: get_http_header_value_result :: out u32 = low:32[R0]

0001d04b:
0001d053: mem := mem with [R31 - 0x10, el]:u64 <- R29
0001d057: mem := mem with [R31 - 8, el]:u64 <- R30
0001d05a: R31 := R31 - 0x10
0001d061: R1 := 0x3A
0001d068: R29 := R31
0001d06d: R30 := 0xB840
0001d070: call @strchr with return %0001d072

0001d072:
0001d07c: #10538 := R0 = 0
0001d076: when #10538 goto %0001d074
00038581: goto %0002a0e0

0001d074:
0001d086: R29 := mem[R31, el]:u64
0001d08a: R30 := mem[R31 + 8, el]:u64
0001d08d: R31 := R31 + 0x10
0001d092: call R30 with noreturn

0002a0e0:
0002a0e7: R2 := pad:64[mem[R0 + 1]]
0002a0ee: R0 := R0 + 1
0002a0f5: #15758 := 0xFFFFFFFFFFFFFFE0 + extend:64[31:0[R2]]
0002a0f9: NF := 63:63[#15758]
0002a0fc: VF := 31:31[R2] & ~63:63[#15758]
0002a0ff: ZF := #15758 = 0
0002a102: CF := 31:31[R2] | 31:31[R2] & ~63:63[#15758] | ~63:63[#15758]
0002a111: #15760 := ~ZF <> 0
0002a10b: when #15760 goto %0002a109
00038580: goto %0002a128

0002a128:
0003857f: goto %0002a12a

0002a12a:
0002a131: #15762 := 0xFFFFFFFFFFFFFFE0 + extend:64[31:0[R1]]
0002a135: NF := 63:63[#15762]
0002a138: VF := 31:31[R1] & ~63:63[#15762]
0002a13b: ZF := #15762 = 0
0002a13e: CF := 31:31[R1] | 31:31[R1] & ~63:63[#15762] | ~63:63[#15762]
0002a14c: #15764 := ZF
0002a146: when #15764 goto %0002a12a
0003857e: goto %0002a109

0002a109:
0002a11b: R29 := mem[R31, el]:u64
0002a11f: R30 := mem[R31 + 8, el]:u64
0002a122: R31 := R31 + 0x10
0002a126: call @strdup with noreturn

00038582: sub getaddrinfo(getaddrinfo_result)
00038ae7: getaddrinfo_result :: out u32 = low:32[R0]

00014626:
00030713: R16 := 0x27000
0003071b: R17 := mem[R16 + 0xEA0, el]:u64
00030722: R16 := R16 + 0xEA0
00030727: call R17 with noreturn

00038583: sub geteuid(geteuid_result)
00038ae8: geteuid_result :: out u32 = low:32[R0]

0002c225:
000300ba: R16 := 0x27000
000300c2: R17 := mem[R16 + 0xC98, el]:u64
000300c9: R16 := R16 + 0xC98
000300ce: call R17 with noreturn

00038584: sub getgid(getgid_result)
00038ae9: getgid_result :: out u32 = low:32[R0]

0002f73a:
00030632: R16 := 0x27000
0003063a: R17 := mem[R16 + 0xE58, el]:u64
00030641: R16 := R16 + 0xE58
00030646: call R17 with noreturn

00038585: sub gethostname(gethostname_buf, gethostname_len, gethostname_result)
00038aea: gethostname_buf :: in out u64 = R0
00038aeb: gethostname_len :: in u64 = R1
00038aec: gethostname_result :: out u32 = low:32[R0]

0002f199:
0003075e: R16 := 0x27000
00030766: R17 := mem[R16 + 0xEB8, el]:u64
0003076d: R16 := R16 + 0xEB8
00030772: call R17 with noreturn

00038586: sub getpid(getpid_result)
00038aed: getpid_result :: out u32 = low:32[R0]

0002c41b:
000301e6: R16 := 0x27000
000301ee: R17 := mem[R16 + 0xCF8, el]:u64
000301f5: R16 := R16 + 0xCF8
000301fa: call R17 with noreturn

00038587: sub getpwnam(getpwnam_result)
00038aee: getpwnam_result :: out u32 = low:32[R0]

0002c26f:
0003032b: R16 := 0x27000
00030333: R17 := mem[R16 + 0xD60, el]:u64
0003033a: R16 := R16 + 0xD60
0003033f: call R17 with noreturn

00038588: sub getuid(getuid_result)
00038aef: getuid_result :: out u32 = low:32[R0]

0002c211:
00030105: R16 := 0x27000
0003010d: R17 := mem[R16 + 0xCB0, el]:u64
00030114: R16 := R16 + 0xCB0
00030119: call R17 with noreturn

00038589: sub gl_des_ecb_crypt(gl_des_ecb_crypt_result)
00038af0: gl_des_ecb_crypt_result :: out u32 = low:32[R0]

00010946:
0001094e: mem := mem with [R31 - 0x30, el]:u64 <- R29
00010952: mem := mem with [R31 - 0x28, el]:u64 <- R30
00010955: R31 := R31 - 0x30
0001095c: R29 := R31
00010965: mem := mem with [R31, el]:u64 <- R31 + 0x20
00010969: mem := mem with [R31, el]:u64 <- R31 + 0x28
00010972: mem := mem with [R31, el]:u64 <- R31 + 0x40
00010976: mem := mem with [R31, el]:u64 <- R31 + 0x48
00010982: #1756 := 31:0[R3] = 0
0001097c: when #1756 goto %0001097a
0003858b: goto %0001a54a

0001097a:
0001098b: R18 := pad:64[mem[R0, el]:u32]
00010993: R3 := R0
00010998: goto %00010996

0001a54a:
0001a551: R18 := pad:64[mem[R0 + 0x80, el]:u32]
0001a558: R3 := R0 + 0x80
0003858a: goto %00010996

00010996:
0001099f: R0 := 0x11000
000109ac: R0 := R0 + 0x8E0
000109b5: R1 := 31:0[R4] ^ 31:0[R12] >> 4
000109bc: R10 := R0 + 0x290
000109c4: R1 := 31:0[R1] & 0xF0F0F0F
000109cb: R9 := R0 + 0x390
000109d4: R4 := 31:0[R4] ^ 31:0[R1]
000109db: R11 := R0 + 0x490
000109e4: R12 := 31:0[R12] ^ 31:0[R1] << 4
000109eb: R8 := R0 + 0x590
000109f2: R7 := R0 + 0x690
000109f9: R6 := R0 + 0x790
00010a02: R1 := 31:0[R4] ^ 31:0[R12] >> 0x10
00010a09: R5 := R0 + 0x890
00010a11: R1 := 31:0[R1] & 0xFFFF
00010a18: R0 := R0 + 0x990
00010a21: R4 := 31:0[R4] ^ 31:0[R1]
00010a2a: R1 := 31:0[R12] ^ 31:0[R1] << 0x10
00010a33: R13 := 31:0[R1] ^ 31:0[R4] >> 2
00010a3b: R13 := 31:0[R13] & 0x33333333
00010a44: R1 := 31:0[R1] ^ 31:0[R13]
00010a4d: R4 := 31:0[R4] ^ 31:0[R13] << 2
00010a58: R13 := 31:0[R1] ^ 31:0[R4] >> 8
00010a60: R13 := 31:0[R13] & 0xFF00FF
00010a69: R1 := 31:0[R1] ^ 31:0[R13]
00010a72: R13 := 31:0[R4] ^ 31:0[R13] << 8
00010a7f: R4 := 31:0[R1] ^ 31:0[R13]
00010a87: R4 := 31:0[R4] & 0xAAAAAAAA
00010a90: R13 := 31:0[R13] ^ 31:0[R4]
00010a99: R1 := 31:0[R1] ^ 31:0[R4]
00010aa2: R18 := 31:0[R18] ^ 31:0[R13]
00010aa9: R19 := R18 & 0x3F
00010ab2: R30 := 31:0[R30] ^ (31:0[R13] >> 4 | 31:0[R13] << 0x1C)
00010ab9: R4 := pad:64[13:8[R18]]
00010ac0: R20 := pad:64[21:16[R18]]
00010ac7: R21 := R30 & 0x3F
00010ace: R18 := pad:64[29:24[R18]]
00010ad7: R22 := pad:64[13:8[R30]]
00010ae6: R19 := 31:0[R19] ^ (31:0[R1] >> 0x1F | 31:0[R1] << 1)
00010aef: R4 := 31:0[R4] ^ 31:0[R20]
00010af6: R20 := pad:64[21:16[R30]]
00010aff: R30 := pad:64[29:24[R30]]
00010b0a: R4 := 31:0[R4] ^ 31:0[R19]
00010b15: R18 := 31:0[R18] ^ 31:0[R21]
00010b1e: R4 := 31:0[R4] ^ 31:0[R18]
00010b29: R1 := 31:0[R1] ^ 31:0[R19]
00010b32: R4 := 31:0[R4] ^ 31:0[R1]
00010b3b: R18 := 31:0[R4] ^ 31:0[R18]
00010b44: R17 := 31:0[R18] ^ 31:0[R17]
00010b4b: R4 := R17 & 0x3F
00010b54: R16 := 31:0[R16] ^ (31:0[R18] >> 4 | 31:0[R18] << 0x1C)
00010b5b: R1 := pad:64[13:8[R17]]
00010b62: R21 := pad:64[21:16[R17]]
00010b69: R20 := R16 & 0x3F
00010b70: R17 := pad:64[29:24[R17]]
00010b79: R19 := pad:64[21:16[R16]]
00010b80: R4 := pad:64[13:8[R16]]
00010b8b: R16 := pad:64[29:24[R16]]
00010b96: R13 := 31:0[R13] ^ 31:0[R30]
00010ba1: R1 := 31:0[R1] ^ 31:0[R21]
00010bac: R1 := 31:0[R1] ^ 31:0[R13]
00010bb7: R13 := 31:0[R17] ^ 31:0[R20]
00010bc0: R1 := 31:0[R1] ^ 31:0[R13]
00010bcb: R4 := 31:0[R4] ^ 31:0[R19]
00010bd4: R1 := 31:0[R1] ^ 31:0[R4]
00010bdd: R17 := 31:0[R1] ^ 31:0[R17]
00010be6: R15 := 31:0[R17] ^ 31:0[R15]
00010bed: R13 := R15 & 0x3F
00010bf6: R14 := 31:0[R14] ^ (31:0[R17] >> 4 | 31:0[R17] << 0x1C)
00010bfd: R4 := pad:64[13:8[R15]]
00010c04: R20 := pad:64[21:16[R15]]
00010c0b: R16 := R14 & 0x3F
00010c12: R15 := pad:64[29:24[R15]]
00010c1b: R19 := pad:64[21:16[R14]]
00010c22: R1 := pad:64[13:8[R14]]
00010c2f: R18 := 31:0[R18] ^ 31:0[R13]
00010c38: R14 := pad:64[29:24[R14]]
00010c43: R4 := 31:0[R4] ^ 31:0[R20]
00010c4e: R4 := 31:0[R4] ^ 31:0[R18]
00010c59: R13 := 31:0[R13] ^ 31:0[R16]
00010c64: R4 := 31:0[R4] ^ 31:0[R13]
00010c6d: R1 := 31:0[R1] ^ 31:0[R15]
00010c76: R4 := 31:0[R4] ^ 31:0[R1]
00010c81: R18 := 31:0[R4] ^ 31:0[R18]
00010c8a: R12 := 31:0[R18] ^ 31:0[R12]
00010c91: R4 := R12 & 0x3F
00010c9a: R16 := 31:0[R16] ^ (31:0[R18] >> 4 | 31:0[R18] << 0x1C)
00010ca1: R1 := pad:64[13:8[R12]]
00010ca8: R21 := pad:64[21:16[R12]]
00010caf: R20 := R16 & 0x3F
00010cb6: R12 := pad:64[29:24[R12]]
00010cbf: R19 := pad:64[21:16[R16]]
00010cc6: R4 := pad:64[13:8[R16]]
00010ccf: R16 := pad:64[29:24[R16]]
00010cda: R17 := 31:0[R17] ^ 31:0[R30]
00010ce7: R1 := 31:0[R1] ^ 31:0[R21]
00010cf2: R1 := 31:0[R1] ^ 31:0[R17]
00010cfd: R12 := 31:0[R12] ^ 31:0[R20]
00010d08: R1 := 31:0[R1] ^ 31:0[R12]
00010d11: R4 := 31:0[R4] ^ 31:0[R19]
00010d1a: R16 := pad:64[mem[R3 + 0x34, el]:u32]
00010d23: R1 := 31:0[R1] ^ 31:0[R4]
00010d2c: R17 := 31:0[R1] ^ 31:0[R17]
00010d35: R15 := 31:0[R17] ^ 31:0[R15]
00010d3e: R1 := R15 & 0x3F
00010d45: R4 := pad:64[13:8[R15]]
00010d4c: R21 := pad:64[21:16[R15]]
00010d53: R15 := pad:64[29:24[R15]]
00010d5e: R14 := 31:0[R14] ^ (31:0[R17] >> 4 | 31:0[R17] << 0x1C)
00010d65: R20 := R14 & 0x3F
00010d70: R18 := 31:0[R18] ^ 31:0[R19]
00010d77: R1 := pad:64[13:8[R14]]
00010d7e: R19 := pad:64[21:16[R14]]
00010d89: R14 := pad:64[29:24[R14]]
00010d94: R4 := 31:0[R4] ^ 31:0[R21]
00010d9f: R4 := 31:0[R4] ^ 31:0[R18]
00010daa: R18 := 31:0[R15] ^ 31:0[R20]
00010db3: R4 := 31:0[R4] ^ 31:0[R18]
00010dbe: R1 := 31:0[R1] ^ 31:0[R19]
00010dc9: R4 := 31:0[R4] ^ 31:0[R1]
00010dd2: R15 := 31:0[R4] ^ 31:0[R15]
00010ddb: R13 := 31:0[R15] ^ 31:0[R13]
00010de2: R18 := R13 & 0x3F
00010deb: R14 := 31:0[R30] ^ (31:0[R15] >> 4 | 31:0[R15] << 0x1C)
00010df2: R1 := pad:64[13:8[R13]]
00010df9: R20 := pad:64[21:16[R13]]
00010e00: R19 := R14 & 0x3F
00010e07: R13 := pad:64[29:24[R13]]
00010e10: R4 := pad:64[13:8[R14]]
00010e17: R18 := pad:64[21:16[R14]]
00010e22: R14 := pad:64[29:24[R14]]
00010e2d: R17 := 31:0[R17] ^ 31:0[R21]
00010e38: R1 := 31:0[R1] ^ 31:0[R20]
00010e43: R1 := 31:0[R1] ^ 31:0[R17]
00010e4e: R13 := 31:0[R13] ^ 31:0[R19]
00010e59: R1 := 31:0[R1] ^ 31:0[R13]
00010e62: R4 := 31:0[R4] ^ 31:0[R18]
00010e6b: R1 := 31:0[R1] ^ 31:0[R4]
00010e74: R17 := 31:0[R1] ^ 31:0[R17]
00010e7d: R12 := 31:0[R17] ^ 31:0[R12]
00010e86: R13 := 31:0[R16] ^ (31:0[R17] >> 4 | 31:0[R17] << 0x1C)
00010e8d: R18 := R12 & 0x3F
00010e94: R19 := pad:64[21:16[R12]]
00010e9b: R4 := pad:64[13:8[R12]]
00010ea2: R16 := R13 & 0x3F
00010ea9: R12 := pad:64[29:24[R12]]
00010eb0: R1 := pad:64[13:8[R13]]
00010eb7: R14 := pad:64[21:16[R13]]
00010ec0: R13 := pad:64[29:24[R13]]
00010ecf: R4 := 31:0[R4] ^ 31:0[R19]
00010eda: R15 := 31:0[R15] ^ 31:0[R18]
00010ee5: R4 := 31:0[R4] ^ 31:0[R15]
00010ef0: R12 := 31:0[R12] ^ 31:0[R16]
00010ef9: R4 := 31:0[R4] ^ 31:0[R12]
00010f04: R1 := 31:0[R1] ^ 31:0[R14]
00010f0f: R4 := 31:0[R4] ^ 31:0[R1]
00010f18: R16 := 31:0[R4] ^ 31:0[R16]
00010f21: R12 := 31:0[R16] ^ 31:0[R12]
00010f28: R18 := R12 & 0x3F
00010f31: R14 := 31:0[R14] ^ (31:0[R16] >> 4 | 31:0[R16] << 0x1C)
00010f38: R1 := pad:64[13:8[R12]]
00010f3f: R20 := pad:64[21:16[R12]]
00010f46: R19 := R14 & 0x3F
00010f4d: R12 := pad:64[29:24[R12]]
00010f56: R4 := pad:64[13:8[R14]]
00010f5d: R18 := pad:64[21:16[R14]]
00010f68: R14 := pad:64[29:24[R14]]
00010f73: R17 := 31:0[R17] ^ 31:0[R21]
00010f7e: R1 := 31:0[R1] ^ 31:0[R20]
00010f89: R1 := 31:0[R1] ^ 31:0[R17]
00010f94: R12 := 31:0[R12] ^ 31:0[R19]
00010f9f: R1 := 31:0[R1] ^ 31:0[R12]
00010faa: R4 := 31:0[R4] ^ 31:0[R18]
00010fb3: R1 := 31:0[R1] ^ 31:0[R4]
00010fbc: R1 := 31:0[R1] ^ 31:0[R17]
00010fc5: R13 := 31:0[R1] ^ 31:0[R13]
00010fcc: R18 := R13 & 0x3F
00010fd5: R15 := 31:0[R15] ^ (31:0[R1] >> 4 | 31:0[R1] << 0x1C)
00010fdc: R17 := pad:64[21:16[R13]]
00010fe3: R4 := pad:64[13:8[R13]]
00010fea: R19 := R15 & 0x3F
00010ff1: R13 := pad:64[29:24[R13]]
00010ffa: R20 := pad:64[13:8[R15]]
00011001: R18 := pad:64[21:16[R15]]
0001100c: R15 := pad:64[29:24[R15]]
00011017: R16 := 31:0[R16] ^ 31:0[R30]
00011022: R4 := 31:0[R4] ^ 31:0[R21]
0001102d: R4 := 31:0[R4] ^ 31:0[R16]
00011038: R16 := 31:0[R17] ^ 31:0[R19]
00011043: R13 := 31:0[R13] ^ 31:0[R18]
0001104e: R4 := 31:0[R4] ^ 31:0[R16]
00011057: R4 := 31:0[R4] ^ 31:0[R13]
00011060: R17 := 31:0[R4] ^ 31:0[R17]
00011069: R12 := 31:0[R17] ^ 31:0[R12]
00011070: R20 := R12 & 0x3F
00011079: R13 := 31:0[R14] ^ (31:0[R17] >> 4 | 31:0[R17] << 0x1C)
00011080: R4 := pad:64[13:8[R12]]
00011087: R19 := pad:64[21:16[R12]]
0001108e: R15 := R13 & 0x3F
00011095: R12 := pad:64[29:24[R12]]
0001109e: R18 := pad:64[13:8[R13]]
000110a7: R16 := pad:64[21:16[R13]]
000110b2: R1 := 31:0[R1] ^ 31:0[R14]
000110b9: R13 := pad:64[29:24[R13]]
000110c4: R4 := 31:0[R4] ^ 31:0[R19]
000110d1: R4 := 31:0[R4] ^ 31:0[R1]
000110dc: R14 := 31:0[R14] ^ 31:0[R15]
000110e7: R4 := 31:0[R4] ^ 31:0[R14]
000110f0: R1 := 31:0[R12] ^ 31:0[R1]
000110fb: R4 := 31:0[R4] ^ 31:0[R1]
00011104: R16 := 31:0[R4] ^ 31:0[R16]
0001110d: R12 := 31:0[R16] ^ 31:0[R12]
00011114: R4 := R12 & 0x3F
0001111d: R14 := 31:0[R14] ^ (31:0[R16] >> 4 | 31:0[R16] << 0x1C)
00011124: R18 := pad:64[21:16[R12]]
0001112b: R1 := pad:64[13:8[R12]]
00011132: R30 := R14 & 0x3F
00011139: R12 := pad:64[29:24[R12]]
00011142: R20 := pad:64[13:8[R14]]
0001114b: R19 := pad:64[21:16[R14]]
00011156: R4 := 31:0[R17] ^ 31:0[R4]
0001115f: R14 := pad:64[29:24[R14]]
0001116a: R1 := 31:0[R1] ^ 31:0[R21]
00011175: R1 := 31:0[R1] ^ 31:0[R4]
00011180: R17 := 31:0[R18] ^ 31:0[R17]
0001118b: R4 := 31:0[R12] ^ 31:0[R4]
00011194: R1 := 31:0[R1] ^ 31:0[R17]
0001119f: R1 := 31:0[R1] ^ 31:0[R4]
000111a8: R1 := 31:0[R1] ^ 31:0[R17]
000111b1: R13 := 31:0[R1] ^ 31:0[R13]
000111b8: R18 := R13 & 0x3F
000111c1: R15 := 31:0[R15] ^ (31:0[R1] >> 4 | 31:0[R1] << 0x1C)
000111c8: R17 := pad:64[21:16[R13]]
000111cf: R4 := pad:64[13:8[R13]]
000111d6: R19 := R15 & 0x3F
000111dd: R13 := pad:64[29:24[R13]]
000111e6: R20 := pad:64[13:8[R15]]
000111ed: R18 := pad:64[21:16[R15]]
000111f8: R15 := pad:64[29:24[R15]]
00011203: R16 := 31:0[R16] ^ 31:0[R30]
0001120e: R4 := 31:0[R4] ^ 31:0[R21]
00011219: R4 := 31:0[R4] ^ 31:0[R16]
00011224: R16 := 31:0[R17] ^ 31:0[R19]
0001122f: R13 := 31:0[R13] ^ 31:0[R18]
0001123a: R4 := 31:0[R4] ^ 31:0[R16]
00011243: R4 := 31:0[R4] ^ 31:0[R13]
0001124c: R17 := 31:0[R4] ^ 31:0[R17]
00011255: R12 := 31:0[R17] ^ 31:0[R12]
0001125c: R4 := R12 & 0x3F
00011265: R14 := 31:0[R14] ^ (31:0[R17] >> 4 | 31:0[R17] << 0x1C)
0001126c: R20 := pad:64[13:8[R12]]
00011273: R19 := pad:64[21:16[R12]]
0001127a: R13 := pad:64[29:24[R12]]
00011281: R15 := R14 & 0x3F
0001128a: R18 := pad:64[13:8[R14]]
00011293: R16 := pad:64[21:16[R14]]
0001129e: R4 := 31:0[R1] ^ 31:0[R4]
000112a7: R14 := pad:64[29:24[R14]]
000112b2: R1 := 31:0[R12] ^ 31:0[R19]
000112bb: R1 := 31:0[R1] ^ 31:0[R4]
000112c8: R13 := 31:0[R13] ^ 31:0[R15]
000112d3: R1 := 31:0[R1] ^ 31:0[R13]
000112dc: R4 := 31:0[R12] ^ 31:0[R4]
000112e7: R1 := 31:0[R1] ^ 31:0[R4]
000112f0: R16 := 31:0[R1] ^ 31:0[R16]
000112f9: R12 := 31:0[R16] ^ 31:0[R12]
00011300: R19 := R12 & 0x3F
00011309: R15 := 31:0[R15] ^ (31:0[R16] >> 4 | 31:0[R16] << 0x1C)
00011310: R1 := pad:64[21:16[R12]]
00011317: R4 := pad:64[13:8[R12]]
0001131e: R18 := R15 & 0x3F
00011325: R12 := pad:64[29:24[R12]]
0001132e: R30 := pad:64[13:8[R15]]
00011337: R19 := pad:64[21:16[R15]]
00011342: R17 := 31:0[R17] ^ 31:0[R21]
0001134b: R15 := pad:64[29:24[R15]]
00011356: R4 := 31:0[R4] ^ 31:0[R20]
00011361: R4 := 31:0[R4] ^ 31:0[R17]
0001136c: R1 := 31:0[R1] ^ 31:0[R18]
00011377: R12 := 31:0[R12] ^ 31:0[R17]
00011382: R4 := 31:0[R4] ^ 31:0[R1]
0001138b: R4 := 31:0[R4] ^ 31:0[R12]
00011394: R4 := 31:0[R4] ^ 31:0[R15]
0001139d: R13 := 31:0[R4] ^ 31:0[R13]
000113a6: R15 := R13 & 0x3F
000113ad: R30 := pad:64[21:16[R13]]
000113b4: R3 := pad:64[13:8[R13]]
000113bd: R14 := 31:0[R14] ^ (31:0[R4] >> 4 | 31:0[R4] << 0x1C)
000113c4: R13 := pad:64[29:24[R13]]
000113cb: R17 := R14 & 0x3F
000113d6: R19 := pad:64[13:8[R14]]
000113df: R18 := pad:64[21:16[R14]]
000113ea: R16 := 31:0[R16] ^ 31:0[R15]
000113f3: R3 := 31:0[R3] ^ 31:0[R30]
000113fc: R14 := pad:64[29:24[R14]]
00011407: R3 := 31:0[R3] ^ 31:0[R16]
00011412: R15 := 31:0[R15] ^ 31:0[R17]
0001141d: R13 := 31:0[R13] ^ 31:0[R16]
00011426: R3 := 31:0[R3] ^ 31:0[R15]
0001142f: R3 := 31:0[R3] ^ 31:0[R13]
00011438: R3 := 31:0[R3] ^ 31:0[R14]
00011441: R1 := 31:0[R3] ^ 31:0[R1]
0001144a: R12 := 31:0[R12] ^ (31:0[R3] >> 4 | 31:0[R3] << 0x1C)
00011451: R19 := R1 & 0x3F
00011458: R17 := pad:64[21:16[R1]]
0001145f: R18 := pad:64[13:8[R1]]
00011466: R13 := pad:64[29:24[R1]]
0001146d: R16 := R12 & 0x3F
00011474: R15 := pad:64[13:8[R12]]
0001147b: R14 := pad:64[21:16[R12]]
00011484: R12 := pad:64[29:24[R12]]
00011491: R4 := 31:0[R4] ^ 31:0[R11]
0001149e: R1 := 31:0[R1] ^ 31:0[R9]
000114a9: R1 := 31:0[R1] ^ 31:0[R4]
000114b4: R4 := 31:0[R8] ^ 31:0[R7]
000114bd: R1 := 31:0[R1] ^ 31:0[R4]
000114c8: R0 := 31:0[R6] ^ 31:0[R5]
000114d1: R0 := 31:0[R1] ^ 31:0[R0]
000114da: R0 := 31:0[R0] ^ 31:0[R4]
000114e3: R19 := mem[R31 + 0x10, el]:u64
000114e7: R20 := mem[R31 + 0x18, el]:u64
000114f2: R1 := 31:0[R3] ^ 31:0[R0]
000114fa: R1 := 31:0[R1] & 0xAAAAAAAA
00011503: R3 := 31:0[R3] ^ 31:0[R1]
0001150c: R0 := 31:0[R0] ^ 31:0[R1]
00011515: R21 := mem[R31 + 0x20, el]:u64
00011519: R22 := mem[R31 + 0x28, el]:u64
00011525: R29 := mem[R31, el]:u64
00011529: R30 := mem[R31 + 8, el]:u64
0001152c: R31 := R31 + 0x30
00011535: R1 := 31:0[R0] ^ 31:0[R3] >> 8
0001153d: R1 := 31:0[R1] & 0xFF00FF
00011546: R0 := 31:0[R0] ^ 31:0[R1]
0001154f: R3 := 31:0[R3] ^ 31:0[R1] << 8
00011558: R1 := 31:0[R0] ^ 31:0[R3] >> 2
00011560: R1 := 31:0[R1] & 0x33333333
00011569: R0 := 31:0[R0] ^ 31:0[R1]
00011572: R1 := 31:0[R3] ^ 31:0[R1] << 2
0001157b: R3 := 31:0[R1] ^ 31:0[R0] >> 0x10
00011583: R3 := 31:0[R3] & 0xFFFF
0001158c: R1 := 31:0[R1] ^ 31:0[R3]
00011595: R0 := 31:0[R0] ^ 31:0[R3] << 0x10
0001159e: R3 := 31:0[R1] ^ 31:0[R0] >> 4
000115a6: R3 := 31:0[R3] & 0xF0F0F0F
000115af: R1 := 31:0[R1] ^ 31:0[R3]
000115b8: R3 := 31:0[R0] ^ 31:0[R3] << 4
000115c3: call R30 with noreturn

0003858c: sub gl_des_is_weak_key(gl_des_is_weak_key_result)
00038af1: gl_des_is_weak_key_result :: out u32 = low:32[R0]

000104ed:
000104f5: mem := mem with [R31 - 0x50, el]:u64 <- R29
000104f9: mem := mem with [R31 - 0x48, el]:u64 <- R30
000104fc: R31 := R31 - 0x50
00010505: R29 := R31
0001050e: mem := mem with [R31, el]:u64 <- R31 + 0x20
00010512: mem := mem with [R31, el]:u64 <- R31 + 0x28
00010519: R20 := 0
00010522: mem := mem with [R31, el]:u64 <- R31 + 0x40
00010526: mem := mem with [R31, el]:u64 <- R31 + 0x48
0001052c: R22 := 0x11000
00010533: R22 := R22 + 0x8E0
0001053c: mem := mem with [R31, el]:u64 <- R31 + 0x60
00010540: mem := mem with [R31, el]:u64 <- R31 + 0x68
00010546: R23 := 0x27000
0001054d: R24 := R31 + 0x40
00010556: R22 := R22 + 0x90
0001055e: R0 := mem[R23 + 0xFB8, el]:u64
00010565: R21 := 0x3F
0001056f: R1 := mem[R0, el]:u64
00010577: mem := mem with [R31 + 0x48, el]:u64 <- R1
0001057d: R1 := 0
00038596: goto %00010581

00010581:
00010588: R19 := 31:0[R20] + 31:0[R21]
00010590: R0 := R24
00010596: R2 := 8
0001059e: R19 := extend:64[31:1[R19]]
000105a5: R30 := 0x7488
000105a8: call @memcmp with return %000105aa

000105aa:
000105af: #1676 := extend:64[31:0[R0]]
000105b3: NF := 63:63[#1676]
000105b6: VF := 31:31[R0] & ~63:63[#1676]
000105b9: ZF := #1676 = 0
000105bc: CF := 31:31[R0] | 31:31[R0] & ~63:63[#1676] | ~63:63[#1676]
000105cb: #1677 := 31:0[R0] = 0
000105c5: when #1677 goto %000105c3
00038595: goto %000106d5

000106d5:
000106ea: #1704 := (NF <> VF | ZF) <> 0
000106e4: when #1704 goto %00010660
00038594: goto %000106ed

00010660:
00010666: R21 := extend:64[31:0[R19]] - 1
0001066e: #1691 := 1 + extend:64[~31:0[R20]] + extend:64[31:0[R21]]
00010672: NF := 63:63[#1691]
00010675: VF := 31:31[~31:0[R20]] & 31:31[R21] & ~63:63[#1691] |
          ~31:31[~31:0[R20]] & ~31:31[R21] & 63:63[#1691]
00010678: ZF := #1691 = 0
0001067b: CF := 31:31[~31:0[R20]] & 31:31[R21] | 31:31[R21] & ~63:63[#1691] |
          31:31[~31:0[R20]] & ~63:63[#1691]
0001068b: #1693 := NF <> VF
00010685: when #1693 goto %00010683
00038593: goto %00010694

00010694:
0001069b: R19 := 31:0[R20] + 31:0[R21]
000106a3: R0 := R24
000106a9: R2 := 8
000106b1: R19 := extend:64[31:1[R19]]
000106b8: R30 := 0x74F4
000106ba: call @memcmp with return %000106bc

000106bc:
000106c1: #1701 := extend:64[31:0[R0]]
000106c5: NF := 63:63[#1701]
000106c8: VF := 31:31[R0] & ~63:63[#1701]
000106cb: ZF := #1701 = 0
000106ce: CF := 31:31[R0] | 31:31[R0] & ~63:63[#1701] | ~63:63[#1701]
000106dd: #1702 := ~31:0[R0] = 0
000106d7: when #1702 goto %000106d5
00038592: goto %000105c3

000105c3:
000105d2: R0 := 1
000105d7: goto %000105d5

000106ed:
000106f3: R20 := extend:64[31:0[R19]] + 1
000106fb: #1708 := 1 + extend:64[~31:0[R21]] + extend:64[31:0[R20]]
000106ff: NF := 63:63[#1708]
00010702: VF := 31:31[~31:0[R21]] & 31:31[R20] & ~63:63[#1708] |
          ~31:31[~31:0[R21]] & ~31:31[R20] & 63:63[#1708]
00010705: ZF := #1708 = 0
00010708: CF := 31:31[~31:0[R21]] & 31:31[R20] | 31:31[R20] & ~63:63[#1708] |
          31:31[~31:0[R21]] & ~63:63[#1708]
00010718: #1710 := (NF <> VF | ZF) <> 0
00010712: when #1710 goto %00010581
00038591: goto %00010683

00010683:
00010692: R0 := 0
00038590: goto %000105d5

000105d5:
000105de: R23 := mem[R23 + 0xFB8, el]:u64
000105e6: R1 := mem[R31 + 0x48, el]:u64
000105ee: R2 := mem[R23, el]:u64
000105f6: #1681 := 1 + ~R2 + R1
000105fa: NF := 63:63[#1681]
000105fd: VF := 63:63[R1] & 63:63[~R2] & ~63:63[#1681] | ~63:63[R1] &
          ~63:63[~R2] & 63:63[#1681]
00010600: ZF := #1681 = 0
00010603: CF := 63:63[R1] & 63:63[~R2] | 63:63[~R2] & ~63:63[#1681] |
          63:63[R1] & ~63:63[#1681]
00010607: R1 := #1681
0001060d: R2 := 0
00010619: #1683 := ~ZF <> 0
00010613: when #1683 goto %00010611
0003858f: goto %00010623

00010611:
0001061e: R30 := 0x7508
00010621: call @__stack_chk_fail with return %0003858d

0003858d:
0003858e: call @gl_des_setkey with noreturn

00010623:
0001062a: R19 := mem[R31 + 0x10, el]:u64
0001062e: R20 := mem[R31 + 0x18, el]:u64
00010637: R21 := mem[R31 + 0x20, el]:u64
0001063b: R22 := mem[R31 + 0x28, el]:u64
00010644: R23 := mem[R31 + 0x30, el]:u64
00010648: R24 := mem[R31 + 0x38, el]:u64
00010652: R29 := mem[R31, el]:u64
00010656: R30 := mem[R31 + 8, el]:u64
00010659: R31 := R31 + 0x50
0001065e: call R30 with noreturn

00038597: sub gl_des_makekey(gl_des_makekey_result)
00038af2: gl_des_makekey_result :: out u32 = low:32[R0]

00010759:
00010761: mem := mem with [R31 - 0x60, el]:u64 <- R29
00010765: mem := mem with [R31 - 0x58, el]:u64 <- R30
00010768: R31 := R31 - 0x60
0001076f: #1713 := 0xFFFFFFFFFFFFFFF8 + R2
00010773: NF := 63:63[#1713]
00010776: VF := 63:63[R2] & ~63:63[#1713]
00010779: ZF := #1713 = 0
0001077c: CF := 63:63[R2] | ~63:63[#1713] | 63:63[R2] & ~63:63[#1713]
00010785: R29 := R31
0001078e: mem := mem with [R31, el]:u64 <- R31 + 0x20
00010792: mem := mem with [R31, el]:u64 <- R31 + 0x28
00010798: R20 := 0x27000
000107a0: R19 := R0
000107a8: R3 := mem[R20 + 0xFB8, el]:u64
000107b0: R0 := mem[R3, el]:u64
000107b8: mem := mem with [R31 + 0x58, el]:u64 <- R0
000107be: R0 := 0
000107ca: #1720 := ZF
000107c4: when #1720 goto %000107c2
000385a0: goto %000108d5

000107c2:
000107d3: mem := mem with [R31, el]:u64 <- R31 + 0x60
000107d7: mem := mem with [R31, el]:u64 <- R31 + 0x68
000107df: R23 := R1
000107e7: R0 := R23
000107ef: R1 := R19
000107f8: mem := mem with [R31, el]:u64 <- R31 + 0x40
000107fc: mem := mem with [R31, el]:u64 <- R31 + 0x48
00010802: R24 := 0x11000
0001080a: mem := mem with [R31 + 0x40, el]:u64 <- R25
0001080f: R30 := 0x75E0
00010811: call @des_key_schedule with return %00010813

00010813:
0001081e: R24 := R24 + 0x8E0
00010827: R24 := R24 + 0x90
00010830: R25 := R31 + 0x50
00010839: R22 := 0x3F
00010842: R21 := 0
0003859f: goto %00010860

00010860:
00010867: R19 := 31:0[R21] + 31:0[R22]
0001086f: R0 := R25
00010875: R2 := 8
0001087d: R19 := extend:64[31:1[R19]]
00010884: R30 := 0x7660
00010886: call @memcmp with return %00010888

00010888:
0001088d: #1740 := extend:64[31:0[R0]]
00010891: NF := 63:63[#1740]
00010894: VF := 31:31[R0] & ~63:63[#1740]
00010897: ZF := #1740 = 0
0001089a: CF := 31:31[R0] | 31:31[R0] & ~63:63[#1740] | ~63:63[#1740]
000108a9: #1741 := 31:0[R0] = 0
000108a3: when #1741 goto %000108a1
0003859e: goto %0001a57d

0001a57d:
0001a589: #9005 := (NF <> VF | ZF) <> 0
0001a583: when #9005 goto %0001a581
0003859d: goto %0001a630

0001a581:
0001a591: R22 := extend:64[31:0[R19]] - 1
0001a599: #9009 := 1 + extend:64[~31:0[R21]] + extend:64[31:0[R22]]
0001a59d: NF := 63:63[#9009]
0001a5a0: VF := 31:31[~31:0[R21]] & 31:31[R22] & ~63:63[#9009] |
          ~31:31[~31:0[R21]] & ~31:31[R22] & 63:63[#9009]
0001a5a3: ZF := #9009 = 0
0001a5a6: CF := 31:31[~31:0[R21]] & 31:31[R22] | 31:31[R22] & ~63:63[#9009] |
          31:31[~31:0[R21]] & ~63:63[#9009]
0001a5b6: #9011 := NF <> VF
0001a5b0: when #9011 goto %0001a5ae
0003859c: goto %0001a5e5

0001a5e5:
0001a5ec: R19 := 31:0[R21] + 31:0[R22]
0001a5f4: R0 := R25
0001a5fa: R2 := 8
0001a602: R19 := extend:64[31:1[R19]]
0001a609: R30 := 0x76B0
0001a60b: call @memcmp with return %0001a60d

0001a60d:
0001a612: #9021 := extend:64[31:0[R0]]
0001a616: NF := 63:63[#9021]
0001a619: VF := 31:31[R0] & ~63:63[#9021]
0001a61c: ZF := #9021 = 0
0001a61f: CF := 31:31[R0] | 31:31[R0] & ~63:63[#9021] | ~63:63[#9021]
0001a62d: #9022 := ~31:0[R0] = 0
0001a627: when #9022 goto %0001a57d
0003859b: goto %000108a1

000108a1:
000108b0: R0 := 0
000108b9: R21 := mem[R31 + 0x20, el]:u64
000108bd: R22 := mem[R31 + 0x28, el]:u64
000108c6: R23 := mem[R31 + 0x30, el]:u64
000108ca: R24 := mem[R31 + 0x38, el]:u64
000108d2: R25 := mem[R31 + 0x40, el]:u64
000108d7: goto %000108d5

0001a630:
0001a636: R21 := extend:64[31:0[R19]] + 1
0001a63e: #9026 := 1 + extend:64[~31:0[R22]] + extend:64[31:0[R21]]
0001a642: NF := 63:63[#9026]
0001a645: VF := 31:31[~31:0[R22]] & 31:31[R21] & ~63:63[#9026] |
          ~31:31[~31:0[R22]] & ~31:31[R21] & 63:63[#9026]
0001a648: ZF := #9026 = 0
0001a64b: CF := 31:31[~31:0[R22]] & 31:31[R21] | 31:31[R21] & ~63:63[#9026] |
          31:31[~31:0[R22]] & ~63:63[#9026]
0001a65b: #9028 := (NF <> VF | ZF) <> 0
0001a655: when #9028 goto %00010860
0003859a: goto %0001a5ae

0001a5ae:
0001a5bd: R0 := 1
0001a5c6: R21 := mem[R31 + 0x20, el]:u64
0001a5ca: R22 := mem[R31 + 0x28, el]:u64
0001a5d3: R23 := mem[R31 + 0x30, el]:u64
0001a5d7: R24 := mem[R31 + 0x38, el]:u64
0001a5df: R25 := mem[R31 + 0x40, el]:u64
0001a5e3: goto %000108d5

000108d5:
000108de: R20 := mem[R20 + 0xFB8, el]:u64
000108e6: R1 := mem[R31 + 0x58, el]:u64
000108ee: R2 := mem[R20, el]:u64
000108f6: #1747 := 1 + ~R2 + R1
000108fa: NF := 63:63[#1747]
000108fd: VF := 63:63[R1] & 63:63[~R2] & ~63:63[#1747] | ~63:63[R1] &
          ~63:63[~R2] & 63:63[#1747]
00010900: ZF := #1747 = 0
00010903: CF := 63:63[R1] & 63:63[~R2] | 63:63[~R2] & ~63:63[#1747] |
          63:63[R1] & ~63:63[#1747]
00010907: R1 := #1747
0001090d: R2 := 0
00010919: #1749 := ~ZF <> 0
00010913: when #1749 goto %00010911
00038599: goto %0001a55a

00010911:
00010922: mem := mem with [R31, el]:u64 <- R31 + 0x40
00010926: mem := mem with [R31, el]:u64 <- R31 + 0x48
0001092f: mem := mem with [R31, el]:u64 <- R31 + 0x60
00010933: mem := mem with [R31, el]:u64 <- R31 + 0x68
0001093b: mem := mem with [R31 + 0x40, el]:u64 <- R25
00010940: R30 := 0x76DC
00010942: call @__stack_chk_fail with return %00010944

00010944:
00038598: call @gl_des_ecb_crypt with noreturn

0001a55a:
0001a561: R19 := mem[R31 + 0x10, el]:u64
0001a565: R20 := mem[R31 + 0x18, el]:u64
0001a56f: R29 := mem[R31, el]:u64
0001a573: R30 := mem[R31 + 8, el]:u64
0001a576: R31 := R31 + 0x60
0001a57b: call R30 with noreturn

000385a1: sub gl_des_setkey(gl_des_setkey_result)
00038af3: gl_des_setkey_result :: out u32 = low:32[R0]

0000fe05:
0000fe10: mem := mem with [R31 - 0x20, el]:u64 <- R29
0000fe14: mem := mem with [R31 - 0x18, el]:u64 <- R30
0000fe17: R31 := R31 - 0x20
0000fe1e: R29 := R31
0000fe26: mem := mem with [R31 + 0x10, el]:u64 <- R19
0000fe2e: R19 := R0
0000fe36: R0 := R1
0000fe3e: R1 := R19
0000fe43: R30 := 0x7524
0000fe46: call @des_key_schedule with return %0001071b

0001071b:
00010741: R19 := mem[R31 + 0x10, el]:u64
0001074b: R29 := mem[R31, el]:u64
0001074f: R30 := mem[R31 + 8, el]:u64
00010752: R31 := R31 + 0x20
00010757: call R30 with noreturn

000385a2: sub headers_recv(headers_recv_result)
00038af4: headers_recv_result :: out u32 = low:32[R0]

0001d096:
0001d09e: mem := mem with [R31 - 0xA0, el]:u64 <- R29
0001d0a2: mem := mem with [R31 - 0x98, el]:u64 <- R30
0001d0a5: R31 := R31 - 0xA0
0001d0ac: R29 := R31
0001d0b5: mem := mem with [R31, el]:u64 <- R31 + 0x40
0001d0b9: mem := mem with [R31, el]:u64 <- R31 + 0x48
0001d0bf: R22 := 0x27000
0001d0c8: R21 := 31:0[R0]
0001d0d0: R2 := mem[R22 + 0xFB8, el]:u64
0001d0d9: mem := mem with [R31, el]:u64 <- R31 + 0x20
0001d0dd: mem := mem with [R31, el]:u64 <- R31 + 0x28
0001d0e5: R20 := R1
0001d0ed: R3 := mem[R2, el]:u64
0001d0f5: mem := mem with [R31 + 0x98, el]:u64 <- R3
0001d0fb: R3 := 0
0001d102: R1 := 0x1000
0001d108: R0 := 0x1000
0001d111: mem := mem with [R31, el]:u64 <- R31 + 0x60
0001d115: mem := mem with [R31, el]:u64 <- R31 + 0x68
0001d11c: R23 := R31 + 0x84
0001d125: mem := mem with [R31, el]:u64 <- R31 + 0x80
0001d129: mem := mem with [R31, el]:u64 <- R31 + 0x88
0001d130: R24 := R31 + 0x88
0001d138: mem := mem with [R31 + 0x84, el]:u32 <- 31:0[R1]
0001d140: mem := mem with [R31 + 0x90, el]:u64 <- 0
0001d145: R30 := 0xB8C8
0001d147: call @new with return %0001d149

0001d149:
0001d14f: R3 := R0
0001d157: R2 := R23
0001d160: R0 := 31:0[R21]
0001d168: R1 := R24
0001d170: mem := mem with [R31 + 0x88, el]:u64 <- R3
0001d175: R30 := 0xB8E0
0001d177: call @so_recvln with return %0001d179

0001d179:
0001d17e: #10567 := extend:64[31:0[R0]]
0001d182: NF := 63:63[#10567]
0001d185: VF := 31:31[R0] & ~63:63[#10567]
0001d188: ZF := #10567 = 0
0001d18b: CF := 31:31[R0] | 31:31[R0] & ~63:63[#10567] | ~63:63[#10567]
0001d19c: #10569 := (NF <> VF | ZF) <> 0
0001d196: when #10569 goto %0001d194
000385dd: goto %0002a098

0001d194:
0001d1a5: R19 := 31:0[R0]
0001d1ab: R0 := 0x27000
0001d1b3: mem := mem with [R31 + 0x68, el]:u64 <- R0
000385dc: goto %0001d1b5

0002a098:
0002a09c: R0 := 0x27000
0002a0a4: R1 := R0
0002a0ac: mem := mem with [R31 + 0x68, el]:u64 <- R1
0002a0b5: mem := mem with [R31, el]:u64 <- R31 + 0xA0
0002a0b9: mem := mem with [R31, el]:u64 <- R31 + 0xA8
0002a0c1: R1 := mem[R1 + 0xF78, el]:u64
0002a0c9: R0 := mem[R31 + 0x88, el]:u64
0002a0d2: R1 := pad:64[mem[R1, el]:u32]
0002a0dd: #15757 := ~31:0[R1] = 0
0002a0d7: when #15757 goto %00029c3b
000385db: goto %00029c67

00029c3b:
00029c41: R2 := R0
00029c47: R1 := 0x12000
00029c4e: R0 := 1
00029c55: R1 := R1 + 0x730
00029c5a: R30 := 0xBB70
00029c5c: call @__printf_chk with return %00029c5e

00029c5e:
00029c64: R0 := mem[R31 + 0x88, el]:u64
00029c69: goto %00029c67

00029c67:
00029c6d: R30 := 0xB90C
00029c6f: call @trimr with return %00029c71

00029c71:
00029c76: R19 := R31 + 0x90
00029c7e: R0 := mem[R31 + 0x88, el]:u64
00029c84: R26 := 0x13000
00029c8b: R28 := R26 + 0x178
00029c90: R30 := 0xB920
00029c92: call @strdup with return %00029c94

00029c94:
00029c9a: R25 := R0
00029ca2: R27 := mem[R31 + 0x88, el]:u64
00029caa: R0 := R27
00029caf: R30 := 0xB930
00029cb1: call @strlen with return %00029cb3

00029cb3:
00029cb9: R1 := R28
00029cc1: R2 := R19
00029cc9: mem := mem with [R31 + 0x60, el]:u64 <- R0
00029cd1: R0 := R27
00029cd6: R30 := 0xB944
00029cd8: call @strtok_r with return %00029cda

00029cda:
00029ce0: R27 := R0
00029ceb: #15651 := R0 = 0
00029ce5: when #15651 goto %0001d6b3
000385da: goto %00029cee

00029cee:
00029cf4: R0 := mem[R31 + 0x88, el]:u64
00029cfa: R1 := 0x12000
00029d00: R2 := 5
00029d07: R1 := R1 + 0x740
00029d0c: R30 := 0xB960
00029d0e: call @strncasecmp with return %00029d10

00029d10:
00029d1a: #15652 := 31:0[R0] = 0
00029d14: when #15652 goto %00029d12
000385d9: goto %00029e68

00029e68:
00029e6c: R1 := 0x12000
00029e74: R0 := R27
00029e7b: R1 := R1 + 0x748
00029e81: R2 := 3
00029e86: R30 := 0xB978
00029e88: call @strncasecmp with return %00029e8a

00029e8a:
00029e93: #15694 := 31:0[R0] = 0
00029e8d: when #15694 goto %00029d12
000385d8: goto %00029e96

00029d12:
00029d22: mem := mem with [R20, el]:u32 <- 0
00029d2a: R0 := R27
00029d32: mem := mem with [R20 + 0x1C, el]:u32 <- 0
00029d37: R30 := 0xBB88
00029d39: call @strdup with return %00029d3b

00029d3b:
00029d42: mem := mem with [R20, el]:u64 <- R20 + 0x90
00029d46: mem := mem with [R20, el]:u64 <- R20 + 0x98
00029d4e: R2 := R19
00029d55: R1 := R26 + 0x178
00029d5b: R0 := 0
00029d60: R30 := 0xBB9C
00029d62: call @strtok_r with return %00029d64

00029d64:
00029d6a: R19 := R0
00029d76: #15665 := R0 = 0
00029d70: when #15665 goto %00029d6e
000385d7: goto %00029dd4

00029d6e:
00029d7e: R0 := mem[R20 + 0x50, el]:u64
00029d8a: #15666 := ~R0 = 0
00029d84: when #15666 goto %00029d82
000385d6: goto %00029db8

00029db8:
00029dbc: R0 := 0x14000
00029dc3: R0 := R0 + 0xD00
00029dc8: R30 := 0xBC7C
00029dca: call @strdup with return %00029dcc

00029dcc:
00029dd2: mem := mem with [R20 + 0x50, el]:u64 <- R0
000385d5: goto %00029d82

00029d82:
00029d92: R0 := R25
00029d9d: #15670 := ~R25 = 0
00029d97: when #15670 goto %0001d971
000385d4: goto %00029da0

00029da0:
00029da5: R19 := 0xFFFFFFFFFFFFFFFE
00029dae: R27 := mem[R31 + 0x50, el]:u64
00029db2: R28 := mem[R31 + 0x58, el]:u64
00029db6: goto %0001d1b5

00029dd4:
00029dd7: R30 := 0xBBA8
00029dd9: call @strdup with return %00029ddb

00029ddb:
00029de1: R27 := R0
00029de6: R30 := 0xBBB0
00029de8: call @strlen with return %00029dea

00029dea:
00029df0: R0 := R19 + R0
00029df8: R3 := mem[R31 + 0x88, el]:u64
00029e01: R1 := pad:64[mem[R31 + 0x60, el]:u32]
00029e08: goto %00029e06

00029e06:
00029e10: R1 := pad:64[mem[R0]]
00029e18: #15682 := 1 + ~R0 + R3
00029e1c: NF := 63:63[#15682]
00029e1f: VF := 63:63[R3] & 63:63[~R0] & ~63:63[#15682] | ~63:63[R3] &
          ~63:63[~R0] & 63:63[#15682]
00029e22: ZF := #15682 = 0
00029e25: CF := 63:63[R3] & 63:63[~R0] | 63:63[~R0] & ~63:63[#15682] |
          63:63[R3] & ~63:63[#15682]
00029e34: #15684 := (CF & ~ZF) <> 0
00029e2e: when #15684 goto %00029e2c
000385d3: goto %0001d75b

00029e2c:
00029e3b: #15685 := 0xFFFFFFFFFFFFFFE0 + extend:64[31:0[R1]]
00029e3f: NF := 63:63[#15685]
00029e42: VF := 31:31[R1] & ~63:63[#15685]
00029e45: ZF := #15685 = 0
00029e48: CF := 31:31[R1] | 31:31[R1] & ~63:63[#15685] | ~63:63[#15685]
00029e52: R2 := R0 + 1
00029e5d: #15687 := ~ZF <> 0
00029e57: when #15687 goto %0001d749
000385d2: goto %00029e60

0001d749:
0001d750: R1 := pad:64[mem[R0 + 1]]
0001d758: R0 := R2
0001d75d: goto %0001d75b

0001d75b:
0001d768: #10710 := ~31:0[R1] = 0
0001d762: when #10710 goto %0001d760
000385d1: goto %0001d789

0001d760:
0001d76d: R30 := 0xBD68
0001d76f: call @strdup with return %0001d771

0001d771:
0001d777: mem := mem with [R20 + 0x50, el]:u64 <- R0
0001d77c: goto %0001d77a

0001d789:
0001d78f: R0 := mem[R20 + 0x50, el]:u64
000385d0: goto %0001d77a

0001d77a:
0001d786: #10712 := R0 = 0
0001d780: when #10712 goto %0001d240
000385cf: goto %0001d25d

00029e60:
00029e66: R0 := R2
000385ce: goto %00029e06

00029e96:
00029e9a: R1 := 0x12000
00029ea2: R0 := R25
00029ea9: R1 := R1 + 0x7D8
00029eae: R30 := 0xB98C
00029eb0: call @strstr with return %00029eb2

00029eb2:
00029ebb: #15698 := R0 = 0
00029eb5: when #15698 goto %0001d6b3
000385cd: goto %00029ebe

0001d6b3:
0001d6b9: R0 := mem[R31 + 0x68, el]:u64
0001d6c1: R0 := mem[R0 + 0xF78, el]:u64
0001d6ca: R0 := pad:64[mem[R0, el]:u32]
0001d6d6: #10695 := ~31:0[R0] = 0
0001d6d0: when #10695 goto %0001d6ce
000385cc: goto %0001d722

0001d6ce:
0001d6de: R2 := R25
0001d6e4: R1 := 0x12000
0001d6eb: R1 := R1 + 0x758
0001d6f2: R0 := 1
0001d6f7: R30 := 0xBD84
0001d6f9: call @__printf_chk with return %0001d6fb

0001d6fb:
0001d700: R19 := 0xFFFFFFFFFFFFFFFC
0001d708: R0 := R25
0001d70d: R30 := 0xBD90
0001d70f: call @free with return %0001d711

0001d711:
0001d718: R27 := mem[R31 + 0x50, el]:u64
0001d71c: R28 := mem[R31 + 0x58, el]:u64
0001d720: goto %0001d1b5

0001d722:
0001d728: R0 := R25
0001d72f: R19 := 0xFFFFFFFFFFFFFFFC
0001d734: R30 := 0xBD50
0001d736: call @free with return %0001d738

0001d738:
0001d73f: R27 := mem[R31 + 0x50, el]:u64
0001d743: R28 := mem[R31 + 0x58, el]:u64
0001d747: goto %0001d1b5

00029ebe:
00029ec5: R0 := 1
00029ecd: mem := mem with [R20, el]:u32 <- 31:0[R0]
00029ed5: R0 := R27
00029edd: mem := mem with [R20 + 0x1C, el]:u32 <- 0
00029ee5: mem := mem with [R20 + 0x48, el]:u64 <- 0
00029eee: R30 := 0xB9B4
00029ef0: call @strdup with return %00029ef2

00029ef2:
00029ef8: R1 := R28
00029f00: mem := mem with [R20 + 0x28, el]:u64 <- R0
00029f08: R2 := R19
00029f0e: R0 := 0
00029f13: R30 := 0xB9C8
00029f15: call @strtok_r with return %00029f17

00029f17:
00029f21: #15712 := R0 = 0
00029f1b: when #15712 goto %00029f19
000385cb: goto %0002a051

0002a051:
0002a054: R30 := 0xB9D0
0002a056: call @strdup with return %0002a058

0002a058:
0002a05e: mem := mem with [R20 + 0x30, el]:u64 <- R0
000385ca: goto %00029f19

00029f19:
00029f29: R2 := R19
00029f30: R1 := R26 + 0x178
00029f36: R0 := 0
00029f3b: R30 := 0xB9E4
00029f3d: call @strtok_r with return %00029f3f

00029f3f:
00029f49: #15716 := R0 = 0
00029f43: when #15716 goto %00029f41
000385c9: goto %0002a042

0002a042:
0002a045: R30 := 0xB9EC
0002a047: call @strdup with return %0002a049

0002a049:
0002a04f: mem := mem with [R20 + 0x48, el]:u64 <- R0
000385c8: goto %00029f41

00029f41:
00029f51: R19 := mem[R20 + 0x30, el]:u64
00029f5c: #15717 := R19 = 0
00029f56: when #15717 goto %0001d81e
000385c7: goto %00029f5f

0001d81e:
0001d824: R0 := R25
0001d82b: R19 := 0xFFFFFFFFFFFFFFFD
0001d830: R30 := 0xBE6C
0001d832: call @free with return %0001d834

0001d834:
0001d83b: R27 := mem[R31 + 0x50, el]:u64
0001d83f: R28 := mem[R31 + 0x58, el]:u64
0001d843: goto %0001d1b5

00029f5f:
00029f65: R0 := mem[R20 + 0x48, el]:u64
00029f70: #15718 := R0 = 0
00029f6a: when #15718 goto %0001d845
000385c6: goto %00029f73

0001d845:
0001d84b: R0 := R25
0001d850: R30 := 0xBE7C
0001d852: call @free with return %0001d854

0001d854:
0001d85a: R0 := mem[R31 + 0x88, el]:u64
0001d861: R19 := 0xFFFFFFFFFFFFFFFD
0001d866: R30 := 0xBE88
0001d868: call @free with return %0001d86a

0001d86a:
0001d871: R27 := mem[R31 + 0x50, el]:u64
0001d875: R28 := mem[R31 + 0x58, el]:u64
0001d879: goto %0001d1c4

00029f73:
00029f79: R0 := R19
00029f7f: R1 := 0x12000
00029f86: R1 := R1 + 0x750
00029f8b: R30 := 0xBA10
00029f8d: call @strstr with return %00029f8f

00029f8f:
00029f94: #15722 := R0
00029f98: NF := 63:63[#15722]
00029f9b: VF := 63:63[R0] & ~63:63[#15722]
00029f9e: ZF := #15722 = 0
00029fa1: CF := 63:63[R0] | ~63:63[#15722] | 63:63[R0] & ~63:63[#15722]
00029faa: R0 := R0 + 3
00029fc0: #15724 := ~ZF <> 0
00029fc1: goto %00029fb8

00029fb8:
00029fba: when #15724 goto %00029fb2
00029fbb: goto %00029fb5

00029fb5:
00029fb6: R19 := R19
00029fbd: goto %00029fb9

00029fb2:
00029fb3: R19 := R0
00029fbc: goto %00029fb9

00029fb9:
00029fc9: R1 := 0x2F
00029fd1: R0 := R19
00029fd6: R30 := 0xBA28
00029fd8: call @strchr with return %00029fda

00029fda:
00029fe0: mem := mem with [R31 + 0x90, el]:u64 <- R0
00029fe8: R27 := R0
00029ff3: #15732 := R0 = 0
00029fed: when #15732 goto %0001d47e
000385c5: goto %00029ff6

0001d47e:
0001d484: R0 := R19
0001d489: R30 := 0xBE38
0001d48b: call @strlen with return %0001d48d

0001d48d:
0001d494: R2 := 31:0[R0]
0001d49b: R1 := 0
0001d4a3: R0 := R19
0001d4a8: R30 := 0xBE48
0001d4aa: call @substr with return %0001d4ac

0001d4ac:
0001d4b2: mem := mem with [R31 + 0x78, el]:u64 <- R0
0001d4b8: R0 := 0x12000
0001d4bf: R0 := R0 + 0x508
0001d4c4: R30 := 0xBE58
0001d4c6: call @strdup with return %0001d4c8

0001d4c8:
0001d4ce: mem := mem with [R20 + 0x38, el]:u64 <- R0
0001d4d3: goto %0001d4d1

00029ff6:
00029ffd: R2 := 31:0[R0] - 31:0[R19]
0002a004: R1 := 0
0002a00c: R0 := R19
0002a011: R30 := 0xBA44
0002a013: call @substr with return %0002a015

0002a015:
0002a01b: R1 := R0
0002a021: R27 := 0
0002a029: R0 := mem[R31 + 0x90, el]:u64
0002a031: mem := mem with [R31 + 0x78, el]:u64 <- R1
0002a036: R30 := 0xBA58
0002a038: call @strdup with return %0002a03a

0002a03a:
0002a040: mem := mem with [R20 + 0x38, el]:u64 <- R0
000385c4: goto %0001d4d1

0001d4d1:
0001d4d8: R28 := 0x12000
0001d4df: R28 := R28 + 0x728
000385c3: goto %0001d4e3

0001d4e3:
0001d4e9: R2 := R23
0001d4f1: R1 := R24
0001d4fa: R0 := 31:0[R21]
0001d4ff: R30 := 0xBA78
0001d501: call @so_recvln with return %0001d503

0001d503:
0001d50a: R19 := 31:0[R0]
0001d512: R0 := mem[R31 + 0x88, el]:u64
0001d517: R30 := 0xBA84
0001d519: call @trimr with return %0001d51b

0001d51b:
0001d520: #10656 := extend:64[31:0[R19]]
0001d524: NF := 63:63[#10656]
0001d527: VF := 31:31[R19] & ~63:63[#10656]
0001d52a: ZF := #10656 = 0
0001d52d: CF := 31:31[R19] | 31:31[R19] & ~63:63[#10656] | ~63:63[#10656]
0001d53e: #10658 := (NF <> VF | ZF) <> 0
0001d538: when #10658 goto %0001d536
000385c2: goto %0001d5ac

0001d5ac:
0001d5b2: R26 := mem[R31 + 0x88, el]:u64
0001d5ba: R1 := R28
0001d5c2: R0 := R26
0001d5c7: R30 := 0xBA9C
0001d5c9: call @strcspn with return %0001d5cb

0001d5cb:
0001d5d1: R2 := R0
0001d5d9: R0 := R26
0001d5e1: mem := mem with [R31 + 0x60, el]:u64 <- R2
0001d5e6: R30 := 0xBAAC
0001d5e8: call @strlen with return %0001d5ea

0001d5ea:
0001d5f0: R2 := mem[R31 + 0x60, el]:u64
0001d5f8: #10679 := 1 + ~R0 + R2
0001d5fc: NF := 63:63[#10679]
0001d5ff: VF := 63:63[R2] & 63:63[~R0] & ~63:63[#10679] | ~63:63[R2] &
          ~63:63[~R0] & 63:63[#10679]
0001d602: ZF := #10679 = 0
0001d605: CF := 63:63[R2] & 63:63[~R0] | 63:63[~R0] & ~63:63[#10679] |
          63:63[R2] & ~63:63[#10679]
0001d613: #10681 := ~ZF <> 0
0001d60d: when #10681 goto %0001d60b
000385c1: goto %0001d69b

0001d60b:
0001d61d: mem := mem with [R31 + 0x60, el]:u64 <- 0
0001d625: R0 := mem[R20 + 8, el]:u64
0001d62d: mem := mem with [R31 + 0x70, el]:u64 <- R0
0001d639: #10685 := ZF
0001d633: when #10685 goto %0001d631
000385c0: goto %0001d7f8

0001d7f8:
0001d7fe: R0 := R26
0001d805: R1 := 0
0001d80a: R30 := 0xBCD4
0001d80c: call @substr with return %0001d80e

0001d80e:
0001d814: mem := mem with [R31 + 0x60, el]:u64 <- R0
0001d81c: R26 := mem[R31 + 0x88, el]:u64
000385bf: goto %0001d631

0001d631:
0001d641: R0 := R26
0001d648: R1 := 0x3A
0001d64d: R30 := 0xBCE8
0001d64f: call @strchr with return %0001d651

0001d651:
0001d657: R2 := R0
0001d663: #10692 := R0 = 0
0001d65d: when #10692 goto %0001d65b
000385be: goto %0001d791

0001d791:
0001d798: R1 := pad:64[mem[R0 + 1]]
0001d79f: R0 := R0 + 1
0001d7a6: #10713 := 0xFFFFFFFFFFFFFFE0 + extend:64[31:0[R1]]
0001d7aa: NF := 63:63[#10713]
0001d7ad: VF := 31:31[R1] & ~63:63[#10713]
0001d7b0: ZF := #10713 = 0
0001d7b3: CF := 31:31[R1] | 31:31[R1] & ~63:63[#10713] | ~63:63[#10713]
0001d7c2: #10715 := ~ZF <> 0
0001d7bc: when #10715 goto %0001d7ba
000385bd: goto %0001d7d3

0001d7d3:
0001d7da: #10719 := 0xFFFFFFFFFFFFFFE0 + extend:64[31:0[R1]]
0001d7de: NF := 63:63[#10719]
0001d7e1: VF := 31:31[R1] & ~63:63[#10719]
0001d7e4: ZF := #10719 = 0
0001d7e7: CF := 31:31[R1] | 31:31[R1] & ~63:63[#10719] | ~63:63[#10719]
0001d7f5: #10721 := ZF
0001d7ef: when #10721 goto %0001d7d3
000385bc: goto %0001d7ba

0001d7ba:
0001d7c7: R30 := 0xBD10
0001d7c9: call @strdup with return %0001d7cb

0001d7cb:
0001d7d1: R2 := R0
000385bb: goto %0001d65b

0001d65b:
0001d66b: R1 := mem[R31 + 0x60, el]:u64
0001d672: R4 := 0
0001d67a: R0 := mem[R31 + 0x70, el]:u64
0001d681: R3 := 0
0001d686: R30 := 0xBD28
0001d688: call @hlist_add with return %0001d68a

0001d68a:
0001d690: mem := mem with [R20 + 8, el]:u64 <- R0
0001d698: R26 := mem[R31 + 0x88, el]:u64
0001d69d: goto %0001d69b

0001d69b:
0001d6a5: R0 := pad:64[mem[R26]]
0001d6b0: #10694 := ~31:0[R0] = 0
0001d6aa: when #10694 goto %0001d4e3
000385ba: goto %0001d536

0001d536:
0001d547: R0 := pad:64[mem[R20, el]:u32]
0001d552: #10659 := 31:0[R0] = 0
0001d54c: when #10659 goto %0001d3bb
000385b9: goto %0001d555

0001d555:
0001d55b: R1 := mem[R31 + 0x78, el]:u64
0001d567: #10660 := R1 = 0
0001d561: when #10660 goto %0001d55f
000385b8: goto %0001d597

0001d597:
0001d59e: R0 := pad:64[mem[R1]]
0001d5a9: #10662 := ~31:0[R0] = 0
0001d5a3: when #10662 goto %0001d2f4
000385b7: goto %0001d55f

0001d2f4:
0001d2fa: R0 := R1
0001d2ff: R30 := 0xBDB4
0001d301: call @strdup with return %0001d303

0001d303:
0001d309: mem := mem with [R20 + 0x40, el]:u64 <- R0
0001d30f: R23 := 0x12000
0001d317: R0 := mem[R20 + 8, el]:u64
0001d31e: R23 := R23 + 0x780
0001d326: R1 := R23
0001d32b: R30 := 0xBDCC
0001d32d: call @hlist_get with return %0001d32f

0001d32f:
0001d339: #10606 := R0 = 0
0001d333: when #10606 goto %0001d331
000385b6: goto %0001d373

0001d331:
0001d341: R0 := mem[R20 + 8, el]:u64
0001d348: R4 := 1
0001d350: R2 := mem[R31 + 0x78, el]:u64
0001d358: R1 := R23
0001d361: R3 := 31:0[R4]
0001d366: R30 := 0xBEE4
0001d368: call @hlist_add with return %0001d36a

0001d36a:
0001d370: mem := mem with [R20 + 8, el]:u64 <- R0
0001d375: goto %0001d373

0001d373:
0001d37c: R23 := mem[R20 + 0x40, el]:u64
0001d388: #10614 := R23 = 0
0001d382: when #10614 goto %0001d380
000385b5: goto %0001d912

0001d912:
0001d918: R0 := R23
0001d91f: R1 := 0x3A
0001d924: R30 := 0xBDE4
0001d926: call @strchr with return %0001d928

0001d928:
0001d931: #10743 := R0 = 0
0001d92b: when #10743 goto %0001d380
000385b4: goto %0001d934

0001d380:
0001d390: R0 := mem[R20 + 0x30, el]:u64
0001d39c: #10615 := R0 = 0
0001d396: when #10615 goto %0001d394
000385b3: goto %0001d890

0001d890:
0001d894: R1 := 0x12000
0001d89a: R2 := 5
0001d8a1: R1 := R1 + 0x7B0
0001d8a6: R30 := 0xBEA8
0001d8a9: call @strncasecmp with return %0001d8ab

0001d8ab:
0001d8b0: #10735 := extend:64[31:0[R0]]
0001d8b4: NF := 63:63[#10735]
0001d8b7: VF := 31:31[R0] & ~63:63[#10735]
0001d8ba: ZF := #10735 = 0
0001d8bd: CF := 31:31[R0] | 31:31[R0] & ~63:63[#10735] | ~63:63[#10735]
0001d8c7: R1 := 0x50
0001d8ce: R0 := 0x1BB
0001d8e6: #10737 := ZF
0001d8e7: goto %0001d8de

0001d8de:
0001d8e0: when #10737 goto %0001d8d7
0001d8e1: goto %0001d8db

0001d8db:
0001d8dc: R0 := 31:0[R1]
0001d8e3: goto %0001d8df

0001d8d7:
0001d8d8: R0 := 31:0[R0]
0001d8e2: goto %0001d8df

0001d8df:
0001d8f0: mem := mem with [R20 + 0x20, el]:u32 <- 31:0[R0]
0001d8f9: R0 := pad:64[mem[R23]]
0001d904: #10739 := ~31:0[R0] = 0
0001d8fe: when #10739 goto %0001d3bb
000385b2: goto %0001d907

0001d907:
0001d90c: R19 := 0xFFFFFFFFFFFFFFFB
0001d910: goto %0001d3bb

0001d934:
0001d93b: R2 := 0xA
0001d941: R1 := 0
0001d946: R30 := 0xBDF8
0001d948: call @strtol with return %0001d94a

0001d94a:
0001d950: mem := mem with [R20 + 0x20, el]:u32 <- 31:0[R0]
0001d958: R23 := mem[R20 + 0x40, el]:u64
000385b1: goto %0001d394

0001d394:
0001d3a5: R0 := pad:64[mem[R23]]
0001d3b1: #10616 := 31:0[R0] = 0
0001d3ab: when #10616 goto %0001d3a9
000385b0: goto %0001d87b

0001d87b:
0001d882: R0 := pad:64[mem[R20 + 0x20, el]:u32]
0001d88d: #10734 := ~31:0[R0] = 0
0001d887: when #10734 goto %0001d3bb
000385af: goto %0001d3a9

0001d3a9:
0001d3b8: R19 := 0xFFFFFFFFFFFFFFFB
0001d3bd: goto %0001d3bb

0001d55f:
0001d56f: R0 := mem[R31 + 0x68, el]:u64
0001d576: R19 := 0xFFFFFFFFFFFFFFFA
0001d57e: R0 := mem[R0 + 0xF78, el]:u64
0001d587: R0 := pad:64[mem[R0, el]:u32]
0001d592: #10661 := ~31:0[R0] = 0
0001d58c: when #10661 goto %0001d457
000385ae: goto %0001d595

0001d457:
0001d45d: R2 := R25
0001d463: R1 := 0x12000
0001d46a: R0 := 1
0001d471: R1 := R1 + 0x788
0001d476: R30 := 0xBE2C
0001d478: call @__printf_chk with return %0001d47a

0001d47a:
0001d47c: goto %0001d3bb

0001d595:
000385ad: goto %0001d3bb

0001d3bb:
0001d3c8: #10617 := R25 = 0
0001d3c2: when #10617 goto %0001d3c0
000385ac: goto %0001d448

0001d448:
0001d44e: R0 := R25
0001d453: R30 := 0xBAFC
0001d455: call @free with return %0001d3c0

0001d3c0:
0001d3d4: #10618 := R27 = 0
0001d3ce: when #10618 goto %0001d3cc
000385ab: goto %0001d439

0001d439:
0001d43f: R0 := R27
0001d444: R30 := 0xBB08
0001d446: call @free with return %0001d3cc

0001d3cc:
0001d3dc: R0 := mem[R31 + 0x78, el]:u64
0001d3e8: #10619 := R0 = 0
0001d3e2: when #10619 goto %0001d3e0
000385aa: goto %0001d432

0001d432:
0001d435: R30 := 0xBB14
0001d437: call @free with return %0001d3e0

0001d3e0:
0001d3f0: R0 := mem[R31 + 0x88, el]:u64
0001d3f5: R30 := 0xBB1C
0001d3f7: call @free with return %0001d3f9

0001d3f9:
0001d3fe: #10620 := extend:64[31:0[R19]]
0001d402: NF := 63:63[#10620]
0001d405: VF := 31:31[R19] & ~63:63[#10620]
0001d408: ZF := #10620 = 0
0001d40b: CF := 31:31[R19] | 31:31[R19] & ~63:63[#10620] | ~63:63[#10620]
0001d415: R0 := 1
0001d41e: R27 := mem[R31 + 0x50, el]:u64
0001d422: R28 := mem[R31 + 0x58, el]:u64
0001d42f: #10623 := (NF <> VF | ZF) <> 0
0001d429: when #10623 goto %0001d1c4
000385a9: goto %0001d1df

0001d1df:
0001d1ef: R22 := mem[R22 + 0xFB8, el]:u64
0001d1f7: R1 := mem[R31 + 0x98, el]:u64
0001d1ff: R2 := mem[R22, el]:u64
0001d207: #10578 := 1 + ~R2 + R1
0001d20b: NF := 63:63[#10578]
0001d20e: VF := 63:63[R1] & 63:63[~R2] & ~63:63[#10578] | ~63:63[R1] &
          ~63:63[~R2] & 63:63[#10578]
0001d211: ZF := #10578 = 0
0001d214: CF := 63:63[R1] & 63:63[~R2] | 63:63[~R2] & ~63:63[#10578] |
          63:63[R1] & ~63:63[#10578]
0001d218: R1 := #10578
0001d21e: R2 := 0
0001d22a: #10580 := ~ZF <> 0
0001d224: when #10580 goto %0001d222
000385a8: goto %00029bf1

0001d222:
0001d233: mem := mem with [R31, el]:u64 <- R31 + 0xA0
0001d237: mem := mem with [R31, el]:u64 <- R31 + 0xA8
0001d23c: R30 := 0xBEF4
0001d23e: call @__stack_chk_fail with return %0001d240

0001d240:
0001d244: R0 := 0x14000
0001d24b: R0 := R0 + 0xD00
0001d250: R30 := 0xBF00
0001d252: call @strdup with return %0001d254

0001d254:
0001d25a: mem := mem with [R20 + 0x50, el]:u64 <- R0
0001d25f: goto %0001d25d

0001d25d:
0001d266: R0 := R27
0001d26b: R30 := 0xBBF4
0001d26d: call @strlen with return %0001d26f

0001d26f:
0001d274: #10586 := 0xFFFFFFFFFFFFFFFD + R0
0001d278: NF := 63:63[#10586]
0001d27b: VF := 63:63[R0] & ~63:63[#10586]
0001d27e: ZF := #10586 = 0
0001d281: CF := 63:63[R0] | ~63:63[#10586] | 63:63[R0] & ~63:63[#10586]
0001d28f: #10588 := ZF
0001d289: when #10588 goto %0001d287
000385a7: goto %0001d2b7

0001d287:
0001d297: R0 := R27
0001d29e: R2 := 0xA
0001d2a4: R1 := 0
0001d2a9: R30 := 0xBCA4
0001d2ab: call @strtol with return %0001d2ad

0001d2ad:
0001d2b3: mem := mem with [R20 + 0x10, el]:u32 <- 31:0[R0]
0001d2bf: #10593 := 31:0[R0] = 0
0001d2b9: when #10593 goto %0001d2b7
000385a6: goto %0001d99f

0001d99f:
0001d9a5: mem := mem with [R31 + 0x78, el]:u64 <- 0
0001d9a9: goto %0001d4d1

0001d2b7:
0001d2cb: #10594 := R25 = 0
0001d2c5: when #10594 goto %0001d2c3
000385a5: goto %0001d95a

0001d2c3:
0001d2d3: R0 := R27
0001d2da: R19 := 0xFFFFFFFFFFFFFFFE
0001d2df: R30 := 0xBDA4
0001d2e1: call @free with return %0001d2e3

0001d2e3:
0001d2ea: R27 := mem[R31 + 0x50, el]:u64
0001d2ee: R28 := mem[R31 + 0x58, el]:u64
0001d2f2: goto %0001d1b5

0001d1b5:
0001d1bb: R0 := mem[R31 + 0x88, el]:u64
0001d1c0: R30 := 0xBC38
0001d1c2: call @free with return %0001d1c4

0001d95a:
0001d960: R0 := R25
0001d965: R30 := 0xBC08
0001d967: call @free with return %0001d969

0001d969:
0001d96f: R0 := R27
000385a4: goto %0001d971

0001d971:
0001d974: R30 := 0xBC10
0001d976: call @free with return %0001d978

0001d978:
0001d97d: R19 := 0xFFFFFFFFFFFFFFFE
0001d985: R0 := mem[R31 + 0x88, el]:u64
0001d98a: R30 := 0xBC1C
0001d98c: call @free with return %0001d98e

0001d98e:
0001d995: R27 := mem[R31 + 0x50, el]:u64
0001d999: R28 := mem[R31 + 0x58, el]:u64
0001d99d: goto %0001d1c4

0001d1c4:
0001d1ca: R0 := mem[R31 + 0x68, el]:u64
0001d1d2: R26 := mem[R0 + 0xF78, el]:u64
0001d1db: R0 := pad:64[mem[R26, el]:u32]
0001d1e7: #10574 := 31:0[R0] = 0
0001d1e1: when #10574 goto %0001d1df
000385a3: goto %0002a060

0002a060:
0002a067: R3 := 31:0[R19]
0002a070: R2 := 31:0[R21]
0002a076: R1 := 0x12000
0002a07d: R0 := 1
0002a084: R1 := R1 + 0x7B8
0002a089: R30 := 0xBC60
0002a08b: call @__printf_chk with return %0002a08d

0002a08d:
0002a092: R0 := 0
0002a096: goto %0001d1df

00029bf1:
00029bf8: R19 := mem[R31 + 0x10, el]:u64
00029bfc: R20 := mem[R31 + 0x18, el]:u64
00029c05: R21 := mem[R31 + 0x20, el]:u64
00029c09: R22 := mem[R31 + 0x28, el]:u64
00029c12: R23 := mem[R31 + 0x30, el]:u64
00029c16: R24 := mem[R31 + 0x38, el]:u64
00029c1f: R25 := mem[R31 + 0x40, el]:u64
00029c23: R26 := mem[R31 + 0x48, el]:u64
00029c2d: R29 := mem[R31, el]:u64
00029c31: R30 := mem[R31 + 8, el]:u64
00029c34: R31 := R31 + 0xA0
00029c39: call R30 with noreturn

000385de: sub headers_send(headers_send_result)
00038af5: headers_send_result :: out u32 = low:32[R0]

0001d9ab:
0001d9b3: mem := mem with [R31 - 0x40, el]:u64 <- R29
0001d9b7: mem := mem with [R31 - 0x38, el]:u64 <- R30
0001d9ba: R31 := R31 - 0x40
0001d9c1: R29 := R31
0001d9ca: mem := mem with [R31, el]:u64 <- R31 + 0x40
0001d9ce: mem := mem with [R31, el]:u64 <- R31 + 0x48
0001d9d7: R22 := 31:0[R0]
0001d9e0: R0 := pad:64[mem[R1, el]:u32]
0001d9e9: mem := mem with [R31, el]:u64 <- R31 + 0x20
0001d9ed: mem := mem with [R31, el]:u64 <- R31 + 0x28
0001d9f5: mem := mem with [R31 + 0x30, el]:u64 <- R23
0001d9fd: R23 := R1
0001da09: #10763 := 31:0[R0] = 0
0001da03: when #10763 goto %0001da01
000385ec: goto %00029ba2

0001da01:
0001da11: R0 := mem[R1 + 0x48, el]:u64
0001da16: R30 := 0xC048
0001da18: call @strlen with return %0001da1a

0001da1a:
0001da20: R21 := R0
0001da28: R0 := mem[R23 + 0x50, el]:u64
0001da2d: R30 := 0xC054
0001da2f: call @strlen with return %0001da31

0001da31:
0001da38: R21 := 31:0[R21] + 31:0[R0]
0001da40: R21 := extend:64[31:0[R21]] + 0x14
0001da45: goto %0001da43

00029ba2:
00029ba8: R0 := mem[R1 + 0x28, el]:u64
00029bad: R30 := 0xBF34
00029baf: call @strlen with return %00029bb1

00029bb1:
00029bb7: R19 := R0
00029bbf: R0 := mem[R23 + 0x30, el]:u64
00029bc4: R30 := 0xBF40
00029bc6: call @strlen with return %00029bc8

00029bc8:
00029bcf: R19 := 31:0[R19] + 31:0[R0]
00029bd7: R0 := mem[R23 + 0x48, el]:u64
00029bdc: R30 := 0xBF4C
00029bde: call @strlen with return %00029be0

00029be0:
00029be6: R21 := extend:64[31:0[R0]] + 0x14
00029bef: R21 := 31:0[R21] + 31:0[R19]
000385eb: goto %0001da43

0001da43:
0001da4c: R20 := mem[R23 + 8, el]:u64
0001da58: #10770 := R20 = 0
0001da52: when #10770 goto %0001da50
000385ea: goto %00029b4c

00029b4c:
000385e9: goto %00029b4e

00029b4e:
00029b54: R0 := mem[R20, el]:u64
00029b5c: R21 := extend:64[31:0[R21]] + 0x14
00029b61: R30 := 0xBF6C
00029b63: call @strlen with return %00029b65

00029b65:
00029b6b: R19 := R0
00029b73: R0 := mem[R20 + 8, el]:u64
00029b78: R30 := 0xBF78
00029b7a: call @strlen with return %00029b7c

00029b7c:
00029b83: R19 := 31:0[R19] + 31:0[R0]
00029b8b: R20 := mem[R20 + 0x18, el]:u64
00029b94: R21 := 31:0[R19] + 31:0[R21]
00029b9f: #15614 := ~R20 = 0
00029b99: when #15614 goto %00029b4e
000385e8: goto %0001da50

0001da50:
0001da5f: R0 := extend:64[31:0[R21]]
0001da64: R30 := 0xBF90
0001da66: call @new with return %0001da68

0001da68:
0001da6f: R20 := pad:64[mem[R23, el]:u32]
0001da77: R21 := R0
0001da83: #10775 := ~31:0[R20] = 0
0001da7d: when #10775 goto %0001da7b
000385e7: goto %00029af3

0001da7b:
0001da8c: R4 := mem[R23 + 0x28, el]:u64
0001da90: R5 := mem[R23 + 0x30, el]:u64
0001da96: R3 := 0x12000
0001da9e: R6 := mem[R23 + 0x48, el]:u64
0001daa5: R3 := R3 + 0x7E0
0001daab: R2 := 0xFFFFFFFFFFFFFFFF
0001dab2: R1 := 1
0001dab7: R30 := 0xC0D0
0001dab9: call @__sprintf_chk with return %0001dabb

0001dabb:
0001dac2: R20 := 31:0[R0]
0001dac7: goto %0001dac5

00029af3:
00029afa: R1 := pad:64[mem[R23 + 0x14, el]:u32]
00029b06: #15600 := 31:0[R1] = 0
00029b00: when #15600 goto %00029afe
000385e6: goto %0001dac5

00029afe:
00029b0f: R4 := mem[R23 + 0x48, el]:u64
00029b13: R6 := mem[R23 + 0x50, el]:u64
00029b19: R3 := 0x12000
00029b22: R5 := pad:64[mem[R23 + 0x10, el]:u32]
00029b29: R3 := R3 + 0x7F0
00029b2f: R2 := 0xFFFFFFFFFFFFFFFF
00029b36: R1 := 1
00029b3b: R30 := 0xC07C
00029b3d: call @__sprintf_chk with return %00029b3f

00029b3f:
00029b46: R20 := 31:0[R0]
00029b4a: goto %0001dac5

0001dac5:
0001dace: R19 := mem[R23 + 8, el]:u64
0001dada: #10780 := R19 = 0
0001dad4: when #10780 goto %0001dad2
000385e5: goto %00029a9c

00029a9c:
00029aa0: R23 := 0x12000
00029aa7: R23 := R23 + 0x800
000385e4: goto %00029aab

00029aab:
00029ab2: R4 := mem[R19, el]:u64
00029ab6: R5 := mem[R19 + 8, el]:u64
00029ac0: R3 := R23
00029ac6: R2 := 0xFFFFFFFFFFFFFFFF
00029acd: R1 := 1
00029ad2: R30 := 0xBFD0
00029ad4: call @__sprintf_chk with return %00029ad6

00029ad6:
00029add: R20 := 31:0[R20] + 31:0[R0]
00029ae5: R19 := mem[R19 + 0x18, el]:u64
00029af0: #15599 := ~R19 = 0
00029aea: when #15599 goto %00029aab
000385e3: goto %0001dad2

0001dad2:
0001dae2: R0 := R21
0001dae7: R30 := 0xBFE4
0001dae9: call @strlen with return %0001daeb

0001daeb:
0001daef: R1 := 0x12000
0001daf6: R1 := R1 + 0x7E8
0001dafe: R2 := R0
0001db06: R3 := R21 + R0
0001db0f: R0 := 31:0[R22]
0001db1a: R1 := pad:64[mem[R1 + 2]]
0001db24: mem := mem with [R3 + 2] <- low:8[31:0[R1]]
0001db29: R30 := 0xC00C
0001db2b: call @so_closed with return %0001db2d

0001db2d:
0001db37: #10793 := 31:0[R0] = 0
0001db31: when #10793 goto %0001db2f
000385e2: goto %00029a86

0001db2f:
0001db3f: R20 := extend:64[31:0[R20]] + 2
0001db47: R1 := R21
0001db50: R0 := 31:0[R22]
0001db57: R2 := extend:64[31:0[R20]]
0001db5c: R30 := 0xC0EC
0001db5f: call @write with return %0001db61

0001db61:
0001db67: R19 := R0
0001db6f: R0 := R21
0001db78: R21 := 31:0[R19]
0001db7d: R30 := 0xC0FC
0001db7f: call @free with return %0001db81

0001db81:
0001db86: #10810 := extend:64[31:0[R19]]
0001db8a: NF := 63:63[#10810]
0001db8d: VF := 31:31[R19] & ~63:63[#10810]
0001db90: ZF := #10810 = 0
0001db93: CF := 31:31[R19] | 31:31[R19] & ~63:63[#10810] | ~63:63[#10810]
0001dba4: #10812 := (NF <> VF | ZF) <> 0
0001db9e: when #10812 goto %0001db9c
000385e1: goto %0001dc6d

0001dc6d:
0001dc73: #10829 := 1 + extend:64[~31:0[R19]] + extend:64[31:0[R20]]
0001dc77: NF := 63:63[#10829]
0001dc7a: VF := 31:31[~31:0[R19]] & 31:31[R20] & ~63:63[#10829] |
          ~31:31[~31:0[R19]] & ~31:31[R20] & 63:63[#10829]
0001dc7d: ZF := #10829 = 0
0001dc80: CF := 31:31[~31:0[R19]] & 31:31[R20] | 31:31[R20] & ~63:63[#10829]
          | 31:31[~31:0[R19]] & ~63:63[#10829]
0001dc8a: R0 := 1
0001dc95: #10831 := ~ZF <> 0
0001dc8f: when #10831 goto %0001db9c
000385e0: goto %0001dc98

0001dc98:
0001dc9f: R19 := mem[R31 + 0x10, el]:u64
0001dca3: R20 := mem[R31 + 0x18, el]:u64
0001dcac: R21 := mem[R31 + 0x20, el]:u64
0001dcb0: R22 := mem[R31 + 0x28, el]:u64
0001dcb8: R23 := mem[R31 + 0x30, el]:u64
0001dcc2: R29 := mem[R31, el]:u64
0001dcc6: R30 := mem[R31 + 8, el]:u64
0001dcc9: R31 := R31 + 0x40
0001dcce: call R30 with noreturn

00029a86:
00029a8c: R0 := R21
00029a93: R21 := 0xFFFFFFFFFFFFFC19
00029a98: R30 := 0xC01C
00029a9a: call @free with return %0001db9c

0001db9c:
0001dbaa: R0 := 0x27000
0001dbb2: R0 := mem[R0 + 0xF78, el]:u64
0001dbbb: R0 := pad:64[mem[R0, el]:u32]
0001dbc7: #10813 := ~31:0[R0] = 0
0001dbc1: when #10813 goto %0001dbbf
000385df: goto %0001dc35

0001dbbf:
0001dbd0: R3 := 31:0[R21]
0001dbd9: R2 := 31:0[R22]
0001dbdf: R1 := 0x12000
0001dbe6: R0 := 1
0001dbed: R1 := R1 + 0x810
0001dbf2: R30 := 0xC09C
0001dbf4: call @__printf_chk with return %0001dbf6

0001dbf6:
0001dbfb: R0 := 0
0001dc04: R19 := mem[R31 + 0x10, el]:u64
0001dc08: R20 := mem[R31 + 0x18, el]:u64
0001dc11: R21 := mem[R31 + 0x20, el]:u64
0001dc15: R22 := mem[R31 + 0x28, el]:u64
0001dc1d: R23 := mem[R31 + 0x30, el]:u64
0001dc27: R29 := mem[R31, el]:u64
0001dc2b: R30 := mem[R31 + 8, el]:u64
0001dc2e: R31 := R31 + 0x40
0001dc33: call R30 with noreturn

0001dc35:
0001dc3c: R19 := mem[R31 + 0x10, el]:u64
0001dc40: R20 := mem[R31 + 0x18, el]:u64
0001dc49: R21 := mem[R31 + 0x20, el]:u64
0001dc4d: R22 := mem[R31 + 0x28, el]:u64
0001dc55: R23 := mem[R31 + 0x30, el]:u64
0001dc5f: R29 := mem[R31, el]:u64
0001dc63: R30 := mem[R31 + 8, el]:u64
0001dc66: R31 := R31 + 0x40
0001dc6b: call R30 with noreturn

000385ed: sub hlist_add(hlist_add_result)
00038af6: hlist_add_result :: out u32 = low:32[R0]

000152cb:
000152d3: mem := mem with [R31 - 0x40, el]:u64 <- R29
000152d7: mem := mem with [R31 - 0x38, el]:u64 <- R30
000152da: R31 := R31 - 0x40
000152e1: #5369 := R1
000152e5: NF := 63:63[#5369]
000152e8: VF := 63:63[R1] & ~63:63[#5369]
000152eb: ZF := #5369 = 0
000152ee: CF := 63:63[R1] | ~63:63[#5369] | 63:63[R1] & ~63:63[#5369]
00015316: #5371 := ~ZF <> 0
00015317: goto %0001530e

0001530e:
00015310: when #5371 goto %000152f6
00015311: goto %00015302

00015302:
00015303: NF := 0
00015306: ZF := 1
00015309: CF := 0
0001530c: VF := 0
00015313: goto %0001530f

000152f6:
000152f7: NF := 63:63[R2 + 0]
000152fa: VF := 63:63[R2] & ~63:63[R2 + 0]
000152fd: ZF := R2 + 0 = 0
00015300: CF := 63:63[R2] | ~63:63[R2 + 0] | 63:63[R2] & ~63:63[R2 + 0]
00015312: goto %0001530f

0001530f:
0001531f: R29 := R31
00015328: mem := mem with [R31, el]:u64 <- R31 + 0x20
0001532c: mem := mem with [R31, el]:u64 <- R31 + 0x28
00015334: R19 := R0
00015340: #5378 := ~ZF <> 0
0001533a: when #5378 goto %00015338
000385f3: goto %00015454

00015338:
00015348: R20 := R2
0001534e: R0 := 0x20
00015357: mem := mem with [R31, el]:u64 <- R31 + 0x40
0001535b: mem := mem with [R31, el]:u64 <- R31 + 0x48
00015364: R22 := 31:0[R3]
0001536c: R21 := R1
00015374: mem := mem with [R31 + 0x30, el]:u64 <- R23
0001537d: R23 := 31:0[R4]
00015382: R30 := 0x4BF4
00015384: call @malloc with return %00015386

00015386:
0001538b: #5393 := 0xFFFFFFFFFFFFFFFF + extend:64[31:0[R22]]
0001538f: NF := 63:63[#5393]
00015392: VF := 31:31[R22] & ~63:63[#5393]
00015395: ZF := #5393 = 0
00015398: CF := 31:31[R22] | 31:31[R22] & ~63:63[#5393] | ~63:63[#5393]
000153a3: R22 := R0
000153af: #5398 := ZF
000153a9: when #5398 goto %000153a7
000385f2: goto %000153c9

000153a7:
000153b7: R0 := R21
000153bc: R30 := 0x4C50
000153be: call @strdup with return %000153c0

000153c0:
000153c6: R21 := R0
000153cb: goto %000153c9

000153c9:
000153d2: mem := mem with [R22, el]:u64 <- R21
000153d9: #5406 := 0xFFFFFFFFFFFFFFFF + extend:64[31:0[R23]]
000153dd: NF := 63:63[#5406]
000153e0: VF := 31:31[R23] & ~63:63[#5406]
000153e3: ZF := #5406 = 0
000153e6: CF := 31:31[R23] | 31:31[R23] & ~63:63[#5406] | ~63:63[#5406]
000153f5: #5408 := ZF
000153ef: when #5408 goto %000153ed
000385f1: goto %0001540f

000153ed:
000153fd: R0 := R20
00015402: R30 := 0x4C60
00015404: call @strdup with return %00015406

00015406:
0001540c: R20 := R0
00015411: goto %0001540f

0001540f:
00015418: mem := mem with [R22 + 8, el]:u64 <- R20
00015420: mem := mem with [R22 + 0x10, el]:u32 <- 0
00015428: mem := mem with [R22 + 0x18, el]:u64 <- 0
00015434: #5418 := R19 = 0
0001542e: when #5418 goto %0001542c
000385f0: goto %000157b6

0001542c:
0001543c: R19 := R22
00015445: R21 := mem[R31 + 0x20, el]:u64
00015449: R22 := mem[R31 + 0x28, el]:u64
00015451: R23 := mem[R31 + 0x30, el]:u64
00015456: goto %00015454

000157b6:
000157bc: R1 := R19
000385ef: goto %000157be

000157be:
000157c4: R2 := R1
000157cc: R1 := mem[R1 + 0x18, el]:u64
000157d7: #5536 := ~R1 = 0
000157d1: when #5536 goto %000157be
000385ee: goto %000157da

000157da:
000157e0: R23 := mem[R31 + 0x30, el]:u64
000157e8: mem := mem with [R2 + 0x18, el]:u64 <- R22
000157f0: R0 := R19
000157f9: R19 := mem[R31 + 0x10, el]:u64
000157fd: R20 := mem[R31 + 0x18, el]:u64
00015806: R21 := mem[R31 + 0x20, el]:u64
0001580a: R22 := mem[R31 + 0x28, el]:u64
00015814: R29 := mem[R31, el]:u64
00015818: R30 := mem[R31 + 8, el]:u64
0001581b: R31 := R31 + 0x40
00015820: call R30 with noreturn

00015454:
0001545d: R0 := R19
00015466: R19 := mem[R31 + 0x10, el]:u64
0001546a: R20 := mem[R31 + 0x18, el]:u64
00015474: R29 := mem[R31, el]:u64
00015478: R30 := mem[R31 + 8, el]:u64
0001547b: R31 := R31 + 0x40
00015480: call R30 with noreturn

000385f4: sub hlist_count(hlist_count_result)
00038af7: hlist_count_result :: out u32 = low:32[R0]

0001307a:
00013080: R1 := R0
00013087: R0 := 0
00013093: #4573 := R1 = 0
0001308d: when #4573 goto %0001308b
000385f7: goto %00014318

00014318:
000385f6: goto %0001431a

0001431a:
00014320: R1 := mem[R1 + 0x18, el]:u64
00014328: R0 := extend:64[31:0[R0]] + 1
00014333: #5019 := ~R1 = 0
0001432d: when #5019 goto %0001431a
000385f5: goto %0001308b

0001308b:
00013098: call R30 with noreturn

000385f8: sub hlist_del(hlist_del_result)
00038af8: hlist_del_result :: out u32 = low:32[R0]

000154dc:
000154e4: mem := mem with [R31 - 0x40, el]:u64 <- R29
000154e8: mem := mem with [R31 - 0x38, el]:u64 <- R30
000154eb: R31 := R31 - 0x40
000154f2: R29 := R31
000154fb: mem := mem with [R31, el]:u64 <- R31 + 0x60
000154ff: mem := mem with [R31, el]:u64 <- R31 + 0x68
00015507: R24 := R0
00015513: #5440 := R0 = 0
0001550d: when #5440 goto %0001550b
000385fe: goto %00015566

00015566:
0001556a: R23 := 0
00015573: mem := mem with [R31, el]:u64 <- R31 + 0x20
00015577: mem := mem with [R31, el]:u64 <- R31 + 0x28
0001557f: R19 := R0
00015588: mem := mem with [R31, el]:u64 <- R31 + 0x40
0001558c: mem := mem with [R31, el]:u64 <- R31 + 0x48
00015594: R22 := R1
00015599: goto %00015597

00015597:
000155a0: R21 := mem[R19, el]:u64
000155a8: R1 := R22
000155b0: R20 := R19
000155b8: R0 := R21
000155bd: R30 := 0x4D78
000155bf: call @strcasecmp with return %000155c1

000155c1:
000155c7: R19 := mem[R19 + 0x18, el]:u64
000155d3: #5468 := ~31:0[R0] = 0
000155cd: when #5468 goto %000155cb
000385fd: goto %00015603

00015603:
00015609: R0 := R21
0001560e: R30 := 0x4D88
00015610: call @free with return %00015612

00015612:
00015618: R0 := mem[R20 + 8, el]:u64
0001561d: R30 := 0x4D90
0001561f: call @free with return %00015621

00015621:
00015627: R0 := R20
0001562c: R30 := 0x4D98
0001562e: call @free with return %00015630

00015630:
00015639: #5481 := R23 = 0
00015633: when #5481 goto %00015540
000385fc: goto %0001563c

00015540:
00015546: R24 := R19
0001554f: R19 := mem[R31 + 0x10, el]:u64
00015553: R20 := mem[R31 + 0x18, el]:u64
0001555c: R21 := mem[R31 + 0x20, el]:u64
00015560: R22 := mem[R31 + 0x28, el]:u64
00015564: goto %0001550b

0001563c:
00015642: mem := mem with [R23 + 0x18, el]:u64 <- R19
000385fb: goto %000155df

000155cb:
000155db: R23 := R20
000155e7: #5472 := R19 = 0
000155e1: when #5472 goto %000155df
000385fa: goto %00015597

000155df:
000155f0: R19 := mem[R31 + 0x10, el]:u64
000155f4: R20 := mem[R31 + 0x18, el]:u64
000155fd: R21 := mem[R31 + 0x20, el]:u64
00015601: R22 := mem[R31 + 0x28, el]:u64
000385f9: goto %0001550b

0001550b:
0001551b: R0 := R24
00015524: R23 := mem[R31 + 0x30, el]:u64
00015528: R24 := mem[R31 + 0x38, el]:u64
00015532: R29 := mem[R31, el]:u64
00015536: R30 := mem[R31 + 8, el]:u64
00015539: R31 := R31 + 0x40
0001553e: call R30 with noreturn

000385ff: sub hlist_dump(hlist_dump_result)
00038af9: hlist_dump_result :: out u32 = low:32[R0]

00013352:
0001335c: #4654 := R0 = 0
00013356: when #4654 goto %00013354
00038602: goto %00013e67

00013354:
00013361: call R30 with noreturn

00013e67:
00013e6f: mem := mem with [R31 - 0x20, el]:u64 <- R29
00013e73: mem := mem with [R31 - 0x18, el]:u64 <- R30
00013e76: R31 := R31 - 0x20
00013e7d: R29 := R31
00013e86: mem := mem with [R31, el]:u64 <- R31 + 0x20
00013e8a: mem := mem with [R31, el]:u64 <- R31 + 0x28
00013e90: R20 := 0x11000
00013e98: R19 := R0
00013e9f: R20 := R20 + 0x6D8
00038601: goto %00013ea3

00013ea3:
00013eaa: R2 := mem[R19, el]:u64
00013eae: R3 := mem[R19 + 8, el]:u64
00013eb6: R1 := R20
00013ebd: R0 := 1
00013ec2: R30 := 0x5250
00013ec5: call @__printf_chk with return %00013ec7

00013ec7:
00013ecd: R19 := mem[R19 + 0x18, el]:u64
00013ed8: #4910 := ~R19 = 0
00013ed2: when #4910 goto %00013ea3
00038600: goto %00013edb

00013edb:
00013ee2: R19 := mem[R31 + 0x10, el]:u64
00013ee6: R20 := mem[R31 + 0x18, el]:u64
00013ef0: R29 := mem[R31, el]:u64
00013ef4: R30 := mem[R31 + 8, el]:u64
00013ef7: R31 := R31 + 0x20
00013efc: call R30 with noreturn

00038603: sub hlist_dup(hlist_dup_result)
00038afa: hlist_dup_result :: out u32 = low:32[R0]

00015482:
0001548a: mem := mem with [R31 - 0x40, el]:u64 <- R29
0001548e: mem := mem with [R31 - 0x38, el]:u64 <- R30
00015491: R31 := R31 - 0x40
00015498: R29 := R31
000154a0: mem := mem with [R31 + 0x30, el]:u64 <- R23
000154ac: #5430 := R0 = 0
000154a6: when #5430 goto %000154a4
0003860b: goto %00015644

000154a4:
000154b2: R23 := 0
000154ba: R0 := R23
000154c2: R23 := mem[R31 + 0x30, el]:u64
000154cc: R29 := mem[R31, el]:u64
000154d0: R30 := mem[R31 + 8, el]:u64
000154d3: R31 := R31 + 0x40
000154d8: call R30 with noreturn

00015644:
0001564b: mem := mem with [R31, el]:u64 <- R31 + 0x20
0001564f: mem := mem with [R31, el]:u64 <- R31 + 0x28
00015657: R19 := R0
0001565d: R23 := 0
00015666: mem := mem with [R31, el]:u64 <- R31 + 0x40
0001566a: mem := mem with [R31, el]:u64 <- R31 + 0x48
0003860a: goto %0001566c

0001566c:
00015673: R22 := mem[R19, el]:u64
00015677: R21 := mem[R19 + 8, el]:u64
0001567e: #5489 := R22
00015682: NF := 63:63[#5489]
00015685: VF := 63:63[R22] & ~63:63[#5489]
00015688: ZF := #5489 = 0
0001568b: CF := 63:63[R22] | ~63:63[#5489] | 63:63[R22] & ~63:63[#5489]
000156b3: #5491 := ~ZF <> 0
000156b4: goto %000156ab

000156ab:
000156ad: when #5491 goto %00015693
000156ae: goto %0001569f

0001569f:
000156a0: NF := 0
000156a3: ZF := 1
000156a6: CF := 0
000156a9: VF := 0
000156b0: goto %000156ac

00015693:
00015694: NF := 63:63[R21 + 0]
00015697: VF := 63:63[R21] & ~63:63[R21 + 0]
0001569a: ZF := R21 + 0 = 0
0001569d: CF := 63:63[R21] | ~63:63[R21 + 0] | 63:63[R21] & ~63:63[R21 + 0]
000156af: goto %000156ac

000156ac:
000156c1: #5494 := ZF
000156bb: when #5494 goto %000156b9
00038609: goto %00015723

00015723:
00015727: R0 := 0x20
0001572c: R30 := 0x4CB0
0001572e: call @malloc with return %00015730

00015730:
00015736: R20 := R0
0001573e: R0 := R22
00015743: R30 := 0x4CBC
00015745: call @strdup with return %00015747

00015747:
0001574d: R1 := R0
00015755: R0 := R21
0001575d: mem := mem with [R20, el]:u64 <- R1
00015762: R30 := 0x4CCC
00015764: call @strdup with return %00015766

00015766:
0001576c: mem := mem with [R20 + 8, el]:u64 <- R0
00015774: mem := mem with [R20 + 0x10, el]:u32 <- 0
0001577c: mem := mem with [R20 + 0x18, el]:u64 <- 0
00015787: #5521 := R23 = 0
00015781: when #5521 goto %00015717
00038608: goto %0001578a

00015717:
0001571d: R23 := R20
00015721: goto %000156b9

0001578a:
00015790: R1 := R23
00038607: goto %00015792

00015792:
00015798: R0 := R1
000157a0: R1 := mem[R1 + 0x18, el]:u64
000157ab: #5528 := ~R1 = 0
000157a5: when #5528 goto %00015792
00038606: goto %000157ae

000157ae:
000157b4: mem := mem with [R0 + 0x18, el]:u64 <- R20
00038605: goto %000156b9

000156b9:
000156c9: R19 := mem[R19 + 0x18, el]:u64
000156d4: #5495 := ~R19 = 0
000156ce: when #5495 goto %0001566c
00038604: goto %000156d7

000156d7:
000156dd: R0 := R23
000156e6: R19 := mem[R31 + 0x10, el]:u64
000156ea: R20 := mem[R31 + 0x18, el]:u64
000156f3: R21 := mem[R31 + 0x20, el]:u64
000156f7: R22 := mem[R31 + 0x28, el]:u64
000156ff: R23 := mem[R31 + 0x30, el]:u64
00015709: R29 := mem[R31, el]:u64
0001570d: R30 := mem[R31 + 8, el]:u64
00015710: R31 := R31 + 0x40
00015715: call R30 with noreturn

0003860c: sub hlist_free(hlist_free_result)
00038afb: hlist_free_result :: out u32 = low:32[R0]

00013339:
00013343: #4653 := R0 = 0
0001333d: when #4653 goto %0001333b
0003860f: goto %00013efe

0001333b:
00013349: R0 := 0
0001334e: call R30 with noreturn

00013efe:
00013f06: mem := mem with [R31 - 0x20, el]:u64 <- R29
00013f0a: mem := mem with [R31 - 0x18, el]:u64 <- R30
00013f0d: R31 := R31 - 0x20
00013f14: R29 := R31
00013f1d: mem := mem with [R31, el]:u64 <- R31 + 0x20
00013f21: mem := mem with [R31, el]:u64 <- R31 + 0x28
00013f29: R19 := R0
0003860e: goto %00013f2d

00013f2d:
00013f33: R20 := R19
00013f3b: R19 := mem[R19 + 0x18, el]:u64
00013f43: R0 := mem[R20, el]:u64
00013f48: R30 := 0x51F0
00013f4a: call @free with return %00013f4c

00013f4c:
00013f52: R0 := mem[R20 + 8, el]:u64
00013f57: R30 := 0x51F8
00013f59: call @free with return %00013f5b

00013f5b:
00013f61: R0 := R20
00013f66: R30 := 0x5200
00013f68: call @free with return %00013f6a

00013f6a:
00013f73: #4924 := ~R19 = 0
00013f6d: when #4924 goto %00013f2d
0003860d: goto %00013f76

00013f76:
00013f7a: R0 := 0
00013f83: R19 := mem[R31 + 0x10, el]:u64
00013f87: R20 := mem[R31 + 0x18, el]:u64
00013f91: R29 := mem[R31, el]:u64
00013f95: R30 := mem[R31 + 8, el]:u64
00013f98: R31 := R31 + 0x20
00013f9d: call R30 with noreturn

00038610: sub hlist_get(hlist_get_result)
00038afc: hlist_get_result :: out u32 = low:32[R0]

0001309a:
000130a4: #4574 := R0 = 0
0001309e: when #4574 goto %0001309c
00038613: goto %00014254

0001309c:
000130aa: R0 := 0
000130af: call R30 with noreturn

00014254:
0001425c: mem := mem with [R31 - 0x20, el]:u64 <- R29
00014260: mem := mem with [R31 - 0x18, el]:u64 <- R30
00014263: R31 := R31 - 0x20
0001426a: R29 := R31
00014273: mem := mem with [R31, el]:u64 <- R31 + 0x20
00014277: mem := mem with [R31, el]:u64 <- R31 + 0x28
0001427f: R19 := R0
00014287: R20 := R1
0001428c: goto %0001428a

0001428a:
00014293: R0 := mem[R19, el]:u64
0001429b: R1 := R20
000142a0: R30 := 0x4F58
000142a2: call @strcasecmp with return %000142a4

000142a4:
000142ae: #5013 := ~31:0[R0] = 0
000142a8: when #5013 goto %000142a6
00038612: goto %000142ed

000142ed:
000142f3: R0 := mem[R19 + 8, el]:u64
000142fc: R19 := mem[R31 + 0x10, el]:u64
00014300: R20 := mem[R31 + 0x18, el]:u64
0001430a: R29 := mem[R31, el]:u64
0001430e: R30 := mem[R31 + 8, el]:u64
00014311: R31 := R31 + 0x20
00014316: call R30 with noreturn

000142a6:
000142b6: R19 := mem[R19 + 0x18, el]:u64
000142c2: #5014 := R19 = 0
000142bc: when #5014 goto %000142ba
00038611: goto %0001428a

000142ba:
000142c8: R0 := 0
000142d1: R19 := mem[R31 + 0x10, el]:u64
000142d5: R20 := mem[R31 + 0x18, el]:u64
000142df: R29 := mem[R31, el]:u64
000142e3: R30 := mem[R31 + 8, el]:u64
000142e6: R31 := R31 + 0x20
000142eb: call R30 with noreturn

00038614: sub hlist_in(hlist_in_result)
00038afd: hlist_in_result :: out u32 = low:32[R0]

00013060:
0001306a: #4569 := R0 = 0
00013064: when #4569 goto %00013062
00038617: goto %00014336

00013062:
00013071: R0 := 0
00013076: call R30 with noreturn

00014336:
0001433e: mem := mem with [R31 - 0x20, el]:u64 <- R29
00014342: mem := mem with [R31 - 0x18, el]:u64 <- R30
00014345: R31 := R31 - 0x20
0001434c: R29 := R31
00014355: mem := mem with [R31, el]:u64 <- R31 + 0x20
00014359: mem := mem with [R31, el]:u64 <- R31 + 0x28
00014361: R19 := R0
00014369: R20 := R1
0001436e: goto %0001436c

0001436c:
00014375: R0 := mem[R19, el]:u64
0001437d: R1 := R20
00014382: R30 := 0x4ED8
00014384: call @strcasecmp with return %00014386

00014386:
00014390: #5031 := ~31:0[R0] = 0
0001438a: when #5031 goto %00014388
00038616: goto %000143d0

000143d0:
000143d5: R0 := 1
000143de: R19 := mem[R31 + 0x10, el]:u64
000143e2: R20 := mem[R31 + 0x18, el]:u64
000143ec: R29 := mem[R31, el]:u64
000143f0: R30 := mem[R31 + 8, el]:u64
000143f3: R31 := R31 + 0x20
000143f8: call R30 with noreturn

00014388:
00014398: R19 := mem[R19 + 0x18, el]:u64
000143a4: #5032 := R19 = 0
0001439e: when #5032 goto %0001439c
00038615: goto %0001436c

0001439c:
000143ab: R0 := 0
000143b4: R19 := mem[R31 + 0x10, el]:u64
000143b8: R20 := mem[R31 + 0x18, el]:u64
000143c2: R29 := mem[R31, el]:u64
000143c6: R30 := mem[R31 + 8, el]:u64
000143c9: R31 := R31 + 0x20
000143ce: call R30 with noreturn

00038618: sub hlist_mod(hlist_mod_result)
00038afe: hlist_mod_result :: out u32 = low:32[R0]

00012eea:
00012ef5: mem := mem with [R31 - 0x40, el]:u64 <- R29
00012ef9: mem := mem with [R31 - 0x38, el]:u64 <- R30
00012efc: R31 := R31 - 0x40
00012f03: R29 := R31
00012f0c: mem := mem with [R31, el]:u64 <- R31 + 0x20
00012f10: mem := mem with [R31, el]:u64 <- R31 + 0x28
00012f18: R20 := R1
00012f21: mem := mem with [R31, el]:u64 <- R31 + 0x40
00012f25: mem := mem with [R31, el]:u64 <- R31 + 0x48
00012f2d: R21 := R0
00012f35: R22 := R2
00012f3d: mem := mem with [R31 + 0x30, el]:u64 <- R23
00012f46: R23 := 31:0[R3]
00012f52: #4535 := R0 = 0
00012f4c: when #4535 goto %00012f4a
00038621: goto %0001442c

0001442c:
00014432: R19 := R0
00014437: goto %00014435

00014435:
0001443e: R0 := mem[R19, el]:u64
00014446: R1 := R20
0001444b: R30 := 0x4E0C
0001444d: call @strcasecmp with return %0001444f

0001444f:
00014459: #5051 := ~31:0[R0] = 0
00014453: when #5051 goto %00014451
00038620: goto %0001446f

0001446f:
00014475: R0 := mem[R19 + 8, el]:u64
0001447a: R30 := 0x4E18
0001447c: call @free with return %0001447e

0001447e:
00014484: R0 := R22
00014489: R30 := 0x4E20
0001448b: call @strdup with return %0001448d

0001448d:
00014493: mem := mem with [R19 + 8, el]:u64 <- R0
0003861f: goto %00012f56

00014451:
00014461: R19 := mem[R19 + 0x18, el]:u64
0001446c: #5052 := R19 = 0
00014466: when #5052 goto %00012f4a
0003861e: goto %00014435

00012f4a:
00012f5e: #4536 := 31:0[R23] = 0
00012f58: when #4536 goto %00012f56
0003861d: goto %00012fa0

00012fa0:
00012fa5: #4543 := R20
00012fa9: NF := 63:63[#4543]
00012fac: VF := 63:63[R20] & ~63:63[#4543]
00012faf: ZF := #4543 = 0
00012fb2: CF := 63:63[R20] | ~63:63[#4543] | 63:63[R20] & ~63:63[#4543]
00012fda: #4545 := ~ZF <> 0
00012fdb: goto %00012fd2

00012fd2:
00012fd4: when #4545 goto %00012fba
00012fd5: goto %00012fc6

00012fc6:
00012fc7: NF := 0
00012fca: ZF := 1
00012fcd: CF := 0
00012fd0: VF := 0
00012fd7: goto %00012fd3

00012fba:
00012fbb: NF := 63:63[R22 + 0]
00012fbe: VF := 63:63[R22] & ~63:63[R22 + 0]
00012fc1: ZF := R22 + 0 = 0
00012fc4: CF := 63:63[R22] | ~63:63[R22 + 0] | 63:63[R22] & ~63:63[R22 + 0]
00012fd6: goto %00012fd3

00012fd3:
00012fe7: #4548 := ZF
00012fe1: when #4548 goto %00012f56
0003861c: goto %00012fea

00012fea:
00012fee: R0 := 0x20
00012ff3: R30 := 0x4E54
00012ff5: call @malloc with return %00012ff7

00012ff7:
00012ffd: R19 := R0
00013005: R0 := R20
0001300a: R30 := 0x4E60
0001300d: call @strdup with return %0001300f

0001300f:
00013015: R1 := R0
0001301d: R0 := R22
00013025: mem := mem with [R19, el]:u64 <- R1
0001302a: R30 := 0x4E70
0001302c: call @strdup with return %0001302e

0001302e:
00013034: mem := mem with [R19 + 8, el]:u64 <- R0
0001303c: mem := mem with [R19 + 0x10, el]:u32 <- 0
00013044: mem := mem with [R19 + 0x18, el]:u64 <- 0
00013050: #4565 := R21 = 0
0001304a: when #4565 goto %00013048
0003861b: goto %000143fa

00013048:
00013058: R21 := R19
0001305c: goto %00012f56

000143fa:
00014400: R1 := R21
0003861a: goto %00014404

00014404:
0001440a: R2 := R1
00014412: R1 := mem[R1 + 0x18, el]:u64
0001441d: #5043 := ~R1 = 0
00014417: when #5043 goto %00014404
00038619: goto %00014420

00014420:
00014426: mem := mem with [R2 + 0x18, el]:u64 <- R19
0001442a: goto %00012f56

00012f56:
00012f66: R0 := R21
00012f6f: R19 := mem[R31 + 0x10, el]:u64
00012f73: R20 := mem[R31 + 0x18, el]:u64
00012f7c: R21 := mem[R31 + 0x20, el]:u64
00012f80: R22 := mem[R31 + 0x28, el]:u64
00012f88: R23 := mem[R31 + 0x30, el]:u64
00012f92: R29 := mem[R31, el]:u64
00012f96: R30 := mem[R31 + 8, el]:u64
00012f99: R31 := R31 + 0x40
00012f9e: call R30 with noreturn

00038622: sub hlist_subcmp(hlist_subcmp_result)
00038aff: hlist_subcmp_result :: out u32 = low:32[R0]

000130b3:
000130bb: mem := mem with [R31 - 0x30, el]:u64 <- R29
000130bf: mem := mem with [R31 - 0x28, el]:u64 <- R30
000130c2: R31 := R31 - 0x30
000130c9: R29 := R31
000130d2: mem := mem with [R31, el]:u64 <- R31 + 0x20
000130d6: mem := mem with [R31, el]:u64 <- R31 + 0x28
000130de: R19 := R0
000130e4: R20 := 0
000130ec: R0 := R2
000130f5: mem := mem with [R31, el]:u64 <- R31 + 0x40
000130f9: mem := mem with [R31, el]:u64 <- R31 + 0x48
00013101: R21 := R1
00013106: R30 := 0x4FAC
00013108: call @strdup with return %0001310a

0001310a:
00013110: R22 := R0
00013115: goto %00013113

00013113:
0001311c: R0 := R22
00013121: R30 := 0x4FD4
00013123: call @strlen with return %00013125

00013125:
0001312b: #4596 := 1 + ~R20 + R0
0001312f: NF := 63:63[#4596]
00013132: VF := 63:63[R0] & 63:63[~R20] & ~63:63[#4596] | ~63:63[R0] &
          ~63:63[~R20] & 63:63[#4596]
00013135: ZF := #4596 = 0
00013138: CF := 63:63[R0] & 63:63[~R20] | 63:63[~R20] & ~63:63[#4596] |
          63:63[R0] & ~63:63[#4596]
00013147: #4598 := (CF & ~ZF) <> 0
00013141: when #4598 goto %0001313f
0003862a: goto %0001316c

0001316c:
00013176: #4599 := ~R19 = 0
00013170: when #4599 goto %0001316e
00038629: goto %00014250

0001316e:
0001317e: R0 := mem[R19, el]:u64
00013186: R1 := R21
0001318b: R30 := 0x4FF8
0001318e: call @strcasecmp with return %00013190

00013190:
00013197: R20 := 31:0[R0]
000131a3: #4606 := ~31:0[R0] = 0
0001319d: when #4606 goto %0001319b
00038628: goto %0001412f

0001412f:
00014135: R0 := mem[R19 + 8, el]:u64
00014141: #4968 := R0 = 0
0001413b: when #4968 goto %00014139
00038627: goto %0001418b

0001418b:
0001418e: R30 := 0x500C
00014190: call @strdup with return %00014192

00014192:
00014196: R20 := 0
0001419e: R19 := R0
000141a3: goto %000141a1

000141a1:
000141aa: R0 := R19
000141af: R30 := 0x5038
000141b1: call @strlen with return %000141b3

000141b3:
000141b9: #4987 := 1 + ~R20 + R0
000141bd: NF := 63:63[#4987]
000141c0: VF := 63:63[R0] & 63:63[~R20] & ~63:63[#4987] | ~63:63[R0] &
          ~63:63[~R20] & 63:63[#4987]
000141c3: ZF := #4987 = 0
000141c6: CF := 63:63[R0] & 63:63[~R20] | 63:63[~R20] & ~63:63[#4987] |
          63:63[R0] & ~63:63[#4987]
000141d5: #4989 := (CF & ~ZF) <> 0
000141cf: when #4989 goto %000141cd
00038626: goto %000141fa

000141fa:
00014200: R1 := R22
00014208: R0 := R19
0001420d: R30 := 0x504C
0001420f: call @strstr with return %00014211

00014211:
00014216: #4996 := R0
0001421a: NF := 63:63[#4996]
0001421d: VF := 63:63[R0] & ~63:63[#4996]
00014220: ZF := #4996 = 0
00014223: CF := 63:63[R0] | ~63:63[#4996] | 63:63[R0] & ~63:63[#4996]
0001423d: #4998 := ZF
0001423e: goto %00014235

00014235:
00014237: when #4998 goto %0001422e
00014238: goto %00014232

00014232:
00014233: R20 := 1
0001423a: goto %00014236

0001422e:
0001422f: R20 := 0
00014239: goto %00014236

00014236:
00014247: R0 := R19
0001424c: R30 := 0x505C
0001424e: call @free with return %00014139

00014139:
00014149: R0 := R22
0001414e: R30 := 0x5064
00014150: call @free with return %00014152

00014152:
00014159: R0 := 31:0[R20]
00014162: R19 := mem[R31 + 0x10, el]:u64
00014166: R20 := mem[R31 + 0x18, el]:u64
0001416f: R21 := mem[R31 + 0x20, el]:u64
00014173: R22 := mem[R31 + 0x28, el]:u64
0001417d: R29 := mem[R31, el]:u64
00014181: R30 := mem[R31 + 8, el]:u64
00014184: R31 := R31 + 0x30
00014189: call R30 with noreturn

000141cd:
000141da: R30 := 0x501C
000141dc: call @__ctype_tolower_loc with return %000141de

000141de:
000141e5: R1 := high:32[R1].pad:64[mem[R19 + R20]]
000141ed: R0 := mem[R0, el]:u64
000141f8: R20 := R20 + 1
00038625: goto %000141a1

0001319b:
000131ab: R19 := mem[R19 + 0x18, el]:u64
000131b7: #4607 := R19 = 0
000131b1: when #4607 goto %000131af
00038624: goto %0001316e

00014250:
00014252: goto %000131af

000131af:
000131bf: R0 := R22
000131c6: R20 := 0
000131cb: R30 := 0x5084
000131ce: call @free with return %000131d0

000131d0:
000131d7: R0 := 31:0[R20]
000131e0: R19 := mem[R31 + 0x10, el]:u64
000131e4: R20 := mem[R31 + 0x18, el]:u64
000131ed: R21 := mem[R31 + 0x20, el]:u64
000131f1: R22 := mem[R31 + 0x28, el]:u64
000131fb: R29 := mem[R31, el]:u64
000131ff: R30 := mem[R31 + 8, el]:u64
00013202: R31 := R31 + 0x30
00013207: call R30 with noreturn

0001313f:
0001314c: R30 := 0x4FB8
0001314e: call @__ctype_tolower_loc with return %00013150

00013150:
00013157: R1 := high:32[R1].pad:64[mem[R22 + R20]]
0001315f: R0 := mem[R0, el]:u64
0001316a: R20 := R20 + 1
00038623: goto %00013113

0003862b: sub hlist_subcmp_all(hlist_subcmp_all_result)
00038b00: hlist_subcmp_all_result :: out u32 = low:32[R0]

00013209:
00013211: mem := mem with [R31 - 0x50, el]:u64 <- R29
00013215: mem := mem with [R31 - 0x48, el]:u64 <- R30
00013218: R31 := R31 - 0x50
0001321f: R29 := R31
00013228: mem := mem with [R31, el]:u64 <- R31 + 0x20
0001322c: mem := mem with [R31, el]:u64 <- R31 + 0x28
00013232: R19 := 0
0001323b: mem := mem with [R31, el]:u64 <- R31 + 0x40
0001323f: mem := mem with [R31, el]:u64 <- R31 + 0x48
00013247: R21 := R0
0001324f: R0 := R2
00013258: mem := mem with [R31, el]:u64 <- R31 + 0x60
0001325c: mem := mem with [R31, el]:u64 <- R31 + 0x68
00013264: R23 := R1
00013269: R30 := 0x50C0
0001326b: call @strdup with return %0001326d

0001326d:
00013273: R22 := R0
00013278: goto %00013276

00013276:
0001327f: R0 := R22
00013284: R30 := 0x50E8
00013286: call @strlen with return %00013288

00013288:
0001328e: #4639 := 1 + ~R19 + R0
00013292: NF := 63:63[#4639]
00013295: VF := 63:63[R0] & 63:63[~R19] & ~63:63[#4639] | ~63:63[R0] &
          ~63:63[~R19] & 63:63[#4639]
00013298: ZF := #4639 = 0
0001329b: CF := 63:63[R0] & 63:63[~R19] | 63:63[~R19] & ~63:63[#4639] |
          63:63[R0] & ~63:63[#4639]
000132aa: #4641 := (CF & ~ZF) <> 0
000132a4: when #4641 goto %000132a2
00038633: goto %000132cf

000132cf:
000132d9: #4642 := R21 = 0
000132d3: when #4642 goto %000132d1
00038632: goto %00013f9f

000132d1:
000132e1: R0 := R22
000132e8: R24 := 0
000132ed: R30 := 0x51AC
000132ef: call @free with return %000132f1

000132f1:
000132f8: R0 := 31:0[R24]
00013301: R19 := mem[R31 + 0x10, el]:u64
00013305: R20 := mem[R31 + 0x18, el]:u64
0001330e: R21 := mem[R31 + 0x20, el]:u64
00013312: R22 := mem[R31 + 0x28, el]:u64
0001331b: R23 := mem[R31 + 0x30, el]:u64
0001331f: R24 := mem[R31 + 0x38, el]:u64
00013329: R29 := mem[R31, el]:u64
0001332d: R30 := mem[R31 + 8, el]:u64
00013330: R31 := R31 + 0x50
00013335: call R30 with noreturn

00013f9f:
00013fa4: R24 := 0
00013fac: mem := mem with [R31 + 0x40, el]:u64 <- R25
00013fb3: R25 := 1
00013fb8: goto %00013fb6

00013fb6:
00013fbf: R0 := mem[R21, el]:u64
00013fc7: R1 := R23
00013fcc: R30 := 0x5118
00013fce: call @strcasecmp with return %00013fd0

00013fd0:
00013fda: #4931 := ~31:0[R0] = 0
00013fd4: when #4931 goto %00013fd2
00038631: goto %0001404d

0001404d:
00014053: R0 := mem[R21 + 8, el]:u64
00014059: R19 := 0
0001405e: R30 := 0x5128
00014060: call @strdup with return %00014062

00014062:
00014068: R20 := R0
0001406d: goto %0001406b

0001406b:
00014074: R0 := R20
00014079: R30 := 0x5150
0001407b: call @strlen with return %0001407d

0001407d:
00014083: #4952 := 1 + ~R19 + R0
00014087: NF := 63:63[#4952]
0001408a: VF := 63:63[R0] & 63:63[~R19] & ~63:63[#4952] | ~63:63[R0] &
          ~63:63[~R19] & 63:63[#4952]
0001408d: ZF := #4952 = 0
00014090: CF := 63:63[R0] & 63:63[~R19] | 63:63[~R19] & ~63:63[#4952] |
          63:63[R0] & ~63:63[#4952]
0001409f: #4954 := (CF & ~ZF) <> 0
00014099: when #4954 goto %00014097
00038630: goto %000140c4

000140c4:
000140ca: R1 := R22
000140d2: R0 := R20
000140d7: R30 := 0x5164
000140da: call @strstr with return %000140dc

000140dc:
000140e1: #4961 := R0
000140e5: NF := 63:63[#4961]
000140e8: VF := 63:63[R0] & ~63:63[#4961]
000140eb: ZF := #4961 = 0
000140ee: CF := 63:63[R0] | ~63:63[#4961] | 63:63[R0] & ~63:63[#4961]
00014108: #4963 := ZF
00014109: goto %00014100

00014100:
00014102: when #4963 goto %000140f9
00014103: goto %000140fd

000140fd:
000140fe: R24 := 31:0[R25]
00014105: goto %00014101

000140f9:
000140fa: R24 := 31:0[R24]
00014104: goto %00014101

00014101:
00014112: R0 := R20
00014117: R30 := 0x5174
00014119: call @free with return %0001411b

0001411b:
00014121: R21 := mem[R21 + 0x18, el]:u64
0001412c: #4967 := ~R21 = 0
00014126: when #4967 goto %00013fb6
0003862f: goto %00013fe6

00014097:
000140a4: R30 := 0x5134
000140a6: call @__ctype_tolower_loc with return %000140a8

000140a8:
000140af: R1 := high:32[R1].pad:64[mem[R20 + R19]]
000140b7: R0 := mem[R0, el]:u64
000140c2: R19 := R19 + 1
0003862e: goto %0001406b

00013fd2:
00013fe2: R21 := mem[R21 + 0x18, el]:u64
00013fee: #4932 := R21 = 0
00013fe8: when #4932 goto %00013fe6
0003862d: goto %00013fb6

00013fe6:
00013ff6: R0 := R22
00013ffe: R25 := mem[R31 + 0x40, el]:u64
00014003: R30 := 0x5188
00014005: call @free with return %00014007

00014007:
0001400e: R0 := 31:0[R24]
00014017: R19 := mem[R31 + 0x10, el]:u64
0001401b: R20 := mem[R31 + 0x18, el]:u64
00014024: R21 := mem[R31 + 0x20, el]:u64
00014028: R22 := mem[R31 + 0x28, el]:u64
00014031: R23 := mem[R31 + 0x30, el]:u64
00014035: R24 := mem[R31 + 0x38, el]:u64
0001403f: R29 := mem[R31, el]:u64
00014043: R30 := mem[R31 + 8, el]:u64
00014046: R31 := R31 + 0x50
0001404b: call R30 with noreturn

000132a2:
000132af: R30 := 0x50CC
000132b1: call @__ctype_tolower_loc with return %000132b3

000132b3:
000132ba: R1 := high:32[R1].pad:64[mem[R22 + R19]]
000132c2: R0 := mem[R0, el]:u64
000132cd: R19 := R19 + 1
0003862c: goto %00013276

00038634: sub hmac_md5(hmac_md5_result)
00038b01: hmac_md5_result :: out u32 = low:32[R0]

00012605:
0001260a: R31 := R31 - 0x210
00012611: #4258 := 0xFFFFFFFFFFFFFFC0 + R1
00012615: NF := 63:63[#4258]
00012618: VF := 63:63[R1] & ~63:63[#4258]
0001261b: ZF := #4258 = 0
0001261e: CF := 63:63[R1] | ~63:63[#4258] | 63:63[R1] & ~63:63[#4258]
00012629: mem := mem with [R31, el]:u64 <- R31
0001262d: mem := mem with [R31, el]:u64 <- R31 + 8
00012634: R29 := R31
0001263d: mem := mem with [R31, el]:u64 <- R31 + 0x20
00012641: mem := mem with [R31, el]:u64 <- R31 + 0x28
00012647: R20 := 0x27000
0001264f: R5 := mem[R20 + 0xFB8, el]:u64
00012658: mem := mem with [R31, el]:u64 <- R31 + 0x40
0001265c: mem := mem with [R31, el]:u64 <- R31 + 0x48
00012664: R22 := R2
0001266c: R6 := mem[R5, el]:u64
00012674: mem := mem with [R31 + 0x208, el]:u64 <- R6
0001267a: R6 := 0
00012683: mem := mem with [R31, el]:u64 <- R31 + 0x60
00012687: mem := mem with [R31, el]:u64 <- R31 + 0x68
0001268f: R21 := R4
00012698: mem := mem with [R31, el]:u64 <- R31 + 0x80
0001269c: mem := mem with [R31, el]:u64 <- R31 + 0x88
000126a4: R25 := R3
000126ad: mem := mem with [R31, el]:u64 <- R31 + 0xA0
000126b1: mem := mem with [R31, el]:u64 <- R31 + 0xA8
000126be: #4276 := (CF & ~ZF) <> 0
000126b8: when #4276 goto %000126b6
00038661: goto %00017cdd

000126b6:
000126c4: R2 := 0x11000
000126cb: R28 := R31 + 0x100
000126d2: R19 := R31 + 0x1A0
000126da: mem := mem with [R31 + 0x110, el]:u64 <- 0
000126e4: R2 := R28
000126ec: mem := mem with [R31 + 0x118, el]:u32 <- 0
000126f3: R27 := R31 + 0x1C0
000126fb: R23 := R19
00012701: R24 := 0xF
00012708: R30 := 0x9E14
0001270a: call @md5_process_bytes with return %0001270c

0001270c:
00012712: R1 := R19
0001271a: R0 := R28
0001271f: R30 := 0x9E20
00012721: call @md5_finish_ctx with return %00012723

00012723:
00012727: R3 := 0x11000
0001272f: R0 := R27
00012735: R26 := 0x10
0001273b: R2 := 0x40
00012744: R1 := 0x36
0001274c: mem := mem with [R31 + 0x70, el]:u64 <- 0
00012754: mem := mem with [R31 + 0x78, el]:u32 <- 0
0001275b: R30 := 0x9E48
0001275e: call @memset with return %00012760

00012760:
00012763: goto %00012761

00017cdd:
00017ce1: R3 := 0x11000
00017ce8: R27 := R31 + 0x1C0
00017cf0: R26 := R1
00017cf8: R23 := R0
00017d02: R0 := R27
00017d08: R2 := 0x40
00017d0f: R1 := 0x36
00017d17: mem := mem with [R31 + 0x70, el]:u64 <- 0
00017d21: mem := mem with [R31 + 0x78, el]:u32 <- 0
00017d26: R30 := 0x99B8
00017d28: call @memset with return %00017d2a

00017d2a:
00017d33: #6567 := R26 = 0
00017d2d: when #6567 goto %00017c43
00038660: goto %00017d36

00017c43:
00017c48: R19 := R31 + 0x60
00017c50: R0 := R27
00017c58: R2 := R19
00017c5e: R1 := 0x40
00017c63: R30 := 0x9E74
00017c65: call @md5_process_block with return %00017c67

00017c67:
00017c6c: R28 := R31 + 0x100
00017c74: R1 := R25
00017c7c: R0 := R22
00017c83: R22 := R31 + 0x1B0
00017c88: R30 := 0x9E88
00017c8a: call @md5_process_bytes with return %00017c8c

00017c8c:
00017c92: R1 := R22
00017c9a: R0 := R19
00017c9f: R30 := 0x9E94
00017ca1: call @md5_finish_ctx with return %00017ca3

00017ca3:
00017ca9: mem := mem with [R31 + 0x110, el]:u64 <- 0
00017caf: R3 := 0x11000
00017cb7: R0 := R27
00017cbd: R2 := 0x40
00017cc4: R1 := 0x5C
00017cce: mem := mem with [R31 + 0x118, el]:u32 <- 0
00017cd5: R30 := 0x9EB8
00017cd7: call @memset with return %00017cd9

00017cd9:
00017cdb: goto %00012923

00017d36:
00017d3b: R24 := R26 - 1
00017d42: #6568 := 0xFFFFFFFFFFFFFFF2 + R24
00017d46: NF := 63:63[#6568]
00017d49: VF := 63:63[R24] & ~63:63[#6568]
00017d4c: ZF := #6568 = 0
00017d4f: CF := 63:63[R24] | ~63:63[#6568] | 63:63[R24] & ~63:63[#6568]
00017d5d: #6570 := (~CF | ZF) <> 0
00017d57: when #6570 goto %00017c20
0003865f: goto %00017d60

00017c20:
00017c26: R0 := R26
00017c2e: R2 := R23
00017c36: R1 := R27
00017c3d: R28 := R31 + 0x100
00017c41: goto %00017772

00017d60:
00017d65: R28 := R31 + 0x100
0003865e: goto %00012761

00012761:
00012769: R19 := R26 - 0x10
00012771: R6 := R27
00012777: R5 := 0
0001277e: R0 := R19 >> 4
00012785: R0 := R0 + 1
0003865d: goto %00012787

00012787:
0001278c: R1 := R5 << 4
00012793: R5 := R5 + 1
0001279d: #4305 := 1 + ~R0 + R5
000127a1: NF := 63:63[#4305]
000127a4: VF := 63:63[R5] & 63:63[~R0] & ~63:63[#4305] | ~63:63[R5] &
          ~63:63[~R0] & 63:63[#4305]
000127a7: ZF := #4305 = 0
000127aa: CF := 63:63[R5] & 63:63[~R0] | 63:63[~R0] & ~63:63[#4305] |
          63:63[R5] & ~63:63[#4305]
000127bd: #4307 := ~CF <> 0
000127b7: when #4307 goto %00012787
0003865c: goto %000127c0

000127c0:
000127c5: R0 := R0 << 4
000127cd: #4313 := 1 + ~R0 + R26
000127d1: NF := 63:63[#4313]
000127d4: VF := 63:63[R26] & 63:63[~R0] & ~63:63[#4313] | ~63:63[R26] &
          ~63:63[~R0] & 63:63[#4313]
000127d7: ZF := #4313 = 0
000127da: CF := 63:63[R26] & 63:63[~R0] | 63:63[~R0] & ~63:63[#4313] |
          63:63[R26] & ~63:63[#4313]
000127e4: R2 := R23 + R0
000127ec: R1 := R27 + R0
000127f4: R0 := R26 - R0
00012800: #4324 := ZF
000127fa: when #4324 goto %000127f8
0003865b: goto %00017772

000127f8:
00012807: R24 := R31 + 0x60
0001280f: R0 := R27
00012817: R2 := R24
0001281d: R1 := 0x40
00012822: R30 := 0x9ED8
00012824: call @md5_process_block with return %00012826

00012826:
0001282c: R1 := R25
00012834: R0 := R22
0001283b: R22 := R31 + 0x1B0
00012840: R30 := 0x9EE8
00012842: call @md5_process_bytes with return %00012844

00012844:
0001284a: R1 := R22
00012852: R0 := R24
00012857: R30 := 0x9EF4
00012859: call @md5_finish_ctx with return %0001285b

0001285b:
00012861: mem := mem with [R31 + 0x110, el]:u64 <- 0
00012867: R0 := 0x11000
0001286d: R2 := 0x40
00012874: R1 := 0x5C
0001287c: mem := mem with [R31 + 0x118, el]:u32 <- 0
00012886: R0 := R27
0001288d: R30 := 0x9F18
0001288f: call @memset with return %00012891

00012891:
00012894: goto %00012892

00017772:
00017779: R3 := pad:64[mem[R2]]
00017780: #6408 := 0xFFFFFFFFFFFFFFFF + R0
00017784: NF := 63:63[#6408]
00017787: VF := 63:63[R0] & ~63:63[#6408]
0001778a: ZF := #6408 = 0
0001778d: CF := 63:63[R0] | ~63:63[#6408] | 63:63[R0] & ~63:63[#6408]
00017798: R4 := pad:64[mem[R1]]
000177a1: R3 := 31:0[R3] ^ 31:0[R4]
000177a9: mem := mem with [R1] <- low:8[31:0[R3]]
000177b5: #6413 := ZF
000177af: when #6413 goto %000177ad
0003865a: goto %0001787c

0001787c:
00017883: R3 := pad:64[mem[R2 + 1]]
0001788a: #6443 := 0xFFFFFFFFFFFFFFFE + R0
0001788e: NF := 63:63[#6443]
00017891: VF := 63:63[R0] & ~63:63[#6443]
00017894: ZF := #6443 = 0
00017897: CF := 63:63[R0] | ~63:63[#6443] | 63:63[R0] & ~63:63[#6443]
000178a2: R4 := pad:64[mem[R1 + 1]]
000178ab: R3 := 31:0[R3] ^ 31:0[R4]
000178b3: mem := mem with [R1 + 1] <- low:8[31:0[R3]]
000178be: #6448 := ZF
000178b8: when #6448 goto %000177ad
00038659: goto %000178c1

000178c1:
000178c8: R3 := pad:64[mem[R2 + 2]]
000178cf: #6449 := 0xFFFFFFFFFFFFFFFD + R0
000178d3: NF := 63:63[#6449]
000178d6: VF := 63:63[R0] & ~63:63[#6449]
000178d9: ZF := #6449 = 0
000178dc: CF := 63:63[R0] | ~63:63[#6449] | 63:63[R0] & ~63:63[#6449]
000178e7: R4 := pad:64[mem[R1 + 2]]
000178f0: R3 := 31:0[R3] ^ 31:0[R4]
000178f8: mem := mem with [R1 + 2] <- low:8[31:0[R3]]
00017903: #6454 := ZF
000178fd: when #6454 goto %000177ad
00038658: goto %00017906

00017906:
0001790d: R3 := pad:64[mem[R2 + 3]]
00017914: #6455 := 0xFFFFFFFFFFFFFFFC + R0
00017918: NF := 63:63[#6455]
0001791b: VF := 63:63[R0] & ~63:63[#6455]
0001791e: ZF := #6455 = 0
00017921: CF := 63:63[R0] | ~63:63[#6455] | 63:63[R0] & ~63:63[#6455]
0001792c: R4 := pad:64[mem[R1 + 3]]
00017935: R3 := 31:0[R3] ^ 31:0[R4]
0001793d: mem := mem with [R1 + 3] <- low:8[31:0[R3]]
00017948: #6460 := ZF
00017942: when #6460 goto %000177ad
00038657: goto %0001794b

0001794b:
00017952: R3 := pad:64[mem[R2 + 4]]
00017959: #6461 := 0xFFFFFFFFFFFFFFFB + R0
0001795d: NF := 63:63[#6461]
00017960: VF := 63:63[R0] & ~63:63[#6461]
00017963: ZF := #6461 = 0
00017966: CF := 63:63[R0] | ~63:63[#6461] | 63:63[R0] & ~63:63[#6461]
00017971: R4 := pad:64[mem[R1 + 4]]
0001797a: R3 := 31:0[R3] ^ 31:0[R4]
00017982: mem := mem with [R1 + 4] <- low:8[31:0[R3]]
0001798d: #6466 := ZF
00017987: when #6466 goto %000177ad
00038656: goto %00017990

00017990:
00017997: R3 := pad:64[mem[R2 + 5]]
0001799e: #6467 := 0xFFFFFFFFFFFFFFFA + R0
000179a2: NF := 63:63[#6467]
000179a5: VF := 63:63[R0] & ~63:63[#6467]
000179a8: ZF := #6467 = 0
000179ab: CF := 63:63[R0] | ~63:63[#6467] | 63:63[R0] & ~63:63[#6467]
000179b6: R4 := pad:64[mem[R1 + 5]]
000179bf: R3 := 31:0[R3] ^ 31:0[R4]
000179c7: mem := mem with [R1 + 5] <- low:8[31:0[R3]]
000179d2: #6472 := ZF
000179cc: when #6472 goto %000177ad
00038655: goto %000179d5

000179d5:
000179dc: R3 := pad:64[mem[R2 + 6]]
000179e3: #6473 := 0xFFFFFFFFFFFFFFF9 + R0
000179e7: NF := 63:63[#6473]
000179ea: VF := 63:63[R0] & ~63:63[#6473]
000179ed: ZF := #6473 = 0
000179f0: CF := 63:63[R0] | ~63:63[#6473] | 63:63[R0] & ~63:63[#6473]
000179fb: R4 := pad:64[mem[R1 + 6]]
00017a04: R3 := 31:0[R3] ^ 31:0[R4]
00017a0c: mem := mem with [R1 + 6] <- low:8[31:0[R3]]
00017a17: #6478 := ZF
00017a11: when #6478 goto %000177ad
00038654: goto %00017a1a

00017a1a:
00017a21: R3 := pad:64[mem[R2 + 7]]
00017a28: #6479 := 0xFFFFFFFFFFFFFFF8 + R0
00017a2c: NF := 63:63[#6479]
00017a2f: VF := 63:63[R0] & ~63:63[#6479]
00017a32: ZF := #6479 = 0
00017a35: CF := 63:63[R0] | ~63:63[#6479] | 63:63[R0] & ~63:63[#6479]
00017a40: R4 := pad:64[mem[R1 + 7]]
00017a49: R3 := 31:0[R3] ^ 31:0[R4]
00017a51: mem := mem with [R1 + 7] <- low:8[31:0[R3]]
00017a5c: #6484 := ZF
00017a56: when #6484 goto %000177ad
00038653: goto %00017a5f

00017a5f:
00017a66: R3 := pad:64[mem[R2 + 8]]
00017a6d: #6485 := 0xFFFFFFFFFFFFFFF7 + R0
00017a71: NF := 63:63[#6485]
00017a74: VF := 63:63[R0] & ~63:63[#6485]
00017a77: ZF := #6485 = 0
00017a7a: CF := 63:63[R0] | ~63:63[#6485] | 63:63[R0] & ~63:63[#6485]
00017a85: R4 := pad:64[mem[R1 + 8]]
00017a8e: R3 := 31:0[R3] ^ 31:0[R4]
00017a96: mem := mem with [R1 + 8] <- low:8[31:0[R3]]
00017aa1: #6490 := ZF
00017a9b: when #6490 goto %000177ad
00038652: goto %00017aa4

00017aa4:
00017aab: R3 := pad:64[mem[R2 + 9]]
00017ab2: #6491 := 0xFFFFFFFFFFFFFFF6 + R0
00017ab6: NF := 63:63[#6491]
00017ab9: VF := 63:63[R0] & ~63:63[#6491]
00017abc: ZF := #6491 = 0
00017abf: CF := 63:63[R0] | ~63:63[#6491] | 63:63[R0] & ~63:63[#6491]
00017aca: R4 := pad:64[mem[R1 + 9]]
00017ad3: R3 := 31:0[R3] ^ 31:0[R4]
00017adb: mem := mem with [R1 + 9] <- low:8[31:0[R3]]
00017ae6: #6496 := ZF
00017ae0: when #6496 goto %000177ad
00038651: goto %00017ae9

00017ae9:
00017af0: R3 := pad:64[mem[R2 + 0xA]]
00017af7: #6497 := 0xFFFFFFFFFFFFFFF5 + R0
00017afb: NF := 63:63[#6497]
00017afe: VF := 63:63[R0] & ~63:63[#6497]
00017b01: ZF := #6497 = 0
00017b04: CF := 63:63[R0] | ~63:63[#6497] | 63:63[R0] & ~63:63[#6497]
00017b0f: R4 := pad:64[mem[R1 + 0xA]]
00017b18: R3 := 31:0[R3] ^ 31:0[R4]
00017b20: mem := mem with [R1 + 0xA] <- low:8[31:0[R3]]
00017b2b: #6502 := ZF
00017b25: when #6502 goto %000177ad
00038650: goto %00017b2e

00017b2e:
00017b35: R3 := pad:64[mem[R2 + 0xB]]
00017b3c: #6503 := 0xFFFFFFFFFFFFFFF4 + R0
00017b40: NF := 63:63[#6503]
00017b43: VF := 63:63[R0] & ~63:63[#6503]
00017b46: ZF := #6503 = 0
00017b49: CF := 63:63[R0] | ~63:63[#6503] | 63:63[R0] & ~63:63[#6503]
00017b54: R4 := pad:64[mem[R1 + 0xB]]
00017b5d: R3 := 31:0[R3] ^ 31:0[R4]
00017b65: mem := mem with [R1 + 0xB] <- low:8[31:0[R3]]
00017b70: #6508 := ZF
00017b6a: when #6508 goto %000177ad
0003864f: goto %00017b73

00017b73:
00017b7a: R3 := pad:64[mem[R2 + 0xC]]
00017b81: #6509 := 0xFFFFFFFFFFFFFFF3 + R0
00017b85: NF := 63:63[#6509]
00017b88: VF := 63:63[R0] & ~63:63[#6509]
00017b8b: ZF := #6509 = 0
00017b8e: CF := 63:63[R0] | ~63:63[#6509] | 63:63[R0] & ~63:63[#6509]
00017b99: R4 := pad:64[mem[R1 + 0xC]]
00017ba2: R3 := 31:0[R3] ^ 31:0[R4]
00017baa: mem := mem with [R1 + 0xC] <- low:8[31:0[R3]]
00017bb5: #6514 := ZF
00017baf: when #6514 goto %000177ad
0003864e: goto %00017bb8

00017bb8:
00017bbf: R3 := pad:64[mem[R2 + 0xD]]
00017bc6: #6515 := 0xFFFFFFFFFFFFFFF2 + R0
00017bca: NF := 63:63[#6515]
00017bcd: VF := 63:63[R0] & ~63:63[#6515]
00017bd0: ZF := #6515 = 0
00017bd3: CF := 63:63[R0] | ~63:63[#6515] | 63:63[R0] & ~63:63[#6515]
00017bde: R0 := pad:64[mem[R1 + 0xD]]
00017be7: R0 := 31:0[R3] ^ 31:0[R0]
00017bef: mem := mem with [R1 + 0xD] <- low:8[31:0[R0]]
00017bfa: #6520 := ZF
00017bf4: when #6520 goto %000177ad
0003864d: goto %00017bfd

00017bfd:
00017c04: R0 := pad:64[mem[R2 + 0xE]]
00017c0d: R2 := pad:64[mem[R1 + 0xE]]
00017c16: R0 := 31:0[R0] ^ 31:0[R2]
00017c1e: mem := mem with [R1 + 0xE] <- low:8[31:0[R0]]
0003864c: goto %000177ad

000177ad:
000177bc: R19 := R31 + 0x60
000177c4: R0 := R27
000177cc: R2 := R19
000177d2: R1 := 0x40
000177d7: R30 := 0x9B8C
000177d9: call @md5_process_block with return %000177db

000177db:
000177e1: R0 := R22
000177e9: R1 := R25
000177f0: R22 := R31 + 0x1B0
000177f5: R30 := 0x9B9C
000177f7: call @md5_process_bytes with return %000177f9

000177f9:
000177ff: R1 := R22
00017807: R0 := R19
0001780c: R30 := 0x9BA8
0001780e: call @md5_finish_ctx with return %00017810

00017810:
00017816: mem := mem with [R31 + 0x110, el]:u64 <- 0
0001781c: R0 := 0x11000
00017822: R2 := 0x40
00017829: R1 := 0x5C
00017831: mem := mem with [R31 + 0x118, el]:u32 <- 0
0001783b: R0 := R27
00017842: R30 := 0x9BCC
00017844: call @memset with return %00017846

00017846:
0001784b: #6437 := 0xFFFFFFFFFFFFFFF2 + R24
0001784f: NF := 63:63[#6437]
00017852: VF := 63:63[R24] & ~63:63[#6437]
00017855: ZF := #6437 = 0
00017858: CF := 63:63[R24] | ~63:63[#6437] | 63:63[R24] & ~63:63[#6437]
00017867: #6439 := (~CF | ZF) <> 0
00017861: when #6439 goto %0001785f
0003864b: goto %00017875

0001785f:
0001786f: R1 := R27
00017873: goto %00017389

00017875:
0001787a: R19 := R26 - 0x10
0003864a: goto %00012892

00012892:
0001289a: R5 := R19 >> 4
000128a2: R3 := R27
000128a9: R5 := R5 + 1
000128af: R2 := 0
00038649: goto %000128b1

000128b1:
000128b6: R0 := R2 << 4
000128bd: R2 := R2 + 1
000128c7: #4357 := 1 + ~R2 + R5
000128cb: NF := 63:63[#4357]
000128ce: VF := 63:63[R5] & 63:63[~R2] & ~63:63[#4357] | ~63:63[R5] &
          ~63:63[~R2] & 63:63[#4357]
000128d1: ZF := #4357 = 0
000128d4: CF := 63:63[R5] & 63:63[~R2] | 63:63[~R2] & ~63:63[#4357] |
          63:63[R5] & ~63:63[#4357]
000128e8: #4359 := (CF & ~ZF) <> 0
000128e2: when #4359 goto %000128b1
00038648: goto %000128eb

000128eb:
000128f0: R5 := R5 << 4
000128f8: #4365 := 1 + ~R26 + R5
000128fc: NF := 63:63[#4365]
000128ff: VF := 63:63[R5] & 63:63[~R26] & ~63:63[#4365] | ~63:63[R5] &
          ~63:63[~R26] & 63:63[#4365]
00012902: ZF := #4365 = 0
00012905: CF := 63:63[R5] & 63:63[~R26] | 63:63[~R26] & ~63:63[#4365] |
          63:63[R5] & ~63:63[#4365]
0001290f: R23 := R23 + R5
00012917: R26 := R26 - R5
0001291f: R1 := R27 + R5
0001292b: #4376 := ZF
00012925: when #4376 goto %00012923
00038647: goto %00017389

00017389:
00017390: R0 := pad:64[mem[R23]]
00017397: #6321 := 0xFFFFFFFFFFFFFFFF + R26
0001739b: NF := 63:63[#6321]
0001739e: VF := 63:63[R26] & ~63:63[#6321]
000173a1: ZF := #6321 = 0
000173a4: CF := 63:63[R26] | ~63:63[#6321] | 63:63[R26] & ~63:63[#6321]
000173af: R2 := pad:64[mem[R1]]
000173b8: R0 := 31:0[R0] ^ 31:0[R2]
000173c0: mem := mem with [R1] <- low:8[31:0[R0]]
000173cb: #6326 := ZF
000173c5: when #6326 goto %00012923
00038646: goto %000173ce

000173ce:
000173d5: R0 := pad:64[mem[R23 + 1]]
000173dc: #6327 := 0xFFFFFFFFFFFFFFFE + R26
000173e0: NF := 63:63[#6327]
000173e3: VF := 63:63[R26] & ~63:63[#6327]
000173e6: ZF := #6327 = 0
000173e9: CF := 63:63[R26] | ~63:63[#6327] | 63:63[R26] & ~63:63[#6327]
000173f4: R2 := pad:64[mem[R1 + 1]]
000173fd: R0 := 31:0[R0] ^ 31:0[R2]
00017405: mem := mem with [R1 + 1] <- low:8[31:0[R0]]
00017410: #6332 := ZF
0001740a: when #6332 goto %00012923
00038645: goto %00017413

00017413:
0001741a: R0 := pad:64[mem[R23 + 2]]
00017421: #6333 := 0xFFFFFFFFFFFFFFFD + R26
00017425: NF := 63:63[#6333]
00017428: VF := 63:63[R26] & ~63:63[#6333]
0001742b: ZF := #6333 = 0
0001742e: CF := 63:63[R26] | ~63:63[#6333] | 63:63[R26] & ~63:63[#6333]
00017439: R2 := pad:64[mem[R1 + 2]]
00017442: R0 := 31:0[R0] ^ 31:0[R2]
0001744a: mem := mem with [R1 + 2] <- low:8[31:0[R0]]
00017455: #6338 := ZF
0001744f: when #6338 goto %00012923
00038644: goto %00017458

00017458:
0001745f: R0 := pad:64[mem[R23 + 3]]
00017466: #6339 := 0xFFFFFFFFFFFFFFFC + R26
0001746a: NF := 63:63[#6339]
0001746d: VF := 63:63[R26] & ~63:63[#6339]
00017470: ZF := #6339 = 0
00017473: CF := 63:63[R26] | ~63:63[#6339] | 63:63[R26] & ~63:63[#6339]
0001747e: R2 := pad:64[mem[R1 + 3]]
00017487: R0 := 31:0[R0] ^ 31:0[R2]
0001748f: mem := mem with [R1 + 3] <- low:8[31:0[R0]]
0001749a: #6344 := ZF
00017494: when #6344 goto %00012923
00038643: goto %0001749d

0001749d:
000174a4: R0 := pad:64[mem[R23 + 4]]
000174ab: #6345 := 0xFFFFFFFFFFFFFFFB + R26
000174af: NF := 63:63[#6345]
000174b2: VF := 63:63[R26] & ~63:63[#6345]
000174b5: ZF := #6345 = 0
000174b8: CF := 63:63[R26] | ~63:63[#6345] | 63:63[R26] & ~63:63[#6345]
000174c3: R2 := pad:64[mem[R1 + 4]]
000174cc: R0 := 31:0[R0] ^ 31:0[R2]
000174d4: mem := mem with [R1 + 4] <- low:8[31:0[R0]]
000174df: #6350 := ZF
000174d9: when #6350 goto %00012923
00038642: goto %000174e2

000174e2:
000174e9: R0 := pad:64[mem[R23 + 5]]
000174f0: #6351 := 0xFFFFFFFFFFFFFFFA + R26
000174f4: NF := 63:63[#6351]
000174f7: VF := 63:63[R26] & ~63:63[#6351]
000174fa: ZF := #6351 = 0
000174fd: CF := 63:63[R26] | ~63:63[#6351] | 63:63[R26] & ~63:63[#6351]
00017508: R2 := pad:64[mem[R1 + 5]]
00017511: R0 := 31:0[R0] ^ 31:0[R2]
00017519: mem := mem with [R1 + 5] <- low:8[31:0[R0]]
00017524: #6356 := ZF
0001751e: when #6356 goto %00012923
00038641: goto %00017527

00017527:
0001752e: R0 := pad:64[mem[R23 + 6]]
00017535: #6357 := 0xFFFFFFFFFFFFFFF9 + R26
00017539: NF := 63:63[#6357]
0001753c: VF := 63:63[R26] & ~63:63[#6357]
0001753f: ZF := #6357 = 0
00017542: CF := 63:63[R26] | ~63:63[#6357] | 63:63[R26] & ~63:63[#6357]
0001754d: R2 := pad:64[mem[R1 + 6]]
00017556: R0 := 31:0[R0] ^ 31:0[R2]
0001755e: mem := mem with [R1 + 6] <- low:8[31:0[R0]]
00017569: #6362 := ZF
00017563: when #6362 goto %00012923
00038640: goto %0001756c

0001756c:
00017573: R0 := pad:64[mem[R23 + 7]]
0001757a: #6363 := 0xFFFFFFFFFFFFFFF8 + R26
0001757e: NF := 63:63[#6363]
00017581: VF := 63:63[R26] & ~63:63[#6363]
00017584: ZF := #6363 = 0
00017587: CF := 63:63[R26] | ~63:63[#6363] | 63:63[R26] & ~63:63[#6363]
00017592: R2 := pad:64[mem[R1 + 7]]
0001759b: R0 := 31:0[R0] ^ 31:0[R2]
000175a3: mem := mem with [R1 + 7] <- low:8[31:0[R0]]
000175ae: #6368 := ZF
000175a8: when #6368 goto %00012923
0003863f: goto %000175b1

000175b1:
000175b8: R0 := pad:64[mem[R23 + 8]]
000175bf: #6369 := 0xFFFFFFFFFFFFFFF7 + R26
000175c3: NF := 63:63[#6369]
000175c6: VF := 63:63[R26] & ~63:63[#6369]
000175c9: ZF := #6369 = 0
000175cc: CF := 63:63[R26] | ~63:63[#6369] | 63:63[R26] & ~63:63[#6369]
000175d7: R2 := pad:64[mem[R1 + 8]]
000175e0: R0 := 31:0[R0] ^ 31:0[R2]
000175e8: mem := mem with [R1 + 8] <- low:8[31:0[R0]]
000175f3: #6374 := ZF
000175ed: when #6374 goto %00012923
0003863e: goto %000175f6

000175f6:
000175fd: R0 := pad:64[mem[R23 + 9]]
00017604: #6375 := 0xFFFFFFFFFFFFFFF6 + R26
00017608: NF := 63:63[#6375]
0001760b: VF := 63:63[R26] & ~63:63[#6375]
0001760e: ZF := #6375 = 0
00017611: CF := 63:63[R26] | ~63:63[#6375] | 63:63[R26] & ~63:63[#6375]
0001761c: R2 := pad:64[mem[R1 + 9]]
00017625: R0 := 31:0[R0] ^ 31:0[R2]
0001762d: mem := mem with [R1 + 9] <- low:8[31:0[R0]]
00017638: #6380 := ZF
00017632: when #6380 goto %00012923
0003863d: goto %0001763b

0001763b:
00017642: R0 := pad:64[mem[R23 + 0xA]]
00017649: #6381 := 0xFFFFFFFFFFFFFFF5 + R26
0001764d: NF := 63:63[#6381]
00017650: VF := 63:63[R26] & ~63:63[#6381]
00017653: ZF := #6381 = 0
00017656: CF := 63:63[R26] | ~63:63[#6381] | 63:63[R26] & ~63:63[#6381]
00017661: R2 := pad:64[mem[R1 + 0xA]]
0001766a: R0 := 31:0[R0] ^ 31:0[R2]
00017672: mem := mem with [R1 + 0xA] <- low:8[31:0[R0]]
0001767d: #6386 := ZF
00017677: when #6386 goto %00012923
0003863c: goto %00017680

00017680:
00017687: R0 := pad:64[mem[R23 + 0xB]]
0001768e: #6387 := 0xFFFFFFFFFFFFFFF4 + R26
00017692: NF := 63:63[#6387]
00017695: VF := 63:63[R26] & ~63:63[#6387]
00017698: ZF := #6387 = 0
0001769b: CF := 63:63[R26] | ~63:63[#6387] | 63:63[R26] & ~63:63[#6387]
000176a6: R2 := pad:64[mem[R1 + 0xB]]
000176af: R0 := 31:0[R0] ^ 31:0[R2]
000176b7: mem := mem with [R1 + 0xB] <- low:8[31:0[R0]]
000176c2: #6392 := ZF
000176bc: when #6392 goto %00012923
0003863b: goto %000176c5

000176c5:
000176cc: R0 := pad:64[mem[R23 + 0xC]]
000176d3: #6393 := 0xFFFFFFFFFFFFFFF3 + R26
000176d7: NF := 63:63[#6393]
000176da: VF := 63:63[R26] & ~63:63[#6393]
000176dd: ZF := #6393 = 0
000176e0: CF := 63:63[R26] | ~63:63[#6393] | 63:63[R26] & ~63:63[#6393]
000176eb: R2 := pad:64[mem[R1 + 0xC]]
000176f4: R0 := 31:0[R0] ^ 31:0[R2]
000176fc: mem := mem with [R1 + 0xC] <- low:8[31:0[R0]]
00017707: #6398 := ZF
00017701: when #6398 goto %00012923
0003863a: goto %0001770a

0001770a:
00017711: R0 := pad:64[mem[R23 + 0xD]]
00017718: #6399 := 0xFFFFFFFFFFFFFFF2 + R26
0001771c: NF := 63:63[#6399]
0001771f: VF := 63:63[R26] & ~63:63[#6399]
00017722: ZF := #6399 = 0
00017725: CF := 63:63[R26] | ~63:63[#6399] | 63:63[R26] & ~63:63[#6399]
00017730: R2 := pad:64[mem[R1 + 0xD]]
00017739: R0 := 31:0[R0] ^ 31:0[R2]
00017741: mem := mem with [R1 + 0xD] <- low:8[31:0[R0]]
0001774c: #6404 := ZF
00017746: when #6404 goto %00012923
00038639: goto %0001774f

0001774f:
00017756: R2 := pad:64[mem[R23 + 0xE]]
0001775f: R0 := pad:64[mem[R1 + 0xE]]
00017768: R0 := 31:0[R0] ^ 31:0[R2]
00017770: mem := mem with [R1 + 0xE] <- low:8[31:0[R0]]
00038638: goto %00012923

00012923:
00012933: R2 := R28
0001293b: R0 := R27
00012941: R1 := 0x40
00012946: R30 := 0x9D90
00012948: call @md5_process_block with return %0001294a

0001294a:
00012950: R0 := R22
00012956: R1 := 0x10
0001295b: R30 := 0x9D9C
0001295d: call @md5_process_bytes with return %0001295f

0001295f:
00012965: R1 := R21
0001296d: R0 := R28
00012972: R30 := 0x9DA8
00012974: call @md5_finish_ctx with return %00012976

00012976:
0001297c: R20 := mem[R20 + 0xFB8, el]:u64
00012984: R0 := mem[R31 + 0x208, el]:u64
0001298c: R1 := mem[R20, el]:u64
00012994: #4395 := 1 + ~R1 + R0
00012998: NF := 63:63[#4395]
0001299b: VF := 63:63[R0] & 63:63[~R1] & ~63:63[#4395] | ~63:63[R0] &
          ~63:63[~R1] & 63:63[#4395]
0001299e: ZF := #4395 = 0
000129a1: CF := 63:63[R0] & 63:63[~R1] | 63:63[~R1] & ~63:63[#4395] |
          63:63[R0] & ~63:63[#4395]
000129a5: R0 := #4395
000129ab: R1 := 0
000129b7: #4397 := ~ZF <> 0
000129b1: when #4397 goto %000129af
00038637: goto %00017328

000129af:
000129bc: R30 := 0x9F20
000129be: call @__stack_chk_fail with return %00038635

00038635:
00038636: call @md5_stream with noreturn

00017328:
0001732d: R0 := 0
00017336: R29 := mem[R31, el]:u64
0001733a: R30 := mem[R31 + 8, el]:u64
00017343: R19 := mem[R31 + 0x10, el]:u64
00017347: R20 := mem[R31 + 0x18, el]:u64
00017350: R21 := mem[R31 + 0x20, el]:u64
00017354: R22 := mem[R31 + 0x28, el]:u64
0001735d: R23 := mem[R31 + 0x30, el]:u64
00017361: R24 := mem[R31 + 0x38, el]:u64
0001736a: R25 := mem[R31 + 0x40, el]:u64
0001736e: R26 := mem[R31 + 0x48, el]:u64
00017377: R27 := mem[R31 + 0x50, el]:u64
0001737b: R28 := mem[R31 + 0x58, el]:u64
00017382: R31 := R31 + 0x210
00017387: call R30 with noreturn

00038662: sub host_connect(host_connect_result)
00038b02: host_connect_result :: out u32 = low:32[R0]

000202e4:
000202ec: mem := mem with [R31 - 0x40, el]:u64 <- R29
000202f0: mem := mem with [R31 - 0x38, el]:u64 <- R30
000202f3: R31 := R31 - 0x40
000202fa: R29 := R31
00020303: mem := mem with [R31, el]:u64 <- R31 + 0x20
00020307: mem := mem with [R31, el]:u64 <- R31 + 0x28
0002030d: R19 := 0x27000
00020315: R20 := R0
0002031d: R0 := mem[R19 + 0xFB8, el]:u64
00020325: mem := mem with [R31 + 0x20, el]:u64 <- R21
0002032e: R21 := 31:0[R1]
00020336: R1 := mem[R0, el]:u64
0002033e: mem := mem with [R31 + 0x38, el]:u64 <- R1
00020344: R1 := 0
00020349: R30 := 0xE8F8
0002034b: call @__errno_location with return %0002034d

0002034d:
00020353: R2 := R0
0002035b: R1 := R20
00020362: R0 := R31 + 0x30
0002036a: mem := mem with [R2, el]:u32 <- 0
0002036f: R30 := 0xE90C
00020371: call @so_resolv with return %00020373

00020373:
0002037d: #11772 := 31:0[R0] = 0
00020377: when #11772 goto %00020375
00038666: goto %00026954

00020375:
00020384: R0 := 0xFFFFFFFFFFFFFFFF
00020389: goto %00020387

00026954:
0002695b: R0 := pad:64[mem[R31 + 0x30, el]:u32]
00026964: R1 := 31:0[R21]
00026969: R30 := 0xE91C
0002696b: call @so_connect with return %00020387

00020387:
00020390: R19 := mem[R19 + 0xFB8, el]:u64
00020398: R1 := mem[R31 + 0x38, el]:u64
000203a0: R2 := mem[R19, el]:u64
000203a8: #11776 := 1 + ~R2 + R1
000203ac: NF := 63:63[#11776]
000203af: VF := 63:63[R1] & 63:63[~R2] & ~63:63[#11776] | ~63:63[R1] &
          ~63:63[~R2] & 63:63[#11776]
000203b2: ZF := #11776 = 0
000203b5: CF := 63:63[R1] & 63:63[~R2] | 63:63[~R2] & ~63:63[#11776] |
          63:63[R1] & ~63:63[#11776]
000203b9: R1 := #11776
000203bf: R2 := 0
000203cb: #11778 := ~ZF <> 0
000203c5: when #11778 goto %000203c3
00038665: goto %00026929

000203c3:
000203d0: R30 := 0xE950
000203d2: call @__stack_chk_fail with return %00038663

00038663:
00038664: call @www_authenticate with noreturn

00026929:
00026930: R19 := mem[R31 + 0x10, el]:u64
00026934: R20 := mem[R31 + 0x18, el]:u64
0002693c: R21 := mem[R31 + 0x20, el]:u64
00026946: R29 := mem[R31, el]:u64
0002694a: R30 := mem[R31 + 8, el]:u64
0002694d: R31 := R31 + 0x40
00026952: call R30 with noreturn

00038667: sub http_body_drop(http_body_drop_result)
00038b03: http_body_drop_result :: out u32 = low:32[R0]

0001e78e:
0001e796: mem := mem with [R31 - 0x40, el]:u64 <- R29
0001e79a: mem := mem with [R31 - 0x38, el]:u64 <- R30
0001e79d: R31 := R31 - 0x40
0001e7a4: R29 := R31
0001e7ad: mem := mem with [R31, el]:u64 <- R31 + 0x20
0001e7b1: mem := mem with [R31, el]:u64 <- R31 + 0x28
0001e7b9: R19 := R1
0001e7c2: mem := mem with [R31, el]:u64 <- R31 + 0x40
0001e7c6: mem := mem with [R31, el]:u64 <- R31 + 0x48
0001e7cf: R21 := 31:0[R0]
0001e7db: #11169 := R1 = 0
0001e7d5: when #11169 goto %0001e7d3
00038678: goto %000291bf

0001e7d3:
0001e7e1: R20 := 0
0001e7e6: goto %0001e7e4

000291bf:
000291c6: R0 := pad:64[mem[R1 + 0x1C, el]:u32]
000291d1: #15320 := ~31:0[R0] = 0
000291cb: when #15320 goto %0001ea46
00038677: goto %000291d4

0001ea46:
0001ea4a: R0 := 0
0001ea52: R0 := mem[R0 + 8, el]:u64
0001ea5a: mem := mem with [R31 + 0x30, el]:u64 <- R23
00038676: call @http_parse_basic with noreturn

000291d4:
000291da: R20 := R1
00038675: goto %0001e7e4

0001e7e4:
0001e7ee: R0 := pad:64[mem[R19 + 0x10, el]:u32]
0001e7f5: R3 := 0xCC
0001e7fc: R1 := 0x63
0001e803: #11170 := 0xFFFFFFFFFFFFFED0 + extend:64[31:0[R0]]
0001e807: NF := 63:63[#11170]
0001e80a: VF := 31:31[R0] & ~63:63[#11170]
0001e80d: ZF := #11170 = 0
0001e810: CF := 31:31[R0] | 31:31[R0] & ~63:63[#11170] | ~63:63[#11170]
0001e81b: R2 := extend:64[31:0[R0]] - 0x64
0001e847: #11172 := ~ZF <> 0
0001e848: goto %0001e83f

0001e83f:
0001e841: when #11172 goto %0001e822
0001e842: goto %0001e833

0001e833:
0001e834: NF := 0
0001e837: ZF := 1
0001e83a: CF := 0
0001e83d: VF := 0
0001e844: goto %0001e840

0001e822:
0001e823: #11173 := ~31:0[R3]
0001e828: NF := 63:63[extend:64[31:0[R0]] + extend:64[#11173] + 1]
0001e82b: VF := 31:31[R0] & 31:31[#11173] & ~63:63[extend:64[31:0[R0]] +
          extend:64[#11173] + 1] | ~31:31[R0] & ~31:31[#11173] &
          63:63[extend:64[31:0[R0]] + extend:64[#11173] + 1]
0001e82e: ZF := extend:64[31:0[R0]] + extend:64[#11173] + 1 = 0
0001e831: CF := 31:31[R0] & 31:31[#11173] | 31:31[#11173] &
          ~63:63[extend:64[31:0[R0]] + extend:64[#11173] + 1] | 31:31[R0] &
          ~63:63[extend:64[31:0[R0]] + extend:64[#11173] + 1]
0001e843: goto %0001e840

0001e840:
0001e875: #11175 := ~ZF <> 0
0001e876: goto %0001e86d

0001e86d:
0001e86f: when #11175 goto %0001e850
0001e870: goto %0001e861

0001e861:
0001e862: NF := 0
0001e865: ZF := 0
0001e868: CF := 0
0001e86b: VF := 0
0001e872: goto %0001e86e

0001e850:
0001e851: #11176 := ~31:0[R1]
0001e856: NF := 63:63[extend:64[31:0[R2]] + extend:64[#11176] + 1]
0001e859: VF := 31:31[R2] & 31:31[#11176] & ~63:63[extend:64[31:0[R2]] +
          extend:64[#11176] + 1] | ~31:31[R2] & ~31:31[#11176] &
          63:63[extend:64[31:0[R2]] + extend:64[#11176] + 1]
0001e85c: ZF := extend:64[31:0[R2]] + extend:64[#11176] + 1 = 0
0001e85f: CF := 31:31[R2] & 31:31[#11176] | 31:31[#11176] &
          ~63:63[extend:64[31:0[R2]] + extend:64[#11176] + 1] | 31:31[R2] &
          ~63:63[extend:64[31:0[R2]] + extend:64[#11176] + 1]
0001e871: goto %0001e86e

0001e86e:
0001e87f: R0 := mem[R20 + 8, el]:u64
0001e88c: #11178 := (CF & ~ZF) <> 0
0001e886: when #11178 goto %0001e884
00038674: goto %000291ab

0001e884:
0001e892: R1 := 0x12000
0001e899: R1 := R1 + 0x918
0001e8a1: mem := mem with [R31 + 0x30, el]:u64 <- R23
0001e8a6: R30 := 0xC9AC
0001e8a8: call @hlist_get with return %0001e8aa

0001e8aa:
0001e8b4: #11180 := R0 = 0
0001e8ae: when #11180 goto %0001e8ac
00038673: goto %00029177

0001e8ac:
0001e8bc: R0 := mem[R20 + 8, el]:u64
0001e8c2: R1 := 0x12000
0001e8c8: R22 := 0x12000
0001e8cf: R1 := R1 + 0x928
0001e8d4: R30 := 0xCA20
0001e8d6: call @hlist_in with return %0001e8d8

0001e8d8:
0001e8e2: #11181 := ~31:0[R0] = 0
0001e8dc: when #11181 goto %0001e8da
00038672: goto %0002914f

0002914f:
00029155: R0 := mem[R20 + 8, el]:u64
0002915b: R22 := 0x12000
00029162: R1 := R22 + 0x938
00029167: R30 := 0xCA34
00029169: call @hlist_in with return %0002916b

0002916b:
00029174: #15315 := 31:0[R0] = 0
0002916e: when #15315 goto %00029072
00038671: goto %0001e8da

00029072:
00029078: R0 := mem[R20 + 8, el]:u64
0002907e: R2 := 0x12000
00029084: R1 := 0x12000
0002908b: R2 := R2 + 0x950
00029092: R1 := R1 + 0x958
00029097: R30 := 0xCAD4
00029099: call @hlist_subcmp with return %0002909b

0002909b:
000290a4: #15306 := ~31:0[R0] = 0
0002909e: when #15306 goto %0001e8da
00038670: goto %000290a7

0001e8da:
0001e8ea: R0 := mem[R20 + 8, el]:u64
0001e8f1: R23 := R22 + 0x938
0001e8f9: R1 := R23
0001e8fe: R30 := 0xCA48
0001e900: call @hlist_in with return %0001e902

0001e902:
0001e90c: #11185 := 31:0[R0] = 0
0001e906: when #11185 goto %0001e904
0003866f: goto %000290ea

0001e904:
0001e912: R23 := 0x12000
0001e918: R20 := 0xFFFFFFFFFFFFFFFF
0001e91d: goto %0001e91b

000290ea:
000290f0: R0 := mem[R20 + 8, el]:u64
000290f8: R1 := R23
000290fe: R20 := 1
00029104: R23 := 0x12000
0002910b: R2 := R23 + 0x968
00029110: R30 := 0xCA64
00029112: call @hlist_subcmp with return %00029114

00029114:
0002911e: #15313 := ~31:0[R0] = 0
00029118: when #15313 goto %00029116
0003866e: goto %00029149

00029149:
0002914d: R20 := 0xFFFFFFFFFFFFFFFF
0003866d: goto %0001e91b

0001e91b:
0001e924: R0 := mem[R19 + 8, el]:u64
0001e92b: R2 := R23 + 0x968
0001e932: R1 := R22 + 0x938
0001e937: R30 := 0xCA7C
0001e939: call @hlist_subcmp with return %0001e93b

0001e93b:
0001e945: #11186 := ~31:0[R0] = 0
0001e93f: when #11186 goto %0001e93d
0003866c: goto %0002904f

00029177:
0002917c: R2 := 0xA
00029182: R1 := 0
00029188: R22 := 0x12000
0002918d: R30 := 0xC9C0
0002918f: call @strtoll with return %00029191

00029191:
00029195: R23 := 0x12000
0002919d: R20 := R0
000291a8: #15319 := R0 = 0
000291a2: when #15319 goto %000290a7
0003866b: goto %00029116

000290a7:
000290ad: R23 := mem[R31 + 0x30, el]:u64
000290b2: goto %000290b0

00029116:
00029126: R0 := mem[R19 + 8, el]:u64
0002912d: R2 := R23 + 0x968
00029134: R1 := R22 + 0x938
00029139: R30 := 0xC9DC
0002913b: call @hlist_subcmp with return %0002913d

0002913d:
00029146: #15314 := 31:0[R0] = 0
00029140: when #15314 goto %0002904f
0003866a: goto %0001e93d

0002904f:
00029053: R0 := 0x27000
0002905b: R0 := mem[R0 + 0xF78, el]:u64
00029064: R0 := pad:64[mem[R0, el]:u32]
0002906f: #15305 := ~31:0[R0] = 0
00029069: when #15305 goto %0001e9d0
00038669: goto %0001e9f4

0001e9d0:
0001e9d6: R2 := R20
0001e9dc: R1 := 0x12000
0001e9e3: R0 := 1
0001e9ea: R1 := R1 + 0xA48
0001e9ef: R30 := 0xCB08
0001e9f1: call @__printf_chk with return %0001e9f3

0001e9f3:
0001e9f6: goto %0001e9f4

0001e9f4:
0001e9fd: R2 := R20
0001ea06: R1 := 31:0[R21]
0001ea0f: R19 := mem[R31 + 0x10, el]:u64
0001ea13: R20 := mem[R31 + 0x18, el]:u64
0001ea1a: R0 := 0xFFFFFFFFFFFFFFFF
0001ea23: R21 := mem[R31 + 0x20, el]:u64
0001ea27: R22 := mem[R31 + 0x28, el]:u64
0001ea2f: R23 := mem[R31 + 0x30, el]:u64
0001ea39: R29 := mem[R31, el]:u64
0001ea3d: R30 := mem[R31 + 8, el]:u64
0001ea40: R31 := R31 + 0x40
0001ea44: call @sub_b518 with noreturn

0001e93d:
0001e94b: R0 := 0x27000
0001e953: R0 := mem[R0 + 0xF78, el]:u64
0001e95c: R0 := pad:64[mem[R0, el]:u32]
0001e968: #11187 := ~31:0[R0] = 0
0001e962: when #11187 goto %0001e960
00038668: goto %0001e986

0001e960:
0001e96e: R1 := 0x12000
0001e975: R0 := 1
0001e97c: R1 := R1 + 0xA28
0001e981: R30 := 0xCAF0
0001e983: call @__printf_chk with return %0001e985

0001e985:
0001e988: goto %0001e986

0001e986:
0001e990: R1 := 31:0[R21]
0001e997: R0 := 0xFFFFFFFFFFFFFFFF
0001e9a0: R19 := mem[R31 + 0x10, el]:u64
0001e9a4: R20 := mem[R31 + 0x18, el]:u64
0001e9ad: R21 := mem[R31 + 0x20, el]:u64
0001e9b1: R22 := mem[R31 + 0x28, el]:u64
0001e9b9: R23 := mem[R31 + 0x30, el]:u64
0001e9c3: R29 := mem[R31, el]:u64
0001e9c7: R30 := mem[R31 + 8, el]:u64
0001e9ca: R31 := R31 + 0x40
0001e9ce: call @chunked_data_send with noreturn

000291ab:
000291af: R1 := 0x12000
000291b6: R1 := R1 + 0x918
000291bb: R30 := 0xC980
000291bd: call @hlist_get with return %000290b0

000290b0:
000290b8: R0 := 1
000290c1: R19 := mem[R31 + 0x10, el]:u64
000290c5: R20 := mem[R31 + 0x18, el]:u64
000290ce: R21 := mem[R31 + 0x20, el]:u64
000290d2: R22 := mem[R31 + 0x28, el]:u64
000290dc: R29 := mem[R31, el]:u64
000290e0: R30 := mem[R31 + 8, el]:u64
000290e3: R31 := R31 + 0x40
000290e8: call R30 with noreturn

00038679: sub http_body_send(http_body_send_result)
00038b04: http_body_send_result :: out u32 = low:32[R0]

0001e47c:
0001e484: mem := mem with [R31 - 0x30, el]:u64 <- R29
0001e488: mem := mem with [R31 - 0x28, el]:u64 <- R30
0001e48b: R31 := R31 - 0x30
0001e492: R29 := R31
0001e49b: R4 := pad:64[mem[R3 + 0x1C, el]:u32]
0001e4a4: mem := mem with [R31, el]:u64 <- R31 + 0x20
0001e4a8: mem := mem with [R31, el]:u64 <- R31 + 0x28
0001e4af: #11091 := extend:64[31:0[R4]]
0001e4b3: NF := 63:63[#11091]
0001e4b6: VF := 31:31[R4] & ~63:63[#11091]
0001e4b9: ZF := #11091 = 0
0001e4bc: CF := 31:31[R4] | 31:31[R4] & ~63:63[#11091] | ~63:63[#11091]
0001e4d5: #11093 := ~ZF <> 0
0001e4d6: goto %0001e4cd

0001e4cd:
0001e4cf: when #11093 goto %0001e4c7
0001e4d0: goto %0001e4ca

0001e4ca:
0001e4cb: R19 := R3
0001e4d2: goto %0001e4ce

0001e4c7:
0001e4c8: R19 := R2
0001e4d1: goto %0001e4ce

0001e4ce:
0001e4e0: mem := mem with [R31, el]:u64 <- R31 + 0x40
0001e4e4: mem := mem with [R31, el]:u64 <- R31 + 0x48
0001e4ed: R22 := 31:0[R0]
0001e4f6: R21 := 31:0[R1]
0001e4fe: R0 := R2
0001e506: R1 := R3
0001e50b: R30 := 0xC7E8
0001e50d: call @http_has_body with return %0001e50f

0001e50f:
0001e519: #11107 := ~R0 = 0
0001e513: when #11107 goto %0001e511
00038680: goto %000291f9

0001e511:
0001e521: R20 := R0
0001e527: R2 := 0x12000
0001e52f: R0 := mem[R19 + 8, el]:u64
0001e536: R2 := R2 + 0x968
0001e53c: R1 := 0x12000
0001e542: R19 := 0x27000
0001e549: R1 := R1 + 0x938
0001e54e: R30 := 0xC858
0001e550: call @hlist_subcmp with return %0001e552

0001e552:
0001e55c: #11111 := 31:0[R0] = 0
0001e556: when #11111 goto %0001e554
0003867f: goto %000291dc

0001e554:
0001e564: R0 := mem[R19 + 0xF78, el]:u64
0001e56d: R0 := pad:64[mem[R0, el]:u32]
0001e579: #11112 := ~31:0[R0] = 0
0001e573: when #11112 goto %0001e571
0003867e: goto %0001e59f

0001e571:
0001e581: R2 := R20
0001e587: R1 := 0x12000
0001e58e: R0 := 1
0001e595: R1 := R1 + 0x9F8
0001e59a: R30 := 0xC90C
0001e59c: call @__printf_chk with return %0001e59e

0001e59e:
0001e5a1: goto %0001e59f

0001e59f:
0001e5a9: R1 := 31:0[R21]
0001e5b1: R2 := R20
0001e5ba: R0 := 31:0[R22]
0001e5bf: R30 := 0xC8C4
0001e5c1: call @sub_b518 with return %0001e5c3

0001e5c3:
0001e5c9: R1 := mem[R19 + 0xF78, el]:u64
0001e5d2: R19 := 31:0[R0]
0001e5db: R0 := pad:64[mem[R1, el]:u32]
0001e5e7: #11128 := 31:0[R0] = 0
0001e5e1: when #11128 goto %0001e5df
0003867d: goto %0001e678

0001e678:
0001e67d: #11144 := extend:64[31:0[R19]]
0001e681: NF := 63:63[#11144]
0001e684: VF := 31:31[R19] & ~63:63[#11144]
0001e687: ZF := #11144 = 0
0001e68a: CF := 31:31[R19] | 31:31[R19] & ~63:63[#11144] | ~63:63[#11144]
0001e693: R2 := 0x12000
0001e69a: R2 := R2 + 0x9B0
0001e6a0: R1 := 0x12000
0001e6a7: R1 := R1 + 0x9C0
0001e6ae: R0 := 1
0001e6c4: #11146 := ~ZF <> 0
0001e6c5: goto %0001e6bc

0001e6bc:
0001e6be: when #11146 goto %0001e6b6
0001e6bf: goto %0001e6b9

0001e6b9:
0001e6ba: R1 := R1
0001e6c1: goto %0001e6bd

0001e6b6:
0001e6b7: R1 := R2
0001e6c0: goto %0001e6bd

0001e6bd:
0001e6cb: R30 := 0xC8F4
0001e6cd: call @__printf_chk with return %0001e6cf

0001e6cf:
0001e6d1: goto %0001e5df

000291dc:
000291e2: R0 := mem[R19 + 0xF78, el]:u64
000291eb: R0 := pad:64[mem[R0, el]:u32]
000291f6: #15324 := ~31:0[R0] = 0
000291f0: when #15324 goto %0001e6d3
0003867c: goto %0001e6ef

0001e6d3:
0001e6d7: R1 := 0x12000
0001e6de: R0 := 1
0001e6e5: R1 := R1 + 0x9E0
0001e6ea: R30 := 0xC920
0001e6ec: call @__printf_chk with return %0001e6ee

0001e6ee:
0001e6f1: goto %0001e6ef

0001e6ef:
0001e6f9: R1 := 31:0[R21]
0001e702: R0 := 31:0[R22]
0001e707: R30 := 0xC874
0001e709: call @chunked_data_send with return %0001e70b

0001e70b:
0001e711: R1 := mem[R19 + 0xF78, el]:u64
0001e71a: R19 := 31:0[R0]
0001e723: R0 := pad:64[mem[R1, el]:u32]
0001e72e: #11156 := 31:0[R0] = 0
0001e728: when #11156 goto %0001e5df
0003867b: goto %0001e731

0001e731:
0001e736: #11157 := extend:64[31:0[R19]]
0001e73a: NF := 63:63[#11157]
0001e73d: VF := 31:31[R19] & ~63:63[#11157]
0001e740: ZF := #11157 = 0
0001e743: CF := 31:31[R19] | 31:31[R19] & ~63:63[#11157] | ~63:63[#11157]
0001e74c: R2 := 0x12000
0001e753: R2 := R2 + 0x970
0001e759: R1 := 0x12000
0001e760: R1 := R1 + 0x988
0001e767: R0 := 1
0001e77d: #11159 := ~ZF <> 0
0001e77e: goto %0001e775

0001e775:
0001e777: when #11159 goto %0001e76f
0001e778: goto %0001e772

0001e772:
0001e773: R1 := R1
0001e77a: goto %0001e776

0001e76f:
0001e770: R1 := R2
0001e779: goto %0001e776

0001e776:
0001e784: R30 := 0xC8A4
0001e786: call @__printf_chk with return %0001e788

0001e788:
0001e78a: goto %0001e5df

000291f9:
000291fd: R0 := 0x27000
00029204: R19 := 1
0002920c: R0 := mem[R0 + 0xF78, el]:u64
00029215: R0 := pad:64[mem[R0, el]:u32]
00029220: #15325 := ~31:0[R0] = 0
0002921a: when #15325 goto %0001e622
0003867a: goto %0001e5df

0001e622:
0001e629: R0 := 31:0[R19]
0001e62f: R1 := 0x12000
0001e636: R1 := R1 + 0xA18
0001e63b: R30 := 0xC824
0001e63d: call @__printf_chk with return %0001e63f

0001e63f:
0001e646: R0 := 31:0[R19]
0001e64f: R19 := mem[R31 + 0x10, el]:u64
0001e653: R20 := mem[R31 + 0x18, el]:u64
0001e65c: R21 := mem[R31 + 0x20, el]:u64
0001e660: R22 := mem[R31 + 0x28, el]:u64
0001e66a: R29 := mem[R31, el]:u64
0001e66e: R30 := mem[R31 + 8, el]:u64
0001e671: R31 := R31 + 0x30
0001e676: call R30 with noreturn

0001e5df:
0001e5f0: R0 := 31:0[R19]
0001e5f9: R19 := mem[R31 + 0x10, el]:u64
0001e5fd: R20 := mem[R31 + 0x18, el]:u64
0001e606: R21 := mem[R31 + 0x20, el]:u64
0001e60a: R22 := mem[R31 + 0x28, el]:u64
0001e614: R29 := mem[R31, el]:u64
0001e618: R30 := mem[R31 + 8, el]:u64
0001e61b: R31 := R31 + 0x30
0001e620: call R30 with noreturn

00038681: sub http_has_body(http_has_body_result)
00038b05: http_has_body_result :: out u32 = low:32[R0]

0001e164:
0001e16c: mem := mem with [R31 - 0x30, el]:u64 <- R29
0001e170: mem := mem with [R31 - 0x28, el]:u64 <- R30
0001e173: R31 := R31 - 0x30
0001e17a: R29 := R31
0001e183: mem := mem with [R31, el]:u64 <- R31 + 0x20
0001e187: mem := mem with [R31, el]:u64 <- R31 + 0x28
0001e18f: R19 := R0
0001e197: R20 := R1
0001e19f: mem := mem with [R31 + 0x20, el]:u64 <- R21
0001e1ab: #11040 := R1 = 0
0001e1a5: when #11040 goto %0001e1a3
00038697: goto %000293a5

000293a5:
000293ac: R0 := pad:64[mem[R1 + 0x1C, el]:u32]
000293b7: #15349 := 31:0[R0] = 0
000293b1: when #15349 goto %0001e1c6
00038696: goto %0001e1a3

0001e1a3:
0001e1b3: #11044 := 1 + ~R19 + R20
0001e1b7: NF := 63:63[#11044]
0001e1ba: VF := 63:63[R20] & 63:63[~R19] & ~63:63[#11044] | ~63:63[R20] &
          ~63:63[~R19] & 63:63[#11044]
0001e1bd: ZF := #11044 = 0
0001e1c0: CF := 63:63[R20] & 63:63[~R19] | 63:63[~R19] & ~63:63[#11044] |
          63:63[R20] & ~63:63[#11044]
0001e1ce: #11046 := ZF
0001e1c8: when #11046 goto %0001e1c6
00038695: goto %0002937c

0001e1c6:
0001e1d6: R21 := R20
0001e1e2: #11050 := R19 = 0
0001e1dc: when #11050 goto %0001e1da
00038694: goto %0002933f

0002933f:
00029346: R0 := pad:64[mem[R19, el]:u32]
00029351: #15342 := 31:0[R0] = 0
0002934b: when #15342 goto %0001e1da
00038693: goto %00029354

00029354:
0002935a: R1 := mem[R19 + 0x28, el]:u64
00029360: R0 := 0x12000
00029367: R0 := R0 + 0x908
0002936c: R30 := 0xC6A4
0002936e: call @strcasecmp with return %00029370

00029370:
00029379: #15343 := ~31:0[R0] = 0
00029373: when #15343 goto %0001e1da
00038692: goto %00029249

0001e1da:
0001e1eb: R0 := pad:64[mem[R20 + 0x10, el]:u32]
0001e1f2: R3 := 0xCC
0001e1f9: R1 := 0x63
0001e200: #11051 := 0xFFFFFFFFFFFFFED0 + extend:64[31:0[R0]]
0001e204: NF := 63:63[#11051]
0001e207: VF := 31:31[R0] & ~63:63[#11051]
0001e20a: ZF := #11051 = 0
0001e20d: CF := 31:31[R0] | 31:31[R0] & ~63:63[#11051] | ~63:63[#11051]
0001e218: R2 := extend:64[31:0[R0]] - 0x64
0001e244: #11053 := ~ZF <> 0
0001e245: goto %0001e23c

0001e23c:
0001e23e: when #11053 goto %0001e21f
0001e23f: goto %0001e230

0001e230:
0001e231: NF := 0
0001e234: ZF := 1
0001e237: CF := 0
0001e23a: VF := 0
0001e241: goto %0001e23d

0001e21f:
0001e220: #11054 := ~31:0[R3]
0001e225: NF := 63:63[extend:64[31:0[R0]] + extend:64[#11054] + 1]
0001e228: VF := 31:31[R0] & 31:31[#11054] & ~63:63[extend:64[31:0[R0]] +
          extend:64[#11054] + 1] | ~31:31[R0] & ~31:31[#11054] &
          63:63[extend:64[31:0[R0]] + extend:64[#11054] + 1]
0001e22b: ZF := extend:64[31:0[R0]] + extend:64[#11054] + 1 = 0
0001e22e: CF := 31:31[R0] & 31:31[#11054] | 31:31[#11054] &
          ~63:63[extend:64[31:0[R0]] + extend:64[#11054] + 1] | 31:31[R0] &
          ~63:63[extend:64[31:0[R0]] + extend:64[#11054] + 1]
0001e240: goto %0001e23d

0001e23d:
0001e272: #11056 := ~ZF <> 0
0001e273: goto %0001e26a

0001e26a:
0001e26c: when #11056 goto %0001e24d
0001e26d: goto %0001e25e

0001e25e:
0001e25f: NF := 0
0001e262: ZF := 0
0001e265: CF := 0
0001e268: VF := 0
0001e26f: goto %0001e26b

0001e24d:
0001e24e: #11057 := ~31:0[R1]
0001e253: NF := 63:63[extend:64[31:0[R2]] + extend:64[#11057] + 1]
0001e256: VF := 31:31[R2] & 31:31[#11057] & ~63:63[extend:64[31:0[R2]] +
          extend:64[#11057] + 1] | ~31:31[R2] & ~31:31[#11057] &
          63:63[extend:64[31:0[R2]] + extend:64[#11057] + 1]
0001e259: ZF := extend:64[31:0[R2]] + extend:64[#11057] + 1 = 0
0001e25c: CF := 31:31[R2] & 31:31[#11057] | 31:31[#11057] &
          ~63:63[extend:64[31:0[R2]] + extend:64[#11057] + 1] | 31:31[R2] &
          ~63:63[extend:64[31:0[R2]] + extend:64[#11057] + 1]
0001e26e: goto %0001e26b

0001e26b:
0001e281: #11059 := (CF & ~ZF) <> 0
0001e27b: when #11059 goto %0001e279
00038691: goto %0002931f

0002931f:
00029325: R0 := mem[R21 + 8, el]:u64
0002932b: R1 := 0x12000
00029332: R1 := R1 + 0x918
00029337: R30 := 0xC71C
00029339: call @hlist_get with return %0002933b

0002933b:
0002933d: goto %0001e323

0002937c:
00029385: #15344 := R19 = 0
0002937f: when #15344 goto %0001e470
00038690: goto %00029388

0001e470:
0001e476: R0 := mem[R19 + 8, el]:u64
0003868f: call @http_body_send with noreturn

00029388:
0002938f: R0 := pad:64[mem[R19, el]:u32]
0002939a: #15345 := ~31:0[R0] = 0
00029394: when #15345 goto %00029273
0003868e: goto %0002939d

00029273:
00029279: R20 := mem[R19 + 0x28, el]:u64
0002927f: R0 := 0x12000
00029286: R0 := R0 + 0x910
0002928e: R1 := R20
00029293: R30 := 0xC6D0
00029295: call @strcasecmp with return %00029297

00029297:
000292a0: #15336 := ~31:0[R0] = 0
0002929a: when #15336 goto %00029223
0003868d: goto %000292a3

00029223:
00029229: R1 := R20
0002922f: R0 := 0x12000
00029237: R21 := R19
0002923e: R0 := R0 + 0x908
00029243: R30 := 0xC760
00029245: call @strcasecmp with return %00029247

00029247:
00029251: #15332 := 31:0[R0] = 0
0002924b: when #15332 goto %00029249
0003868c: goto %000292cb

000292cb:
000292cd: goto %0001e279

00029249:
00029259: R0 := mem[R21 + 8, el]:u64
0002925f: R1 := 0x12000
00029266: R1 := R1 + 0x918
0002926b: R30 := 0xC6B8
0002926d: call @hlist_get with return %0002926f

0002926f:
00029271: goto %0001e323

000292a3:
000292a9: R21 := R19
000292af: R1 := 0x12000
000292b6: R1 := R1 + 0x918
000292be: R0 := mem[R21 + 8, el]:u64
000292c3: R30 := 0xC6E8
000292c5: call @hlist_get with return %000292c7

000292c7:
000292c9: goto %0001e323

0002939d:
000293a3: R21 := R19
0003868b: goto %0001e279

0001e279:
0001e289: R0 := mem[R21 + 8, el]:u64
0001e28f: R1 := 0x12000
0001e296: R1 := R1 + 0x918
0001e29b: R30 := 0xC61C
0001e29d: call @hlist_get with return %0001e29f

0001e29f:
0001e2a9: #11060 := ~R0 = 0
0001e2a3: when #11060 goto %0001e2a1
0003868a: goto %000292cf

0001e2a1:
0001e2af: R1 := 0
0001e2b6: R2 := 0xA
0001e2bb: R30 := 0xC72C
0001e2be: call @strtoll with return %0001e2c0

0001e2c0:
0001e2d8: #11062 := ~ZF <> 0
0001e2d9: goto %0001e2d0

0001e2d0:
0001e2d2: when #11062 goto %0001e2c9
0001e2d3: goto %0001e2cd

0001e2cd:
0001e2ce: R1 := 1
0001e2d5: goto %0001e2d1

0001e2c9:
0001e2ca: R1 := 0
0001e2d4: goto %0001e2d1

0001e2d1:
0001e2e1: #11063 := extend:64[31:0[R1]]
0001e2e5: NF := 63:63[#11063]
0001e2e8: VF := 31:31[R1] & ~63:63[#11063]
0001e2eb: ZF := #11063 = 0
0001e2ee: CF := 31:31[R1] | 31:31[R1] & ~63:63[#11063] | ~63:63[#11063]
0001e31d: #11065 := ~ZF <> 0
0001e31e: goto %0001e315

0001e315:
0001e317: when #11065 goto %0001e2f8
0001e318: goto %0001e309

0001e309:
0001e30a: NF := 0
0001e30d: ZF := 0
0001e310: CF := 0
0001e313: VF := 0
0001e31a: goto %0001e316

0001e2f8:
0001e2f9: #11066 := ~R21
0001e2fe: NF := 63:63[R19 + #11066 + 1]
0001e301: VF := 63:63[R19] & 63:63[#11066] & ~63:63[R19 + #11066 + 1] |
          ~63:63[R19] & ~63:63[#11066] & 63:63[R19 + #11066 + 1]
0001e304: ZF := R19 + #11066 + 1 = 0
0001e307: CF := 63:63[R19] & 63:63[#11066] | 63:63[#11066] & ~63:63[R19 +
          #11066 + 1] | 63:63[R19] & ~63:63[R19 + #11066 + 1]
0001e319: goto %0001e316

0001e316:
0001e32b: #11068 := ZF
0001e325: when #11068 goto %0001e323
00038689: goto %0001e35e

0001e35e:
0001e360: goto %0001e333

000292cf:
000292d5: R0 := mem[R21 + 8, el]:u64
000292db: R1 := 0x12000
000292e2: R1 := R1 + 0x928
000292e7: R30 := 0xC630
000292e9: call @hlist_in with return %000292eb

000292eb:
000292f4: #15340 := ~31:0[R0] = 0
000292ee: when #15340 goto %0001e362
00038688: goto %000292f7

0001e362:
0001e366: R20 := 0x12000
0001e36b: goto %0001e369

000292f7:
000292fd: R0 := mem[R21 + 8, el]:u64
00029303: R20 := 0x12000
0002930a: R1 := R20 + 0x938
0002930f: R30 := 0xC644
00029311: call @hlist_in with return %00029313

00029313:
0002931c: #15341 := 31:0[R0] = 0
00029316: when #15341 goto %0001e437
00038687: goto %0001e369

0001e437:
0001e43d: R0 := mem[R21 + 8, el]:u64
0001e443: R2 := 0x12000
0001e449: R1 := 0x12000
0001e450: R2 := R2 + 0x950
0001e457: R1 := R1 + 0x958
0001e45c: R30 := 0xC7A4
0001e45e: call @hlist_subcmp with return %0001e460

0001e460:
0001e469: #11088 := ~31:0[R0] = 0
0001e463: when #11088 goto %0001e369
00038686: goto %0001e46c

0001e46c:
0001e46e: goto %0001e323

0001e369:
0001e372: R0 := mem[R21 + 8, el]:u64
0001e379: R20 := R20 + 0x938
0001e381: R1 := R20
0001e386: R30 := 0xC658
0001e388: call @hlist_in with return %0001e38a

0001e38a:
0001e394: #11074 := ~31:0[R0] = 0
0001e38e: when #11074 goto %0001e38c
00038685: goto %0001e3d6

0001e38c:
0001e39c: R0 := mem[R21 + 8, el]:u64
0001e3a4: R1 := R20
0001e3aa: R2 := 0x12000
0001e3b1: R2 := R2 + 0x968
0001e3b6: R30 := 0xC77C
0001e3b8: call @hlist_subcmp with return %0001e3ba

0001e3ba:
0001e3c1: R1 := 31:0[R0]
0001e3c7: R0 := 1
0001e3d2: #11081 := ~31:0[R1] = 0
0001e3cc: when #11081 goto %0001e333
00038684: goto %0001e3d5

0001e3d5:
0001e3d8: goto %0001e3d6

0001e3d6:
0001e3de: R1 := 1
0001e3e5: #11082 := extend:64[31:0[R1]]
0001e3e9: NF := 63:63[#11082]
0001e3ec: VF := 31:31[R1] & ~63:63[#11082]
0001e3ef: ZF := #11082 = 0
0001e3f2: CF := 31:31[R1] | 31:31[R1] & ~63:63[#11082] | ~63:63[#11082]
0001e421: #11084 := ~ZF <> 0
0001e422: goto %0001e419

0001e419:
0001e41b: when #11084 goto %0001e3fc
0001e41c: goto %0001e40d

0001e40d:
0001e40e: NF := 0
0001e411: ZF := 0
0001e414: CF := 0
0001e417: VF := 0
0001e41e: goto %0001e41a

0001e3fc:
0001e3fd: #11085 := ~R21
0001e402: NF := 63:63[R19 + #11085 + 1]
0001e405: VF := 63:63[R19] & 63:63[#11085] & ~63:63[R19 + #11085 + 1] |
          ~63:63[R19] & ~63:63[#11085] & 63:63[R19 + #11085 + 1]
0001e408: ZF := R19 + #11085 + 1 = 0
0001e40b: CF := 63:63[R19] & 63:63[#11085] | 63:63[#11085] & ~63:63[R19 +
          #11085 + 1] | 63:63[R19] & ~63:63[R19 + #11085 + 1]
0001e41d: goto %0001e41a

0001e41a:
0001e429: R0 := 0xFFFFFFFFFFFFFFFF
0001e434: #11087 := ~ZF <> 0
0001e42e: when #11087 goto %0001e333
00038683: goto %0001e323

0001e323:
0001e331: R0 := 0
00038682: goto %0001e333

0001e333:
0001e33a: R19 := mem[R31 + 0x10, el]:u64
0001e33e: R20 := mem[R31 + 0x18, el]:u64
0001e346: R21 := mem[R31 + 0x20, el]:u64
0001e350: R29 := mem[R31, el]:u64
0001e354: R30 := mem[R31 + 8, el]:u64
0001e357: R31 := R31 + 0x30
0001e35c: call R30 with noreturn

00038698: sub http_parse_basic(http_parse_basic_result)
00038b06: http_parse_basic_result :: out u32 = low:32[R0]

0001ea60:
0001ea68: mem := mem with [R31 - 0x30, el]:u64 <- R29
0001ea6c: mem := mem with [R31 - 0x28, el]:u64 <- R30
0001ea6f: R31 := R31 - 0x30
0001ea76: R29 := R31
0001ea7f: mem := mem with [R31, el]:u64 <- R31 + 0x20
0001ea83: mem := mem with [R31, el]:u64 <- R31 + 0x28
0001ea8b: R20 := R2
0001ea93: R19 := R0
0001ea99: R2 := 0x12000
0001eaa0: R2 := R2 + 0xA60
0001eaa9: mem := mem with [R31, el]:u64 <- R31 + 0x40
0001eaad: mem := mem with [R31, el]:u64 <- R31 + 0x48
0001eab5: R21 := R1
0001eaba: R30 := 0xCB48
0001eabc: call @hlist_subcmp with return %0001eabe

0001eabe:
0001eac8: #11219 := ~31:0[R0] = 0
0001eac2: when #11219 goto %0001eac0
000386a8: goto %0001ebd5

0001eac0:
0001ead0: R1 := R21
0001ead8: R0 := R19
0001eadd: R30 := 0xCB68
0001eadf: call @hlist_get with return %0001eae1

0001eae1:
0001eae7: R19 := R0
0001eaec: R30 := 0xCB70
0001eaee: call @strlen with return %0001eaf0

0001eaf0:
0001eaf5: R0 := R0 + 1
0001eafa: R30 := 0xCB78
0001eafc: call @new with return %0001eafe

0001eafe:
0001eb04: R21 := R0
0001eb0c: R0 := R19
0001eb11: R30 := 0xCB84
0001eb13: call @strlen with return %0001eb15

0001eb15:
0001eb1a: R2 := R19 + 1
0001eb20: R3 := 5
0001eb25: goto %0001eb23

0001eb23:
0001eb2c: R1 := R2 + R3
0001eb34: #11241 := 1 + ~R3 + R0
0001eb38: NF := 63:63[#11241]
0001eb3b: VF := 63:63[R0] & 63:63[~R3] & ~63:63[#11241] | ~63:63[R0] &
          ~63:63[~R3] & 63:63[#11241]
0001eb3e: ZF := #11241 = 0
0001eb41: CF := 63:63[R0] & 63:63[~R3] | 63:63[~R3] & ~63:63[#11241] |
          63:63[R0] & ~63:63[#11241]
0001eb50: #11243 := (CF & ~ZF) <> 0
0001eb4a: when #11243 goto %0001eb48
000386a7: goto %00029047

00029047:
0002904d: R1 := R19 + R3
000386a6: goto %0001eb7b

0001eb48:
0001eb57: R3 := R3 + 1
0001eb60: R4 := high:32[R4].pad:64[mem[R19 + R3]]
0001eb67: #11244 := 0xFFFFFFFFFFFFFFE0 + extend:64[31:0[R4]]
0001eb6b: NF := 63:63[#11244]
0001eb6e: VF := 31:31[R4] & ~63:63[#11244]
0001eb71: ZF := #11244 = 0
0001eb74: CF := 31:31[R4] | 31:31[R4] & ~63:63[#11244] | ~63:63[#11244]
0001eb83: #11246 := ~ZF <> 0
0001eb7d: when #11246 goto %0001eb7b
000386a5: goto %0001eb23

0001eb7b:
0001eb8b: R0 := R21
0001eb90: R30 := 0xCBB8
0001eb92: call @from_base64 with return %0001eb94

0001eb94:
0001eb9a: R0 := R21
0001eba1: R1 := 0x3A
0001eba6: R30 := 0xCBC4
0001eba8: call @strchr with return %0001ebaa

0001ebaa:
0001ebb0: R19 := R0
0001ebbc: #11256 := R0 = 0
0001ebb6: when #11256 goto %0001ebb4
000386a4: goto %00028de5

0001ebb4:
0001ebc4: R0 := R21
0001ebc9: R30 := 0xCCF4
0001ebcb: call @free with return %0001ebcd

0001ebcd:
0001ebd2: R0 := 0xFFFFFFFFFFFFFFFF
0001ebd7: goto %0001ebd5

00028de5:
00028deb: mem := mem with [R0] <- 0
00028df2: R1 := 0x5C
00028dfa: R0 := R21
00028dff: R30 := 0xCBDC
00028e01: call @strchr with return %00028e03

00028e03:
00028e09: R22 := R0
00028e15: #15261 := R0 = 0
00028e0f: when #15261 goto %00028e0d
000386a3: goto %00028ffa

00028e0d:
00028e21: #15262 := R20 = 0
00028e1b: when #15262 goto %00028e19
000386a2: goto %00028fd9

00028fd9:
00028fdf: R1 := R21
00028fe7: R0 := R20
00028fed: R2 := 0x32
00028ff2: R30 := 0xCCA0
00028ff4: call @strlcpy with return %00028ff6

00028ff6:
00028ff8: goto %00028e19

00028ffa:
00029000: mem := mem with [R0] <- 0
0002900b: #15292 := R20 = 0
00029005: when #15292 goto %00028e19
000386a1: goto %0002900e

0002900e:
00029012: R2 := 0x32
0002901a: R1 := R21
00029022: R0 := R20 + R2
00029027: R30 := 0xCBFC
00029029: call @strlcpy with return %0002902b

0002902b:
00029030: R1 := R22 + 1
00029038: R0 := R20
0002903e: R2 := 0x32
00029043: R30 := 0xCC0C
00029045: call @strlcpy with return %00028e19

00028e19:
00028e2a: R0 := pad:64[mem[R20 + 0x12C, el]:u32]
00028e36: #15263 := ~31:0[R0] = 0
00028e30: when #15263 goto %00028e2e
000386a0: goto %00028fc4

00028e2e:
00028e3d: R2 := R19 + 1
00028e44: R1 := R20 + 0x32
00028e4c: R0 := R20
00028e51: R30 := 0xCC50
00028e53: call @ntlm2_hash_password with return %00028e55

00028e55:
00028e5f: #15267 := ~R0 = 0
00028e59: when #15267 goto %00028e57
0003869f: goto %00028fbd

00028e57:
00028e68: R2 := mem[R0, el]:u64
00028e6c: R3 := mem[R0 + 8, el]:u64
00028e73: R1 := R20 + 0xFA
00028e7c: mem := mem with [R1, el]:u64 <- R1
00028e80: mem := mem with [R1, el]:u64 <- R1 + 8
00028e85: R30 := 0xCCE8
00028e87: call @free with return %00028e89

00028e89:
00028e8c: goto %00028e8a

00028fbd:
00028fc0: R30 := 0xCC58
00028fc2: call @free with return %00028e8a

00028e8a:
00028e94: R0 := pad:64[mem[R20 + 0x130, el]:u32]
00028ea0: #15270 := 31:0[R0] = 0
00028e9a: when #15270 goto %00028e98
0003869e: goto %00028f58

00028fc4:
00028fcb: R0 := pad:64[mem[R20 + 0x130, el]:u32]
00028fd6: #15285 := ~31:0[R0] = 0
00028fd0: when #15285 goto %00028f58
0003869d: goto %00028e98

00028f58:
00028f5d: R0 := R19 + 1
00028f62: R30 := 0xCC68
00028f64: call @ntlm_hash_nt_password with return %00028f66

00028f66:
00028f70: #15281 := ~R0 = 0
00028f6a: when #15281 goto %00028f68
0003869c: goto %00028fb6

00028f68:
00028f79: R2 := mem[R0, el]:u64
00028f7d: R3 := mem[R0 + 8, el]:u64
00028f86: mem := mem with [R20, el]:u64 <- R20 + 0x190
00028f8a: mem := mem with [R20, el]:u64 <- R20 + 0x198
00028f94: mem := mem with [R20 + 0xD5, el]:u64 <- R1
00028f99: R30 := 0xCCB8
00028f9b: call @free with return %00028f9d

00028f9d:
00028fa0: goto %00028f9e

00028fb6:
00028fb9: R30 := 0xCC70
00028fbb: call @free with return %00028f9e

00028f9e:
00028fa8: R0 := pad:64[mem[R20 + 0x134, el]:u32]
00028fb3: #15284 := 31:0[R0] = 0
00028fad: when #15284 goto %00028f04
0003869b: goto %00028ead

00028e98:
00028ea9: R0 := pad:64[mem[R20 + 0x134, el]:u32]
00028eb5: #15271 := ~31:0[R0] = 0
00028eaf: when #15271 goto %00028ead
0003869a: goto %00028f04

00028ead:
00028ebc: R0 := R19 + 1
00028ec1: R30 := 0xCC80
00028ec3: call @ntlm_hash_lm_password with return %00028ec5

00028ec5:
00028ecf: #15272 := ~R0 = 0
00028ec9: when #15272 goto %00028ec7
00038699: goto %00028f4d

00028ec7:
00028ed6: R1 := R20 + 0x96
00028edf: R2 := mem[R0, el]:u64
00028ee3: R3 := mem[R0 + 8, el]:u64
00028eec: mem := mem with [R1, el]:u64 <- R1
00028ef0: mem := mem with [R1, el]:u64 <- R1 + 8
00028efa: mem := mem with [R20 + 0xA3, el]:u64 <- R1
00028eff: R30 := 0xCCD4
00028f01: call @free with return %00028f03

00028f03:
00028f06: goto %00028f04

00028f4d:
00028f50: R30 := 0xCC88
00028f52: call @free with return %00028f54

00028f54:
00028f56: goto %00028f04

00028f04:
00028f0d: R0 := R21
00028f12: R30 := 0xCC2C
00028f14: call @free with return %00028f16

00028f16:
00028f1b: R0 := 1
00028f24: R19 := mem[R31 + 0x10, el]:u64
00028f28: R20 := mem[R31 + 0x18, el]:u64
00028f31: R21 := mem[R31 + 0x20, el]:u64
00028f35: R22 := mem[R31 + 0x28, el]:u64
00028f3f: R29 := mem[R31, el]:u64
00028f43: R30 := mem[R31 + 8, el]:u64
00028f46: R31 := R31 + 0x30
00028f4b: call R30 with noreturn

0001ebd5:
0001ebdf: R19 := mem[R31 + 0x10, el]:u64
0001ebe3: R20 := mem[R31 + 0x18, el]:u64
0001ebec: R21 := mem[R31 + 0x20, el]:u64
0001ebf0: R22 := mem[R31 + 0x28, el]:u64
0001ebfa: R29 := mem[R31, el]:u64
0001ebfe: R30 := mem[R31 + 8, el]:u64
0001ec01: R31 := R31 + 0x30
0001ec06: call R30 with noreturn

000386a9: sub inet_ntoa(inet_ntoa_result)
00038b07: inet_ntoa_result :: out u32 = low:32[R0]

00014f8f:
00030137: R16 := 0x27000
0003013f: R17 := mem[R16 + 0xCC0, el]:u64
00030146: R16 := R16 + 0xCC0
0003014b: call R17 with noreturn

000386aa: sub is_http_header(is_http_header_result)
00038b08: is_http_header_result :: out u32 = low:32[R0]

0001cf0e:
0001cf16: mem := mem with [R31 - 0x20, el]:u64 <- R29
0001cf1a: mem := mem with [R31 - 0x18, el]:u64 <- R30
0001cf1d: R31 := R31 - 0x20
0001cf23: R1 := 0x12000
0001cf2a: R1 := R1 + 0x728
0001cf31: R29 := R31
0001cf3a: mem := mem with [R31, el]:u64 <- R31 + 0x20
0001cf3e: mem := mem with [R31, el]:u64 <- R31 + 0x28
0001cf46: R20 := R0
0001cf4b: R30 := 0xB7B4
0001cf4d: call @strcspn with return %0001cf4f

0001cf4f:
0001cf55: R19 := R0
0001cf5d: R0 := R20
0001cf62: R30 := 0xB7C0
0001cf64: call @strlen with return %0001cf66

0001cf66:
0001cf6c: #10517 := 1 + ~R0 + R19
0001cf70: NF := 63:63[#10517]
0001cf73: VF := 63:63[R19] & 63:63[~R0] & ~63:63[#10517] | ~63:63[R19] &
          ~63:63[~R0] & 63:63[#10517]
0001cf76: ZF := #10517 = 0
0001cf79: CF := 63:63[R19] & 63:63[~R0] | 63:63[~R0] & ~63:63[#10517] |
          63:63[R19] & ~63:63[#10517]
0001cf93: #10519 := ZF
0001cf94: goto %0001cf8b

0001cf8b:
0001cf8d: when #10519 goto %0001cf84
0001cf8e: goto %0001cf88

0001cf88:
0001cf89: R0 := 1
0001cf90: goto %0001cf8c

0001cf84:
0001cf85: R0 := 0
0001cf8f: goto %0001cf8c

0001cf8c:
0001cf9e: R19 := mem[R31 + 0x10, el]:u64
0001cfa2: R20 := mem[R31 + 0x18, el]:u64
0001cfac: R29 := mem[R31, el]:u64
0001cfb0: R30 := mem[R31 + 8, el]:u64
0001cfb3: R31 := R31 + 0x20
0001cfb8: call R30 with noreturn

000386ab: sub listen(listen_fd, listen_n, listen_result)
00038b09: listen_fd :: in u32 = low:32[R0]
00038b0a: listen_n :: in u32 = low:32[R1]
00038b0b: listen_result :: out u32 = low:32[R0]

000163f5:
00030088: R16 := 0x27000
00030090: R17 := mem[R16 + 0xC88, el]:u64
00030097: R16 := R16 + 0xC88
0003009c: call R17 with noreturn

000386ac: sub listen_add(listen_add_result)
00038b0c: listen_add_result :: out u32 = low:32[R0]

00020d74:
00020d7c: mem := mem with [R31 - 0x60, el]:u64 <- R29
00020d80: mem := mem with [R31 - 0x58, el]:u64 <- R30
00020d83: R31 := R31 - 0x60
00020d8a: R29 := R31
00020d93: mem := mem with [R31, el]:u64 <- R31 + 0x40
00020d97: mem := mem with [R31, el]:u64 <- R31 + 0x48
00020d9d: R22 := 0x27000
00020da6: mem := mem with [R31, el]:u64 <- R31 + 0x20
00020daa: mem := mem with [R31, el]:u64 <- R31 + 0x28
00020db2: R19 := R2
00020dba: R2 := mem[R22 + 0xFB8, el]:u64
00020dc3: mem := mem with [R31, el]:u64 <- R31 + 0x60
00020dc7: mem := mem with [R31, el]:u64 <- R31 + 0x68
00020dcf: R23 := R1
00020dd7: R1 := mem[R2, el]:u64
00020ddf: mem := mem with [R31 + 0x58, el]:u64 <- R1
00020de5: R1 := 0
00020ded: R24 := R0
00020df5: R0 := R19
00020dfd: mem := mem with [R31 + 0x40, el]:u64 <- R25
00020e06: R25 := 31:0[R3]
00020e0b: R30 := 0x106A4
00020e0d: call @strlen with return %00020e0f

00020e0f:
00020e15: R20 := R0
00020e1d: R20 := extend:64[31:0[R20]] - 1
00020e25: R0 := R19
00020e2b: R1 := 0x12000
00020e32: R1 := R1 + 0x728
00020e37: R30 := 0x106BC
00020e39: call @strcspn with return %00020e3b

00020e3b:
00020e41: #12030 := 1 + extend:64[~31:0[R0]] + extend:64[31:0[R20]]
00020e45: NF := 63:63[#12030]
00020e48: VF := 31:31[~31:0[R0]] & 31:31[R20] & ~63:63[#12030] |
          ~31:31[~31:0[R0]] & ~31:31[R20] & 63:63[#12030]
00020e4b: ZF := #12030 = 0
00020e4e: CF := 31:31[~31:0[R0]] & 31:31[R20] | 31:31[R20] & ~63:63[#12030] |
          31:31[~31:0[R0]] & ~63:63[#12030]
00020e5f: #12032 := (NF = VF & ~ZF) <> 0
00020e59: when #12032 goto %00020e57
000386b3: goto %00024f23

00020e57:
00020e68: R2 := 31:0[R0]
00020e6f: R1 := 0
00020e77: R21 := R0
00020e7f: R0 := R19
00020e84: R30 := 0x107AC
00020e86: call @substr with return %00020e88

00020e88:
00020e8e: R20 := R0
00020e96: R1 := R20
00020e9d: R0 := R31 + 0x50
00020ea2: R30 := 0x107BC
00020ea4: call @so_resolv with return %00020ea6

00020ea6:
00020eb0: #12048 := 31:0[R0] = 0
00020eaa: when #12048 goto %00020ea8
000386b2: goto %00020eeb

00020ea8:
00020eb8: R3 := R20
00020ebe: R2 := 0x13000
00020ec5: R2 := R2 + 0xEB0
00020ecc: R1 := 1
00020ed3: R0 := 3
00020ed8: R30 := 0x10804
00020eda: call @__syslog_chk with return %00020edc

00020edc:
00020ee1: R0 := 1
00020ee6: R30 := 0x1080C
00020ee8: call @myexit with return %00020eea

00020eea:
00020eed: goto %00020eeb

00020eeb:
00020ef3: R21 := extend:64[31:0[R21]]
00020efb: R0 := R20
00020f02: R21 := R21 + 1
00020f07: R30 := 0x107D0
00020f09: call @free with return %00020f0b

00020f0b:
00020f11: R19 := R19 + R21
00020f18: R2 := 0xA
00020f20: R0 := R19
00020f26: R1 := 0
00020f2b: R30 := 0x107E4
00020f2d: call @strtol with return %00020f2f

00020f2f:
00020f36: R20 := 31:0[R0]
00020f3b: goto %00020f39

00024f23:
00024f28: #13856 := extend:64[31:0[R25]]
00024f2c: NF := 63:63[#13856]
00024f2f: VF := 31:31[R25] & ~63:63[#13856]
00024f32: ZF := #13856 = 0
00024f35: CF := 31:31[R25] | 31:31[R25] & ~63:63[#13856] | ~63:63[#13856]
00024f3f: R3 := 0x7F
00024f46: R3 := high:32[R3].extend:64[31:0[R3]] & 0xFFFFFFFF0000FFFF |
          0x1000000
00024f5e: #13859 := ~ZF <> 0
00024f5f: goto %00024f56

00024f56:
00024f58: when #13859 goto %00024f4f
00024f59: goto %00024f53

00024f53:
00024f54: R3 := 31:0[R3]
00024f5b: goto %00024f57

00024f4f:
00024f50: R3 := 0
00024f5a: goto %00024f57

00024f57:
00024f68: R0 := R19
00024f6f: R2 := 0xA
00024f75: R1 := 0
00024f7d: mem := mem with [R31 + 0x50, el]:u32 <- 31:0[R3]
00024f82: R30 := 0x106E8
00024f84: call @strtol with return %00024f86

00024f86:
00024f8d: R20 := 31:0[R0]
000386b1: goto %00020f39

00020f39:
00020f46: #12065 := 31:0[R20] = 0
00020f40: when #12065 goto %00020f3e
000386b0: goto %00020f81

00020f3e:
00020f4e: R3 := R19
00020f54: R2 := 0x13000
00020f5b: R2 := R2 + 0xED8
00020f62: R1 := 1
00020f69: R0 := 3
00020f6e: R30 := 0x1078C
00020f70: call @__syslog_chk with return %00020f72

00020f72:
00020f77: R0 := 1
00020f7c: R30 := 0x10794
00020f7e: call @myexit with return %00020f80

00020f80:
00020f83: goto %00020f81

00020f81:
00020f8b: R1 := pad:64[mem[R31 + 0x50, el]:u32]
00020f94: R0 := 31:0[R20]
00020f99: R30 := 0x106FC
00020f9b: call @so_listen with return %00020f9d

00020f9d:
00020fa2: R1 := extend:64[31:0[R0]]
00020fa9: #12073 := extend:64[31:0[R1]]
00020fad: NF := 63:63[#12073]
00020fb0: VF := 31:31[R1] & ~63:63[#12073]
00020fb3: ZF := #12073 = 0
00020fb6: CF := 31:31[R1] | 31:31[R1] & ~63:63[#12073] | ~63:63[#12073]
00020fc7: #12075 := (NF <> VF | ZF) <> 0
00020fc1: when #12075 goto %00020fbf
000386af: goto %00024eb3

00024eb3:
00024eb9: R0 := mem[R23, el]:u64
00024ebf: R2 := 0
00024ec4: R30 := 0x10714
00024ec6: call @plist_add with return %00024ec8

00024ec8:
00024ece: R1 := R0
00024ed7: R0 := pad:64[mem[R31 + 0x50, el]:u32]
00024edf: mem := mem with [R23, el]:u64 <- R1
00024ee4: R30 := 0x10724
00024ee6: call @inet_ntoa with return %00024ee8

00024ee8:
00024eee: R4 := R0
00024ef4: R2 := 0x13000
00024efd: R5 := 31:0[R20]
00024f05: R3 := R24
00024f0c: R2 := R2 + 0xEF8
00024f13: R1 := 1
00024f1a: R0 := 6
00024f1f: R30 := 0x10744
00024f21: call @__syslog_chk with return %00020fbf

00020fbf:
00020fcf: R22 := mem[R22 + 0xFB8, el]:u64
00020fd7: R0 := mem[R31 + 0x58, el]:u64
00020fdf: R1 := mem[R22, el]:u64
00020fe7: #12079 := 1 + ~R1 + R0
00020feb: NF := 63:63[#12079]
00020fee: VF := 63:63[R0] & 63:63[~R1] & ~63:63[#12079] | ~63:63[R0] &
          ~63:63[~R1] & 63:63[#12079]
00020ff1: ZF := #12079 = 0
00020ff4: CF := 63:63[R0] & 63:63[~R1] | 63:63[~R1] & ~63:63[#12079] |
          63:63[R0] & ~63:63[#12079]
00020ff8: R0 := #12079
00020ffe: R1 := 0
0002100a: #12081 := ~ZF <> 0
00021004: when #12081 goto %00021002
000386ae: goto %00024e6e

00021002:
0002100f: R30 := 0x10814
00021011: call @__stack_chk_fail with return %00021013

00021013:
000386ad: call @tunnel_add with noreturn

00024e6e:
00024e75: R19 := mem[R31 + 0x10, el]:u64
00024e79: R20 := mem[R31 + 0x18, el]:u64
00024e82: R21 := mem[R31 + 0x20, el]:u64
00024e86: R22 := mem[R31 + 0x28, el]:u64
00024e8f: R23 := mem[R31 + 0x30, el]:u64
00024e93: R24 := mem[R31 + 0x38, el]:u64
00024e9b: R25 := mem[R31 + 0x40, el]:u64
00024ea5: R29 := mem[R31, el]:u64
00024ea9: R30 := mem[R31 + 8, el]:u64
00024eac: R31 := R31 + 0x60
00024eb1: call R30 with noreturn

000386b4: sub lowercase(lowercase_result)
00038b0d: lowercase_result :: out u32 = low:32[R0]

0000f546:
0000f54e: mem := mem with [R31 - 0x20, el]:u64 <- R29
0000f552: mem := mem with [R31 - 0x18, el]:u64 <- R30
0000f555: R31 := R31 - 0x20
0000f55c: R29 := R31
0000f565: mem := mem with [R31, el]:u64 <- R31 + 0x20
0000f569: mem := mem with [R31, el]:u64 <- R31 + 0x28
0000f571: R20 := R0
0000f577: R19 := 0
0000f57c: goto %0000f57a

0000f57a:
0000f583: R0 := R20
0000f588: R30 := 0x58C0
0000f58a: call @strlen with return %0000f58c

0000f58c:
0000f592: #73 := 1 + ~R19 + R0
0000f596: NF := 63:63[#73]
0000f599: VF := 63:63[R0] & 63:63[~R19] & ~63:63[#73] | ~63:63[R0] &
          ~63:63[~R19] & 63:63[#73]
0000f59c: ZF := #73 = 0
0000f59f: CF := 63:63[R0] & 63:63[~R19] | 63:63[~R19] & ~63:63[#73] |
          63:63[R0] & ~63:63[#73]
0000f5ae: #75 := (CF & ~ZF) <> 0
0000f5a8: when #75 goto %0000f5a6
000386b6: goto %0000f5d4

0000f5d4:
0000f5da: R0 := R20
0000f5e3: R19 := mem[R31 + 0x10, el]:u64
0000f5e7: R20 := mem[R31 + 0x18, el]:u64
0000f5f1: R29 := mem[R31, el]:u64
0000f5f5: R30 := mem[R31 + 8, el]:u64
0000f5f8: R31 := R31 + 0x20
0000f5fd: call R30 with noreturn

0000f5a6:
0000f5b3: R30 := 0x58A4
0000f5b6: call @__ctype_tolower_loc with return %0000f5b8

0000f5b8:
0000f5bf: R1 := high:32[R1].pad:64[mem[R20 + R19]]
0000f5c7: R0 := mem[R0, el]:u64
0000f5d2: R19 := R19 + 1
000386b5: goto %0000f57a

000386b7: sub magic_auth_detect(magic_auth_detect_result)
00038b0e: magic_auth_detect_result :: out u32 = low:32[R0]

0002008d:
00020095: mem := mem with [R31 - 0x120, el]:u64 <- R29
00020099: mem := mem with [R31 - 0x118, el]:u64 <- R30
0002009c: R31 := R31 - 0x120
000200a2: R3 := 0x27000
000200a8: R2 := 0x28000
000200af: R29 := R31
000200b6: R2 := R2 + 0x470
000200be: R3 := mem[R3 + 0xFB8, el]:u64
000200c4: R1 := 0x13000
000200cb: R1 := R1 + 0x3C0
000200d4: mem := mem with [R31, el]:u64 <- R31 + 0x80
000200d8: mem := mem with [R31, el]:u64 <- R31 + 0x88
000200e0: R26 := R0
000200e8: R0 := mem[R3, el]:u64
000200f0: mem := mem with [R31 + 0x118, el]:u64 <- R0
000200f6: R0 := 0
000200ff: mem := mem with [R31, el]:u64 <- R31 + 0x40
00020103: mem := mem with [R31, el]:u64 <- R31 + 0x48
0002010c: R6 := mem[R2, el]:u64
00020110: R7 := mem[R2 + 8, el]:u64
00020119: mem := mem with [R31, el]:u64 <- R31 + 0x140
0002011d: mem := mem with [R31, el]:u64 <- R31 + 0x148
00020126: R4 := mem[R1, el]:u64
0002012a: R5 := mem[R1 + 8, el]:u64
00020133: mem := mem with [R31, el]:u64 <- R31 + 0x190
00020137: mem := mem with [R31, el]:u64 <- R31 + 0x198
00020140: R6 := mem[R2 + 0x10, el]:u64
00020144: R7 := mem[R2 + 0x18, el]:u64
0002014d: mem := mem with [R31, el]:u64 <- R31 + 0x160
00020151: mem := mem with [R31, el]:u64 <- R31 + 0x168
00020159: R0 := mem[R2 + 0x20, el]:u64
00020161: mem := mem with [R31 + 0xC0, el]:u64 <- R0
0002016a: R6 := mem[R1 + 0x10, el]:u64
0002016e: R7 := mem[R1 + 0x18, el]:u64
00020177: mem := mem with [R31, el]:u64 <- R31 + 0x1B0
0002017b: mem := mem with [R31, el]:u64 <- R31 + 0x1B8
00020184: R4 := mem[R1 + 0x20, el]:u64
00020188: R5 := mem[R1 + 0x28, el]:u64
00020191: mem := mem with [R31, el]:u64 <- R31 + 0x1D0
00020195: mem := mem with [R31, el]:u64 <- R31 + 0x1D8
0002019e: R2 := mem[R1 + 0x30, el]:u64
000201a2: R3 := mem[R1 + 0x38, el]:u64
000201ab: mem := mem with [R31, el]:u64 <- R31 + 0x1F0
000201af: mem := mem with [R31, el]:u64 <- R31 + 0x1F8
000201b8: R0 := mem[R1 + 0x40, el]:u64
000201bc: R1 := mem[R1 + 0x48, el]:u64
000201c3: R2 := R31 + 0x200
000201cc: mem := mem with [R2, el]:u64 <- R2 - 0x1F0
000201d0: mem := mem with [R2, el]:u64 <- R2 - 0x1E8
000201d5: R30 := 0xE3F8
000201d7: call @new_auth with return %000201d9

000201d9:
000201df: R22 := R0
000201e5: R1 := 0x27000
000201ec: R2 := 1
000201f4: R1 := mem[R1 + 0xF80, el]:u64
000201fc: R1 := mem[R1, el]:u64
00020201: R30 := 0xE410
00020203: call @copy_auth with return %00020205

00020205:
00020209: R1 := 0x12000
00020211: R0 := R26
00020218: R1 := R1 + 0x750
0002021d: R30 := 0xE420
0002021f: call @strstr with return %00020221

00020221:
0002022b: #11742 := R0 = 0
00020225: when #11742 goto %00020223
000386d2: goto %0002713f

00020223:
00020231: R0 := 0x27000
00020239: R3 := R26
0002023f: R2 := 0x13000
00020246: R1 := 1
0002024e: R0 := mem[R0 + 0xF68, el]:u64
00020255: R2 := R2 + 0x148
0002025d: R0 := mem[R0, el]:u64
00020262: R30 := 0xE8B0
00020265: call @__fprintf_chk with return %00020267

00020267:
0002026a: goto %00020268

0002713f:
00027146: mem := mem with [R31, el]:u64 <- R31 + 0x20
0002714a: mem := mem with [R31, el]:u64 <- R31 + 0x28
00027151: R20 := R0 + 3
00027159: R19 := R0
00027160: R1 := 0x2F
00027168: R0 := R20
00027171: mem := mem with [R31, el]:u64 <- R31 + 0x60
00027175: mem := mem with [R31, el]:u64 <- R31 + 0x68
0002717c: R21 := R31 + 0xC8
00027183: R25 := 0
0002718c: mem := mem with [R31, el]:u64 <- R31 + 0xA0
00027190: mem := mem with [R31, el]:u64 <- R31 + 0xA8
00027195: R30 := 0xE44C
00027197: call @strchr with return %00027199

00027199:
0002719f: R2 := R0
000271a6: #14632 := R2
000271aa: NF := 63:63[#14632]
000271ad: VF := 63:63[R2] & ~63:63[#14632]
000271b0: ZF := #14632 = 0
000271b3: CF := 63:63[R2] | ~63:63[#14632] | 63:63[R2] & ~63:63[#14632]
000271bd: R2 := R2 - R19
000271c5: R2 := extend:64[31:0[R2]] - 3
000271cc: R1 := 0
000271d4: R0 := R20
000271ec: #14640 := ~ZF <> 0
000271ed: goto %000271e4

000271e4:
000271e6: when #14640 goto %000271dd
000271e7: goto %000271e1

000271e1:
000271e2: R2 := 0
000271e9: goto %000271e5

000271dd:
000271de: R2 := 31:0[R2]
000271e8: goto %000271e5

000271e5:
000271f6: mem := mem with [R31 + 0x84, el]:u32 <- 0
000271fb: R30 := 0xE470
000271fd: call @substr with return %000271ff

000271ff:
00027205: R24 := R0
0002720b: R0 := 0x12000
00027212: R0 := R0 + 0x780
00027218: R1 := 0x12000
0002721f: R1 := R1 + 0x910
00027227: mem := mem with [R31 + 0x68, el]:u64 <- R1
0002722f: mem := mem with [R31 + 0x88, el]:u64 <- R0
00027236: R0 := R31 + 0x9C
0002723e: mem := mem with [R31 + 0x70, el]:u64 <- R0
000386d1: goto %00026d85

00026d85:
00026d8b: R30 := 0xE498
00026d8d: call @new_rr_data with return %00026d8f

00026d8f:
00026d95: R20 := R0
00026d9a: R30 := 0xE4A0
00026d9c: call @new_rr_data with return %00026d9e

00026d9e:
00026da4: R19 := R0
00026dac: R0 := mem[R31 + 0x68, el]:u64
00026db3: R1 := 1
00026dbb: mem := mem with [R19, el]:u32 <- 31:0[R1]
00026dc0: R30 := 0xE4B4
00026dc2: call @strdup with return %00026dc4

00026dc4:
00026dca: mem := mem with [R19 + 0x28, el]:u64 <- R0
00026dd2: R0 := R26
00026dd7: R30 := 0xE4C0
00026dd9: call @strdup with return %00026ddb

00026ddb:
00026de1: mem := mem with [R19 + 0x30, el]:u64 <- R0
00026de7: R0 := 0x12000
00026dee: R0 := R0 + 0xFF8
00026df3: R30 := 0xE4D0
00026df5: call @strdup with return %00026df7

00026df7:
00026dfd: R1 := R0
00026e05: R0 := mem[R19 + 8, el]:u64
00026e0d: mem := mem with [R19 + 0x48, el]:u64 <- R1
00026e13: R1 := 0x12000
00026e1a: R4 := 1
00026e21: R2 := R1 + 0xE30
00026e2a: R3 := 31:0[R4]
00026e30: R1 := 0x12000
00026e37: R1 := R1 + 0xE40
00026e3c: R30 := 0xE4F8
00026e3e: call @hlist_add with return %00026e40

00026e40:
00026e46: mem := mem with [R19 + 8, el]:u64 <- R0
00026e52: #14557 := R24 = 0
00026e4c: when #14557 goto %00026e4a
000386d0: goto %000270f1

000270f1:
000270f7: R1 := mem[R31 + 0x88, el]:u64
000270fe: R4 := 1
00027106: R2 := R24
0002710f: R3 := 31:0[R4]
00027114: R30 := 0xE514
00027116: call @hlist_add with return %00027118

00027118:
0002711e: mem := mem with [R19 + 8, el]:u64 <- R0
000386cf: goto %00026e4a

00026e4a:
00026e59: R5 := R22 + 0x134
00026e61: R23 := extend:64[31:0[R25]] + 1
00026e6c: R2 := 31:0[R23]
00026e74: R1 := 0x13000
00026e7b: R1 := R1 + 0x160
00026e86: R3 := 4
00026e8f: R0 := 1
00026e94: R30 := 0xE54C
00026e96: call @__printf_chk with return %00026e98

00026e98:
00026e9c: R0 := 0
00026ea1: R30 := 0xE554
00026ea3: call @proxy_connect with return %00026ea5

00026ea5:
00026eab: mem := mem with [R31 + 0x9C, el]:u32 <- 31:0[R0]
00026eb2: #14562 := extend:64[31:0[R0]]
00026eb6: NF := 63:63[#14562]
00026eb9: VF := 31:31[R0] & ~63:63[#14562]
00026ebc: ZF := #14562 = 0
00026ebf: CF := 31:31[R0] | 31:31[R0] & ~63:63[#14562] | ~63:63[#14562]
00026ed0: #14564 := (NF <> VF | ZF) <> 0
00026eca: when #14564 goto %00026ec8
000386ce: goto %00026f27

00026ec8:
00026ed6: R1 := 0x13000
00026edd: R1 := R1 + 0x180
00026ee4: R0 := 1
00026ee9: R30 := 0xE704
00026eeb: call @__printf_chk with return %00026eed

00026eed:
00026ef3: R0 := R20
00026ef8: R30 := 0xE70C
00026efa: call @free_rr_data with return %00026efc

00026efc:
00026f02: R0 := R19
00026f07: R30 := 0xE714
00026f09: call @free_rr_data with return %00026f0b

00026f0b:
00026f12: R0 := pad:64[mem[R31 + 0x9C, el]:u32]
00026f17: R30 := 0xE71C
00026f19: call @close with return %00026f1b

00026f1b:
00026f24: #14571 := ~R24 = 0
00026f1e: when #14571 goto %00026d2a
000386cd: goto %00026a8d

00026f27:
00026f2d: R0 := mem[R31 + 0x70, el]:u64
00026f35: R3 := R22
00026f3d: R2 := R20
00026f45: R1 := R19
00026f4a: R30 := 0xE574
00026f4c: call @proxy_authenticate with return %00026f4e

00026f4e:
00026f58: #14581 := 31:0[R0] = 0
00026f52: when #14581 goto %00026f50
000386cc: goto %000270c5

000270c5:
000270cc: R2 := pad:64[mem[R20 + 0x10, el]:u32]
000270d3: #14610 := 0xFFFFFFFFFFFFFE69 + extend:64[31:0[R2]]
000270d7: NF := 63:63[#14610]
000270da: VF := 31:31[R2] & ~63:63[#14610]
000270dd: ZF := #14610 = 0
000270e0: CF := 31:31[R2] | 31:31[R2] & ~63:63[#14610] | ~63:63[#14610]
000270ee: #14612 := ~ZF <> 0
000270e8: when #14612 goto %00026fac
000386cb: goto %00026f50

00026fac:
00026fb0: R1 := 0x13000
00026fb7: R0 := 1
00026fbe: R1 := R1 + 0x1B0
00026fc3: R30 := 0xE638
00026fc5: call @__printf_chk with return %00026fc7

00026fc7:
00026fce: R1 := pad:64[mem[R31 + 0x84, el]:u32]
00026fd6: R0 := R20
00026fdd: R21 := R21 + 0x14
00026fe5: R1 := extend:64[31:0[R1]] + 1
00026fed: mem := mem with [R31 + 0x84, el]:u32 <- 31:0[R1]
00026ff2: R30 := 0xE650
00026ff4: call @free_rr_data with return %00026ff6

00026ff6:
00026ffc: R0 := R19
00027001: R30 := 0xE658
00027003: call @free_rr_data with return %00027005

00027005:
0002700c: R0 := pad:64[mem[R31 + 0x9C, el]:u32]
00027011: R30 := 0xE660
00027013: call @close with return %00027015

00027015:
0002701a: #14596 := 0xFFFFFFFFFFFFFFFC + extend:64[31:0[R23]]
0002701e: NF := 63:63[#14596]
00027021: VF := 31:31[R23] & ~63:63[#14596]
00027024: ZF := #14596 = 0
00027027: CF := 31:31[R23] | 31:31[R23] & ~63:63[#14596] | ~63:63[#14596]
00027035: #14598 := ~ZF <> 0
0002702f: when #14598 goto %00026d7b
000386ca: goto %00026a36

00026f50:
00026f60: R0 := R20
00026f65: R30 := 0xE58C
00026f67: call @reset_rr_data with return %00026f69

00026f69:
00026f70: R0 := pad:64[mem[R31 + 0x9C, el]:u32]
00026f78: R1 := R19
00026f7d: R30 := 0xE598
00026f7f: call @headers_send with return %00026f81

00026f81:
00026f8b: #14588 := 31:0[R0] = 0
00026f85: when #14588 goto %00026f83
000386c9: goto %00027038

00027038:
0002703f: R0 := pad:64[mem[R31 + 0x9C, el]:u32]
00027047: R1 := R20
0002704c: R30 := 0xE5A8
0002704e: call @headers_recv with return %00027050

00027050:
00027059: #14602 := 31:0[R0] = 0
00027053: when #14602 goto %00026f83
000386c8: goto %0002705c

00026f83:
00026f91: R1 := 0x13000
00026f98: R0 := 1
00026f9f: R1 := R1 + 0x1D8
00026fa4: R30 := 0xE624
00026fa6: call @__printf_chk with return %00026fa8

00026fa8:
00026faa: goto %000269e8

0002705c:
00027063: R2 := pad:64[mem[R20 + 0x10, el]:u32]
0002706a: #14603 := 0xFFFFFFFFFFFFFE69 + extend:64[31:0[R2]]
0002706e: NF := 63:63[#14603]
00027071: VF := 31:31[R2] & ~63:63[#14603]
00027074: ZF := #14603 = 0
00027077: CF := 31:31[R2] | 31:31[R2] & ~63:63[#14603] | ~63:63[#14603]
00027085: #14605 := ~ZF <> 0
0002707f: when #14605 goto %00026ac2
000386c7: goto %00027088

00026ac2:
00026ac6: R1 := 0x13000
00026acd: R1 := R1 + 0x238
00026ad4: R0 := 1
00026ad9: R30 := 0xE740
00026adb: call @__printf_chk with return %00026add

00026add:
00026ae3: R0 := R20
00026ae8: R30 := 0xE748
00026aea: call @free_rr_data with return %00026aec

00026aec:
00026af2: R0 := R19
00026af7: R30 := 0xE750
00026af9: call @free_rr_data with return %00026afb

00026afb:
00026b02: R0 := pad:64[mem[R31 + 0x9C, el]:u32]
00026b07: R30 := 0xE758
00026b09: call @close with return %00026b0b

00026b0b:
00026b12: R2 := 31:0[R25]
00026b18: R1 := 0x13000
00026b1f: R0 := 1
00026b26: R1 := R1 + 0x250
00026b2b: R30 := 0xE76C
00026b2d: call @__printf_chk with return %00026b2f

00026b2f:
00026b34: R0 := extend:64[31:0[R25]] << 2
00026b3b: R3 := R31 + 0xD8
00026b44: R2 := R31 + 0xA0
00026b4a: R1 := 0x13000
00026b51: R0 := 1
00026b58: R1 := R1 + 0x288
00026b63: R2 := mem[R2 + (R3 << 3), el]:u64
00026b68: R30 := 0xE794
00026b6a: call @__printf_chk with return %00026b6c

00026b6c:
00026b76: #14491 := ~31:0[R27] = 0
00026b70: when #14491 goto %00026b6e
000386c6: goto %00026d1e

00026b6e:
00026b7c: R1 := 0x13000
00026b85: R2 := 31:0[R27]
00026b8c: R1 := R1 + 0x2A0
00026b93: R0 := 1
00026b98: R30 := 0xE7D4
00026b9a: call @__printf_chk with return %00026b9c

00026b9c:
00026ba6: #14495 := 31:0[R28] = 0
00026ba0: when #14495 goto %00026b9e
000386c5: goto %00026cb4

00026d1e:
00026d27: #14527 := ~31:0[R28] = 0
00026d21: when #14527 goto %00026cb4
000386c4: goto %00026b9e

00026cb4:
00026cb9: R2 := 8
00026cbf: R1 := 0x10
00026cc6: R0 := R22 + 0xC8
00026ccb: R30 := 0xE7E8
00026ccd: call @printmem with return %00026ccf

00026ccf:
00026cd3: R1 := 0x13000
00026cdb: R2 := R0
00026ce2: R1 := R1 + 0x2B8
00026cea: R19 := R0
00026cf1: R0 := 1
00026cf6: R30 := 0xE800
00026cf8: call @__printf_chk with return %00026cfa

00026cfa:
00026d00: R0 := R19
00026d05: R30 := 0xE808
00026d07: call @free with return %00026d09

00026d09:
00026d10: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
00026d1b: #14526 := 31:0[R0] = 0
00026d15: when #14526 goto %00026c9f
000386c3: goto %00026bb3

00026b9e:
00026baf: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
00026bbb: #14496 := ~31:0[R0] = 0
00026bb5: when #14496 goto %00026bb3
000386c2: goto %00026c9f

00026bb3:
00026bc2: R2 := 8
00026bc8: R1 := 0x10
00026bcf: R0 := R22 + 0x96
00026bd4: R30 := 0xE820
00026bd6: call @printmem with return %00026bd8

00026bd8:
00026bdc: R1 := 0x13000
00026be4: R2 := R0
00026beb: R1 := R1 + 0x2D0
00026bf3: R19 := R0
00026bfa: R0 := 1
00026bff: R30 := 0xE838
00026c01: call @__printf_chk with return %00026c03

00026c03:
00026c09: R0 := R19
00026c0e: R30 := 0xE840
00026c10: call @free with return %00026c12

00026c12:
00026c19: R0 := pad:64[mem[R31 + 0x80, el]:u32]
00026c25: #14506 := 31:0[R0] = 0
00026c1f: when #14506 goto %00026c1d
000386c1: goto %00026c46

00026c9f:
00026ca6: R0 := pad:64[mem[R31 + 0x80, el]:u32]
00026cb1: #14516 := ~31:0[R0] = 0
00026cab: when #14516 goto %00026c46
000386c0: goto %00026c1d

00026c46:
00026c4b: R0 := R22 + 0xFA
00026c52: R2 := 8
00026c58: R1 := 0x10
00026c5d: R30 := 0xE858
00026c5f: call @printmem with return %00026c61

00026c61:
00026c65: R1 := 0x13000
00026c6d: R2 := R0
00026c74: R1 := R1 + 0x2E8
00026c7c: R19 := R0
00026c83: R0 := 1
00026c88: R30 := 0xE870
00026c8a: call @__printf_chk with return %00026c8c

00026c8c:
00026c92: R0 := R19
00026c97: R30 := 0xE878
00026c99: call @free with return %00026c9b

00026c9b:
00026c9d: goto %00026c1d

00026c1d:
00026c2b: R1 := 0x13000
00026c32: R0 := 1
00026c39: R1 := R1 + 0x300
00026c3e: R30 := 0xE7BC
00026c40: call @__printf_chk with return %00026c42

00026c42:
00026c44: goto %00026a88

00027088:
0002708e: R0 := mem[R20 + 8, el]:u64
00027094: R25 := 0x12000
0002709b: R25 := R25 + 0xBC0
000270a1: R2 := 0x12000
000270a9: R1 := R25
000270b0: R2 := R2 + 0xA80
000270b5: R30 := 0xE5D4
000270b7: call @hlist_subcmp_all with return %000270b9

000270b9:
000270c2: #14609 := 31:0[R0] = 0
000270bc: when #14609 goto %0002699d
000386bf: goto %000269c3

0002699d:
000269a3: R0 := mem[R20 + 8, el]:u64
000269a9: R2 := 0x13000
000269b1: R1 := R25
000269b8: R2 := R2 + 0x208
000269bd: R30 := 0xE6DC
000269bf: call @hlist_subcmp_all with return %000269c1

000269c1:
000269cb: #14463 := ~31:0[R0] = 0
000269c5: when #14463 goto %000269c3
000386be: goto %00027120

00027120:
00027124: R1 := 0x13000
0002712b: R0 := 1
00027132: R1 := R1 + 0x210
00027137: R30 := 0xE6F0
00027139: call @__printf_chk with return %0002713b

0002713b:
0002713d: goto %00026a36

000269c3:
000269d1: R1 := 0x13000
000269d8: R0 := 1
000269df: R1 := R1 + 0x1F0
000269e4: R30 := 0xE5E8
000269e6: call @__printf_chk with return %000269e8

000269e8:
000269ee: R0 := R20
000269f3: R30 := 0xE5F0
000269f5: call @free_rr_data with return %000269f7

000269f7:
000269fd: R0 := R19
00026a02: R30 := 0xE5F8
00026a04: call @free_rr_data with return %00026a06

00026a06:
00026a0d: R0 := pad:64[mem[R31 + 0x9C, el]:u32]
00026a14: R21 := R21 + 0x14
00026a19: R30 := 0xE604
00026a1b: call @close with return %00026a1d

00026a1d:
00026a22: #14470 := 0xFFFFFFFFFFFFFFFC + extend:64[31:0[R23]]
00026a26: NF := 63:63[#14470]
00026a29: VF := 31:31[R23] & ~63:63[#14470]
00026a2c: ZF := #14470 = 0
00026a2f: CF := 31:31[R23] | 31:31[R23] & ~63:63[#14470] | ~63:63[#14470]
00026a3e: #14472 := ZF
00026a38: when #14472 goto %00026a36
000386bd: goto %00026d7b

00026a36:
00026a47: R0 := pad:64[mem[R31 + 0x84, el]:u32]
00026a4e: #14473 := 0xFFFFFFFFFFFFFFFC + extend:64[31:0[R0]]
00026a52: NF := 63:63[#14473]
00026a55: VF := 31:31[R0] & ~63:63[#14473]
00026a58: ZF := #14473 = 0
00026a5b: CF := 31:31[R0] | 31:31[R0] & ~63:63[#14473] | ~63:63[#14473]
00026a6a: #14475 := ZF
00026a64: when #14475 goto %00026a62
000386bc: goto %00026d60

00026a62:
00026a70: R1 := 0x13000
00026a77: R0 := 1
00026a7e: R1 := R1 + 0x338
00026a83: R30 := 0xE88C
00026a85: call @__printf_chk with return %00026a87

00026a87:
00026a8a: goto %00026a88

00026d60:
00026d64: R1 := 0x13000
00026d6b: R0 := 1
00026d72: R1 := R1 + 0x370
00026d77: R30 := 0xE684
00026d79: call @__printf_chk with return %00026a88

00026a88:
00026a95: #14476 := R24 = 0
00026a8f: when #14476 goto %00026a8d
000386bb: goto %00026d2a

00026a8d:
00026a9e: R19 := mem[R31 + 0x10, el]:u64
00026aa2: R20 := mem[R31 + 0x18, el]:u64
00026aab: R23 := mem[R31 + 0x30, el]:u64
00026aaf: R24 := mem[R31 + 0x38, el]:u64
00026ab8: R27 := mem[R31 + 0x50, el]:u64
00026abc: R28 := mem[R31 + 0x58, el]:u64
00026ac0: goto %00020268

00026d2a:
00026d30: R0 := R24
00026d35: R30 := 0xE690
00026d37: call @free with return %00026d39

00026d39:
00026d40: R19 := mem[R31 + 0x10, el]:u64
00026d44: R20 := mem[R31 + 0x18, el]:u64
00026d4d: R23 := mem[R31 + 0x30, el]:u64
00026d51: R24 := mem[R31 + 0x38, el]:u64
00026d5a: R27 := mem[R31 + 0x50, el]:u64
00026d5e: R28 := mem[R31 + 0x58, el]:u64
000386ba: goto %00020268

00020268:
0002026f: R0 := 0x27000
00020277: R0 := mem[R0 + 0xFB8, el]:u64
0002027f: R1 := mem[R31 + 0x118, el]:u64
00020287: R2 := mem[R0, el]:u64
0002028f: #11749 := 1 + ~R2 + R1
00020293: NF := 63:63[#11749]
00020296: VF := 63:63[R1] & 63:63[~R2] & ~63:63[#11749] | ~63:63[R1] &
          ~63:63[~R2] & 63:63[#11749]
00020299: ZF := #11749 = 0
0002029c: CF := 63:63[R1] & 63:63[~R2] | 63:63[~R2] & ~63:63[#11749] |
          63:63[R1] & ~63:63[#11749]
000202a0: R1 := #11749
000202a6: R2 := 0
000202b2: #11751 := ~ZF <> 0
000202ac: when #11751 goto %000202aa
000386b9: goto %0002696d

000202aa:
000202bb: mem := mem with [R31, el]:u64 <- R31 + 0x20
000202bf: mem := mem with [R31, el]:u64 <- R31 + 0x28
000202c8: mem := mem with [R31, el]:u64 <- R31 + 0x60
000202cc: mem := mem with [R31, el]:u64 <- R31 + 0x68
000202d5: mem := mem with [R31, el]:u64 <- R31 + 0xA0
000202d9: mem := mem with [R31, el]:u64 <- R31 + 0xA8
000202de: R30 := 0xE8C4
000202e0: call @__stack_chk_fail with return %000202e2

000202e2:
000386b8: call @host_connect with noreturn

0002696d:
00026974: R21 := mem[R31 + 0x20, el]:u64
00026978: R22 := mem[R31 + 0x28, el]:u64
00026981: R25 := mem[R31 + 0x40, el]:u64
00026985: R26 := mem[R31 + 0x48, el]:u64
0002698f: R29 := mem[R31, el]:u64
00026993: R30 := mem[R31 + 8, el]:u64
00026996: R31 := R31 + 0x120
0002699b: call R30 with noreturn

00026d7b:
00026d82: R25 := 31:0[R23]
00026d87: goto %00026d85

000386d3: sub main(main_argc, main_argv, main_result)
00038b0f: main_argc :: in u32 = low:32[R0]
00038b10: main_argv :: in out u64 = R1
00038b11: main_result :: out u32 = low:32[R0]

0000f2a7:
0000f2ac: R31 := R31 - 0x2A0
0000f2b2: R2 := 0x27000
0000f2bb: mem := mem with [R31, el]:u64 <- R31
0000f2bf: mem := mem with [R31, el]:u64 <- R31 + 8
0000f2c6: R29 := R31
0000f2ce: R2 := mem[R2 + 0xFB8, el]:u64
0000f2d7: mem := mem with [R31, el]:u64 <- R31 + 0x60
0000f2db: mem := mem with [R31, el]:u64 <- R31 + 0x68
0000f2e4: R23 := 31:0[R0]
0000f2ec: R0 := mem[R2, el]:u64
0000f2f4: mem := mem with [R31 + 0x298, el]:u64 <- R0
0000f2fa: R0 := 0
0000f302: R24 := R1
0000f30b: mem := mem with [R31, el]:u64 <- R31 + 0x20
0000f30f: mem := mem with [R31, el]:u64 <- R31 + 0x28
0000f315: R20 := 0x28000
0000f31e: mem := mem with [R31, el]:u64 <- R31 + 0x40
0000f322: mem := mem with [R31, el]:u64 <- R31 + 0x48
0000f328: R21 := 0
0000f32f: R22 := 0
0000f338: mem := mem with [R31, el]:u64 <- R31 + 0x80
0000f33c: mem := mem with [R31, el]:u64 <- R31 + 0x88
0000f342: R25 := 0x14000
0000f34b: mem := mem with [R31, el]:u64 <- R31 + 0xA0
0000f34f: mem := mem with [R31, el]:u64 <- R31 + 0xA8
0000f356: R28 := 0
0000f35f: mem := mem with [R31, el]:u64 <- R31 + 0x220
0000f363: mem := mem with [R31, el]:u64 <- R31 + 0x228
0000f36c: mem := mem with [R31, el]:u64 <- R31 + 0x240
0000f370: mem := mem with [R31, el]:u64 <- R31 + 0x248
0000f375: R30 := 0x245C
0000f378: call @new_auth with return %0002b2bf

0002b2bf:
0002b2c4: R1 := R20 + 0x4D8
0002b2cc: R2 := R0
0002b2d2: R0 := 0x32
0002b2da: mem := mem with [R31 + 0x70, el]:u64 <- 0
0002b2e2: mem := mem with [R1 + 0x68, el]:u64 <- R2
0002b2e7: R30 := 0x2474
0002b2e9: call @new with return %0002b2eb

0002b2eb:
0002b2f1: R1 := R0
0002b2f7: R0 := 0x32
0002b2ff: mem := mem with [R31 + 0x90, el]:u64 <- R1
0002b304: R30 := 0x2484
0002b306: call @new with return %0002b308

0002b308:
0002b30e: R1 := R0
0002b314: R0 := 0x32
0002b31c: mem := mem with [R31 + 0x80, el]:u64 <- R1
0002b321: R30 := 0x2494
0002b323: call @new with return %0002b325

0002b325:
0002b32b: R1 := R0
0002b331: R0 := 0x32
0002b339: mem := mem with [R31 + 0x68, el]:u64 <- R1
0002b33e: R30 := 0x24A4
0002b340: call @new with return %0002b342

0002b342:
0002b348: R1 := R0
0002b34e: R0 := 0x32
0002b356: mem := mem with [R31 + 0xB0, el]:u64 <- R1
0002b35b: R30 := 0x24B4
0002b35d: call @new with return %0002b35f

0002b35f:
0002b365: R1 := R0
0002b36b: R0 := 0x32
0002b373: mem := mem with [R31 + 0xB8, el]:u64 <- R1
0002b378: R30 := 0x24C4
0002b37a: call @new with return %0002b37c

0002b37c:
0002b382: R1 := R0
0002b388: R0 := 0x32
0002b390: mem := mem with [R31 + 0xC0, el]:u64 <- R1
0002b395: R30 := 0x24D4
0002b397: call @new with return %0002b399

0002b399:
0002b39f: R1 := R0
0002b3a5: R0 := 0x32
0002b3ad: mem := mem with [R31 + 0x78, el]:u64 <- R1
0002b3b2: R30 := 0x24E4
0002b3b4: call @new with return %0002b3b6

0002b3b6:
0002b3bc: R1 := R0
0002b3c2: R0 := 0x32
0002b3ca: mem := mem with [R31 + 0x98, el]:u64 <- R1
0002b3cf: R30 := 0x24F4
0002b3d1: call @new with return %0002b3d3

0002b3d3:
0002b3d9: R1 := R0
0002b3df: R0 := 0x32
0002b3e7: mem := mem with [R31 + 0xA8, el]:u64 <- R1
0002b3ec: R30 := 0x2504
0002b3ee: call @new with return %0002b3f0

0002b3f0:
0002b3f6: mem := mem with [R31 + 0x88, el]:u64 <- R0
0002b3fd: R2 := 0x18
0002b404: R1 := 2
0002b40a: R0 := 0x14000
0002b411: R0 := R0 + 0x88
0002b416: R30 := 0x251C
0002b419: call @openlog with return %0002b41b

0002b41b:
0002b420: R1 := 1
0002b427: R0 := 6
0002b430: R19 := 31:0[R1]
0002b436: R2 := 0x14000
0002b43d: R2 := R2 + 0x90
0002b442: R30 := 0x2534
0002b444: call @__syslog_chk with return %0002b446

0002b446:
0002b44a: R0 := 0x27000
0002b450: R7 := 0x15000
0002b457: R26 := R7 + 0x360
0002b45f: mem := mem with [R31 + 0xA0, el]:u32 <- 0
0002b467: R0 := mem[R0 + 0xF70, el]:u64
0002b471: mem := mem with [R31 + 0xD0, el]:u64 <- R0
0002b478: R0 := R31 + 0x120
0002b480: mem := mem with [R31 + 0xD8, el]:u64 <- R0
0003877c: goto %0002b482

0002b482:
0002b487: R2 := R25 + 0x1D8
0002b48f: R1 := R24
0002b498: R0 := 31:0[R23]
0002b49d: R30 := 0x2568
0002b4a0: call @__posix_getopt with return %0002b4a2

0002b4a2:
0002b4a8: mem := mem with [R31 + 0xF8, el]:u32 <- 31:0[R0]
0002b4b6: #16333 := ZF
0002b4b0: when #16333 goto %0002b4ae
0003877b: goto %0002f8e9

0002b4ae:
0002b4c2: #16334 := ~31:0[R22] = 0
0002b4bc: when #16334 goto %0002b4ba
0003877a: goto %0002f8a3

0002b4ba:
0002b4c8: R19 := 0x27000
0002b4ce: R1 := 0x14000
0002b4d5: R0 := 1
0002b4dc: R1 := R1 + 0x210
0002b4e1: R30 := 0x37C0
0002b4e3: call @__printf_chk with return %0002b4e5

0002b4e5:
0002b4ea: R0 := 1
0002b4f0: R1 := 0x14000
0002b4f7: R1 := R1 + 0x250
0002b4fc: R30 := 0x37D0
0002b4fe: call @__printf_chk with return %0002b500

0002b500:
0002b506: R19 := mem[R19 + 0xF68, el]:u64
0002b50d: R1 := 1
0002b515: R3 := mem[R24, el]:u64
0002b51b: R2 := 0x14000
0002b523: R0 := mem[R19, el]:u64
0002b52a: R2 := R2 + 0x398
0002b52f: R30 := 0x37EC
0002b531: call @__fprintf_chk with return %0002b533

0002b533:
0002b539: R0 := mem[R19, el]:u64
0002b540: R1 := 1
0002b546: R2 := 0x14000
0002b54d: R2 := R2 + 0x3E0
0002b552: R30 := 0x3800
0002b554: call @__fprintf_chk with return %0002b556

0002b556:
0002b55c: R0 := mem[R19, el]:u64
0002b563: R1 := 1
0002b569: R2 := 0x14000
0002b570: R2 := R2 + 0x448
0002b575: R30 := 0x3814
0002b577: call @__fprintf_chk with return %0002b579

0002b579:
0002b57f: R0 := mem[R19, el]:u64
0002b586: R1 := 1
0002b58c: R2 := 0x14000
0002b593: R2 := R2 + 0x4F0
0002b598: R30 := 0x3828
0002b59a: call @__fprintf_chk with return %0002b59c

0002b59c:
0002b5a2: R0 := mem[R19, el]:u64
0002b5a9: R1 := 1
0002b5af: R2 := 0x14000
0002b5b6: R2 := R2 + 0x520
0002b5bb: R30 := 0x383C
0002b5bd: call @__fprintf_chk with return %0002b5bf

0002b5bf:
0002b5c5: R0 := mem[R19, el]:u64
0002b5cc: R1 := 1
0002b5d2: R2 := 0x14000
0002b5d9: R2 := R2 + 0x598
0002b5de: R30 := 0x3850
0002b5e0: call @__fprintf_chk with return %0002b5e2

0002b5e2:
0002b5e8: R0 := mem[R19, el]:u64
0002b5ef: R1 := 1
0002b5f5: R2 := 0x14000
0002b5fc: R2 := R2 + 0x5D8
0002b601: R30 := 0x3864
0002b603: call @__fprintf_chk with return %0002b605

0002b605:
0002b60b: R0 := mem[R19, el]:u64
0002b612: R1 := 1
0002b618: R2 := 0x14000
0002b61f: R2 := R2 + 0x618
0002b624: R30 := 0x3878
0002b626: call @__fprintf_chk with return %0002b628

0002b628:
0002b62e: R0 := mem[R19, el]:u64
0002b635: R1 := 1
0002b63b: R2 := 0x14000
0002b642: R2 := R2 + 0x650
0002b647: R30 := 0x388C
0002b649: call @__fprintf_chk with return %0002b64b

0002b64b:
0002b651: R0 := mem[R19, el]:u64
0002b658: R1 := 1
0002b65e: R2 := 0x14000
0002b665: R2 := R2 + 0x680
0002b66a: R30 := 0x38A0
0002b66c: call @__fprintf_chk with return %0002b66e

0002b66e:
0002b674: R0 := mem[R19, el]:u64
0002b67b: R1 := 1
0002b681: R2 := 0x14000
0002b688: R2 := R2 + 0x6C8
0002b68d: R30 := 0x38B4
0002b68f: call @__fprintf_chk with return %0002b691

0002b691:
0002b697: R0 := mem[R19, el]:u64
0002b69e: R1 := 1
0002b6a4: R2 := 0x14000
0002b6ab: R2 := R2 + 0x710
0002b6b0: R30 := 0x38C8
0002b6b2: call @__fprintf_chk with return %0002b6b4

0002b6b4:
0002b6ba: R0 := mem[R19, el]:u64
0002b6c1: R1 := 1
0002b6c7: R2 := 0x14000
0002b6ce: R2 := R2 + 0x760
0002b6d3: R30 := 0x38DC
0002b6d5: call @__fprintf_chk with return %0002b6d7

0002b6d7:
0002b6dd: R0 := mem[R19, el]:u64
0002b6e4: R1 := 1
0002b6ea: R2 := 0x14000
0002b6f1: R2 := R2 + 0x798
0002b6f6: R30 := 0x38F0
0002b6f8: call @__fprintf_chk with return %0002b6fa

0002b6fa:
0002b700: R0 := mem[R19, el]:u64
0002b707: R1 := 1
0002b70d: R2 := 0x14000
0002b714: R2 := R2 + 0x7C8
0002b719: R30 := 0x3904
0002b71b: call @__fprintf_chk with return %0002b71d

0002b71d:
0002b723: R0 := mem[R19, el]:u64
0002b72a: R1 := 1
0002b730: R2 := 0x14000
0002b737: R2 := R2 + 0x8B8
0002b73c: R30 := 0x3918
0002b73e: call @__fprintf_chk with return %0002b740

0002b740:
0002b746: R0 := mem[R19, el]:u64
0002b74d: R1 := 1
0002b753: R2 := 0x14000
0002b75a: R2 := R2 + 0x900
0002b75f: R30 := 0x392C
0002b761: call @__fprintf_chk with return %0002b763

0002b763:
0002b769: R0 := mem[R19, el]:u64
0002b770: R1 := 1
0002b776: R2 := 0x14000
0002b77d: R2 := R2 + 0x948
0002b782: R30 := 0x3940
0002b784: call @__fprintf_chk with return %0002b786

0002b786:
0002b78c: R0 := mem[R19, el]:u64
0002b793: R1 := 1
0002b799: R2 := 0x14000
0002b7a0: R2 := R2 + 0x9C8
0002b7a5: R30 := 0x3954
0002b7a7: call @__fprintf_chk with return %0002b7a9

0002b7a9:
0002b7af: R0 := mem[R19, el]:u64
0002b7b6: R1 := 1
0002b7bc: R2 := 0x14000
0002b7c3: R2 := R2 + 0xA28
0002b7c8: R30 := 0x3968
0002b7ca: call @__fprintf_chk with return %0002b7cc

0002b7cc:
0002b7d2: R0 := mem[R19, el]:u64
0002b7d9: R1 := 1
0002b7df: R2 := 0x14000
0002b7e6: R2 := R2 + 0xA68
0002b7eb: R30 := 0x397C
0002b7ed: call @__fprintf_chk with return %0002b7ef

0002b7ef:
0002b7f5: R0 := mem[R19, el]:u64
0002b7fc: R1 := 1
0002b802: R2 := 0x14000
0002b809: R2 := R2 + 0xAC0
0002b80e: R30 := 0x3990
0002b810: call @__fprintf_chk with return %0002b812

0002b812:
0002b818: R0 := mem[R19, el]:u64
0002b81f: R1 := 1
0002b825: R2 := 0x14000
0002b82c: R2 := R2 + 0xB48
0002b831: R30 := 0x39A4
0002b833: call @__fprintf_chk with return %0002b835

0002b835:
0002b83b: R0 := mem[R19, el]:u64
0002b842: R1 := 1
0002b848: R2 := 0x14000
0002b84f: R2 := R2 + 0xBA8
0002b854: R30 := 0x39B8
0002b856: call @__fprintf_chk with return %0002b858

0002b858:
0002b85e: R0 := mem[R19, el]:u64
0002b865: R1 := 1
0002b86b: R2 := 0x14000
0002b872: R2 := R2 + 0xBF0
0002b877: R30 := 0x39CC
0002b879: call @__fprintf_chk with return %0002b87b

0002b87b:
0002b881: R0 := mem[R19, el]:u64
0002b888: R1 := 1
0002b88e: R2 := 0x14000
0002b895: R2 := R2 + 0xC48
0002b89a: R30 := 0x39E0
0002b89c: call @__fprintf_chk with return %0002b89e

0002b89e:
0002b8a4: R0 := mem[R19, el]:u64
0002b8ab: R1 := 1
0002b8b1: R2 := 0x14000
0002b8b8: R2 := R2 + 0xC90
0002b8bd: R30 := 0x39F4
0002b8bf: call @__fprintf_chk with return %0002b8c1

0002b8c1:
0002b8c7: R0 := mem[R19, el]:u64
0002b8cd: R2 := 0x14000
0002b8d4: R2 := R2 + 0xCB8
0002b8db: R1 := 1
0002b8e0: R30 := 0x3A08
0002b8e2: call @__fprintf_chk with return %0002b8e4

0002b8e4:
0002b8e9: R0 := 1
0002b8ee: R30 := 0x3A10
0002b8f0: call @exit with return %0002b8f2

0002f8a3:
0002f8a7: R0 := 0x27000
0002f8af: R0 := mem[R0 + 0xF88, el]:u64
0002f8b8: R26 := pad:64[mem[R0, el]:u32]
0002f8c0: mem := mem with [R31 + 0xF8, el]:u32 <- 31:0[R26]
0002f8c8: #17670 := 1 + extend:64[~31:0[R23]] + extend:64[31:0[R26]]
0002f8cc: NF := 63:63[#17670]
0002f8cf: VF := 31:31[~31:0[R23]] & 31:31[R26] & ~63:63[#17670] |
          ~31:31[~31:0[R23]] & ~31:31[R26] & 63:63[#17670]
0002f8d2: ZF := #17670 = 0
0002f8d5: CF := 31:31[~31:0[R23]] & 31:31[R26] | 31:31[R26] & ~63:63[#17670]
          | 31:31[~31:0[R23]] & ~63:63[#17670]
0002f8e4: #17672 := NF = VF
0002f8de: when #17672 goto %0002dda4
00038779: goto %0002f8e7

0002f8e7:
00038778: goto %0002dead

0002dead:
0002debe: R1 := 0x3A
0002dec5: R25 := extend:64[31:0[R26]] << 3
0002decd: R0 := R27
0002ded2: R30 := 0x25E4
0002ded4: call @strchr with return %0002ded6

0002ded6:
0002dedc: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002dee3: R1 := 0
0002deef: #17257 := R0 = 0
0002dee9: when #17257 goto %0002dee7
00038777: goto %0002de4c

0002de4c:
0002de5c: R0 := R27
0002de61: R30 := 0x25F8
0002de63: call @parent_add with return %0002de65

0002de65:
0002de6b: R0 := mem[R31 + 0x100, el]:u64
0002de74: R26 := pad:64[mem[R31 + 0xF8, el]:u32]
0002de7f: #17243 := R0 = 0
0002de79: when #17243 goto %0002dd78
00038776: goto %0002de82

0002dd78:
0002dd7e: R26 := extend:64[31:0[R26]] + 2
0002dd86: mem := mem with [R31 + 0xF8, el]:u32 <- 31:0[R26]
0002dd8e: #17220 := 1 + extend:64[~31:0[R26]] + extend:64[31:0[R23]]
0002dd92: NF := 63:63[#17220]
0002dd95: VF := 31:31[~31:0[R26]] & 31:31[R23] & ~63:63[#17220] |
          ~31:31[~31:0[R26]] & ~31:31[R23] & 63:63[#17220]
0002dd98: ZF := #17220 = 0
0002dd9b: CF := 31:31[~31:0[R26]] & 31:31[R23] | 31:31[R23] & ~63:63[#17220]
          | 31:31[~31:0[R26]] & ~63:63[#17220]
0002ddac: #17222 := (NF <> VF | ZF) <> 0
0002dda6: when #17222 goto %0002dda4
00038775: goto %0002de1c

0002de1c:
0002de23: R1 := 0x3A
0002de2a: R25 := extend:64[31:0[R26]] << 3
0002de32: R0 := R27
0002de37: R30 := 0x2840
0002de39: call @strchr with return %0002de3b

0002de3b:
0002de41: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002de48: R1 := 0
0002de54: #17239 := ~R0 = 0
0002de4e: when #17239 goto %0002de4c
00038774: goto %0002dee7

0002dee7:
0002def7: R26 := extend:64[31:0[R26]] + 1
0002deff: #17261 := 1 + extend:64[~31:0[R23]] + extend:64[31:0[R26]]
0002df03: NF := 63:63[#17261]
0002df06: VF := 31:31[~31:0[R23]] & 31:31[R26] & ~63:63[#17261] |
          ~31:31[~31:0[R23]] & ~31:31[R26] & 63:63[#17261]
0002df09: ZF := #17261 = 0
0002df0c: CF := 31:31[~31:0[R23]] & 31:31[R26] | 31:31[R26] & ~63:63[#17261]
          | 31:31[~31:0[R23]] & ~63:63[#17261]
0002df1b: #17263 := NF = VF
0002df15: when #17263 goto %0002de4c
00038773: goto %0002df1e

0002df1e:
0002df24: R25 := R24 + R25
0002df2a: R1 := 0
0002df31: R2 := 0xA
0002df39: R0 := mem[R25 + 8, el]:u64
0002df3e: R30 := 0x286C
0002df40: call @strtol with return %0002df42

0002df42:
0002df49: R1 := 31:0[R0]
0002df4d: goto %0002de4c

0002de82:
0002de88: R26 := extend:64[31:0[R26]] + 1
0002de90: mem := mem with [R31 + 0xF8, el]:u32 <- 31:0[R26]
0002de98: #17248 := 1 + extend:64[~31:0[R23]] + extend:64[31:0[R26]]
0002de9c: NF := 63:63[#17248]
0002de9f: VF := 31:31[~31:0[R23]] & 31:31[R26] & ~63:63[#17248] |
          ~31:31[~31:0[R23]] & ~31:31[R26] & 63:63[#17248]
0002dea2: ZF := #17248 = 0
0002dea5: CF := 31:31[~31:0[R23]] & 31:31[R26] | 31:31[R26] & ~63:63[#17248]
          | 31:31[~31:0[R23]] & ~63:63[#17248]
0002deb5: #17250 := NF <> VF
0002deaf: when #17250 goto %0002dead
00038772: goto %0002dda4

0002dda4:
0002ddb7: #17223 := R21 = 0
0002ddb1: when #17223 goto %0002cace
00038771: goto %0002ddba

0002cace:
0002cad2: R0 := 0x14000
0002cad9: R0 := R0 + 0xD08
0002cade: R30 := 0x4054
0002cae0: call @config_open with return %0002cae2

0002cae2:
0002cae8: R21 := R0
0002caef: R1 := R20 + 0x4D8
0002caf8: R0 := pad:64[mem[R1 + 4, el]:u32]
0002cb04: #16693 := 31:0[R0] = 0
0002cafe: when #16693 goto %0002cafc
00038770: goto %0002f320

0002cafc:
0002cb10: #16694 := R21 = 0
0002cb0a: when #16694 goto %0002cb08
0003876f: goto %0002f31c

0002f31c:
0002f31e: goto %0002ddba

0002f320:
0002f32a: #17564 := R21 = 0
0002f324: when #17564 goto %0002f322
0003876e: goto %0002f352

0002f322:
0002f330: R2 := 0x14000
0002f337: R1 := 1
0002f33e: R2 := R2 + 0xD48
0002f345: R0 := 3
0002f34a: R30 := 0x45D8
0002f34c: call @__syslog_chk with return %0002f34e

0002f34e:
0002f350: goto %0002cb08

0002f352:
0002f356: R1 := 0x14000
0002f35d: R0 := 1
0002f364: R1 := R1 + 0xD18
0002f369: R30 := 0x4078
0002f36b: call @__printf_chk with return %0002f36d

0002f36d:
0002f36f: goto %0002ddba

0002ddba:
0002ddbe: R0 := 0x32
0002ddc3: R30 := 0x2620
0002ddc5: call @new with return %0002ddc7

0002ddc7:
0002ddcb: R1 := 0x14000
0002ddd2: R1 := R1 + 0xD70
0002ddda: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002dde2: R0 := R21
0002dde7: R30 := 0x2634
0002dde9: call @config_pop with return %0002ddeb

0002ddeb:
0002ddf1: R23 := R0
0002ddfc: #17231 := R0 = 0
0002ddf6: when #17231 goto %0002d832
0003876d: goto %0002ddff

0002ddff:
0002de05: R0 := mem[R31 + 0x100, el]:u64
0002de0e: R1 := pad:64[mem[R0]]
0002de19: #17232 := 31:0[R1] = 0
0002de13: when #17232 goto %0002d80a
0003876c: goto %0002d820

0002d80a:
0002d810: R1 := R23
0002d816: R2 := 0x32
0002d81b: R30 := 0x3D28
0002d81d: call @strlcpy with return %0002d81f

0002d81f:
0002d822: goto %0002d820

0002d820:
0002d829: R0 := R23
0002d82e: R30 := 0x2650
0002d830: call @free with return %0002d832

0002d832:
0002d838: R24 := mem[R31 + 0x100, el]:u64
0002d83e: R23 := 0x14000
0002d845: R0 := R23 + 0xD78
0002d84d: R1 := R24
0002d852: R30 := 0x2664
0002d854: call @strcasecmp with return %0002d856

0002d856:
0002d85d: R1 := 31:0[R0]
0002d865: R0 := R24
0002d86c: #17111 := extend:64[31:0[R1]]
0002d870: NF := 63:63[#17111]
0002d873: VF := 31:31[R1] & ~63:63[#17111]
0002d876: ZF := #17111 = 0
0002d879: CF := 31:31[R1] | 31:31[R1] & ~63:63[#17111] | ~63:63[#17111]
0002d894: #17113 := ~ZF <> 0
0002d895: goto %0002d88c

0002d88c:
0002d88e: when #17113 goto %0002d885
0002d88f: goto %0002d889

0002d889:
0002d88a: R28 := 1
0002d891: goto %0002d88d

0002d885:
0002d886: R28 := 31:0[R28]
0002d890: goto %0002d88d

0002d88d:
0002d89b: R30 := 0x2678
0002d89d: call @free with return %0002d89f

0002d89f:
0002d8a3: R0 := 0x32
0002d8a8: R30 := 0x2680
0002d8aa: call @new with return %0002d8ac

0002d8ac:
0002d8b2: R2 := R0
0002d8b8: R1 := 0x14000
0002d8c0: R0 := R21
0002d8c7: R1 := R1 + 0xD80
0002d8cf: mem := mem with [R31 + 0x100, el]:u64 <- R2
0002d8d4: R30 := 0x2698
0002d8d6: call @config_pop with return %0002d8d8

0002d8d8:
0002d8de: R24 := R0
0002d8ea: #17124 := R0 = 0
0002d8e4: when #17124 goto %0002d8e2
0003876b: goto %0002d916

0002d916:
0002d91c: R0 := mem[R31 + 0x100, el]:u64
0002d925: R1 := pad:64[mem[R0]]
0002d931: #17129 := 31:0[R1] = 0
0002d92b: when #17129 goto %0002d929
0003876a: goto %0002d949

0002d929:
0002d939: R1 := R24
0002d93f: R2 := 0x32
0002d944: R30 := 0x3C8C
0002d946: call @strlcpy with return %0002d948

0002d948:
0002d94b: goto %0002d949

0002d949:
0002d952: R0 := R24
0002d957: R30 := 0x26B4
0002d959: call @free with return %0002d8e2

0002d8e2:
0002d8f2: R24 := mem[R31 + 0x100, el]:u64
0002d8f9: R0 := R23 + 0xD78
0002d901: R1 := R24
0002d906: R30 := 0x26C4
0002d908: call @strcasecmp with return %0002d90a

0002d90a:
0002d913: #17128 := 31:0[R0] = 0
0002d90d: when #17128 goto %0002d105
00038769: goto %0002d11c

0002d105:
0002d10a: R0 := R20 + 0x4D8
0002d111: R1 := 1
0002d119: mem := mem with [R0 + 0x70, el]:u32 <- 31:0[R1]
0002d11e: goto %0002d11c

0002d11c:
0002d125: R0 := R24
0002d12b: R23 := 0x14000
0002d132: R24 := R31 + 0x110
0002d139: R23 := R23 + 0xD90
0002d13e: R30 := 0x26DC
0002d140: call @free with return %0002d142

0002d142:
0002d145: goto %0002d143

0002d143:
0002d14c: R1 := R23
0002d154: R0 := R21
0002d159: R30 := 0x2700
0002d15b: call @config_pop with return %0002d15d

0002d15d:
0002d163: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002d16b: R1 := R0
0002d177: #16890 := ~R0 = 0
0002d171: when #16890 goto %0002d16f
00038768: goto %0002d1a0

0002d1a0:
0002d1a4: R23 := 0x14000
0002d1aa: R24 := 0x14000
0002d1b1: R26 := R23 + 0x100
0002d1b8: R24 := R24 + 0xD98
0002d1bf: R25 := R31 + 0x118
0002d1c4: goto %0002d1c2

0002d1c2:
0002d1cb: R1 := R24
0002d1d3: R0 := R21
0002d1d8: R30 := 0x2748
0002d1da: call @config_pop with return %0002d1dc

0002d1dc:
0002d1e2: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002d1ea: R2 := R0
0002d1f6: #16907 := ~R0 = 0
0002d1f0: when #16907 goto %0002d1ee
00038767: goto %0002d227

0002d227:
0002d22b: R24 := 0x14000
0002d231: R25 := 0x14000
0002d238: R24 := R24 + 0xDA0
0002d23f: R25 := R25 + 0x108
0002d246: R26 := R31 + 0x120
0002d24b: goto %0002d249

0002d249:
0002d252: R1 := R24
0002d25a: R0 := R21
0002d25f: R30 := 0x2790
0002d261: call @config_pop with return %0002d263

0002d263:
0002d269: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002d271: R2 := R0
0002d27d: #16927 := ~R0 = 0
0002d277: when #16927 goto %0002d275
00038766: goto %0002d2ae

0002d2ae:
0002d2b2: R24 := 0x14000
0002d2b8: R26 := 0x14000
0002d2bf: R24 := R24 + 0xDD0
0002d2c6: R26 := R26 + 0xDB0
0002d2cb: goto %0002d2c9

0002d2c9:
0002d2d2: R1 := R24
0002d2da: R0 := R21
0002d2df: R30 := 0x27EC
0002d2e1: call @config_pop with return %0002d2e3

0002d2e3:
0002d2e9: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002d2f5: #16944 := R0 = 0
0002d2ef: when #16944 goto %0002d2ed
00038765: goto %0002dc82

0002d2ed:
0002d2fc: R23 := R23 + 0x100
0002d301: goto %0002d2ff

0002d2ff:
0002d308: R1 := R23
0002d310: R0 := R21
0002d315: R30 := 0x2DF0
0002d317: call @config_pop with return %0002d319

0002d319:
0002d31f: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002d32b: #16952 := ~R0 = 0
0002d325: when #16952 goto %0002d323
00038764: goto %0002d34a

0002d34a:
0002d350: R0 := mem[R31 + 0x128, el]:u64
0002d35c: #16953 := R0 = 0
0002d356: when #16953 goto %0002d354
00038763: goto %0002d419

0002d354:
0002d364: R23 := mem[R21, el]:u64
0002d36a: R0 := 0x14000
0002d372: mem := mem with [R31 + 0xD0, el]:u64 <- R0
0002d37e: #16955 := R23 = 0
0002d378: when #16955 goto %0002d376
00038762: goto %0002db82

0002d376:
0002d384: R0 := 0x14000
0002d38c: mem := mem with [R31 + 0xD8, el]:u64 <- R0
00038761: goto %0002d38e

0002db82:
0002db86: R1 := 0x14000
0002db8d: R26 := R0 + 0xDE0
0002db94: R28 := R1 + 0xDE8
0002db9b: R27 := R31 + 0x128
0002dba3: mem := mem with [R31 + 0xD8, el]:u64 <- R1
0002dba8: goto %0002dba6

0002dba6:
0002dbaf: R25 := mem[R23, el]:u64
0002dbb7: R0 := R26
0002dbbf: R1 := R25
0002dbc4: R30 := 0x41CC
0002dbc6: call @strcasecmp with return %0002dbc8

0002dbc8:
0002dbce: mem := mem with [R31 + 0xF8, el]:u32 <- 31:0[R0]
0002dbd7: R24 := 31:0[R0]
0002dbe3: #17176 := 31:0[R0] = 0
0002dbdd: when #17176 goto %0002dbdb
00038760: goto %0002dc5f

0002dc5f:
0002dc65: R1 := R25
0002dc6d: R0 := R28
0002dc72: R30 := 0x41E4
0002dc74: call @strcasecmp with return %0002dc76

0002dc76:
0002dc7f: #17191 := ~31:0[R0] = 0
0002dc79: when #17191 goto %0002dc2f
0003875f: goto %0002dbdb

0002dbdb:
0002dbeb: R1 := mem[R23 + 8, el]:u64
0002dbf2: #17177 := extend:64[31:0[R24]]
0002dbf6: NF := 63:63[#17177]
0002dbf9: VF := 31:31[R24] & ~63:63[#17177]
0002dbfc: ZF := #17177 = 0
0002dbff: CF := 31:31[R24] | 31:31[R24] & ~63:63[#17177] | ~63:63[#17177]
0002dc1a: #17179 := ZF
0002dc1b: goto %0002dc12

0002dc12:
0002dc14: when #17179 goto %0002dc0b
0002dc15: goto %0002dc0f

0002dc0f:
0002dc10: R2 := 1
0002dc17: goto %0002dc13

0002dc0b:
0002dc0c: R2 := 0
0002dc16: goto %0002dc13

0002dc13:
0002dc24: R0 := R27
0002dc29: R30 := 0x41FC
0002dc2b: call @acl_add with return %0002dc2d

0002dc2d:
0002dc37: #17183 := ~31:0[R0] = 0
0002dc31: when #17183 goto %0002dc2f
0003875e: goto %0002dc4d

0002dc4d:
0002dc52: R0 := 1
0002dc57: R30 := 0x4208
0002dc59: call @myexit with return %0002dc5b

0002dc5b:
0002dc5d: goto %0002dc2f

0002dc2f:
0002dc3f: R23 := mem[R23 + 0x18, el]:u64
0002dc4a: #17184 := R23 = 0
0002dc44: when #17184 goto %0002d38e
0003875d: goto %0002dba6

0002d38e:
0002d394: R0 := mem[R31 + 0xD0, el]:u64
0002d39b: R25 := R0 + 0xDE0
0002d3a0: goto %0002d39e

0002d39e:
0002d3a7: R1 := R25
0002d3af: R0 := R21
0002d3b4: R30 := 0x4230
0002d3b6: call @config_pop with return %0002d3b8

0002d3b8:
0002d3be: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002d3ca: #16964 := ~R0 = 0
0002d3c4: when #16964 goto %0002d3c2
0003875c: goto %0002d3d3

0002d3d3:
0002d3d9: R0 := mem[R31 + 0xD8, el]:u64
0002d3e0: R24 := R0 + 0xDE8
0002d3e5: goto %0002d3e3

0002d3e3:
0002d3ec: R1 := R24
0002d3f4: R0 := R21
0002d3f9: R30 := 0x4254
0002d3fb: call @config_pop with return %0002d3fd

0002d3fd:
0002d403: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002d40f: #16972 := ~R0 = 0
0002d409: when #16972 goto %0002d407
0003875b: goto %0002d418

0002d418:
0002d41b: goto %0002d419

0002d407:
0002d414: R30 := 0x4248
0002d416: call @free with return %0002d3e3

0002d3c2:
0002d3cf: R30 := 0x4224
0002d3d1: call @free with return %0002d39e

0002d419:
0002d422: R0 := R21
0002d428: R1 := 0x14000
0002d42f: R1 := R1 + 0xDD8
0002d434: R30 := 0x2E10
0002d436: call @config_pop with return %0002d438

0002d438:
0002d43e: R23 := R0
0002d44a: #16979 := R0 = 0
0002d444: when #16979 goto %0002d442
0003875a: goto %0002db35

0002db35:
0002db3b: R0 := mem[R31 + 0x88, el]:u64
0002db44: R0 := pad:64[mem[R0]]
0002db50: #17158 := 31:0[R0] = 0
0002db4a: when #17158 goto %0002db48
00038759: goto %0002db70

0002db48:
0002db58: R0 := mem[R31 + 0x88, el]:u64
0002db60: R1 := R23
0002db66: R2 := 0x32
0002db6b: R30 := 0x3C7C
0002db6d: call @strlcpy with return %0002db6f

0002db6f:
0002db72: goto %0002db70

0002db70:
0002db79: R0 := R23
0002db7e: R30 := 0x2E2C
0002db80: call @free with return %0002d442

0002d442:
0002d452: R0 := R21
0002d458: R1 := 0x14000
0002d45f: R1 := R1 + 0xDF0
0002d464: R30 := 0x2E3C
0002d466: call @config_pop with return %0002d468

0002d468:
0002d46e: R23 := R0
0002d47a: #16986 := R0 = 0
0002d474: when #16986 goto %0002d472
00038758: goto %0002db18

0002db18:
0002db1e: R0 := mem[R31 + 0x80, el]:u64
0002db27: R0 := pad:64[mem[R0]]
0002db32: #17157 := 31:0[R0] = 0
0002db2c: when #17157 goto %0002d69b
00038757: goto %0002d6b9

0002d69b:
0002d6a1: R0 := mem[R31 + 0x80, el]:u64
0002d6a9: R1 := R23
0002d6af: R2 := 0x32
0002d6b4: R30 := 0x3D74
0002d6b6: call @strlcpy with return %0002d6b8

0002d6b8:
0002d6bb: goto %0002d6b9

0002d6b9:
0002d6c2: R0 := R23
0002d6c7: R30 := 0x2E58
0002d6c9: call @free with return %0002d472

0002d472:
0002d482: R0 := R21
0002d488: R1 := 0x14000
0002d48f: R1 := R1 + 0xDF8
0002d494: R30 := 0x2E68
0002d496: call @config_pop with return %0002d498

0002d498:
0002d49e: R23 := R0
0002d4aa: #16993 := R0 = 0
0002d4a4: when #16993 goto %0002d4a2
00038756: goto %0002dafb

0002dafb:
0002db01: R0 := mem[R31 + 0x68, el]:u64
0002db0a: R0 := pad:64[mem[R0]]
0002db15: #17156 := 31:0[R0] = 0
0002db0f: when #17156 goto %0002d7da
00038755: goto %0002d7f8

0002d7da:
0002d7e0: R0 := mem[R31 + 0x68, el]:u64
0002d7e8: R1 := R23
0002d7ee: R2 := 0x32
0002d7f3: R30 := 0x3D18
0002d7f5: call @strlcpy with return %0002d7f7

0002d7f7:
0002d7fa: goto %0002d7f8

0002d7f8:
0002d801: R0 := R23
0002d806: R30 := 0x2E84
0002d808: call @free with return %0002d4a2

0002d4a2:
0002d4b2: R0 := R21
0002d4b8: R1 := 0x14000
0002d4bf: R1 := R1 + 0xE08
0002d4c4: R30 := 0x2E94
0002d4c6: call @config_pop with return %0002d4c8

0002d4c8:
0002d4ce: R23 := R0
0002d4da: #17000 := R0 = 0
0002d4d4: when #17000 goto %0002d4d2
00038754: goto %0002dade

0002dade:
0002dae4: R0 := mem[R31 + 0xB0, el]:u64
0002daed: R0 := pad:64[mem[R0]]
0002daf8: #17155 := 31:0[R0] = 0
0002daf2: when #17155 goto %0002d7aa
00038753: goto %0002d7c8

0002d7aa:
0002d7b0: R0 := mem[R31 + 0xB0, el]:u64
0002d7b8: R1 := R23
0002d7be: R2 := 0x32
0002d7c3: R30 := 0x3D04
0002d7c5: call @strlcpy with return %0002d7c7

0002d7c7:
0002d7ca: goto %0002d7c8

0002d7c8:
0002d7d1: R0 := R23
0002d7d6: R30 := 0x2EB0
0002d7d8: call @free with return %0002d4d2

0002d4d2:
0002d4e2: R0 := R21
0002d4e8: R1 := 0x14000
0002d4ef: R1 := R1 + 0xE18
0002d4f4: R30 := 0x2EC0
0002d4f6: call @config_pop with return %0002d4f8

0002d4f8:
0002d4fe: R23 := R0
0002d50a: #17007 := R0 = 0
0002d504: when #17007 goto %0002d502
00038752: goto %0002dac1

0002dac1:
0002dac7: R0 := mem[R31 + 0xB8, el]:u64
0002dad0: R0 := pad:64[mem[R0]]
0002dadb: #17154 := 31:0[R0] = 0
0002dad5: when #17154 goto %0002d77a
00038751: goto %0002d798

0002d77a:
0002d780: R0 := mem[R31 + 0xB8, el]:u64
0002d788: R1 := R23
0002d78e: R2 := 0x32
0002d793: R30 := 0x3CF0
0002d795: call @strlcpy with return %0002d797

0002d797:
0002d79a: goto %0002d798

0002d798:
0002d7a1: R0 := R23
0002d7a6: R30 := 0x2EDC
0002d7a8: call @free with return %0002d502

0002d502:
0002d512: R0 := R21
0002d518: R1 := 0x14000
0002d51f: R1 := R1 + 0xE20
0002d524: R30 := 0x2EEC
0002d526: call @config_pop with return %0002d528

0002d528:
0002d52e: R23 := R0
0002d53a: #17014 := R0 = 0
0002d534: when #17014 goto %0002d532
00038750: goto %0002d72d

0002d72d:
0002d733: R0 := mem[R31 + 0xC0, el]:u64
0002d73c: R0 := pad:64[mem[R0]]
0002d748: #17071 := 31:0[R0] = 0
0002d742: when #17071 goto %0002d740
0003874f: goto %0002d768

0002d740:
0002d750: R0 := mem[R31 + 0xC0, el]:u64
0002d758: R1 := R23
0002d75e: R2 := 0x32
0002d763: R30 := 0x3CDC
0002d765: call @strlcpy with return %0002d767

0002d767:
0002d76a: goto %0002d768

0002d768:
0002d771: R0 := R23
0002d776: R30 := 0x2F08
0002d778: call @free with return %0002d532

0002d532:
0002d542: R0 := R21
0002d548: R1 := 0x14000
0002d54f: R1 := R1 + 0xE28
0002d554: R30 := 0x2F18
0002d556: call @config_pop with return %0002d558

0002d558:
0002d55e: R23 := R0
0002d56a: #17021 := R0 = 0
0002d564: when #17021 goto %0002d562
0003874e: goto %0002d710

0002d710:
0002d716: R0 := mem[R31 + 0x90, el]:u64
0002d71f: R0 := pad:64[mem[R0]]
0002d72a: #17070 := 31:0[R0] = 0
0002d724: when #17070 goto %0002d66b
0003874d: goto %0002d689

0002d66b:
0002d671: R0 := mem[R31 + 0x90, el]:u64
0002d679: R1 := R23
0002d67f: R2 := 0x32
0002d684: R30 := 0x3D60
0002d686: call @strlcpy with return %0002d688

0002d688:
0002d68b: goto %0002d689

0002d689:
0002d692: R0 := R23
0002d697: R30 := 0x2F34
0002d699: call @free with return %0002d562

0002d562:
0002d572: R0 := R21
0002d578: R1 := 0x14000
0002d57f: R1 := R1 + 0xE38
0002d584: R30 := 0x2F44
0002d586: call @config_pop with return %0002d588

0002d588:
0002d58e: R23 := R0
0002d59a: #17028 := R0 = 0
0002d594: when #17028 goto %0002d592
0003874c: goto %0002d6f3

0002d6f3:
0002d6f9: R0 := mem[R31 + 0x78, el]:u64
0002d702: R0 := pad:64[mem[R0]]
0002d70d: #17069 := 31:0[R0] = 0
0002d707: when #17069 goto %0002d63b
0003874b: goto %0002d659

0002d63b:
0002d641: R0 := mem[R31 + 0x78, el]:u64
0002d649: R1 := R23
0002d64f: R2 := 0x32
0002d654: R30 := 0x3D4C
0002d656: call @strlcpy with return %0002d658

0002d658:
0002d65b: goto %0002d659

0002d659:
0002d662: R0 := R23
0002d667: R30 := 0x2F60
0002d669: call @free with return %0002d592

0002d592:
0002d5a0: R0 := 0x32
0002d5a5: R30 := 0x2F68
0002d5a7: call @new with return %0002d5a9

0002d5a9:
0002d5ad: R1 := 0x14000
0002d5b4: R1 := R1 + 0xE48
0002d5bc: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002d5c4: R0 := R21
0002d5c9: R30 := 0x2F7C
0002d5cb: call @config_pop with return %0002d5cd

0002d5cd:
0002d5d3: R23 := R0
0002d5df: #17036 := R0 = 0
0002d5d9: when #17036 goto %0002d5d7
0003874a: goto %0002d5f6

0002d5f6:
0002d5fc: R0 := mem[R31 + 0x100, el]:u64
0002d605: R1 := pad:64[mem[R0]]
0002d611: #17038 := 31:0[R1] = 0
0002d60b: when #17038 goto %0002d609
00038749: goto %0002d629

0002d609:
0002d619: R1 := R23
0002d61f: R2 := 0x32
0002d624: R30 := 0x3D38
0002d626: call @strlcpy with return %0002d628

0002d628:
0002d62b: goto %0002d629

0002d629:
0002d632: R0 := R23
0002d637: R30 := 0x2F98
0002d639: call @free with return %0002d5d7

0002d5d7:
0002d5e8: R0 := pad:64[mem[R31 + 0xA0, el]:u32]
0002d5f3: #17037 := 31:0[R0] = 0
0002d5ed: when #17037 goto %0002cc35
00038748: goto %0002ccfa

0002cc35:
0002cc3b: R0 := mem[R31 + 0x100, el]:u64
0002cc42: R2 := 0
0002cc48: R1 := 0
0002cc4d: R30 := 0x40C0
0002cc50: call @strtoul with return %0002cc52

0002cc52:
0002cc58: R24 := R0
0002cc60: R0 := mem[R31 + 0x100, el]:u64
0002cc67: R2 := 0
0002cc6d: R1 := 0
0002cc72: R30 := 0x40D4
0002cc74: call @strtoul with return %0002cc76

0002cc76:
0002cc7c: R23 := 31:0[R0] << 0x28
0002cc84: R0 := mem[R31 + 0x100, el]:u64
0002cc8b: R2 := 0
0002cc91: R1 := 0
0002cc99: R23 := 31:0[R23] & 0xFF0000
0002cc9e: R30 := 0x40EC
0002cca0: call @strtoul with return %0002cca2

0002cca2:
0002cca8: R1 := pad:64[31:8[R0]]
0002ccb0: R0 := mem[R31 + 0x100, el]:u64
0002ccb8: R1 := 31:0[R1] & 0xFF00
0002ccc1: R23 := 31:0[R23] | 31:0[R1]
0002ccc8: R2 := 0
0002ccce: R1 := 0
0002ccd3: R30 := 0x4108
0002ccd5: call @strtoul with return %0002ccd7

0002ccd7:
0002ccdd: R0 := pad:64[31:24[R0]]
0002cce6: R24 := 31:0[R0] | 31:0[R24] << 0x18
0002ccef: R0 := 31:0[R24] | 31:0[R23]
0002ccf7: mem := mem with [R31 + 0xA0, el]:u32 <- 31:0[R0]
0002ccfc: goto %0002ccfa

0002ccfa:
0002cd03: R0 := mem[R31 + 0x100, el]:u64
0002cd08: R30 := 0x2FA8
0002cd0a: call @free with return %0002cd0c

0002cd0c:
0002cd10: R0 := 0x32
0002cd15: R30 := 0x2FB0
0002cd17: call @new with return %0002cd19

0002cd19:
0002cd1d: R1 := 0x14000
0002cd24: R1 := R1 + 0xE50
0002cd2c: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002cd34: R0 := R21
0002cd39: R30 := 0x2FC4
0002cd3b: call @config_pop with return %0002cd3d

0002cd3d:
0002cd43: R23 := R0
0002cd4f: #16779 := R0 = 0
0002cd49: when #16779 goto %0002cd47
00038747: goto %0002ef6d

0002ef6d:
0002ef73: R0 := mem[R31 + 0x100, el]:u64
0002ef7c: R1 := pad:64[mem[R0]]
0002ef87: #17531 := 31:0[R1] = 0
0002ef81: when #17531 goto %0002d6cb
00038746: goto %0002d6e1

0002d6cb:
0002d6d1: R1 := R23
0002d6d7: R2 := 0x32
0002d6dc: R30 := 0x3D84
0002d6de: call @strlcpy with return %0002d6e0

0002d6e0:
0002d6e3: goto %0002d6e1

0002d6e1:
0002d6ea: R0 := R23
0002d6ef: R30 := 0x2FE0
0002d6f1: call @free with return %0002cd47

0002cd47:
0002cd56: R23 := R20 + 0x4D8
0002cd5e: R0 := mem[R23 + 0x78, el]:u64
0002cd6a: #16780 := R0 = 0
0002cd64: when #16780 goto %0002cd62
00038745: goto %0002cd7f

0002cd62:
0002cd72: R0 := mem[R31 + 0x100, el]:u64
0002cd7b: R1 := pad:64[mem[R0]]
0002cd87: #16781 := 31:0[R1] = 0
0002cd81: when #16781 goto %0002cd7f
00038744: goto %0002d0cf

0002d0cf:
0002d0d4: R1 := 1
0002d0db: R2 := 0xA
0002d0e3: mem := mem with [R23 + 0x74, el]:u32 <- 31:0[R1]
0002d0e9: R1 := 0
0002d0ee: R30 := 0x3B1C
0002d0f0: call @strtol with return %0002d0f2

0002d0f2:
0002d0f7: R0 := extend:64[31:0[R0]]
0002d0ff: mem := mem with [R23 + 0x78, el]:u64 <- R0
0002d103: goto %0002cd7f

0002cd7f:
0002cd8f: R0 := mem[R31 + 0x100, el]:u64
0002cd96: R24 := R20 + 0x4D8
0002cd9c: R23 := 0x14000
0002cda3: R23 := R23 + 0xE60
0002cda8: R30 := 0x3000
0002cdaa: call @free with return %0002cdac

0002cdac:
0002cdaf: goto %0002cdad

0002cdad:
0002cdb6: R1 := R23
0002cdbe: R0 := R21
0002cdc3: R30 := 0x3018
0002cdc5: call @config_pop with return %0002cdc7

0002cdc7:
0002cdcd: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002cdd5: R1 := R0
0002cde1: #16792 := R0 = 0
0002cddb: when #16792 goto %0002cdd9
00038743: goto %0002d088

0002cdd9:
0002cde7: R24 := 0x14000
0002cded: R25 := 0x14000
0002cdf4: R24 := R24 + 0xEA0
0002cdfb: R25 := R25 + 0xE68
0002ce02: R23 := R20 + 0x4D8
00038742: goto %0002ce04

0002ce04:
0002ce0a: R1 := R24
0002ce12: R0 := R21
0002ce17: R30 := 0x3060
0002ce19: call @config_pop with return %0002ce1b

0002ce1b:
0002ce21: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002ce29: R26 := R0
0002ce35: #16803 := R0 = 0
0002ce2f: when #16803 goto %0002ce2d
00038741: goto %0002d002

0002d002:
0002d007: R1 := 0x3A
0002d00c: R30 := 0x3074
0002d00e: call @strchr with return %0002d010

0002d010:
0002d016: R2 := R0
0002d021: #16852 := R0 = 0
0002d01b: when #16852 goto %0002cfcb
00038740: goto %0002d024

0002cfcb:
0002cfd1: R3 := R26
0002cfd9: R2 := R25
0002cfe0: R1 := 1
0002cfe7: R0 := 3
0002cfec: R30 := 0x3170
0002cfee: call @__syslog_chk with return %0002cff0

0002cff0:
0002cff2: goto %0002ce04

0002d024:
0002d02b: R4 := 1
0002d034: R3 := 31:0[R4]
0002d03c: R0 := mem[R23 + 0x60, el]:u64
0002d044: R1 := mem[R31 + 0x100, el]:u64
0002d049: R30 := 0x3094
0002d04b: call @hlist_add with return %0002d04d

0002d04d:
0002d053: mem := mem with [R23 + 0x60, el]:u64 <- R0
0002d05b: R1 := R24
0002d063: R0 := R21
0002d068: R30 := 0x30A4
0002d06a: call @config_pop with return %0002d06c

0002d06c:
0002d072: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002d07a: R26 := R0
0002d085: #16867 := ~R0 = 0
0002d07f: when #16867 goto %0002d002
0003873f: goto %0002ce2d

0002ce2d:
0002ce3b: R24 := 0x14000
0002ce41: R26 := 0x14000
0002ce48: R24 := R24 + 0xEB0
0002ce4f: R26 := R26 + 0xF8
0002ce56: R23 := R20 + 0x4D8
0002ce5d: R25 := 1
0002ce62: goto %0002ce60

0002ce60:
0002ce69: R1 := R24
0002ce71: R0 := R21
0002ce76: R30 := 0x30E0
0002ce78: call @config_pop with return %0002ce7a

0002ce7a:
0002ce80: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002ce88: R27 := R0
0002ce94: #16814 := R0 = 0
0002ce8e: when #16814 goto %0002ce8c
0003873e: goto %0002cef2

0002ce8c:
0002ce9c: R23 := mem[R21, el]:u64
0002cea7: #16815 := R23 = 0
0002cea1: when #16815 goto %0002cb08
0003873d: goto %0002ceaa

0002ceaa:
0002ceae: R24 := 0x14000
0002ceb5: R24 := R24 + 0xEC0
0003873c: goto %0002ceb9

0002ceb9:
0002cebf: R3 := mem[R23, el]:u64
0002cec7: R2 := R24
0002cece: R1 := 1
0002ced5: R0 := 6
0002ceda: R30 := 0x319C
0002cedc: call @__syslog_chk with return %0002cede

0002cede:
0002cee4: R23 := mem[R23 + 0x18, el]:u64
0002ceef: #16819 := ~R23 = 0
0002cee9: when #16819 goto %0002ceb9
0003873b: goto %0002cb08

0002cb08:
0002cb18: R0 := R21
0002cb1d: R30 := 0x31AC
0002cb1f: call @config_close with return %0002cb21

0002cb21:
0002cb27: R0 := mem[R31 + 0x70, el]:u64
0002cb2e: #16698 := R0
0002cb32: NF := 63:63[#16698]
0002cb35: VF := 63:63[R0] & ~63:63[#16698]
0002cb38: ZF := #16698 = 0
0002cb3b: CF := 63:63[R0] | ~63:63[#16698] | 63:63[R0] & ~63:63[#16698]
0002cb46: R0 := pad:64[mem[R31 + 0xC8, el]:u32]
0002cb5e: #16700 := ZF
0002cb5f: goto %0002cb56

0002cb56:
0002cb58: when #16700 goto %0002cb4f
0002cb59: goto %0002cb53

0002cb53:
0002cb54: R21 := 1
0002cb5b: goto %0002cb57

0002cb4f:
0002cb50: R21 := 0
0002cb5a: goto %0002cb57

0002cb57:
0002cb6c: #16701 := ~31:0[R0] = 0
0002cb66: when #16701 goto %0002cb64
0003873a: goto %0002f1b2

0002f1b2:
0002f1b7: R0 := R20 + 0x4D8
0002f1bf: R0 := mem[R0 + 8, el]:u64
0002f1cb: #17552 := R0 = 0
0002f1c5: when #17552 goto %0002f1c3
00038739: goto %0002f1f4

0002f1c3:
0002f1d4: R1 := pad:64[mem[R31 + 0xCC, el]:u32]
0002f1da: R0 := 0x14000
0002f1e1: R0 := R0 + 0xEE8
0002f1ea: R1 := 31:0[R21] | 31:0[R1]
0002f1ef: R30 := 0x454C
0002f1f1: call @croak with return %0002f1f3

0002f1f3:
0002f1f6: goto %0002f1f4

0002f1f4:
0002f1fd: R0 := mem[R31 + 0x70, el]:u64
0002f208: #17556 := ~R0 = 0
0002f202: when #17556 goto %0002cb64
00038738: goto %0002f20b

0002f20b:
0002f211: R0 := mem[R31 + 0x118, el]:u64
0002f21d: #17557 := R0 = 0
0002f217: when #17557 goto %0002f215
00038737: goto %0002cb64

0002f215:
0002f226: R1 := pad:64[mem[R31 + 0xCC, el]:u32]
0002f22c: R0 := 0x14000
0002f233: R0 := R0 + 0xF08
0002f238: R30 := 0x4534
0002f23a: call @croak with return %0002f23c

0002f23c:
0002f23e: goto %0002cb64

0002cb64:
0002cb74: R23 := mem[R31 + 0x78, el]:u64
0002cb7d: R0 := pad:64[mem[R23]]
0002cb89: #16702 := ~31:0[R0] = 0
0002cb83: when #16702 goto %0002cb81
00038736: goto %0002f187

0002f187:
0002f18d: R0 := R23
0002f193: R1 := 0x32
0002f198: R30 := 0x31F4
0002f19b: call @gethostname with return %0002f19d

0002f19d:
0002f1a4: R0 := pad:64[mem[R23]]
0002f1af: #17551 := 31:0[R0] = 0
0002f1a9: when #17551 goto %0002f08b
00038735: goto %0002f0ae

0002f08b:
0002f08f: R0 := 0x14000
0002f096: R1 := R0 + 0x88
0002f09e: R0 := mem[R31 + 0x78, el]:u64
0002f0a4: R2 := 0x32
0002f0a9: R30 := 0x4164
0002f0ab: call @strlcpy with return %0002f0ad

0002f0ad:
0002f0b0: goto %0002f0ae

0002f0ae:
0002f0b7: R3 := mem[R31 + 0x78, el]:u64
0002f0bd: R2 := 0x14000
0002f0c4: R1 := 1
0002f0cb: R2 := R2 + 0xF40
0002f0d2: R0 := 6
0002f0d7: R30 := 0x3214
0002f0d9: call @__syslog_chk with return %0002cb81

0002cb81:
0002cb91: R1 := mem[R31 + 0x88, el]:u64
0002cb9a: R0 := pad:64[mem[R1]]
0002cba6: #16703 := 31:0[R0] = 0
0002cba0: when #16703 goto %0002cb9e
00038734: goto %0002f117

0002f117:
0002f11b: R0 := 0x14000
0002f122: R0 := R0 + 0xF60
0002f127: R30 := 0x322C
0002f129: call @strcasecmp with return %0002f12b

0002f12b:
0002f134: #17545 := 31:0[R0] = 0
0002f12e: when #17545 goto %0002ee81
00038733: goto %0002f137

0002ee81:
0002ee86: R0 := R20 + 0x4D8
0002ee8c: R1 := 0x15000
0002ee93: R2 := 1
0002ee9d: R0 := mem[R0 + 0x68, el]:u64
0002eea4: R1 := R0 + 0x200
0002eeac: mem := mem with [R0 + 0x134, el]:u32 <- 31:0[R2]
0002eeb2: goto %0002cb9e

0002f137:
0002f13d: R1 := mem[R31 + 0x88, el]:u64
0002f143: R0 := 0x13000
0002f14a: R0 := R0 + 0x6F0
0002f14f: R30 := 0x3240
0002f151: call @strcasecmp with return %0002f153

0002f153:
0002f15c: #17546 := ~31:0[R0] = 0
0002f156: when #17546 goto %0002e669
00038732: goto %0002f15f

0002e669:
0002e66f: R1 := mem[R31 + 0x88, el]:u64
0002e675: R0 := 0x14000
0002e67c: R0 := R0 + 0xF68
0002e681: R30 := 0x4408
0002e683: call @strcasecmp with return %0002e685

0002e685:
0002e68f: #17369 := 31:0[R0] = 0
0002e689: when #17369 goto %0002e687
00038731: goto %0002e6c2

0002e687:
0002e696: R0 := R20 + 0x4D8
0002e69d: R2 := 1
0002e6a5: R0 := mem[R0 + 0x68, el]:u64
0002e6ac: R1 := R0 + 0x200
0002e6b4: mem := mem with [R0 + 0x134, el]:u32 <- 31:0[R2]
0002e6bc: mem := mem with [R1 - 0xD4, el]:u64 <- 0
0002e6c0: goto %0002cb9e

0002e6c2:
0002e6c8: R1 := mem[R31 + 0x88, el]:u64
0002e6ce: R0 := 0x14000
0002e6d5: R0 := R0 + 0xF70
0002e6da: R30 := 0x441C
0002e6dc: call @strcasecmp with return %0002e6de

0002e6de:
0002e6e8: #17371 := ~31:0[R0] = 0
0002e6e2: when #17371 goto %0002e6e0
00038730: goto %0002ea08

0002e6e0:
0002e6f0: R1 := mem[R31 + 0x88, el]:u64
0002e6f6: R0 := 0x14000
0002e6fd: R0 := R0 + 0xF78
0002e702: R30 := 0x468C
0002e704: call @strcasecmp with return %0002e706

0002e706:
0002e710: #17372 := ~31:0[R0] = 0
0002e70a: when #17372 goto %0002e708
0003872f: goto %0002e963

0002e708:
0002e716: R2 := 0x14000
0002e71d: R2 := R2 + 0xF80
0002e724: R1 := 1
0002e72b: R0 := 3
0002e730: R30 := 0x46F0
0002e732: call @__syslog_chk with return %0002e734

0002e734:
0002e739: R0 := 1
0002e73e: R30 := 0x46F8
0002e740: call @myexit with return %0002e742

0002e742:
0002e744: goto %0002cb9e

0002e963:
0002e968: R0 := R20 + 0x4D8
0002e96e: R1 := 0x15000
0002e978: R0 := mem[R0 + 0x68, el]:u64
0002e97f: R1 := R0 + 0x200
0002e987: mem := mem with [R0 + 0x134, el]:u32 <- 0
0002e98d: goto %0002cb9e

0002ea08:
0002ea0d: R0 := R20 + 0x4D8
0002ea13: R1 := 0x12000
0002ea1d: R0 := mem[R0 + 0x68, el]:u64
0002ea24: R1 := R0 + 0x200
0002ea2c: mem := mem with [R0 + 0x134, el]:u32 <- 0
0002ea32: goto %0002cb9e

0002f15f:
0002f164: R0 := R20 + 0x4D8
0002f16a: R1 := 0x15000
0002f174: R0 := mem[R0 + 0x68, el]:u64
0002f17b: R1 := R0 + 0x200
0002f183: mem := mem with [R0 + 0x134, el]:u32 <- 0
0003872e: goto %0002cb9e

0002cb9e:
0002cbae: R0 := mem[R31 + 0x120, el]:u64
0002cbba: #16704 := R0 = 0
0002cbb4: when #16704 goto %0002cbb2
0003872d: goto %0002f0fc

0002f0fc:
0002f101: R0 := R20 + 0x4D8
0002f109: R0 := mem[R0 + 0x60, el]:u64
0002f114: #17544 := R0 = 0
0002f10e: when #17544 goto %0002e643
0003872c: goto %0002cbb2

0002e643:
0002e647: R2 := 0x14000
0002e64e: R1 := 1
0002e655: R2 := R2 + 0xFA0
0002e65c: R0 := 4
0002e661: R30 := 0x43F4
0002e663: call @__syslog_chk with return %0002e665

0002e665:
0002e667: goto %0002cbb2

0002cbb2:
0002cbc2: R0 := mem[R31 + 0x70, el]:u64
0002cbce: #16705 := R0 = 0
0002cbc8: when #16705 goto %0002cbc6
0003872b: goto %0002cc1d

0002cbc6:
0002cbd5: R3 := R20 + 0x4D8
0002cbdb: R2 := 0x14000
0002cbe2: R1 := 1
0002cbe9: R2 := R2 + 0xFD8
0002cbf0: R0 := 6
0002cbf8: R5 := mem[R3 + 0x68, el]:u64
0002cc01: R3 := pad:64[mem[R5 + 0x12C, el]:u32]
0002cc0a: R4 := pad:64[mem[R5 + 0x130, el]:u32]
0002cc13: R5 := pad:64[mem[R5 + 0x134, el]:u32]
0002cc18: R30 := 0x40AC
0002cc1a: call @__syslog_chk with return %0002cc1c

0002cc1c:
0002cc1f: goto %0002cc1d

0002cc1d:
0002cc27: R0 := pad:64[mem[R31 + 0xA0, el]:u32]
0002cc32: #16706 := ~31:0[R0] = 0
0002cc2c: when #16706 goto %0002ba59
0003872a: goto %0002ba9d

0002ba9d:
0002baa7: R0 := pad:64[mem[R31 + 0xC8, el]:u32]
0002bab0: R21 := 31:0[R21] | 31:0[R0]
0002babc: #16352 := ~31:0[R21] = 0
0002bab6: when #16352 goto %0002bab4
00038729: goto %0002f872

0002f872:
0002f879: R0 := pad:64[mem[R31 + 0xCC, el]:u32]
0002f884: #17664 := 31:0[R0] = 0
0002f87e: when #17664 goto %0002bcb1
00038728: goto %0002f887

0002f887:
0002f88c: R0 := R20 + 0x4D8
0002f895: R0 := pad:64[mem[R0 + 0x70, el]:u32]
0002f8a0: #17665 := 31:0[R0] = 0
0002f89a: when #17665 goto %0002bab4
00038727: goto %0002bcb1

0002bab4:
0002bac3: R23 := R31 + 0x150
0002bac9: R1 := 0x15000
0002bad0: R0 := 1
0002bad7: R1 := R1 + 0x30
0002badc: R30 := 0x3618
0002bade: call @__printf_chk with return %0002bae0

0002bae0:
0002bae6: R1 := R23
0002baed: R0 := 0
0002baf2: R30 := 0x3624
0002baf5: call @tcgetattr with return %0002baf7

0002baf7:
0002bafe: R2 := mem[R31 + 0x150, el]:u64
0002bb02: R3 := mem[R31 + 0x158, el]:u64
0002bb0b: mem := mem with [R31, el]:u64 <- R31 + 0x320
0002bb0f: mem := mem with [R31, el]:u64 <- R31 + 0x328
0002bb18: R1 := pad:64[mem[R31 + 0x188, el]:u32]
0002bb21: R4 := mem[R31 + 0x160, el]:u64
0002bb25: R5 := mem[R31 + 0x168, el]:u64
0002bb2e: mem := mem with [R31, el]:u64 <- R31 + 0x340
0002bb32: mem := mem with [R31, el]:u64 <- R31 + 0x348
0002bb3b: R0 := pad:64[mem[R31 + 0x19C, el]:u32]
0002bb44: R4 := mem[R31 + 0x170, el]:u64
0002bb48: R5 := mem[R31 + 0x178, el]:u64
0002bb4f: R3 := 0xFFFFFFFFFFFFFFF6
0002bb58: R0 := 31:0[R0] & 31:0[R3]
0002bb5f: R2 := R31 + 0x190
0002bb67: R3 := mem[R31 + 0x180, el]:u64
0002bb6f: mem := mem with [R31 + 0x19C, el]:u32 <- 31:0[R0]
0002bb76: R0 := 0
0002bb7f: mem := mem with [R31, el]:u64 <- R31 + 0x360
0002bb83: mem := mem with [R31, el]:u64 <- R31 + 0x368
0002bb8b: mem := mem with [R31 + 0x1C0, el]:u64 <- R3
0002bb93: mem := mem with [R31 + 0x1C8, el]:u32 <- 31:0[R1]
0002bb9a: R1 := 1
0002bb9f: R30 := 0x366C
0002bba2: call @tcsetattr with return %0002bba4

0002bba4:
0002bba8: R2 := 0x27000
0002bbaf: R1 := 0x32
0002bbb7: R24 := mem[R31 + 0x68, el]:u64
0002bbbf: R2 := mem[R2 + 0xFA8, el]:u64
0002bbc7: R0 := R24
0002bbcf: R2 := mem[R2, el]:u64
0002bbd4: R30 := 0x3688
0002bbd6: call @fgets with return %0002bbd8

0002bbd8:
0002bbde: R3 := R0
0002bbe6: R2 := R23
0002bbed: R1 := 1
0002bbf4: R0 := 0
0002bbfc: mem := mem with [R31 + 0x100, el]:u64 <- R3
0002bc01: R30 := 0x36A0
0002bc03: call @tcsetattr with return %0002bc05

0002bc05:
0002bc0b: R0 := R24
0002bc10: R30 := 0x36A8
0002bc12: call @strlen with return %0002bc14

0002bc14:
0002bc1a: R0 := extend:64[31:0[R0]] - 1
0002bc22: mem := mem with [R31 + 0xF8, el]:u32 <- 31:0[R0]
0002bc29: R1 := extend:64[31:0[R0]]
0002bc32: #16383 := 0xFFFFFFFFFFFFFFF6 + extend:64[31:0[R0]]
0002bc36: NF := 63:63[#16383]
0002bc39: VF := 31:31[R0] & ~63:63[#16383]
0002bc3c: ZF := #16383 = 0
0002bc3f: CF := 31:31[R0] | 31:31[R0] & ~63:63[#16383] | ~63:63[#16383]
0002bc4e: #16385 := ZF
0002bc48: when #16385 goto %0002bc46
00038726: goto %0002bc8b

0002bc46:
0002bc56: R2 := mem[R31 + 0x68, el]:u64
0002bc60: R0 := extend:64[mem[R31 + 0xF8, el]:u32]
0002bc67: R0 := R0 - 1
0002bc70: R1 := high:32[R1].pad:64[mem[R2 + R0]]
0002bc77: #16386 := 0xFFFFFFFFFFFFFFF3 + extend:64[31:0[R1]]
0002bc7b: NF := 63:63[#16386]
0002bc7e: VF := 31:31[R1] & ~63:63[#16386]
0002bc81: ZF := #16386 = 0
0002bc84: CF := 31:31[R1] | 31:31[R1] & ~63:63[#16386] | ~63:63[#16386]
0002bc93: #16388 := ~ZF <> 0
0002bc8d: when #16388 goto %0002bc8b
00038725: goto %0002f86c

0002f86c:
0002f870: goto %0002bc8b

0002bc8b:
0002bc99: R1 := 0x13000
0002bca0: R0 := 1
0002bca7: R1 := R1 + 0x8F0
0002bcac: R30 := 0x36D0
0002bcae: call @__printf_chk with return %0002bcb0

0002bcb0:
0002bcb3: goto %0002bcb1

0002bcb1:
0002bcba: R0 := mem[R31 + 0x68, el]:u64
0002bcc3: R0 := pad:64[mem[R0]]
0002bccf: #16389 := ~31:0[R0] = 0
0002bcc9: when #16389 goto %0002bcc7
00038724: goto %0002f84f

0002bcc7:
0002bcd6: R23 := R20 + 0x4D8
0002bcde: R0 := mem[R23 + 0x68, el]:u64
0002bce7: R1 := pad:64[mem[R0 + 0x130, el]:u32]
0002bcee: #16390 := extend:64[31:0[R1]]
0002bcf2: NF := 63:63[#16390]
0002bcf5: VF := 31:31[R1] & ~63:63[#16390]
0002bcf8: ZF := #16390 = 0
0002bcfb: CF := 31:31[R1] | 31:31[R1] & ~63:63[#16390] | ~63:63[#16390]
0002bd24: #16392 := ZF
0002bd25: goto %0002bd1c

0002bd1c:
0002bd1e: when #16392 goto %0002bd04
0002bd1f: goto %0002bd10

0002bd10:
0002bd11: NF := 0
0002bd14: ZF := 0
0002bd17: CF := 0
0002bd1a: VF := 0
0002bd21: goto %0002bd1d

0002bd04:
0002bd05: NF := 63:63[extend:64[31:0[R21]] + 0]
0002bd08: VF := 31:31[R21] & ~63:63[extend:64[31:0[R21]] + 0]
0002bd0b: ZF := extend:64[31:0[R21]] + 0 = 0
0002bd0e: CF := 31:31[R21] | ~63:63[extend:64[31:0[R21]] + 0] | 31:31[R21] &
          ~63:63[extend:64[31:0[R21]] + 0]
0002bd20: goto %0002bd1d

0002bd1d:
0002bd32: #16395 := ZF
0002bd2c: when #16395 goto %0002bd2a
00038723: goto %0002f7e6

0002bd2a:
0002bd3b: R0 := pad:64[mem[R0 + 0x134, el]:u32]
0002bd47: #16396 := ~31:0[R0] = 0
0002bd41: when #16396 goto %0002bd3f
00038722: goto %0002d9e3

0002f7e6:
0002f7ec: R0 := mem[R31 + 0x68, el]:u64
0002f7f1: R30 := 0x36F4
0002f7f3: call @ntlm_hash_nt_password with return %0002f7f5

0002f7f5:
0002f7fb: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002f803: R1 := mem[R23 + 0x68, el]:u64
0002f80a: #17657 := R1
0002f80e: NF := 63:63[#17657]
0002f811: VF := 63:63[R1] & ~63:63[#17657]
0002f814: ZF := #17657 = 0
0002f817: CF := 63:63[R1] | ~63:63[#17657] | 63:63[R1] & ~63:63[#17657]
0002f83f: #17659 := ~ZF <> 0
0002f840: goto %0002f837

0002f837:
0002f839: when #17659 goto %0002f81f
0002f83a: goto %0002f82b

0002f82b:
0002f82c: NF := 0
0002f82f: ZF := 1
0002f832: CF := 0
0002f835: VF := 0
0002f83c: goto %0002f838

0002f81f:
0002f820: NF := 63:63[R0 + 0]
0002f823: VF := 63:63[R0] & ~63:63[R0 + 0]
0002f826: ZF := R0 + 0 = 0
0002f829: CF := 63:63[R0] | ~63:63[R0 + 0] | 63:63[R0] & ~63:63[R0 + 0]
0002f83b: goto %0002f838

0002f838:
0002f84c: #17662 := ~ZF <> 0
0002f846: when #17662 goto %0002d95b
00038721: goto %0002d980

0002d95b:
0002d962: R2 := mem[R0, el]:u64
0002d966: R3 := mem[R0 + 8, el]:u64
0002d96f: mem := mem with [R1, el]:u64 <- R1 + 0x190
0002d973: mem := mem with [R1, el]:u64 <- R1 + 0x198
0002d97d: mem := mem with [R1 + 0xD5, el]:u64 <- R2
0002d982: goto %0002d980

0002d980:
0002d986: R30 := 0x370C
0002d988: call @free with return %0002d98a

0002d98a:
0002d98f: R0 := R20 + 0x4D8
0002d997: R0 := mem[R0 + 0x68, el]:u64
0002d9a0: R0 := pad:64[mem[R0 + 0x134, el]:u32]
0002d9a7: #17138 := extend:64[31:0[R0]]
0002d9ab: NF := 63:63[#17138]
0002d9ae: VF := 31:31[R0] & ~63:63[#17138]
0002d9b1: ZF := #17138 = 0
0002d9b4: CF := 31:31[R0] | 31:31[R0] & ~63:63[#17138] | ~63:63[#17138]
0002d9dd: #17140 := ZF
0002d9de: goto %0002d9d5

0002d9d5:
0002d9d7: when #17140 goto %0002d9bd
0002d9d8: goto %0002d9c9

0002d9c9:
0002d9ca: NF := 0
0002d9cd: ZF := 0
0002d9d0: CF := 0
0002d9d3: VF := 0
0002d9da: goto %0002d9d6

0002d9bd:
0002d9be: NF := 63:63[extend:64[31:0[R21]] + 0]
0002d9c1: VF := 31:31[R21] & ~63:63[extend:64[31:0[R21]] + 0]
0002d9c4: ZF := extend:64[31:0[R21]] + 0 = 0
0002d9c7: CF := 31:31[R21] | ~63:63[extend:64[31:0[R21]] + 0] | 31:31[R21] &
          ~63:63[extend:64[31:0[R21]] + 0]
0002d9d9: goto %0002d9d6

0002d9d6:
0002d9eb: #17143 := ZF
0002d9e5: when #17143 goto %0002d9e3
00038720: goto %0002bd3f

0002d9e3:
0002d9f2: R0 := R20 + 0x4D8
0002d9fa: R0 := mem[R0 + 0x68, el]:u64
0002da03: R0 := pad:64[mem[R0 + 0x12C, el]:u32]
0002da0e: #17144 := 31:0[R0] = 0
0002da08: when #17144 goto %0002be48
0003871f: goto %0002da11

0002da11:
0002da14: goto %0002da12

0002bd3f:
0002bd4f: R0 := mem[R31 + 0x68, el]:u64
0002bd54: R30 := 0x372C
0002bd56: call @ntlm_hash_lm_password with return %0002bd58

0002bd58:
0002bd5e: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002bd65: R1 := R20 + 0x4D8
0002bd6c: #16398 := R0
0002bd70: NF := 63:63[#16398]
0002bd73: VF := 63:63[R0] & ~63:63[#16398]
0002bd76: ZF := #16398 = 0
0002bd79: CF := 63:63[R0] | ~63:63[#16398] | 63:63[R0] & ~63:63[#16398]
0002bd83: R1 := mem[R1 + 0x68, el]:u64
0002bda9: #16400 := ~ZF <> 0
0002bdaa: goto %0002bda1

0002bda1:
0002bda3: when #16400 goto %0002bd89
0002bda4: goto %0002bd95

0002bd95:
0002bd96: NF := 0
0002bd99: ZF := 1
0002bd9c: CF := 0
0002bd9f: VF := 0
0002bda6: goto %0002bda2

0002bd89:
0002bd8a: NF := 63:63[R1 + 0]
0002bd8d: VF := 63:63[R1] & ~63:63[R1 + 0]
0002bd90: ZF := R1 + 0 = 0
0002bd93: CF := 63:63[R1] | ~63:63[R1 + 0] | 63:63[R1] & ~63:63[R1 + 0]
0002bda5: goto %0002bda2

0002bda2:
0002bdb7: #16403 := ~ZF <> 0
0002bdb1: when #16403 goto %0002bdaf
0003871e: goto %0002bde5

0002bdaf:
0002bdbe: R2 := R1 + 0x96
0002bdc7: R4 := mem[R0, el]:u64
0002bdcb: R5 := mem[R0 + 8, el]:u64
0002bdd4: mem := mem with [R2, el]:u64 <- R2
0002bdd8: mem := mem with [R2, el]:u64 <- R2 + 8
0002bde2: mem := mem with [R1 + 0xA3, el]:u64 <- R2
0002bde7: goto %0002bde5

0002bde5:
0002bdeb: R30 := 0x3748
0002bded: call @free with return %0002bdef

0002bdef:
0002bdf4: R0 := R20 + 0x4D8
0002bdfc: R0 := mem[R0 + 0x68, el]:u64
0002be05: R0 := pad:64[mem[R0 + 0x12C, el]:u32]
0002be0c: #16406 := extend:64[31:0[R0]]
0002be10: NF := 63:63[#16406]
0002be13: VF := 31:31[R0] & ~63:63[#16406]
0002be16: ZF := #16406 = 0
0002be19: CF := 31:31[R0] | 31:31[R0] & ~63:63[#16406] | ~63:63[#16406]
0002be42: #16408 := ZF
0002be43: goto %0002be3a

0002be3a:
0002be3c: when #16408 goto %0002be22
0002be3d: goto %0002be2e

0002be2e:
0002be2f: NF := 0
0002be32: ZF := 0
0002be35: CF := 0
0002be38: VF := 0
0002be3f: goto %0002be3b

0002be22:
0002be23: NF := 63:63[extend:64[31:0[R21]] + 0]
0002be26: VF := 31:31[R21] & ~63:63[extend:64[31:0[R21]] + 0]
0002be29: ZF := extend:64[31:0[R21]] + 0 = 0
0002be2c: CF := 31:31[R21] | ~63:63[extend:64[31:0[R21]] + 0] | 31:31[R21] &
          ~63:63[extend:64[31:0[R21]] + 0]
0002be3e: goto %0002be3b

0002be3b:
0002be50: #16411 := ZF
0002be4a: when #16411 goto %0002be48
0003871d: goto %0002da12

0002da12:
0002da1b: R2 := mem[R31 + 0x68, el]:u64
0002da23: R1 := mem[R31 + 0x80, el]:u64
0002da2b: R0 := mem[R31 + 0x90, el]:u64
0002da30: R30 := 0x3770
0002da32: call @ntlm2_hash_password with return %0002da34

0002da34:
0002da3a: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002da41: R1 := R20 + 0x4D8
0002da48: #17146 := R0
0002da4c: NF := 63:63[#17146]
0002da4f: VF := 63:63[R0] & ~63:63[#17146]
0002da52: ZF := #17146 = 0
0002da55: CF := 63:63[R0] | ~63:63[#17146] | 63:63[R0] & ~63:63[#17146]
0002da5f: R1 := mem[R1 + 0x68, el]:u64
0002da85: #17148 := ~ZF <> 0
0002da86: goto %0002da7d

0002da7d:
0002da7f: when #17148 goto %0002da65
0002da80: goto %0002da71

0002da71:
0002da72: NF := 0
0002da75: ZF := 1
0002da78: CF := 0
0002da7b: VF := 0
0002da82: goto %0002da7e

0002da65:
0002da66: NF := 63:63[R1 + 0]
0002da69: VF := 63:63[R1] & ~63:63[R1 + 0]
0002da6c: ZF := R1 + 0 = 0
0002da6f: CF := 63:63[R1] | ~63:63[R1 + 0] | 63:63[R1] & ~63:63[R1 + 0]
0002da81: goto %0002da7e

0002da7e:
0002da93: #17151 := ~ZF <> 0
0002da8d: when #17151 goto %0002da8b
0003871c: goto %0002dab7

0002da8b:
0002da9a: R1 := R1 + 0xFA
0002daa3: R2 := mem[R0, el]:u64
0002daa7: R3 := mem[R0 + 8, el]:u64
0002dab0: mem := mem with [R1, el]:u64 <- R1
0002dab4: mem := mem with [R1, el]:u64 <- R1 + 8
0002dab9: goto %0002dab7

0002dab7:
0002dabd: R30 := 0x378C
0002dabf: call @free with return %0002be48

0002be48:
0002be58: R21 := mem[R31 + 0x68, el]:u64
0002be60: R0 := R21
0002be65: R30 := 0x3798
0002be67: call @strlen with return %0002be69

0002be69:
0002be6e: R1 := 0
0002be76: R2 := R0
0002be7e: R0 := R21
0002be83: R30 := 0x37A8
0002be85: call @memset with return %0002be87

0002be87:
0002be8a: goto %0002be88

0002f84f:
0002f855: R0 := mem[R31 + 0xB0, el]:u64
0002f85e: R0 := pad:64[mem[R0]]
0002f869: #17663 := ~31:0[R0] = 0
0002f863: when #17663 goto %0002ef8a
0003871b: goto %0002efe4

0002ef8a:
0002ef90: R0 := mem[R31 + 0xB0, el]:u64
0002ef97: R1 := 8
0002ef9c: R30 := 0x4128
0002ef9e: call @scanmem with return %0002efa0

0002efa0:
0002efa6: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002efb2: #17533 := R0 = 0
0002efac: when #17533 goto %0002efaa
0003871a: goto %0002efc1

0002efaa:
0002efb8: R2 := 0x15000
0002efbf: R2 := R2 + 0x40
00038719: goto %0002e99d

0002efc1:
0002efc6: R1 := R20 + 0x4D8
0002efce: R1 := mem[R1 + 0x68, el]:u64
0002efda: #17534 := R1 = 0
0002efd4: when #17534 goto %0002efd2
00038718: goto %0002f0db

0002f0db:
0002f0e0: R1 := R1 + 0xFA
0002f0e9: R2 := mem[R0, el]:u64
0002f0ed: R3 := mem[R0 + 8, el]:u64
0002f0f6: mem := mem with [R1, el]:u64 <- R1
0002f0fa: mem := mem with [R1, el]:u64 <- R1 + 8
00038717: goto %0002efd2

0002efd2:
0002efdf: R30 := 0x414C
0002efe1: call @free with return %0002efe3

0002efe3:
0002efe6: goto %0002efe4

0002efe4:
0002efed: R0 := mem[R31 + 0xB8, el]:u64
0002eff6: R0 := pad:64[mem[R0]]
0002f002: #17535 := ~31:0[R0] = 0
0002effc: when #17535 goto %0002effa
00038716: goto %0002f051

0002effa:
0002f00a: R0 := mem[R31 + 0xB8, el]:u64
0002f011: R1 := 8
0002f016: R30 := 0x42F0
0002f018: call @scanmem with return %0002f01a

0002f01a:
0002f020: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002f02b: #17537 := R0 = 0
0002f025: when #17537 goto %0002e98f
00038715: goto %0002f02e

0002e98f:
0002e993: R2 := 0x15000
0002e99a: R2 := R2 + 0x68
0002e99f: goto %0002e99d

0002f02e:
0002f033: R1 := R20 + 0x4D8
0002f03b: R1 := mem[R1 + 0x68, el]:u64
0002f047: #17538 := R1 = 0
0002f041: when #17538 goto %0002f03f
00038714: goto %0002f071

0002f071:
0002f078: R2 := mem[R0, el]:u64
0002f07c: R3 := mem[R0 + 8, el]:u64
0002f085: mem := mem with [R1, el]:u64 <- R1 + 0x190
0002f089: mem := mem with [R1, el]:u64 <- R1 + 0x198
00038713: goto %0002f03f

0002f03f:
0002f04c: R30 := 0x4310
0002f04e: call @free with return %0002f050

0002f050:
0002f053: goto %0002f051

0002f051:
0002f05a: R0 := mem[R31 + 0xC0, el]:u64
0002f063: R0 := pad:64[mem[R0]]
0002f06e: #17539 := ~31:0[R0] = 0
0002f068: when #17539 goto %0002eefc
00038712: goto %0002be88

0002eefc:
0002ef02: R0 := mem[R31 + 0xC0, el]:u64
0002ef09: R1 := 8
0002ef0e: R30 := 0x3B94
0002ef10: call @scanmem with return %0002ef12

0002ef12:
0002ef18: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002ef23: #17527 := R0 = 0
0002ef1d: when #17527 goto %0002e9c3
00038711: goto %0002ef26

0002e9c3:
0002e9c7: R2 := 0x15000
0002e9ce: R2 := R2 + 0x90
0002e9d2: goto %0002e99d

0002e99d:
0002e9a5: R1 := 1
0002e9ac: R0 := 3
0002e9b1: R30 := 0x4668
0002e9b3: call @__syslog_chk with return %0002e9b5

0002e9b5:
0002e9ba: R0 := 1
0002e9bf: R30 := 0x4670
0002e9c1: call @exit with return %0002e9c3

0002ef26:
0002ef2b: R1 := R20 + 0x4D8
0002ef33: R1 := mem[R1 + 0x68, el]:u64
0002ef3f: #17528 := R1 = 0
0002ef39: when #17528 goto %0002ef37
00038710: goto %0002ef4c

0002ef4c:
0002ef51: R1 := R1 + 0x96
0002ef5a: R2 := mem[R0, el]:u64
0002ef5e: R3 := mem[R0 + 8, el]:u64
0002ef67: mem := mem with [R1, el]:u64 <- R1
0002ef6b: mem := mem with [R1, el]:u64 <- R1 + 8
0003870f: goto %0002ef37

0002ef37:
0002ef44: R30 := 0x3BB8
0002ef46: call @free with return %0002ef48

0002ef48:
0002ef4a: goto %0002be88

0002be88:
0002be90: R0 := R20 + 0x4D8
0002be98: R1 := mem[R31 + 0x90, el]:u64
0002bea0: R0 := mem[R0 + 0x68, el]:u64
0002bea7: #16421 := R1
0002beab: NF := 63:63[#16421]
0002beae: VF := 63:63[R1] & ~63:63[#16421]
0002beb1: ZF := #16421 = 0
0002beb4: CF := 63:63[R1] | ~63:63[#16421] | 63:63[R1] & ~63:63[#16421]
0002bedc: #16423 := ~ZF <> 0
0002bedd: goto %0002bed4

0002bed4:
0002bed6: when #16423 goto %0002bebc
0002bed7: goto %0002bec8

0002bec8:
0002bec9: NF := 0
0002becc: ZF := 1
0002becf: CF := 0
0002bed2: VF := 0
0002bed9: goto %0002bed5

0002bebc:
0002bebd: NF := 63:63[R0 + 0]
0002bec0: VF := 63:63[R0] & ~63:63[R0 + 0]
0002bec3: ZF := R0 + 0 = 0
0002bec6: CF := 63:63[R0] | ~63:63[R0 + 0] | 63:63[R0] & ~63:63[R0 + 0]
0002bed8: goto %0002bed5

0002bed5:
0002beea: #16426 := ZF
0002bee4: when #16426 goto %0002bee2
0003870e: goto %0002f7d9

0002f7d9:
0002f7dd: R2 := 0x32
0002f7e2: R30 := 0x32F4
0002f7e4: call @strlcpy with return %0002bee2

0002bee2:
0002bef1: R0 := R20 + 0x4D8
0002bef9: R1 := mem[R31 + 0x80, el]:u64
0002bf01: R0 := mem[R0 + 0x68, el]:u64
0002bf08: #16427 := R0
0002bf0c: NF := 63:63[#16427]
0002bf0f: VF := 63:63[R0] & ~63:63[#16427]
0002bf12: ZF := #16427 = 0
0002bf15: CF := 63:63[R0] | ~63:63[#16427] | 63:63[R0] & ~63:63[#16427]
0002bf3d: #16429 := ~ZF <> 0
0002bf3e: goto %0002bf35

0002bf35:
0002bf37: when #16429 goto %0002bf1d
0002bf38: goto %0002bf29

0002bf29:
0002bf2a: NF := 0
0002bf2d: ZF := 1
0002bf30: CF := 0
0002bf33: VF := 0
0002bf3a: goto %0002bf36

0002bf1d:
0002bf1e: NF := 63:63[R1 + 0]
0002bf21: VF := 63:63[R1] & ~63:63[R1 + 0]
0002bf24: ZF := R1 + 0 = 0
0002bf27: CF := 63:63[R1] | ~63:63[R1 + 0] | 63:63[R1] & ~63:63[R1 + 0]
0002bf39: goto %0002bf36

0002bf36:
0002bf4b: #16432 := ZF
0002bf45: when #16432 goto %0002bf43
0003870d: goto %0002f7c5

0002f7c5:
0002f7ca: R0 := R0 + 0x32
0002f7d0: R2 := 0x32
0002f7d5: R30 := 0x3318
0002f7d7: call @strlcpy with return %0002bf43

0002bf43:
0002bf52: R0 := R20 + 0x4D8
0002bf5a: R0 := mem[R0 + 0x68, el]:u64
0002bf66: #16433 := R0 = 0
0002bf60: when #16433 goto %0002bf5e
0003870c: goto %0002f7a9

0002f7a9:
0002f7af: R1 := mem[R31 + 0x78, el]:u64
0002f7b6: R0 := R0 + 0x64
0002f7bc: R2 := 0x32
0002f7c1: R30 := 0x3334
0002f7c3: call @strlcpy with return %0002bf5e

0002bf5e:
0002bf6e: R0 := mem[R31 + 0x90, el]:u64
0002bf73: R30 := 0x333C
0002bf75: call @free with return %0002bf77

0002bf77:
0002bf7d: R0 := mem[R31 + 0x80, el]:u64
0002bf82: R30 := 0x3344
0002bf84: call @free with return %0002bf86

0002bf86:
0002bf8c: R0 := mem[R31 + 0x78, el]:u64
0002bf91: R30 := 0x334C
0002bf93: call @free with return %0002bf95

0002bf95:
0002bf9b: R0 := mem[R31 + 0x68, el]:u64
0002bfa0: R30 := 0x3354
0002bfa2: call @free with return %0002bfa4

0002bfa4:
0002bfaa: R0 := mem[R31 + 0xB0, el]:u64
0002bfaf: R30 := 0x335C
0002bfb1: call @free with return %0002bfb3

0002bfb3:
0002bfb9: R0 := mem[R31 + 0xB8, el]:u64
0002bfbe: R30 := 0x3364
0002bfc0: call @free with return %0002bfc2

0002bfc2:
0002bfc8: R0 := mem[R31 + 0xC0, el]:u64
0002bfcd: R30 := 0x336C
0002bfcf: call @free with return %0002bfd1

0002bfd1:
0002bfd7: R0 := mem[R31 + 0x88, el]:u64
0002bfdc: R30 := 0x3374
0002bfde: call @free with return %0002bfe0

0002bfe0:
0002bfe6: R0 := mem[R31 + 0x70, el]:u64
0002bff1: #16434 := ~R0 = 0
0002bfeb: when #16434 goto %0002b8f2
0003870b: goto %0002bff4

0002b8f2:
0002b8f7: R23 := 0
0002b8fc: R30 := 0x3A18
0002b8fe: call @magic_auth_detect with return %0002b900

0002bff4:
0002bffb: R0 := pad:64[mem[R31 + 0xC8, el]:u32]
0002c007: #16435 := ~31:0[R0] = 0
0002c001: when #16435 goto %0002bfff
0003870a: goto %0002f781

0002bfff:
0002c00e: R19 := R20 + 0x4D8
0002c015: R2 := 8
0002c01b: R1 := 0x10
0002c022: R23 := 0
0002c02a: R0 := mem[R19 + 0x68, el]:u64
0002c031: R0 := R0 + 0x96
0002c036: R30 := 0x445C
0002c038: call @printmem with return %0002c03a

0002c03a:
0002c03e: R1 := 0x13000
0002c046: R2 := R0
0002c04d: R1 := R1 + 0x2D0
0002c054: R0 := 1
0002c05c: mem := mem with [R31 + 0x100, el]:u64 <- R2
0002c061: R30 := 0x4474
0002c063: call @__printf_chk with return %0002c065

0002c065:
0002c06b: R0 := mem[R31 + 0x100, el]:u64
0002c070: R30 := 0x447C
0002c072: call @free with return %0002c074

0002c074:
0002c07a: R0 := mem[R19 + 0x68, el]:u64
0002c081: R2 := 8
0002c087: R1 := 0x10
0002c08e: R0 := R0 + 0xC8
0002c093: R30 := 0x4490
0002c095: call @printmem with return %0002c097

0002c097:
0002c09b: R1 := 0x13000
0002c0a3: R2 := R0
0002c0aa: R1 := R1 + 0x2B8
0002c0b1: R0 := 1
0002c0b9: mem := mem with [R31 + 0x100, el]:u64 <- R2
0002c0be: R30 := 0x44A8
0002c0c0: call @__printf_chk with return %0002c0c2

0002c0c2:
0002c0c8: R0 := mem[R31 + 0x100, el]:u64
0002c0cd: R30 := 0x44B0
0002c0cf: call @free with return %0002c0d1

0002c0d1:
0002c0d7: R0 := mem[R19 + 0x68, el]:u64
0002c0de: R2 := 8
0002c0e4: R1 := 0x10
0002c0eb: R0 := R0 + 0xFA
0002c0f0: R30 := 0x44C4
0002c0f2: call @printmem with return %0002c0f4

0002c0f4:
0002c0fa: R3 := mem[R19 + 0x68, el]:u64
0002c102: R2 := R0
0002c108: R1 := 0x15000
0002c10f: R0 := 1
0002c116: R1 := R1 + 0xB8
0002c11d: R4 := R3 + 0x32
0002c125: mem := mem with [R31 + 0x100, el]:u64 <- R2
0002c12a: R30 := 0x44E4
0002c12c: call @__printf_chk with return %0002c12e

0002c12e:
0002c134: R0 := mem[R31 + 0x100, el]:u64
0002c139: R30 := 0x44EC
0002c13b: call @free with return %0002c13d

0002c13d:
0002c13f: goto %0002b900

0002f781:
0002f78a: #17654 := 31:0[R19] = 0
0002f784: when #17654 goto %0002eeb4
00038709: goto %0002f78d

0002eeb4:
0002eeb9: R2 := 0x18
0002eec0: R1 := 0x23
0002eec6: R0 := 0x14000
0002eecd: R0 := R0 + 0x88
0002eed2: R30 := 0x3B70
0002eed4: call @openlog with return %0002eed6

0002eed6:
0002eedb: R1 := 1
0002eee1: R2 := 0x15000
0002eee8: R0 := 6
0002eeef: R2 := R2 + 0x328
0002eef4: R30 := 0x3B84
0002eef6: call @__syslog_chk with return %0002eef8

0002eef8:
0002eefa: goto %0002c1f0

0002f78d:
0002f792: R0 := R20 + 0x4D8
0002f79b: R0 := pad:64[mem[R0 + 4, el]:u32]
0002f7a6: #17655 := ~31:0[R0] = 0
0002f7a0: when #17655 goto %0002f240
00038708: goto %0002f25c

0002f240:
0002f244: R1 := 0x15000
0002f24b: R0 := 1
0002f252: R1 := R1 + 0xF8
0002f257: R30 := 0x4560
0002f259: call @__printf_chk with return %0002f25b

0002f25b:
0002f25e: goto %0002f25c

0002f25c:
0002f262: R30 := 0x3398
0002f265: call @fork with return %0002f267

0002f267:
0002f26d: mem := mem with [R31 + 0xF8, el]:u32 <- 31:0[R0]
0002f27b: #17560 := ZF
0002f275: when #17560 goto %0002f273
00038707: goto %0002f2fe

0002f273:
0002f281: R0 := 0x15000
0002f288: R0 := R0 + 0x120
0002f28d: R30 := 0x4648
0002f290: call @perror with return %0002f292

0002f292:
0002f297: R0 := 1
0002f29c: R30 := 0x4650
0002f29e: call @myexit with return %0002f2a0

0002f2a0:
0002f2a3: goto %0002f2a1

0002f2fe:
0002f308: #17563 := ~31:0[R0] = 0
0002f302: when #17563 goto %0002f300
00038706: goto %0002f2a1

0002f300:
0002f30f: R0 := 0
0002f314: R30 := 0x45E4
0002f316: call @myexit with return %0002f318

0002f318:
0002f31a: goto %0002f2a1

0002f2a1:
0002f2a7: R30 := 0x33AC
0002f2aa: call @setsid with return %0002f2ac

0002f2ac:
0002f2b1: R0 := 0
0002f2b6: R30 := 0x33B4
0002f2b8: call @umask with return %0002f2ba

0002f2ba:
0002f2be: R0 := 0x12000
0002f2c5: R0 := R0 + 0x508
0002f2ca: R30 := 0x33C0
0002f2cd: call @chdir with return %0002f2cf

0002f2cf:
0002f2d3: R0 := 0x15000
0002f2da: R1 := 2
0002f2e1: R0 := R0 + 0x140
0002f2e6: R30 := 0x33D0
0002f2e8: call @open with return %0002f2ea

0002f2ea:
0002f2f0: mem := mem with [R31 + 0xF8, el]:u32 <- 31:0[R0]
0002f2fb: #17562 := ~31:31[R0]
0002f2f5: when #17562 goto %0002c141
00038705: goto %0002c1a2

0002c141:
0002c146: R1 := 0
0002c14b: R30 := 0x44F8
0002c14e: call @dup2 with return %0002c150

0002c150:
0002c157: R0 := pad:64[mem[R31 + 0xF8, el]:u32]
0002c15e: R1 := 1
0002c163: R30 := 0x4504
0002c165: call @dup2 with return %0002c167

0002c167:
0002c16e: R0 := pad:64[mem[R31 + 0xF8, el]:u32]
0002c175: R1 := 2
0002c17a: R30 := 0x4510
0002c17c: call @dup2 with return %0002c17e

0002c17e:
0002c185: R0 := pad:64[mem[R31 + 0xF8, el]:u32]
0002c18c: #16448 := 0xFFFFFFFFFFFFFFFE + extend:64[31:0[R0]]
0002c190: NF := 63:63[#16448]
0002c193: VF := 31:31[R0] & ~63:63[#16448]
0002c196: ZF := #16448 = 0
0002c199: CF := 31:31[R0] | 31:31[R0] & ~63:63[#16448] | ~63:63[#16448]
0002c1aa: #16450 := (NF <> VF | ZF) <> 0
0002c1a4: when #16450 goto %0002c1a2
00038704: goto %0002f776

0002f776:
0002f779: R30 := 0x4520
0002f77b: call @close with return %0002f77d

0002f77d:
0002f77f: goto %0002c1a2

0002c1a2:
0002c1b1: R2 := 0x18
0002c1b8: R1 := 3
0002c1be: R0 := 0x14000
0002c1c5: R0 := R0 + 0x88
0002c1ca: R30 := 0x33EC
0002c1cc: call @openlog with return %0002c1ce

0002c1ce:
0002c1d2: R2 := 0x15000
0002c1d9: R1 := 1
0002c1e0: R2 := R2 + 0x350
0002c1e7: R0 := 6
0002c1ec: R30 := 0x3400
0002c1ee: call @__syslog_chk with return %0002c1f0

0002c1f0:
0002c1f6: R0 := mem[R31 + 0xA8, el]:u64
0002c1ff: R0 := pad:64[mem[R0]]
0002c20b: #16451 := ~31:0[R0] = 0
0002c205: when #16451 goto %0002c203
00038703: goto %0002c35d

0002c203:
0002c210: R30 := 0x4318
0002c213: call @getuid with return %0002c215

0002c215:
0002c21f: #16452 := ~31:0[R0] = 0
0002c219: when #16452 goto %0002c217
00038702: goto %0002c22b

0002c217:
0002c224: R30 := 0x45EC
0002c227: call @geteuid with return %0002c229

0002c229:
0002c233: #16453 := 31:0[R0] = 0
0002c22d: when #16453 goto %0002c22b
00038701: goto %0002f726

0002f726:
0002f729: R30 := 0x45F4
0002f72b: call @getuid with return %0002f72d

0002f72d:
0002f734: R19 := 31:0[R0]
0002f739: R30 := 0x45FC
0002f73c: call @getgid with return %0002f73e

0002f73e:
0002f745: R4 := 31:0[R0]
0002f74e: R3 := 31:0[R19]
0002f754: R2 := 0x15000
0002f75b: R1 := 1
0002f762: R2 := R2 + 0x150
0002f769: R0 := 4
0002f76e: R30 := 0x4618
0002f770: call @__syslog_chk with return %0002f772

0002f772:
0002f774: goto %0002c35d

0002c22b:
0002c238: R30 := 0x4320
0002c23a: call @__ctype_b_loc with return %0002c23c

0002c23c:
0002c242: R3 := mem[R31 + 0xA8, el]:u64
0002c24a: R0 := mem[R0, el]:u64
0002c253: R1 := pad:64[mem[R3]]
0002c261: #16454 := ~11:11[R0]
0002c25b: when #16454 goto %0002c259
00038700: goto %0002f6d4

0002c259:
0002c269: R0 := mem[R31 + 0xA8, el]:u64
0002c26e: R30 := 0x4588
0002c271: call @getpwnam with return %0002c273

0002c273:
0002c279: R19 := R0
0002c285: #16458 := R0 = 0
0002c27f: when #16458 goto %0002c27d
000386ff: goto %0002f6bf

0002f6bf:
0002f6c6: R21 := pad:64[mem[R0 + 0x10, el]:u32]
0002f6d1: #17632 := ~31:0[R21] = 0
0002f6cb: when #17632 goto %0002c2c8
000386fe: goto %0002c27d

0002c27d:
0002c28d: R3 := mem[R31 + 0xA8, el]:u64
0002c293: R2 := 0x15000
0002c29a: R2 := R2 + 0x1A8
0002c2a1: R1 := 1
0002c2a8: R0 := 3
0002c2ad: R30 := 0x45B0
0002c2af: call @__syslog_chk with return %0002c2b1

0002c2b1:
0002c2b6: R0 := 1
0002c2bb: R30 := 0x45B8
0002c2bd: call @myexit with return %0002c2bf

0002c2bf:
0002c2c6: R21 := pad:64[mem[R19 + 0x10, el]:u32]
000386fd: goto %0002c2c8

0002c2c8:
0002c2cf: R19 := pad:64[mem[R19 + 0x14, el]:u32]
0002c2d4: goto %0002c2d2

0002f6d4:
0002f6da: R0 := R3
0002f6e1: R2 := 0xA
0002f6e7: R1 := 0
0002f6ec: R30 := 0x4344
0002f6ee: call @strtol with return %0002f6f0

0002f6f0:
0002f6f6: R19 := R0
0002f6fd: #17639 := extend:64[31:0[R0]]
0002f701: NF := 63:63[#17639]
0002f704: VF := 31:31[R0] & ~63:63[#17639]
0002f707: ZF := #17639 = 0
0002f70a: CF := 31:31[R0] | 31:31[R0] & ~63:63[#17639] | ~63:63[#17639]
0002f716: R21 := 31:0[R0]
0002f723: #17644 := (NF <> VF | ZF) <> 0
0002f71d: when #17644 goto %0002e9d4
000386fc: goto %0002c2d2

0002e9d4:
0002e9d8: R2 := 0x15000
0002e9df: R2 := R2 + 0x180
0002e9e6: R1 := 1
0002e9ed: R0 := 3
0002e9f2: R30 := 0x46D0
0002e9f4: call @__syslog_chk with return %0002e9f6

0002e9f6:
0002e9fb: R0 := 1
0002ea00: R30 := 0x46D8
0002ea02: call @myexit with return %0002ea04

0002ea04:
0002ea06: goto %0002c2d2

0002c2d2:
0002c2dc: R0 := 31:0[R19]
0002c2e1: R30 := 0x435C
0002c2e4: call @setgid with return %0002c2e6

0002c2e6:
0002c2ed: R0 := 31:0[R21]
0002c2f2: R30 := 0x4364
0002c2f5: call @setuid with return %0002c2f7

0002c2f7:
0002c2fd: mem := mem with [R31 + 0xF8, el]:u32 <- 31:0[R0]
0002c302: R30 := 0x436C
0002c304: call @__errno_location with return %0002c306

0002c306:
0002c30d: R0 := pad:64[mem[R0, el]:u32]
0002c312: R30 := 0x4374
0002c314: call @strerror with return %0002c316

0002c316:
0002c31c: R5 := R0
0002c325: R4 := 31:0[R19]
0002c32c: R0 := 6
0002c335: R3 := 31:0[R21]
0002c33b: R2 := 0x15000
0002c342: R1 := 1
0002c349: R2 := R2 + 0x1C8
0002c34e: R30 := 0x4394
0002c350: call @__syslog_chk with return %0002c352

0002c352:
0002c359: R0 := pad:64[mem[R31 + 0xF8, el]:u32]
0002c365: #16475 := 31:0[R0] = 0
0002c35f: when #16475 goto %0002c35d
000386fb: goto %0002f68b

0002f68b:
0002f68f: R2 := 0x15000
0002f696: R2 := R2 + 0x1E8
0002f69d: R1 := 1
0002f6a4: R0 := 3
0002f6a9: R30 := 0x43B0
0002f6ab: call @__syslog_chk with return %0002f6ad

0002f6ad:
0002f6b2: R0 := 1
0002f6b7: R30 := 0x43B8
0002f6b9: call @myexit with return %0002f6bb

0002f6bb:
0002f6bd: goto %0002c35d

0002c35d:
0002c36d: R0 := mem[R31 + 0x98, el]:u64
0002c376: R0 := pad:64[mem[R0]]
0002c382: #16476 := ~31:0[R0] = 0
0002c37c: when #16476 goto %0002c37a
000386fa: goto %0002c4ae

0002c37a:
0002c389: R0 := 0
0002c38e: R30 := 0x4268
0002c391: call @umask with return %0002c393

0002c393:
0002c399: R0 := mem[R31 + 0x98, el]:u64
0002c3a0: R2 := 0x1A4
0002c3a7: R1 := 0x241
0002c3ac: R30 := 0x4278
0002c3af: call @open with return %0002c3b1

0002c3b1:
0002c3b8: R21 := 31:0[R0]
0002c3c4: #16480 := ~~31:31[R0]
0002c3be: when #16480 goto %0002c3bc
000386f9: goto %0002c3f7

0002c3bc:
0002c3ca: R2 := 0x15000
0002c3d1: R2 := R2 + 0x1F8
0002c3d8: R1 := 1
0002c3df: R0 := 3
0002c3e4: R30 := 0x4630
0002c3e6: call @__syslog_chk with return %0002c3e8

0002c3e8:
0002c3ed: R0 := 1
0002c3f2: R30 := 0x4638
0002c3f4: call @myexit with return %0002c3f6

0002c3f6:
0002c3f9: goto %0002c3f7

0002c3f7:
0002c3fe: R0 := 0x32
0002c403: R30 := 0x4288
0002c405: call @new with return %0002c407

0002c407:
0002c40d: R19 := R0
0002c415: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002c41a: R30 := 0x4294
0002c41d: call @getpid with return %0002c41f

0002c41f:
0002c426: R5 := 31:0[R0]
0002c42c: R3 := 0xFFFFFFFFFFFFFFFF
0002c433: R2 := 1
0002c439: R1 := 0x32
0002c441: R0 := R19
0002c447: R4 := 0x15000
0002c44e: R4 := R4 + 0x2D0
0002c453: R30 := 0x42B4
0002c455: call @__snprintf_chk with return %0002c457

0002c457:
0002c45d: R19 := mem[R31 + 0x100, el]:u64
0002c465: R0 := R19
0002c46a: R30 := 0x42C0
0002c46c: call @strlen with return %0002c46e

0002c46e:
0002c474: R1 := R19
0002c47c: R2 := R0
0002c485: R0 := 31:0[R21]
0002c48a: R30 := 0x42D0
0002c48c: call @write with return %0002c48e

0002c48e:
0002c494: R0 := mem[R31 + 0x100, el]:u64
0002c499: R30 := 0x42D8
0002c49b: call @free with return %0002c49d

0002c49d:
0002c4a4: R0 := 31:0[R21]
0002c4a9: R30 := 0x42E0
0002c4ab: call @close with return %0002c4ad

0002c4ad:
0002c4b0: goto %0002c4ae

0002c4ae:
0002c4b5: R1 := 1
0002c4bc: R0 := 0xD
0002c4c2: R19 := 0x10000
0002c4c7: R30 := 0x3428
0002c4ca: call @signal with return %0002c4cc

0002c4cc:
0002c4d1: R19 := R19 + 0x498
0002c4d8: R0 := 2
0002c4e0: R1 := R19
0002c4e5: R30 := 0x3438
0002c4e7: call @signal with return %0002c4e9

0002c4e9:
0002c4ef: R1 := R19
0002c4f6: R0 := 0xF
0002c4fb: R30 := 0x3444
0002c4fd: call @signal with return %0002c4ff

0002c4ff:
0002c504: R27 := R31 + 0xFC
0002c50c: R1 := R19
0002c513: R26 := R31 + 0x140
0002c51a: R19 := R31 + 0x210
0002c521: R23 := 0
0002c528: R22 := 0
0002c52f: R0 := 1
0002c534: R30 := 0x3464
0002c536: call @signal with return %0002c538

0002c538:
0002c53c: R0 := 0
0002c541: R30 := 0x346C
0002c543: call @time with return %0002c545

0002c545:
0002c548: R30 := 0x3470
0002c54b: call @srandom with return %0002c54d

0002c54d:
0002c554: R0 := pad:64[mem[R20 + 0x4D8, el]:u32]
0002c560: #16515 := 31:0[R0] = 0
0002c55a: when #16515 goto %0002c558
000386f8: goto %0002f638

0002f638:
0002f63d: #17626 := 0xFFFFFFFFFFFFFFFF + extend:64[31:0[R0]]
0002f641: NF := 63:63[#17626]
0002f644: VF := 31:31[R0] & ~63:63[#17626]
0002f647: ZF := #17626 = 0
0002f64a: CF := 31:31[R0] | 31:31[R0] & ~63:63[#17626] | ~63:63[#17626]
0002f67b: #17628 := (NF <> VF | ZF) <> 0
0002f67c: goto %0002f673

0002f673:
0002f675: when #17628 goto %0002f656
0002f676: goto %0002f667

0002f667:
0002f668: NF := 0
0002f66b: ZF := 1
0002f66e: CF := 0
0002f671: VF := 0
0002f678: goto %0002f674

0002f656:
0002f657: #17629 := ~31:0[R23]
0002f65c: NF := 63:63[extend:64[31:0[R22]] + extend:64[#17629] + 1]
0002f65f: VF := 31:31[R22] & 31:31[#17629] & ~63:63[extend:64[31:0[R22]] +
          extend:64[#17629] + 1] | ~31:31[R22] & ~31:31[#17629] &
          63:63[extend:64[31:0[R22]] + extend:64[#17629] + 1]
0002f662: ZF := extend:64[31:0[R22]] + extend:64[#17629] + 1 = 0
0002f665: CF := 31:31[R22] & 31:31[#17629] | 31:31[#17629] &
          ~63:63[extend:64[31:0[R22]] + extend:64[#17629] + 1] | 31:31[R22] &
          ~63:63[extend:64[31:0[R22]] + extend:64[#17629] + 1]
0002f677: goto %0002f674

0002f674:
0002f688: #17631 := ZF
0002f682: when #17631 goto %0002b900
000386f7: goto %0002c558

0002b900:
0002b906: R0 := mem[R31 + 0x98, el]:u64
0002b90f: R0 := pad:64[mem[R0]]
0002b91b: #16335 := ~31:0[R0] = 0
0002b915: when #16335 goto %0002b913
000386f6: goto %0002b92e

0002b913:
0002b923: R0 := mem[R31 + 0x98, el]:u64
0002b928: R30 := 0x3AF8
0002b92b: call @unlink with return %0002b92d

0002b92d:
0002b930: goto %0002b92e

0002b92e:
0002b938: R3 := 31:0[R22] - 31:0[R23]
0002b93e: R2 := 0x15000
0002b945: R2 := R2 + 0x300
0002b94c: R1 := 1
0002b953: R20 := R20 + 0x4D8
0002b95a: R0 := 6
0002b961: R19 := R20 + 0x90
0002b966: R30 := 0x3A44
0002b968: call @__syslog_chk with return %0002b96a

0002b96a:
0002b970: R0 := R19
0002b975: R30 := 0x3A4C
0002b977: call @pthread_mutex_lock with return %0002b979

0002b979:
0002b97f: R0 := mem[R20 + 0xC0, el]:u64
0002b984: R30 := 0x3A54
0002b986: call @plist_free with return %0002b988

0002b988:
0002b98e: R0 := R19
0002b993: R30 := 0x3A5C
0002b995: call @pthread_mutex_unlock with return %0002b997

0002b997:
0002b99d: R0 := mem[R20 + 0x88, el]:u64
0002b9a2: R30 := 0x3A64
0002b9a4: call @hlist_free with return %0002b9a6

0002b9a6:
0002b9ac: R0 := mem[R20 + 0x80, el]:u64
0002b9b1: R30 := 0x3A6C
0002b9b3: call @plist_free with return %0002b9b5

0002b9b5:
0002b9bb: R0 := mem[R20 + 0x18, el]:u64
0002b9c0: R30 := 0x3A74
0002b9c2: call @plist_free with return %0002b9c4

0002b9c4:
0002b9ca: R0 := mem[R31 + 0x110, el]:u64
0002b9cf: R30 := 0x3A7C
0002b9d1: call @plist_free with return %0002b9d3

0002b9d3:
0002b9d9: R0 := mem[R31 + 0x118, el]:u64
0002b9de: R30 := 0x3A84
0002b9e0: call @plist_free with return %0002b9e2

0002b9e2:
0002b9e8: R0 := mem[R31 + 0x120, el]:u64
0002b9ed: R30 := 0x3A8C
0002b9ef: call @plist_free with return %0002b9f1

0002b9f1:
0002b9f7: R0 := mem[R31 + 0x128, el]:u64
0002b9fc: R30 := 0x3A94
0002b9fe: call @plist_free with return %0002ba00

0002ba00:
0002ba06: R0 := mem[R31 + 0xA8, el]:u64
0002ba0b: R30 := 0x3A9C
0002ba0d: call @free with return %0002ba0f

0002ba0f:
0002ba15: R0 := mem[R31 + 0x98, el]:u64
0002ba1a: R30 := 0x3AA4
0002ba1c: call @free with return %0002ba1e

0002ba1e:
0002ba24: R0 := mem[R31 + 0x70, el]:u64
0002ba29: R30 := 0x3AAC
0002ba2b: call @free with return %0002ba2d

0002ba2d:
0002ba33: R0 := mem[R20 + 0x68, el]:u64
0002ba38: R30 := 0x3AB4
0002ba3a: call @free with return %0002ba3c

0002ba3c:
0002ba42: R0 := mem[R20 + 8, el]:u64
0002ba47: R30 := 0x3ABC
0002ba49: call @plist_free with return %0002ba4b

0002ba4b:
0002ba50: R0 := 0
0002ba55: R30 := 0x3AC4
0002ba57: call @exit with return %0002ba59

0002ba59:
0002ba5f: R23 := R0
0002ba67: R2 := 0x15000
0002ba6e: R0 := 6
0002ba75: R2 := R2 + 0x10
0002ba7c: R1 := 1
0002ba81: R30 := 0x3AE0
0002ba83: call @__syslog_chk with return %0002ba85

0002ba85:
0002ba8a: R0 := R20 + 0x4D8
0002ba92: R0 := mem[R0 + 0x68, el]:u64
0002ba9a: mem := mem with [R0 + 0x138, el]:u32 <- 31:0[R23]
0002ba9f: goto %0002ba9d

0002c558:
0002c568: R21 := 1
0002c570: R24 := mem[R31 + 0x118, el]:u64
0002c584: #16516 := R24 = 0
0002c57e: when #16516 goto %0002c57c
000386f5: goto %0002f5ef

0002f5ef:
000386f4: goto %0002f5f1

0002f5f1:
0002f5f7: R0 := mem[R24, el]:u64
0002f5fc: R30 := 0x34B0
0002f5fe: call @__fdelt_chk with return %0002f600

0002f600:
0002f606: R1 := mem[R24, el]:u64
0002f60f: R2 := mem[R19 + (R0 << 3), el]:u64
0002f617: R24 := mem[R24 + 0x10, el]:u64
0002f621: R1 := R1 | R2
0002f62a: mem := mem with [R19 + (R0 << 3), el]:u64 <- R1
0002f635: #17625 := ~R24 = 0
0002f62f: when #17625 goto %0002f5f1
000386f3: goto %0002c57c

0002c57c:
0002c58c: R24 := mem[R31 + 0x120, el]:u64
0002c592: R21 := 1
0002c59e: #16517 := R24 = 0
0002c598: when #16517 goto %0002c596
000386f2: goto %0002f5a8

0002f5a8:
0002f5ae: R0 := mem[R24, el]:u64
0002f5b3: R30 := 0x34E0
0002f5b5: call @__fdelt_chk with return %0002f5b7

0002f5b7:
0002f5bd: R1 := mem[R24, el]:u64
0002f5c6: R2 := mem[R19 + (R0 << 3), el]:u64
0002f5ce: R24 := mem[R24 + 0x10, el]:u64
0002f5d8: R1 := R1 | R2
0002f5e1: mem := mem with [R19 + (R0 << 3), el]:u64 <- R1
0002f5ec: #17621 := ~R24 = 0
0002f5e6: when #17621 goto %0002f5a8
000386f1: goto %0002c596

0002c596:
0002c5a6: R24 := mem[R31 + 0x110, el]:u64
0002c5ac: R21 := 1
0002c5b8: #16518 := R24 = 0
0002c5b2: when #16518 goto %0002c5b0
000386f0: goto %0002f561

0002f561:
0002f567: R0 := mem[R24, el]:u64
0002f56c: R30 := 0x3510
0002f56e: call @__fdelt_chk with return %0002f570

0002f570:
0002f576: R1 := mem[R24, el]:u64
0002f57f: R2 := mem[R19 + (R0 << 3), el]:u64
0002f587: R24 := mem[R24 + 0x10, el]:u64
0002f591: R1 := R1 | R2
0002f59a: mem := mem with [R19 + (R0 << 3), el]:u64 <- R1
0002f5a5: #17617 := ~R24 = 0
0002f59f: when #17617 goto %0002f561
000386ef: goto %0002c5b0

0002c5b0:
0002c5be: R0 := 0x15000
0002c5c5: R4 := R31 + 0x130
0002c5cd: R1 := R19
0002c5d3: R3 := 0
0002c5db: R2 := 0
0002c5e2: R0 := 0x400
0002c5e9: R30 := 0x3550
0002c5eb: call @select with return %0002c5ed

0002c5ed:
0002c5f2: #16522 := extend:64[31:0[R0]]
0002c5f6: NF := 63:63[#16522]
0002c5f9: VF := 31:31[R0] & ~63:63[#16522]
0002c5fc: ZF := #16522 = 0
0002c5ff: CF := 31:31[R0] | 31:31[R0] & ~63:63[#16522] | ~63:63[#16522]
0002c610: #16524 := (NF = VF & ~ZF) <> 0
0002c60a: when #16524 goto %0002c608
000386ee: goto %0002f540

0002c608:
0002c616: R25 := 0x15000
0002c61d: R0 := R25 + 0x260
0002c624: R21 := R31 + 0x1D0
0002c62b: R24 := 0
0002c633: mem := mem with [R31 + 0x78, el]:u64 <- R0
0002c63a: R0 := 0
0002c642: mem := mem with [R31 + 0xF8, el]:u32 <- 0
0002c647: goto %0002c645

0002c645:
0002c64d: R0 := extend:64[31:0[R0]]
0002c652: R30 := 0x3E88
0002c654: call @__fdelt_chk with return %0002c656

0002c656:
0002c65d: R1 := pad:64[mem[R31 + 0xF8, el]:u32]
0002c663: R25 := 1
0002c66c: R0 := mem[R19 + (R0 << 3), el]:u64
0002c674: #16531 := extend:64[~31:0[R1]] + 1
0002c678: NF := 63:63[#16531]
0002c67b: VF := ~31:31[~31:0[R1]] & 63:63[#16531]
0002c67e: ZF := #16531 = 0
0002c681: CF := 31:31[~31:0[R1]] & ~63:63[#16531]
0002c686: R2 := #16531
0002c68e: R3 := 31:0[R1] & 0x3F
0002c696: R2 := 31:0[R2] & 0x3F
0002c6ae: #16577 := NF
0002c6af: goto %0002c6a6

0002c6a6:
0002c6a8: when #16577 goto %0002c69f
0002c6a9: goto %0002c6a3

0002c6a3:
0002c6a4: R2 := -31:0[R2]
0002c6ab: goto %0002c6a7

0002c69f:
0002c6a0: R2 := 31:0[R3]
0002c6aa: goto %0002c6a7

0002c6a7:
0002c6c0: #16579 := ZF
0002c6ba: when #16579 goto %0002c6b8
000386ed: goto %0002c861

0002c861:
0002c866: R3 := 0x10
0002c86f: R0 := 31:0[R1]
0002c877: R2 := R27
0002c87f: R1 := R26
0002c887: mem := mem with [R31 + 0xFC, el]:u32 <- 31:0[R3]
0002c88c: R30 := 0x3EC8
0002c88f: call @accept with return %0002c891

0002c891:
0002c898: R28 := 31:0[R0]
0002c8a4: #16623 := ~31:31[R0]
0002c89e: when #16623 goto %0002c89c
000386ec: goto %0002f4f0

0002f4f0:
0002f4f3: R30 := 0x3ED4
0002f4f5: call @__errno_location with return %0002f4f7

0002f4f7:
0002f4fe: R0 := pad:64[mem[R0, el]:u32]
0002f503: R30 := 0x3EDC
0002f505: call @strerror with return %0002f507

0002f507:
0002f50d: R3 := R0
0002f516: R1 := 31:0[R25]
0002f51c: R2 := 0x15000
0002f523: R0 := 3
0002f52a: R2 := R2 + 0x218
0002f52f: R30 := 0x3EF4
0002f531: call @__syslog_chk with return %0002f533

0002f533:
0002f53a: R1 := pad:64[mem[R31 + 0xF8, el]:u32]
0002f53e: goto %0002c6b8

0002c89c:
0002c8ad: R1 := pad:64[mem[R31 + 0x144, el]:u32]
0002c8b5: R0 := mem[R31 + 0x128, el]:u64
0002c8ba: R30 := 0x3DE8
0002c8bc: call @acl_check with return %0002c8be

0002c8be:
0002c8c8: #16624 := ~31:0[R0] = 0
0002c8c2: when #16624 goto %0002c8c0
000386eb: goto %0002f371

0002c8c0:
0002c8d1: R0 := pad:64[mem[R31 + 0x144, el]:u32]
0002c8d6: R30 := 0x3F6C
0002c8d8: call @inet_ntoa with return %0002c8da

0002c8da:
0002c8e0: R3 := R0
0002c8eb: R1 := 31:0[R25]
0002c8f2: R0 := 4
0002c8f8: R2 := 0x15000
0002c901: R2 := R2 + 0x240
0002c909: R4 := 31:0[R4] & 0xFFFF
0002c90e: R30 := 0x3F90
0002c910: call @__syslog_chk with return %0002c912

0002c912:
0002c919: R0 := pad:64[mem[R31 + 0x144, el]:u32]
0002c91e: R30 := 0x3F98
0002c920: call @inet_ntoa with return %0002c922

0002c922:
0002c925: R30 := 0x3F9C
0002c927: call @gen_denied_page with return %0002c929

0002c929:
0002c92f: mem := mem with [R31 + 0x68, el]:u64 <- R0
0002c937: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002c93c: R30 := 0x3FA8
0002c93e: call @strlen with return %0002c940

0002c940:
0002c946: R1 := mem[R31 + 0x68, el]:u64
0002c94e: R2 := R0
0002c957: R0 := 31:0[R28]
0002c95c: R30 := 0x3FB8
0002c95e: call @write with return %0002c960

0002c960:
0002c966: R0 := mem[R31 + 0x100, el]:u64
0002c96b: R30 := 0x3FC0
0002c96d: call @free with return %0002c96f

0002c96f:
0002c976: R0 := 31:0[R28]
0002c97b: R30 := 0x3FC8
0002c97d: call @close with return %0002c97f

0002c97f:
0002c986: R1 := pad:64[mem[R31 + 0xF8, el]:u32]
0002c98a: goto %0002c6b8

0002f371:
0002f377: R0 := R21
0002f37c: R30 := 0x3DF4
0002f37f: call @pthread_attr_init with return %0002f381

0002f381:
0002f385: R1 := 0x10000
0002f38d: R0 := R21
0002f392: R30 := 0x3E00
0002f395: call @pthread_attr_setstacksize with return %0002f397

0002f397:
0002f39b: R1 := 0x100
0002f3a3: R0 := R21
0002f3a8: R30 := 0x3E0C
0002f3ab: call @pthread_attr_setguardsize with return %0002f3ad

0002f3ad:
0002f3b3: R1 := extend:64[mem[R31 + 0xF8, el]:u32]
0002f3bb: R0 := mem[R31 + 0x118, el]:u64
0002f3c0: R30 := 0x3E18
0002f3c2: call @plist_in with return %0002f3c4

0002f3c4:
0002f3ce: #17574 := 31:0[R0] = 0
0002f3c8: when #17574 goto %0002f3c6
000386ea: goto %0002f471

0002f3c6:
0002f3d6: R1 := extend:64[mem[R31 + 0xF8, el]:u32]
0002f3de: R0 := mem[R31 + 0x120, el]:u64
0002f3e3: R30 := 0x3F08
0002f3e5: call @plist_in with return %0002f3e7

0002f3e7:
0002f3f0: #17575 := 31:0[R0] = 0
0002f3ea: when #17575 goto %0002c9f9
000386e9: goto %0002f3f3

0002c9f9:
0002c9fd: R0 := 0x20
0002ca02: R30 := 0x3FE0
0002ca04: call @new with return %0002ca06

0002ca06:
0002ca0d: R2 := mem[R31 + 0x140, el]:u64
0002ca11: R3 := mem[R31 + 0x148, el]:u64
0002ca19: R24 := R0
0002ca22: R1 := pad:64[mem[R31 + 0xF8, el]:u32]
0002ca2b: mem := mem with [R0, el]:u64 <- R0 + 0x20
0002ca2f: mem := mem with [R0, el]:u64 <- R0 + 0x28
0002ca37: R0 := mem[R31 + 0x110, el]:u64
0002ca3f: mem := mem with [R24, el]:u32 <- 31:0[R28]
0002ca44: R30 := 0x3FFC
0002ca46: call @plist_get with return %0002ca48

0002ca48:
0002ca4e: mem := mem with [R24 + 8, el]:u64 <- R0
0002ca56: R3 := R24
0002ca5e: R1 := R21
0002ca65: R0 := R31 + 0x108
0002ca6b: R2 := 0x10000
0002ca72: R2 := R2 + 0xF00
0002ca77: R30 := 0x4018
0002ca7a: call @pthread_create with return %0002ca7c

0002ca7c:
0002ca83: R24 := 31:0[R0]
0002ca87: goto %0002c994

0002f3f3:
0002f3f7: R0 := 0x20
0002f3fc: R30 := 0x3F14
0002f3fe: call @new with return %0002f400

0002f400:
0002f407: R4 := mem[R31 + 0x140, el]:u64
0002f40b: R5 := mem[R31 + 0x148, el]:u64
0002f413: R3 := R0
0002f41c: mem := mem with [R0, el]:u64 <- R0 + 0x20
0002f420: mem := mem with [R0, el]:u64 <- R0 + 0x28
0002f428: R1 := R21
0002f42e: R2 := 0x10000
0002f435: R2 := R2 + 0xFA8
0002f43d: mem := mem with [R3, el]:u32 <- 31:0[R28]
0002f444: R0 := R31 + 0x108
0002f449: R30 := 0x3F38
0002f44b: call @pthread_create with return %0002f44d

0002f44d:
0002f454: R24 := 31:0[R0]
0002f45c: R0 := R21
0002f461: R30 := 0x3F44
0002f463: call @pthread_attr_destroy with return %0002f465

0002f465:
0002f46e: #17591 := 31:0[R24] = 0
0002f468: when #17591 goto %0002c9e6
000386e8: goto %0002c9a9

0002f471:
0002f475: R0 := 0x20
0002f47a: R30 := 0x3E24
0002f47c: call @new with return %0002f47e

0002f47e:
0002f483: R1 := R20 + 0x4D8
0002f48b: R3 := R0
0002f494: R4 := mem[R31 + 0x140, el]:u64
0002f498: R5 := mem[R31 + 0x148, el]:u64
0002f4a1: mem := mem with [R0, el]:u64 <- R0 + 0x20
0002f4a5: mem := mem with [R0, el]:u64 <- R0 + 0x28
0002f4ae: R1 := pad:64[mem[R1 + 0x20, el]:u32]
0002f4b6: mem := mem with [R0, el]:u32 <- 31:0[R28]
0002f4c1: #17598 := ~31:0[R1] = 0
0002f4bb: when #17598 goto %0002c98c
000386e7: goto %0002f4c4

0002c98c:
0002c98f: R30 := 0x3FD4
0002c991: call @proxy_thread with return %0002c993

0002c993:
0002c996: goto %0002c994

0002f4c4:
0002f4ca: R1 := R21
0002f4d1: R0 := R31 + 0x108
0002f4d7: R2 := 0x10000
0002f4de: R2 := R2 + 0xD28
0002f4e3: R30 := 0x3E54
0002f4e5: call @pthread_create with return %0002f4e7

0002f4e7:
0002f4ee: R24 := 31:0[R0]
000386e6: goto %0002c994

0002c994:
0002c99d: R0 := R21
0002c9a2: R30 := 0x3E60
0002c9a5: call @pthread_attr_destroy with return %0002c9a7

0002c9a7:
0002c9b1: #16667 := ~31:0[R24] = 0
0002c9ab: when #16667 goto %0002c9a9
000386e5: goto %0002c9e6

0002c9a9:
0002c9b9: R2 := mem[R31 + 0x78, el]:u64
0002c9c0: R1 := 1
0002c9c9: R3 := 31:0[R24]
0002c9d0: R0 := 3
0002c9d5: R30 := 0x3F5C
0002c9d7: call @__syslog_chk with return %0002c9d9

0002c9d9:
0002c9e0: R1 := pad:64[mem[R31 + 0xF8, el]:u32]
0002c9e4: goto %0002c6b8

0002c9e6:
0002c9ed: R1 := pad:64[mem[R31 + 0xF8, el]:u32]
0002c9f5: R22 := extend:64[31:0[R22]] + 1
000386e4: goto %0002c6b8

0002c6b8:
0002c6c8: R0 := extend:64[31:0[R1]] + 1
0002c6d0: mem := mem with [R31 + 0xF8, el]:u32 <- 31:0[R0]
0002c6d7: #16581 := 0xFFFFFFFFFFFFFC01 + extend:64[31:0[R0]]
0002c6db: NF := 63:63[#16581]
0002c6de: VF := 31:31[R0] & ~63:63[#16581]
0002c6e1: ZF := #16581 = 0
0002c6e4: CF := 31:31[R0] | 31:31[R0] & ~63:63[#16581] | ~63:63[#16581]
0002c6f5: #16583 := (NF = VF & ~ZF) <> 0
0002c6ef: when #16583 goto %0002c6ed
000386e3: goto %0002c645

0002f540:
0002f549: #17612 := ZF
0002f543: when #17612 goto %0002c6ed
000386e2: goto %0002f54c

0002f54c:
0002f553: R0 := pad:64[mem[R20 + 0x4D8, el]:u32]
0002f55e: #17613 := 31:0[R0] = 0
0002f558: when #17613 goto %0002ca89
000386e1: goto %0002c6ed

0002ca89:
0002ca8c: R30 := 0x4024
0002ca8e: call @__errno_location with return %0002ca90

0002ca90:
0002ca97: R0 := pad:64[mem[R0, el]:u32]
0002ca9c: R30 := 0x402C
0002ca9e: call @strerror with return %0002caa0

0002caa0:
0002caa6: R3 := R0
0002caac: R2 := 0x15000
0002cab3: R1 := 1
0002caba: R2 := R2 + 0x290
0002cac1: R0 := 3
0002cac6: R30 := 0x4044
0002cac8: call @__syslog_chk with return %0002caca

0002caca:
0002cacc: goto %0002c6ed

0002c6ed:
0002c6fc: R21 := R20 + 0x4D8
0002c704: R0 := mem[R21 + 0x58, el]:u64
0002c70f: #16584 := R0 = 0
0002c709: when #16584 goto %0002c54d
000386e0: goto %0002c712

0002c712:
0002c717: R0 := R21 + 0x28
0002c71c: R30 := 0x3578
0002c71e: call @pthread_mutex_lock with return %0002c720

0002c720:
0002c726: R21 := mem[R21 + 0x58, el]:u64
0002c732: #16585 := R21 = 0
0002c72c: when #16585 goto %0002c72a
000386df: goto %0002c755

0002c755:
0002c759: R25 := 0x15000
0002c75f: R28 := 0x15000
0002c766: R25 := R25 + 0x2D8
0002c76d: R0 := R28 + 0x2B8
0002c774: R24 := R31 + 0xF8
0002c77c: mem := mem with [R31 + 0x68, el]:u64 <- R0
0002c781: goto %0002c77f

0002c77f:
0002c788: R28 := R21
0002c790: R1 := R24
0002c798: R21 := mem[R21 + 0x10, el]:u64
0002c7a0: R0 := mem[R28, el]:u64
0002c7a5: R30 := 0x35CC
0002c7a8: call @pthread_join with return %0002c7aa

0002c7aa:
0002c7b4: #16594 := 31:0[R0] = 0
0002c7ae: when #16594 goto %0002c7ac
000386de: goto %0002c820

0002c820:
0002c827: R3 := 31:0[R0]
0002c82f: R2 := R25
0002c836: R1 := 1
0002c83d: R0 := 3
0002c842: R30 := 0x35E4
0002c844: call @__syslog_chk with return %0002c846

0002c846:
0002c84c: R0 := R28
0002c851: R30 := 0x35EC
0002c853: call @free with return %0002c855

0002c855:
0002c85e: #16609 := ~R21 = 0
0002c858: when #16609 goto %0002c77f
000386dd: goto %0002c72a

0002c7ac:
0002c7bb: R0 := R20 + 0x4D8
0002c7c3: R23 := extend:64[31:0[R23]] + 1
0002c7cc: R0 := pad:64[mem[R0 + 4, el]:u32]
0002c7d8: #16595 := ~31:0[R0] = 0
0002c7d2: when #16595 goto %0002c7d0
000386dc: goto %0002c802

0002c7d0:
0002c7e1: R3 := pad:64[mem[R31 + 0xF8, el]:u32]
0002c7e8: R0 := 1
0002c7f0: R2 := mem[R28, el]:u64
0002c7f8: R1 := mem[R31 + 0x68, el]:u64
0002c7fd: R30 := 0x3DB8
0002c7ff: call @__printf_chk with return %0002c801

0002c801:
0002c804: goto %0002c802

0002c802:
0002c80b: R0 := R28
0002c810: R30 := 0x35B4
0002c812: call @free with return %0002c814

0002c814:
0002c81d: #16599 := R21 = 0
0002c817: when #16599 goto %0002c72a
000386db: goto %0002c77f

0002c72a:
0002c739: R1 := R20 + 0x4D8
0002c740: R0 := R1 + 0x28
0002c748: mem := mem with [R1 + 0x58, el]:u64 <- 0
0002c74d: R30 := 0x3600
0002c74f: call @pthread_mutex_unlock with return %0002c751

0002c751:
0002c753: goto %0002c54d

0002cef2:
0002cef8: R0 := mem[R23 + 0x78, el]:u64
0002cf00: mem := mem with [R23 + 0x74, el]:u32 <- 31:0[R25]
0002cf0c: #16821 := ~R0 = 0
0002cf06: when #16821 goto %0002cf04
000386da: goto %0002cff4

0002cff4:
0002cff8: R0 := 1
0002d000: mem := mem with [R23 + 0x78, el]:u64 <- R0
000386d9: goto %0002cf04

0002cf04:
0002cf14: R0 := R27
0002cf19: R30 := 0x3108
0002cf1b: call @strlen with return %0002cf1d

0002cf1d:
0002cf23: mem := mem with [R31 + 0xF8, el]:u32 <- 31:0[R0]
0002cf2f: #16826 := 31:0[R0] = 0
0002cf29: when #16826 goto %0002cf27
000386d8: goto %0002cf40

0002cf40:
0002cf46: R0 := extend:64[31:0[R0]] + 3
0002cf4d: R0 := extend:64[31:0[R0]]
0002cf52: R30 := 0x311C
0002cf54: call @new with return %0002cf56

0002cf56:
0002cf5d: R1 := pad:64[mem[R31 + 0xF8, el]:u32]
0002cf65: R27 := R0
0002cf6d: R5 := mem[R31 + 0x100, el]:u64
0002cf75: R1 := extend:64[31:0[R1]] + 3
0002cf7d: R4 := R26
0002cf83: R3 := 0xFFFFFFFFFFFFFFFF
0002cf8a: R1 := extend:64[31:0[R1]]
0002cf91: R2 := 1
0002cf96: R30 := 0x3140
0002cf98: call @__snprintf_chk with return %0002cf9a

0002cf9a:
0002cfa0: R0 := mem[R23 + 0x80, el]:u64
0002cfa8: R2 := R27
0002cfae: R1 := 0
0002cfb3: R30 := 0x3150
0002cfb5: call @plist_add with return %0002cfb7

0002cfb7:
0002cfbd: mem := mem with [R23 + 0x80, el]:u64 <- R0
0002cfc5: R27 := mem[R31 + 0x100, el]:u64
0002cfc9: goto %0002cf27

0002cf27:
0002cf37: R0 := R27
0002cf3c: R30 := 0x30D4
0002cf3e: call @free with return %0002ce60

0002d088:
0002d08f: R0 := pad:64[mem[R1]]
0002d09b: #16868 := 31:0[R0] = 0
0002d095: when #16868 goto %0002d093
000386d7: goto %0002d0ac

0002d0ac:
0002d0b2: R0 := mem[R24 + 0x18, el]:u64
0002d0b7: R30 := 0x3034
0002d0b9: call @noproxy_add with return %0002d0bb

0002d0bb:
0002d0c1: mem := mem with [R24 + 0x18, el]:u64 <- R0
0002d0c9: R1 := mem[R31 + 0x100, el]:u64
0002d0cd: goto %0002d093

0002d093:
0002d0a3: R0 := R1
0002d0a8: R30 := 0x300C
0002d0aa: call @free with return %0002cdad

0002d323:
0002d332: R1 := 0
0002d337: R30 := 0x2DDC
0002d339: call @parent_add with return %0002d33b

0002d33b:
0002d341: R0 := mem[R31 + 0x100, el]:u64
0002d346: R30 := 0x2DE4
0002d348: call @free with return %0002d2ff

0002dc82:
0002dc85: R30 := 0x27F8
0002dc87: call @is_http_header with return %0002dc89

0002dc89:
0002dc93: #17192 := ~31:0[R0] = 0
0002dc8d: when #17192 goto %0002dc8b
000386d6: goto %0002dd44

0002dd44:
0002dd4a: R3 := mem[R31 + 0x100, el]:u64
0002dd52: R2 := R26
0002dd59: R1 := 1
0002dd60: R0 := 3
0002dd65: R30 := 0x2810
0002dd67: call @__syslog_chk with return %0002dd69

0002dd69:
0002dd6b: goto %0002dd35

0002dc8b:
0002dc9b: R0 := mem[R31 + 0x100, el]:u64
0002dca2: R27 := R20 + 0x4D8
0002dca7: R30 := 0x27BC
0002dca9: call @get_http_header_name with return %0002dcab

0002dcab:
0002dcb1: R25 := R0
0002dcb9: R1 := R0
0002dcc1: R0 := mem[R27 + 0x88, el]:u64
0002dcc6: R30 := 0x27CC
0002dcc8: call @hlist_in with return %0002dcca

0002dcca:
0002dcd4: #17199 := 31:0[R0] = 0
0002dcce: when #17199 goto %0002dccc
000386d5: goto %0002dd23

0002dccc:
0002dcdc: R0 := mem[R31 + 0x100, el]:u64
0002dce4: R28 := mem[R27 + 0x88, el]:u64
0002dce9: R30 := 0x2DAC
0002dceb: call @get_http_header_value with return %0002dced

0002dced:
0002dcf3: R2 := R0
0002dcfb: R1 := R25
0002dd03: R0 := R28
0002dd0a: R4 := 0
0002dd11: R3 := 1
0002dd16: R30 := 0x2DC4
0002dd18: call @hlist_add with return %0002dd1a

0002dd1a:
0002dd20: mem := mem with [R27 + 0x88, el]:u64 <- R0
0002dd25: goto %0002dd23

0002dd23:
0002dd2c: R0 := R25
0002dd31: R30 := 0x27D8
0002dd33: call @free with return %0002dd35

0002dd35:
0002dd3b: R0 := mem[R31 + 0x100, el]:u64
0002dd40: R30 := 0x27E0
0002dd42: call @free with return %0002d2c9

0002d275:
0002d285: R0 := R25
0002d28e: R3 := 31:0[R28]
0002d296: R1 := R26
0002d29b: R30 := 0x277C
0002d29d: call @listen_add with return %0002d29f

0002d29f:
0002d2a5: R0 := mem[R31 + 0x100, el]:u64
0002d2aa: R30 := 0x2784
0002d2ac: call @free with return %0002d249

0002d1ee:
0002d1fe: R0 := R26
0002d207: R3 := 31:0[R28]
0002d20f: R1 := R25
0002d214: R30 := 0x2734
0002d216: call @listen_add with return %0002d218

0002d218:
0002d21e: R0 := mem[R31 + 0x100, el]:u64
0002d223: R30 := 0x273C
0002d225: call @free with return %0002d1c2

0002d16f:
0002d17f: R0 := R24
0002d188: R2 := 31:0[R28]
0002d18d: R30 := 0x26EC
0002d18f: call @tunnel_add with return %0002d191

0002d191:
0002d197: R0 := mem[R31 + 0x100, el]:u64
0002d19c: R30 := 0x26F4
0002d19e: call @free with return %0002d143

0002f8e9:
0002f8ef: R1 := extend:64[31:0[R0]] - 0x41
0002f8f6: #17673 := 0xFFFFFFFFFFFFFFCA + extend:64[31:0[R1]]
0002f8fa: NF := 63:63[#17673]
0002f8fd: VF := 31:31[R1] & ~63:63[#17673]
0002f900: ZF := #17673 = 0
0002f903: CF := 31:31[R1] | 31:31[R1] & ~63:63[#17673] | ~63:63[#17673]
0002f912: #17675 := (CF & ~ZF) <> 0
0002f90c: when #17675 goto %0002ee68
000386d4: goto %0002f915

0002ee68:
0002ee6d: R22 := 1
0002ee71: goto %0002b482

0002f915:
0002f91e: call R1 with noreturn

0003877d: sub malloc(malloc_size, malloc_result)
00038b12: malloc_size :: in u64 = R0
00038b13: malloc_result :: out u64 = R0

0000f39b:
0003024a: R16 := 0x27000
00030252: R17 := mem[R16 + 0xD18, el]:u64
00030259: R16 := R16 + 0xD18
0003025e: call R17 with noreturn

0003877e: sub md4_buffer(md4_buffer_result)
00038b14: md4_buffer_result :: out u32 = low:32[R0]

00011d6b:
00011d73: mem := mem with [R31 - 0xF0, el]:u64 <- R29
00011d77: mem := mem with [R31 - 0xE8, el]:u64 <- R30
00011d7a: R31 := R31 - 0xF0
00011d80: R3 := 0x11000
00011d87: R29 := R31
00011d90: mem := mem with [R31, el]:u64 <- R31 + 0x40
00011d94: mem := mem with [R31, el]:u64 <- R31 + 0x48
00011d9a: R21 := 0x27000
00011da2: R22 := R2
00011dad: mem := mem with [R31, el]:u64 <- R31 + 0x60
00011db1: mem := mem with [R31, el]:u64 <- R31 + 0x68
00011db8: R23 := R31 + 0x40
00011dc0: R3 := mem[R21 + 0xFB8, el]:u64
00011dc8: R2 := R23
00011dd1: mem := mem with [R31, el]:u64 <- R31 + 0x20
00011dd5: mem := mem with [R31, el]:u64 <- R31 + 0x28
00011ddd: R4 := mem[R3, el]:u64
00011de5: mem := mem with [R31 + 0xE8, el]:u64 <- R4
00011deb: R4 := 0
00011df5: mem := mem with [R31 + 0x50, el]:u64 <- 0
00011dfd: mem := mem with [R31 + 0x58, el]:u32 <- 0
00011e02: R30 := 0x8934
00011e04: call @md4_process_bytes with return %00011e06

00011e06:
00011e0d: R0 := pad:64[mem[R31 + 0x50, el]:u32]
00011e16: R1 := pad:64[mem[R31 + 0x58, el]:u32]
00011e20: mem := mem with [R31 + 0x50, el]:u32 <- 31:0[R0]
00011e2c: #3845 := ~CF <> 0
00011e26: when #3845 goto %00011e24
00038783: goto %00019759

00019759:
00019760: R0 := pad:64[mem[R31 + 0x54, el]:u32]
00019768: R0 := extend:64[31:0[R0]] + 1
00019770: mem := mem with [R31 + 0x54, el]:u32 <- 31:0[R0]
00038782: goto %00011e24

00011e24:
00011e33: #3846 := 0xFFFFFFFFFFFFFFC8 + extend:64[31:0[R1]]
00011e37: NF := 63:63[#3846]
00011e3a: VF := 31:31[R1] & ~63:63[#3846]
00011e3d: ZF := #3846 = 0
00011e40: CF := 31:31[R1] | 31:31[R1] & ~63:63[#3846] | ~63:63[#3846]
00011e4a: R2 := 0x78
00011e51: R20 := 0x38
00011e5a: R2 := 31:0[R2] - 31:0[R1]
00011e63: R20 := 31:0[R20] - 31:0[R1]
00011e6c: R19 := 31:0[R1]
00011e82: #3857 := ~CF <> 0
00011e83: goto %00011e7a

00011e7a:
00011e7c: when #3857 goto %00011e74
00011e7d: goto %00011e77

00011e77:
00011e78: R20 := R2
00011e7f: goto %00011e7b

00011e74:
00011e75: R20 := R20
00011e7e: goto %00011e7b

00011e7b:
00011e8b: R24 := R23 + 0x1C
00011e91: R1 := 0x11000
00011e98: R1 := R1 + 0x8E0
00011ea0: R2 := R20
00011ea7: R1 := R1 + 0xA90
00011eaf: R0 := R24 + R19
00011eb4: R30 := 0x898C
00011eb6: call @memcpy with return %00011eb8

00011eb8:
00011ec0: R1 := R19 + R20
00011ec7: R3 := R31 + 0x4C
00011ecf: R0 := R24
00011ed6: R2 := R1 >> 2
00011edd: R1 := R1 + 8
00011ee4: R7 := R2 + 4
00011eeb: R4 := R2 + 5
00011ef3: R8 := 31:0[R6] << 0x23
00011efd: R2 := R23
00011f06: R30 := 0x89C4
00011f08: call @md4_process_block with return %00011f0a

00011f0a:
00011f12: R21 := mem[R21 + 0xFB8, el]:u64
00011f1a: R0 := mem[R31 + 0xE8, el]:u64
00011f22: R1 := mem[R21, el]:u64
00011f2a: #3879 := 1 + ~R1 + R0
00011f2e: NF := 63:63[#3879]
00011f31: VF := 63:63[R0] & 63:63[~R1] & ~63:63[#3879] | ~63:63[R0] &
          ~63:63[~R1] & 63:63[#3879]
00011f34: ZF := #3879 = 0
00011f37: CF := 63:63[R0] & 63:63[~R1] | 63:63[~R1] & ~63:63[#3879] |
          63:63[R0] & ~63:63[#3879]
00011f3b: R0 := #3879
00011f41: R1 := 0
00011f4f: #3881 := ~ZF <> 0
00011f49: when #3881 goto %00011f47
00038781: goto %00019714

00011f47:
00011f54: R30 := 0x8A00
00011f56: call @__stack_chk_fail with return %0003877f

0003877f:
00038780: call @memxor with noreturn

00019714:
0001971a: R0 := R22
00019723: R19 := mem[R31 + 0x10, el]:u64
00019727: R20 := mem[R31 + 0x18, el]:u64
00019730: R21 := mem[R31 + 0x20, el]:u64
00019734: R22 := mem[R31 + 0x28, el]:u64
0001973d: R23 := mem[R31 + 0x30, el]:u64
00019741: R24 := mem[R31 + 0x38, el]:u64
0001974b: R29 := mem[R31, el]:u64
0001974f: R30 := mem[R31 + 8, el]:u64
00019752: R31 := R31 + 0xF0
00019757: call R30 with noreturn

00038784: sub md4_finish_ctx(md4_finish_ctx_result)
00038b15: md4_finish_ctx_result :: out u32 = low:32[R0]

000116fe:
00011706: mem := mem with [R31 - 0x40, el]:u64 <- R29
0001170a: mem := mem with [R31 - 0x38, el]:u64 <- R30
0001170d: R31 := R31 - 0x40
00011714: R29 := R31
0001171d: mem := mem with [R31, el]:u64 <- R31 + 0x20
00011721: mem := mem with [R31, el]:u64 <- R31 + 0x28
00011729: R19 := R0
00011732: mem := mem with [R31, el]:u64 <- R31 + 0x40
00011736: mem := mem with [R31, el]:u64 <- R31 + 0x48
0001173e: R21 := R1
00011747: R1 := pad:64[mem[R0 + 0x10, el]:u32]
00011750: R0 := pad:64[mem[R0 + 0x18, el]:u32]
00011758: mem := mem with [R31 + 0x30, el]:u64 <- R23
00011762: mem := mem with [R19 + 0x10, el]:u32 <- 31:0[R1]
0001176e: #3463 := ~CF <> 0
00011768: when #3463 goto %00011766
00038786: goto %000199ab

000199ab:
000199b2: R1 := pad:64[mem[R19 + 0x14, el]:u32]
000199ba: R1 := extend:64[31:0[R1]] + 1
000199c2: mem := mem with [R19 + 0x14, el]:u32 <- 31:0[R1]
00038785: goto %00011766

00011766:
00011775: #3464 := 0xFFFFFFFFFFFFFFC8 + extend:64[31:0[R0]]
00011779: NF := 63:63[#3464]
0001177c: VF := 31:31[R0] & ~63:63[#3464]
0001177f: ZF := #3464 = 0
00011782: CF := 31:31[R0] | 31:31[R0] & ~63:63[#3464] | ~63:63[#3464]
0001178c: R1 := 0x78
00011793: R22 := 0x38
0001179c: R1 := 31:0[R1] - 31:0[R0]
000117a5: R22 := 31:0[R22] - 31:0[R0]
000117ac: R23 := R19 + 0x1C
000117c2: #3472 := ~CF <> 0
000117c3: goto %000117ba

000117ba:
000117bc: when #3472 goto %000117b4
000117bd: goto %000117b7

000117b7:
000117b8: R22 := R1
000117bf: goto %000117bb

000117b4:
000117b5: R22 := R22
000117be: goto %000117bb

000117bb:
000117cd: R20 := 31:0[R0]
000117d3: R1 := 0x11000
000117da: R1 := R1 + 0x8E0
000117e2: R2 := R22
000117ea: R0 := R23 + R20
000117f1: R1 := R1 + 0xA90
000117f9: R20 := R20 + R22
000117fe: R30 := 0x8590
00011801: call @memcpy with return %00011803

00011803:
00011808: R3 := R20 & 0x1FFFFFFFC
00011811: R5 := pad:64[mem[R19 + 0x10, el]:u32]
00011819: R3 := R19 + R3
00011821: R0 := R23
00011828: R1 := R20 + 8
00011830: R2 := R19
00011838: R4 := 31:0[R5] << 0x23
00011840: mem := mem with [R3 + 0x1C, el]:u32 <- 31:0[R4]
00011849: R4 := pad:64[mem[R19 + 0x14, el]:u32]
00011853: mem := mem with [R3 + 0x20, el]:u32 <- 31:0[R4]
00011858: R30 := 0x85C0
0001185a: call @md4_process_block with return %0001185c

0001185c:
00011863: R0 := pad:64[mem[R19, el]:u32]
0001186b: R23 := mem[R31 + 0x30, el]:u64
00011873: mem := mem with [R21, el]:u32 <- 31:0[R0]
0001187b: R0 := R21
00011884: R1 := pad:64[mem[R19 + 4, el]:u32]
0001188c: mem := mem with [R21 + 4, el]:u32 <- 31:0[R1]
00011895: R1 := pad:64[mem[R19 + 8, el]:u32]
0001189d: mem := mem with [R21 + 8, el]:u32 <- 31:0[R1]
000118a6: R1 := pad:64[mem[R19 + 0xC, el]:u32]
000118af: R19 := mem[R31 + 0x10, el]:u64
000118b3: R20 := mem[R31 + 0x18, el]:u64
000118bb: mem := mem with [R21 + 0xC, el]:u32 <- 31:0[R1]
000118c4: R21 := mem[R31 + 0x20, el]:u64
000118c8: R22 := mem[R31 + 0x28, el]:u64
000118d2: R29 := mem[R31, el]:u64
000118d6: R30 := mem[R31 + 8, el]:u64
000118d9: R31 := R31 + 0x40
000118de: call R30 with noreturn

00038787: sub md4_init_ctx(md4_init_ctx_result)
00038b16: md4_init_ctx_result :: out u32 = low:32[R0]

00011684:
00011688: R1 := 0x11000
00011690: mem := mem with [R0 + 0x10, el]:u64 <- 0
00011698: mem := mem with [R0 + 0x18, el]:u32 <- 0
000116a1: call R30 with noreturn

00038788: sub md4_process_block(md4_process_block_result)
00038b17: md4_process_block_result :: out u32 = low:32[R0]

000115c7:
000115cf: mem := mem with [R31 - 0x70, el]:u64 <- R29
000115d3: mem := mem with [R31 - 0x68, el]:u64 <- R30
000115d6: R31 := R31 - 0x70
000115de: R4 := R2
000115e6: R5 := R2
000115ed: R29 := R31
000115f6: R2 := pad:64[mem[R2 + 0x10, el]:u32]
000115fd: R3 := R1 & 0xFFFFFFFFFFFFFFFC
00011608: R2 := 31:0[R2] + 31:0[R1]
00011611: R10 := pad:64[mem[R4 + 0xC, el]:u32]
00011619: R3 := R0 + R3
00011622: R4 := pad:64[mem[R4, el]:u32]
0001162c: mem := mem with [R5 + 0x10, el]:u32 <- 31:0[R2]
00011634: mem := mem with [R31 + 0x68, el]:u64 <- R3
00011641: #3431 := (~CF | ZF) <> 0
0001163b: when #3431 goto %00011639
0003878e: goto %0001a531

0001a531:
0001a538: R1 := pad:64[mem[R5 + 0x14, el]:u32]
0001a540: R1 := extend:64[31:0[R1]] + 1
0001a548: mem := mem with [R5 + 0x14, el]:u32 <- 31:0[R1]
0003878d: goto %00011639

00011639:
00011649: R1 := mem[R31 + 0x68, el]:u64
00011651: #3435 := 1 + ~R1 + R0
00011655: NF := 63:63[#3435]
00011658: VF := 63:63[R0] & 63:63[~R1] & ~63:63[#3435] | ~63:63[R0] &
          ~63:63[~R1] & 63:63[#3435]
0001165b: ZF := #3435 = 0
0001165e: CF := 63:63[R0] & 63:63[~R1] | 63:63[~R1] & ~63:63[#3435] |
          63:63[R0] & ~63:63[#3435]
0001166c: #3437 := CF
00011666: when #3437 goto %00011664
0003878c: goto %000199c4

000199c4:
000199c9: R3 := 0x7999
000199d0: R2 := 0xEBA1
000199d9: mem := mem with [R31, el]:u64 <- R31 + 0x80
000199dd: mem := mem with [R31, el]:u64 <- R31 + 0x88
000199e5: R26 := R5
000199ec: R3 := high:32[R3].extend:64[31:0[R3]] & 0xFFFFFFFF0000FFFF |
          0x5A820000
000199f3: R2 := high:32[R2].extend:64[31:0[R2]] & 0xFFFFFFFF0000FFFF |
          0x6ED90000
000199fc: mem := mem with [R31, el]:u64 <- R31 + 0x20
00019a00: mem := mem with [R31, el]:u64 <- R31 + 0x28
00019a09: mem := mem with [R31, el]:u64 <- R31 + 0x40
00019a0d: mem := mem with [R31, el]:u64 <- R31 + 0x48
00019a16: mem := mem with [R31, el]:u64 <- R31 + 0x60
00019a1a: mem := mem with [R31, el]:u64 <- R31 + 0x68
00019a23: mem := mem with [R31, el]:u64 <- R31 + 0xA0
00019a27: mem := mem with [R31, el]:u64 <- R31 + 0xA8
00019a2f: mem := mem with [R31 + 0x60, el]:u32 <- 31:0[R4]
0003878b: goto %00019a31

00019a31:
00019a3a: R1 := 31:0[R9] ^ 31:0[R10]
00019a43: R1 := 31:0[R1] & 31:0[R8]
00019a4c: R5 := pad:64[mem[R31 + 0x60, el]:u32]
00019a55: R1 := 31:0[R1] ^ 31:0[R10]
00019a5e: R4 := 31:0[R8] ^ 31:0[R9]
00019a67: R1 := 31:0[R1] + 31:0[R6]
00019a70: R28 := 31:0[R6] + 31:0[R3]
00019a79: R1 := 31:0[R1] + 31:0[R5]
00019a82: R5 := 31:0[R18] + 31:0[R10]
00019a8f: R4 := 31:0[R4] & 31:0[R1]
00019a98: R13 := 31:0[R1] ^ 31:0[R8]
00019aa1: R4 := 31:0[R4] ^ 31:0[R9]
00019aaa: R12 := 31:0[R22] + 31:0[R9]
00019ab3: R4 := 31:0[R4] + 31:0[R5]
00019abc: R7 := 31:0[R14] + 31:0[R8]
00019ac9: R13 := 31:0[R13] & 31:0[R4]
00019ad2: R11 := 31:0[R1] ^ 31:0[R4]
00019adb: R13 := 31:0[R13] ^ 31:0[R8]
00019ae4: R6 := 31:0[R6] + 31:0[R2]
00019aed: R13 := 31:0[R13] + 31:0[R12]
00019af6: R5 := pad:64[mem[R0 + 0x10, el]:u32]
00019afe: mem := mem with [R31 + 0x64, el]:u32 <- 31:0[R6]
00019b07: R19 := 31:0[R4] + 31:0[R16]
00019b10: R17 := 31:0[R1] + 31:0[R5]
00019b1b: R11 := 31:0[R11] & 31:0[R13]
00019b24: R6 := 31:0[R4] ^ 31:0[R13]
00019b2d: R11 := 31:0[R11] ^ 31:0[R1]
00019b36: R15 := 31:0[R13] + 31:0[R20]
00019b3f: R11 := 31:0[R11] + 31:0[R7]
00019b48: R24 := pad:64[mem[R0 + 0x20, el]:u32]
00019b51: R12 := pad:64[mem[R0 + 0x1C, el]:u32]
00019b5a: R21 := pad:64[mem[R0 + 0x28, el]:u32]
00019b65: R6 := 31:0[R6] & 31:0[R11]
00019b6e: R1 := 31:0[R13] ^ 31:0[R11]
00019b77: R4 := 31:0[R6] ^ 31:0[R4]
00019b80: R6 := 31:0[R11] + 31:0[R12]
00019b89: R4 := 31:0[R4] + 31:0[R17]
00019b92: R17 := pad:64[mem[R0 + 0x24, el]:u32]
00019b9b: R23 := pad:64[mem[R0 + 0x30, el]:u32]
00019ba6: R1 := 31:0[R1] & 31:0[R4]
00019baf: R7 := 31:0[R11] ^ 31:0[R4]
00019bb8: R1 := 31:0[R1] ^ 31:0[R13]
00019bc1: R27 := 31:0[R4] + 31:0[R24]
00019bca: R1 := 31:0[R1] + 31:0[R19]
00019bd3: R13 := pad:64[mem[R0 + 0x2C, el]:u32]
00019bdb: R25 := mem[R31 + 0x68, el]:u64
00019be6: R7 := 31:0[R7] & 31:0[R1]
00019bef: R30 := 31:0[R4] ^ 31:0[R1]
00019bf8: R7 := 31:0[R7] ^ 31:0[R11]
00019c01: R11 := 31:0[R1] + 31:0[R17]
00019c0a: R7 := 31:0[R7] + 31:0[R15]
00019c17: R30 := 31:0[R30] & 31:0[R7]
00019c1e: R0 := R0 + 0x40
00019c27: R4 := 31:0[R30] ^ 31:0[R4]
00019c30: R30 := 31:0[R1] ^ 31:0[R7]
00019c39: R4 := 31:0[R4] + 31:0[R6]
00019c42: R6 := 31:0[R7] + 31:0[R21]
00019c4d: R30 := 31:0[R30] & 31:0[R4]
00019c56: R1 := 31:0[R30] ^ 31:0[R1]
00019c5f: R30 := 31:0[R7] ^ 31:0[R4]
00019c68: R1 := 31:0[R1] + 31:0[R27]
00019c71: R27 := 31:0[R4] + 31:0[R13]
00019c7c: R30 := 31:0[R30] & 31:0[R1]
00019c85: R7 := 31:0[R30] ^ 31:0[R7]
00019c8e: R30 := 31:0[R4] ^ 31:0[R1]
00019c97: R7 := 31:0[R7] + 31:0[R11]
00019ca0: R11 := 31:0[R1] + 31:0[R23]
00019cab: R30 := 31:0[R30] & 31:0[R7]
00019cb4: R4 := 31:0[R30] ^ 31:0[R4]
00019cbd: R30 := 31:0[R1] ^ 31:0[R7]
00019cc6: R4 := 31:0[R4] + 31:0[R6]
00019ccf: R6 := 31:0[R7] + 31:0[R15]
00019cda: R30 := 31:0[R30] & 31:0[R4]
00019ce3: R1 := 31:0[R30] ^ 31:0[R1]
00019cec: R30 := 31:0[R7] ^ 31:0[R4]
00019cf5: R1 := 31:0[R1] + 31:0[R27]
00019cfe: R27 := 31:0[R4] + 31:0[R19]
00019d09: R30 := 31:0[R30] & 31:0[R1]
00019d12: R7 := 31:0[R30] ^ 31:0[R7]
00019d1b: R30 := 31:0[R4] ^ 31:0[R1]
00019d24: R7 := 31:0[R7] + 31:0[R11]
00019d2e: #8374 := 1 + ~R0 + R25
00019d32: NF := 63:63[#8374]
00019d35: VF := 63:63[R25] & 63:63[~R0] & ~63:63[#8374] | ~63:63[R25] &
          ~63:63[~R0] & 63:63[#8374]
00019d38: ZF := #8374 = 0
00019d3b: CF := 63:63[R25] & 63:63[~R0] | 63:63[~R0] & ~63:63[#8374] |
          63:63[R25] & ~63:63[#8374]
00019d46: R25 := 31:0[R5] + 31:0[R2]
00019d51: R30 := 31:0[R30] & 31:0[R7]
00019d5a: R4 := 31:0[R30] ^ 31:0[R4]
00019d63: R30 := 31:0[R1] ^ 31:0[R7]
00019d6c: R6 := 31:0[R4] + 31:0[R6]
00019d75: R4 := 31:0[R1] + 31:0[R11]
00019d80: R30 := 31:0[R30] & 31:0[R6]
00019d89: R1 := 31:0[R30] ^ 31:0[R1]
00019d92: R30 := 31:0[R7] ^ 31:0[R6]
00019d9b: R1 := 31:0[R1] + 31:0[R27]
00019da4: R27 := 31:0[R5] + 31:0[R3]
00019daf: R30 := 31:0[R30] & 31:0[R5]
00019db8: R1 := 31:0[R6] | 31:0[R5]
00019dc1: R30 := 31:0[R30] ^ 31:0[R7]
00019dca: R4 := 31:0[R30] + 31:0[R4]
00019dd3: R30 := 31:0[R6] & 31:0[R5]
00019dde: R1 := 31:0[R1] & 31:0[R4]
00019de7: R1 := 31:0[R1] | 31:0[R30]
00019df0: R30 := 31:0[R5] & 31:0[R4]
00019df9: R7 := 31:0[R1] + 31:0[R7]
00019e02: R1 := 31:0[R5] | 31:0[R4]
00019e0b: R28 := 31:0[R7] + 31:0[R28]
00019e16: R7 := 31:0[R1] & 31:0[R28]
00019e1f: R1 := 31:0[R4] | 31:0[R28]
00019e28: R7 := 31:0[R7] | 31:0[R30]
00019e31: R30 := 31:0[R24] + 31:0[R3]
00019e3a: R6 := 31:0[R7] + 31:0[R6]
00019e43: R7 := 31:0[R4] & 31:0[R28]
00019e4c: R27 := 31:0[R6] + 31:0[R27]
00019e55: R24 := 31:0[R24] + 31:0[R2]
00019e60: R1 := 31:0[R1] & 31:0[R27]
00019e69: R6 := 31:0[R28] | 31:0[R27]
00019e72: R7 := 31:0[R1] | 31:0[R7]
00019e7b: R1 := 31:0[R28] & 31:0[R27]
00019e84: R5 := 31:0[R7] + 31:0[R5]
00019e8d: R7 := 31:0[R23] + 31:0[R3]
00019e96: R30 := 31:0[R5] + 31:0[R30]
00019e9f: R23 := 31:0[R23] + 31:0[R2]
00019eaa: R6 := 31:0[R6] & 31:0[R30]
00019eb3: R5 := 31:0[R27] | 31:0[R30]
00019ebc: R1 := 31:0[R6] | 31:0[R1]
00019ec5: R6 := 31:0[R27] & 31:0[R30]
00019ece: R4 := 31:0[R1] + 31:0[R4]
00019ed7: R1 := 31:0[R18] + 31:0[R3]
00019ee0: R7 := 31:0[R4] + 31:0[R7]
00019ee9: R18 := 31:0[R18] + 31:0[R2]
00019ef4: R5 := 31:0[R5] & 31:0[R7]
00019efd: R4 := 31:0[R30] | 31:0[R7]
00019f06: R6 := 31:0[R5] | 31:0[R6]
00019f0f: R5 := 31:0[R30] & 31:0[R7]
00019f18: R28 := 31:0[R6] + 31:0[R28]
00019f21: R6 := 31:0[R16] + 31:0[R3]
00019f2a: R1 := 31:0[R28] + 31:0[R1]
00019f33: R16 := 31:0[R16] + 31:0[R2]
00019f3e: R4 := 31:0[R4] & 31:0[R1]
00019f47: R28 := 31:0[R7] | 31:0[R1]
00019f50: R5 := 31:0[R4] | 31:0[R5]
00019f59: R4 := 31:0[R7] & 31:0[R1]
00019f62: R27 := 31:0[R5] + 31:0[R27]
00019f6b: R5 := 31:0[R17] + 31:0[R3]
00019f74: R6 := 31:0[R27] + 31:0[R6]
00019f7d: R17 := 31:0[R17] + 31:0[R2]
00019f88: R28 := 31:0[R28] & 31:0[R6]
00019f91: R27 := 31:0[R1] | 31:0[R6]
00019f9a: R4 := 31:0[R28] | 31:0[R4]
00019fa3: R28 := 31:0[R1] & 31:0[R6]
00019fac: R30 := 31:0[R4] + 31:0[R30]
00019fb5: R4 := 31:0[R15] + 31:0[R3]
00019fbe: R5 := 31:0[R30] + 31:0[R5]
00019fc7: R15 := 31:0[R15] + 31:0[R2]
00019fd2: R27 := 31:0[R27] & 31:0[R5]
00019fdb: R30 := 31:0[R6] | 31:0[R5]
00019fe4: R28 := 31:0[R27] | 31:0[R28]
00019fed: R27 := 31:0[R6] & 31:0[R5]
00019ff6: R7 := 31:0[R28] + 31:0[R7]
00019fff: R28 := 31:0[R22] + 31:0[R3]
0001a008: R4 := 31:0[R7] + 31:0[R4]
0001a011: R22 := 31:0[R22] + 31:0[R2]
0001a01c: R30 := 31:0[R30] & 31:0[R4]
0001a025: R7 := 31:0[R5] | 31:0[R4]
0001a02e: R27 := 31:0[R30] | 31:0[R27]
0001a037: R30 := 31:0[R5] & 31:0[R4]
0001a040: R1 := 31:0[R27] + 31:0[R1]
0001a049: R27 := 31:0[R20] + 31:0[R3]
0001a052: R28 := 31:0[R1] + 31:0[R28]
0001a05b: R20 := 31:0[R20] + 31:0[R2]
0001a066: R7 := 31:0[R7] & 31:0[R28]
0001a06f: R1 := 31:0[R4] | 31:0[R28]
0001a078: R30 := 31:0[R7] | 31:0[R30]
0001a081: R7 := 31:0[R4] & 31:0[R28]
0001a08a: R6 := 31:0[R30] + 31:0[R6]
0001a093: R30 := 31:0[R21] + 31:0[R3]
0001a09c: R27 := 31:0[R6] + 31:0[R27]
0001a0a5: R21 := 31:0[R21] + 31:0[R2]
0001a0b0: R1 := 31:0[R1] & 31:0[R27]
0001a0b9: R6 := 31:0[R28] | 31:0[R27]
0001a0c2: R7 := 31:0[R1] | 31:0[R7]
0001a0cb: R1 := 31:0[R28] & 31:0[R27]
0001a0d4: R5 := 31:0[R7] + 31:0[R5]
0001a0dd: R7 := 31:0[R19] + 31:0[R3]
0001a0e6: R30 := 31:0[R5] + 31:0[R30]
0001a0ef: R19 := 31:0[R19] + 31:0[R2]
0001a0fa: R6 := 31:0[R6] & 31:0[R30]
0001a103: R5 := 31:0[R27] | 31:0[R30]
0001a10c: R1 := 31:0[R6] | 31:0[R1]
0001a115: R6 := 31:0[R27] & 31:0[R30]
0001a11e: R4 := 31:0[R1] + 31:0[R4]
0001a127: R1 := 31:0[R14] + 31:0[R3]
0001a130: R7 := 31:0[R4] + 31:0[R7]
0001a139: R14 := 31:0[R14] + 31:0[R2]
0001a144: R5 := 31:0[R5] & 31:0[R7]
0001a14d: R4 := 31:0[R30] | 31:0[R7]
0001a156: R6 := 31:0[R5] | 31:0[R6]
0001a15f: R5 := 31:0[R30] & 31:0[R7]
0001a168: R28 := 31:0[R6] + 31:0[R28]
0001a171: R6 := 31:0[R12] + 31:0[R3]
0001a17a: R1 := 31:0[R28] + 31:0[R1]
0001a183: R12 := 31:0[R12] + 31:0[R2]
0001a18e: R4 := 31:0[R4] & 31:0[R1]
0001a197: R28 := 31:0[R7] | 31:0[R1]
0001a1a0: R5 := 31:0[R4] | 31:0[R5]
0001a1a9: R4 := 31:0[R7] & 31:0[R1]
0001a1b2: R27 := 31:0[R5] + 31:0[R27]
0001a1bb: R5 := 31:0[R13] + 31:0[R3]
0001a1c4: R6 := 31:0[R27] + 31:0[R6]
0001a1cd: R13 := 31:0[R13] + 31:0[R2]
0001a1d8: R28 := 31:0[R28] & 31:0[R6]
0001a1e1: R27 := 31:0[R1] | 31:0[R6]
0001a1ea: R4 := 31:0[R28] | 31:0[R4]
0001a1f3: R28 := 31:0[R1] & 31:0[R6]
0001a1fc: R30 := 31:0[R4] + 31:0[R30]
0001a205: R4 := 31:0[R11] + 31:0[R3]
0001a20e: R5 := 31:0[R30] + 31:0[R5]
0001a217: R11 := 31:0[R11] + 31:0[R2]
0001a222: R27 := 31:0[R27] & 31:0[R5]
0001a22b: R30 := 31:0[R6] ^ 31:0[R5]
0001a234: R28 := 31:0[R27] | 31:0[R28]
0001a23d: R27 := pad:64[mem[R31 + 0x64, el]:u32]
0001a246: R7 := 31:0[R28] + 31:0[R7]
0001a24f: R4 := 31:0[R7] + 31:0[R4]
0001a25a: R30 := 31:0[R30] ^ 31:0[R4]
0001a263: R7 := 31:0[R5] ^ 31:0[R4]
0001a26c: R1 := 31:0[R30] + 31:0[R1]
0001a275: R1 := 31:0[R1] + 31:0[R27]
0001a280: R7 := 31:0[R7] ^ 31:0[R1]
0001a289: R27 := 31:0[R4] ^ 31:0[R1]
0001a292: R6 := 31:0[R7] + 31:0[R6]
0001a29b: R24 := 31:0[R6] + 31:0[R24]
0001a2a6: R6 := 31:0[R27] ^ 31:0[R24]
0001a2af: R7 := 31:0[R1] ^ 31:0[R24]
0001a2b8: R5 := 31:0[R6] + 31:0[R5]
0001a2c1: R5 := 31:0[R5] + 31:0[R25]
0001a2cc: R7 := 31:0[R7] ^ 31:0[R5]
0001a2d5: R6 := 31:0[R24] ^ 31:0[R5]
0001a2de: R4 := 31:0[R7] + 31:0[R4]
0001a2e7: R23 := 31:0[R4] + 31:0[R23]
0001a2f2: R6 := 31:0[R6] ^ 31:0[R23]
0001a2fb: R4 := 31:0[R5] ^ 31:0[R23]
0001a304: R1 := 31:0[R6] + 31:0[R1]
0001a30d: R22 := 31:0[R1] + 31:0[R22]
0001a318: R1 := 31:0[R4] ^ 31:0[R22]
0001a321: R4 := 31:0[R23] ^ 31:0[R22]
0001a32a: R24 := 31:0[R1] + 31:0[R24]
0001a333: R21 := 31:0[R24] + 31:0[R21]
0001a33e: R4 := 31:0[R4] ^ 31:0[R21]
0001a347: R1 := 31:0[R22] ^ 31:0[R21]
0001a350: R5 := 31:0[R4] + 31:0[R5]
0001a359: R20 := 31:0[R5] + 31:0[R20]
0001a362: R5 := pad:64[mem[R31 + 0x60, el]:u32]
0001a36d: R1 := 31:0[R1] ^ 31:0[R20]
0001a376: R4 := 31:0[R21] ^ 31:0[R20]
0001a37f: R23 := 31:0[R1] + 31:0[R23]
0001a388: R19 := 31:0[R23] + 31:0[R19]
0001a393: R4 := 31:0[R4] ^ 31:0[R19]
0001a39c: R1 := 31:0[R20] ^ 31:0[R19]
0001a3a5: R22 := 31:0[R4] + 31:0[R22]
0001a3ae: R18 := 31:0[R22] + 31:0[R18]
0001a3b9: R1 := 31:0[R1] ^ 31:0[R18]
0001a3c2: R4 := 31:0[R19] ^ 31:0[R18]
0001a3cb: R21 := 31:0[R1] + 31:0[R21]
0001a3d4: R17 := 31:0[R21] + 31:0[R17]
0001a3df: R4 := 31:0[R4] ^ 31:0[R17]
0001a3e8: R1 := 31:0[R18] ^ 31:0[R17]
0001a3f1: R20 := 31:0[R4] + 31:0[R20]
0001a3fa: R16 := 31:0[R20] + 31:0[R16]
0001a405: R1 := 31:0[R1] ^ 31:0[R16]
0001a40e: R4 := 31:0[R17] ^ 31:0[R16]
0001a417: R19 := 31:0[R1] + 31:0[R19]
0001a420: R15 := 31:0[R19] + 31:0[R15]
0001a42b: R4 := 31:0[R4] ^ 31:0[R15]
0001a434: R1 := 31:0[R16] ^ 31:0[R15]
0001a43d: R4 := 31:0[R4] + 31:0[R18]
0001a446: R14 := 31:0[R4] + 31:0[R14]
0001a451: R1 := 31:0[R1] ^ 31:0[R14]
0001a45a: R4 := 31:0[R15] ^ 31:0[R14]
0001a463: R1 := 31:0[R1] + 31:0[R17]
0001a46c: R5 := 31:0[R14] + 31:0[R5]
0001a475: R13 := 31:0[R1] + 31:0[R13]
0001a47d: mem := mem with [R31 + 0x60, el]:u32 <- 31:0[R5]
0001a488: R4 := 31:0[R4] ^ 31:0[R13]
0001a491: R1 := 31:0[R14] ^ 31:0[R13]
0001a49a: R4 := 31:0[R4] + 31:0[R16]
0001a4a3: R10 := 31:0[R13] + 31:0[R10]
0001a4ac: R12 := 31:0[R4] + 31:0[R12]
0001a4b7: R1 := 31:0[R1] ^ 31:0[R12]
0001a4c0: R9 := 31:0[R12] + 31:0[R9]
0001a4c9: R1 := 31:0[R1] + 31:0[R15]
0001a4d4: R11 := 31:0[R1] + 31:0[R11]
0001a4df: R8 := 31:0[R11] + 31:0[R8]
0001a4ed: #8995 := (CF & ~ZF) <> 0
0001a4e7: when #8995 goto %00019a31
0003878a: goto %0001a4f0

0001a4f0:
0001a4f7: R19 := mem[R31 + 0x10, el]:u64
0001a4fb: R20 := mem[R31 + 0x18, el]:u64
0001a504: R21 := mem[R31 + 0x20, el]:u64
0001a508: R22 := mem[R31 + 0x28, el]:u64
0001a511: R23 := mem[R31 + 0x30, el]:u64
0001a515: R24 := mem[R31 + 0x38, el]:u64
0001a51e: R25 := mem[R31 + 0x40, el]:u64
0001a522: R26 := mem[R31 + 0x48, el]:u64
0001a52b: R27 := mem[R31 + 0x50, el]:u64
0001a52f: R28 := mem[R31 + 0x58, el]:u64
00038789: goto %00011664

00011664:
00011676: R29 := mem[R31, el]:u64
0001167a: R30 := mem[R31 + 8, el]:u64
0001167d: R31 := R31 + 0x70
00011682: call R30 with noreturn

0003878f: sub md4_process_bytes(md4_process_bytes_result)
00038b18: md4_process_bytes_result :: out u32 = low:32[R0]

000118e0:
000118e8: mem := mem with [R31 - 0x40, el]:u64 <- R29
000118ec: mem := mem with [R31 - 0x38, el]:u64 <- R30
000118ef: R31 := R31 - 0x40
000118f6: R29 := R31
000118ff: mem := mem with [R31, el]:u64 <- R31 + 0x20
00011903: mem := mem with [R31, el]:u64 <- R31 + 0x28
0001190b: R19 := R0
00011914: R0 := pad:64[mem[R2 + 0x18, el]:u32]
0001191d: mem := mem with [R31, el]:u64 <- R31 + 0x40
00011921: mem := mem with [R31, el]:u64 <- R31 + 0x48
00011929: R21 := R2
00011931: R22 := R1
0001193d: #3544 := ~31:0[R0] = 0
00011937: when #3544 goto %00011935
00038799: goto %00011a7d

00011935:
00011946: R20 := 31:0[R0]
0001194f: mem := mem with [R31, el]:u64 <- R31 + 0x60
00011953: mem := mem with [R31, el]:u64 <- R31 + 0x68
00011959: R23 := 0x80
00011961: R23 := R23 - R20
00011968: R24 := R2 + 0x1C
00011970: #3555 := 1 + ~R1 + R23
00011974: NF := 63:63[#3555]
00011977: VF := 63:63[R23] & 63:63[~R1] & ~63:63[#3555] | ~63:63[R23] &
          ~63:63[~R1] & 63:63[#3555]
0001197a: ZF := #3555 = 0
0001197d: CF := 63:63[R23] & 63:63[~R1] | 63:63[~R1] & ~63:63[#3555] |
          63:63[R23] & ~63:63[#3555]
00011987: R0 := R24 + R20
0001199e: #3560 := (~CF | ZF) <> 0
0001199f: goto %00011996

00011996:
00011998: when #3560 goto %00011990
00011999: goto %00011993

00011993:
00011994: R23 := R1
0001199b: goto %00011997

00011990:
00011991: R23 := R23
0001199a: goto %00011997

00011997:
000119a8: R1 := R19
000119b0: R2 := R23
000119b5: R30 := 0x8724
000119b7: call @memcpy with return %000119b9

000119b9:
000119c0: R1 := pad:64[mem[R21 + 0x18, el]:u32]
000119c9: R1 := 31:0[R1] + 31:0[R23]
000119d1: mem := mem with [R21 + 0x18, el]:u32 <- 31:0[R1]
000119d8: #3571 := 0xFFFFFFFFFFFFFFC0 + extend:64[31:0[R1]]
000119dc: NF := 63:63[#3571]
000119df: VF := 31:31[R1] & ~63:63[#3571]
000119e2: ZF := #3571 = 0
000119e5: CF := 31:31[R1] | 31:31[R1] & ~63:63[#3571] | ~63:63[#3571]
000119f5: #3573 := (CF & ~ZF) <> 0
000119ef: when #3573 goto %000119ed
00038798: goto %00011a5c

000119ed:
000119fd: R2 := R21
00011a05: R0 := R24
00011a0c: R1 := R1 & 0xFFFFFFC0
00011a11: R30 := 0x8780
00011a13: call @md4_process_block with return %00011a15

00011a15:
00011a1c: R2 := pad:64[mem[R21 + 0x18, el]:u32]
00011a24: R0 := R20 + R23
00011a2b: R1 := R0 & 0xFFFFFFFFFFFFFFC0
00011a33: R0 := R24
00011a3b: R2 := 31:0[R2] & 0x3F
00011a43: mem := mem with [R21 + 0x18, el]:u32 <- 31:0[R2]
00011a4b: R1 := R24 + R1
00011a52: R2 := R2 & 0x3F
00011a57: R30 := 0x87A4
00011a59: call @memcpy with return %00011a5b

00011a5b:
00011a5e: goto %00011a5c

00011a5c:
00011a65: R19 := R19 + R23
00011a6d: R22 := R22 - R23
00011a76: R23 := mem[R31 + 0x30, el]:u64
00011a7a: R24 := mem[R31 + 0x38, el]:u64
00011a7f: goto %00011a7d

00011a7d:
00011a85: #3689 := 0xFFFFFFFFFFFFFFC1 + R22
00011a89: NF := 63:63[#3689]
00011a8c: VF := 63:63[R22] & ~63:63[#3689]
00011a8f: ZF := #3689 = 0
00011a92: CF := 63:63[R22] | ~63:63[#3689] | 63:63[R22] & ~63:63[#3689]
00011aa1: #3691 := (~CF | ZF) <> 0
00011a9b: when #3691 goto %00011a99
00038797: goto %0001987d

0001987d:
00019888: #8110 := ZF
00019882: when #8110 goto %00011bad
00038796: goto %0001988b

00011bad:
00011bb2: R1 := R22 & 0xFFFFFFFFFFFFFFC0
00011bba: R0 := R19
00011bc1: R22 := R22 & 0x3F
00011bc9: R19 := R19 + R1
00011bd1: R2 := R21
00011bd6: R30 := 0x86E4
00011bd8: call @md4_process_block with return %00011a99

00011a99:
00011aad: #3692 := ~R22 = 0
00011aa7: when #3692 goto %00011aa5
00038795: goto %0001984d

00011aa5:
00011ab4: R20 := R21 + 0x1C
00011abd: mem := mem with [R31, el]:u64 <- R31 + 0x60
00011ac1: mem := mem with [R31, el]:u64 <- R31 + 0x68
00011ac9: R23 := R19
00011ace: goto %00011acc

0001984d:
00019854: R19 := mem[R31 + 0x10, el]:u64
00019858: R20 := mem[R31 + 0x18, el]:u64
00019861: R21 := mem[R31 + 0x20, el]:u64
00019865: R22 := mem[R31 + 0x28, el]:u64
0001986f: R29 := mem[R31, el]:u64
00019873: R30 := mem[R31 + 8, el]:u64
00019876: R31 := R31 + 0x40
0001987b: call R30 with noreturn

0001988b:
00019892: mem := mem with [R31, el]:u64 <- R31 + 0x60
00019896: mem := mem with [R31, el]:u64 <- R31 + 0x68
0001989d: #8112 := 0xFFFFFFFFFFFFFFC0 + R22
000198a1: NF := 63:63[#8112]
000198a4: VF := 63:63[R22] & ~63:63[#8112]
000198a7: ZF := #8112 = 0
000198aa: CF := 63:63[R22] | ~63:63[#8112] | 63:63[R22] & ~63:63[#8112]
000198b3: R20 := R21 + 0x1C
000198bf: #8114 := ZF
000198b9: when #8114 goto %000198b7
00038794: goto %000198cd

000198b7:
000198c7: R23 := R19
000198cb: goto %00011acc

000198cd:
000198d2: R24 := R22 - 0x41
000198d9: R24 := R24 >> 6
000198e0: R23 := R24 + 1
000198e8: R23 := R19 + (R23 << 6)
00038793: goto %000198ec

000198ec:
000198f3: R0 := mem[R19, el]:u64
000198f7: R1 := mem[R19 + 8, el]:u64
00019900: mem := mem with [R20, el]:u64 <- R20
00019904: mem := mem with [R20, el]:u64 <- R20 + 8
0001990c: R2 := R21
00019915: R0 := mem[R19 + 0x10, el]:u64
00019919: R1 := mem[R19 + 0x18, el]:u64
00019922: mem := mem with [R20, el]:u64 <- R20 + 0x20
00019926: mem := mem with [R20, el]:u64 <- R20 + 0x28
0001992f: R4 := mem[R19 + 0x20, el]:u64
00019933: R5 := mem[R19 + 0x28, el]:u64
0001993c: mem := mem with [R20, el]:u64 <- R20 + 0x40
00019940: mem := mem with [R20, el]:u64 <- R20 + 0x48
00019946: R1 := 0x40
0001994f: R4 := mem[R19 + 0x30, el]:u64
00019953: R5 := mem[R19 + 0x38, el]:u64
0001995c: mem := mem with [R20, el]:u64 <- R20 + 0x60
00019960: mem := mem with [R20, el]:u64 <- R20 + 0x68
00019968: R19 := R19 + R1
00019970: R0 := R20
00019975: R30 := 0x8684
00019977: call @md4_process_block with return %00019979

00019979:
0001997f: #8142 := 1 + ~R23 + R19
00019983: NF := 63:63[#8142]
00019986: VF := 63:63[R19] & 63:63[~R23] & ~63:63[#8142] | ~63:63[R19] &
          ~63:63[~R23] & 63:63[#8142]
00019989: ZF := #8142 = 0
0001998c: CF := 63:63[R19] & 63:63[~R23] | 63:63[~R23] & ~63:63[#8142] |
          63:63[R19] & ~63:63[#8142]
00019999: #8144 := ~ZF <> 0
00019993: when #8144 goto %000198ec
00038792: goto %0001999c

0001999c:
000199a1: R22 := R22 - 0x40
000199a9: R22 := R22 - (R24 << 6)
00038791: goto %00011acc

00011acc:
00011ad6: R19 := pad:64[mem[R21 + 0x18, el]:u32]
00011ade: R1 := R23
00011ae6: R2 := R22
00011aee: R0 := R20 + R19
00011af6: R19 := R19 + R22
00011afb: R30 := 0x86AC
00011afd: call @memcpy with return %00011aff

00011aff:
00011b04: #3709 := 0xFFFFFFFFFFFFFFC1 + R19
00011b08: NF := 63:63[#3709]
00011b0b: VF := 63:63[R19] & ~63:63[#3709]
00011b0e: ZF := #3709 = 0
00011b11: CF := 63:63[R19] | ~63:63[#3709] | 63:63[R19] & ~63:63[#3709]
00011b20: #3711 := (CF & ~ZF) <> 0
00011b1a: when #3711 goto %00011b18
00038790: goto %00011b65

00011b18:
00011b28: R2 := R21
00011b30: R0 := R20
00011b37: R19 := R19 - 0x40
00011b3d: R1 := 0x40
00011b42: R30 := 0x875C
00011b44: call @md4_process_block with return %00011b46

00011b46:
00011b4c: R0 := R20
00011b54: R2 := R19
00011b5b: R1 := R21 + 0x5C
00011b60: R30 := 0x876C
00011b62: call @memcpy with return %00011b64

00011b64:
00011b67: goto %00011b65

00011b65:
00011b6f: R23 := mem[R31 + 0x30, el]:u64
00011b73: R24 := mem[R31 + 0x38, el]:u64
00011b7b: mem := mem with [R21 + 0x18, el]:u32 <- 31:0[R19]
00011b84: R19 := mem[R31 + 0x10, el]:u64
00011b88: R20 := mem[R31 + 0x18, el]:u64
00011b91: R21 := mem[R31 + 0x20, el]:u64
00011b95: R22 := mem[R31 + 0x28, el]:u64
00011b9f: R29 := mem[R31, el]:u64
00011ba3: R30 := mem[R31 + 8, el]:u64
00011ba6: R31 := R31 + 0x40
00011bab: call R30 with noreturn

0003879a: sub md4_read_ctx(md4_read_ctx_result)
00038b19: md4_read_ctx_result :: out u32 = low:32[R0]

000116a3:
000116a9: R2 := R0
000116b1: R0 := R1
000116ba: R1 := pad:64[mem[R2, el]:u32]
000116c2: mem := mem with [R0, el]:u32 <- 31:0[R1]
000116cb: R1 := pad:64[mem[R2 + 4, el]:u32]
000116d3: mem := mem with [R0 + 4, el]:u32 <- 31:0[R1]
000116dc: R1 := pad:64[mem[R2 + 8, el]:u32]
000116e4: mem := mem with [R0 + 8, el]:u32 <- 31:0[R1]
000116ed: R1 := pad:64[mem[R2 + 0xC, el]:u32]
000116f5: mem := mem with [R0 + 0xC, el]:u32 <- 31:0[R1]
000116fa: call R30 with noreturn

0003879b: sub md4_stream(md4_stream_result)
00038b1a: md4_stream_result :: out u32 = low:32[R0]

00011bda:
00011bde: R12 := 0x1140
00011be6: R31 := R31 - R12
00011bef: mem := mem with [R31, el]:u64 <- R31
00011bf3: mem := mem with [R31, el]:u64 <- R31 + 8
00011bfa: R29 := R31
00011c03: mem := mem with [R31, el]:u64 <- R31 + 0x60
00011c07: mem := mem with [R31, el]:u64 <- R31 + 0x68
00011c0d: R23 := 0x27000
00011c15: R24 := R1
00011c1b: R1 := 0x11000
00011c24: mem := mem with [R31, el]:u64 <- R31 + 0x20
00011c28: mem := mem with [R31, el]:u64 <- R31 + 0x28
00011c30: R20 := R0
00011c38: R0 := mem[R23 + 0xFB8, el]:u64
00011c41: mem := mem with [R31, el]:u64 <- R31 + 0x40
00011c45: mem := mem with [R31, el]:u64 <- R31 + 0x48
00011c4c: R21 := R31 + 0xF0
00011c56: R1 := mem[R0, el]:u64
00011c5e: mem := mem with [R31 + 0x1138, el]:u64 <- R1
00011c64: R1 := 0
00011c6c: mem := mem with [R31 + 0x40, el]:u64 <- R25
00011c73: R25 := R31 + 0x50
00011c79: R22 := 0x1000
00011c81: mem := mem with [R31 + 0x60, el]:u64 <- 0
00011c89: mem := mem with [R31 + 0x68, el]:u32 <- 0
000387a4: goto %00011c8d

00011c8d:
00011c91: R19 := 0
00011c96: goto %00011c94

00011c94:
00011c9d: R2 := R22 - R19
00011ca5: R0 := R21 + R19
00011cad: R3 := R20
00011cb3: R1 := 1
00011cb8: R30 := 0x8848
00011cbb: call @fread with return %00011cbd

00011cbd:
00011cc3: R19 := R19 + R0
00011cca: #3813 := 0xFFFFFFFFFFFFF000 + R19
00011cce: NF := 63:63[#3813]
00011cd1: VF := 63:63[R19] & ~63:63[#3813]
00011cd4: ZF := #3813 = 0
00011cd7: CF := 63:63[R19] | ~63:63[#3813] | 63:63[R19] & ~63:63[#3813]
00011ce5: #3815 := ~ZF <> 0
00011cdf: when #3815 goto %00011cdd
000387a3: goto %0001982a

0001982a:
00019830: R1 := R19
00019838: R2 := R25
00019840: R0 := R21
00019845: R30 := 0x8864
00019847: call @md4_process_block with return %00019849

00019849:
0001984b: goto %00011c8d

00011cdd:
00011cf1: #3816 := R0 = 0
00011ceb: when #3816 goto %00011ce9
000387a2: goto %0001980f

00011ce9:
00011cf9: R0 := R20
00011cfe: R30 := 0x8870
00011d01: call @ferror with return %00011d03

00011d03:
00011d0a: R1 := 31:0[R0]
00011d11: R0 := 1
00011d1d: #3823 := ~31:0[R1] = 0
00011d17: when #3823 goto %00011d15
000387a1: goto %000197fc

0001980f:
00019815: R0 := R20
0001981a: R30 := 0x8830
0001981c: call @feof with return %0001981e

0001981e:
00019827: #8096 := ~31:0[R0] = 0
00019821: when #8096 goto %000197fc
000387a0: goto %00011c94

000197fc:
00019801: R20 := R31 + 0x50
0001980c: #8092 := ~R19 = 0
00019806: when #8092 goto %000197bb
0003879f: goto %000197db

000197bb:
000197c1: R1 := R19
000197c9: R0 := R21
000197d1: R2 := R20
000197d6: R30 := 0x88DC
000197d8: call @md4_process_bytes with return %000197da

000197da:
000197dd: goto %000197db

000197db:
000197e4: R1 := R24
000197ec: R0 := R20
000197f1: R30 := 0x8890
000197f3: call @md4_finish_ctx with return %000197f5

000197f5:
000197fa: R0 := 0
0003879e: goto %00011d15

00011d15:
00011d25: R23 := mem[R23 + 0xFB8, el]:u64
00011d2d: R1 := mem[R31 + 0x1138, el]:u64
00011d35: R2 := mem[R23, el]:u64
00011d3d: #3827 := 1 + ~R2 + R1
00011d41: NF := 63:63[#3827]
00011d44: VF := 63:63[R1] & 63:63[~R2] & ~63:63[#3827] | ~63:63[R1] &
          ~63:63[~R2] & 63:63[#3827]
00011d47: ZF := #3827 = 0
00011d4a: CF := 63:63[R1] & 63:63[~R2] | 63:63[~R2] & ~63:63[#3827] |
          63:63[R1] & ~63:63[#3827]
00011d4e: R1 := #3827
00011d54: R2 := 0
00011d60: #3829 := ~ZF <> 0
00011d5a: when #3829 goto %00011d58
0003879d: goto %00019772

00011d58:
00011d65: R30 := 0x88E4
00011d67: call @__stack_chk_fail with return %00011d69

00011d69:
0003879c: call @md4_buffer with noreturn

00019772:
00019776: R12 := 0x1140
0001977f: R29 := mem[R31, el]:u64
00019783: R30 := mem[R31 + 8, el]:u64
0001978c: R19 := mem[R31 + 0x10, el]:u64
00019790: R20 := mem[R31 + 0x18, el]:u64
00019799: R21 := mem[R31 + 0x20, el]:u64
0001979d: R22 := mem[R31 + 0x28, el]:u64
000197a6: R23 := mem[R31 + 0x30, el]:u64
000197aa: R24 := mem[R31 + 0x38, el]:u64
000197b2: R25 := mem[R31 + 0x40, el]:u64
000197b9: call R30 with noreturn

000387a5: sub md5_buffer(md5_buffer_result)
00038b1b: md5_buffer_result :: out u32 = low:32[R0]

00012b4f:
00012b57: mem := mem with [R31 - 0xF0, el]:u64 <- R29
00012b5b: mem := mem with [R31 - 0xE8, el]:u64 <- R30
00012b5e: R31 := R31 - 0xF0
00012b64: R3 := 0x11000
00012b6b: R29 := R31
00012b74: mem := mem with [R31, el]:u64 <- R31 + 0x20
00012b78: mem := mem with [R31, el]:u64 <- R31 + 0x28
00012b7e: R19 := 0x27000
00012b86: R20 := R2
00012b91: mem := mem with [R31, el]:u64 <- R31 + 0x40
00012b95: mem := mem with [R31, el]:u64 <- R31 + 0x48
00012b9c: R22 := R31 + 0x40
00012ba4: R3 := mem[R19 + 0xFB8, el]:u64
00012bac: R2 := R22
00012bb4: R21 := 0x40
00012bbc: R4 := mem[R3, el]:u64
00012bc4: mem := mem with [R31 + 0xE8, el]:u64 <- R4
00012bca: R4 := 0
00012bd2: mem := mem with [R31 + 0x30, el]:u64 <- R23
00012bda: mem := mem with [R31 + 0x50, el]:u64 <- 0
00012be2: mem := mem with [R31 + 0x58, el]:u32 <- 0
00012be7: R30 := 0xA098
00012be9: call @md5_process_bytes with return %00012beb

00012beb:
00012bf1: R3 := 0x80
00012bf7: R1 := 0x78
00012bfd: R2 := 0x38
00012c04: #4457 := 0xFFFFFFFFFFFFFFC8 + extend:64[31:0[R0]]
00012c08: NF := 63:63[#4457]
00012c0b: VF := 31:31[R0] & ~63:63[#4457]
00012c0e: ZF := #4457 = 0
00012c11: CF := 31:31[R0] | 31:31[R0] & ~63:63[#4457] | ~63:63[#4457]
00012c1a: R4 := 0xF
00012c30: #4459 := ~CF <> 0
00012c31: goto %00012c28

00012c28:
00012c2a: when #4459 goto %00012c22
00012c2b: goto %00012c25

00012c25:
00012c26: R21 := R3
00012c2d: goto %00012c29

00012c22:
00012c23: R21 := R21
00012c2c: goto %00012c29

00012c29:
00012c3b: R3 := pad:64[mem[R31 + 0x50, el]:u32]
00012c51: #4461 := ~CF <> 0
00012c52: goto %00012c49

00012c49:
00012c4b: when #4461 goto %00012c43
00012c4c: goto %00012c46

00012c46:
00012c47: R2 := R1
00012c4e: goto %00012c4a

00012c43:
00012c44: R2 := R2
00012c4d: goto %00012c4a

00012c4a:
00012c59: R1 := 0x1F
00012c5f: R5 := 0xE
00012c75: #4463 := ~CF <> 0
00012c76: goto %00012c6d

00012c6d:
00012c6f: when #4463 goto %00012c67
00012c70: goto %00012c6a

00012c6a:
00012c6b: R4 := R1
00012c72: goto %00012c6e

00012c67:
00012c68: R4 := R4
00012c71: goto %00012c6e

00012c6e:
00012c7d: R1 := 0x1E
00012c93: #4465 := ~CF <> 0
00012c94: goto %00012c8b

00012c8b:
00012c8d: when #4465 goto %00012c85
00012c8e: goto %00012c88

00012c88:
00012c89: R5 := R1
00012c90: goto %00012c8c

00012c85:
00012c86: R5 := R5
00012c8f: goto %00012c8c

00012c8c:
00012c9f: mem := mem with [R31 + 0x50, el]:u32 <- 31:0[R3]
00012cab: #4468 := ~CF <> 0
00012ca5: when #4468 goto %00012ca3
000387a9: goto %0001723d

0001723d:
00017243: R6 := extend:64[31:0[R6]] + 1
0001724b: mem := mem with [R31 + 0x54, el]:u32 <- 31:0[R6]
000387a8: goto %00012ca3

00012ca3:
00012cb2: R7 := R31 + 0x4C
00012cb9: R5 := R5 + 4
00012cc1: R8 := 31:0[R3] << 0x23
00012cc8: R4 := R4 + 4
00012cd1: R0 := 31:0[R0]
00012cda: R23 := R22 + 0x1C
00012ce0: R1 := 0x11000
00012ce7: R1 := R1 + 0x8E0
00012cf1: R2 := R2 - R0
00012cf8: R1 := R1 + 0xA90
00012d00: R0 := R23 + R0
00012d07: R30 := 0xA120
00012d09: call @memcpy with return %00012d0b

00012d0b:
00012d11: R1 := R21
00012d19: R0 := R23
00012d21: R2 := R22
00012d26: R30 := 0xA130
00012d28: call @md5_process_block with return %00012d2a

00012d2a:
00012d32: R19 := mem[R19 + 0xFB8, el]:u64
00012d3a: R0 := mem[R31 + 0xE8, el]:u64
00012d42: R1 := mem[R19, el]:u64
00012d4a: #4492 := 1 + ~R1 + R0
00012d4e: NF := 63:63[#4492]
00012d51: VF := 63:63[R0] & 63:63[~R1] & ~63:63[#4492] | ~63:63[R0] &
          ~63:63[~R1] & 63:63[#4492]
00012d54: ZF := #4492 = 0
00012d57: CF := 63:63[R0] & 63:63[~R1] | 63:63[~R1] & ~63:63[#4492] |
          63:63[R0] & ~63:63[#4492]
00012d5b: R0 := #4492
00012d61: R1 := 0
00012d6f: #4494 := ~ZF <> 0
00012d69: when #4494 goto %00012d67
000387a7: goto %000171fd

00012d67:
00012d74: R30 := 0xA16C
00012d76: call @__stack_chk_fail with return %00012d78

00012d78:
000387a6: call @config_open with noreturn

000171fd:
00017203: R0 := R20
0001720c: R19 := mem[R31 + 0x10, el]:u64
00017210: R20 := mem[R31 + 0x18, el]:u64
00017219: R21 := mem[R31 + 0x20, el]:u64
0001721d: R22 := mem[R31 + 0x28, el]:u64
00017225: R23 := mem[R31 + 0x30, el]:u64
0001722f: R29 := mem[R31, el]:u64
00017233: R30 := mem[R31 + 8, el]:u64
00017236: R31 := R31 + 0xF0
0001723b: call R30 with noreturn

000387aa: sub md5_finish_ctx(md5_finish_ctx_result)
00038b1c: md5_finish_ctx_result :: out u32 = low:32[R0]

000120f1:
000120f9: mem := mem with [R31 - 0x30, el]:u64 <- R29
000120fd: mem := mem with [R31 - 0x28, el]:u64 <- R30
00012100: R31 := R31 - 0x30
00012106: R9 := 0x80
0001210c: R2 := 0x38
00012113: R29 := R31
0001211c: R3 := pad:64[mem[R0 + 0x18, el]:u32]
00012122: R8 := 0x78
0001212b: mem := mem with [R31, el]:u64 <- R31 + 0x20
0001212f: mem := mem with [R31, el]:u64 <- R31 + 0x28
00012137: R19 := R0
00012140: R0 := pad:64[mem[R0 + 0x10, el]:u32]
00012147: #3952 := 0xFFFFFFFFFFFFFFC8 + extend:64[31:0[R3]]
0001214b: NF := 63:63[#3952]
0001214e: VF := 31:31[R3] & ~63:63[#3952]
00012151: ZF := #3952 = 0
00012154: CF := 31:31[R3] | 31:31[R3] & ~63:63[#3952] | ~63:63[#3952]
00012160: mem := mem with [R31, el]:u64 <- R31 + 0x40
00012164: mem := mem with [R31, el]:u64 <- R31 + 0x48
0001217a: #3955 := ~CF <> 0
0001217b: goto %00012172

00012172:
00012174: when #3955 goto %0001216c
00012175: goto %0001216f

0001216f:
00012170: R2 := R8
00012177: goto %00012173

0001216c:
0001216d: R2 := R2
00012176: goto %00012173

00012173:
00012182: R21 := 0x40
00012188: R4 := 0xF
0001219e: #3957 := ~CF <> 0
0001219f: goto %00012196

00012196:
00012198: when #3957 goto %00012190
00012199: goto %00012193

00012193:
00012194: R21 := R9
0001219b: goto %00012197

00012190:
00012191: R21 := R21
0001219a: goto %00012197

00012197:
000121a6: R7 := 0x1F
000121ac: R5 := 0xE
000121c2: #3959 := ~CF <> 0
000121c3: goto %000121ba

000121ba:
000121bc: when #3959 goto %000121b4
000121bd: goto %000121b7

000121b7:
000121b8: R4 := R7
000121bf: goto %000121bb

000121b4:
000121b5: R4 := R4
000121be: goto %000121bb

000121bb:
000121ca: R6 := 0x1E
000121e0: #3961 := ~CF <> 0
000121e1: goto %000121d8

000121d8:
000121da: when #3961 goto %000121d2
000121db: goto %000121d5

000121d5:
000121d6: R5 := R6
000121dd: goto %000121d9

000121d2:
000121d3: R5 := R5
000121dc: goto %000121d9

000121d9:
000121ec: mem := mem with [R19 + 0x10, el]:u32 <- 31:0[R0]
000121f4: R20 := R1
000121fd: R1 := pad:64[mem[R19 + 0x14, el]:u32]
00012209: #3967 := ~CF <> 0
00012203: when #3967 goto %00012201
000387ac: goto %00017ec5

00017ec5:
00017ecb: R1 := extend:64[31:0[R1]] + 1
00017ed3: mem := mem with [R19 + 0x14, el]:u32 <- 31:0[R1]
000387ab: goto %00012201

00012201:
00012211: R5 := R19 + (R5 << 2)
00012219: R4 := R19 + (R4 << 2)
00012221: R7 := 31:0[R0] << 0x23
0001222a: R22 := R19 + 0x1C
00012233: R0 := 31:0[R3]
0001223b: mem := mem with [R5 + 0x1C, el]:u32 <- 31:0[R7]
00012241: R1 := 0x11000
00012249: mem := mem with [R4 + 0x1C, el]:u32 <- 31:0[R6]
00012250: R1 := R1 + 0x8E0
00012258: R2 := R2 - R0
0001225f: R1 := R1 + 0xA90
00012267: R0 := R22 + R0
0001226c: R30 := 0x9734
0001226e: call @memcpy with return %00012270

00012270:
00012276: R2 := R19
0001227e: R1 := R21
00012286: R0 := R22
0001228b: R30 := 0x9744
0001228d: call @md5_process_block with return %0001228f

0001228f:
00012296: R1 := pad:64[mem[R19, el]:u32]
0001229e: R0 := R20
000122a7: R21 := mem[R31 + 0x20, el]:u64
000122ab: R22 := mem[R31 + 0x28, el]:u64
000122b3: mem := mem with [R20, el]:u32 <- 31:0[R1]
000122bc: R1 := pad:64[mem[R19 + 4, el]:u32]
000122c4: mem := mem with [R20 + 4, el]:u32 <- 31:0[R1]
000122cd: R1 := pad:64[mem[R19 + 8, el]:u32]
000122d5: mem := mem with [R20 + 8, el]:u32 <- 31:0[R1]
000122de: R1 := pad:64[mem[R19 + 0xC, el]:u32]
000122e6: mem := mem with [R20 + 0xC, el]:u32 <- 31:0[R1]
000122ef: R19 := mem[R31 + 0x10, el]:u64
000122f3: R20 := mem[R31 + 0x18, el]:u64
000122fd: R29 := mem[R31, el]:u64
00012301: R30 := mem[R31 + 8, el]:u64
00012304: R31 := R31 + 0x30
00012309: call R30 with noreturn

000387ad: sub md5_init_ctx(md5_init_ctx_result)
00038b1d: md5_init_ctx_result :: out u32 = low:32[R0]

00011fbd:
00011fc1: R1 := 0x11000
00011fc9: mem := mem with [R0 + 0x10, el]:u64 <- 0
00011fd1: mem := mem with [R0 + 0x18, el]:u32 <- 0
00011fda: call R30 with noreturn

000387ae: sub md5_process_block(md5_process_block_result)
00038b1e: md5_process_block_result :: out u32 = low:32[R0]

00012037:
0001203f: mem := mem with [R31 - 0x60, el]:u64 <- R29
00012043: mem := mem with [R31 - 0x58, el]:u64 <- R30
00012046: R31 := R31 - 0x60
0001204d: R29 := R31
00012056: R3 := pad:64[mem[R2 + 0x10, el]:u32]
0001205f: mem := mem with [R31, el]:u64 <- R31 + 0x80
00012063: mem := mem with [R31, el]:u64 <- R31 + 0x88
0001206a: R26 := R1 & 0xFFFFFFFFFFFFFFFC
00012073: R3 := 31:0[R3] + 31:0[R1]
0001207b: mem := mem with [R2 + 0x10, el]:u32 <- 31:0[R3]
00012083: R26 := R0 + R26
0001208c: R10 := pad:64[mem[R2 + 4, el]:u32]
0001209f: #3938 := (~CF | ZF) <> 0
00012099: when #3938 goto %00012097
000387b4: goto %00019234

00019234:
0001923b: R1 := pad:64[mem[R2 + 0x14, el]:u32]
00019243: R1 := extend:64[31:0[R1]] + 1
0001924b: mem := mem with [R2 + 0x14, el]:u32 <- 31:0[R1]
000387b3: goto %00012097

00012097:
000120a7: #3942 := 1 + ~R26 + R0
000120ab: NF := 63:63[#3942]
000120ae: VF := 63:63[R0] & 63:63[~R26] & ~63:63[#3942] | ~63:63[R0] &
          ~63:63[~R26] & 63:63[#3942]
000120b1: ZF := #3942 = 0
000120b4: CF := 63:63[R0] & 63:63[~R26] | 63:63[~R26] & ~63:63[#3942] |
          63:63[R0] & ~63:63[#3942]
000120c2: #3944 := CF
000120bc: when #3944 goto %000120ba
000387b2: goto %00017ed5

00017ed5:
00017edc: mem := mem with [R31, el]:u64 <- R31 + 0xA0
00017ee0: mem := mem with [R31, el]:u64 <- R31 + 0xA8
00017ee7: R28 := 0xA478
00017eee: R27 := 0xB756
00017ef5: R28 := high:32[R28].extend:64[31:0[R28]] & 0xFFFFFFFF0000FFFF |
          0xD76A0000
00017efc: R27 := high:32[R27].extend:64[31:0[R27]] & 0xFFFFFFFF0000FFFF |
          0xE8C70000
00017f05: mem := mem with [R31, el]:u64 <- R31 + 0x20
00017f09: mem := mem with [R31, el]:u64 <- R31 + 0x28
00017f12: mem := mem with [R31, el]:u64 <- R31 + 0x40
00017f16: mem := mem with [R31, el]:u64 <- R31 + 0x48
00017f1f: mem := mem with [R31, el]:u64 <- R31 + 0x60
00017f23: mem := mem with [R31, el]:u64 <- R31 + 0x68
000387b1: goto %00017f25

00017f25:
00017f36: R6 := 0x70DB
00017f3f: R1 := 31:0[R1] + 31:0[R28]
00017f46: R6 := high:32[R6].extend:64[31:0[R6]] & 0xFFFFFFFF0000FFFF |
          0x24200000
00017f51: R6 := 31:0[R7] + 31:0[R6]
00017f5a: R4 := 31:0[R4] & 31:0[R10]
00017f63: R14 := pad:64[mem[R0 + 0x20, el]:u32]
00017f6c: R4 := 31:0[R4] ^ 31:0[R3]
00017f77: R4 := 31:0[R4] + 31:0[R19]
00017f80: R4 := 31:0[R4] + 31:0[R1]
00017f8f: R4 := 31:0[R4] + 31:0[R10]
00017f98: R3 := 31:0[R10] ^ 31:0[R3]
00017fa1: R3 := 31:0[R3] & 31:0[R4]
00017faa: R5 := 31:0[R1] + 31:0[R27]
00017fb3: R3 := 31:0[R3] ^ 31:0[R7]
00017fbc: R1 := 31:0[R4] ^ 31:0[R10]
00017fc5: R3 := 31:0[R3] + 31:0[R15]
00017fcc: R7 := 0xCEEE
00017fd5: R3 := 31:0[R3] + 31:0[R5]
00017fdc: R5 := 0xFAF
00017fe3: R5 := high:32[R5].extend:64[31:0[R5]] & 0xFFFFFFFF0000FFFF |
          0xF57C0000
00017fec: R25 := 31:0[R11] + 31:0[R5]
00017ff3: R5 := 0xC62A
00017ffe: R3 := 31:0[R4] + 31:0[R3]
00018005: R5 := high:32[R5].extend:64[31:0[R5]] & 0xFFFFFFFF0000FFFF |
          0x47870000
0001800e: R1 := 31:0[R1] & 31:0[R3]
00018017: R23 := 31:0[R17] + 31:0[R5]
00018020: R1 := 31:0[R1] ^ 31:0[R10]
00018029: R5 := 31:0[R4] ^ 31:0[R3]
00018032: R1 := 31:0[R1] + 31:0[R8]
00018039: R7 := high:32[R7].extend:64[31:0[R7]] & 0xFFFFFFFF0000FFFF |
          0xC1BD0000
00018042: R1 := 31:0[R1] + 31:0[R6]
0001804b: R9 := 31:0[R10] + 31:0[R7]
00018058: R1 := 31:0[R3] + 31:0[R1]
0001805f: R7 := 0x4613
00018068: R5 := 31:0[R5] & 31:0[R1]
00018071: R21 := 31:0[R3] ^ 31:0[R1]
0001807a: R5 := 31:0[R5] ^ 31:0[R4]
00018081: R7 := high:32[R7].extend:64[31:0[R7]] & 0xFFFFFFFF0000FFFF |
          0xA8300000
0001808a: R5 := 31:0[R5] + 31:0[R16]
00018093: R20 := 31:0[R13] + 31:0[R7]
0001809c: R5 := 31:0[R5] + 31:0[R9]
000180a3: R6 := 0x9501
000180aa: R6 := high:32[R6].extend:64[31:0[R6]] & 0xFFFFFFFF0000FFFF |
          0xFD460000
000180b3: R22 := 31:0[R18] + 31:0[R6]
000180ba: R6 := 0x98D8
000180c5: R5 := 31:0[R1] + 31:0[R5]
000180cc: R6 := high:32[R6].extend:64[31:0[R6]] & 0xFFFFFFFF0000FFFF |
          0x69800000
000180d5: R21 := 31:0[R21] & 31:0[R5]
000180de: R30 := 31:0[R1] ^ 31:0[R5]
000180e7: R21 := 31:0[R21] ^ 31:0[R3]
000180f0: R12 := 31:0[R14] + 31:0[R6]
000180f9: R4 := 31:0[R21] + 31:0[R4]
00018102: R7 := pad:64[mem[R0 + 0x24, el]:u32]
0001810b: R4 := 31:0[R25] + 31:0[R4]
00018112: R6 := 0xF7AF
00018119: R6 := high:32[R6].extend:64[31:0[R6]] & 0xFFFFFFFF0000FFFF |
          0x8B440000
00018122: R24 := 31:0[R7] + 31:0[R6]
0001812b: R6 := pad:64[mem[R0 + 0x28, el]:u32]
00018136: R4 := 31:0[R5] + 31:0[R4]
0001813d: R21 := 0xFFFFFFFFFFFF5BB1
00018146: R25 := 31:0[R30] & 31:0[R4]
0001814f: R21 := 31:0[R6] + 31:0[R21]
00018158: R25 := 31:0[R25] ^ 31:0[R1]
00018161: R3 := 31:0[R25] + 31:0[R3]
0001816a: R25 := 31:0[R5] ^ 31:0[R4]
00018173: R3 := 31:0[R23] + 31:0[R3]
0001817a: R23 := 0xD7BE
00018181: R23 := high:32[R23].extend:64[31:0[R23]] & 0xFFFFFFFF0000FFFF |
          0x895C0000
0001818c: R3 := 31:0[R4] + 31:0[R3]
00018195: R25 := 31:0[R25] & 31:0[R3]
0001819e: R25 := 31:0[R25] ^ 31:0[R5]
000181a7: R1 := 31:0[R25] + 31:0[R1]
000181b0: R25 := 31:0[R4] ^ 31:0[R3]
000181b9: R1 := 31:0[R20] + 31:0[R1]
000181c6: R1 := 31:0[R3] + 31:0[R1]
000181cf: R25 := 31:0[R25] & 31:0[R1]
000181d8: R23 := 31:0[R9] + 31:0[R23]
000181e1: R25 := 31:0[R25] ^ 31:0[R4]
000181ea: R5 := 31:0[R25] + 31:0[R5]
000181f3: R25 := 31:0[R3] ^ 31:0[R1]
000181fc: R5 := 31:0[R22] + 31:0[R5]
00018203: R22 := 0x1122
0001820a: R22 := high:32[R22].extend:64[31:0[R22]] & 0xFFFFFFFF0000FFFF |
          0x6B900000
00018213: R22 := 31:0[R20] + 31:0[R22]
0001821e: R5 := 31:0[R1] + 31:0[R5]
00018227: R25 := 31:0[R25] & 31:0[R5]
00018230: R25 := 31:0[R25] ^ 31:0[R3]
00018239: R4 := 31:0[R25] + 31:0[R4]
00018242: R25 := 31:0[R1] ^ 31:0[R5]
0001824b: R4 := 31:0[R12] + 31:0[R4]
00018254: R12 := pad:64[mem[R0 + 0x34, el]:u32]
0001825f: R4 := 31:0[R5] + 31:0[R4]
00018268: R25 := 31:0[R25] & 31:0[R4]
00018271: R30 := 31:0[R5] ^ 31:0[R4]
0001827a: R25 := 31:0[R25] ^ 31:0[R1]
00018283: R3 := 31:0[R25] + 31:0[R3]
0001828c: R24 := 31:0[R24] + 31:0[R3]
00018293: R3 := 0x7193
0001829a: R3 := high:32[R3].extend:64[31:0[R3]] & 0xFFFFFFFF0000FFFF |
          0xFD980000
000182a3: R25 := 31:0[R12] + 31:0[R3]
000182aa: R3 := 0x438E
000182b5: R24 := 31:0[R4] + 31:0[R24]
000182bc: R3 := high:32[R3].extend:64[31:0[R3]] & 0xFFFFFFFF0000FFFF |
          0xA6790000
000182c5: R30 := 31:0[R30] & 31:0[R24]
000182ce: R30 := 31:0[R30] ^ 31:0[R5]
000182d7: R30 := 31:0[R30] + 31:0[R1]
000182e0: R1 := 31:0[R4] ^ 31:0[R24]
000182e9: R30 := 31:0[R21] + 31:0[R30]
000182f4: R30 := 31:0[R24] + 31:0[R30]
000182fd: R1 := 31:0[R1] & 31:0[R30]
00018306: R1 := 31:0[R1] ^ 31:0[R4]
0001830f: R5 := 31:0[R1] + 31:0[R5]
00018318: R1 := 31:0[R24] ^ 31:0[R30]
00018321: R23 := 31:0[R23] + 31:0[R5]
0001832c: R23 := 31:0[R30] + 31:0[R23]
00018335: R1 := 31:0[R1] & 31:0[R23]
0001833e: R1 := 31:0[R1] ^ 31:0[R24]
00018347: R1 := 31:0[R1] + 31:0[R4]
00018350: R4 := 31:0[R30] ^ 31:0[R23]
00018359: R22 := 31:0[R22] + 31:0[R1]
00018366: R22 := 31:0[R23] + 31:0[R22]
0001836d: R0 := R0 + 0x40
00018376: R4 := 31:0[R4] & 31:0[R22]
0001837f: R5 := 31:0[R23] ^ 31:0[R22]
00018388: R4 := 31:0[R4] ^ 31:0[R30]
00018391: R3 := 31:0[R21] + 31:0[R3]
0001839a: R24 := 31:0[R4] + 31:0[R24]
000183a1: R4 := 0x821
000183aa: R25 := 31:0[R25] + 31:0[R24]
000183b1: R4 := high:32[R4].extend:64[31:0[R4]] & 0xFFFFFFFF0000FFFF |
          0x49B40000
000183ba: R4 := 31:0[R1] + 31:0[R4]
000183c2: #6933 := 1 + ~R0 + R26
000183c6: NF := 63:63[#6933]
000183c9: VF := 63:63[R26] & 63:63[~R0] & ~63:63[#6933] | ~63:63[R26] &
          ~63:63[~R0] & 63:63[#6933]
000183cc: ZF := #6933 = 0
000183cf: CF := 63:63[R26] & 63:63[~R0] | 63:63[~R0] & ~63:63[#6933] |
          63:63[R26] & ~63:63[#6933]
000183dc: R25 := 31:0[R22] + 31:0[R25]
000183e5: R5 := 31:0[R5] & 31:0[R25]
000183ee: R5 := 31:0[R5] ^ 31:0[R23]
000183f7: R30 := 31:0[R5] + 31:0[R30]
00018400: R5 := 31:0[R22] ^ 31:0[R25]
00018409: R30 := 31:0[R3] + 31:0[R30]
00018410: R3 := 0x2562
00018417: R3 := high:32[R3].extend:64[31:0[R3]] & 0xFFFFFFFF0000FFFF |
          0xF61E0000
00018420: R24 := 31:0[R15] + 31:0[R3]
0001842b: R30 := 31:0[R25] + 31:0[R30]
00018434: R3 := 31:0[R5] & 31:0[R30]
0001843d: R3 := 31:0[R3] ^ 31:0[R22]
00018446: R23 := 31:0[R3] + 31:0[R23]
0001844d: R3 := 0xB340
00018456: R23 := 31:0[R4] + 31:0[R23]
0001845d: R3 := high:32[R3].extend:64[31:0[R3]] & 0xFFFFFFFF0000FFFF |
          0xC0400000
00018466: R5 := 31:0[R13] + 31:0[R3]
0001846d: R3 := 0x5A51
00018474: R3 := high:32[R3].extend:64[31:0[R3]] & 0xFFFFFFFF0000FFFF |
          0x265E0000
0001847f: R23 := 31:0[R30] + 31:0[R23]
00018488: R4 := 31:0[R9] + 31:0[R3]
00018491: R3 := 31:0[R30] ^ 31:0[R23]
0001849a: R3 := 31:0[R3] & 31:0[R25]
000184a3: R3 := 31:0[R3] ^ 31:0[R30]
000184ac: R22 := 31:0[R3] + 31:0[R22]
000184b3: R3 := 0xC7AA
000184bc: R24 := 31:0[R24] + 31:0[R22]
000184c3: R3 := high:32[R3].extend:64[31:0[R3]] & 0xFFFFFFFF0000FFFF |
          0xE9B60000
000184cc: R22 := 31:0[R19] + 31:0[R3]
000184d7: R24 := 31:0[R23] + 31:0[R24]
000184e0: R3 := 31:0[R23] ^ 31:0[R24]
000184e9: R3 := 31:0[R3] & 31:0[R30]
000184f2: R3 := 31:0[R3] ^ 31:0[R23]
000184fb: R25 := 31:0[R3] + 31:0[R25]
00018502: R3 := 0x105D
0001850b: R5 := 31:0[R5] + 31:0[R25]
00018512: R3 := high:32[R3].extend:64[31:0[R3]] & 0xFFFFFFFF0000FFFF |
          0xD62F0000
0001851b: R3 := 31:0[R17] + 31:0[R3]
00018526: R5 := 31:0[R24] + 31:0[R5]
0001852f: R25 := 31:0[R24] ^ 31:0[R5]
00018538: R25 := 31:0[R25] & 31:0[R23]
00018541: R25 := 31:0[R25] ^ 31:0[R24]
0001854a: R30 := 31:0[R25] + 31:0[R30]
00018553: R30 := 31:0[R4] + 31:0[R30]
0001855a: R4 := 0x1453
00018561: R4 := high:32[R4].extend:64[31:0[R4]] & 0xFFFFFFFF0000FFFF |
          0x2440000
0001856a: R25 := 31:0[R6] + 31:0[R4]
00018575: R30 := 31:0[R5] + 31:0[R30]
0001857e: R4 := 31:0[R5] ^ 31:0[R30]
00018587: R4 := 31:0[R4] & 31:0[R24]
00018590: R4 := 31:0[R4] ^ 31:0[R5]
00018599: R23 := 31:0[R4] + 31:0[R23]
000185a0: R4 := 0xE681
000185a9: R22 := 31:0[R22] + 31:0[R23]
000185b0: R4 := high:32[R4].extend:64[31:0[R4]] & 0xFFFFFFFF0000FFFF |
          0xD8A10000
000185b9: R4 := 31:0[R1] + 31:0[R4]
000185c4: R22 := 31:0[R30] + 31:0[R22]
000185cd: R23 := 31:0[R30] ^ 31:0[R22]
000185d6: R23 := 31:0[R23] & 31:0[R5]
000185df: R23 := 31:0[R23] ^ 31:0[R30]
000185e8: R24 := 31:0[R23] + 31:0[R24]
000185f1: R24 := 31:0[R3] + 31:0[R24]
000185f8: R3 := 0xFBC8
000185ff: R3 := high:32[R3].extend:64[31:0[R3]] & 0xFFFFFFFF0000FFFF |
          0xE7D30000
00018608: R23 := 31:0[R11] + 31:0[R3]
00018613: R24 := 31:0[R22] + 31:0[R24]
0001861c: R3 := 31:0[R22] ^ 31:0[R24]
00018625: R3 := 31:0[R3] & 31:0[R30]
0001862e: R3 := 31:0[R3] ^ 31:0[R22]
00018637: R5 := 31:0[R3] + 31:0[R5]
0001863e: R3 := 0xCDE6
00018647: R25 := 31:0[R25] + 31:0[R5]
0001864e: R3 := high:32[R3].extend:64[31:0[R3]] & 0xFFFFFFFF0000FFFF |
          0x21E10000
00018657: R3 := 31:0[R7] + 31:0[R3]
00018662: R25 := 31:0[R24] + 31:0[R25]
0001866b: R5 := 31:0[R24] ^ 31:0[R25]
00018674: R5 := 31:0[R5] & 31:0[R22]
0001867d: R5 := 31:0[R5] ^ 31:0[R24]
00018686: R30 := 31:0[R5] + 31:0[R30]
0001868f: R30 := 31:0[R4] + 31:0[R30]
00018696: R4 := 0x7D6
0001869d: R4 := high:32[R4].extend:64[31:0[R4]] & 0xFFFFFFFF0000FFFF |
          0xC3370000
000186a6: R5 := 31:0[R21] + 31:0[R4]
000186b1: R30 := 31:0[R25] + 31:0[R30]
000186ba: R4 := 31:0[R25] ^ 31:0[R30]
000186c3: R4 := 31:0[R4] & 31:0[R24]
000186cc: R4 := 31:0[R4] ^ 31:0[R25]
000186d5: R22 := 31:0[R4] + 31:0[R22]
000186dc: R4 := 0xD87
000186e5: R23 := 31:0[R23] + 31:0[R22]
000186ec: R4 := high:32[R4].extend:64[31:0[R4]] & 0xFFFFFFFF0000FFFF |
          0xF4D50000
000186f5: R4 := 31:0[R16] + 31:0[R4]
00018700: R23 := 31:0[R30] + 31:0[R23]
00018709: R22 := 31:0[R30] ^ 31:0[R23]
00018712: R22 := 31:0[R22] & 31:0[R25]
0001871b: R22 := 31:0[R22] ^ 31:0[R30]
00018724: R24 := 31:0[R22] + 31:0[R24]
0001872b: R22 := 0x14ED
00018734: R24 := 31:0[R3] + 31:0[R24]
0001873b: R22 := high:32[R22].extend:64[31:0[R22]] & 0xFFFFFFFF0000FFFF |
          0x455A0000
00018744: R22 := 31:0[R14] + 31:0[R22]
0001874f: R24 := 31:0[R23] + 31:0[R24]
00018758: R3 := 31:0[R23] ^ 31:0[R24]
00018761: R3 := 31:0[R3] & 31:0[R30]
0001876a: R3 := 31:0[R3] ^ 31:0[R23]
00018773: R25 := 31:0[R3] + 31:0[R25]
0001877a: R3 := 0xE905
00018783: R5 := 31:0[R5] + 31:0[R25]
0001878a: R3 := high:32[R3].extend:64[31:0[R3]] & 0xFFFFFFFF0000FFFF |
          0xA9E30000
00018793: R3 := 31:0[R12] + 31:0[R3]
0001879e: R5 := 31:0[R24] + 31:0[R5]
000187a7: R25 := 31:0[R24] ^ 31:0[R5]
000187b0: R25 := 31:0[R25] & 31:0[R23]
000187b9: R25 := 31:0[R25] ^ 31:0[R24]
000187c2: R30 := 31:0[R25] + 31:0[R30]
000187c9: R25 := 0xA3F8
000187d2: R4 := 31:0[R4] + 31:0[R30]
000187d9: R25 := high:32[R25].extend:64[31:0[R25]] & 0xFFFFFFFF0000FFFF |
          0xFCEF0000
000187e2: R25 := 31:0[R8] + 31:0[R25]
000187ed: R4 := 31:0[R5] + 31:0[R4]
000187f6: R30 := 31:0[R5] ^ 31:0[R4]
000187ff: R30 := 31:0[R30] & 31:0[R24]
00018808: R30 := 31:0[R30] ^ 31:0[R5]
00018811: R23 := 31:0[R30] + 31:0[R23]
00018818: R30 := 0x2D9
00018821: R23 := 31:0[R22] + 31:0[R23]
00018828: R30 := high:32[R30].extend:64[31:0[R30]] & 0xFFFFFFFF0000FFFF |
          0x676F0000
00018831: R30 := 31:0[R18] + 31:0[R30]
0001883c: R23 := 31:0[R4] + 31:0[R23]
00018845: R22 := 31:0[R4] ^ 31:0[R23]
0001884e: R22 := 31:0[R22] & 31:0[R5]
00018857: R22 := 31:0[R22] ^ 31:0[R4]
00018860: R24 := 31:0[R22] + 31:0[R24]
00018867: R22 := 0x4C8A
00018870: R3 := 31:0[R3] + 31:0[R24]
00018877: R22 := high:32[R22].extend:64[31:0[R22]] & 0xFFFFFFFF0000FFFF |
          0x8D2A0000
00018880: R22 := 31:0[R20] + 31:0[R22]
0001888b: R3 := 31:0[R23] + 31:0[R3]
00018894: R24 := 31:0[R23] ^ 31:0[R3]
0001889d: R24 := 31:0[R24] & 31:0[R4]
000188a6: R24 := 31:0[R24] ^ 31:0[R23]
000188af: R5 := 31:0[R24] + 31:0[R5]
000188b8: R25 := 31:0[R25] + 31:0[R5]
000188c0: R5 := extend:64[31:0[R17]] - 0x5C000
000188c8: R5 := extend:64[31:0[R5]] - 0x6BE
000188d3: R25 := 31:0[R3] + 31:0[R25]
000188dc: R24 := 31:0[R3] ^ 31:0[R25]
000188e5: R24 := 31:0[R24] & 31:0[R23]
000188ee: R24 := 31:0[R24] ^ 31:0[R3]
000188f7: R4 := 31:0[R24] + 31:0[R4]
00018900: R4 := 31:0[R30] + 31:0[R4]
0001890b: R24 := 31:0[R25] + 31:0[R24]
00018914: R4 := 31:0[R25] ^ 31:0[R24]
0001891d: R30 := 31:0[R4] & 31:0[R3]
00018926: R30 := 31:0[R30] ^ 31:0[R25]
0001892f: R23 := 31:0[R30] + 31:0[R23]
00018936: R30 := 0xF681
0001893f: R22 := 31:0[R22] + 31:0[R23]
00018946: R30 := high:32[R30].extend:64[31:0[R30]] & 0xFFFFFFFF0000FFFF |
          0x87710000
0001894f: R30 := 31:0[R14] + 31:0[R30]
0001895a: R22 := 31:0[R24] + 31:0[R22]
00018963: R4 := 31:0[R4] ^ 31:0[R22]
0001896c: R3 := 31:0[R4] + 31:0[R3]
00018975: R4 := 31:0[R24] ^ 31:0[R22]
0001897e: R23 := 31:0[R5] + 31:0[R3]
00018985: R3 := 0x6122
0001898c: R3 := high:32[R3].extend:64[31:0[R3]] & 0xFFFFFFFF0000FFFF |
          0x6D9D0000
00018995: R3 := 31:0[R9] + 31:0[R3]
0001899c: R5 := 0x380C
000189a7: R23 := 31:0[R22] + 31:0[R23]
000189ae: R5 := high:32[R5].extend:64[31:0[R5]] & 0xFFFFFFFF0000FFFF |
          0xFDE50000
000189b7: R4 := 31:0[R4] ^ 31:0[R23]
000189c0: R5 := 31:0[R21] + 31:0[R5]
000189c9: R25 := 31:0[R4] + 31:0[R25]
000189d2: R4 := 31:0[R22] ^ 31:0[R23]
000189db: R30 := 31:0[R30] + 31:0[R25]
000189e2: R25 := 0xEA44
000189e9: R25 := high:32[R25].extend:64[31:0[R25]] & 0xFFFFFFFF0000FFFF |
          0xA4BE0000
000189f2: R25 := 31:0[R15] + 31:0[R25]
000189fd: R30 := 31:0[R23] + 31:0[R30]
00018a06: R4 := 31:0[R4] ^ 31:0[R30]
00018a0f: R4 := 31:0[R4] + 31:0[R24]
00018a18: R24 := 31:0[R23] ^ 31:0[R30]
00018a21: R4 := 31:0[R3] + 31:0[R4]
00018a2c: R4 := 31:0[R30] + 31:0[R4]
00018a35: R3 := 31:0[R24] ^ 31:0[R4]
00018a3c: R24 := 0x4B60
00018a45: R3 := 31:0[R3] + 31:0[R22]
00018a4e: R22 := 31:0[R30] ^ 31:0[R4]
00018a57: R5 := 31:0[R5] + 31:0[R3]
00018a5e: R3 := 0xCFA9
00018a65: R3 := high:32[R3].extend:64[31:0[R3]] & 0xFFFFFFFF0000FFFF |
          0x4BDE0000
00018a6e: R3 := 31:0[R11] + 31:0[R3]
00018a75: R24 := high:32[R24].extend:64[31:0[R24]] & 0xFFFFFFFF0000FFFF |
          0xF6BB0000
00018a80: R5 := 31:0[R4] + 31:0[R5]
00018a89: R24 := 31:0[R18] + 31:0[R24]
00018a92: R22 := 31:0[R22] ^ 31:0[R5]
00018a9b: R23 := 31:0[R22] + 31:0[R23]
00018aa4: R22 := 31:0[R4] ^ 31:0[R5]
00018aad: R25 := 31:0[R25] + 31:0[R23]
00018ab4: R23 := 0xBC70
00018abb: R23 := high:32[R23].extend:64[31:0[R23]] & 0xFFFFFFFF0000FFFF |
          0xBEBF0000
00018ac4: R23 := 31:0[R6] + 31:0[R23]
00018acc: R6 := extend:64[31:0[R6]] - 0x100000
00018ad7: R25 := 31:0[R5] + 31:0[R25]
00018adf: R6 := extend:64[31:0[R6]] - 0xB83
00018ae8: R22 := 31:0[R22] ^ 31:0[R25]
00018af1: R30 := 31:0[R22] + 31:0[R30]
00018afa: R22 := 31:0[R5] ^ 31:0[R25]
00018b03: R3 := 31:0[R3] + 31:0[R30]
00018b0a: R30 := 0x27FA
00018b11: R30 := high:32[R30].extend:64[31:0[R30]] & 0xFFFFFFFF0000FFFF |
          0xEAA10000
00018b1a: R30 := 31:0[R19] + 31:0[R30]
00018b25: R3 := 31:0[R25] + 31:0[R3]
00018b2e: R22 := 31:0[R22] ^ 31:0[R3]
00018b37: R22 := 31:0[R22] + 31:0[R4]
00018b40: R4 := 31:0[R25] ^ 31:0[R3]
00018b49: R24 := 31:0[R24] + 31:0[R22]
00018b50: R22 := 0x7EC6
00018b57: R22 := high:32[R22].extend:64[31:0[R22]] & 0xFFFFFFFF0000FFFF |
          0x289B0000
00018b60: R22 := 31:0[R12] + 31:0[R22]
00018b6b: R24 := 31:0[R3] + 31:0[R24]
00018b74: R4 := 31:0[R4] ^ 31:0[R24]
00018b7d: R5 := 31:0[R4] + 31:0[R5]
00018b86: R4 := 31:0[R3] ^ 31:0[R24]
00018b8f: R23 := 31:0[R23] + 31:0[R5]
00018b9a: R23 := 31:0[R24] + 31:0[R23]
00018ba3: R4 := 31:0[R4] ^ 31:0[R23]
00018bac: R5 := 31:0[R24] ^ 31:0[R23]
00018bb5: R25 := 31:0[R4] + 31:0[R25]
00018bbc: R4 := 0x3085
00018bc5: R22 := 31:0[R22] + 31:0[R25]
00018bcc: R4 := high:32[R4].extend:64[31:0[R4]] & 0xFFFFFFFF0000FFFF |
          0xD4EF0000
00018bd5: R4 := 31:0[R16] + 31:0[R4]
00018bdc: R25 := 0xD039
00018be3: R25 := high:32[R25].extend:64[31:0[R25]] & 0xFFFFFFFF0000FFFF |
          0xD9D40000
00018bee: R22 := 31:0[R23] + 31:0[R22]
00018bf7: R25 := 31:0[R7] + 31:0[R25]
00018c00: R5 := 31:0[R5] ^ 31:0[R22]
00018c09: R5 := 31:0[R5] + 31:0[R3]
00018c12: R3 := 31:0[R23] ^ 31:0[R22]
00018c1b: R5 := 31:0[R30] + 31:0[R5]
00018c22: R30 := 0x1D05
00018c29: R30 := high:32[R30].extend:64[31:0[R30]] & 0xFFFFFFFF0000FFFF |
          0x4880000
00018c32: R30 := 31:0[R13] + 31:0[R30]
00018c3d: R5 := 31:0[R22] + 31:0[R5]
00018c46: R3 := 31:0[R3] ^ 31:0[R5]
00018c4f: R24 := 31:0[R3] + 31:0[R24]
00018c58: R3 := 31:0[R22] ^ 31:0[R5]
00018c61: R4 := 31:0[R4] + 31:0[R24]
00018c68: R24 := 0x99E5
00018c6f: R24 := high:32[R24].extend:64[31:0[R24]] & 0xFFFFFFFF0000FFFF |
          0xE6DB0000
00018c78: R24 := 31:0[R20] + 31:0[R24]
00018c83: R4 := 31:0[R5] + 31:0[R4]
00018c8c: R3 := 31:0[R3] ^ 31:0[R4]
00018c95: R23 := 31:0[R3] + 31:0[R23]
00018c9e: R3 := 31:0[R5] ^ 31:0[R4]
00018ca7: R23 := 31:0[R30] + 31:0[R23]
00018cae: R30 := 0xFF97
00018cb5: R30 := high:32[R30].extend:64[31:0[R30]] & 0xFFFFFFFF0000FFFF |
          0x432A0000
00018cbe: R18 := 31:0[R18] + 31:0[R30]
00018cc9: R23 := 31:0[R4] + 31:0[R23]
00018cd2: R3 := 31:0[R3] ^ 31:0[R23]
00018cdb: R22 := 31:0[R3] + 31:0[R22]
00018ce4: R3 := 31:0[R4] ^ 31:0[R23]
00018ced: R22 := 31:0[R25] + 31:0[R22]
00018cf4: R25 := 0x7CF8
00018cfb: R25 := high:32[R25].extend:64[31:0[R25]] & 0xFFFFFFFF0000FFFF |
          0x1FA20000
00018d04: R25 := 31:0[R1] + 31:0[R25]
00018d0f: R22 := 31:0[R23] + 31:0[R22]
00018d18: R3 := 31:0[R3] ^ 31:0[R22]
00018d21: R5 := 31:0[R3] + 31:0[R5]
00018d2a: R3 := 31:0[R23] ^ 31:0[R22]
00018d33: R5 := 31:0[R24] + 31:0[R5]
00018d3a: R24 := 0x5665
00018d41: R24 := high:32[R24].extend:64[31:0[R24]] & 0xFFFFFFFF0000FFFF |
          0xC4AC0000
00018d4a: R24 := 31:0[R8] + 31:0[R24]
00018d55: R5 := 31:0[R22] + 31:0[R5]
00018d5e: R3 := 31:0[R3] ^ 31:0[R5]
00018d67: R3 := 31:0[R3] + 31:0[R4]
00018d70: R4 := 31:0[R22] ^ 31:0[R5]
00018d79: R3 := 31:0[R25] + 31:0[R3]
00018d80: R25 := 0x2244
00018d87: R25 := high:32[R25].extend:64[31:0[R25]] & 0xFFFFFFFF0000FFFF |
          0xF4290000
00018d90: R19 := 31:0[R19] + 31:0[R25]
00018d97: R25 := 0x23A7
00018da2: R3 := 31:0[R5] + 31:0[R3]
00018da9: R25 := high:32[R25].extend:64[31:0[R25]] & 0xFFFFFFFF0000FFFF |
          0xAB940000
00018db2: R4 := 31:0[R4] ^ 31:0[R3]
00018dbb: R21 := 31:0[R21] + 31:0[R25]
00018dc4: R23 := 31:0[R4] + 31:0[R23]
00018dcb: R4 := 0xA039
00018dd4: R24 := 31:0[R24] + 31:0[R23]
00018ddb: R4 := high:32[R4].extend:64[31:0[R4]] & 0xFFFFFFFF0000FFFF |
          0xFC930000
00018de4: R17 := 31:0[R17] + 31:0[R4]
00018deb: R4 := 0x59C3
00018df2: R4 := high:32[R4].extend:64[31:0[R4]] & 0xFFFFFFFF0000FFFF |
          0x655B0000
00018dfd: R24 := 31:0[R3] + 31:0[R24]
00018e06: R20 := 31:0[R20] + 31:0[R4]
00018e0f: R4 := 31:0[R24] | ~31:0[R5]
00018e16: R23 := 0xCC92
00018e1f: R4 := 31:0[R4] ^ 31:0[R3]
00018e26: R23 := high:32[R23].extend:64[31:0[R23]] & 0xFFFFFFFF0000FFFF |
          0x8F0C0000
00018e2f: R22 := 31:0[R4] + 31:0[R22]
00018e36: R4 := 0x5DD1
00018e3f: R19 := 31:0[R19] + 31:0[R22]
00018e46: R4 := high:32[R4].extend:64[31:0[R4]] & 0xFFFFFFFF0000FFFF |
          0x85840000
00018e4f: R15 := 31:0[R15] + 31:0[R4]
00018e56: R4 := 0x7E4F
00018e5d: R4 := high:32[R4].extend:64[31:0[R4]] & 0xFFFFFFFF0000FFFF |
          0x6FA80000
00018e68: R19 := 31:0[R24] + 31:0[R19]
00018e71: R14 := 31:0[R14] + 31:0[R4]
00018e7a: R22 := 31:0[R19] | ~31:0[R3]
00018e81: R4 := 0xE6E0
00018e88: R4 := high:32[R4].extend:64[31:0[R4]] & 0xFFFFFFFF0000FFFF |
          0xFE2C0000
00018e91: R4 := 31:0[R1] + 31:0[R4]
00018e9a: R1 := 31:0[R22] ^ 31:0[R24]
00018ea3: R16 := 31:0[R16] + 31:0[R23]
00018eac: R5 := 31:0[R1] + 31:0[R5]
00018eb3: R22 := 0x4314
00018ebc: R18 := 31:0[R18] + 31:0[R5]
00018ec3: R22 := high:32[R22].extend:64[31:0[R22]] & 0xFFFFFFFF0000FFFF |
          0xA3010000
00018ecc: R13 := 31:0[R13] + 31:0[R22]
00018ed3: R1 := 0x11A1
00018eda: R1 := high:32[R1].extend:64[31:0[R1]] & 0xFFFFFFFF0000FFFF |
          0x4E080000
00018ee5: R18 := 31:0[R19] + 31:0[R18]
00018eee: R12 := 31:0[R12] + 31:0[R1]
00018ef7: R5 := 31:0[R18] | ~31:0[R24]
00018efe: R1 := 0x7E82
00018f07: R5 := 31:0[R5] ^ 31:0[R19]
00018f0e: R1 := high:32[R1].extend:64[31:0[R1]] & 0xFFFFFFFF0000FFFF |
          0xF7530000
00018f17: R3 := 31:0[R5] + 31:0[R3]
00018f20: R1 := 31:0[R11] + 31:0[R1]
00018f29: R21 := 31:0[R21] + 31:0[R3]
00018f30: R3 := 0xD391
00018f37: R3 := high:32[R3].extend:64[31:0[R3]] & 0xFFFFFFFF0000FFFF |
          0xEB860000
00018f40: R7 := 31:0[R7] + 31:0[R3]
00018f47: R11 := 0xF235
00018f52: R21 := 31:0[R18] + 31:0[R21]
00018f59: R11 := high:32[R11].extend:64[31:0[R11]] & 0xFFFFFFFF0000FFFF |
          0xBD3A0000
00018f62: R3 := 31:0[R21] | ~31:0[R19]
00018f6b: R9 := 31:0[R9] + 31:0[R11]
00018f74: R3 := 31:0[R3] ^ 31:0[R18]
00018f7b: R5 := 0xD2BB
00018f84: R24 := 31:0[R3] + 31:0[R24]
00018f8b: R5 := high:32[R5].extend:64[31:0[R5]] & 0xFFFFFFFF0000FFFF |
          0x2AD70000
00018f94: R17 := 31:0[R17] + 31:0[R24]
00018f9d: R8 := 31:0[R8] + 31:0[R5]
00018fa8: R17 := 31:0[R21] + 31:0[R17]
00018fb1: R3 := 31:0[R17] | ~31:0[R18]
00018fba: R3 := 31:0[R3] ^ 31:0[R21]
00018fc3: R19 := 31:0[R3] + 31:0[R19]
00018fcc: R20 := 31:0[R20] + 31:0[R19]
00018fd7: R20 := 31:0[R17] + 31:0[R20]
00018fe0: R3 := 31:0[R20] | ~31:0[R21]
00018fe9: R3 := 31:0[R3] ^ 31:0[R17]
00018ff2: R18 := 31:0[R3] + 31:0[R18]
00018ffb: R16 := 31:0[R16] + 31:0[R18]
00019006: R16 := 31:0[R20] + 31:0[R16]
0001900f: R3 := 31:0[R16] | ~31:0[R17]
00019018: R3 := 31:0[R3] ^ 31:0[R20]
00019021: R21 := 31:0[R3] + 31:0[R21]
0001902a: R6 := 31:0[R6] + 31:0[R21]
00019035: R6 := 31:0[R16] + 31:0[R6]
0001903e: R3 := 31:0[R6] | ~31:0[R20]
00019047: R3 := 31:0[R3] ^ 31:0[R16]
00019050: R17 := 31:0[R3] + 31:0[R17]
00019059: R15 := 31:0[R15] + 31:0[R17]
00019064: R15 := 31:0[R6] + 31:0[R15]
0001906d: R3 := 31:0[R15] | ~31:0[R16]
00019076: R3 := 31:0[R3] ^ 31:0[R6]
0001907f: R20 := 31:0[R3] + 31:0[R20]
00019088: R14 := 31:0[R14] + 31:0[R20]
00019093: R14 := 31:0[R15] + 31:0[R14]
0001909c: R3 := 31:0[R14] | ~31:0[R6]
000190a5: R3 := 31:0[R3] ^ 31:0[R15]
000190ae: R16 := 31:0[R3] + 31:0[R16]
000190b7: R4 := 31:0[R4] + 31:0[R16]
000190c2: R4 := 31:0[R14] + 31:0[R4]
000190cb: R3 := 31:0[R4] | ~31:0[R15]
000190d4: R3 := 31:0[R3] ^ 31:0[R14]
000190dd: R6 := 31:0[R3] + 31:0[R6]
000190e6: R13 := 31:0[R13] + 31:0[R6]
000190f1: R13 := 31:0[R4] + 31:0[R13]
000190fa: R3 := 31:0[R13] | ~31:0[R14]
00019103: R3 := 31:0[R3] ^ 31:0[R4]
0001910c: R15 := 31:0[R3] + 31:0[R15]
00019115: R12 := 31:0[R12] + 31:0[R15]
00019120: R12 := 31:0[R13] + 31:0[R12]
00019129: R3 := 31:0[R12] | ~31:0[R4]
00019132: R3 := 31:0[R3] ^ 31:0[R13]
0001913b: R14 := 31:0[R3] + 31:0[R14]
00019144: R1 := 31:0[R1] + 31:0[R14]
0001914f: R1 := 31:0[R12] + 31:0[R1]
0001915a: R3 := 31:0[R1] | ~31:0[R13]
00019163: R3 := 31:0[R3] ^ 31:0[R12]
0001916e: R4 := 31:0[R3] + 31:0[R4]
00019177: R9 := 31:0[R9] + 31:0[R4]
00019182: R9 := 31:0[R1] + 31:0[R9]
0001918d: R3 := 31:0[R9] | ~31:0[R12]
00019196: R3 := 31:0[R3] ^ 31:0[R1]
000191a1: R13 := 31:0[R3] + 31:0[R13]
000191aa: R8 := 31:0[R8] + 31:0[R13]
000191b5: R8 := 31:0[R9] + 31:0[R8]
000191c0: R1 := 31:0[R8] | ~31:0[R1]
000191c9: R1 := 31:0[R1] ^ 31:0[R9]
000191d4: R1 := 31:0[R1] + 31:0[R12]
000191dd: R7 := 31:0[R7] + 31:0[R1]
000191e8: R8 := 31:0[R8] + 31:0[R7]
000191f1: R10 := 31:0[R10] + 31:0[R8]
000191fd: #7875 := (CF & ~ZF) <> 0
000191f7: when #7875 goto %00017f25
000387b0: goto %00019200

00019200:
00019207: R19 := mem[R31 + 0x10, el]:u64
0001920b: R20 := mem[R31 + 0x18, el]:u64
00019214: R21 := mem[R31 + 0x20, el]:u64
00019218: R22 := mem[R31 + 0x28, el]:u64
00019221: R23 := mem[R31 + 0x30, el]:u64
00019225: R24 := mem[R31 + 0x38, el]:u64
0001922e: R27 := mem[R31 + 0x50, el]:u64
00019232: R28 := mem[R31 + 0x58, el]:u64
000387af: goto %000120ba

000120ba:
000120cd: R25 := mem[R31 + 0x40, el]:u64
000120d1: R26 := mem[R31 + 0x48, el]:u64
000120db: R29 := mem[R31, el]:u64
000120df: R30 := mem[R31 + 8, el]:u64
000120e2: R31 := R31 + 0x60
000120ed: call R30 with noreturn

000387b5: sub md5_process_bytes(md5_process_bytes_result)
00038b1f: md5_process_bytes_result :: out u32 = low:32[R0]

0001230b:
00012313: mem := mem with [R31 - 0x40, el]:u64 <- R29
00012317: mem := mem with [R31 - 0x38, el]:u64 <- R30
0001231a: R31 := R31 - 0x40
00012321: R29 := R31
0001232a: mem := mem with [R31, el]:u64 <- R31 + 0x20
0001232e: mem := mem with [R31, el]:u64 <- R31 + 0x28
00012336: R19 := R0
0001233f: R0 := pad:64[mem[R2 + 0x18, el]:u32]
00012348: mem := mem with [R31, el]:u64 <- R31 + 0x40
0001234c: mem := mem with [R31, el]:u64 <- R31 + 0x48
00012354: R21 := R2
0001235c: R22 := R1
00012368: #4018 := ~31:0[R0] = 0
00012362: when #4018 goto %00012360
000387bf: goto %000124a8

00012360:
00012371: R20 := 31:0[R0]
0001237a: mem := mem with [R31, el]:u64 <- R31 + 0x60
0001237e: mem := mem with [R31, el]:u64 <- R31 + 0x68
00012384: R23 := 0x80
0001238c: R23 := R23 - R20
00012393: R24 := R2 + 0x1C
0001239b: #4029 := 1 + ~R1 + R23
0001239f: NF := 63:63[#4029]
000123a2: VF := 63:63[R23] & 63:63[~R1] & ~63:63[#4029] | ~63:63[R23] &
          ~63:63[~R1] & 63:63[#4029]
000123a5: ZF := #4029 = 0
000123a8: CF := 63:63[R23] & 63:63[~R1] | 63:63[~R1] & ~63:63[#4029] |
          63:63[R23] & ~63:63[#4029]
000123b2: R0 := R24 + R20
000123c9: #4034 := (~CF | ZF) <> 0
000123ca: goto %000123c1

000123c1:
000123c3: when #4034 goto %000123bb
000123c4: goto %000123be

000123be:
000123bf: R23 := R1
000123c6: goto %000123c2

000123bb:
000123bc: R23 := R23
000123c5: goto %000123c2

000123c2:
000123d3: R1 := R19
000123db: R2 := R23
000123e0: R30 := 0x98A4
000123e2: call @memcpy with return %000123e4

000123e4:
000123eb: R1 := pad:64[mem[R21 + 0x18, el]:u32]
000123f4: R1 := 31:0[R1] + 31:0[R23]
000123fc: mem := mem with [R21 + 0x18, el]:u32 <- 31:0[R1]
00012403: #4045 := 0xFFFFFFFFFFFFFFC0 + extend:64[31:0[R1]]
00012407: NF := 63:63[#4045]
0001240a: VF := 31:31[R1] & ~63:63[#4045]
0001240d: ZF := #4045 = 0
00012410: CF := 31:31[R1] | 31:31[R1] & ~63:63[#4045] | ~63:63[#4045]
00012420: #4047 := (CF & ~ZF) <> 0
0001241a: when #4047 goto %00012418
000387be: goto %00012487

00012418:
00012428: R2 := R21
00012430: R0 := R24
00012437: R1 := R1 & 0xFFFFFFC0
0001243c: R30 := 0x9900
0001243e: call @md5_process_block with return %00012440

00012440:
00012447: R2 := pad:64[mem[R21 + 0x18, el]:u32]
0001244f: R0 := R20 + R23
00012456: R1 := R0 & 0xFFFFFFFFFFFFFFC0
0001245e: R0 := R24
00012466: R2 := 31:0[R2] & 0x3F
0001246e: mem := mem with [R21 + 0x18, el]:u32 <- 31:0[R2]
00012476: R1 := R24 + R1
0001247d: R2 := R2 & 0x3F
00012482: R30 := 0x9924
00012484: call @memcpy with return %00012486

00012486:
00012489: goto %00012487

00012487:
00012490: R19 := R19 + R23
00012498: R22 := R22 - R23
000124a1: R23 := mem[R31 + 0x30, el]:u64
000124a5: R24 := mem[R31 + 0x38, el]:u64
000124aa: goto %000124a8

000124a8:
000124b0: #4163 := 0xFFFFFFFFFFFFFFC1 + R22
000124b4: NF := 63:63[#4163]
000124b7: VF := 63:63[R22] & ~63:63[#4163]
000124ba: ZF := #4163 = 0
000124bd: CF := 63:63[R22] | ~63:63[#4163] | 63:63[R22] & ~63:63[#4163]
000124cc: #4165 := (~CF | ZF) <> 0
000124c6: when #4165 goto %000124c4
000387bd: goto %00017d97

00017d97:
00017da2: #6575 := ZF
00017d9c: when #6575 goto %000125d8
000387bc: goto %00017da5

000125d8:
000125dd: R1 := R22 & 0xFFFFFFFFFFFFFFC0
000125e5: R0 := R19
000125ec: R22 := R22 & 0x3F
000125f4: R19 := R19 + R1
000125fc: R2 := R21
00012601: R30 := 0x9864
00012603: call @md5_process_block with return %000124c4

000124c4:
000124d8: #4166 := ~R22 = 0
000124d2: when #4166 goto %000124d0
000387bb: goto %00017d67

000124d0:
000124df: R20 := R21 + 0x1C
000124e8: mem := mem with [R31, el]:u64 <- R31 + 0x60
000124ec: mem := mem with [R31, el]:u64 <- R31 + 0x68
000124f4: R23 := R19
000124f9: goto %000124f7

00017d67:
00017d6e: R19 := mem[R31 + 0x10, el]:u64
00017d72: R20 := mem[R31 + 0x18, el]:u64
00017d7b: R21 := mem[R31 + 0x20, el]:u64
00017d7f: R22 := mem[R31 + 0x28, el]:u64
00017d89: R29 := mem[R31, el]:u64
00017d8d: R30 := mem[R31 + 8, el]:u64
00017d90: R31 := R31 + 0x40
00017d95: call R30 with noreturn

00017da5:
00017dac: mem := mem with [R31, el]:u64 <- R31 + 0x60
00017db0: mem := mem with [R31, el]:u64 <- R31 + 0x68
00017db7: #6577 := 0xFFFFFFFFFFFFFFC0 + R22
00017dbb: NF := 63:63[#6577]
00017dbe: VF := 63:63[R22] & ~63:63[#6577]
00017dc1: ZF := #6577 = 0
00017dc4: CF := 63:63[R22] | ~63:63[#6577] | 63:63[R22] & ~63:63[#6577]
00017dcd: R20 := R21 + 0x1C
00017dd9: #6579 := ZF
00017dd3: when #6579 goto %00017dd1
000387ba: goto %00017de7

00017dd1:
00017de1: R23 := R19
00017de5: goto %000124f7

00017de7:
00017dec: R24 := R22 - 0x41
00017df3: R24 := R24 >> 6
00017dfa: R23 := R24 + 1
00017e02: R23 := R19 + (R23 << 6)
000387b9: goto %00017e06

00017e06:
00017e0d: R0 := mem[R19, el]:u64
00017e11: R1 := mem[R19 + 8, el]:u64
00017e1a: mem := mem with [R20, el]:u64 <- R20
00017e1e: mem := mem with [R20, el]:u64 <- R20 + 8
00017e26: R2 := R21
00017e2f: R0 := mem[R19 + 0x10, el]:u64
00017e33: R1 := mem[R19 + 0x18, el]:u64
00017e3c: mem := mem with [R20, el]:u64 <- R20 + 0x20
00017e40: mem := mem with [R20, el]:u64 <- R20 + 0x28
00017e49: R4 := mem[R19 + 0x20, el]:u64
00017e4d: R5 := mem[R19 + 0x28, el]:u64
00017e56: mem := mem with [R20, el]:u64 <- R20 + 0x40
00017e5a: mem := mem with [R20, el]:u64 <- R20 + 0x48
00017e60: R1 := 0x40
00017e69: R4 := mem[R19 + 0x30, el]:u64
00017e6d: R5 := mem[R19 + 0x38, el]:u64
00017e76: mem := mem with [R20, el]:u64 <- R20 + 0x60
00017e7a: mem := mem with [R20, el]:u64 <- R20 + 0x68
00017e82: R19 := R19 + R1
00017e8a: R0 := R20
00017e8f: R30 := 0x9804
00017e91: call @md5_process_block with return %00017e93

00017e93:
00017e99: #6607 := 1 + ~R23 + R19
00017e9d: NF := 63:63[#6607]
00017ea0: VF := 63:63[R19] & 63:63[~R23] & ~63:63[#6607] | ~63:63[R19] &
          ~63:63[~R23] & 63:63[#6607]
00017ea3: ZF := #6607 = 0
00017ea6: CF := 63:63[R19] & 63:63[~R23] | 63:63[~R23] & ~63:63[#6607] |
          63:63[R19] & ~63:63[#6607]
00017eb3: #6609 := ~ZF <> 0
00017ead: when #6609 goto %00017e06
000387b8: goto %00017eb6

00017eb6:
00017ebb: R22 := R22 - 0x40
00017ec3: R22 := R22 - (R24 << 6)
000387b7: goto %000124f7

000124f7:
00012501: R19 := pad:64[mem[R21 + 0x18, el]:u32]
00012509: R1 := R23
00012511: R2 := R22
00012519: R0 := R20 + R19
00012521: R19 := R19 + R22
00012526: R30 := 0x982C
00012528: call @memcpy with return %0001252a

0001252a:
0001252f: #4183 := 0xFFFFFFFFFFFFFFC1 + R19
00012533: NF := 63:63[#4183]
00012536: VF := 63:63[R19] & ~63:63[#4183]
00012539: ZF := #4183 = 0
0001253c: CF := 63:63[R19] | ~63:63[#4183] | 63:63[R19] & ~63:63[#4183]
0001254b: #4185 := (CF & ~ZF) <> 0
00012545: when #4185 goto %00012543
000387b6: goto %00012590

00012543:
00012553: R2 := R21
0001255b: R0 := R20
00012562: R19 := R19 - 0x40
00012568: R1 := 0x40
0001256d: R30 := 0x98DC
0001256f: call @md5_process_block with return %00012571

00012571:
00012577: R0 := R20
0001257f: R2 := R19
00012586: R1 := R21 + 0x5C
0001258b: R30 := 0x98EC
0001258d: call @memcpy with return %0001258f

0001258f:
00012592: goto %00012590

00012590:
0001259a: R23 := mem[R31 + 0x30, el]:u64
0001259e: R24 := mem[R31 + 0x38, el]:u64
000125a6: mem := mem with [R21 + 0x18, el]:u32 <- 31:0[R19]
000125af: R19 := mem[R31 + 0x10, el]:u64
000125b3: R20 := mem[R31 + 0x18, el]:u64
000125bc: R21 := mem[R31 + 0x20, el]:u64
000125c0: R22 := mem[R31 + 0x28, el]:u64
000125ca: R29 := mem[R31, el]:u64
000125ce: R30 := mem[R31 + 8, el]:u64
000125d1: R31 := R31 + 0x40
000125d6: call R30 with noreturn

000387c0: sub md5_read_ctx(md5_read_ctx_result)
00038b20: md5_read_ctx_result :: out u32 = low:32[R0]

00011fdc:
00011fe2: R2 := R0
00011fea: R0 := R1
00011ff3: R1 := pad:64[mem[R2, el]:u32]
00011ffb: mem := mem with [R0, el]:u32 <- 31:0[R1]
00012004: R1 := pad:64[mem[R2 + 4, el]:u32]
0001200c: mem := mem with [R0 + 4, el]:u32 <- 31:0[R1]
00012015: R1 := pad:64[mem[R2 + 8, el]:u32]
0001201d: mem := mem with [R0 + 8, el]:u32 <- 31:0[R1]
00012026: R1 := pad:64[mem[R2 + 0xC, el]:u32]
0001202e: mem := mem with [R0 + 0xC, el]:u32 <- 31:0[R1]
00012033: call R30 with noreturn

000387c1: sub md5_stream(md5_stream_result)
00038b21: md5_stream_result :: out u32 = low:32[R0]

000129c0:
000129c4: R12 := 0x1140
000129cc: R31 := R31 - R12
000129d5: mem := mem with [R31, el]:u64 <- R31
000129d9: mem := mem with [R31, el]:u64 <- R31 + 8
000129e0: R29 := R31
000129e9: mem := mem with [R31, el]:u64 <- R31 + 0x60
000129ed: mem := mem with [R31, el]:u64 <- R31 + 0x68
000129f3: R23 := 0x27000
000129fb: R24 := R1
00012a01: R1 := 0x11000
00012a0a: mem := mem with [R31, el]:u64 <- R31 + 0x20
00012a0e: mem := mem with [R31, el]:u64 <- R31 + 0x28
00012a16: R20 := R0
00012a1e: R0 := mem[R23 + 0xFB8, el]:u64
00012a27: mem := mem with [R31, el]:u64 <- R31 + 0x40
00012a2b: mem := mem with [R31, el]:u64 <- R31 + 0x48
00012a32: R21 := R31 + 0xF0
00012a3c: R1 := mem[R0, el]:u64
00012a44: mem := mem with [R31 + 0x1138, el]:u64 <- R1
00012a4a: R1 := 0
00012a52: mem := mem with [R31 + 0x40, el]:u64 <- R25
00012a59: R25 := R31 + 0x50
00012a5f: R22 := 0x1000
00012a67: mem := mem with [R31 + 0x60, el]:u64 <- 0
00012a6f: mem := mem with [R31 + 0x68, el]:u32 <- 0
000387ca: goto %00012a73

00012a73:
00012a77: R19 := 0
00012a7c: goto %00012a7a

00012a7a:
00012a83: R2 := R22 - R19
00012a8b: R0 := R21 + R19
00012a93: R3 := R20
00012a99: R1 := 1
00012a9e: R30 := 0x9FA8
00012aa0: call @fread with return %00012aa2

00012aa2:
00012aa8: R19 := R19 + R0
00012aaf: #4427 := 0xFFFFFFFFFFFFF000 + R19
00012ab3: NF := 63:63[#4427]
00012ab6: VF := 63:63[R19] & ~63:63[#4427]
00012ab9: ZF := #4427 = 0
00012abc: CF := 63:63[R19] | ~63:63[#4427] | 63:63[R19] & ~63:63[#4427]
00012aca: #4429 := ~ZF <> 0
00012ac4: when #4429 goto %00012ac2
000387c9: goto %00017305

00017305:
0001730b: R1 := R19
00017313: R2 := R25
0001731b: R0 := R21
00017320: R30 := 0x9FC4
00017322: call @md5_process_block with return %00017324

00017324:
00017326: goto %00012a73

00012ac2:
00012ad6: #4430 := R0 = 0
00012ad0: when #4430 goto %00012ace
000387c8: goto %000172ea

00012ace:
00012ade: R0 := R20
00012ae3: R30 := 0x9FD0
00012ae5: call @ferror with return %00012ae7

00012ae7:
00012aee: R1 := 31:0[R0]
00012af5: R0 := 1
00012b01: #4437 := ~31:0[R1] = 0
00012afb: when #4437 goto %00012af9
000387c7: goto %000172d7

000172ea:
000172f0: R0 := R20
000172f5: R30 := 0x9F90
000172f7: call @feof with return %000172f9

000172f9:
00017302: #6305 := ~31:0[R0] = 0
000172fc: when #6305 goto %000172d7
000387c6: goto %00012a7a

000172d7:
000172dc: R20 := R31 + 0x50
000172e7: #6301 := ~R19 = 0
000172e1: when #6301 goto %00017296
000387c5: goto %000172b6

00017296:
0001729c: R1 := R19
000172a4: R0 := R21
000172ac: R2 := R20
000172b1: R30 := 0xA03C
000172b3: call @md5_process_bytes with return %000172b5

000172b5:
000172b8: goto %000172b6

000172b6:
000172bf: R1 := R24
000172c7: R0 := R20
000172cc: R30 := 0x9FF0
000172ce: call @md5_finish_ctx with return %000172d0

000172d0:
000172d5: R0 := 0
000387c4: goto %00012af9

00012af9:
00012b09: R23 := mem[R23 + 0xFB8, el]:u64
00012b11: R1 := mem[R31 + 0x1138, el]:u64
00012b19: R2 := mem[R23, el]:u64
00012b21: #4441 := 1 + ~R2 + R1
00012b25: NF := 63:63[#4441]
00012b28: VF := 63:63[R1] & 63:63[~R2] & ~63:63[#4441] | ~63:63[R1] &
          ~63:63[~R2] & 63:63[#4441]
00012b2b: ZF := #4441 = 0
00012b2e: CF := 63:63[R1] & 63:63[~R2] | 63:63[~R2] & ~63:63[#4441] |
          63:63[R1] & ~63:63[#4441]
00012b32: R1 := #4441
00012b38: R2 := 0
00012b44: #4443 := ~ZF <> 0
00012b3e: when #4443 goto %00012b3c
000387c3: goto %0001724d

00012b3c:
00012b49: R30 := 0xA044
00012b4b: call @__stack_chk_fail with return %00012b4d

00012b4d:
000387c2: call @md5_buffer with noreturn

0001724d:
00017251: R12 := 0x1140
0001725a: R29 := mem[R31, el]:u64
0001725e: R30 := mem[R31 + 8, el]:u64
00017267: R19 := mem[R31 + 0x10, el]:u64
0001726b: R20 := mem[R31 + 0x18, el]:u64
00017274: R21 := mem[R31 + 0x20, el]:u64
00017278: R22 := mem[R31 + 0x28, el]:u64
00017281: R23 := mem[R31 + 0x30, el]:u64
00017285: R24 := mem[R31 + 0x38, el]:u64
0001728d: R25 := mem[R31 + 0x40, el]:u64
00017294: call R30 with noreturn

000387cb: sub memcmp(memcmp_s1, memcmp_s2, memcmp_n, memcmp_result)
00038b22: memcmp_s1 :: in out u64 = R0
00038b23: memcmp_s2 :: in out u64 = R1
00038b24: memcmp_n :: in u64 = R2
00038b25: memcmp_result :: out u32 = low:32[R0]

000105a6:
0003056a: R16 := 0x27000
00030572: R17 := mem[R16 + 0xE18, el]:u64
00030579: R16 := R16 + 0xE18
0003057e: call R17 with noreturn

000387cc: sub memcpy(memcpy_dst, memcpy_src, memcpy_n, memcpy_result)
00038b26: memcpy_dst :: in out u64 = R0
00038b27: memcpy_src :: in out u64 = R1
00038b28: memcpy_n :: in u64 = R2
00038b29: memcpy_result :: out u64 = R0

000117ff:
0002ffa7: R16 := 0x27000
0002ffaf: R17 := mem[R16 + 0xC40, el]:u64
0002ffb6: R16 := R16 + 0xC40
0002ffbb: call R17 with noreturn

000387cd: sub memset(memset_buf, memset_c, memset_n, memset_result)
00038b2a: memset_buf :: in out u64 = R0
00038b2b: memset_c :: in u32 = low:32[R1]
00038b2c: memset_n :: in u64 = R2
00038b2d: memset_result :: out u64 = R0

0001275c:
00030312: R16 := 0x27000
0003031a: R17 := mem[R16 + 0xD58, el]:u64
00030321: R16 := R16 + 0xD58
00030326: call R17 with noreturn

000387ce: sub memxor(memxor_result)
00038b2e: memxor_result :: out u32 = low:32[R0]

00011f58:
00011f62: #3882 := R2 = 0
00011f5c: when #3882 goto %00011f5a
000387e4: goto %0001924d

0001924d:
00019252: R3 := R1 + 0xF
00019259: R4 := R2 - 1
00019261: R3 := R3 - R0
00019268: #7884 := 0xFFFFFFFFFFFFFFE2 + R3
0001926c: NF := 63:63[#7884]
0001926f: VF := 63:63[R3] & ~63:63[#7884]
00019272: ZF := #7884 = 0
00019275: CF := 63:63[R3] | ~63:63[#7884] | 63:63[R3] & ~63:63[#7884]
0001929e: #7886 := (CF & ~ZF) <> 0
0001929f: goto %00019296

00019296:
00019298: when #7886 goto %0001927e
00019299: goto %0001928a

0001928a:
0001928b: NF := 0
0001928e: ZF := 0
00019291: CF := 0
00019294: VF := 0
0001929b: goto %00019297

0001927e:
0001927f: NF := 63:63[R4 - 0xE]
00019282: VF := 63:63[R4] & ~63:63[R4 - 0xE]
00019285: ZF := R4 - 0xE = 0
00019288: CF := 63:63[R4] | ~63:63[R4 - 0xE] | 63:63[R4] & ~63:63[R4 - 0xE]
0001929a: goto %00019297

00019297:
000192ac: #7889 := (~CF | ZF) <> 0
000192a6: when #7889 goto %00011f69
000387e3: goto %000192af

00011f69:
00011f6d: R3 := 0
000387e2: goto %00011f71

00011f71:
00011f78: R4 := high:32[R4].pad:64[mem[R1 + R3]]
00011f81: R5 := high:32[R5].pad:64[mem[R0 + R3]]
00011f8a: R4 := 31:0[R4] ^ 31:0[R5]
00011f93: R3 := R3 + 1
00011f9b: #3889 := 1 + ~R3 + R2
00011f9f: NF := 63:63[#3889]
00011fa2: VF := 63:63[R2] & 63:63[~R3] & ~63:63[#3889] | ~63:63[R2] &
          ~63:63[~R3] & 63:63[#3889]
00011fa5: ZF := #3889 = 0
00011fa8: CF := 63:63[R2] & 63:63[~R3] | 63:63[~R3] & ~63:63[#3889] |
          63:63[R2] & ~63:63[#3889]
00011fb5: #3891 := ~ZF <> 0
00011faf: when #3891 goto %00011f71
000387e1: goto %00011fb8

00011fb8:
00011fbb: call R30 with noreturn

000192af:
000192b4: R4 := R2 & 0xFFFFFFFFFFFFFFF0
000192ba: R3 := 0
000387e0: goto %000192be

000192be:
000192cb: R3 := R3 + 0x10
000192d3: #7917 := 1 + ~R4 + R3
000192d7: NF := 63:63[#7917]
000192da: VF := 63:63[R3] & 63:63[~R4] & ~63:63[#7917] | ~63:63[R3] &
          ~63:63[~R4] & 63:63[#7917]
000192dd: ZF := #7917 = 0
000192e0: CF := 63:63[R3] & 63:63[~R4] | 63:63[~R4] & ~63:63[#7917] |
          63:63[R3] & ~63:63[#7917]
000192ed: #7919 := ~ZF <> 0
000192e7: when #7919 goto %000192be
000387df: goto %000192f0

000192f0:
000192f5: R5 := R2 & 0xFFFFFFFFFFFFFFF0
000192fc: R3 := R2 & 0xF
00019304: #7969 := 1 + ~R5 + R2
00019308: NF := 63:63[#7969]
0001930b: VF := 63:63[R2] & 63:63[~R5] & ~63:63[#7969] | ~63:63[R2] &
          ~63:63[~R5] & 63:63[#7969]
0001930e: ZF := #7969 = 0
00019311: CF := 63:63[R2] & 63:63[~R5] | 63:63[~R5] & ~63:63[#7969] |
          63:63[R2] & ~63:63[#7969]
0001931b: R4 := R1 + R5
00019323: R2 := R0 + R5
0001932e: #7977 := ZF
00019328: when #7977 goto %00011f5a
000387de: goto %00019331

00019331:
00019338: R6 := high:32[R6].pad:64[mem[R1 + R5]]
0001933f: #7978 := 0xFFFFFFFFFFFFFFFF + R3
00019343: NF := 63:63[#7978]
00019346: VF := 63:63[R3] & ~63:63[#7978]
00019349: ZF := #7978 = 0
0001934c: CF := 63:63[R3] | ~63:63[#7978] | 63:63[R3] & ~63:63[#7978]
00019357: R1 := high:32[R1].pad:64[mem[R0 + R5]]
00019360: R1 := 31:0[R1] ^ 31:0[R6]
0001936d: #7983 := ZF
00019367: when #7983 goto %00011f5a
000387dd: goto %00019370

00019370:
00019377: R1 := pad:64[mem[R4 + 1]]
0001937e: #7984 := 0xFFFFFFFFFFFFFFFE + R3
00019382: NF := 63:63[#7984]
00019385: VF := 63:63[R3] & ~63:63[#7984]
00019388: ZF := #7984 = 0
0001938b: CF := 63:63[R3] | ~63:63[#7984] | 63:63[R3] & ~63:63[#7984]
00019396: R5 := pad:64[mem[R2 + 1]]
0001939f: R1 := 31:0[R1] ^ 31:0[R5]
000193a7: mem := mem with [R2 + 1] <- low:8[31:0[R1]]
000193b2: #7989 := ZF
000193ac: when #7989 goto %00011f5a
000387dc: goto %000193b5

000193b5:
000193bc: R1 := pad:64[mem[R4 + 2]]
000193c3: #7990 := 0xFFFFFFFFFFFFFFFD + R3
000193c7: NF := 63:63[#7990]
000193ca: VF := 63:63[R3] & ~63:63[#7990]
000193cd: ZF := #7990 = 0
000193d0: CF := 63:63[R3] | ~63:63[#7990] | 63:63[R3] & ~63:63[#7990]
000193db: R5 := pad:64[mem[R2 + 2]]
000193e4: R1 := 31:0[R1] ^ 31:0[R5]
000193ec: mem := mem with [R2 + 2] <- low:8[31:0[R1]]
000193f7: #7995 := ZF
000193f1: when #7995 goto %00011f5a
000387db: goto %000193fa

000193fa:
00019401: R1 := pad:64[mem[R4 + 3]]
00019408: #7996 := 0xFFFFFFFFFFFFFFFC + R3
0001940c: NF := 63:63[#7996]
0001940f: VF := 63:63[R3] & ~63:63[#7996]
00019412: ZF := #7996 = 0
00019415: CF := 63:63[R3] | ~63:63[#7996] | 63:63[R3] & ~63:63[#7996]
00019420: R5 := pad:64[mem[R2 + 3]]
00019429: R1 := 31:0[R1] ^ 31:0[R5]
00019431: mem := mem with [R2 + 3] <- low:8[31:0[R1]]
0001943c: #8001 := ZF
00019436: when #8001 goto %00011f5a
000387da: goto %0001943f

0001943f:
00019446: R1 := pad:64[mem[R4 + 4]]
0001944d: #8002 := 0xFFFFFFFFFFFFFFFB + R3
00019451: NF := 63:63[#8002]
00019454: VF := 63:63[R3] & ~63:63[#8002]
00019457: ZF := #8002 = 0
0001945a: CF := 63:63[R3] | ~63:63[#8002] | 63:63[R3] & ~63:63[#8002]
00019465: R5 := pad:64[mem[R2 + 4]]
0001946e: R1 := 31:0[R1] ^ 31:0[R5]
00019476: mem := mem with [R2 + 4] <- low:8[31:0[R1]]
00019481: #8007 := ZF
0001947b: when #8007 goto %00011f5a
000387d9: goto %00019484

00019484:
0001948b: R1 := pad:64[mem[R4 + 5]]
00019492: #8008 := 0xFFFFFFFFFFFFFFFA + R3
00019496: NF := 63:63[#8008]
00019499: VF := 63:63[R3] & ~63:63[#8008]
0001949c: ZF := #8008 = 0
0001949f: CF := 63:63[R3] | ~63:63[#8008] | 63:63[R3] & ~63:63[#8008]
000194aa: R5 := pad:64[mem[R2 + 5]]
000194b3: R1 := 31:0[R1] ^ 31:0[R5]
000194bb: mem := mem with [R2 + 5] <- low:8[31:0[R1]]
000194c6: #8013 := ZF
000194c0: when #8013 goto %00011f5a
000387d8: goto %000194c9

000194c9:
000194d0: R1 := pad:64[mem[R4 + 6]]
000194d7: #8014 := 0xFFFFFFFFFFFFFFF9 + R3
000194db: NF := 63:63[#8014]
000194de: VF := 63:63[R3] & ~63:63[#8014]
000194e1: ZF := #8014 = 0
000194e4: CF := 63:63[R3] | ~63:63[#8014] | 63:63[R3] & ~63:63[#8014]
000194ef: R5 := pad:64[mem[R2 + 6]]
000194f8: R1 := 31:0[R1] ^ 31:0[R5]
00019500: mem := mem with [R2 + 6] <- low:8[31:0[R1]]
0001950b: #8019 := ZF
00019505: when #8019 goto %00011f5a
000387d7: goto %0001950e

0001950e:
00019515: R1 := pad:64[mem[R4 + 7]]
0001951c: #8020 := 0xFFFFFFFFFFFFFFF8 + R3
00019520: NF := 63:63[#8020]
00019523: VF := 63:63[R3] & ~63:63[#8020]
00019526: ZF := #8020 = 0
00019529: CF := 63:63[R3] | ~63:63[#8020] | 63:63[R3] & ~63:63[#8020]
00019534: R5 := pad:64[mem[R2 + 7]]
0001953d: R1 := 31:0[R1] ^ 31:0[R5]
00019545: mem := mem with [R2 + 7] <- low:8[31:0[R1]]
00019550: #8025 := ZF
0001954a: when #8025 goto %00011f5a
000387d6: goto %00019553

00019553:
0001955a: R1 := pad:64[mem[R4 + 8]]
00019561: #8026 := 0xFFFFFFFFFFFFFFF7 + R3
00019565: NF := 63:63[#8026]
00019568: VF := 63:63[R3] & ~63:63[#8026]
0001956b: ZF := #8026 = 0
0001956e: CF := 63:63[R3] | ~63:63[#8026] | 63:63[R3] & ~63:63[#8026]
00019579: R5 := pad:64[mem[R2 + 8]]
00019582: R1 := 31:0[R1] ^ 31:0[R5]
0001958a: mem := mem with [R2 + 8] <- low:8[31:0[R1]]
00019595: #8031 := ZF
0001958f: when #8031 goto %00011f5a
000387d5: goto %00019598

00019598:
0001959f: R1 := pad:64[mem[R4 + 9]]
000195a6: #8032 := 0xFFFFFFFFFFFFFFF6 + R3
000195aa: NF := 63:63[#8032]
000195ad: VF := 63:63[R3] & ~63:63[#8032]
000195b0: ZF := #8032 = 0
000195b3: CF := 63:63[R3] | ~63:63[#8032] | 63:63[R3] & ~63:63[#8032]
000195be: R5 := pad:64[mem[R2 + 9]]
000195c7: R1 := 31:0[R1] ^ 31:0[R5]
000195cf: mem := mem with [R2 + 9] <- low:8[31:0[R1]]
000195da: #8037 := ZF
000195d4: when #8037 goto %00011f5a
000387d4: goto %000195dd

000195dd:
000195e4: R1 := pad:64[mem[R4 + 0xA]]
000195eb: #8038 := 0xFFFFFFFFFFFFFFF5 + R3
000195ef: NF := 63:63[#8038]
000195f2: VF := 63:63[R3] & ~63:63[#8038]
000195f5: ZF := #8038 = 0
000195f8: CF := 63:63[R3] | ~63:63[#8038] | 63:63[R3] & ~63:63[#8038]
00019603: R5 := pad:64[mem[R2 + 0xA]]
0001960c: R1 := 31:0[R1] ^ 31:0[R5]
00019614: mem := mem with [R2 + 0xA] <- low:8[31:0[R1]]
0001961f: #8043 := ZF
00019619: when #8043 goto %00011f5a
000387d3: goto %00019622

00019622:
00019629: R1 := pad:64[mem[R4 + 0xB]]
00019630: #8044 := 0xFFFFFFFFFFFFFFF4 + R3
00019634: NF := 63:63[#8044]
00019637: VF := 63:63[R3] & ~63:63[#8044]
0001963a: ZF := #8044 = 0
0001963d: CF := 63:63[R3] | ~63:63[#8044] | 63:63[R3] & ~63:63[#8044]
00019648: R5 := pad:64[mem[R2 + 0xB]]
00019651: R1 := 31:0[R1] ^ 31:0[R5]
00019659: mem := mem with [R2 + 0xB] <- low:8[31:0[R1]]
00019664: #8049 := ZF
0001965e: when #8049 goto %00011f5a
000387d2: goto %00019667

00019667:
0001966e: R1 := pad:64[mem[R4 + 0xC]]
00019675: #8050 := 0xFFFFFFFFFFFFFFF3 + R3
00019679: NF := 63:63[#8050]
0001967c: VF := 63:63[R3] & ~63:63[#8050]
0001967f: ZF := #8050 = 0
00019682: CF := 63:63[R3] | ~63:63[#8050] | 63:63[R3] & ~63:63[#8050]
0001968d: R5 := pad:64[mem[R2 + 0xC]]
00019696: R1 := 31:0[R1] ^ 31:0[R5]
0001969e: mem := mem with [R2 + 0xC] <- low:8[31:0[R1]]
000196a9: #8055 := ZF
000196a3: when #8055 goto %00011f5a
000387d1: goto %000196ac

000196ac:
000196b3: R1 := pad:64[mem[R4 + 0xD]]
000196ba: #8056 := 0xFFFFFFFFFFFFFFF2 + R3
000196be: NF := 63:63[#8056]
000196c1: VF := 63:63[R3] & ~63:63[#8056]
000196c4: ZF := #8056 = 0
000196c7: CF := 63:63[R3] | ~63:63[#8056] | 63:63[R3] & ~63:63[#8056]
000196d2: R3 := pad:64[mem[R2 + 0xD]]
000196db: R1 := 31:0[R1] ^ 31:0[R3]
000196e3: mem := mem with [R2 + 0xD] <- low:8[31:0[R1]]
000196ee: #8061 := ZF
000196e8: when #8061 goto %00011f5a
000387d0: goto %000196f1

000196f1:
000196f8: R1 := pad:64[mem[R4 + 0xE]]
00019701: R3 := pad:64[mem[R2 + 0xE]]
0001970a: R1 := 31:0[R1] ^ 31:0[R3]
00019712: mem := mem with [R2 + 0xE] <- low:8[31:0[R1]]
000387cf: goto %00011f5a

00011f5a:
00011f67: call R30 with noreturn

000387e5: sub myexit(myexit_result)
00038b2f: myexit_result :: out u32 = low:32[R0]

00020b51:
00020b5c: mem := mem with [R31 - 0x20, el]:u64 <- R29
00020b60: mem := mem with [R31 - 0x18, el]:u64 <- R30
00020b63: R31 := R31 - 0x20
00020b6a: R29 := R31
00020b72: mem := mem with [R31 + 0x10, el]:u64 <- R19
00020b7b: R19 := 31:0[R0]
00020b87: #11959 := ~31:0[R0] = 0
00020b81: when #11959 goto %00020b7f
000387e6: goto %00020bbb

00020bbb:
00020bc5: R0 := 31:0[R19]
00020bca: R30 := 0x4824
00020bcd: call @exit with return %00020b7f

00020b7f:
00020b8d: R0 := 0x27000
00020b93: R2 := 0x11000
00020b9a: R1 := 1
00020ba1: R2 := R2 + 0x678
00020ba9: R0 := mem[R0 + 0xF68, el]:u64
00020bb1: R0 := mem[R0, el]:u64
00020bb6: R30 := 0x4840
00020bb8: call @__fprintf_chk with return %00020bba

00020bba:
00020bbd: goto %00020bbb

000387e7: sub new(new_result)
00038b30: new_result :: out u32 = low:32[R0]

0000f53b:
0000f53f: R1 := 1
0000f544: call @calloc with noreturn

000387e8: sub new_auth(new_auth_result)
00038b31: new_auth_result :: out u32 = low:32[R0]

0000f376:
0000f381: mem := mem with [R31 - 0x10, el]:u64 <- R29
0000f385: mem := mem with [R31 - 8, el]:u64 <- R30
0000f388: R31 := R31 - 0x10
0000f38e: R0 := 0x13C
0000f395: R29 := R31
0000f39a: R30 := 0xB060
0000f39d: call @malloc with return %0000f39f

0000f39f:
0000f3a9: #18 := R0 = 0
0000f3a3: when #18 goto %0000f3a1
000387ea: goto %0002b18d

0002b18d:
0002b192: R4 := R0 + 0x32
0002b199: R3 := R0 + 0x64
0002b1a2: mem := mem with [R0, el]:u64 <- R0
0002b1a6: mem := mem with [R0, el]:u64 <- R0 + 8
0002b1ad: R2 := R0 + 0xFA
0002b1b4: R5 := R0 + 0xC8
0002b1bd: mem := mem with [R0, el]:u64 <- R0 + 0x20
0002b1c1: mem := mem with [R0, el]:u64 <- R0 + 0x28
0002b1c8: R1 := R0 + 0x96
0002b1cf: R6 := R0 + 0x200
0002b1d8: mem := mem with [R0, el]:u64 <- R0 + 0x40
0002b1dc: mem := mem with [R0, el]:u64 <- R0 + 0x48
0002b1e2: R7 := 0x12000
0002b1ed: mem := mem with [R4, el]:u64 <- R4
0002b1f1: mem := mem with [R4, el]:u64 <- R4 + 8
0002b1fc: mem := mem with [R4, el]:u64 <- R4 + 0x20
0002b200: mem := mem with [R4, el]:u64 <- R4 + 0x28
0002b209: mem := mem with [R4, el]:u64 <- R4 + 0x40
0002b20d: mem := mem with [R4, el]:u64 <- R4 + 0x48
0002b218: mem := mem with [R3, el]:u64 <- R3
0002b21c: mem := mem with [R3, el]:u64 <- R3 + 8
0002b225: mem := mem with [R3, el]:u64 <- R3 + 0x20
0002b229: mem := mem with [R3, el]:u64 <- R3 + 0x28
0002b232: mem := mem with [R3, el]:u64 <- R3 + 0x40
0002b236: mem := mem with [R3, el]:u64 <- R3 + 0x48
0002b241: mem := mem with [R2, el]:u64 <- R2
0002b245: mem := mem with [R2, el]:u64 <- R2 + 8
0002b24e: mem := mem with [R2, el]:u64 <- R2 + 0x20
0002b252: mem := mem with [R2, el]:u64 <- R2 + 0x28
0002b25b: mem := mem with [R2, el]:u64 <- R2 + 0x40
0002b25f: mem := mem with [R2, el]:u64 <- R2 + 0x48
0002b268: mem := mem with [R0, el]:u64 <- R0 + 0x190
0002b26c: mem := mem with [R0, el]:u64 <- R0 + 0x198
0002b277: mem := mem with [R5, el]:u64 <- R5 + 0x20
0002b27b: mem := mem with [R5, el]:u64 <- R5 + 0x28
0002b284: mem := mem with [R5, el]:u64 <- R5 + 0x40
0002b288: mem := mem with [R5, el]:u64 <- R5 + 0x48
0002b293: mem := mem with [R1, el]:u64 <- R1
0002b297: mem := mem with [R1, el]:u64 <- R1 + 8
0002b2a0: mem := mem with [R1, el]:u64 <- R1 + 0x20
0002b2a4: mem := mem with [R1, el]:u64 <- R1 + 0x28
0002b2ad: mem := mem with [R1, el]:u64 <- R1 + 0x40
0002b2b1: mem := mem with [R1, el]:u64 <- R1 + 0x48
0002b2bb: mem := mem with [R6 - 0xCC, el]:u64 <- 0
000387e9: goto %0000f3a1

0000f3a1:
0000f3b3: R29 := mem[R31, el]:u64
0000f3b7: R30 := mem[R31 + 8, el]:u64
0000f3ba: R31 := R31 + 0x10
0000f3bf: call R30 with noreturn

000387eb: sub new_rr_data(new_rr_data_result)
00038b32: new_rr_data_result :: out u32 = low:32[R0]

00013475:
0001347d: mem := mem with [R31 - 0x10, el]:u64 <- R29
00013481: mem := mem with [R31 - 8, el]:u64 <- R30
00013484: R31 := R31 - 0x10
0001348a: R0 := 0x68
00013491: R29 := R31
00013496: R30 := 0x5320
00013498: call @malloc with return %0001349a

0001349a:
000134a0: mem := mem with [R0, el]:u32 <- 0
000134a6: R1 := 0x11000
000134ae: mem := mem with [R0 + 8, el]:u64 <- 0
000134b8: mem := mem with [R0 + 0x20, el]:u32 <- 0
000134ce: R29 := mem[R31, el]:u64
000134d2: R30 := mem[R31 + 8, el]:u64
000134d5: R31 := R31 + 0x10
000134da: call R30 with noreturn

000387ec: sub noproxy_add(noproxy_add_result)
00038b33: noproxy_add_result :: out u32 = low:32[R0]

00021194:
0002119c: mem := mem with [R31 - 0x60, el]:u64 <- R29
000211a0: mem := mem with [R31 - 0x58, el]:u64 <- R30
000211a3: R31 := R31 - 0x60
000211aa: R29 := R31
000211b3: mem := mem with [R31, el]:u64 <- R31 + 0x60
000211b7: mem := mem with [R31, el]:u64 <- R31 + 0x68
000211bd: R23 := 0x27000
000211c5: R2 := mem[R23 + 0xFB8, el]:u64
000211ce: mem := mem with [R31, el]:u64 <- R31 + 0x20
000211d2: mem := mem with [R31, el]:u64 <- R31 + 0x28
000211da: R20 := R0
000211e2: R0 := R1
000211ea: R1 := mem[R2, el]:u64
000211f2: mem := mem with [R31 + 0x58, el]:u64 <- R1
000211f8: R1 := 0
00021201: mem := mem with [R31, el]:u64 <- R31 + 0x40
00021205: mem := mem with [R31, el]:u64 <- R31 + 0x48
0002120c: R22 := R31 + 0x50
00021212: R21 := 0x13000
00021219: R21 := R21 + 0xFE0
00021221: R2 := R22
00021229: R1 := R21
0002122e: R30 := 0x10B60
00021231: call @strtok_r with return %00021233

00021233:
0002123d: #12131 := R0 = 0
00021237: when #12131 goto %00021235
000387f3: goto %0002479b

0002479b:
0002479f: R24 := 0x13000
000247a7: R19 := R0
000247ae: R24 := R24 + 0xFE8
000247b6: mem := mem with [R31 + 0x40, el]:u64 <- R25
000247bc: R25 := 0x28000
000247c3: R25 := R25 + 0x4D8
000247c8: goto %000247c6

000247c6:
000247d0: R0 := pad:64[mem[R25 + 4, el]:u32]
000247dc: #13634 := 31:0[R0] = 0
000247d6: when #13634 goto %000247d4
000387f2: goto %0002484b

0002484b:
00024851: R2 := R19
00024859: R1 := R24
00024860: R0 := 1
00024865: R30 := 0x10BCC
00024867: call @__printf_chk with return %00024869

00024869:
0002486f: R0 := R19
00024874: R30 := 0x10BD4
00024876: call @strdup with return %00024878

00024878:
0002487e: R2 := R0
00024884: R1 := 0
0002488c: R0 := R20
00024891: R30 := 0x10BE4
00024893: call @plist_add with return %00024895

00024895:
0002489b: R20 := R0
000248a3: R2 := R22
000248ab: R1 := R21
000248b1: R0 := 0
000248b6: R30 := 0x10BF8
000248b8: call @strtok_r with return %000248ba

000248ba:
000248c0: R19 := R0
000248cb: #13684 := ~R0 = 0
000248c5: when #13684 goto %000247c6
000387f1: goto %00024839

000247d4:
000247e4: R0 := R19
000247e9: R30 := 0x10B88
000247eb: call @strdup with return %000247ed

000247ed:
000247f1: R1 := 0
000247f9: R2 := R0
00024801: R0 := R20
00024806: R30 := 0x10B98
00024808: call @plist_add with return %0002480a

0002480a:
00024810: R2 := R22
00024818: R20 := R0
00024820: R1 := R21
00024826: R0 := 0
0002482b: R30 := 0x10BAC
0002482d: call @strtok_r with return %0002482f

0002482f:
00024835: R19 := R0
00024841: #13656 := R0 = 0
0002483b: when #13656 goto %00024839
000387f0: goto %000247c6

00024839:
00024849: R25 := mem[R31 + 0x40, el]:u64
000387ef: goto %00021235

00021235:
00021245: R23 := mem[R23 + 0xFB8, el]:u64
0002124d: R0 := mem[R31 + 0x58, el]:u64
00021255: R1 := mem[R23, el]:u64
0002125d: #12135 := 1 + ~R1 + R0
00021261: NF := 63:63[#12135]
00021264: VF := 63:63[R0] & 63:63[~R1] & ~63:63[#12135] | ~63:63[R0] &
          ~63:63[~R1] & 63:63[#12135]
00021267: ZF := #12135 = 0
0002126a: CF := 63:63[R0] & 63:63[~R1] | 63:63[~R1] & ~63:63[#12135] |
          63:63[R0] & ~63:63[#12135]
0002126e: R0 := #12135
00021274: R1 := 0
00021280: #12137 := ~ZF <> 0
0002127a: when #12137 goto %00021278
000387ee: goto %00024756

00021278:
00021288: mem := mem with [R31 + 0x40, el]:u64 <- R25
0002128d: R30 := 0x10C3C
0002128f: call @__stack_chk_fail with return %00021291

00021291:
000387ed: call @noproxy_match with noreturn

00024756:
0002475c: R0 := R20
00024765: R19 := mem[R31 + 0x10, el]:u64
00024769: R20 := mem[R31 + 0x18, el]:u64
00024772: R21 := mem[R31 + 0x20, el]:u64
00024776: R22 := mem[R31 + 0x28, el]:u64
0002477f: R23 := mem[R31 + 0x30, el]:u64
00024783: R24 := mem[R31 + 0x38, el]:u64
0002478d: R29 := mem[R31, el]:u64
00024791: R30 := mem[R31 + 8, el]:u64
00024794: R31 := R31 + 0x60
00024799: call R30 with noreturn

000387f4: sub noproxy_match(noproxy_match_result)
00038b34: noproxy_match_result :: out u32 = low:32[R0]

00021293:
0002129b: mem := mem with [R31 - 0x40, el]:u64 <- R29
0002129f: mem := mem with [R31 - 0x38, el]:u64 <- R30
000212a2: R31 := R31 - 0x40
000212a9: R29 := R31
000212b2: mem := mem with [R31, el]:u64 <- R31 + 0x20
000212b6: mem := mem with [R31, el]:u64 <- R31 + 0x28
000212be: mem := mem with [R31 + 0x30, el]:u64 <- R23
000212c4: R23 := 0x28000
000212cb: R20 := R23 + 0x4D8
000212d3: R19 := mem[R20 + 0x18, el]:u64
000212df: #12142 := R19 = 0
000212d9: when #12142 goto %000212d7
000387ff: goto %00024734

00024734:
0002473b: mem := mem with [R31, el]:u64 <- R31 + 0x40
0002473f: mem := mem with [R31, el]:u64 <- R31 + 0x48
00024745: R22 := 0x14000
0002474d: R21 := R0
00024754: R22 := R22 + 0x18
000387fe: goto %0002134c

0002134c:
0002135c: R0 := mem[R19 + 8, el]:u64
00021368: #12155 := R0 = 0
00021362: when #12155 goto %00021360
000387fd: goto %000213a0

000213a0:
000213a7: R1 := pad:64[mem[R0]]
000213b3: #12159 := ~31:0[R1] = 0
000213ad: when #12159 goto %000213ab
000387fc: goto %00021360

000213ab:
000213bb: R1 := R21
000213c2: R2 := 0
000213c7: R30 := 0x10CDC
000213ca: call @fnmatch with return %000213cc

000213cc:
000213d5: #12163 := ~31:0[R0] = 0
000213cf: when #12163 goto %00021360
000387fb: goto %000213d8

000213d8:
000213dd: R23 := R23 + 0x4D8
000213e4: R20 := 1
000213ed: R0 := pad:64[mem[R23 + 4, el]:u32]
000213f9: #12164 := ~31:0[R0] = 0
000213f3: when #12164 goto %000213f1
000387fa: goto %000246e2

000213f1:
00021401: R3 := mem[R19 + 8, el]:u64
00021409: R2 := R21
00021412: R0 := 31:0[R20]
00021418: R1 := 0x14000
0002141f: R1 := R1 + 8
00021424: R30 := 0x10D20
00021426: call @__printf_chk with return %00021428

00021428:
0002142f: R21 := mem[R31 + 0x20, el]:u64
00021433: R22 := mem[R31 + 0x28, el]:u64
00021437: goto %000212e8

000246e2:
000246e9: R0 := 31:0[R20]
000246f2: R19 := mem[R31 + 0x10, el]:u64
000246f6: R20 := mem[R31 + 0x18, el]:u64
000246ff: R21 := mem[R31 + 0x20, el]:u64
00024703: R22 := mem[R31 + 0x28, el]:u64
0002470b: R23 := mem[R31 + 0x30, el]:u64
00024715: R29 := mem[R31, el]:u64
00024719: R30 := mem[R31 + 8, el]:u64
0002471c: R31 := R31 + 0x40
00024721: call R30 with noreturn

00021360:
00021371: R1 := pad:64[mem[R20 + 4, el]:u32]
0002137c: #12156 := ~31:0[R1] = 0
00021376: when #12156 goto %0002131c
000387f9: goto %0002137f

0002131c:
00021322: R3 := mem[R19 + 8, el]:u64
0002132a: R2 := R21
00021332: R1 := R22
00021339: R0 := 1
0002133e: R30 := 0x10CC0
00021340: call @__printf_chk with return %00021342

00021342:
00021348: R19 := mem[R19 + 0x10, el]:u64
00021354: #12154 := ~R19 = 0
0002134e: when #12154 goto %0002134c
000387f8: goto %00024723

00024723:
0002472a: R21 := mem[R31 + 0x20, el]:u64
0002472e: R22 := mem[R31 + 0x28, el]:u64
00024732: goto %000212d7

0002137f:
00021385: R19 := mem[R19 + 0x10, el]:u64
00021390: #12157 := ~R19 = 0
0002138a: when #12157 goto %0002134c
000387f7: goto %00021393

00021393:
0002139a: R21 := mem[R31 + 0x20, el]:u64
0002139e: R22 := mem[R31 + 0x28, el]:u64
000387f6: goto %000212d7

000212d7:
000212e6: R20 := 0
000387f5: goto %000212e8

000212e8:
000212ef: R0 := 31:0[R20]
000212f8: R19 := mem[R31 + 0x10, el]:u64
000212fc: R20 := mem[R31 + 0x18, el]:u64
00021304: R23 := mem[R31 + 0x30, el]:u64
0002130e: R29 := mem[R31, el]:u64
00021312: R30 := mem[R31 + 8, el]:u64
00021315: R31 := R31 + 0x40
0002131a: call R30 with noreturn

00038800: sub ntlm2_hash_password(ntlm2_hash_password_result)
00038b35: ntlm2_hash_password_result :: out u32 = low:32[R0]

0001a9d1:
0001a9d9: mem := mem with [R31 - 0x50, el]:u64 <- R29
0001a9dd: mem := mem with [R31 - 0x48, el]:u64 <- R30
0001a9e0: R31 := R31 - 0x50
0001a9e7: R29 := R31
0001a9f0: mem := mem with [R31, el]:u64 <- R31 + 0x40
0001a9f4: mem := mem with [R31, el]:u64 <- R31 + 0x48
0001a9fa: R21 := 0x27000
0001aa01: R22 := R31 + 0x40
0001aa09: R21 := mem[R21 + 0xFB8, el]:u64
0001aa12: mem := mem with [R31, el]:u64 <- R31 + 0x60
0001aa16: mem := mem with [R31, el]:u64 <- R31 + 0x68
0001aa1e: R24 := R0
0001aa26: R0 := mem[R21, el]:u64
0001aa2e: mem := mem with [R31 + 0x48, el]:u64 <- R0
0001aa34: R0 := 0
0001aa3c: R23 := R1
0001aa42: R0 := 0x16
0001aa4b: mem := mem with [R31, el]:u64 <- R31 + 0x20
0001aa4f: mem := mem with [R31, el]:u64 <- R31 + 0x28
0001aa57: R19 := R2
0001aa5c: R30 := 0x6130
0001aa5e: call @new with return %0001aa60

0001aa60:
0001aa66: R1 := R19
0001aa6e: R19 := R0
0001aa76: R0 := R22
0001aa7b: R30 := 0x6140
0001aa7d: call @unicode with return %0001aa7f

0001aa7f:
0001aa84: R20 := extend:64[31:0[R0]]
0001aa8c: R2 := R19
0001aa94: R0 := mem[R31 + 0x40, el]:u64
0001aa9c: R1 := R20
0001aaa1: R30 := 0x6154
0001aaa3: call @md4_buffer with return %0001aaa5

0001aaa5:
0001aaab: mem := mem with [R19 + 0x10, el]:u32 <- 0
0001aab3: mem := mem with [R19 + 0x14] <- 0
0001aabb: R2 := R20
0001aac2: R1 := 0
0001aaca: R0 := mem[R31 + 0x40, el]:u64
0001aacf: R30 := 0x616C
0001aad1: call @memset with return %0001aad3

0001aad3:
0001aad9: R0 := mem[R31 + 0x40, el]:u64
0001aade: R30 := 0x6174
0001aae0: call @free with return %0001aae2

0001aae2:
0001aae8: R0 := R24
0001aaed: R30 := 0x617C
0001aaef: call @strlen with return %0001aaf1

0001aaf1:
0001aaf7: R20 := R0
0001aaff: R0 := R23
0001ab04: R30 := 0x6188
0001ab06: call @strlen with return %0001ab08

0001ab08:
0001ab0e: R0 := R20 + R0
0001ab15: R0 := R0 + 1
0001ab1a: R30 := 0x6194
0001ab1c: call @new with return %0001ab1e

0001ab1e:
0001ab24: R1 := R24
0001ab2c: R20 := R0
0001ab31: R30 := 0x61A0
0001ab34: call @strcat with return %0001ab36

0001ab36:
0001ab3c: R1 := R23
0001ab44: R0 := R20
0001ab49: R30 := 0x61AC
0001ab4b: call @strcat with return %0001ab4d

0001ab4d:
0001ab53: R0 := R20
0001ab58: R30 := 0x61B4
0001ab5a: call @uppercase with return %0001ab5c

0001ab5c:
0001ab62: R1 := R20
0001ab6a: R0 := R22
0001ab6f: R30 := 0x61C0
0001ab71: call @unicode with return %0001ab73

0001ab73:
0001ab7a: R23 := 31:0[R0]
0001ab80: R0 := 0x11
0001ab85: R30 := 0x61CC
0001ab87: call @new with return %0001ab89

0001ab89:
0001ab8f: R4 := R0
0001ab97: R2 := mem[R31 + 0x40, el]:u64
0001ab9e: R3 := extend:64[31:0[R23]]
0001aba4: R1 := 0x10
0001abac: R22 := R0
0001abb4: R0 := R19
0001abb9: R30 := 0x61E8
0001abbb: call @hmac_md5 with return %0001abbd

0001abbd:
0001abc3: R0 := R19
0001abc8: R30 := 0x61F0
0001abca: call @free with return %0001abcc

0001abcc:
0001abd2: R0 := mem[R31 + 0x40, el]:u64
0001abd7: R30 := 0x61F8
0001abd9: call @free with return %0001abdb

0001abdb:
0001abe1: R0 := R20
0001abe6: R30 := 0x6200
0001abe8: call @free with return %0001abea

0001abea:
0001abf0: R0 := mem[R31 + 0x48, el]:u64
0001abf8: R1 := mem[R21, el]:u64
0001ac00: #9224 := 1 + ~R1 + R0
0001ac04: NF := 63:63[#9224]
0001ac07: VF := 63:63[R0] & 63:63[~R1] & ~63:63[#9224] | ~63:63[R0] &
          ~63:63[~R1] & 63:63[#9224]
0001ac0a: ZF := #9224 = 0
0001ac0d: CF := 63:63[R0] & 63:63[~R1] | 63:63[~R1] & ~63:63[#9224] |
          63:63[R0] & ~63:63[#9224]
0001ac11: R0 := #9224
0001ac17: R1 := 0
0001ac23: #9226 := ~ZF <> 0
0001ac1d: when #9226 goto %0001ac1b
00038803: goto %0002a5a7

0001ac1b:
0001ac28: R30 := 0x6230
0001ac2a: call @__stack_chk_fail with return %00038801

00038801:
00038802: call @ntlm_request with noreturn

0002a5a7:
0002a5ad: R0 := R22
0002a5b6: R19 := mem[R31 + 0x10, el]:u64
0002a5ba: R20 := mem[R31 + 0x18, el]:u64
0002a5c3: R21 := mem[R31 + 0x20, el]:u64
0002a5c7: R22 := mem[R31 + 0x28, el]:u64
0002a5d0: R23 := mem[R31 + 0x30, el]:u64
0002a5d4: R24 := mem[R31 + 0x38, el]:u64
0002a5de: R29 := mem[R31, el]:u64
0002a5e2: R30 := mem[R31 + 8, el]:u64
0002a5e5: R31 := R31 + 0x50
0002a5ea: call R30 with noreturn

00038804: sub ntlm_hash_lm_password(ntlm_hash_lm_password_result)
00038b36: ntlm_hash_lm_password_result :: out u32 = low:32[R0]

0001a6a2:
0001a6aa: mem := mem with [R31 - 0x150, el]:u64 <- R29
0001a6ae: mem := mem with [R31 - 0x148, el]:u64 <- R30
0001a6b1: R31 := R31 - 0x150
0001a6b7: R1 := 0x474B
0001a6be: R1 := R1 & 0xFFFFFFFF0000FFFF | 0x21530000
0001a6c5: R29 := R31
0001a6ce: mem := mem with [R31, el]:u64 <- R31 + 0x40
0001a6d2: mem := mem with [R31, el]:u64 <- R31 + 0x48
0001a6d8: R22 := 0x27000
0001a6df: R1 := R1 & 0xFFFF0000FFFFFFFF | 0x234000000000
0001a6e7: R22 := mem[R22 + 0xFB8, el]:u64
0001a6ee: R1 := R1 & 0xFFFFFFFFFFFF | 0x2524000000000000
0001a6f6: mem := mem with [R31 + 0x140, el]:u64 <- R1
0001a6fd: R21 := R31 + 0x40
0001a705: R1 := mem[R22, el]:u64
0001a70d: mem := mem with [R31 + 0x148, el]:u64 <- R1
0001a713: R1 := 0
0001a71c: mem := mem with [R31, el]:u64 <- R31 + 0x20
0001a720: mem := mem with [R31, el]:u64 <- R31 + 0x28
0001a728: mem := mem with [R31 + 0x30, el]:u64 <- R23
0001a730: R23 := R0
0001a736: R0 := 0x16
0001a73b: R30 := 0x5F94
0001a73d: call @new with return %0001a73f

0001a73f:
0001a745: R19 := R0
0001a74b: R0 := 0xF
0001a750: R30 := 0x5FA0
0001a752: call @new with return %0001a754

0001a754:
0001a75a: R20 := R0
0001a762: R0 := R23
0001a767: R30 := 0x5FAC
0001a769: call @strlen with return %0001a76b

0001a76b:
0001a76f: R3 := 0xE
0001a777: R2 := R0
0001a77f: #9062 := 1 + ~R3 + R0
0001a783: NF := 63:63[#9062]
0001a786: VF := 63:63[R0] & 63:63[~R3] & ~63:63[#9062] | ~63:63[R0] &
          ~63:63[~R3] & 63:63[#9062]
0001a789: ZF := #9062 = 0
0001a78c: CF := 63:63[R0] & 63:63[~R3] | 63:63[~R3] & ~63:63[#9062] |
          63:63[R0] & ~63:63[#9062]
0001a796: R1 := R23
0001a7ad: #9067 := (~CF | ZF) <> 0
0001a7ae: goto %0001a7a5

0001a7a5:
0001a7a7: when #9067 goto %0001a79f
0001a7a8: goto %0001a7a2

0001a7a2:
0001a7a3: R2 := R3
0001a7aa: goto %0001a7a6

0001a79f:
0001a7a0: R2 := R2
0001a7a9: goto %0001a7a6

0001a7a6:
0001a7b7: R0 := R20
0001a7be: R23 := R31 + 0x140
0001a7c3: R30 := 0x5FCC
0001a7c6: call @strncpy with return %0001a7c8

0001a7c8:
0001a7cb: R30 := 0x5FD0
0001a7cd: call @uppercase with return %0001a7cf

0001a7cf:
0001a7d5: R0 := R20
0001a7dd: R1 := R21
0001a7e2: R30 := 0x5FDC
0001a7e4: call @ntlm_set_key with return %0001a7e6

0001a7e6:
0001a7ec: R2 := R19
0001a7f3: R3 := 0
0001a7fb: R0 := R21
0001a803: R1 := R23
0001a808: R30 := 0x5FF0
0001a80a: call @gl_des_ecb_crypt with return %0001a80c

0001a80c:
0001a812: R1 := R21
0001a819: R0 := R20 + 7
0001a81e: R30 := 0x5FFC
0001a820: call @ntlm_set_key with return %0001a822

0001a822:
0001a828: R1 := R23
0001a82f: R2 := R19 + 8
0001a837: R0 := R21
0001a83e: R3 := 0
0001a843: R30 := 0x6010
0001a845: call @gl_des_ecb_crypt with return %0001a847

0001a847:
0001a84d: mem := mem with [R19 + 0x10, el]:u32 <- 0
0001a855: mem := mem with [R19 + 0x14] <- 0
0001a85d: R0 := R20
0001a862: R30 := 0x6020
0001a864: call @free with return %0001a866

0001a866:
0001a86c: R0 := mem[R31 + 0x148, el]:u64
0001a874: R1 := mem[R22, el]:u64
0001a87c: #9102 := 1 + ~R1 + R0
0001a880: NF := 63:63[#9102]
0001a883: VF := 63:63[R0] & 63:63[~R1] & ~63:63[#9102] | ~63:63[R0] &
          ~63:63[~R1] & 63:63[#9102]
0001a886: ZF := #9102 = 0
0001a889: CF := 63:63[R0] & 63:63[~R1] | 63:63[~R1] & ~63:63[#9102] |
          63:63[R0] & ~63:63[#9102]
0001a88d: R0 := #9102
0001a893: R1 := 0
0001a89f: #9104 := ~ZF <> 0
0001a899: when #9104 goto %0001a897
00038807: goto %0002a61f

0001a897:
0001a8a4: R30 := 0x6050
0001a8a6: call @__stack_chk_fail with return %00038805

00038805:
00038806: call @ntlm_hash_nt_password with noreturn

0002a61f:
0002a625: R0 := R19
0002a62e: R19 := mem[R31 + 0x10, el]:u64
0002a632: R20 := mem[R31 + 0x18, el]:u64
0002a63b: R21 := mem[R31 + 0x20, el]:u64
0002a63f: R22 := mem[R31 + 0x28, el]:u64
0002a647: R23 := mem[R31 + 0x30, el]:u64
0002a651: R29 := mem[R31, el]:u64
0002a655: R30 := mem[R31 + 8, el]:u64
0002a658: R31 := R31 + 0x150
0002a65d: call R30 with noreturn

00038808: sub ntlm_hash_nt_password(ntlm_hash_nt_password_result)
00038b37: ntlm_hash_nt_password_result :: out u32 = low:32[R0]

0001a8a8:
0001a8b0: mem := mem with [R31 - 0x40, el]:u64 <- R29
0001a8b4: mem := mem with [R31 - 0x38, el]:u64 <- R30
0001a8b7: R31 := R31 - 0x40
0001a8be: R29 := R31
0001a8c7: mem := mem with [R31, el]:u64 <- R31 + 0x20
0001a8cb: mem := mem with [R31, el]:u64 <- R31 + 0x28
0001a8d1: R20 := 0x27000
0001a8d9: R19 := R0
0001a8e1: R20 := mem[R20 + 0xFB8, el]:u64
0001a8e7: R0 := 0x16
0001a8ef: R1 := mem[R20, el]:u64
0001a8f7: mem := mem with [R31 + 0x38, el]:u64 <- R1
0001a8fd: R1 := 0
0001a905: mem := mem with [R31 + 0x20, el]:u64 <- R21
0001a90a: R30 := 0x6080
0001a90c: call @new with return %0001a90e

0001a90e:
0001a914: R1 := R19
0001a91c: R19 := R0
0001a923: R0 := R31 + 0x30
0001a928: R30 := 0x6090
0001a92a: call @unicode with return %0001a92c

0001a92c:
0001a931: R21 := extend:64[31:0[R0]]
0001a939: R2 := R19
0001a941: R0 := mem[R31 + 0x30, el]:u64
0001a949: R1 := R21
0001a94e: R30 := 0x60A4
0001a950: call @md4_buffer with return %0001a952

0001a952:
0001a958: mem := mem with [R19 + 0x10, el]:u32 <- 0
0001a960: mem := mem with [R19 + 0x14] <- 0
0001a967: R1 := 0
0001a96f: R2 := R21
0001a977: R0 := mem[R31 + 0x30, el]:u64
0001a97c: R30 := 0x60BC
0001a97e: call @memset with return %0001a980

0001a980:
0001a986: R0 := mem[R31 + 0x30, el]:u64
0001a98b: R30 := 0x60C4
0001a98d: call @free with return %0001a98f

0001a98f:
0001a995: R0 := mem[R31 + 0x38, el]:u64
0001a99d: R1 := mem[R20, el]:u64
0001a9a5: #9132 := 1 + ~R1 + R0
0001a9a9: NF := 63:63[#9132]
0001a9ac: VF := 63:63[R0] & 63:63[~R1] & ~63:63[#9132] | ~63:63[R0] &
          ~63:63[~R1] & 63:63[#9132]
0001a9af: ZF := #9132 = 0
0001a9b2: CF := 63:63[R0] & 63:63[~R1] | 63:63[~R1] & ~63:63[#9132] |
          63:63[R0] & ~63:63[#9132]
0001a9b6: R0 := #9132
0001a9bc: R1 := 0
0001a9c8: #9134 := ~ZF <> 0
0001a9c2: when #9134 goto %0001a9c0
0003880b: goto %0002a5ec

0001a9c0:
0001a9cd: R30 := 0x60F0
0001a9cf: call @__stack_chk_fail with return %00038809

00038809:
0003880a: call @ntlm2_hash_password with noreturn

0002a5ec:
0002a5f2: R0 := R19
0002a5fb: R19 := mem[R31 + 0x10, el]:u64
0002a5ff: R20 := mem[R31 + 0x18, el]:u64
0002a607: R21 := mem[R31 + 0x20, el]:u64
0002a611: R29 := mem[R31, el]:u64
0002a615: R30 := mem[R31 + 8, el]:u64
0002a618: R31 := R31 + 0x40
0002a61d: call R30 with noreturn

0003880c: sub ntlm_request(ntlm_request_result)
00038b38: ntlm_request_result :: out u32 = low:32[R0]

0001ac2c:
0001ac34: mem := mem with [R31 - 0x50, el]:u64 <- R29
0001ac38: mem := mem with [R31 - 0x48, el]:u64 <- R30
0001ac3b: R31 := R31 - 0x50
0001ac42: R29 := R31
0001ac4b: mem := mem with [R31, el]:u64 <- R31 + 0x40
0001ac4f: mem := mem with [R31, el]:u64 <- R31 + 0x48
0001ac57: R22 := R0
0001ac60: mem := mem with [R31, el]:u64 <- R31 + 0x20
0001ac64: mem := mem with [R31, el]:u64 <- R31 + 0x28
0001ac6c: R19 := R1
0001ac75: mem := mem with [R31, el]:u64 <- R31 + 0x60
0001ac79: mem := mem with [R31, el]:u64 <- R31 + 0x68
0001ac80: R23 := R1 + 0x64
0001ac89: mem := mem with [R31, el]:u64 <- R31 + 0x80
0001ac8d: mem := mem with [R31, el]:u64 <- R31 + 0x88
0001ac94: R25 := R1 + 0x32
0001ac9c: R0 := R25
0001aca4: mem := mem with [R22, el]:u64 <- 0
0001aca9: R30 := 0x6264
0001acab: call @strlen with return %0001acad

0001acad:
0001acb3: R20 := R0
0001acbb: R0 := R23
0001acc0: R30 := 0x6270
0001acc2: call @strlen with return %0001acc4

0001acc4:
0001acc8: R1 := 0x27000
0001acd1: R26 := pad:64[mem[R19 + 0x138, el]:u32]
0001acd9: R21 := R0
0001ace1: R1 := mem[R1 + 0xF78, el]:u64
0001acea: R0 := pad:64[mem[R1, el]:u32]
0001acf6: #9251 := ~31:0[R26] = 0
0001acf0: when #9251 goto %0001acee
00038815: goto %0002a584

0002a584:
0002a58b: R1 := pad:64[mem[R19 + 0x12C, el]:u32]
0002a596: #15868 := 31:0[R1] = 0
0002a590: when #15868 goto %0001af0c
00038814: goto %0002a599

0001af0c:
0001af13: R1 := pad:64[mem[R19 + 0x130, el]:u32]
0001af1a: #9356 := 0xFFFFFFFFFFFFFFFE + extend:64[31:0[R1]]
0001af1e: NF := 63:63[#9356]
0001af21: VF := 31:31[R1] & ~63:63[#9356]
0001af24: ZF := #9356 = 0
0001af27: CF := 31:31[R1] | 31:31[R1] & ~63:63[#9356] | ~63:63[#9356]
0001af36: #9358 := ZF
0001af30: when #9358 goto %0001af2e
00038813: goto %0001c970

0001af2e:
0001af3d: R26 := 0xB207
0001af44: R26 := high:32[R26].extend:64[31:0[R26]] & 0xFFFFFFFF0000FFFF |
          0xA2080000
0001af48: goto %0001acee

0001c970:
0001c977: R2 := pad:64[mem[R19 + 0x134, el]:u32]
0001c982: #10379 := ~31:0[R1] = 0
0001c97c: when #10379 goto %0001af4a
00038812: goto %0001c985

0001af4a:
0001af4f: #9360 := extend:64[31:0[R2]]
0001af53: NF := 63:63[#9360]
0001af56: VF := 31:31[R2] & ~63:63[#9360]
0001af59: ZF := #9360 = 0
0001af5c: CF := 31:31[R2] | 31:31[R2] & ~63:63[#9360] | ~63:63[#9360]
0001af66: R26 := 0xB207
0001af6d: R1 := 0xB205
0001af85: #9362 := ~ZF <> 0
0001af86: goto %0001af7d

0001af7d:
0001af7f: when #9362 goto %0001af76
0001af80: goto %0001af7a

0001af7a:
0001af7b: R26 := 31:0[R1]
0001af82: goto %0001af7e

0001af76:
0001af77: R26 := 31:0[R26]
0001af81: goto %0001af7e

0001af7e:
0001af8b: goto %0001acee

0001c985:
0001c98a: R26 := 0xB206
0001c995: #10380 := ~31:0[R2] = 0
0001c98f: when #10380 goto %0001acee
00038811: goto %0001c998

0001c998:
0001c9a1: #10381 := 31:0[R0] = 0
0001c99b: when #10381 goto %0001aec2
00038810: goto %0001c9a4

0001c9a4:
0001c9a8: R1 := 0x11000
0001c9af: R1 := R1 + 0x700
0001c9b6: R0 := 1
0001c9bb: R30 := 0x6398
0001c9bd: call @__printf_chk with return %0001c9bf

0001c9bf:
0001c9c5: R0 := R19
0001c9ca: R30 := 0x63A0
0001c9cd: call @dump_auth with return %0002a579

0002a579:
0002a57e: R0 := 0
0002a582: goto %0001aec2

0002a599:
0002a59e: R26 := 0xB205
0002a5a5: R26 := high:32[R26].extend:64[31:0[R26]] & 0xFFFFFFFF0000FFFF |
          0xA2080000
0003880f: goto %0001acee

0001acee:
0001ad02: #9252 := ~31:0[R0] = 0
0001acfc: when #9252 goto %0001acfa
0003880e: goto %0001ad8a

0001acfa:
0001ad08: R1 := 0x11000
0001ad0f: R0 := 1
0001ad16: R1 := R1 + 0x728
0001ad1b: R30 := 0x63B8
0001ad1d: call @__printf_chk with return %0001ad1f

0001ad1f:
0001ad25: R2 := R25
0001ad2b: R1 := 0x11000
0001ad32: R0 := 1
0001ad39: R1 := R1 + 0x738
0001ad3e: R30 := 0x63CC
0001ad40: call @__printf_chk with return %0001ad42

0001ad42:
0001ad48: R2 := R23
0001ad4e: R1 := 0x11000
0001ad55: R0 := 1
0001ad5c: R1 := R1 + 0x748
0001ad61: R30 := 0x63E0
0001ad63: call @__printf_chk with return %0001ad65

0001ad65:
0001ad6c: R2 := 31:0[R26]
0001ad72: R1 := 0x11000
0001ad79: R0 := 1
0001ad80: R1 := R1 + 0x758
0001ad85: R30 := 0x63F4
0001ad87: call @__printf_chk with return %0001ad89

0001ad89:
0001ad8c: goto %0001ad8a

0001ad8a:
0001ad91: R0 := 0x400
0001ad96: R30 := 0x62A4
0001ad98: call @new with return %0001ad9a

0001ad9a:
0001ad9e: R6 := 0x544E
0001ada6: R19 := R0
0001adad: R6 := R6 & 0xFFFFFFFF0000FFFF | 0x4D4C0000
0001adb5: R4 := extend:64[31:0[R21]] + 0x20
0001adbd: R2 := 31:0[R20] & 0xFFFF
0001adc5: R1 := 31:0[R21] & 0xFFFF
0001adcc: R6 := R6 & 0xFFFF0000FFFFFFFF | 0x535300000000
0001add3: R5 := 1
0001adda: R6 := R6 & 0xFFFFFFFFFFFF | 0x50000000000000
0001ade1: R3 := 0x20
0001ade9: mem := mem with [R19, el]:u64 <- R6
0001adf1: R0 := R23
0001adfa: R24 := extend:64[31:0[R21]]
0001ae06: mem := mem with [R19 + 0x14, el]:u32 <- 31:0[R4]
0001ae12: mem := mem with [R19 + 0x1C, el]:u32 <- 31:0[R3]
0001ae17: R30 := 0x62F8
0001ae19: call @strdup with return %0001ae1b

0001ae1b:
0001ae1e: R30 := 0x62FC
0001ae20: call @uppercase with return %0001ae22

0001ae22:
0001ae28: R1 := R0
0001ae30: R2 := R24
0001ae38: R23 := R0
0001ae3f: R0 := R19 + 0x20
0001ae44: R30 := 0x6310
0001ae46: call @memcpy with return %0001ae48

0001ae48:
0001ae4e: R0 := R23
0001ae53: R30 := 0x6318
0001ae55: call @free with return %0001ae57

0001ae57:
0001ae5d: R0 := R25
0001ae62: R30 := 0x6320
0001ae64: call @strdup with return %0001ae66

0001ae66:
0001ae69: R30 := 0x6324
0001ae6b: call @uppercase with return %0001ae6d

0001ae6d:
0001ae73: R1 := R0
0001ae7a: R2 := extend:64[31:0[R20]]
0001ae82: R23 := R0
0001ae89: R0 := R24 + 0x20
0001ae91: R20 := extend:64[31:0[R20]] + 0x20
0001ae99: R0 := R19 + R0
0001ae9e: R30 := 0x6340
0001aea0: call @memcpy with return %0001aea2

0001aea2:
0001aea8: R0 := R23
0001aead: R30 := 0x6348
0001aeaf: call @free with return %0001aeb1

0001aeb1:
0001aeb8: R0 := 31:0[R20] + 31:0[R21]
0001aec0: mem := mem with [R22, el]:u64 <- R19
0003880d: goto %0001aec2

0001aec2:
0001aec9: R19 := mem[R31 + 0x10, el]:u64
0001aecd: R20 := mem[R31 + 0x18, el]:u64
0001aed6: R21 := mem[R31 + 0x20, el]:u64
0001aeda: R22 := mem[R31 + 0x28, el]:u64
0001aee3: R23 := mem[R31 + 0x30, el]:u64
0001aee7: R24 := mem[R31 + 0x38, el]:u64
0001aef0: R25 := mem[R31 + 0x40, el]:u64
0001aef4: R26 := mem[R31 + 0x48, el]:u64
0001aefe: R29 := mem[R31, el]:u64
0001af02: R30 := mem[R31 + 8, el]:u64
0001af05: R31 := R31 + 0x50
0001af0a: call R30 with noreturn

00038816: sub ntlm_response(ntlm_response_result)
00038b39: ntlm_response_result :: out u32 = low:32[R0]

0001af8d:
0001af95: mem := mem with [R31 - 0x1C0, el]:u64 <- R29
0001af99: mem := mem with [R31 - 0x1B8, el]:u64 <- R30
0001af9c: R31 := R31 - 0x1C0
0001afa2: R5 := 0x27000
0001afa9: R29 := R31
0001afb2: mem := mem with [R31, el]:u64 <- R31 + 0x60
0001afb6: mem := mem with [R31, el]:u64 <- R31 + 0x68
0001afbc: R23 := 0x27000
0001afc4: R4 := mem[R23 + 0xF78, el]:u64
0001afcc: mem := mem with [R31 + 0x78, el]:u64 <- R0
0001afd4: R5 := mem[R5 + 0xFB8, el]:u64
0001afdd: mem := mem with [R31, el]:u64 <- R31 + 0x20
0001afe1: mem := mem with [R31, el]:u64 <- R31 + 0x28
0001afea: R4 := pad:64[mem[R4, el]:u32]
0001aff2: R0 := mem[R5, el]:u64
0001affa: mem := mem with [R31 + 0x1B8, el]:u64 <- R0
0001b000: R0 := 0
0001b009: mem := mem with [R31, el]:u64 <- R31 + 0x40
0001b00d: mem := mem with [R31, el]:u64 <- R31 + 0x48
0001b015: R19 := R1
0001b01e: mem := mem with [R31, el]:u64 <- R31 + 0x80
0001b022: mem := mem with [R31, el]:u64 <- R31 + 0x88
0001b02a: R20 := R3
0001b033: R25 := 31:0[R2]
0001b03c: mem := mem with [R31, el]:u64 <- R31 + 0xA0
0001b040: mem := mem with [R31, el]:u64 <- R31 + 0xA8
0001b04c: #9380 := ~31:0[R4] = 0
0001b046: when #9380 goto %0001b044
00038851: goto %0001b0ec

0001b044:
0001b052: R1 := 0x11000
0001b059: R0 := 1
0001b060: R1 := R1 + 0x770
0001b065: R30 := 0x6E9C
0001b067: call @__printf_chk with return %0001b069

0001b069:
0001b06e: R0 := R19 + 0x18
0001b075: R2 := 7
0001b07b: R1 := 8
0001b080: R30 := 0x6EAC
0001b082: call @printmem with return %0001b084

0001b084:
0001b08b: R3 := 31:0[R25]
0001b093: R2 := R0
0001b099: R1 := 0x11000
0001b0a0: R1 := R1 + 0x788
0001b0a8: R21 := R0
0001b0af: R0 := 1
0001b0b4: R30 := 0x6EC8
0001b0b6: call @__printf_chk with return %0001b0b8

0001b0b8:
0001b0be: R0 := R21
0001b0c3: R30 := 0x6ED0
0001b0c5: call @free with return %0001b0c7

0001b0c7:
0001b0ce: R2 := pad:64[mem[R19 + 0x14, el]:u32]
0001b0d4: R1 := 0x11000
0001b0db: R0 := 1
0001b0e2: R1 := R1 + 0x758
0001b0e7: R30 := 0x6EE4
0001b0e9: call @__printf_chk with return %0001b0eb

0001b0eb:
0001b0ee: goto %0001b0ec

0001b0ec:
0001b0f4: #9393 := 0xFFFFFFFFFFFFFFD0 + extend:64[31:0[R25]]
0001b0f8: NF := 63:63[#9393]
0001b0fb: VF := 31:31[R25] & ~63:63[#9393]
0001b0fe: ZF := #9393 = 0
0001b101: CF := 31:31[R25] | 31:31[R25] & ~63:63[#9393] | ~63:63[#9393]
0001b112: #9395 := (NF = VF & ~ZF) <> 0
0001b10c: when #9395 goto %0001b10a
00038850: goto %0001c95b

0001b10a:
0001b11a: R1 := mem[R23 + 0xF78, el]:u64
0001b121: R22 := 0
0001b12b: mem := mem with [R31 + 0x80, el]:u32 <- 31:0[R2]
0001b133: R0 := extend:64[31:0[R2]] + 3
0001b13c: R24 := 31:0[R2]
0001b144: #9403 := 1 + extend:64[~31:0[R25]] + extend:64[31:0[R0]]
0001b148: NF := 63:63[#9403]
0001b14b: VF := 31:31[~31:0[R25]] & 31:31[R0] & ~63:63[#9403] |
          ~31:31[~31:0[R25]] & ~31:31[R0] & 63:63[#9403]
0001b14e: ZF := #9403 = 0
0001b151: CF := 31:31[~31:0[R25]] & 31:31[R0] | 31:31[R0] & ~63:63[#9403] |
          31:31[~31:0[R25]] & ~63:63[#9403]
0001b15d: R0 := 31:0[R2]
0001b166: R2 := pad:64[mem[R1, el]:u32]
0001b173: #9408 := NF = VF
0001b16d: when #9408 goto %0001b16b
0003884f: goto %0001c92f

0001b16b:
0001b17a: R27 := 0xFFFF
0001b17f: goto %0001b17d

0001c92f:
0001c933: R26 := 0x13000
0001c93a: R1 := R26 + 0x298
0001c940: R27 := 0x11000
0001c948: mem := mem with [R31 + 0x70, el]:u64 <- R1
0001c94f: R1 := R27 + 0x7C8
0001c957: mem := mem with [R31 + 0x88, el]:u64 <- R1
0003884e: goto %0001c22a

0001c22a:
0001c239: R21 := R24 & 0xFFFF
0001c248: #10170 := 31:0[R27] = 0
0001c242: when #10170 goto %0001bb8e
0003884d: goto %0001c24b

0001bb8e:
0001bb97: #9854 := 31:0[R22] = 0
0001bb91: when #9854 goto %0001bac5
0003884c: goto %0001bb9a

0001bb9a:
0001bba0: R22 := extend:64[31:0[R22]] + 4
0001bba8: R22 := 31:0[R22] & 0xFFFF
0001bbb3: #9877 := 31:0[R2] = 0
0001bbad: when #9877 goto %0001b1c3
0003884b: goto %0001b182

0001c24b:
0001c253: R0 := extend:64[31:0[R0]] + 4
0001c25c: R0 := 31:0[R0] + 31:0[R28]
0001c264: #10177 := 1 + extend:64[~31:0[R25]] + extend:64[31:0[R0]]
0001c268: NF := 63:63[#10177]
0001c26b: VF := 31:31[~31:0[R25]] & 31:31[R0] & ~63:63[#10177] |
          ~31:31[~31:0[R25]] & ~31:31[R0] & 63:63[#10177]
0001c26e: ZF := #10177 = 0
0001c271: CF := 31:31[~31:0[R25]] & 31:31[R0] | 31:31[R0] & ~63:63[#10177] |
          31:31[~31:0[R25]] & ~63:63[#10177]
0001c281: #10179 := (NF = VF & ~ZF) <> 0
0001c27b: when #10179 goto %0001b17d
0003884a: goto %0001c284

0001c284:
0001c28d: #10180 := 31:0[R2] = 0
0001c287: when #10180 goto %0001c1e2
00038849: goto %0001c290

0001c290:
0001c295: #10181 := 0xFFFFFFFFFFFFFFFD + extend:64[31:0[R27]]
0001c299: NF := 63:63[#10181]
0001c29c: VF := 31:31[R27] & ~63:63[#10181]
0001c29f: ZF := #10181 = 0
0001c2a2: CF := 31:31[R27] | 31:31[R27] & ~63:63[#10181] | ~63:63[#10181]
0001c2b1: #10183 := ZF
0001c2ab: when #10183 goto %0001c2a9
00038848: goto %0001c316

0001c2a9:
0001c2b9: R1 := mem[R31 + 0x88, el]:u64
0001c2c0: R0 := 1
0001c2c5: R30 := 0x6E48
0001c2c7: call @__printf_chk with return %0001c2c9

0001c2c9:
0001c2cb: goto %0001c130

0001c316:
0001c320: #10191 := (CF & ~ZF) <> 0
0001c31a: when #10191 goto %0001c0f1
00038847: goto %0001c323

0001c0f1:
0001c0f6: #10075 := 0xFFFFFFFFFFFFFFFC + extend:64[31:0[R27]]
0001c0fa: NF := 63:63[#10075]
0001c0fd: VF := 31:31[R27] & ~63:63[#10075]
0001c100: ZF := #10075 = 0
0001c103: CF := 31:31[R27] | 31:31[R27] & ~63:63[#10075] | ~63:63[#10075]
0001c112: #10077 := ZF
0001c10c: when #10077 goto %0001c10a
00038846: goto %0001c833

0001c10a:
0001c118: R1 := 0x11000
0001c11f: R0 := 1
0001c126: R1 := R1 + 0x7D8
0001c12b: R30 := 0x6E88
0001c12d: call @__printf_chk with return %0001c12f

0001c12f:
0001c132: goto %0001c130

0001c833:
0001c838: #10353 := 0xFFFFFFFFFFFFFFFB + extend:64[31:0[R27]]
0001c83c: NF := 63:63[#10353]
0001c83f: VF := 31:31[R27] & ~63:63[#10353]
0001c842: ZF := #10353 = 0
0001c845: CF := 31:31[R27] | 31:31[R27] & ~63:63[#10353] | ~63:63[#10353]
0001c853: #10355 := ~ZF <> 0
0001c84d: when #10355 goto %0001c2cd
00038845: goto %0001c856

0001c856:
0001c85a: R1 := 0x11000
0001c861: R0 := 1
0001c868: R1 := R1 + 0x7E8
0001c86d: R30 := 0x6E10
0001c86f: call @__printf_chk with return %0001c871

0001c871:
0001c873: goto %0001c130

0001c323:
0001c328: #10192 := 0xFFFFFFFFFFFFFFFF + extend:64[31:0[R27]]
0001c32c: NF := 63:63[#10192]
0001c32f: VF := 31:31[R27] & ~63:63[#10192]
0001c332: ZF := #10192 = 0
0001c335: CF := 31:31[R27] | 31:31[R27] & ~63:63[#10192] | ~63:63[#10192]
0001c343: #10194 := ZF
0001c33d: when #10194 goto %0001c2f5
00038844: goto %0001c346

0001c2f5:
0001c2fc: R0 := 31:0[R27]
0001c302: R1 := 0x11000
0001c309: R1 := R1 + 0x7A8
0001c30e: R30 := 0x6E74
0001c310: call @__printf_chk with return %0001c312

0001c312:
0001c314: goto %0001c130

0001c346:
0001c34b: #10195 := 0xFFFFFFFFFFFFFFFE + extend:64[31:0[R27]]
0001c34f: NF := 63:63[#10195]
0001c352: VF := 31:31[R27] & ~63:63[#10195]
0001c355: ZF := #10195 = 0
0001c358: CF := 31:31[R27] | 31:31[R27] & ~63:63[#10195] | ~63:63[#10195]
0001c366: #10197 := ~ZF <> 0
0001c360: when #10197 goto %0001c2cd
00038843: goto %0001c369

0001c2cd:
0001c2d4: R2 := 31:0[R27]
0001c2da: R1 := 0x11000
0001c2e1: R0 := 1
0001c2e8: R1 := R1 + 0x7F8
0001c2ed: R30 := 0x6E60
0001c2ef: call @__printf_chk with return %0001c2f1

0001c2f1:
0001c2f3: goto %0001c130

0001c369:
0001c36d: R1 := 0x11000
0001c374: R0 := 1
0001c37b: R1 := R1 + 0x7B8
0001c380: R30 := 0x679C
0001c382: call @__printf_chk with return %0001c384

0001c384:
00038842: goto %0001c130

0001c130:
0001c139: R0 := extend:64[31:0[R28]] + 1
0001c140: R1 := R21 + 4
0001c148: mem := mem with [R31 + 0x68, el]:u64 <- R1
0001c150: R0 := extend:64[31:1[R0]]
0001c158: R0 := extend:64[31:0[R0]] + 1
0001c15f: R0 := extend:64[31:0[R0]]
0001c164: R30 := 0x67BC
0001c166: call @new with return %0001c168

0001c168:
0001c16e: #10084 := extend:64[~(31:0[R28] ~>> 1)] + 1
0001c172: NF := 63:63[#10084]
0001c175: VF := ~31:31[~(31:0[R28] ~>> 1)] & 63:63[#10084]
0001c178: ZF := #10084 = 0
0001c17b: CF := 31:31[~(31:0[R28] ~>> 1)] & ~63:63[#10084]
0001c186: R2 := R0
0001c18e: R7 := extend:64[31:1[R28]]
0001c19a: #10090 := ZF
0001c194: when #10090 goto %0001c192
00038841: goto %0001c386

0001c386:
0001c38f: R5 := R5 + 3
0001c397: R5 := R19 + R5
0001c39f: #10204 := 1 + ~R5 + R0
0001c3a3: NF := 63:63[#10204]
0001c3a6: VF := 63:63[R0] & 63:63[~R5] & ~63:63[#10204] | ~63:63[R0] &
          ~63:63[~R5] & 63:63[#10204]
0001c3a9: ZF := #10204 = 0
0001c3ac: CF := 63:63[R0] & 63:63[~R5] | 63:63[~R5] & ~63:63[#10204] |
          63:63[R0] & ~63:63[#10204]
0001c3b6: R0 := mem[R31 + 0x68, el]:u64
0001c3be: R21 := R19 + R0
0001c3c6: R0 := extend:64[31:0[R7]] - 1
0001c3f2: #10209 := ~CF <> 0
0001c3f3: goto %0001c3ea

0001c3ea:
0001c3ec: when #10209 goto %0001c3cd
0001c3ed: goto %0001c3de

0001c3de:
0001c3df: NF := 0
0001c3e2: ZF := 0
0001c3e5: CF := 1
0001c3e8: VF := 0
0001c3ef: goto %0001c3eb

0001c3cd:
0001c3ce: #10210 := ~R1
0001c3d3: NF := 63:63[R21 + #10210 + 1]
0001c3d6: VF := 63:63[R21] & 63:63[#10210] & ~63:63[R21 + #10210 + 1] |
          ~63:63[R21] & ~63:63[#10210] & 63:63[R21 + #10210 + 1]
0001c3d9: ZF := R21 + #10210 + 1 = 0
0001c3dc: CF := 63:63[R21] & 63:63[#10210] | 63:63[#10210] & ~63:63[R21 +
          #10210 + 1] | 63:63[R21] & ~63:63[R21 + #10210 + 1]
0001c3ee: goto %0001c3eb

0001c3eb:
0001c41a: #10212 := CF
0001c41b: goto %0001c412

0001c412:
0001c414: when #10212 goto %0001c3fa
0001c415: goto %0001c406

0001c406:
0001c407: NF := 0
0001c40a: ZF := 0
0001c40d: CF := 0
0001c410: VF := 0
0001c417: goto %0001c413

0001c3fa:
0001c3fb: NF := 63:63[extend:64[31:0[R0]] - 0xF]
0001c3fe: VF := 31:31[R0] & ~63:63[extend:64[31:0[R0]] - 0xF]
0001c401: ZF := extend:64[31:0[R0]] - 0xF = 0
0001c404: CF := 31:31[R0] | ~63:63[extend:64[31:0[R0]] - 0xF] | 31:31[R0] &
          ~63:63[extend:64[31:0[R0]] - 0xF]
0001c416: goto %0001c413

0001c413:
0001c429: #10215 := (~CF | ZF) <> 0
0001c423: when #10215 goto %0001c421
00038840: goto %0001c47d

0001c421:
0001c430: R6 := R26 + 4
0001c436: R0 := 0
0003883f: goto %0001c43a

0001c43a:
0001c43f: R1 := R0 << 1
0001c448: R1 := high:32[R1].pad:64[mem[R6 + R1]]
0001c451: R0 := R0 + 1
0001c459: #10221 := 1 + extend:64[~31:0[R0]] + extend:64[31:0[R7]]
0001c45d: NF := 63:63[#10221]
0001c460: VF := 31:31[~31:0[R0]] & 31:31[R7] & ~63:63[#10221] |
          ~31:31[~31:0[R0]] & ~31:31[R7] & 63:63[#10221]
0001c463: ZF := #10221 = 0
0001c466: CF := 31:31[~31:0[R0]] & 31:31[R7] | 31:31[R7] & ~63:63[#10221] |
          31:31[~31:0[R0]] & ~63:63[#10221]
0001c476: #10223 := (NF = VF & ~ZF) <> 0
0001c470: when #10223 goto %0001c43a
0003883e: goto %0001c479

0001c479:
0001c47b: goto %0001c192

0001c47d:
0001c483: R5 := pad:64[31:4[R0]]
0001c48b: R1 := R2
0001c493: R6 := R21
0003883d: goto %0001c497

0001c497:
0001c4a1: #10234 := 1 + ~R5 + R1
0001c4a5: NF := 63:63[#10234]
0001c4a8: VF := 63:63[R1] & 63:63[~R5] & ~63:63[#10234] | ~63:63[R1] &
          ~63:63[~R5] & 63:63[#10234]
0001c4ab: ZF := #10234 = 0
0001c4ae: CF := 63:63[R1] & 63:63[~R5] | 63:63[~R5] & ~63:63[#10234] |
          63:63[R1] & ~63:63[#10234]
0001c4bb: #10236 := ~ZF <> 0
0001c4b5: when #10236 goto %0001c497
0003883c: goto %0001c4be

0001c4be:
0001c4c4: R0 := 31:0[R0] & 0xFFFFFFF0
0001c4cc: R6 := extend:64[31:0[R0]] + 1
0001c4d4: R1 := 31:0[R0] << 0x21
0001c4dc: #10266 := 1 + extend:64[~31:0[R7]] + extend:64[31:0[R6]]
0001c4e0: NF := 63:63[#10266]
0001c4e3: VF := 31:31[~31:0[R7]] & 31:31[R6] & ~63:63[#10266] |
          ~31:31[~31:0[R7]] & ~31:31[R6] & 63:63[#10266]
0001c4e6: ZF := #10266 = 0
0001c4e9: CF := 31:31[~31:0[R7]] & 31:31[R6] | 31:31[R6] & ~63:63[#10266] |
          31:31[~31:0[R7]] & ~63:63[#10266]
0001c4fc: #10268 := NF = VF
0001c4f6: when #10268 goto %0001c192
0003883b: goto %0001c4ff

0001c4ff:
0001c505: R5 := extend:64[31:0[R1]] + 2
0001c50d: R8 := extend:64[31:0[R0]] + 2
0001c515: #10272 := 1 + extend:64[~31:0[R7]] + extend:64[31:0[R8]]
0001c519: NF := 63:63[#10272]
0001c51c: VF := 31:31[~31:0[R7]] & 31:31[R8] & ~63:63[#10272] |
          ~31:31[~31:0[R7]] & ~31:31[R8] & 63:63[#10272]
0001c51f: ZF := #10272 = 0
0001c522: CF := 31:31[~31:0[R7]] & 31:31[R8] | 31:31[R8] & ~63:63[#10272] |
          31:31[~31:0[R7]] & ~63:63[#10272]
0001c535: #10274 := NF = VF
0001c52f: when #10274 goto %0001c192
0003883a: goto %0001c538

0001c538:
0001c53e: R5 := extend:64[31:0[R1]] + 4
0001c546: R6 := extend:64[31:0[R0]] + 3
0001c54e: #10278 := 1 + extend:64[~31:0[R7]] + extend:64[31:0[R6]]
0001c552: NF := 63:63[#10278]
0001c555: VF := 31:31[~31:0[R7]] & 31:31[R6] & ~63:63[#10278] |
          ~31:31[~31:0[R7]] & ~31:31[R6] & 63:63[#10278]
0001c558: ZF := #10278 = 0
0001c55b: CF := 31:31[~31:0[R7]] & 31:31[R6] | 31:31[R6] & ~63:63[#10278] |
          31:31[~31:0[R7]] & ~63:63[#10278]
0001c56e: #10280 := NF = VF
0001c568: when #10280 goto %0001c192
00038839: goto %0001c571

0001c571:
0001c577: R5 := extend:64[31:0[R1]] + 6
0001c57f: R8 := extend:64[31:0[R0]] + 4
0001c587: #10284 := 1 + extend:64[~31:0[R8]] + extend:64[31:0[R7]]
0001c58b: NF := 63:63[#10284]
0001c58e: VF := 31:31[~31:0[R8]] & 31:31[R7] & ~63:63[#10284] |
          ~31:31[~31:0[R8]] & ~31:31[R7] & 63:63[#10284]
0001c591: ZF := #10284 = 0
0001c594: CF := 31:31[~31:0[R8]] & 31:31[R7] | 31:31[R7] & ~63:63[#10284] |
          31:31[~31:0[R8]] & ~63:63[#10284]
0001c5a8: #10286 := (NF <> VF | ZF) <> 0
0001c5a2: when #10286 goto %0001c192
00038838: goto %0001c5ab

0001c5ab:
0001c5b1: R5 := extend:64[31:0[R1]] + 8
0001c5b9: R6 := extend:64[31:0[R0]] + 5
0001c5c1: #10290 := 1 + extend:64[~31:0[R7]] + extend:64[31:0[R6]]
0001c5c5: NF := 63:63[#10290]
0001c5c8: VF := 31:31[~31:0[R7]] & 31:31[R6] & ~63:63[#10290] |
          ~31:31[~31:0[R7]] & ~31:31[R6] & 63:63[#10290]
0001c5cb: ZF := #10290 = 0
0001c5ce: CF := 31:31[~31:0[R7]] & 31:31[R6] | 31:31[R6] & ~63:63[#10290] |
          31:31[~31:0[R7]] & ~63:63[#10290]
0001c5e1: #10292 := NF = VF
0001c5db: when #10292 goto %0001c192
00038837: goto %0001c5e4

0001c5e4:
0001c5ea: R5 := extend:64[31:0[R1]] + 0xA
0001c5f2: R8 := extend:64[31:0[R0]] + 6
0001c5fa: #10296 := 1 + extend:64[~31:0[R7]] + extend:64[31:0[R8]]
0001c5fe: NF := 63:63[#10296]
0001c601: VF := 31:31[~31:0[R7]] & 31:31[R8] & ~63:63[#10296] |
          ~31:31[~31:0[R7]] & ~31:31[R8] & 63:63[#10296]
0001c604: ZF := #10296 = 0
0001c607: CF := 31:31[~31:0[R7]] & 31:31[R8] | 31:31[R8] & ~63:63[#10296] |
          31:31[~31:0[R7]] & ~63:63[#10296]
0001c61a: #10298 := NF = VF
0001c614: when #10298 goto %0001c192
00038836: goto %0001c61d

0001c61d:
0001c623: R5 := extend:64[31:0[R1]] + 0xC
0001c62b: R6 := extend:64[31:0[R0]] + 7
0001c633: #10302 := 1 + extend:64[~31:0[R6]] + extend:64[31:0[R7]]
0001c637: NF := 63:63[#10302]
0001c63a: VF := 31:31[~31:0[R6]] & 31:31[R7] & ~63:63[#10302] |
          ~31:31[~31:0[R6]] & ~31:31[R7] & 63:63[#10302]
0001c63d: ZF := #10302 = 0
0001c640: CF := 31:31[~31:0[R6]] & 31:31[R7] | 31:31[R7] & ~63:63[#10302] |
          31:31[~31:0[R6]] & ~63:63[#10302]
0001c654: #10304 := (NF <> VF | ZF) <> 0
0001c64e: when #10304 goto %0001c192
00038835: goto %0001c657

0001c657:
0001c65d: R5 := extend:64[31:0[R1]] + 0xE
0001c665: R8 := extend:64[31:0[R0]] + 8
0001c66d: #10308 := 1 + extend:64[~31:0[R8]] + extend:64[31:0[R7]]
0001c671: NF := 63:63[#10308]
0001c674: VF := 31:31[~31:0[R8]] & 31:31[R7] & ~63:63[#10308] |
          ~31:31[~31:0[R8]] & ~31:31[R7] & 63:63[#10308]
0001c677: ZF := #10308 = 0
0001c67a: CF := 31:31[~31:0[R8]] & 31:31[R7] | 31:31[R7] & ~63:63[#10308] |
          31:31[~31:0[R8]] & ~63:63[#10308]
0001c68e: #10310 := (NF <> VF | ZF) <> 0
0001c688: when #10310 goto %0001c192
00038834: goto %0001c691

0001c691:
0001c697: R5 := extend:64[31:0[R1]] + 0x10
0001c69f: R6 := extend:64[31:0[R0]] + 9
0001c6a7: #10314 := 1 + extend:64[~31:0[R6]] + extend:64[31:0[R7]]
0001c6ab: NF := 63:63[#10314]
0001c6ae: VF := 31:31[~31:0[R6]] & 31:31[R7] & ~63:63[#10314] |
          ~31:31[~31:0[R6]] & ~31:31[R7] & 63:63[#10314]
0001c6b1: ZF := #10314 = 0
0001c6b4: CF := 31:31[~31:0[R6]] & 31:31[R7] | 31:31[R7] & ~63:63[#10314] |
          31:31[~31:0[R6]] & ~63:63[#10314]
0001c6c8: #10316 := (NF <> VF | ZF) <> 0
0001c6c2: when #10316 goto %0001c192
00038833: goto %0001c6cb

0001c6cb:
0001c6d1: R5 := extend:64[31:0[R1]] + 0x12
0001c6d9: R8 := extend:64[31:0[R0]] + 0xA
0001c6e1: #10320 := 1 + extend:64[~31:0[R8]] + extend:64[31:0[R7]]
0001c6e5: NF := 63:63[#10320]
0001c6e8: VF := 31:31[~31:0[R8]] & 31:31[R7] & ~63:63[#10320] |
          ~31:31[~31:0[R8]] & ~31:31[R7] & 63:63[#10320]
0001c6eb: ZF := #10320 = 0
0001c6ee: CF := 31:31[~31:0[R8]] & 31:31[R7] | 31:31[R7] & ~63:63[#10320] |
          31:31[~31:0[R8]] & ~63:63[#10320]
0001c702: #10322 := (NF <> VF | ZF) <> 0
0001c6fc: when #10322 goto %0001c192
00038832: goto %0001c705

0001c705:
0001c70b: R5 := extend:64[31:0[R1]] + 0x14
0001c713: R6 := extend:64[31:0[R0]] + 0xB
0001c71b: #10326 := 1 + extend:64[~31:0[R6]] + extend:64[31:0[R7]]
0001c71f: NF := 63:63[#10326]
0001c722: VF := 31:31[~31:0[R6]] & 31:31[R7] & ~63:63[#10326] |
          ~31:31[~31:0[R6]] & ~31:31[R7] & 63:63[#10326]
0001c725: ZF := #10326 = 0
0001c728: CF := 31:31[~31:0[R6]] & 31:31[R7] | 31:31[R7] & ~63:63[#10326] |
          31:31[~31:0[R6]] & ~63:63[#10326]
0001c73c: #10328 := (NF <> VF | ZF) <> 0
0001c736: when #10328 goto %0001c192
00038831: goto %0001c73f

0001c73f:
0001c745: R5 := extend:64[31:0[R1]] + 0x16
0001c74d: R8 := extend:64[31:0[R0]] + 0xC
0001c755: #10332 := 1 + extend:64[~31:0[R8]] + extend:64[31:0[R7]]
0001c759: NF := 63:63[#10332]
0001c75c: VF := 31:31[~31:0[R8]] & 31:31[R7] & ~63:63[#10332] |
          ~31:31[~31:0[R8]] & ~31:31[R7] & 63:63[#10332]
0001c75f: ZF := #10332 = 0
0001c762: CF := 31:31[~31:0[R8]] & 31:31[R7] | 31:31[R7] & ~63:63[#10332] |
          31:31[~31:0[R8]] & ~63:63[#10332]
0001c776: #10334 := (NF <> VF | ZF) <> 0
0001c770: when #10334 goto %0001c192
00038830: goto %0001c779

0001c779:
0001c77f: R5 := extend:64[31:0[R1]] + 0x18
0001c787: R6 := extend:64[31:0[R0]] + 0xD
0001c78f: #10338 := 1 + extend:64[~31:0[R6]] + extend:64[31:0[R7]]
0001c793: NF := 63:63[#10338]
0001c796: VF := 31:31[~31:0[R6]] & 31:31[R7] & ~63:63[#10338] |
          ~31:31[~31:0[R6]] & ~31:31[R7] & 63:63[#10338]
0001c799: ZF := #10338 = 0
0001c79c: CF := 31:31[~31:0[R6]] & 31:31[R7] | 31:31[R7] & ~63:63[#10338] |
          31:31[~31:0[R6]] & ~63:63[#10338]
0001c7b0: #10340 := (NF <> VF | ZF) <> 0
0001c7aa: when #10340 goto %0001c192
0003882f: goto %0001c7b3

0001c7b3:
0001c7b9: R5 := extend:64[31:0[R1]] + 0x1A
0001c7c1: R8 := extend:64[31:0[R0]] + 0xE
0001c7c9: #10344 := 1 + extend:64[~31:0[R8]] + extend:64[31:0[R7]]
0001c7cd: NF := 63:63[#10344]
0001c7d0: VF := 31:31[~31:0[R8]] & 31:31[R7] & ~63:63[#10344] |
          ~31:31[~31:0[R8]] & ~31:31[R7] & 63:63[#10344]
0001c7d3: ZF := #10344 = 0
0001c7d6: CF := 31:31[~31:0[R8]] & 31:31[R7] | 31:31[R7] & ~63:63[#10344] |
          31:31[~31:0[R8]] & ~63:63[#10344]
0001c7ea: #10346 := (NF <> VF | ZF) <> 0
0001c7e4: when #10346 goto %0001c192
0003882e: goto %0001c7ed

0001c7ed:
0001c7f3: R5 := extend:64[31:0[R1]] + 0x1C
0001c7fb: R0 := extend:64[31:0[R0]] + 0xF
0001c803: #10350 := 1 + extend:64[~31:0[R0]] + extend:64[31:0[R7]]
0001c807: NF := 63:63[#10350]
0001c80a: VF := 31:31[~31:0[R0]] & 31:31[R7] & ~63:63[#10350] |
          ~31:31[~31:0[R0]] & ~31:31[R7] & 63:63[#10350]
0001c80d: ZF := #10350 = 0
0001c810: CF := 31:31[~31:0[R0]] & 31:31[R7] | 31:31[R7] & ~63:63[#10350] |
          31:31[~31:0[R0]] & ~63:63[#10350]
0001c824: #10352 := (NF <> VF | ZF) <> 0
0001c81e: when #10352 goto %0001c192
0003882d: goto %0001c827

0001c827:
0001c82d: R1 := extend:64[31:0[R1]] + 0x1E
0003882c: goto %0001c192

0001c192:
0001c1a2: R1 := mem[R31 + 0x70, el]:u64
0001c1a9: R0 := 1
0001c1b1: mem := mem with [R31 + 0x68, el]:u64 <- R2
0001c1b6: R30 := 0x69A0
0001c1b8: call @__printf_chk with return %0001c1ba

0001c1ba:
0001c1c0: R2 := mem[R31 + 0x68, el]:u64
0001c1c8: R0 := R2
0001c1cd: R30 := 0x69AC
0001c1cf: call @free with return %0001c1d1

0001c1d1:
0001c1d7: R0 := mem[R23 + 0xF78, el]:u64
0001c1e0: R2 := pad:64[mem[R0, el]:u32]
0003882b: goto %0001c1e2

0001c1e2:
0001c1e8: R28 := extend:64[31:0[R28]] + 4
0001c1f4: R24 := 31:0[R3] & 0xFFFF
0001c1fc: R22 := 31:0[R22] & 0xFFFF
0001c204: R1 := extend:64[31:0[R24]] + 3
0001c20d: R0 := 31:0[R24]
0001c215: #10145 := 1 + extend:64[~31:0[R25]] + extend:64[31:0[R1]]
0001c219: NF := 63:63[#10145]
0001c21c: VF := 31:31[~31:0[R25]] & 31:31[R1] & ~63:63[#10145] |
          ~31:31[~31:0[R25]] & ~31:31[R1] & 63:63[#10145]
0001c21f: ZF := #10145 = 0
0001c222: CF := 31:31[~31:0[R25]] & 31:31[R1] | 31:31[R1] & ~63:63[#10145] |
          31:31[~31:0[R25]] & ~63:63[#10145]
0001c232: #10147 := NF <> VF
0001c22c: when #10147 goto %0001c22a
0003882a: goto %0001b17d

0001c95b:
0001c962: R0 := pad:64[mem[R20 + 0x12C, el]:u32]
0001c96d: #10378 := ~31:0[R0] = 0
0001c967: when #10378 goto %0001c0e6
00038829: goto %0001b1d1

0001b1d1:
0001b1e2: R0 := pad:64[mem[R20 + 0x130, el]:u32]
0001b1e8: R28 := 0
0001b1f0: mem := mem with [R31 + 0x68, el]:u32 <- 0
0001b1f7: R26 := 0
0001b1fe: #9418 := 0xFFFFFFFFFFFFFFFE + extend:64[31:0[R0]]
0001b202: NF := 63:63[#9418]
0001b205: VF := 31:31[R0] & ~63:63[#9418]
0001b208: ZF := #9418 = 0
0001b20b: CF := 31:31[R0] | 31:31[R0] & ~63:63[#9418] | ~63:63[#9418]
0001b215: R27 := 0
0001b21b: R25 := 0
0001b221: R24 := 0
0001b22d: #9420 := ZF
0001b227: when #9420 goto %0001b225
00038828: goto %0001be9a

0001be9a:
0001bea9: #9998 := 0xFFFFFFFFFFFFFFFF + extend:64[31:0[R0]]
0001bead: NF := 63:63[#9998]
0001beb0: VF := 31:31[R0] & ~63:63[#9998]
0001beb3: ZF := #9998 = 0
0001beb6: CF := 31:31[R0] | 31:31[R0] & ~63:63[#9998] | ~63:63[#9998]
0001bec5: #10000 := ZF
0001bebf: when #10000 goto %0001bebd
00038827: goto %0001b459

0001b459:
0001b469: R0 := 31:0[R27] & 0xFFFF
0001b471: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001b479: R21 := extend:64[31:0[R0]] + 0x40
0001b482: R0 := pad:64[mem[R20 + 0x134, el]:u32]
0001b489: R1 := extend:64[31:0[R27]]
0001b491: mem := mem with [R31 + 0x70, el]:u64 <- R1
0001b499: R21 := 31:0[R21] & 0xFFFF
0001b4a5: #9550 := ~31:0[R0] = 0
0001b49f: when #9550 goto %0001b49d
00038826: goto %0001b5aa

0001b5aa:
0001b5b4: R21 := 31:0[R21] + 31:0[R26]
0001b5bd: R0 := pad:64[mem[R20 + 0x130, el]:u32]
0001b5c5: R1 := 31:0[R21] & 0xFFFF
0001b5cd: mem := mem with [R31 + 0x80, el]:u32 <- 31:0[R1]
0001b5d4: R1 := R20 + 0x64
0001b5dc: mem := mem with [R31 + 0x90, el]:u64 <- R1
0001b5e3: R3 := R20 + 0x32
0001b5ef: #9613 := ~31:0[R0] = 0
0001b5e9: when #9613 goto %0001b5e7
00038825: goto %0001bff6

0001bff6:
0001bffd: R0 := pad:64[mem[R20 + 0x12C, el]:u32]
0001c009: #10041 := 31:0[R0] = 0
0001c003: when #10041 goto %0001c001
00038824: goto %0001b5e7

0001c001:
0001c011: R0 := R3
0001c019: mem := mem with [R31 + 0x90, el]:u64 <- R3
0001c01e: R30 := 0x6FBC
0001c020: call @strdup with return %0001c022

0001c022:
0001c025: R30 := 0x6FC0
0001c027: call @uppercase with return %0001c029

0001c029:
0001c02f: R1 := R0
0001c037: R0 := R20
0001c03f: mem := mem with [R31 + 0xA0, el]:u64 <- R1
0001c044: R30 := 0x6FD0
0001c046: call @strdup with return %0001c048

0001c048:
0001c04b: R30 := 0x6FD4
0001c04d: call @uppercase with return %0001c04f

0001c04f:
0001c055: R1 := R0
0001c05c: R0 := R20 + 0x64
0001c064: mem := mem with [R31 + 0xA8, el]:u64 <- R1
0001c069: R30 := 0x6FE4
0001c06b: call @strdup with return %0001c06d

0001c06d:
0001c070: R30 := 0x6FE8
0001c072: call @uppercase with return %0001c074

0001c074:
0001c07a: R1 := R0
0001c082: R3 := mem[R31 + 0x90, el]:u64
0001c08a: mem := mem with [R31 + 0x98, el]:u64 <- R3
0001c092: mem := mem with [R31 + 0xB0, el]:u64 <- R1
0001c09a: R0 := R3
0001c09f: R30 := 0x7000
0001c0a1: call @strlen with return %0001c0a3

0001c0a3:
0001c0aa: R21 := 31:0[R0]
0001c0b2: R0 := R20
0001c0b7: R30 := 0x700C
0001c0b9: call @strlen with return %0001c0bb

0001c0bb:
0001c0c2: R22 := 31:0[R0]
0001c0c9: R0 := R20 + 0x64
0001c0ce: R30 := 0x7018
0001c0d0: call @strlen with return %0001c0d2

0001c0d2:
0001c0d8: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001c0e0: R3 := mem[R31 + 0x98, el]:u64
0001c0e4: goto %0001b6c7

0001b5e7:
0001b5f7: R0 := R3
0001b5ff: mem := mem with [R31 + 0x98, el]:u64 <- R3
0001b604: R30 := 0x64F8
0001b606: call @strdup with return %0001b608

0001b608:
0001b60b: R30 := 0x64FC
0001b60d: call @uppercase with return %0001b60f

0001b60f:
0001b615: R22 := R0
0001b61d: R1 := R22
0001b624: R0 := R31 + 0xA0
0001b629: R30 := 0x650C
0001b62b: call @unicode with return %0001b62d

0001b62d:
0001b634: R21 := 31:0[R0]
0001b63c: R0 := R22
0001b641: R30 := 0x6518
0001b643: call @free with return %0001b645

0001b645:
0001b64b: R1 := R20
0001b652: R0 := R31 + 0xA8
0001b657: R30 := 0x6524
0001b659: call @unicode with return %0001b65b

0001b65b:
0001b662: R22 := 31:0[R0]
0001b669: R0 := R20 + 0x64
0001b66e: R30 := 0x6530
0001b670: call @strdup with return %0001b672

0001b672:
0001b675: R30 := 0x6534
0001b677: call @uppercase with return %0001b679

0001b679:
0001b67f: R1 := R0
0001b686: R0 := R31 + 0xB0
0001b68e: mem := mem with [R31 + 0x90, el]:u64 <- R1
0001b693: R30 := 0x6544
0001b695: call @unicode with return %0001b697

0001b697:
0001b69e: R2 := 31:0[R0]
0001b6a6: R1 := mem[R31 + 0x90, el]:u64
0001b6ae: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R2]
0001b6b6: R0 := R1
0001b6bb: R30 := 0x6558
0001b6bd: call @free with return %0001b6bf

0001b6bf:
0001b6c5: R3 := mem[R31 + 0x98, el]:u64
00038823: goto %0001b6c7

0001b6c7:
0001b6cd: R23 := mem[R23 + 0xF78, el]:u64
0001b6d6: R0 := pad:64[mem[R23, el]:u32]
0001b6e2: #9647 := ~31:0[R0] = 0
0001b6dc: when #9647 goto %0001b6da
00038822: goto %0001b7f3

0001b6da:
0001b6e8: R1 := 0x11000
0001b6ef: R0 := 1
0001b6f6: R1 := R1 + 0x860
0001b6fe: mem := mem with [R31 + 0x98, el]:u64 <- R3
0001b703: R30 := 0x6EFC
0001b705: call @__printf_chk with return %0001b707

0001b707:
0001b70c: R2 := R20 + 0x64
0001b712: R1 := 0x11000
0001b719: R0 := 1
0001b720: R1 := R1 + 0x870
0001b725: R30 := 0x6F10
0001b727: call @__printf_chk with return %0001b729

0001b729:
0001b72f: R3 := mem[R31 + 0x98, el]:u64
0001b735: R1 := 0x11000
0001b73c: R0 := 1
0001b743: R1 := R1 + 0x888
0001b74b: R2 := R3
0001b750: R30 := 0x6F28
0001b752: call @__printf_chk with return %0001b754

0001b754:
0001b758: R1 := 0x11000
0001b760: R2 := R20
0001b767: R1 := R1 + 0x8A0
0001b76e: R0 := 1
0001b773: R30 := 0x6F3C
0001b775: call @__printf_chk with return %0001b777

0001b777:
0001b781: #9655 := ~31:0[R27] = 0
0001b77b: when #9655 goto %0001b779
00038821: goto %0001b7e5

0001b779:
0001b789: R1 := mem[R31 + 0x70, el]:u64
0001b791: R0 := R25
0001b798: R2 := 7
0001b79d: R30 := 0x7034
0001b79f: call @printmem with return %0001b7a1

0001b7a1:
0001b7a7: R2 := R0
0001b7b0: R3 := 31:0[R27]
0001b7b6: R1 := 0x11000
0001b7bd: R1 := R1 + 0x8B8
0001b7c5: R20 := R0
0001b7cc: R0 := 1
0001b7d1: R30 := 0x7050
0001b7d3: call @__printf_chk with return %0001b7d5

0001b7d5:
0001b7db: R0 := R20
0001b7e0: R30 := 0x7058
0001b7e2: call @free with return %0001b7e4

0001b7e4:
0001b7e7: goto %0001b7e5

0001b7e5:
0001b7ef: R0 := pad:64[mem[R31 + 0x68, el]:u32]
0001b7fb: #9671 := 31:0[R0] = 0
0001b7f5: when #9671 goto %0001b7f3
00038820: goto %0001bb29

0001bb29:
0001bb2f: R1 := R28
0001bb37: R0 := R24
0001bb3e: R2 := 7
0001bb43: R30 := 0x6F58
0001bb45: call @printmem with return %0001bb47

0001bb47:
0001bb4e: R3 := pad:64[mem[R31 + 0x68, el]:u32]
0001bb56: R2 := R0
0001bb5c: R1 := 0x11000
0001bb63: R1 := R1 + 0x8B8
0001bb6b: R20 := R0
0001bb72: R0 := 1
0001bb77: R30 := 0x6F74
0001bb79: call @__printf_chk with return %0001bb7b

0001bb7b:
0001bb81: R0 := R20
0001bb86: R30 := 0x6F7C
0001bb88: call @free with return %0001bb8a

0001bb8a:
0001bb8c: goto %0001b7f3

0001b7f3:
0001b801: R0 := 0x400
0001b806: R30 := 0x6570
0001b808: call @new with return %0001b80a

0001b80a:
0001b80e: R3 := 0x544E
0001b816: R20 := R0
0001b81f: R8 := pad:64[mem[R31 + 0x90, el]:u32]
0001b827: R1 := extend:64[31:0[R21]] + 0x40
0001b82e: R3 := R3 & 0xFFFFFFFF0000FFFF | 0x4D4C0000
0001b837: R0 := 31:0[R1] + 31:0[R22]
0001b840: R4 := pad:64[mem[R31 + 0x68, el]:u32]
0001b847: R3 := R3 & 0xFFFF0000FFFFFFFF | 0x535300000000
0001b850: R2 := 31:0[R0] + 31:0[R8]
0001b857: R3 := R3 & 0xFFFFFFFFFFFF | 0x50000000000000
0001b85f: R7 := 31:0[R21] & 0xFFFF
0001b867: R6 := 31:0[R22] & 0xFFFF
0001b870: R4 := 31:0[R2] + 31:0[R4]
0001b877: R5 := 3
0001b87f: mem := mem with [R20, el]:u64 <- R3
0001b886: R3 := 0x40
0001b88e: mem := mem with [R20 + 8, el]:u32 <- 31:0[R5]
0001b896: R5 := 31:0[R8] & 0xFFFF
0001b89e: mem := mem with [R20 + 0x10, el]:u32 <- 31:0[R2]
0001b8a5: R21 := extend:64[31:0[R21]]
0001b8ad: mem := mem with [R20 + 0x18, el]:u32 <- 31:0[R4]
0001b8b5: R2 := R21
0001b8bd: mem := mem with [R20 + 0x20, el]:u32 <- 31:0[R3]
0001b8c6: R3 := 31:0[R7] + 31:0[R6]
0001b8ce: mem := mem with [R20 + 0x28, el]:u32 <- 31:0[R1]
0001b8d5: R22 := extend:64[31:0[R22]]
0001b8dd: mem := mem with [R20 + 0x30, el]:u32 <- 31:0[R0]
0001b8e6: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0001b8ee: mem := mem with [R31 + 0x68, el]:u32 <- 31:0[R4]
0001b8f7: R3 := 31:0[R0] + 31:0[R3]
0001b900: R4 := pad:64[mem[R31 + 0x88, el]:u32]
0001b909: R0 := 31:0[R8]
0001b912: R8 := pad:64[mem[R19 + 0x14, el]:u32]
0001b91a: R1 := mem[R31 + 0xA0, el]:u64
0001b923: R3 := 31:0[R5] + 31:0[R3]
0001b92c: R19 := extend:64[31:0[R0]]
0001b935: R0 := R20 + 0x40
0001b93f: R26 := R21 + R22
0001b948: R21 := R21 + 0x40
0001b952: R23 := R26 + R19
0001b964: mem := mem with [R20 + 0x34, el]:u32 <- 0
0001b96e: mem := mem with [R20 + 0x3C, el]:u32 <- 31:0[R8]
0001b973: R30 := 0x6648
0001b975: call @memcpy with return %0001b977

0001b977:
0001b97d: R1 := mem[R31 + 0xA8, el]:u64
0001b985: R2 := R22
0001b98d: R0 := R20 + R21
0001b992: R30 := 0x6658
0001b994: call @memcpy with return %0001b996

0001b996:
0001b99c: R1 := mem[R31 + 0xB0, el]:u64
0001b9a3: R0 := R26 + 0x40
0001b9ab: R2 := R19
0001b9b3: R0 := R20 + R0
0001b9b8: R30 := 0x666C
0001b9ba: call @memcpy with return %0001b9bc

0001b9bc:
0001b9c1: R0 := R23 + 0x40
0001b9c9: R2 := R28
0001b9d1: R1 := R24
0001b9d9: R0 := R20 + R0
0001b9de: R30 := 0x6680
0001b9e0: call @memcpy with return %0001b9e2

0001b9e2:
0001b9e8: R2 := mem[R31 + 0x70, el]:u64
0001b9f0: R1 := R25
0001b9f7: R0 := R23 + 0x58
0001b9ff: R0 := R20 + R0
0001ba04: R30 := 0x6694
0001ba06: call @memcpy with return %0001ba08

0001ba08:
0001ba0e: R0 := R25
0001ba13: R30 := 0x669C
0001ba15: call @free with return %0001ba17

0001ba17:
0001ba1d: R0 := R24
0001ba22: R30 := 0x66A4
0001ba24: call @free with return %0001ba26

0001ba26:
0001ba2c: R0 := mem[R31 + 0xB0, el]:u64
0001ba31: R30 := 0x66AC
0001ba33: call @free with return %0001ba35

0001ba35:
0001ba3b: R0 := mem[R31 + 0xA8, el]:u64
0001ba40: R30 := 0x66B4
0001ba42: call @free with return %0001ba44

0001ba44:
0001ba4a: R0 := mem[R31 + 0xA0, el]:u64
0001ba4f: R30 := 0x66BC
0001ba51: call @free with return %0001ba53

0001ba53:
0001ba59: R1 := mem[R31 + 0x78, el]:u64
0001ba62: R4 := pad:64[mem[R31 + 0x68, el]:u32]
0001ba6b: R0 := 31:0[R4] + 31:0[R27]
0001ba73: mem := mem with [R1, el]:u64 <- R20
0003881f: goto %0001ba75

0001ba75:
0001ba79: R1 := 0x27000
0001ba81: R1 := mem[R1 + 0xFB8, el]:u64
0001ba89: R2 := mem[R31 + 0x1B8, el]:u64
0001ba91: R3 := mem[R1, el]:u64
0001ba99: #9827 := 1 + ~R3 + R2
0001ba9d: NF := 63:63[#9827]
0001baa0: VF := 63:63[R2] & 63:63[~R3] & ~63:63[#9827] | ~63:63[R2] &
          ~63:63[~R3] & 63:63[#9827]
0001baa3: ZF := #9827 = 0
0001baa6: CF := 63:63[R2] & 63:63[~R3] | 63:63[~R3] & ~63:63[#9827] |
          63:63[R2] & ~63:63[#9827]
0001baaa: R2 := #9827
0001bab0: R3 := 0
0001babc: #9829 := ~ZF <> 0
0001bab6: when #9829 goto %0001bab4
0003881e: goto %0001bad2

0001bab4:
0001bac1: R30 := 0x70A0
0001bac3: call @__stack_chk_fail with return %0001bac5

0001bac5:
0001bacc: R27 := 31:0[R22]
0001bad0: goto %0001b17d

0001b17d:
0001b18a: #9409 := ~31:0[R2] = 0
0001b184: when #9409 goto %0001b182
0003881d: goto %0001b1c3

0001b182:
0001b193: R2 := pad:64[mem[R31 + 0x80, el]:u32]
0001b19c: R4 := 31:0[R27]
0001b1a5: R3 := 31:0[R22]
0001b1ab: R1 := 0x11000
0001b1b2: R0 := 1
0001b1b9: R1 := R1 + 0x808
0001b1be: R30 := 0x6FAC
0001b1c0: call @__printf_chk with return %0001b1c2

0001b1c2:
0001b1c5: goto %0001b1c3

0001b1c3:
0001b1cd: R0 := pad:64[mem[R20 + 0x12C, el]:u32]
0001b1d9: #9416 := 31:0[R0] = 0
0001b1d3: when #9416 goto %0001b1d1
0003881c: goto %0001c875

0001c875:
0001c87e: #10356 := 31:0[R22] = 0
0001c878: when #10356 goto %0001c0e6
0003881b: goto %0001c881

0001c0e6:
0001c0eb: R0 := 0
0001c0ef: goto %0001ba75

0001c881:
0001c885: R0 := 9
0001c88a: R30 := 0x69F0
0001c88c: call @new with return %0001c88e

0001c88e:
0001c893: R1 := R20 + 0xFA
0001c89b: R21 := R0
0001c8a3: mem := mem with [R31 + 0x68, el]:u64 <- R1
0001c8a8: R30 := 0x6A00
0001c8aa: call @random with return %0001c8ac

0001c8ac:
0001c8b2: R25 := R0
0001c8b7: R30 := 0x6A08
0001c8b9: call @random with return %0001c8bb

0001c8bb:
0001c8c1: R1 := R0
0001c8c9: R25 := R1 | R25 << 0x20
0001c8d1: mem := mem with [R21, el]:u64 <- R25
0001c8d7: R0 := 0
0001c8dd: R25 := 0x8000
0001c8e2: R30 := 0x6A20
0001c8e5: call @time with return %0001c8e7

0001c8e7:
0001c8ec: R25 := R25 & 0xFFFFFFFF0000FFFF | 0xD53E0000
0001c8f4: R1 := mem[R23 + 0xF78, el]:u64
0001c8fa: R2 := 0x9680
0001c901: R25 := R25 & 0xFFFF0000FFFFFFFF | 0xB1DE00000000
0001c908: R2 := R2 & 0xFFFFFFFF0000FFFF | 0x980000
0001c90f: R25 := R25 & 0xFFFFFFFFFFFF | 0x19D000000000000
0001c918: R1 := pad:64[mem[R1, el]:u32]
0001c921: R24 := R25 + R0 * R2
0001c92c: #10375 := ~31:0[R1] = 0
0001c926: when #10375 goto %0001bbb6
0003881a: goto %0001bc15

0001bbb6:
0001bbbc: R0 := R21
0001bbc3: R2 := 7
0001bbc9: R1 := 8
0001bbce: R30 := 0x706C
0001bbd0: call @printmem with return %0001bbd2

0001bbd2:
0001bbd8: R3 := R24
0001bbe0: R2 := R0
0001bbe6: R1 := 0x11000
0001bbed: R1 := R1 + 0x838
0001bbf5: R26 := R0
0001bbfc: R0 := 1
0001bc01: R30 := 0x7088
0001bc03: call @__printf_chk with return %0001bc05

0001bc05:
0001bc0b: R0 := R26
0001bc10: R30 := 0x7090
0001bc12: call @free with return %0001bc14

0001bc14:
0001bc17: goto %0001bc15

0001bc15:
0001bc1e: R0 := extend:64[31:0[R22]] + 0x21
0001bc25: R25 := R22 & 0xFFFF
0001bc2b: R28 := 0x18
0001bc33: R27 := extend:64[31:0[R22]] + 0x30
0001bc3a: R0 := extend:64[31:0[R0]]
0001bc3f: R30 := 0x6A5C
0001bc41: call @new with return %0001bc43

0001bc43:
0001bc49: R5 := R0
0001bc4f: R3 := 0x101
0001bc59: R2 := R25
0001bc61: mem := mem with [R31 + 0x68, el]:u32 <- 31:0[R28]
0001bc6a: R26 := 31:0[R28]
0001bc73: mem := mem with [R5, el]:u64 <- R5
0001bc77: mem := mem with [R5, el]:u64 <- R5 + 8
0001bc81: R3 := mem[R21, el]:u64
0001bc89: mem := mem with [R5 + 0x10, el]:u64 <- R3
0001bc91: mem := mem with [R5 + 0x18, el]:u32 <- 0
0001bc98: R0 := R5 + 0x1C
0001bca0: mem := mem with [R31 + 0x70, el]:u64 <- R5
0001bca5: R30 := 0x6A94
0001bca7: call @memcpy with return %0001bca9

0001bca9:
0001bcaf: R5 := mem[R31 + 0x70, el]:u64
0001bcb7: R0 := extend:64[31:0[R22]] + 0x31
0001bcbf: R2 := R5 + R25
0001bcc6: R0 := extend:64[31:0[R0]]
0001bcce: mem := mem with [R2 + 0x1C, el]:u32 <- 0
0001bcd3: R30 := 0x6AAC
0001bcd5: call @new with return %0001bcd7

0001bcd7:
0001bcdd: R25 := R0
0001bce5: R1 := extend:64[31:0[R22]] + 0x29
0001bcec: R0 := extend:64[31:0[R1]]
0001bcf1: R30 := 0x6ABC
0001bcf3: call @new with return %0001bcf5

0001bcf5:
0001bcfb: R24 := R0
0001bd03: R6 := extend:64[31:0[R22]] + 0x20
0001bd0b: R3 := mem[R19 + 0x18, el]:u64
0001bd12: R6 := extend:64[31:0[R6]]
0001bd1a: R5 := mem[R31 + 0x70, el]:u64
0001bd24: R2 := R6
0001bd2c: mem := mem with [R31 + 0x70, el]:u64 <- R6
0001bd34: R1 := R5
0001bd3c: mem := mem with [R31 + 0x80, el]:u64 <- R5
0001bd41: R30 := 0x6AE8
0001bd43: call @memcpy with return %0001bd45

0001bd45:
0001bd4b: R3 := extend:64[31:0[R22]] + 0x28
0001bd53: R4 := R25
0001bd5b: R2 := R24
0001bd61: R1 := 0x10
0001bd68: R3 := extend:64[31:0[R3]]
0001bd6f: R0 := R20 + 0xFA
0001bd74: R30 := 0x6B04
0001bd76: call @hmac_md5 with return %0001bd78

0001bd78:
0001bd7e: R6 := mem[R31 + 0x70, el]:u64
0001bd85: R0 := R25 + 0x10
0001bd8d: R5 := mem[R31 + 0x80, el]:u64
0001bd95: R2 := R6
0001bd9d: mem := mem with [R31 + 0x70, el]:u64 <- R5
0001bda5: R1 := R5
0001bdaa: R30 := 0x6B20
0001bdac: call @memcpy with return %0001bdae

0001bdae:
0001bdb4: R0 := R24
0001bdb9: R30 := 0x6B28
0001bdbb: call @free with return %0001bdbd

0001bdbd:
0001bdc1: R0 := 0x19
0001bdc6: R30 := 0x6B30
0001bdc8: call @new with return %0001bdca

0001bdca:
0001bdd0: R24 := R0
0001bdd6: R0 := 0x11
0001bddb: R30 := 0x6B3C
0001bddd: call @new with return %0001bddf

0001bddf:
0001bde5: R22 := R0
0001bded: R1 := mem[R19 + 0x18, el]:u64
0001bdf3: R3 := 0x10
0001bdfb: mem := mem with [R22, el]:u64 <- R1
0001be03: R4 := R24
0001be0b: R2 := R22
0001be13: R1 := R3
0001be1b: R6 := mem[R21, el]:u64
0001be23: mem := mem with [R22 + 8, el]:u64 <- R6
0001be2a: R0 := R20 + 0xFA
0001be2f: R30 := 0x6B68
0001be31: call @hmac_md5 with return %0001be33

0001be33:
0001be39: R0 := mem[R21, el]:u64
0001be41: mem := mem with [R24 + 0x10, el]:u64 <- R0
0001be49: R0 := R22
0001be4e: R30 := 0x6B78
0001be50: call @free with return %0001be52

0001be52:
0001be58: R5 := mem[R31 + 0x70, el]:u64
0001be60: R0 := R5
0001be65: R30 := 0x6B84
0001be67: call @free with return %0001be69

0001be69:
0001be6f: R0 := R21
0001be74: R30 := 0x6B8C
0001be76: call @free with return %0001be78

0001be78:
0001be7f: R0 := pad:64[mem[R20 + 0x130, el]:u32]
0001be86: #9995 := 0xFFFFFFFFFFFFFFFE + extend:64[31:0[R0]]
0001be8a: NF := 63:63[#9995]
0001be8d: VF := 31:31[R0] & ~63:63[#9995]
0001be90: ZF := #9995 = 0
0001be93: CF := 31:31[R0] | 31:31[R0] & ~63:63[#9995] | ~63:63[#9995]
0001bea2: #9997 := ~ZF <> 0
0001be9c: when #9997 goto %0001be9a
00038819: goto %0001b225

0001b225:
0001b233: R0 := 9
0001b238: R30 := 0x6BA0
0001b23a: call @new with return %0001b23c

0001b23c:
0001b242: R21 := R0
0001b247: R30 := 0x6BA8
0001b24a: call @random with return %0001b24c

0001b24c:
0001b252: R24 := R0
0001b257: R30 := 0x6BB0
0001b259: call @random with return %0001b25b

0001b25b:
0001b261: R1 := R0
0001b267: R0 := 0x19
0001b26f: R24 := R1 | R24 << 0x20
0001b277: mem := mem with [R21, el]:u64 <- R24
0001b27d: R28 := 0x18
0001b284: R22 := R31 + 0xB8
0001b289: R30 := 0x6BCC
0001b28b: call @new with return %0001b28d

0001b28d:
0001b293: R24 := R0
0001b29b: R1 := mem[R21, el]:u64
0001b2a1: R0 := 0x11
0001b2a9: mem := mem with [R24, el]:u64 <- R1
0001b2b2: R26 := 31:0[R28]
0001b2bb: mem := mem with [R24, el]:u64 <- R24 + 0x10
0001b2bf: mem := mem with [R24, el]:u64 <- R24 + 0x18
0001b2c8: R27 := 31:0[R28]
0001b2d0: mem := mem with [R31 + 0x68, el]:u32 <- 31:0[R28]
0001b2d8: mem := mem with [R31 + 0x70, el]:u64 <- R21
0001b2dd: R30 := 0x6BF4
0001b2df: call @new with return %0001b2e1

0001b2e1:
0001b2e7: R25 := R0
0001b2ed: R0 := 0x11
0001b2f2: R30 := 0x6C00
0001b2f4: call @new with return %0001b2f6

0001b2f6:
0001b2fc: R2 := R0
0001b304: R3 := mem[R31 + 0x70, el]:u64
0001b30c: R21 := R0
0001b314: R1 := mem[R19 + 0x18, el]:u64
0001b31c: mem := mem with [R25, el]:u64 <- R1
0001b322: R1 := 0x10
0001b32a: R0 := R25
0001b332: R3 := mem[R3, el]:u64
0001b33a: mem := mem with [R25 + 8, el]:u64 <- R3
0001b33f: R30 := 0x6C28
0001b341: call @md5_buffer with return %0001b343

0001b343:
0001b349: R0 := R25
0001b34e: R30 := 0x6C30
0001b350: call @free with return %0001b352

0001b352:
0001b356: R0 := 0x19
0001b35b: R30 := 0x6C38
0001b35d: call @new with return %0001b35f

0001b35f:
0001b365: R1 := R22
0001b36d: R25 := R0
0001b374: R0 := R20 + 0xC8
0001b379: R30 := 0x6C48
0001b37b: call @ntlm_set_key with return %0001b37d

0001b37d:
0001b383: R2 := R25
0001b38a: R3 := 0
0001b392: R1 := R21
0001b39a: R0 := R22
0001b39f: R30 := 0x6C5C
0001b3a1: call @gl_des_ecb_crypt with return %0001b3a3

0001b3a3:
0001b3a9: R1 := R22
0001b3b0: R0 := R20 + 0xCF
0001b3b5: R30 := 0x6C68
0001b3b7: call @ntlm_set_key with return %0001b3b9

0001b3b9:
0001b3be: R2 := R25 + 8
0001b3c5: R3 := 0
0001b3cd: R1 := R21
0001b3d5: R0 := R22
0001b3da: R30 := 0x6C7C
0001b3dc: call @gl_des_ecb_crypt with return %0001b3de

0001b3de:
0001b3e4: R1 := R22
0001b3eb: R0 := R20 + 0xD6
0001b3f0: R30 := 0x6C88
0001b3f2: call @ntlm_set_key with return %0001b3f4

0001b3f4:
0001b3f9: R2 := R25 + 0x10
0001b401: R1 := R21
0001b408: R3 := 0
0001b410: R0 := R22
0001b415: R30 := 0x6C9C
0001b417: call @gl_des_ecb_crypt with return %0001b419

0001b419:
0001b41f: R0 := R21
0001b424: R30 := 0x6CA4
0001b426: call @free with return %0001b428

0001b428:
0001b42e: R0 := mem[R31 + 0x70, el]:u64
0001b433: R30 := 0x6CAC
0001b435: call @free with return %0001b437

0001b437:
0001b43e: R0 := pad:64[mem[R20 + 0x130, el]:u32]
0001b445: #9500 := 0xFFFFFFFFFFFFFFFF + extend:64[31:0[R0]]
0001b449: NF := 63:63[#9500]
0001b44c: VF := 31:31[R0] & ~63:63[#9500]
0001b44f: ZF := #9500 = 0
0001b452: CF := 31:31[R0] | 31:31[R0] & ~63:63[#9500] | ~63:63[#9500]
0001b461: #9502 := ~ZF <> 0
0001b45b: when #9502 goto %0001b459
00038818: goto %0001bebd

0001bebd:
0001becc: R22 := R31 + 0xB8
0001bed2: R0 := 0x19
0001bed7: R30 := 0x6CC4
0001bed9: call @new with return %0001bedb

0001bedb:
0001bee1: R25 := R0
0001bee9: R1 := R22
0001bef0: R0 := R20 + 0xC8
0001bef5: R30 := 0x6CD4
0001bef7: call @ntlm_set_key with return %0001bef9

0001bef9:
0001befe: R21 := 0x58
0001bf05: R4 := R19 + 0x18
0001bf0d: R2 := R25
0001bf14: R3 := 0
0001bf1c: R1 := R4
0001bf24: R0 := R22
0001bf2c: mem := mem with [R31 + 0x80, el]:u64 <- R4
0001bf31: R30 := 0x6CF4
0001bf33: call @gl_des_ecb_crypt with return %0001bf35

0001bf35:
0001bf3b: R1 := R22
0001bf42: R0 := R20 + 0xCF
0001bf47: R30 := 0x6D00
0001bf49: call @ntlm_set_key with return %0001bf4b

0001bf4b:
0001bf51: R4 := mem[R31 + 0x80, el]:u64
0001bf58: R2 := R25 + 8
0001bf5e: R0 := 0x18
0001bf65: R3 := 0
0001bf6d: R1 := R4
0001bf74: R4 := 0x18
0001bf7d: R27 := 31:0[R0]
0001bf85: mem := mem with [R31 + 0x70, el]:u64 <- R0
0001bf8d: R0 := R22
0001bf95: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R4]
0001bf9a: R30 := 0x6D2C
0001bf9c: call @gl_des_ecb_crypt with return %0001bf9e

0001bf9e:
0001bfa4: R1 := R22
0001bfab: R0 := R20 + 0xD6
0001bfb0: R30 := 0x6D38
0001bfb2: call @ntlm_set_key with return %0001bfb4

0001bfb4:
0001bfba: R4 := mem[R31 + 0x80, el]:u64
0001bfc2: R0 := R22
0001bfc9: R2 := R25 + 0x10
0001bfd0: R3 := 0
0001bfd8: R1 := R4
0001bfdd: R30 := 0x6D50
0001bfdf: call @gl_des_ecb_crypt with return %0001bfe1

0001bfe1:
0001bfe8: R0 := pad:64[mem[R20 + 0x134, el]:u32]
0001bff3: #10040 := 31:0[R0] = 0
0001bfed: when #10040 goto %0001b5aa
00038817: goto %0001b49d

0001b49d:
0001b4ac: R22 := R31 + 0xB8
0001b4b2: R0 := 0x19
0001b4b7: R30 := 0x6D64
0001b4b9: call @new with return %0001b4bb

0001b4bb:
0001b4c1: R24 := R0
0001b4c9: R1 := R22
0001b4d0: R0 := R20 + 0x96
0001b4d5: R30 := 0x6D74
0001b4d7: call @ntlm_set_key with return %0001b4d9

0001b4d9:
0001b4dd: R28 := 0x18
0001b4e4: R4 := R19 + 0x18
0001b4ec: R2 := R24
0001b4f3: R3 := 0
0001b4fb: R1 := R4
0001b503: R0 := R22
0001b50b: mem := mem with [R31 + 0x80, el]:u64 <- R4
0001b510: R30 := 0x6D94
0001b512: call @gl_des_ecb_crypt with return %0001b514

0001b514:
0001b519: R26 := 0x18
0001b521: R1 := R22
0001b528: R0 := R20 + 0x9D
0001b52d: R30 := 0x6DA4
0001b52f: call @ntlm_set_key with return %0001b531

0001b531:
0001b537: mem := mem with [R31 + 0x68, el]:u32 <- 31:0[R28]
0001b53f: R4 := mem[R31 + 0x80, el]:u64
0001b546: R2 := R24 + 8
0001b54d: R3 := 0
0001b555: R0 := R22
0001b55d: R1 := R4
0001b562: R30 := 0x6DC0
0001b564: call @gl_des_ecb_crypt with return %0001b566

0001b566:
0001b56c: R1 := R22
0001b573: R0 := R20 + 0xA4
0001b578: R30 := 0x6DCC
0001b57a: call @ntlm_set_key with return %0001b57c

0001b57c:
0001b582: R4 := mem[R31 + 0x80, el]:u64
0001b58a: R0 := R22
0001b591: R2 := R24 + 0x10
0001b598: R3 := 0
0001b5a0: R1 := R4
0001b5a5: R30 := 0x6DE4
0001b5a7: call @gl_des_ecb_crypt with return %0001b5a9

0001b5a9:
0001b5ac: goto %0001b5aa

0001bad2:
0001bad9: R19 := mem[R31 + 0x10, el]:u64
0001badd: R20 := mem[R31 + 0x18, el]:u64
0001bae6: R21 := mem[R31 + 0x20, el]:u64
0001baea: R22 := mem[R31 + 0x28, el]:u64
0001baf3: R23 := mem[R31 + 0x30, el]:u64
0001baf7: R24 := mem[R31 + 0x38, el]:u64
0001bb00: R25 := mem[R31 + 0x40, el]:u64
0001bb04: R26 := mem[R31 + 0x48, el]:u64
0001bb0d: R27 := mem[R31 + 0x50, el]:u64
0001bb11: R28 := mem[R31 + 0x58, el]:u64
0001bb1b: R29 := mem[R31, el]:u64
0001bb1f: R30 := mem[R31 + 8, el]:u64
0001bb22: R31 := R31 + 0x1C0
0001bb27: call R30 with noreturn

00038852: sub ntlm_set_key(ntlm_set_key_result)
00038b3a: ntlm_set_key_result :: out u32 = low:32[R0]

0000fcb9:
0000fcc1: mem := mem with [R31 - 0x30, el]:u64 <- R29
0000fcc5: mem := mem with [R31 - 0x28, el]:u64 <- R30
0000fcc8: R31 := R31 - 0x30
0000fcd0: R2 := R0
0000fcd8: R0 := R1
0000fcdf: R29 := R31
0000fce7: mem := mem with [R31 + 0x10, el]:u64 <- R19
0000fced: R19 := 0x27000
0000fcf4: R1 := R31 + 0x20
0000fcfc: R19 := mem[R19 + 0xFB8, el]:u64
0000fd05: R7 := pad:64[mem[R2 + 2]]
0000fd0d: R3 := mem[R19, el]:u64
0000fd15: mem := mem with [R31 + 0x28, el]:u64 <- R3
0000fd1b: R3 := 0
0000fd24: R8 := pad:64[mem[R2 + 1]]
0000fd2d: R6 := pad:64[mem[R2 + 3]]
0000fd36: R5 := pad:64[mem[R2 + 4]]
0000fd3e: R11 := pad:64[31:2[R7]]
0000fd47: R3 := pad:64[mem[R2 + 6]]
0000fd4f: R9 := pad:64[31:1[R8]]
0000fd58: R4 := pad:64[mem[R2 + 5]]
0000fd60: R13 := pad:64[31:3[R6]]
0000fd69: R10 := pad:64[mem[R2]]
0000fd71: R12 := pad:64[31:4[R5]]
0000fd7a: R8 := 31:0[R11] | 31:0[R8] << 6
0000fd82: R11 := pad:64[31:6[R3]]
0000fd8a: R2 := pad:64[31:5[R4]]
0000fd93: R7 := 31:0[R13] | 31:0[R7] << 5
0000fd9c: R5 := 31:0[R2] | 31:0[R5] << 3
0000fda5: R6 := 31:0[R12] | 31:0[R6] << 4
0000fdae: R2 := 31:0[R9] | 31:0[R10] << 7
0000fdb7: R4 := 31:0[R11] | 31:0[R4] << 2
0000fdbf: R3 := 31:0[R3] << 0x21
0000fdc7: mem := mem with [R31 + 0x20] <- low:8[31:0[R10]]
0000fdcf: mem := mem with [R31 + 0x21] <- low:8[31:0[R2]]
0000fdd7: mem := mem with [R31 + 0x22] <- low:8[31:0[R8]]
0000fddf: mem := mem with [R31 + 0x23] <- low:8[31:0[R7]]
0000fde7: mem := mem with [R31 + 0x24] <- low:8[31:0[R6]]
0000fdef: mem := mem with [R31 + 0x25] <- low:8[31:0[R5]]
0000fdf7: mem := mem with [R31 + 0x26] <- low:8[31:0[R4]]
0000fdff: mem := mem with [R31 + 0x27] <- low:8[31:0[R3]]
0000fe04: R30 := 0x5F20
0000fe07: call @gl_des_setkey with return %0001a65e

0001a65e:
0001a664: R0 := mem[R31 + 0x28, el]:u64
0001a66c: R1 := mem[R19, el]:u64
0001a674: #9032 := 1 + ~R1 + R0
0001a678: NF := 63:63[#9032]
0001a67b: VF := 63:63[R0] & 63:63[~R1] & ~63:63[#9032] | ~63:63[R0] &
          ~63:63[~R1] & 63:63[#9032]
0001a67e: ZF := #9032 = 0
0001a681: CF := 63:63[R0] & 63:63[~R1] | 63:63[~R1] & ~63:63[#9032] |
          63:63[R0] & ~63:63[#9032]
0001a685: R0 := #9032
0001a68b: R1 := 0
0001a697: #9034 := ~ZF <> 0
0001a691: when #9034 goto %0001a68f
00038854: goto %0002a65f

0001a68f:
0001a69c: R30 := 0x5F44
0001a69e: call @__stack_chk_fail with return %0001a6a0

0001a6a0:
00038853: call @ntlm_hash_lm_password with noreturn

0002a65f:
0002a665: R19 := mem[R31 + 0x10, el]:u64
0002a66f: R29 := mem[R31, el]:u64
0002a673: R30 := mem[R31 + 8, el]:u64
0002a676: R31 := R31 + 0x30
0002a67b: call R30 with noreturn

00038855: sub open(open_pathname, open_flags, open_result)
00038b3b: open_pathname :: in u64 = R0
00038b3c: open_flags :: in u32 = low:32[R1]
00038b3d: open_result :: out u32 = low:32[R0]

0002c3ad:
0003027c: R16 := 0x27000
00030284: R17 := mem[R16 + 0xD28, el]:u64
0003028b: R16 := R16 + 0xD28
00030290: call R17 with noreturn

00038856: sub openlog(openlog_result)
00038b3e: openlog_result :: out u32 = low:32[R0]

0002b417:
0003051f: R16 := 0x27000
00030527: R17 := mem[R16 + 0xE00, el]:u64
0003052e: R16 := R16 + 0xE00
00030533: call R17 with noreturn

00038857: sub parent_add(parent_add_result)
00038b3f: parent_add_result :: out u32 = low:32[R0]

00020a60:
00020a68: mem := mem with [R31 - 0x30, el]:u64 <- R29
00020a6c: mem := mem with [R31 - 0x28, el]:u64 <- R30
00020a6f: R31 := R31 - 0x30
00020a76: R29 := R31
00020a7f: mem := mem with [R31, el]:u64 <- R31 + 0x20
00020a83: mem := mem with [R31, el]:u64 <- R31 + 0x28
00020a8c: mem := mem with [R31, el]:u64 <- R31 + 0x40
00020a90: mem := mem with [R31, el]:u64 <- R31 + 0x48
00020a99: R22 := 31:0[R1]
00020aa1: R21 := R0
00020aa6: R30 := 0x1052C
00020aa8: call @strdup with return %00020aaa

00020aaa:
00020ab0: R20 := R0
00020ab5: R30 := 0x10534
00020ab7: call @strlen with return %00020ab9

00020ab9:
00020abf: R19 := R0
00020ac5: R1 := 0x15000
00020acd: R0 := R20
00020ad4: R1 := R1 + 0x38
00020ad9: R30 := 0x10548
00020adb: call @strcspn with return %00020add

00020add:
00020ae3: #11944 := 1 + extend:64[~31:0[R0]] + extend:64[31:0[R19]]
00020ae7: NF := 63:63[#11944]
00020aea: VF := 31:31[~31:0[R0]] & 31:31[R19] & ~63:63[#11944] |
          ~31:31[~31:0[R0]] & ~31:31[R19] & 63:63[#11944]
00020aed: ZF := #11944 = 0
00020af0: CF := 31:31[~31:0[R0]] & 31:31[R19] | 31:31[R19] & ~63:63[#11944] |
          31:31[~31:0[R0]] & ~63:63[#11944]
00020aff: #11946 := ZF
00020af9: when #11946 goto %00020af7
0003885d: goto %00024f8f

00024f8f:
00024f94: R3 := extend:64[31:0[R0]]
00024f9c: R1 := extend:64[31:0[R0]] + 1
00024fa4: #13871 := 1 + extend:64[~31:0[R1]] + extend:64[31:0[R19]]
00024fa8: NF := 63:63[#13871]
00024fab: VF := 31:31[~31:0[R1]] & 31:31[R19] & ~63:63[#13871] |
          ~31:31[~31:0[R1]] & ~31:31[R19] & 63:63[#13871]
00024fae: ZF := #13871 = 0
00024fb1: CF := 31:31[~31:0[R1]] & 31:31[R19] | 31:31[R19] & ~63:63[#13871] |
          31:31[~31:0[R1]] & ~63:63[#13871]
00024fc3: #13873 := (NF <> VF | ZF) <> 0
00024fbd: when #13873 goto %00020d2e
0003885c: goto %00024fc6

00024fc6:
00024fcc: R19 := extend:64[31:0[R19]] - 2
00024fd3: R2 := R20 + 2
00024fdc: R19 := 31:0[R19] - 31:0[R0]
00024fe6: R1 := R19 + R3
00024fee: R2 := R1 + R2
00024ff3: goto %00024ff1

00024ff1:
00024ffb: R1 := pad:64[mem[R0]]
00025002: #13883 := 0xFFFFFFFFFFFFFFE0 + extend:64[31:0[R1]]
00025006: NF := 63:63[#13883]
00025009: VF := 31:31[R1] & ~63:63[#13883]
0002500c: ZF := #13883 = 0
0002500f: CF := 31:31[R1] | 31:31[R1] & ~63:63[#13883] | ~63:63[#13883]
00025038: #13885 := ~ZF <> 0
00025039: goto %00025030

00025030:
00025032: when #13885 goto %00025018
00025033: goto %00025024

00025024:
00025025: NF := 0
00025028: ZF := 1
0002502b: CF := 0
0002502e: VF := 0
00025035: goto %00025031

00025018:
00025019: NF := 63:63[extend:64[31:0[R1]] - 9]
0002501c: VF := 31:31[R1] & ~63:63[extend:64[31:0[R1]] - 9]
0002501f: ZF := extend:64[31:0[R1]] - 9 = 0
00025022: CF := 31:31[R1] | ~63:63[extend:64[31:0[R1]] - 9] | 31:31[R1] &
          ~63:63[extend:64[31:0[R1]] - 9]
00025034: goto %00025031

00025031:
00025046: #13888 := ZF
00025040: when #13888 goto %0002503e
0003885b: goto %00025072

00025072:
00025077: R2 := 0xA
0002507d: R1 := 0
00025082: R30 := 0x105A8
00025084: call @strtol with return %00025086

00025086:
0002508d: R22 := 31:0[R0]
0003885a: goto %00020af7

00020af7:
00020b0b: #11947 := 31:0[R22] = 0
00020b05: when #11947 goto %00020b03
00038859: goto %00020c57

00020b03:
00020b13: R3 := R21
00020b19: R2 := 0x13000
00020b20: R2 := R2 + 0xE88
00020b27: R1 := 1
00020b2e: R0 := 3
00020b33: R30 := 0x10630
00020b35: call @__syslog_chk with return %00020b37

00020b37:
00020b3d: R0 := R20
00020b42: R30 := 0x10638
00020b44: call @free with return %00020b46

00020b46:
00020b4b: R0 := 1
00020b50: R30 := 0x10640
00020b53: call @myexit with return %00020c56

00020c56:
00020c59: goto %00020c57

00020c57:
00020c5e: R19 := 0x28000
00020c65: R19 := R19 + 0x4D8
00020c6b: R0 := 0x188
00020c70: R30 := 0x105C0
00020c72: call @new with return %00020c74

00020c74:
00020c7a: R1 := R20
00020c82: R21 := R0
00020c88: R2 := 0x40
00020c8d: R30 := 0x105D0
00020c8f: call @strlcpy with return %00020c91

00020c91:
00020c98: R1 := pad:64[mem[R19 + 0x10, el]:u32]
00020ca0: R2 := R21
00020ca8: R0 := mem[R19 + 8, el]:u64
00020cb0: R1 := extend:64[31:0[R1]] + 1
00020cb8: mem := mem with [R21 + 0x180, el]:u32 <- 31:0[R22]
00020cc0: mem := mem with [R21 + 0x184, el]:u32 <- 0
00020cc8: mem := mem with [R19 + 0x10, el]:u32 <- 31:0[R1]
00020ccf: R1 := extend:64[31:0[R1]]
00020cd4: R30 := 0x105F4
00020cd6: call @plist_add with return %00020cd8

00020cd8:
00020cde: R1 := R0
00020ce6: R0 := R20
00020cee: mem := mem with [R19 + 8, el]:u64 <- R1
00020cf3: R30 := 0x10604
00020cf5: call @free with return %00020cf7

00020cf7:
00020cfc: R0 := 1
00020d05: R19 := mem[R31 + 0x10, el]:u64
00020d09: R20 := mem[R31 + 0x18, el]:u64
00020d12: R21 := mem[R31 + 0x20, el]:u64
00020d16: R22 := mem[R31 + 0x28, el]:u64
00020d20: R29 := mem[R31, el]:u64
00020d24: R30 := mem[R31 + 8, el]:u64
00020d27: R31 := R31 + 0x30
00020d2c: call R30 with noreturn

0002503e:
0002504d: R0 := R0 + 1
00025055: #13892 := 1 + ~R2 + R0
00025059: NF := 63:63[#13892]
0002505c: VF := 63:63[R0] & 63:63[~R2] & ~63:63[#13892] | ~63:63[R0] &
          ~63:63[~R2] & 63:63[#13892]
0002505f: ZF := #13892 = 0
00025062: CF := 63:63[R0] & 63:63[~R2] | 63:63[~R2] & ~63:63[#13892] |
          63:63[R0] & ~63:63[#13892]
0002506f: #13894 := ZF
00025069: when #13894 goto %00020d2e
00038858: goto %00024ff1

00020d2e:
00020d34: R0 := R20
00020d39: R30 := 0x1064C
00020d3b: call @free with return %00020d3d

00020d3d:
00020d42: R0 := 0
00020d4b: R19 := mem[R31 + 0x10, el]:u64
00020d4f: R20 := mem[R31 + 0x18, el]:u64
00020d58: R21 := mem[R31 + 0x20, el]:u64
00020d5c: R22 := mem[R31 + 0x28, el]:u64
00020d66: R29 := mem[R31, el]:u64
00020d6a: R30 := mem[R31 + 8, el]:u64
00020d6d: R31 := R31 + 0x30
00020d72: call R30 with noreturn

0003885e: sub perror(perror_result)
00038b40: perror_result :: out u32 = low:32[R0]

0002f28e:
0003006f: R16 := 0x27000
00030077: R17 := mem[R16 + 0xC80, el]:u64
0003007e: R16 := R16 + 0xC80
00030083: call R17 with noreturn

0003885f: sub plist_add(plist_add_result)
00038b41: plist_add_result :: out u32 = low:32[R0]

00014fed:
00014ff8: mem := mem with [R31 - 0x30, el]:u64 <- R29
00014ffc: mem := mem with [R31 - 0x28, el]:u64 <- R30
00014fff: R31 := R31 - 0x30
00015006: R29 := R31
0001500f: mem := mem with [R31, el]:u64 <- R31 + 0x20
00015013: mem := mem with [R31, el]:u64 <- R31 + 0x28
0001501b: R20 := R2
00015023: R19 := R0
00015029: R0 := 0x18
00015031: mem := mem with [R31 + 0x20, el]:u64 <- R21
00015039: R21 := R1
0001503e: R30 := 0x48B4
00015040: call @malloc with return %00015042

00015042:
00015049: mem := mem with [R0, el]:u64 <- R0
0001504d: mem := mem with [R0, el]:u64 <- R0 + 8
00015055: mem := mem with [R0 + 0x10, el]:u64 <- 0
00015061: #5313 := R19 = 0
0001505b: when #5313 goto %00015059
00038863: goto %00015c68

00015c68:
00015c6e: R1 := R19
00038862: goto %00015c72

00015c72:
00015c78: R2 := R1
00015c80: R1 := mem[R1 + 0x10, el]:u64
00015c8b: #5675 := ~R1 = 0
00015c85: when #5675 goto %00015c72
00038861: goto %00015c8e

00015c8e:
00015c94: mem := mem with [R2 + 0x10, el]:u64 <- R0
00015c9c: R0 := R19
00038860: goto %00015059

00015059:
0001506a: R19 := mem[R31 + 0x10, el]:u64
0001506e: R20 := mem[R31 + 0x18, el]:u64
00015076: R21 := mem[R31 + 0x20, el]:u64
00015080: R29 := mem[R31, el]:u64
00015084: R30 := mem[R31 + 8, el]:u64
00015087: R31 := R31 + 0x30
0001508c: call R30 with noreturn

00038864: sub plist_count(plist_count_result)
00038b42: plist_count_result :: out u32 = low:32[R0]

00015292:
00015298: R1 := R0
0001529f: R0 := 0
000152ab: #5366 := R1 = 0
000152a5: when #5366 goto %000152a3
00038867: goto %000158ff

000158ff:
00038866: goto %00015901

00015901:
00015907: R1 := mem[R1 + 0x10, el]:u64
0001590f: R0 := extend:64[31:0[R0]] + 1
0001591a: #5572 := ~R1 = 0
00015914: when #5572 goto %00015901
00038865: goto %000152a3

000152a3:
000152b0: call R30 with noreturn

00038868: sub plist_del(plist_del_result)
00038b43: plist_del_result :: out u32 = low:32[R0]

00015090:
00015098: mem := mem with [R31 - 0x30, el]:u64 <- R29
0001509c: mem := mem with [R31 - 0x28, el]:u64 <- R30
0001509f: R31 := R31 - 0x30
000150a6: R29 := R31
000150af: mem := mem with [R31, el]:u64 <- R31 + 0x40
000150b3: mem := mem with [R31, el]:u64 <- R31 + 0x48
000150bb: R22 := R0
000150c7: #5321 := R0 = 0
000150c1: when #5321 goto %000150bf
0003886f: goto %00015baf

00015baf:
00015bb3: R21 := 0
00015bbc: mem := mem with [R31, el]:u64 <- R31 + 0x20
00015bc0: mem := mem with [R31, el]:u64 <- R31 + 0x28
00015bc8: R19 := R0
00015bcd: goto %00015bcb

00015bcb:
00015bd4: R2 := mem[R19, el]:u64
00015bdc: R20 := R19
00015be4: R19 := mem[R19 + 0x10, el]:u64
00015bec: #5655 := 1 + ~R1 + R2
00015bf0: NF := 63:63[#5655]
00015bf3: VF := 63:63[R2] & 63:63[~R1] & ~63:63[#5655] | ~63:63[R2] &
          ~63:63[~R1] & 63:63[#5655]
00015bf6: ZF := #5655 = 0
00015bf9: CF := 63:63[R2] & 63:63[~R1] | 63:63[~R1] & ~63:63[#5655] |
          63:63[R2] & ~63:63[#5655]
00015c07: #5657 := ~ZF <> 0
00015c01: when #5657 goto %00015bff
0003886e: goto %00015c2a

00015c2a:
00015c30: R0 := mem[R20 + 8, el]:u64
00015c3c: #5663 := R0 = 0
00015c36: when #5663 goto %00015c34
0003886d: goto %00015c61

00015c61:
00015c64: R30 := 0x493C
00015c66: call @free with return %00015c34

00015c34:
00015c44: R0 := R20
00015c49: R30 := 0x4944
00015c4b: call @free with return %00015c4d

00015c4d:
00015c56: #5667 := R21 = 0
00015c50: when #5667 goto %000150f4
0003886c: goto %00015c59

000150f4:
000150fa: R22 := R19
00015102: R0 := R22
0001510b: R19 := mem[R31 + 0x10, el]:u64
0001510f: R20 := mem[R31 + 0x18, el]:u64
00015118: R21 := mem[R31 + 0x20, el]:u64
0001511c: R22 := mem[R31 + 0x28, el]:u64
00015126: R29 := mem[R31, el]:u64
0001512a: R30 := mem[R31 + 8, el]:u64
0001512d: R31 := R31 + 0x30
00015132: call R30 with noreturn

00015c59:
00015c5f: mem := mem with [R21 + 0x10, el]:u64 <- R19
0003886b: goto %00015c13

00015bff:
00015c0f: R21 := R20
00015c1b: #5661 := R19 = 0
00015c15: when #5661 goto %00015c13
0003886a: goto %00015bcb

00015c13:
00015c24: R19 := mem[R31 + 0x10, el]:u64
00015c28: R20 := mem[R31 + 0x18, el]:u64
00038869: goto %000150bf

000150bf:
000150cf: R0 := R22
000150d8: R21 := mem[R31 + 0x20, el]:u64
000150dc: R22 := mem[R31 + 0x28, el]:u64
000150e6: R29 := mem[R31, el]:u64
000150ea: R30 := mem[R31 + 8, el]:u64
000150ed: R31 := R31 + 0x30
000150f2: call R30 with noreturn

00038870: sub plist_dump(plist_dump_result)
00038b44: plist_dump_result :: out u32 = low:32[R0]

00015192:
0001519c: #5344 := R0 = 0
00015196: when #5344 goto %00015194
00038873: goto %00015b0e

00015194:
000151a1: call R30 with noreturn

00015b0e:
00015b16: mem := mem with [R31 - 0x20, el]:u64 <- R29
00015b1a: mem := mem with [R31 - 0x18, el]:u64 <- R30
00015b1d: R31 := R31 - 0x20
00015b24: R29 := R31
00015b2d: mem := mem with [R31, el]:u64 <- R31 + 0x20
00015b31: mem := mem with [R31, el]:u64 <- R31 + 0x28
00015b37: R20 := 0x11000
00015b3f: R19 := R0
00015b46: R20 := R20 + 0x6B8
00038872: goto %00015b4a

00015b4a:
00015b51: R2 := mem[R19, el]:u64
00015b55: R3 := mem[R19 + 8, el]:u64
00015b5d: R1 := R20
00015b64: R0 := 1
00015b69: R30 := 0x49D8
00015b6b: call @__printf_chk with return %00015b6d

00015b6d:
00015b73: R19 := mem[R19 + 0x10, el]:u64
00015b7e: #5642 := ~R19 = 0
00015b78: when #5642 goto %00015b4a
00038871: goto %00015b81

00015b81:
00015b88: R19 := mem[R31 + 0x10, el]:u64
00015b8c: R20 := mem[R31 + 0x18, el]:u64
00015b96: R29 := mem[R31, el]:u64
00015b9a: R30 := mem[R31 + 8, el]:u64
00015b9d: R31 := R31 + 0x20
00015ba2: call R30 with noreturn

00038874: sub plist_free(plist_free_result)
00038b45: plist_free_result :: out u32 = low:32[R0]

000152b2:
000152bc: #5367 := R0 = 0
000152b6: when #5367 goto %000152b4
00038879: goto %00015822

000152b4:
000152c2: R0 := 0
000152c7: call R30 with noreturn

00015822:
0001582a: mem := mem with [R31 - 0x20, el]:u64 <- R29
0001582e: mem := mem with [R31 - 0x18, el]:u64 <- R30
00015831: R31 := R31 - 0x20
00015838: R29 := R31
00015841: mem := mem with [R31, el]:u64 <- R31 + 0x20
00015845: mem := mem with [R31, el]:u64 <- R31 + 0x28
0001584d: R19 := R0
00015855: R0 := R19
0001585e: R1 := mem[R19 + 8, el]:u64
00015862: R20 := mem[R19 + 0x10, el]:u64
0001586e: #5553 := R1 = 0
00015868: when #5553 goto %00015866
00038878: goto %000158a2

000158a2:
000158b2: R0 := R1
000158b7: R30 := 0x4B68
000158b9: call @free with return %000158bb

000158bb:
000158c1: R0 := R19
000158c6: R30 := 0x4B70
000158c8: call @free with return %000158ca

000158ca:
000158d4: #5569 := R20 = 0
000158ce: when #5569 goto %000158cc
00038877: goto %00015879

00015879:
00015889: R19 := R20
00015891: R0 := R19
0001589a: R1 := mem[R19 + 8, el]:u64
0001589e: R20 := mem[R19 + 0x10, el]:u64
000158aa: #5562 := ~R1 = 0
000158a4: when #5562 goto %000158a2
00038876: goto %00015866

00015866:
00015873: R30 := 0x4B88
00015875: call @free with return %00015877

00015877:
00015881: #5554 := ~R20 = 0
0001587b: when #5554 goto %00015879
00038875: goto %000158cc

000158cc:
000158da: R0 := 0
000158e3: R19 := mem[R31 + 0x10, el]:u64
000158e7: R20 := mem[R31 + 0x18, el]:u64
000158f1: R29 := mem[R31, el]:u64
000158f5: R30 := mem[R31 + 8, el]:u64
000158f8: R31 := R31 + 0x20
000158fd: call R30 with noreturn

0003887a: sub plist_get(plist_get_result)
00038b46: plist_get_result :: out u32 = low:32[R0]

000151a3:
000151ad: #5345 := R0 = 0
000151a7: when #5345 goto %000151a5
0003887e: goto %00015ab7

000151a5:
000151b3: R0 := 0
000151b8: call R30 with noreturn

00015ab7:
00015abc: R2 := extend:64[31:0[R1]]
00015ac1: goto %00015abf

00015abf:
00015ac8: R1 := mem[R0, el]:u64
00015ad0: #5629 := 1 + ~R2 + R1
00015ad4: NF := 63:63[#5629]
00015ad7: VF := 63:63[R1] & 63:63[~R2] & ~63:63[#5629] | ~63:63[R1] &
          ~63:63[~R2] & 63:63[#5629]
00015ada: ZF := #5629 = 0
00015add: CF := 63:63[R1] & 63:63[~R2] | 63:63[~R2] & ~63:63[#5629] |
          63:63[R1] & ~63:63[#5629]
00015aeb: #5631 := ~ZF <> 0
00015ae5: when #5631 goto %00015ae3
0003887d: goto %00015b06

00015b06:
00015b0c: R0 := mem[R0 + 8, el]:u64
0003887c: goto %00015af7

00015ae3:
00015af3: R0 := mem[R0 + 0x10, el]:u64
00015aff: #5632 := R0 = 0
00015af9: when #5632 goto %00015af7
0003887b: goto %00015abf

00015af7:
00015b04: call R30 with noreturn

0003887f: sub plist_in(plist_in_result)
00038b47: plist_in_result :: out u32 = low:32[R0]

00015134:
0001513e: #5336 := ~R0 = 0
00015138: when #5336 goto %00015136
00038883: goto %00015bab

00015136:
00015146: R2 := mem[R0, el]:u64
0001514e: #5340 := 1 + ~R1 + R2
00015152: NF := 63:63[#5340]
00015155: VF := 63:63[R2] & 63:63[~R1] & ~63:63[#5340] | ~63:63[R2] &
          ~63:63[~R1] & 63:63[#5340]
00015158: ZF := #5340 = 0
0001515b: CF := 63:63[R2] & 63:63[~R1] | 63:63[~R1] & ~63:63[#5340] |
          63:63[R2] & ~63:63[#5340]
00015169: #5342 := ~ZF <> 0
00015163: when #5342 goto %00015161
00038882: goto %00015ba4

00015ba4:
00015ba9: R0 := 1
00038881: goto %00015175

00015161:
00015171: R0 := mem[R0 + 0x10, el]:u64
0001517d: #5343 := R0 = 0
00015177: when #5343 goto %00015175
00038880: goto %00015136

00015175:
00015182: call R30 with noreturn

00015bab:
00015bad: goto %00015184

00015184:
00015189: R0 := 0
0001518e: call R30 with noreturn

00038884: sub plist_pop(plist_pop_result)
00038b48: plist_pop_result :: out u32 = low:32[R0]

000151ba:
000151c2: mem := mem with [R31 - 0x50, el]:u64 <- R29
000151c6: mem := mem with [R31 - 0x48, el]:u64 <- R30
000151c9: R31 := R31 - 0x50
000151d0: R29 := R31
000151d9: mem := mem with [R31, el]:u64 <- R31 + 0x40
000151dd: mem := mem with [R31, el]:u64 <- R31 + 0x48
000151e9: #5348 := R0 = 0
000151e3: when #5348 goto %000151e1
0003888d: goto %0001591d

0001591d:
00015924: mem := mem with [R31, el]:u64 <- R31 + 0x20
00015928: mem := mem with [R31, el]:u64 <- R31 + 0x28
00015930: R19 := mem[R0, el]:u64
00015939: mem := mem with [R31, el]:u64 <- R31 + 0x60
0001593d: mem := mem with [R31, el]:u64 <- R31 + 0x68
00015945: R24 := R0
0001594d: mem := mem with [R31 + 0x40, el]:u64 <- R25
00015955: R25 := R1
00015960: #5582 := R19 = 0
0001595a: when #5582 goto %0001526c
0003888c: goto %00015963

0001526c:
00015273: R19 := mem[R31 + 0x10, el]:u64
00015277: R20 := mem[R31 + 0x18, el]:u64
00015280: R23 := mem[R31 + 0x30, el]:u64
00015284: R24 := mem[R31 + 0x38, el]:u64
0001528c: R25 := mem[R31 + 0x40, el]:u64
00015290: goto %000151e1

00015963:
0003888b: goto %00015965

00015965:
0001596c: R20 := mem[R19, el]:u64
00015970: R23 := mem[R19 + 8, el]:u64
00015978: R21 := mem[R19 + 0x10, el]:u64
00015981: R0 := 31:0[R20]
0001598a: R22 := 31:0[R20]
0001598f: R30 := 0x4A64
00015991: call @so_closed with return %00015993

00015993:
0001599d: #5590 := ~31:0[R0] = 0
00015997: when #5590 goto %00015995
0003888a: goto %00015a3e

00015995:
000159a6: R0 := 31:0[R20]
000159ab: R30 := 0x4AA0
000159ad: call @close with return %000159af

000159af:
000159b5: R2 := mem[R19 + 8, el]:u64
000159bd: R0 := R19
000159c9: #5597 := R2 = 0
000159c3: when #5597 goto %000159c1
00038889: goto %00015a14

000159c1:
000159ce: R30 := 0x4ACC
000159d0: call @free with return %000159d2

000159d2:
000159dc: #5598 := ~R21 = 0
000159d6: when #5598 goto %000159d4
00038888: goto %000159ea

00015a14:
00015a1a: R0 := R2
00015a1f: R30 := 0x4AB4
00015a21: call @free with return %00015a23

00015a23:
00015a29: R0 := R19
00015a2e: R30 := 0x4ABC
00015a30: call @free with return %00015a32

00015a32:
00015a3b: #5611 := R21 = 0
00015a35: when #5611 goto %000159ea
00038887: goto %000159d4

000159ea:
000159f1: R19 := mem[R31 + 0x10, el]:u64
000159f5: R20 := mem[R31 + 0x18, el]:u64
000159fd: R25 := mem[R31 + 0x40, el]:u64
00015a05: mem := mem with [R24, el]:u64 <- 0
00015a0e: R23 := mem[R31 + 0x30, el]:u64
00015a12: R24 := mem[R31 + 0x38, el]:u64
00038886: goto %000151e1

000151e1:
000151f0: R22 := 0
000151f9: R0 := 31:0[R22]
00015202: R21 := mem[R31 + 0x20, el]:u64
00015206: R22 := mem[R31 + 0x28, el]:u64
00015210: R29 := mem[R31, el]:u64
00015214: R30 := mem[R31 + 8, el]:u64
00015217: R31 := R31 + 0x50
0001521c: call R30 with noreturn

000159d4:
000159e4: R19 := R21
000159e8: goto %00015965

00015a3e:
00015a44: R0 := R19
00015a49: R30 := 0x4A70
00015a4b: call @free with return %00015a4d

00015a4d:
00015a53: mem := mem with [R24, el]:u64 <- R21
00015a5e: #5616 := R25 = 0
00015a58: when #5616 goto %0001521e
00038885: goto %00015a61

0001521e:
00015225: R0 := 31:0[R22]
0001522e: R19 := mem[R31 + 0x10, el]:u64
00015232: R20 := mem[R31 + 0x18, el]:u64
0001523b: R21 := mem[R31 + 0x20, el]:u64
0001523f: R22 := mem[R31 + 0x28, el]:u64
00015248: R23 := mem[R31 + 0x30, el]:u64
0001524c: R24 := mem[R31 + 0x38, el]:u64
00015254: R25 := mem[R31 + 0x40, el]:u64
0001525e: R29 := mem[R31, el]:u64
00015262: R30 := mem[R31 + 8, el]:u64
00015265: R31 := R31 + 0x50
0001526a: call R30 with noreturn

00015a61:
00015a68: R19 := mem[R31 + 0x10, el]:u64
00015a6c: R20 := mem[R31 + 0x18, el]:u64
00015a74: mem := mem with [R25, el]:u64 <- R23
00015a7d: R0 := 31:0[R22]
00015a86: R21 := mem[R31 + 0x20, el]:u64
00015a8a: R22 := mem[R31 + 0x28, el]:u64
00015a93: R23 := mem[R31 + 0x30, el]:u64
00015a97: R24 := mem[R31 + 0x38, el]:u64
00015a9f: R25 := mem[R31 + 0x40, el]:u64
00015aa9: R29 := mem[R31, el]:u64
00015aad: R30 := mem[R31 + 8, el]:u64
00015ab0: R31 := R31 + 0x50
00015ab5: call R30 with noreturn

0003888e: sub prepare_http_connect(prepare_http_connect_result)
00038b49: prepare_http_connect_result :: out u32 = low:32[R0]

0001fc24:
0001fc2c: mem := mem with [R31 - 0x50, el]:u64 <- R29
0001fc30: mem := mem with [R31 - 0x48, el]:u64 <- R30
0001fc33: R31 := R31 - 0x50
0001fc3a: #11614 := extend:64[31:0[R0]]
0001fc3e: NF := 63:63[#11614]
0001fc41: VF := 31:31[R0] & ~63:63[#11614]
0001fc44: ZF := #11614 = 0
0001fc47: CF := 31:31[R0] | 31:31[R0] & ~63:63[#11614] | ~63:63[#11614]
0001fc70: #11616 := ~ZF <> 0
0001fc71: goto %0001fc68

0001fc68:
0001fc6a: when #11616 goto %0001fc50
0001fc6b: goto %0001fc5c

0001fc5c:
0001fc5d: NF := 0
0001fc60: ZF := 1
0001fc63: CF := 0
0001fc66: VF := 0
0001fc6d: goto %0001fc69

0001fc50:
0001fc51: NF := 63:63[R2 + 0]
0001fc54: VF := 63:63[R2] & ~63:63[R2 + 0]
0001fc57: ZF := R2 + 0 = 0
0001fc5a: CF := 63:63[R2] | ~63:63[R2 + 0] | 63:63[R2] & ~63:63[R2 + 0]
0001fc6c: goto %0001fc69

0001fc69:
0001fc79: R29 := R31
0001fc82: mem := mem with [R31, el]:u64 <- R31 + 0x20
0001fc86: mem := mem with [R31, el]:u64 <- R31 + 0x28
0001fc8d: R19 := 0
0001fc95: mem := mem with [R31 + 0x4C, el]:u32 <- 31:0[R0]
0001fca1: #11621 := ZF
0001fc9b: when #11621 goto %0001fc99
000388a1: goto %00027621

00027621:
00027628: mem := mem with [R31, el]:u64 <- R31 + 0x40
0002762c: mem := mem with [R31, el]:u64 <- R31 + 0x48
00027633: R19 := 0
0002763b: R21 := R2
00027644: R0 := pad:64[mem[R2]]
0002764f: #14737 := ~31:0[R0] = 0
00027649: when #14737 goto %0001fccf
000388a0: goto %00027652

0001fccf:
0001fcd6: mem := mem with [R31, el]:u64 <- R31 + 0x60
0001fcda: mem := mem with [R31, el]:u64 <- R31 + 0x68
0001fce2: R23 := R1
0001fce7: R30 := 0xDFF4
0001fce9: call @new_rr_data with return %0001fceb

0001fceb:
0001fcf1: R20 := R0
0001fcf8: R19 := 1
0001fcfd: R30 := 0xE000
0001fcff: call @new_rr_data with return %0001fd01

0001fd01:
0001fd07: R22 := R0
0001fd0d: R0 := 0x12000
0001fd14: R0 := R0 + 0xF00
0001fd1c: mem := mem with [R20, el]:u32 <- 31:0[R19]
0001fd21: R30 := 0xE014
0001fd23: call @strdup with return %0001fd25

0001fd25:
0001fd2b: mem := mem with [R20 + 0x28, el]:u64 <- R0
0001fd33: R0 := R21
0001fd38: R30 := 0xE020
0001fd3a: call @strdup with return %0001fd3c

0001fd3c:
0001fd42: mem := mem with [R20 + 0x30, el]:u64 <- R0
0001fd48: R0 := 0x12000
0001fd4f: R0 := R0 + 0xFF8
0001fd54: R30 := 0xE030
0001fd56: call @strdup with return %0001fd58

0001fd58:
0001fd5e: R1 := R0
0001fd66: R0 := mem[R20 + 8, el]:u64
0001fd6e: mem := mem with [R20 + 0x48, el]:u64 <- R1
0001fd77: R3 := 31:0[R19]
0001fd7d: R2 := 0x12000
0001fd83: R1 := 0x12000
0001fd8a: R2 := R2 + 0xE30
0001fd91: R1 := R1 + 0xE40
0001fd96: R30 := 0xE054
0001fd98: call @hlist_mod with return %0001fd9a

0001fd9a:
0001fd9e: R1 := 0x27000
0001fda6: mem := mem with [R20 + 8, el]:u64 <- R0
0001fdae: R1 := mem[R1 + 0xF50, el]:u64
0001fdb6: R19 := mem[R1, el]:u64
0001fdc2: #11651 := R19 = 0
0001fdbc: when #11651 goto %0001fdba
0003889f: goto %000275ea

000275ea:
000275f1: R1 := mem[R19, el]:u64
000275f5: R2 := mem[R19 + 8, el]:u64
000275fc: R3 := 1
00027601: R30 := 0xE074
00027603: call @hlist_mod with return %00027605

00027605:
0002760b: R19 := mem[R19 + 0x18, el]:u64
00027613: mem := mem with [R20 + 8, el]:u64 <- R0
0002761e: #14732 := ~R19 = 0
00027618: when #14732 goto %000275ea
0003889e: goto %0001fdba

0001fdba:
0001fdc8: R24 := 0x27000
0001fdd0: R0 := mem[R24 + 0xF78, el]:u64
0001fdd9: R0 := pad:64[mem[R0, el]:u32]
0001fde5: #11652 := ~31:0[R0] = 0
0001fddf: when #11652 goto %0001fddd
0003889d: goto %0001fe03

0001fddd:
0001fdeb: R1 := 0x13000
0001fdf2: R0 := 1
0001fdf9: R1 := R1 + 8
0001fdfe: R30 := 0xE1B0
0001fe00: call @__printf_chk with return %0001fe02

0001fe02:
0001fe05: goto %0001fe03

0001fe03:
0001fe0c: R3 := R23
0001fe14: R2 := R22
0001fe1c: R1 := R20
0001fe23: R0 := R31 + 0x4C
0001fe28: R30 := 0xE0A4
0001fe2a: call @proxy_authenticate with return %0001fe2c

0001fe2c:
0001fe33: R19 := 31:0[R0]
0001fe3f: #11665 := 31:0[R0] = 0
0001fe39: when #11665 goto %0001fe37
0003889c: goto %0002759b

0001fe37:
0001fe45: R2 := 0x13000
0001fe4c: R1 := 1
0001fe53: R2 := R2 + 0xF0
0001fe5a: R0 := 3
0001fe5f: R30 := 0xE19C
0001fe61: call @__syslog_chk with return %0001fe63

0001fe63:
0001fe66: goto %0001fe64

0002759b:
000275a2: R0 := pad:64[mem[R22 + 0x10, el]:u32]
000275a9: #14724 := 0xFFFFFFFFFFFFFE69 + extend:64[31:0[R0]]
000275ad: NF := 63:63[#14724]
000275b0: VF := 31:31[R0] & ~63:63[#14724]
000275b3: ZF := #14724 = 0
000275b6: CF := 31:31[R0] | 31:31[R0] & ~63:63[#14724] | ~63:63[#14724]
000275c4: #14726 := ZF
000275be: when #14726 goto %0001fecb
0003889b: goto %000275c7

0001fecb:
0001fed1: R0 := mem[R24 + 0xF78, el]:u64
0001feda: R0 := pad:64[mem[R0, el]:u32]
0001fee6: #11679 := ~31:0[R0] = 0
0001fee0: when #11679 goto %0001fede
0003889a: goto %0001ff13

0001fede:
0001feec: R1 := 0x13000
0001fef3: R0 := 1
0001fefa: R1 := R1 + 0x28
0001feff: R30 := 0xE1EC
0001ff01: call @__printf_chk with return %0001ff03

0001ff03:
0001ff09: R0 := mem[R20 + 8, el]:u64
0001ff0e: R30 := 0xE1F4
0001ff10: call @hlist_dump with return %0001ff12

0001ff12:
0001ff15: goto %0001ff13

0001ff13:
0001ff1d: R0 := pad:64[mem[R31 + 0x4C, el]:u32]
0001ff25: R1 := R20
0001ff2a: R30 := 0xE11C
0001ff2c: call @headers_send with return %0001ff2e

0001ff2e:
0001ff35: R19 := 31:0[R0]
0001ff41: #11686 := 31:0[R0] = 0
0001ff3b: when #11686 goto %0001ff39
00038899: goto %0002738c

0001ff39:
0001ff47: R1 := 0x13000
0001ff4e: R0 := 1
0001ff55: R1 := R1 + 0x40
0001ff5a: R30 := 0xE258
0001ff5c: call @__printf_chk with return %0001ff5e

0001ff5e:
0001ff60: goto %0001fe64

0002738c:
00027392: R0 := mem[R24 + 0xF78, el]:u64
0002739b: R0 := pad:64[mem[R0, el]:u32]
000273a7: #14695 := ~31:0[R0] = 0
000273a1: when #14695 goto %0002739f
00038898: goto %000273c5

0002739f:
000273ad: R1 := 0x13000
000273b4: R0 := 1
000273bb: R1 := R1 + 0x60
000273c0: R30 := 0xE244
000273c2: call @__printf_chk with return %000273c4

000273c4:
000273c7: goto %000273c5

000273c5:
000273ce: R0 := R22
000273d3: R30 := 0xE138
000273d5: call @reset_rr_data with return %000273d7

000273d7:
000273de: R0 := pad:64[mem[R31 + 0x4C, el]:u32]
000273e6: R1 := R22
000273eb: R30 := 0xE144
000273ed: call @headers_recv with return %000273ef

000273ef:
000273f9: #14702 := 31:0[R0] = 0
000273f3: when #14702 goto %000273f1
00038897: goto %0002743e

000273f1:
00027401: R24 := mem[R24 + 0xF78, el]:u64
0002740a: R19 := pad:64[mem[R24, el]:u32]
00027415: #14703 := 31:0[R19] = 0
0002740f: when #14703 goto %0001fe64
00038896: goto %00027418

00027418:
0002741c: R1 := 0x13000
00027423: R19 := 0
0002742a: R1 := R1 + 0x80
00027431: R0 := 1
00027436: R30 := 0xE230
00027438: call @__printf_chk with return %0002743a

0002743a:
0002743c: goto %0001fe64

0002743e:
00027444: R0 := mem[R24 + 0xF78, el]:u64
0002744d: R0 := pad:64[mem[R0, el]:u32]
00027459: #14704 := ~31:0[R0] = 0
00027453: when #14704 goto %00027451
00038895: goto %0002756f

00027451:
00027461: R0 := mem[R22 + 8, el]:u64
00027466: R30 := 0xE1BC
00027468: call @hlist_dump with return %0002746a

0002746a:
00027471: R0 := pad:64[mem[R22 + 0x10, el]:u32]
00027478: #14705 := 0xFFFFFFFFFFFFFF38 + extend:64[31:0[R0]]
0002747c: NF := 63:63[#14705]
0002747f: VF := 31:31[R0] & ~63:63[#14705]
00027482: ZF := #14705 = 0
00027485: CF := 31:31[R0] | 31:31[R0] & ~63:63[#14705] | ~63:63[#14705]
00027494: #14707 := ~ZF <> 0
0002748e: when #14707 goto %0002748c
00038894: goto %0002751f

0002756f:
00027576: R0 := pad:64[mem[R22 + 0x10, el]:u32]
0002757d: #14721 := 0xFFFFFFFFFFFFFF38 + extend:64[31:0[R0]]
00027581: NF := 63:63[#14721]
00027584: VF := 31:31[R0] & ~63:63[#14721]
00027587: ZF := #14721 = 0
0002758a: CF := 31:31[R0] | 31:31[R0] & ~63:63[#14721] | ~63:63[#14721]
00027598: #14723 := ZF
00027592: when #14723 goto %00027564
00038893: goto %0002748c

0002748c:
0002749b: #14708 := 0xFFFFFFFFFFFFFE69 + extend:64[31:0[R0]]
0002749f: NF := 63:63[#14708]
000274a2: VF := 31:31[R0] & ~63:63[#14708]
000274a5: ZF := #14708 = 0
000274a8: CF := 31:31[R0] | 31:31[R0] & ~63:63[#14708] | ~63:63[#14708]
000274b7: #14710 := ~ZF <> 0
000274b1: when #14710 goto %000274af
00038892: goto %000274ea

000274ea:
000274f0: R3 := R21
000274f6: R2 := 0x13000
000274fd: R1 := 1
00027504: R2 := R2 + 0xA0
0002750b: R0 := 3
00027512: R19 := 0
00027517: R30 := 0xE184
00027519: call @__syslog_chk with return %0002751b

0002751b:
0002751d: goto %0001fe64

000275c7:
000275cc: #14727 := 0xFFFFFFFFFFFFFF38 + extend:64[31:0[R0]]
000275d0: NF := 63:63[#14727]
000275d3: VF := 31:31[R0] & ~63:63[#14727]
000275d6: ZF := #14727 = 0
000275d9: CF := 31:31[R0] | 31:31[R0] & ~63:63[#14727] | ~63:63[#14727]
000275e7: #14729 := ZF
000275e1: when #14729 goto %0002751f
00038891: goto %000274af

0002751f:
00027525: R24 := mem[R24 + 0xF78, el]:u64
0002752e: R0 := pad:64[mem[R24, el]:u32]
0002753a: #14717 := ~31:0[R0] = 0
00027534: when #14717 goto %00027532
00038890: goto %00027564

00027532:
00027540: R1 := 0x12000
00027547: R0 := 1
0002754e: R1 := R1 + 0xF08
00027557: R19 := 31:0[R0]
0002755c: R30 := 0xE20C
0002755e: call @__printf_chk with return %00027560

00027560:
00027562: goto %0001fe64

00027564:
00027569: R19 := 1
0002756d: goto %0001fe64

000274af:
000274bd: R2 := 0x13000
000274c5: R3 := R21
000274cc: R2 := R2 + 0xC8
000274d3: R1 := 1
000274da: R0 := 3
000274e1: R19 := 0
000274e6: R30 := 0xE0DC
000274e8: call @__syslog_chk with return %0001fe64

0001fe64:
0001fe6d: R0 := R20
0001fe72: R30 := 0xE0E4
0001fe74: call @free_rr_data with return %0001fe76

0001fe76:
0001fe7c: R0 := R22
0001fe81: R30 := 0xE0EC
0001fe83: call @free_rr_data with return %0001fe85

0001fe85:
0001fe8c: R0 := 31:0[R19]
0001fe95: R19 := mem[R31 + 0x10, el]:u64
0001fe99: R20 := mem[R31 + 0x18, el]:u64
0001fea2: R21 := mem[R31 + 0x20, el]:u64
0001fea6: R22 := mem[R31 + 0x28, el]:u64
0001feaf: R23 := mem[R31 + 0x30, el]:u64
0001feb3: R24 := mem[R31 + 0x38, el]:u64
0001febd: R29 := mem[R31, el]:u64
0001fec1: R30 := mem[R31 + 8, el]:u64
0001fec4: R31 := R31 + 0x50
0001fec9: call R30 with noreturn

00027652:
00027659: R21 := mem[R31 + 0x20, el]:u64
0002765d: R22 := mem[R31 + 0x28, el]:u64
0003888f: goto %0001fc99

0001fc99:
0001fcaa: R0 := 31:0[R19]
0001fcb3: R19 := mem[R31 + 0x10, el]:u64
0001fcb7: R20 := mem[R31 + 0x18, el]:u64
0001fcc1: R29 := mem[R31, el]:u64
0001fcc5: R30 := mem[R31 + 8, el]:u64
0001fcc8: R31 := R31 + 0x50
0001fccd: call R30 with noreturn

000388a2: sub printmem(printmem_result)
00038b4a: printmem_result :: out u32 = low:32[R0]

0000fa16:
0000fa1e: mem := mem with [R31 - 0x30, el]:u64 <- R29
0000fa22: mem := mem with [R31 - 0x28, el]:u64 <- R30
0000fa25: R31 := R31 - 0x30
0000fa2c: R29 := R31
0000fa35: mem := mem with [R31, el]:u64 <- R31 + 0x20
0000fa39: mem := mem with [R31, el]:u64 <- R31 + 0x28
0000fa40: R20 := R1 << 1
0000fa48: R19 := R0
0000fa51: mem := mem with [R31, el]:u64 <- R31 + 0x40
0000fa55: mem := mem with [R31, el]:u64 <- R31 + 0x48
0000fa5d: R21 := R1
0000fa66: R22 := 31:0[R2]
0000fa6c: R1 := 1
0000fa74: R0 := R20 + R1
0000fa79: R30 := 0x5B14
0000fa7b: call @calloc with return %0000fa7d

0000fa7d:
0000fa87: #229 := R21 = 0
0000fa81: when #229 goto %0000fa7f
000388a5: goto %0002ab83

0002ab83:
0002ab88: R6 := 7
0002ab91: R6 := 31:0[R6] - 31:0[R22]
0002ab97: R4 := 0x28000
0002ab9f: R3 := R19
0002aba7: R7 := R20 + R0
0002abaf: R6 := 31:0[R6] & 0xFF
0002abb7: R2 := R0
0002abbe: R4 := R4 + 0x10
000388a4: goto %0002abc0

0002abc0:
0002abc7: R2 := R2 + 2
0002abd0: R1 := 31:0[R1] ^ 31:0[R6]
0002abd8: R5 := 31:0[R1] & 0xF
0002abe0: R1 := pad:64[31:4[R1]]
0002abec: mem := mem with [R2 - 2] <- low:8[31:0[R1]]
0002abf4: mem := mem with [R2 - 1] <- low:8[31:0[R5]]
0002abfc: #16088 := 1 + ~R2 + R7
0002ac00: NF := 63:63[#16088]
0002ac03: VF := 63:63[R7] & 63:63[~R2] & ~63:63[#16088] | ~63:63[R7] &
          ~63:63[~R2] & 63:63[#16088]
0002ac06: ZF := #16088 = 0
0002ac09: CF := 63:63[R7] & 63:63[~R2] | 63:63[~R2] & ~63:63[#16088] |
          63:63[R7] & ~63:63[#16088]
0002ac16: #16090 := ~ZF <> 0
0002ac10: when #16090 goto %0002abc0
000388a3: goto %0000fa7f

0000fa7f:
0000fa90: R19 := mem[R31 + 0x10, el]:u64
0000fa94: R20 := mem[R31 + 0x18, el]:u64
0000fa9d: R21 := mem[R31 + 0x20, el]:u64
0000faa1: R22 := mem[R31 + 0x28, el]:u64
0000faab: R29 := mem[R31, el]:u64
0000faaf: R30 := mem[R31 + 8, el]:u64
0000fab2: R31 := R31 + 0x30
0000fab7: call R30 with noreturn

000388a6: sub proxy_authenticate(proxy_authenticate_result)
00038b4b: proxy_authenticate_result :: out u32 = low:32[R0]

0001f330:
0001f338: mem := mem with [R31 - 0x80, el]:u64 <- R29
0001f33c: mem := mem with [R31 - 0x78, el]:u64 <- R30
0001f33f: R31 := R31 - 0x80
0001f346: R29 := R31
0001f34f: mem := mem with [R31, el]:u64 <- R31 + 0x60
0001f353: mem := mem with [R31, el]:u64 <- R31 + 0x68
0001f359: R24 := 0x27000
0001f361: R23 := R0
0001f369: R4 := mem[R24 + 0xFB8, el]:u64
0001f372: mem := mem with [R31, el]:u64 <- R31 + 0x20
0001f376: mem := mem with [R31, el]:u64 <- R31 + 0x28
0001f37e: R20 := R1
0001f386: R0 := mem[R4, el]:u64
0001f38e: mem := mem with [R31 + 0x78, el]:u64 <- R0
0001f394: R0 := 0
0001f39d: mem := mem with [R31, el]:u64 <- R31 + 0x40
0001f3a1: mem := mem with [R31, el]:u64 <- R31 + 0x48
0001f3a7: R0 := 0x1000
0001f3af: R22 := R2
0001f3b8: mem := mem with [R31, el]:u64 <- R31 + 0x80
0001f3bc: mem := mem with [R31, el]:u64 <- R31 + 0x88
0001f3c4: R26 := R3
0001f3cd: mem := mem with [R31, el]:u64 <- R31 + 0xA0
0001f3d1: mem := mem with [R31, el]:u64 <- R31 + 0xA8
0001f3d6: R30 := 0xD040
0001f3d8: call @new with return %0001f3da

0001f3da:
0001f3de: R1 := 0x12000
0001f3e5: R2 := R1 + 0xB50
0001f3ed: R21 := R0
0001f3f4: R27 := R31 + 0x70
0001f3fc: R1 := R26
0001f404: R0 := R27
0001f40d: R3 := pad:64[mem[R2, el]:u32]
0001f417: mem := mem with [R21, el]:u32 <- 31:0[R3]
0001f41e: R30 := 0xD06C
0001f420: call @ntlm_request with return %0001f422

0001f422:
0001f42c: #11437 := ~31:0[R0] = 0
0001f426: when #11437 goto %0001f424
000388d3: goto %0001f461

0001f424:
0001f434: R1 := mem[R31 + 0x70, el]:u64
0001f43b: R2 := extend:64[31:0[R0]]
0001f441: R3 := 0xFFB
0001f448: R0 := R21 + 5
0001f44d: R30 := 0xD3C4
0001f44f: call @to_base64 with return %0001f451

0001f451:
0001f457: R0 := mem[R31 + 0x70, el]:u64
0001f45c: R30 := 0xD3CC
0001f45e: call @free with return %0001f460

0001f460:
0001f463: goto %0001f461

0001f461:
0001f46a: R0 := R20
0001f46f: R30 := 0xD078
0001f471: call @dup_rr_data with return %0001f473

0001f473:
0001f479: R19 := R0
0001f47f: R0 := 0x12000
0001f486: R1 := R0 + 0xB58
0001f48e: R2 := R21
0001f495: R3 := 1
0001f49d: R0 := mem[R19 + 8, el]:u64
0001f4a2: R30 := 0xD094
0001f4a4: call @hlist_mod with return %0001f4a6

0001f4a6:
0001f4ac: mem := mem with [R19 + 8, el]:u64 <- R0
0001f4b8: #11449 := R20 = 0
0001f4b2: when #11449 goto %0001f4b0
000388d2: goto %00028d76

0001f4b0:
0001f4c0: R1 := R22
0001f4c6: R0 := 0
0001f4cb: R30 := 0xD414
0001f4cd: call @http_has_body with return %0001f4cf

0001f4cf:
0001f4d9: #11453 := ~R0 = 0
0001f4d3: when #11453 goto %0001f4d1
000388d1: goto %00028d64

0001f4d1:
0001f4df: R25 := 0x27000
0001f4e7: R0 := mem[R25 + 0xF78, el]:u64
0001f4f0: R0 := pad:64[mem[R0, el]:u32]
0001f4fc: #11454 := ~31:0[R0] = 0
0001f4f6: when #11454 goto %0001f4f4
000388d0: goto %0001f51a

0001f4f4:
0001f502: R1 := 0x12000
0001f509: R0 := 1
0001f510: R1 := R1 + 0xCA8
0001f515: R30 := 0xD4E8
0001f517: call @__printf_chk with return %0001f519

0001f519:
0001f51c: goto %0001f51a

0001f51a:
0001f522: R0 := 1
0001f52a: mem := mem with [R31 + 0x68, el]:u32 <- 31:0[R0]
0001f52f: goto %0001f52d

00028d64:
00028d68: R25 := 0x27000
00028d70: mem := mem with [R31 + 0x68, el]:u32 <- 0
00028d74: goto %0001f52d

00028d76:
00028d7d: R0 := pad:64[mem[R20, el]:u32]
00028d88: #15251 := 31:0[R0] = 0
00028d82: when #15251 goto %00028793
000388cf: goto %00028d8b

00028d8b:
00028d91: R1 := mem[R20 + 0x28, el]:u64
00028d97: R0 := 0x12000
00028d9e: R0 := R0 + 0x908
00028da3: R30 := 0xD0B4
00028da5: call @strcasecmp with return %00028da7

00028da7:
00028db0: #15252 := ~31:0[R0] = 0
00028daa: when #15252 goto %00028793
000388ce: goto %00028db3

00028793:
00028799: R1 := R22
000287a1: R0 := R20
000287a6: R30 := 0xD0F8
000287a8: call @http_has_body with return %000287aa

000287aa:
000287b3: #15146 := ~R0 = 0
000287ad: when #15146 goto %000286d2
000388cd: goto %000287b6

000286d2:
000286d6: R25 := 0x27000
000286de: R0 := mem[R25 + 0xF78, el]:u64
000286e7: R0 := pad:64[mem[R0, el]:u32]
000286f3: #15135 := ~31:0[R0] = 0
000286ed: when #15135 goto %000286eb
000388cc: goto %00028711

000287b6:
000287bd: R0 := pad:64[mem[R20, el]:u32]
000287c3: R25 := 0x27000
000287cb: mem := mem with [R31 + 0x68, el]:u32 <- 0
000287d6: #15148 := ~31:0[R0] = 0
000287d0: when #15148 goto %00028738
000388cb: goto %000287d9

000287d9:
000388ca: goto %0001f52d

00028db3:
00028db7: R25 := 0x27000
00028dbf: R0 := mem[R25 + 0xF78, el]:u64
00028dc8: R0 := pad:64[mem[R0, el]:u32]
00028dd3: #15253 := ~31:0[R0] = 0
00028dcd: when #15253 goto %000286eb
000388c9: goto %00028dd6

000286eb:
000286f9: R1 := 0x12000
00028700: R0 := 1
00028707: R1 := R1 + 0xCA8
0002870c: R30 := 0xD4A0
0002870e: call @__printf_chk with return %00028710

00028710:
00028713: goto %00028711

00028711:
00028719: R0 := 1
00028721: mem := mem with [R31 + 0x68, el]:u32 <- 31:0[R0]
0002872a: R0 := pad:64[mem[R20, el]:u32]
00028735: #15137 := 31:0[R0] = 0
0002872f: when #15137 goto %0001f52d
000388c8: goto %00028738

00028738:
0002873e: R1 := mem[R20 + 0x28, el]:u64
00028744: R0 := 0x12000
0002874b: R0 := R0 + 0x908
00028750: R30 := 0xD2A8
00028752: call @strcasecmp with return %00028754

00028754:
0002875d: #15138 := ~31:0[R0] = 0
00028757: when #15138 goto %0001f52d
000388c7: goto %00028760

00028760:
00028763: goto %00028761

00028dd6:
00028ddb: R0 := 1
00028de3: mem := mem with [R31 + 0x68, el]:u32 <- 31:0[R0]
000388c6: goto %00028761

00028761:
0002876a: R0 := mem[R19 + 0x28, el]:u64
0002876f: R30 := 0xD0D8
00028771: call @free with return %00028773

00028773:
00028777: R0 := 0x12000
0002877e: R0 := R0 + 0x910
00028783: R30 := 0xD0E4
00028785: call @strdup with return %00028787

00028787:
0002878d: mem := mem with [R19 + 0x28, el]:u64 <- R0
00028791: goto %0001f52d

0001f52d:
0001f536: R0 := mem[R19 + 8, el]:u64
0001f53c: R2 := 0x12000
0001f543: R2 := R2 + 0xB70
0001f54a: R3 := 1
0001f550: R1 := 0x12000
0001f557: R1 := R1 + 0x918
0001f55c: R30 := 0xD12C
0001f55e: call @hlist_mod with return %0001f560

0001f560:
0001f566: mem := mem with [R19 + 8, el]:u64 <- R0
0001f56c: R1 := 0x12000
0001f573: R1 := R1 + 0x938
0001f578: R30 := 0xD13C
0001f57a: call @hlist_del with return %0001f57c

0001f57c:
0001f582: mem := mem with [R19 + 8, el]:u64 <- R0
0001f58a: R1 := mem[R25 + 0xF78, el]:u64
0001f593: R0 := pad:64[mem[R1, el]:u32]
0001f59f: #11458 := ~31:0[R0] = 0
0001f599: when #11458 goto %0001f597
000388c5: goto %0001f5cc

0001f597:
0001f5a5: R1 := 0x12000
0001f5ac: R0 := 1
0001f5b3: R1 := R1 + 0xB78
0001f5b8: R30 := 0xD3A4
0001f5ba: call @__printf_chk with return %0001f5bc

0001f5bc:
0001f5c2: R0 := mem[R19 + 8, el]:u64
0001f5c7: R30 := 0xD3AC
0001f5c9: call @hlist_dump with return %0001f5cb

0001f5cb:
0001f5ce: goto %0001f5cc

0001f5cc:
0001f5d6: R0 := pad:64[mem[R23, el]:u32]
0001f5de: R1 := R19
0001f5e3: R30 := 0xD158
0001f5e5: call @headers_send with return %0001f5e7

0001f5e7:
0001f5ee: R28 := 31:0[R0]
0001f5fa: #11465 := 31:0[R0] = 0
0001f5f4: when #11465 goto %0001f5f2
000388c4: goto %00028d47

00028d47:
00028d4d: R0 := mem[R25 + 0xF78, el]:u64
00028d56: R0 := pad:64[mem[R0, el]:u32]
00028d61: #15249 := ~31:0[R0] = 0
00028d5b: when #15249 goto %00028c81
000388c3: goto %00028c9d

00028c81:
00028c85: R1 := 0x12000
00028c8c: R0 := 1
00028c93: R1 := R1 + 0xB98
00028c98: R30 := 0xD404
00028c9a: call @__printf_chk with return %00028c9c

00028c9c:
00028c9f: goto %00028c9d

00028c9d:
00028ca6: R0 := R19
00028cb2: #15230 := R22 = 0
00028cac: when #15230 goto %00028caa
000388c2: goto %00028d05

00028caa:
00028cb7: R30 := 0xD3D4
00028cb9: call @reset_rr_data with return %00028cbb

00028cbb:
00028cc2: R0 := pad:64[mem[R23, el]:u32]
00028cca: R1 := R19
00028ccf: R30 := 0xD3E0
00028cd1: call @headers_recv with return %00028cd3

00028cd3:
00028cda: R28 := 31:0[R0]
00028ce6: #15237 := ~31:0[R0] = 0
00028ce0: when #15237 goto %00028cde
000388c1: goto %0001f5fe

00028d05:
00028d08: R30 := 0xD178
00028d0a: call @free_rr_data with return %00028d0c

00028d0c:
00028d12: R19 := R22
00028d1a: R0 := R22
00028d1f: R30 := 0xD184
00028d21: call @reset_rr_data with return %00028d23

00028d23:
00028d2a: R0 := pad:64[mem[R23, el]:u32]
00028d32: R1 := R22
00028d37: R30 := 0xD190
00028d39: call @headers_recv with return %00028d3b

00028d3b:
00028d44: #15248 := 31:0[R0] = 0
00028d3e: when #15248 goto %00028bb1
000388c0: goto %00028cde

00028cde:
00028cee: R0 := mem[R25 + 0xF78, el]:u64
00028cf7: R0 := pad:64[mem[R0, el]:u32]
00028d02: #15238 := ~31:0[R0] = 0
00028cfc: when #15238 goto %00028bc6
000388bf: goto %00028bd6

00028bc6:
00028bcc: R0 := mem[R19 + 8, el]:u64
00028bd1: R30 := 0xD434
00028bd3: call @hlist_dump with return %00028bd5

00028bd5:
00028bd8: goto %00028bd6

00028bd6:
00028be0: R0 := pad:64[mem[R19 + 0x10, el]:u32]
00028be7: #15219 := 0xFFFFFFFFFFFFFE69 + extend:64[31:0[R0]]
00028beb: NF := 63:63[#15219]
00028bee: VF := 31:31[R0] & ~63:63[#15219]
00028bf1: ZF := #15219 = 0
00028bf4: CF := 31:31[R0] | 31:31[R0] & ~63:63[#15219] | ~63:63[#15219]
00028c02: #15221 := ZF
00028bfc: when #15221 goto %000287db
000388be: goto %00028c05

000287db:
000287e2: R0 := pad:64[mem[R23, el]:u32]
000287ea: R1 := R19
000287ef: R30 := 0xD2BC
000287f1: call @http_body_drop with return %000287f3

000287f3:
000287fa: R28 := 31:0[R0]
00028805: #15155 := 31:0[R0] = 0
000287ff: when #15155 goto %0001f5f2
000388bd: goto %00028808

00028808:
0002880e: R0 := mem[R19 + 8, el]:u64
00028814: R1 := 0x12000
0002881b: R1 := R1 + 0xBC0
00028820: R30 := 0xD2D4
00028822: call @hlist_get with return %00028824

00028824:
0002882a: mem := mem with [R31 + 0x70, el]:u64 <- R0
00028836: #15157 := R0 = 0
00028830: when #15157 goto %0002882e
000388bc: goto %0002899e

0002882e:
0002883c: R2 := 0x12000
00028843: R1 := 1
0002884a: R2 := R2 + 0xC30
00028851: R0 := 4
00028856: R30 := 0xD500
00028858: call @__syslog_chk with return %0002885a

0002885a:
0002885d: goto %0002885b

0002899e:
000289a1: R30 := 0xD2E0
000289a3: call @strlen with return %000289a5

000289a5:
000289aa: R0 := R0 + 6
000289af: R30 := 0xD2E8
000289b1: call @new with return %000289b3

000289b3:
000289b9: R28 := R0
000289c1: R1 := mem[R31 + 0x70, el]:u64
000289c9: mem := mem with [R31 + 0x68, el]:u64 <- R0
000289d0: R1 := R1 + 5
000289d5: R30 := 0xD2FC
000289d7: call @from_base64 with return %000289d9

000289d9:
000289e0: R2 := 31:0[R0]
000289e7: #15183 := 0xFFFFFFFFFFFFFFE8 + extend:64[31:0[R0]]
000289eb: NF := 63:63[#15183]
000289ee: VF := 31:31[R0] & ~63:63[#15183]
000289f1: ZF := #15183 = 0
000289f4: CF := 31:31[R0] | 31:31[R0] & ~63:63[#15183] | ~63:63[#15183]
00028a04: #15185 := (NF <> VF | ZF) <> 0
000289fe: when #15185 goto %0002894f
000388bb: goto %00028a07

0002894f:
00028953: R2 := 0x12000
0002895a: R2 := R2 + 0xC08
000388ba: goto %0002895c

00028a07:
00028a0d: R0 := R27
00028a15: R3 := R26
00028a1d: R1 := R28
00028a22: R30 := 0xD318
00028a24: call @ntlm_response with return %00028a26

00028a26:
00028a2b: #15195 := extend:64[31:0[R0]]
00028a2f: NF := 63:63[#15195]
00028a32: VF := 31:31[R0] & ~63:63[#15195]
00028a35: ZF := #15195 = 0
00028a38: CF := 31:31[R0] | 31:31[R0] & ~63:63[#15195] | ~63:63[#15195]
00028a48: #15197 := (NF <> VF | ZF) <> 0
00028a42: when #15197 goto %0002898d
000388b9: goto %00028a4b

0002898d:
00028991: R2 := 0x12000
00028998: R2 := R2 + 0xBD8
0002899c: goto %0002895c

0002895c:
00028961: R1 := 1
00028968: R0 := 3
00028971: R28 := 31:0[R1]
00028976: R30 := 0xD51C
00028978: call @__syslog_chk with return %0002897a

0002897a:
00028980: R0 := mem[R31 + 0x68, el]:u64
00028985: R30 := 0xD524
00028987: call @free with return %00028989

00028989:
0002898b: goto %0001f5f2

00028a4b:
00028a4f: R1 := 0x12000
00028a56: R1 := R1 + 0xB50
00028a5d: R2 := extend:64[31:0[R0]]
00028a63: R3 := 0xFFB
00028a6a: R0 := R21 + 5
00028a73: R4 := pad:64[mem[R1, el]:u32]
00028a7d: mem := mem with [R21, el]:u32 <- 31:0[R4]
00028a87: R1 := mem[R31 + 0x70, el]:u64
00028a8c: R30 := 0xD34C
00028a8e: call @to_base64 with return %00028a90

00028a90:
00028a96: R0 := mem[R20 + 8, el]:u64
00028a9e: R2 := R21
00028aa5: R3 := 1
00028aab: R1 := 0x12000
00028ab2: R1 := R1 + 0xB58
00028ab7: R30 := 0xD364
00028ab9: call @hlist_mod with return %00028abb

00028abb:
00028ac1: R1 := R0
00028ac9: R0 := mem[R31 + 0x70, el]:u64
00028ad1: mem := mem with [R20 + 8, el]:u64 <- R1
00028ad6: R30 := 0xD374
00028ad8: call @free with return %00028ada

00028ada:
00028ae0: R0 := R28
00028ae5: R30 := 0xD37C
00028ae7: call @free with return %00028ae9

00028ae9:
000388b8: goto %0002885b

00028c05:
00028c0c: R0 := pad:64[mem[R31 + 0x68, el]:u32]
00028c17: #15222 := 31:0[R0] = 0
00028c11: when #15222 goto %0002885b
000388b7: goto %00028c1a

0002885b:
00028865: R0 := pad:64[mem[R23, el]:u32]
0002886c: R28 := 1
00028871: R30 := 0xD38C
00028873: call @so_closed with return %00028875

00028875:
0002887e: #15158 := 31:0[R0] = 0
00028878: when #15158 goto %0001f5f2
000388b6: goto %00028881

00028881:
00028884: goto %00028882

00028c1a:
00028c20: R0 := mem[R25 + 0xF78, el]:u64
00028c29: R0 := pad:64[mem[R0, el]:u32]
00028c34: #15223 := 31:0[R0] = 0
00028c2e: when #15223 goto %00028b7c
000388b5: goto %00028c37

00028c37:
00028c41: #15224 := R20 = 0
00028c3b: when #15224 goto %00028c39
000388b4: goto %00028c50

00028c50:
00028c57: R0 := pad:64[mem[R20, el]:u32]
00028c62: #15225 := ~31:0[R0] = 0
00028c5c: when #15225 goto %00028af8
000388b3: goto %00028c39

00028af8:
00028afe: R1 := mem[R20 + 0x28, el]:u64
00028b04: R0 := 0x12000
00028b0b: R0 := R0 + 0x908
00028b10: R30 := 0xD4BC
00028b12: call @strcasecmp with return %00028b14

00028b14:
00028b19: #15210 := extend:64[31:0[R0]]
00028b1d: NF := 63:63[#15210]
00028b20: VF := 31:31[R0] & ~63:63[#15210]
00028b23: ZF := #15210 = 0
00028b26: CF := 31:31[R0] | 31:31[R0] & ~63:63[#15210] | ~63:63[#15210]
00028b2f: R2 := 0x12000
00028b35: R0 := 0x12000
00028b3c: R2 := R2 + 0xB30
00028b43: R0 := R0 + 0xB40
00028b59: #15212 := ~ZF <> 0
00028b5a: goto %00028b51

00028b51:
00028b53: when #15212 goto %00028b4b
00028b54: goto %00028b4e

00028b4e:
00028b4f: R2 := R0
00028b56: goto %00028b52

00028b4b:
00028b4c: R2 := R2
00028b55: goto %00028b52

00028b52:
00028b60: goto %00028b5e

00028c39:
00028c47: R2 := 0x12000
00028c4e: R2 := R2 + 0xB30
000388b2: goto %00028b5e

00028b5e:
00028b65: R1 := 0x12000
00028b6c: R0 := 1
00028b73: R1 := R1 + 0xC60
00028b78: R30 := 0xD1E4
00028b7a: call @__printf_chk with return %00028b7c

00028b7c:
00028b85: #15213 := R22 = 0
00028b7f: when #15213 goto %000288f9
000388b1: goto %00028b88

000288f9:
00028900: R0 := pad:64[mem[R23, el]:u32]
00028908: R1 := R19
0002890d: R30 := 0xD474
0002890f: call @http_body_drop with return %00028911

00028911:
00028918: R28 := 31:0[R0]
00028923: #15171 := 31:0[R0] = 0
0002891d: when #15171 goto %0001f5fe
000388b0: goto %00028926

00028926:
0002892d: R0 := pad:64[mem[R23, el]:u32]
00028932: R30 := 0xD484
00028934: call @so_closed with return %00028936

00028936:
0002893f: #15172 := ~31:0[R0] = 0
00028939: when #15172 goto %00028882
000388af: goto %00028942

00028942:
00028949: R28 := pad:64[mem[R31 + 0x68, el]:u32]
0002894d: goto %0001f5fe

00028b88:
00028b8d: R0 := 0x197
00028b95: mem := mem with [R22 + 0x10, el]:u32 <- 31:0[R0]
00028b9d: R1 := R19
00028ba6: R0 := pad:64[mem[R23, el]:u32]
00028bab: R30 := 0xD1FC
00028bad: call @http_body_drop with return %00028baf

00028baf:
00028bb9: #15218 := 31:0[R0] = 0
00028bb3: when #15218 goto %00028bb1
000388ae: goto %00028c65

00028bb1:
00028bc0: R28 := 0
00028bc4: goto %0001f618

00028c65:
00028c6c: R0 := pad:64[mem[R23, el]:u32]
00028c71: R30 := 0xD208
00028c73: call @so_closed with return %00028c75

00028c75:
00028c7e: #15226 := 31:0[R0] = 0
00028c78: when #15226 goto %00028aeb
000388ad: goto %00028882

00028aeb:
00028af2: R28 := pad:64[mem[R31 + 0x68, el]:u32]
00028af6: goto %0001f618

00028882:
0002888b: R25 := mem[R25 + 0xF78, el]:u64
00028894: R0 := pad:64[mem[R25, el]:u32]
000288a0: #15159 := ~31:0[R0] = 0
0002889a: when #15159 goto %00028898
000388ac: goto %000288be

00028898:
000288a6: R1 := 0x12000
000288ad: R0 := 1
000288b4: R1 := R1 + 0xC88
000288b9: R30 := 0xD464
000288bb: call @__printf_chk with return %000288bd

000288bd:
000288c0: goto %000288be

000288be:
000288c8: R0 := pad:64[mem[R23, el]:u32]
000288cd: R30 := 0xD220
000288cf: call @close with return %000288d1

000288d1:
000288d7: R0 := R26
000288dc: R30 := 0xD228
000288de: call @proxy_connect with return %000288e0

000288e0:
000288e6: mem := mem with [R23, el]:u32 <- 31:0[R0]
000288ef: R0 := ~31:0[R0]
000288f7: R28 := pad:64[1:1[R0]]
000388ab: goto %0001f5f2

0001f5f2:
0001f606: #11466 := R22 = 0
0001f600: when #11466 goto %0001f5fe
000388aa: goto %0001f618

0001f5fe:
0001f60e: R0 := R19
0001f613: R30 := 0xD3F0
0001f615: call @free_rr_data with return %0001f617

0001f617:
0001f61a: goto %0001f618

0001f618:
0001f621: R0 := R21
0001f626: R30 := 0xD240
0001f628: call @free with return %0001f62a

0001f62a:
0001f630: R24 := mem[R24 + 0xFB8, el]:u64
0001f638: R0 := mem[R31 + 0x78, el]:u64
0001f640: R1 := mem[R24, el]:u64
0001f648: #11476 := 1 + ~R1 + R0
0001f64c: NF := 63:63[#11476]
0001f64f: VF := 63:63[R0] & 63:63[~R1] & ~63:63[#11476] | ~63:63[R0] &
          ~63:63[~R1] & 63:63[#11476]
0001f652: ZF := #11476 = 0
0001f655: CF := 63:63[R0] & 63:63[~R1] | 63:63[~R1] & ~63:63[#11476] |
          63:63[R0] & ~63:63[#11476]
0001f659: R0 := #11476
0001f65f: R1 := 0
0001f66b: #11478 := ~ZF <> 0
0001f665: when #11478 goto %0001f663
000388a9: goto %00028672

0001f663:
0001f670: R30 := 0xD538
0001f672: call @__stack_chk_fail with return %000388a7

000388a7:
000388a8: call @forward_request with noreturn

00028672:
00028679: R0 := 31:0[R28]
00028682: R19 := mem[R31 + 0x10, el]:u64
00028686: R20 := mem[R31 + 0x18, el]:u64
0002868f: R21 := mem[R31 + 0x20, el]:u64
00028693: R22 := mem[R31 + 0x28, el]:u64
0002869c: R23 := mem[R31 + 0x30, el]:u64
000286a0: R24 := mem[R31 + 0x38, el]:u64
000286a9: R25 := mem[R31 + 0x40, el]:u64
000286ad: R26 := mem[R31 + 0x48, el]:u64
000286b6: R27 := mem[R31 + 0x50, el]:u64
000286ba: R28 := mem[R31 + 0x58, el]:u64
000286c4: R29 := mem[R31, el]:u64
000286c8: R30 := mem[R31 + 8, el]:u64
000286cb: R31 := R31 + 0x80
000286d0: call R30 with noreturn

000388d4: sub proxy_connect(proxy_connect_result)
00038b4c: proxy_connect_result :: out u32 = low:32[R0]

0001ec0a:
0001ec12: mem := mem with [R31 - 0x70, el]:u64 <- R29
0001ec16: mem := mem with [R31 - 0x68, el]:u64 <- R30
0001ec19: R31 := R31 - 0x70
0001ec20: R29 := R31
0001ec29: mem := mem with [R31, el]:u64 <- R31 + 0x80
0001ec2d: mem := mem with [R31, el]:u64 <- R31 + 0x88
0001ec33: R26 := 0x28000
0001ec3a: R1 := R26 + 0x4A0
0001ec42: mem := mem with [R31 + 0x68, el]:u64 <- R0
0001ec49: R0 := R1 + 8
0001ec52: R1 := pad:64[mem[R26 + 0x4A0, el]:u32]
0001ec5b: mem := mem with [R31, el]:u64 <- R31 + 0x20
0001ec5f: mem := mem with [R31, el]:u64 <- R31 + 0x28
0001ec68: mem := mem with [R31, el]:u64 <- R31 + 0x40
0001ec6c: mem := mem with [R31, el]:u64 <- R31 + 0x48
0001ec75: mem := mem with [R31, el]:u64 <- R31 + 0x60
0001ec79: mem := mem with [R31, el]:u64 <- R31 + 0x68
0001ec7f: R23 := 0x27000
0001ec88: mem := mem with [R31, el]:u64 <- R31 + 0xA0
0001ec8c: mem := mem with [R31, el]:u64 <- R31 + 0xA8
0001ec94: mem := mem with [R31 + 0x64, el]:u32 <- 31:0[R1]
0001ec99: R30 := 0xCD3C
0001ec9c: call @pthread_mutex_lock with return %0001ec9e

0001ec9e:
0001eca5: R0 := pad:64[mem[R26 + 0x4A0, el]:u32]
0001ecb1: #11271 := 31:0[R0] = 0
0001ecab: when #11271 goto %0001eca9
000388e7: goto %0001ed18

0001eca9:
0001ecb9: R0 := mem[R23 + 0xFE0, el]:u64
0001ecc0: R19 := 1
0001ecc9: R1 := 31:0[R19]
0001ecd1: mem := mem with [R26 + 0x4A0, el]:u32 <- 31:0[R19]
0001ecd9: R0 := mem[R0, el]:u64
0001ecde: R30 := 0xCFD8
0001ece0: call @plist_get with return %0001ece2

0001ece2:
0001ece8: R3 := R0
0001ecf1: R1 := 31:0[R19]
0001ecf7: R2 := 0x12000
0001ecfe: R0 := 6
0001ed05: R2 := R2 + 0xA90
0001ed0e: R4 := pad:64[mem[R3 + 0x180, el]:u32]
0001ed13: R30 := 0xCFF4
0001ed15: call @__syslog_chk with return %0001ed17

0001ed17:
0001ed1a: goto %0001ed18

0001ed18:
0001ed20: R20 := R26 + 0x4A0
0001ed26: R25 := 0x27000
0001ed2d: R19 := R20 + 8
0001ed34: R22 := 0
0001ed3c: R0 := R19
0001ed41: R30 := 0xCD5C
0001ed44: call @pthread_mutex_unlock with return %0001ed46

0001ed46:
0001ed4c: R24 := mem[R23 + 0xFE0, el]:u64
0001ed54: R25 := mem[R25 + 0xF78, el]:u64
000388e6: goto %0001ed58

0001ed58:
0001ed5e: R0 := R19
0001ed63: R30 := 0xCD70
0001ed65: call @pthread_mutex_lock with return %0001ed67

0001ed67:
0001ed6e: R1 := pad:64[mem[R20, el]:u32]
0001ed76: R0 := mem[R24, el]:u64
0001ed7b: R30 := 0xCD7C
0001ed7d: call @plist_get with return %0001ed7f

0001ed7f:
0001ed85: R28 := R0
0001ed8d: R0 := R19
0001ed92: R30 := 0xCD88
0001ed94: call @pthread_mutex_unlock with return %0001ed96

0001ed96:
0001ed9d: R0 := pad:64[mem[R28 + 0x184, el]:u32]
0001eda9: #11294 := ~31:0[R0] = 0
0001eda3: when #11294 goto %0001eda1
000388e5: goto %0001f31b

0001f31b:
0001f322: R0 := pad:64[mem[R25, el]:u32]
0001f32d: #11407 := ~31:0[R0] = 0
0001f327: when #11407 goto %0001f192
000388e4: goto %0001f1bd

0001f192:
0001f198: R3 := R28
0001f19e: R2 := 0x12000
0001f1a5: R1 := 1
0001f1ac: R2 := R2 + 0xAA8
0001f1b3: R0 := 6
0001f1b8: R30 := 0xCF78
0001f1ba: call @__syslog_chk with return %0001f1bc

0001f1bc:
0001f1bf: goto %0001f1bd

0001f1bd:
0001f1c6: R1 := R28
0001f1cd: R0 := R28 + 0x17C
0001f1d2: R30 := 0xCDA4
0001f1d4: call @so_resolv with return %0001f1d6

0001f1d6:
0001f1df: #11374 := 31:0[R0] = 0
0001f1d9: when #11374 goto %0001efaa
000388e3: goto %0001f1e2

0001efaa:
0001efb0: R3 := R28
0001efb6: R2 := 0x12000
0001efbd: R1 := 1
0001efc4: R2 := R2 + 0xAC0
0001efcb: R0 := 3
0001efd0: R30 := 0xCE20
0001efd2: call @__syslog_chk with return %0001efd4

0001efd4:
0001efdb: R21 := pad:64[mem[R28 + 0x184, el]:u32]
0001efe6: #11344 := ~31:0[R21] = 0
0001efe0: when #11344 goto %0001eda1
000388e2: goto %0001ede8

0001f1e2:
0001f1e7: R0 := 1
0001f1ef: mem := mem with [R28 + 0x184, el]:u32 <- 31:0[R0]
000388e1: goto %0001eda1

0001eda1:
0001edb2: R0 := pad:64[mem[R28 + 0x17C, el]:u32]
0001edbb: R1 := pad:64[mem[R28 + 0x180, el]:u32]
0001edc0: R30 := 0xCDBC
0001edc2: call @so_connect with return %0001edc4

0001edc4:
0001edcb: R21 := 31:0[R0]
0001edd2: #11298 := extend:64[31:0[R0]]
0001edd6: NF := 63:63[#11298]
0001edd9: VF := 31:31[R0] & ~63:63[#11298]
0001eddc: ZF := #11298 = 0
0001eddf: CF := 31:31[R0] | 31:31[R0] & ~63:63[#11298] | ~63:63[#11298]
0001edf0: #11300 := (NF <> VF | ZF) <> 0
0001edea: when #11300 goto %0001ede8
000388e0: goto %0001f290

0001ede8:
0001edf8: R0 := R19
0001edfd: R30 := 0xCE30
0001edff: call @pthread_mutex_lock with return %0001ee01

0001ee01:
0001ee05: R5 := 0x27000
0001ee0e: R1 := pad:64[mem[R20, el]:u32]
0001ee16: R28 := mem[R5 + 0xFA0, el]:u64
0001ee1f: R0 := pad:64[mem[R28, el]:u32]
0001ee27: #11307 := 1 + extend:64[~31:0[R0]] + extend:64[31:0[R1]]
0001ee2b: NF := 63:63[#11307]
0001ee2e: VF := 31:31[~31:0[R0]] & 31:31[R1] & ~63:63[#11307] |
          ~31:31[~31:0[R0]] & ~31:31[R1] & 63:63[#11307]
0001ee31: ZF := #11307 = 0
0001ee34: CF := 31:31[~31:0[R0]] & 31:31[R1] | 31:31[R1] & ~63:63[#11307] |
          31:31[~31:0[R0]] & ~63:63[#11307]
0001ee3f: R0 := mem[R23 + 0xFE0, el]:u64
0001ee4c: #11309 := NF <> VF
0001ee46: when #11309 goto %0001ee44
000388df: goto %0001f1f1

0001ee44:
0001ee54: R0 := mem[R0, el]:u64
0001ee5c: R1 := extend:64[31:0[R1]] + 1
0001ee64: mem := mem with [R20, el]:u32 <- 31:0[R1]
0001ee6c: R22 := extend:64[31:0[R22]] + 1
0001ee71: R30 := 0xCF28
0001ee73: call @plist_get with return %0001ee75

0001ee75:
0001ee7b: R27 := R0
0001ee83: R0 := R19
0001ee88: R30 := 0xCF34
0001ee8a: call @pthread_mutex_unlock with return %0001ee8c

0001ee8c:
0001ee91: R0 := 3
0001ee99: R3 := R27
0001eea2: R4 := pad:64[mem[R27 + 0x180, el]:u32]
0001eea8: R2 := 0x12000
0001eeaf: R1 := 1
0001eeb6: R2 := R2 + 0xAE0
0001eebb: R30 := 0xCF50
0001eebd: call @__syslog_chk with return %0001eebf

0001eebf:
0001eec6: R0 := pad:64[mem[R28, el]:u32]
0001eece: #11323 := 1 + extend:64[~31:0[R22]] + extend:64[31:0[R0]]
0001eed2: NF := 63:63[#11323]
0001eed5: VF := 31:31[~31:0[R22]] & 31:31[R0] & ~63:63[#11323] |
          ~31:31[~31:0[R22]] & ~31:31[R0] & 63:63[#11323]
0001eed8: ZF := #11323 = 0
0001eedb: CF := 31:31[~31:0[R22]] & 31:31[R0] | 31:31[R0] & ~63:63[#11323] |
          31:31[~31:0[R22]] & ~63:63[#11323]
0001eeeb: #11325 := (NF = VF & ~ZF) <> 0
0001eee5: when #11325 goto %0001ed58
000388de: goto %0001eeee

0001eeee:
0001eef1: goto %0001eeef

0001f1f1:
0001f1f7: R0 := mem[R0, el]:u64
0001f1fe: R1 := 1
0001f207: R22 := 31:0[R22] + 31:0[R1]
0001f20f: mem := mem with [R20, el]:u32 <- 31:0[R1]
0001f214: R30 := 0xCE60
0001f216: call @plist_get with return %0001f218

0001f218:
0001f21e: R27 := R0
0001f226: R0 := R19
0001f22b: R30 := 0xCE6C
0001f22d: call @pthread_mutex_unlock with return %0001f22f

0001f22f:
0001f234: R0 := 3
0001f23c: R3 := R27
0001f245: R4 := pad:64[mem[R27 + 0x180, el]:u32]
0001f24b: R2 := 0x12000
0001f252: R1 := 1
0001f259: R2 := R2 + 0xAE0
0001f25e: R30 := 0xCE88
0001f260: call @__syslog_chk with return %0001f262

0001f262:
0001f269: R0 := pad:64[mem[R28, el]:u32]
0001f271: #11392 := 1 + extend:64[~31:0[R0]] + extend:64[31:0[R22]]
0001f275: NF := 63:63[#11392]
0001f278: VF := 31:31[~31:0[R0]] & 31:31[R22] & ~63:63[#11392] |
          ~31:31[~31:0[R0]] & ~31:31[R22] & 63:63[#11392]
0001f27b: ZF := #11392 = 0
0001f27e: CF := 31:31[~31:0[R0]] & 31:31[R22] | 31:31[R22] & ~63:63[#11392] |
          31:31[~31:0[R0]] & ~63:63[#11392]
0001f28d: #11394 := NF <> VF
0001f287: when #11394 goto %0001ed58
000388dd: goto %0001eeef

0001eeef:
0001eef7: R1 := 1
0001eefe: R0 := 3
0001ef04: R2 := 0x12000
0001ef0b: R2 := R2 + 0xB08
0001ef10: R30 := 0xCEA8
0001ef12: call @__syslog_chk with return %0001ef14

0001ef14:
0001ef1b: R0 := pad:64[mem[R26 + 0x4A0, el]:u32]
0001ef24: R1 := pad:64[mem[R31 + 0x64, el]:u32]
0001ef2c: #11329 := 1 + extend:64[~31:0[R0]] + extend:64[31:0[R1]]
0001ef30: NF := 63:63[#11329]
0001ef33: VF := 31:31[~31:0[R0]] & 31:31[R1] & ~63:63[#11329] |
          ~31:31[~31:0[R0]] & ~31:31[R1] & 63:63[#11329]
0001ef36: ZF := #11329 = 0
0001ef39: CF := 31:31[~31:0[R0]] & 31:31[R1] | 31:31[R1] & ~63:63[#11329] |
          31:31[~31:0[R0]] & ~63:63[#11329]
0001ef48: #11331 := ZF
0001ef42: when #11331 goto %0001ef40
000388dc: goto %0001efe9

0001f290:
0001f297: R0 := pad:64[mem[R26 + 0x4A0, el]:u32]
0001f2a0: R1 := pad:64[mem[R31 + 0x64, el]:u32]
0001f2a8: #11398 := 1 + extend:64[~31:0[R1]] + extend:64[31:0[R0]]
0001f2ac: NF := 63:63[#11398]
0001f2af: VF := 31:31[~31:0[R1]] & 31:31[R0] & ~63:63[#11398] |
          ~31:31[~31:0[R1]] & ~31:31[R0] & 63:63[#11398]
0001f2b2: ZF := #11398 = 0
0001f2b5: CF := 31:31[~31:0[R1]] & 31:31[R0] | 31:31[R0] & ~63:63[#11398] |
          31:31[~31:0[R1]] & ~63:63[#11398]
0001f2c3: #11400 := ~ZF <> 0
0001f2bd: when #11400 goto %0001efe9
000388db: goto %0001f2c6

0001efe9:
0001efed: R22 := 0x27000
0001eff3: R20 := 0x27000
0001effb: R0 := mem[R22 + 0xF60, el]:u64
0001f000: R30 := 0xCEC8
0001f002: call @pthread_mutex_lock with return %0001f004

0001f004:
0001f00a: R0 := mem[R20 + 0xFC0, el]:u64
0001f012: R19 := mem[R0, el]:u64
0001f01e: #11345 := R19 = 0
0001f018: when #11345 goto %0001f016
000388da: goto %0001f15c

0001f15c:
000388d9: goto %0001f15e

0001f15e:
0001f165: R0 := pad:64[mem[R19, el]:u32]
0001f16d: R19 := mem[R19 + 0x10, el]:u64
0001f172: R30 := 0xCEE4
0001f174: call @close with return %0001f176

0001f176:
0001f17f: #11367 := ~R19 = 0
0001f179: when #11367 goto %0001f15e
000388d8: goto %0001f182

0001f182:
0001f188: R20 := mem[R20 + 0xFC0, el]:u64
0001f190: R19 := mem[R20, el]:u64
000388d7: goto %0001f016

0001f016:
0001f026: R0 := R19
0001f02b: R30 := 0xCEF8
0001f02d: call @plist_free with return %0001f02f

0001f02f:
0001f035: R0 := mem[R22 + 0xF60, el]:u64
0001f03a: R30 := 0xCF00
0001f03c: call @pthread_mutex_unlock with return %0001f03e

0001f03e:
0001f044: R0 := mem[R31 + 0x68, el]:u64
0001f04b: #11349 := extend:64[31:0[R21]]
0001f04f: NF := 63:63[#11349]
0001f052: VF := 31:31[R21] & ~63:63[#11349]
0001f055: ZF := #11349 = 0
0001f058: CF := 31:31[R21] | 31:31[R21] & ~63:63[#11349] | ~63:63[#11349]
0001f083: #11351 := (NF = VF & ~ZF) <> 0
0001f084: goto %0001f07b

0001f07b:
0001f07d: when #11351 goto %0001f063
0001f07e: goto %0001f06f

0001f06f:
0001f070: NF := 0
0001f073: ZF := 1
0001f076: CF := 0
0001f079: VF := 0
0001f080: goto %0001f07c

0001f063:
0001f064: NF := 63:63[R0 + 0]
0001f067: VF := 63:63[R0] & ~63:63[R0 + 0]
0001f06a: ZF := R0 + 0 = 0
0001f06d: CF := 63:63[R0] | ~63:63[R0 + 0] | 63:63[R0] & ~63:63[R0 + 0]
0001f07f: goto %0001f07c

0001f07c:
0001f090: #11354 := ZF
0001f08a: when #11354 goto %0001ef40
000388d6: goto %0001f093

0001f093:
0001f096: goto %0001f094

0001f2c6:
0001f2cc: R0 := mem[R31 + 0x68, el]:u64
0001f2d3: #11401 := extend:64[31:0[R21]]
0001f2d7: NF := 63:63[#11401]
0001f2da: VF := 31:31[R21] & ~63:63[#11401]
0001f2dd: ZF := #11401 = 0
0001f2e0: CF := 31:31[R21] | 31:31[R21] & ~63:63[#11401] | ~63:63[#11401]
0001f30b: #11403 := (NF = VF & ~ZF) <> 0
0001f30c: goto %0001f303

0001f303:
0001f305: when #11403 goto %0001f2eb
0001f306: goto %0001f2f7

0001f2f7:
0001f2f8: NF := 0
0001f2fb: ZF := 1
0001f2fe: CF := 0
0001f301: VF := 0
0001f308: goto %0001f304

0001f2eb:
0001f2ec: NF := 63:63[R0 + 0]
0001f2ef: VF := 63:63[R0] & ~63:63[R0 + 0]
0001f2f2: ZF := R0 + 0 = 0
0001f2f5: CF := 63:63[R0] | ~63:63[R0 + 0] | 63:63[R0] & ~63:63[R0 + 0]
0001f307: goto %0001f304

0001f304:
0001f318: #11406 := ~ZF <> 0
0001f312: when #11406 goto %0001f094
000388d5: goto %0001ef40

0001f094:
0001f09b: R2 := 0x27000
0001f0a1: R1 := 0x27000
0001f0a9: R2 := mem[R2 + 0xF90, el]:u64
0001f0b1: R1 := mem[R1 + 0xF80, el]:u64
0001f0ba: R2 := pad:64[mem[R2, el]:u32]
0001f0c2: R1 := mem[R1, el]:u64
0001f0c9: #11355 := extend:64[31:0[R2]]
0001f0cd: NF := 63:63[#11355]
0001f0d0: VF := 31:31[R2] & ~63:63[#11355]
0001f0d3: ZF := #11355 = 0
0001f0d6: CF := 31:31[R2] | 31:31[R2] & ~63:63[#11355] | ~63:63[#11355]
0001f0f1: #11357 := ~ZF <> 0
0001f0f2: goto %0001f0e9

0001f0e9:
0001f0eb: when #11357 goto %0001f0e2
0001f0ec: goto %0001f0e6

0001f0e6:
0001f0e7: R2 := 1
0001f0ee: goto %0001f0ea

0001f0e2:
0001f0e3: R2 := 0
0001f0ed: goto %0001f0ea

0001f0ea:
0001f0f8: R30 := 0xCFA0
0001f0fa: call @copy_auth with return %0001f0fc

0001f0fc:
0001f103: R0 := 31:0[R21]
0001f10c: R19 := mem[R31 + 0x10, el]:u64
0001f110: R20 := mem[R31 + 0x18, el]:u64
0001f119: R21 := mem[R31 + 0x20, el]:u64
0001f11d: R22 := mem[R31 + 0x28, el]:u64
0001f126: R23 := mem[R31 + 0x30, el]:u64
0001f12a: R24 := mem[R31 + 0x38, el]:u64
0001f133: R25 := mem[R31 + 0x40, el]:u64
0001f137: R26 := mem[R31 + 0x48, el]:u64
0001f140: R27 := mem[R31 + 0x50, el]:u64
0001f144: R28 := mem[R31 + 0x58, el]:u64
0001f14e: R29 := mem[R31, el]:u64
0001f152: R30 := mem[R31 + 8, el]:u64
0001f155: R31 := R31 + 0x70
0001f15a: call R30 with noreturn

0001ef40:
0001ef51: R0 := 31:0[R21]
0001ef5a: R19 := mem[R31 + 0x10, el]:u64
0001ef5e: R20 := mem[R31 + 0x18, el]:u64
0001ef67: R21 := mem[R31 + 0x20, el]:u64
0001ef6b: R22 := mem[R31 + 0x28, el]:u64
0001ef74: R23 := mem[R31 + 0x30, el]:u64
0001ef78: R24 := mem[R31 + 0x38, el]:u64
0001ef81: R25 := mem[R31 + 0x40, el]:u64
0001ef85: R26 := mem[R31 + 0x48, el]:u64
0001ef8e: R27 := mem[R31 + 0x50, el]:u64
0001ef92: R28 := mem[R31 + 0x58, el]:u64
0001ef9c: R29 := mem[R31, el]:u64
0001efa0: R30 := mem[R31 + 8, el]:u64
0001efa3: R31 := R31 + 0x70
0001efa8: call R30 with noreturn

000388e8: sub proxy_thread(proxy_thread_result)
00038b4d: proxy_thread_result :: out u32 = low:32[R0]

00021439:
00021441: mem := mem with [R31 - 0x70, el]:u64 <- R29
00021445: mem := mem with [R31 - 0x68, el]:u64 <- R30
00021448: R31 := R31 - 0x70
0002144f: R29 := R31
00021458: mem := mem with [R31, el]:u64 <- R31 + 0x40
0002145c: mem := mem with [R31, el]:u64 <- R31 + 0x48
00021464: R21 := R0
0002146d: mem := mem with [R31, el]:u64 <- R31 + 0xA0
00021471: mem := mem with [R31, el]:u64 <- R31 + 0xA8
00021477: R28 := 0x14000
00021480: R27 := pad:64[mem[R21, el]:u32]
00021489: mem := mem with [R31, el]:u64 <- R31 + 0x80
0002148d: mem := mem with [R31, el]:u64 <- R31 + 0x88
00021493: R26 := 0x14000
0002149a: R26 := R26 + 0x48
000214a1: R0 := R28 + 0x28
000214a7: R25 := 0x28000
000214b0: mem := mem with [R31, el]:u64 <- R31 + 0x20
000214b4: mem := mem with [R31, el]:u64 <- R31 + 0x28
000214bd: mem := mem with [R31, el]:u64 <- R31 + 0x60
000214c1: mem := mem with [R31, el]:u64 <- R31 + 0x68
000214c9: mem := mem with [R31 + 0x68, el]:u64 <- R0
000388f6: goto %000214cd

000214cd:
000214d2: R0 := R25 + 0x4D8
000214db: R0 := pad:64[mem[R0 + 4, el]:u32]
000214e7: #12182 := ~31:0[R0] = 0
000214e1: when #12182 goto %000214df
000388f5: goto %000246af

000214df:
000214ef: R1 := mem[R31 + 0x68, el]:u64
000214f8: R2 := 31:0[R27]
000214ff: R0 := 1
00021504: R30 := 0x10E88
00021506: call @__printf_chk with return %00021508

00021508:
0002150f: R2 := 31:0[R27]
00021515: R1 := 0x12000
0002151c: R1 := R1 + 0xD80
00021523: R0 := 1
00021528: R30 := 0x10E9C
0002152a: call @__printf_chk with return %0002152c

0002152c:
0002152f: R30 := 0x10EA0
00021531: call @new_rr_data with return %00021533

00021533:
00021539: R19 := R0
00021541: R1 := R19
0002154a: R0 := 31:0[R27]
0002154f: R30 := 0x10EB0
00021551: call @headers_recv with return %00021553

00021553:
0002155d: #12198 := ~31:0[R0] = 0
00021557: when #12198 goto %00021555
000388f4: goto %000246a0

000246af:
000246b2: R30 := 0x10D78
000246b4: call @new_rr_data with return %000246b6

000246b6:
000246bc: R19 := R0
000246c4: R1 := R19
000246cd: R0 := 31:0[R27]
000246d2: R30 := 0x10D88
000246d4: call @headers_recv with return %000246d6

000246d6:
000246df: #13611 := 31:0[R0] = 0
000246d9: when #13611 goto %000246a0
000388f3: goto %00021555

000246a0:
000246a6: R0 := R19
000246ab: R30 := 0x10EBC
000246ad: call @free_rr_data with return %00021666

00021555:
00021563: R23 := 0x12000
00021569: R22 := 0x12000
00021570: R23 := R23 + 0xE30
00021577: R22 := R22 + 0xE40
0002157e: R24 := R25 + 0x4D8
000388f2: goto %00021580

00021580:
00021586: R0 := mem[R19 + 8, el]:u64
0002158e: R2 := R23
00021596: R1 := R22
0002159b: R30 := 0x10DB0
0002159d: call @hlist_subcmp with return %0002159f

0002159f:
000215a6: R20 := 31:0[R0]
000215ae: R0 := mem[R19 + 0x40, el]:u64
000215b3: R30 := 0x10DBC
000215b5: call @noproxy_match with return %000215b7

000215b7:
000215be: R2 := 31:0[R0]
000215c6: R1 := R19
000215ce: R0 := R21
000215da: #12217 := 31:0[R2] = 0
000215d4: when #12217 goto %000215d2
000388f1: goto %0002467c

000215d2:
000215df: R30 := 0x10E00
000215e1: call @forward_request with return %000215e3

000215e3:
000215e9: R28 := R0
000215f2: R0 := pad:64[mem[R24 + 4, el]:u32]
000215fe: #12221 := 31:0[R0] = 0
000215f8: when #12221 goto %000215f6
000388f0: goto %00024640

0002467c:
0002467f: R30 := 0x10DD0
00024681: call @direct_request with return %00024683

00024683:
00024689: R28 := R0
00024692: R0 := pad:64[mem[R24 + 4, el]:u32]
0002469d: #13598 := ~31:0[R0] = 0
00024697: when #13598 goto %00024640
000388ef: goto %000215f6

00024640:
00024646: R1 := R26
0002464e: R2 := R28
00024655: R0 := 1
0002465a: R30 := 0x10E1C
0002465c: call @__printf_chk with return %0002465e

0002465e:
00024663: R1 := R28 - 1
0002466b: R0 := R19
00024679: #13594 := (~CF | ZF) <> 0
00024673: when #13594 goto %00024621
000388ee: goto %00021614

000215f6:
00021605: R1 := R28 - 1
0002160d: R0 := R19
0002161c: #12226 := (CF & ~ZF) <> 0
00021616: when #12226 goto %00021614
000388ed: goto %00024621

00021614:
00021621: R30 := 0x10E30
00021623: call @free_rr_data with return %00021625

00021625:
0002162a: #12227 := extend:64[31:0[R20]]
0002162e: NF := 63:63[#12227]
00021631: VF := 31:31[R20] & ~63:63[#12227]
00021634: ZF := #12227 = 0
00021637: CF := 31:31[R20] | 31:31[R20] & ~63:63[#12227] | ~63:63[#12227]
00021660: #12229 := ~ZF <> 0
00021661: goto %00021658

00021658:
0002165a: when #12229 goto %00021640
0002165b: goto %0002164c

0002164c:
0002164d: NF := 0
00021650: ZF := 1
00021653: CF := 0
00021656: VF := 0
0002165d: goto %00021659

00021640:
00021641: NF := 63:63[R28 + 1]
00021644: VF := ~63:63[R28] & 63:63[R28 + 1]
00021647: ZF := R28 + 1 = 0
0002164a: CF := 63:63[R28] & ~63:63[R28 + 1]
0002165c: goto %00021659

00021659:
0002166e: #12231 := ZF
00021668: when #12231 goto %00021666
000388ec: goto %00024605

00021666:
00021675: R25 := R25 + 0x4D8
0002167e: R0 := pad:64[mem[R25 + 0x20, el]:u32]
0002168a: #12232 := ~31:0[R0] = 0
00021684: when #12232 goto %00021682
000388eb: goto %00021708

00021708:
0002170d: R19 := R25 + 0x28
00021715: R0 := R19
0002171a: R30 := 0x10ED4
0002171c: call @pthread_mutex_lock with return %0002171e

0002171e:
00021721: R30 := 0x10ED8
00021724: call @pthread_self with return %00021726

00021726:
0002172c: R1 := R0
00021734: R0 := mem[R25 + 0x58, el]:u64
0002173a: R2 := 0
0002173f: R30 := 0x10EE8
00021741: call @plist_add with return %00021743

00021743:
00021749: R1 := R0
00021751: R0 := R19
00021759: mem := mem with [R25 + 0x58, el]:u64 <- R1
0002175e: R30 := 0x10EF8
00021760: call @pthread_mutex_unlock with return %00021762

00021762:
00021764: goto %00021682

00024605:
0002460a: R0 := R25 + 0x4D8
00024613: R0 := pad:64[mem[R0 + 0x20, el]:u32]
0002461e: #13579 := 31:0[R0] = 0
00024618: when #13579 goto %000214cd
000388ea: goto %00021682

00021682:
00021692: R0 := R21
00021697: R30 := 0x10E50
00021699: call @free with return %0002169b

0002169b:
000216a2: R0 := 31:0[R27]
000216a7: R30 := 0x10E58
000216a9: call @close with return %000216ab

000216ab:
000216af: R0 := 0
000216b8: R19 := mem[R31 + 0x10, el]:u64
000216bc: R20 := mem[R31 + 0x18, el]:u64
000216c5: R21 := mem[R31 + 0x20, el]:u64
000216c9: R22 := mem[R31 + 0x28, el]:u64
000216d2: R23 := mem[R31 + 0x30, el]:u64
000216d6: R24 := mem[R31 + 0x38, el]:u64
000216df: R25 := mem[R31 + 0x40, el]:u64
000216e3: R26 := mem[R31 + 0x48, el]:u64
000216ec: R27 := mem[R31 + 0x50, el]:u64
000216f0: R28 := mem[R31 + 0x58, el]:u64
000216fa: R29 := mem[R31, el]:u64
000216fe: R30 := mem[R31 + 8, el]:u64
00021701: R31 := R31 + 0x70
00021706: call R30 with noreturn

00024621:
0002462a: #13580 := R28 = 0
00024624: when #13580 goto %00021580
000388e9: goto %0002462d

0002462d:
00024633: R19 := R28
00024638: R30 := 0x10DF8
0002463a: call @free_rr_data with return %0002463c

0002463c:
0002463e: goto %00021580

000388f7: sub pthread_attr_destroy(pthread_attr_destroy_result)
00038b4e: pthread_attr_destroy_result :: out u32 = low:32[R0]

0002c9a3:
000302ae: R16 := 0x27000
000302b6: R17 := mem[R16 + 0xD38, el]:u64
000302bd: R16 := R16 + 0xD38
000302c2: call R17 with noreturn

000388f8: sub pthread_attr_init(pthread_attr_init_result)
00038b4f: pthread_attr_init_result :: out u32 = low:32[R0]

0002f37d:
0003011e: R16 := 0x27000
00030126: R17 := mem[R16 + 0xCB8, el]:u64
0003012d: R16 := R16 + 0xCB8
00030132: call R17 with noreturn

000388f9: sub pthread_attr_setguardsize(pthread_attr_setguardsize_result)
00038b50: pthread_attr_setguardsize_result :: out u32 = low:32[R0]

0002f3a9:
00030344: R16 := 0x27000
0003034c: R17 := mem[R16 + 0xD68, el]:u64
00030353: R16 := R16 + 0xD68
00030358: call R17 with noreturn

000388fa: sub pthread_attr_setstacksize(pthread_attr_setstacksize_result)
00038b51: pthread_attr_setstacksize_result :: out u32 = low:32[R0]

0002f393:
000303a8: R16 := 0x27000
000303b0: R17 := mem[R16 + 0xD88, el]:u64
000303b7: R16 := R16 + 0xD88
000303bc: call R17 with noreturn

000388fb: sub pthread_create(pthread_create_result)
00038b52: pthread_create_result :: out u32 = low:32[R0]

0002ca78:
000304a2: R16 := 0x27000
000304aa: R17 := mem[R16 + 0xDD8, el]:u64
000304b1: R16 := R16 + 0xDD8
000304b6: call R17 with noreturn

000388fc: sub pthread_join(pthread_join_result)
00038b53: pthread_join_result :: out u32 = low:32[R0]

0002c7a6:
000304ed: R16 := 0x27000
000304f5: R17 := mem[R16 + 0xDF0, el]:u64
000304fc: R16 := R16 + 0xDF0
00030501: call R17 with noreturn

000388fd: sub pthread_mutex_lock(pthread_mutex_lock_result)
00038b54: pthread_mutex_lock_result :: out u32 = low:32[R0]

0001ec9a:
00030871: R16 := 0x27000
00030879: R17 := mem[R16 + 0xF10, el]:u64
00030880: R16 := R16 + 0xF10
00030885: call R17 with noreturn

000388fe: sub pthread_mutex_unlock(pthread_mutex_unlock_result)
00038b55: pthread_mutex_unlock_result :: out u32 = low:32[R0]

0001ed42:
0003088a: R16 := 0x27000
00030892: R17 := mem[R16 + 0xF18, el]:u64
00030899: R16 := R16 + 0xF18
0003089e: call R17 with noreturn

000388ff: sub pthread_self(pthread_self_result)
00038b56: pthread_self_result :: out u32 = low:32[R0]

00021722:
0003080d: R16 := 0x27000
00030815: R17 := mem[R16 + 0xEF0, el]:u64
0003081c: R16 := R16 + 0xEF0
00030821: call R17 with noreturn

00038900: sub random(random_result)
00038b57: random_result :: out u64 = R0

0001b248:
0003038f: R16 := 0x27000
00030397: R17 := mem[R16 + 0xD80, el]:u64
0003039e: R16 := R16 + 0xD80
000303a3: call R17 with noreturn

00038901: sub read(read_fd, read_buf, read_nbytes, read_result)
00038b58: read_fd :: in u32 = low:32[R0]
00038b59: read_buf :: in out u64 = R1
00038b5a: read_nbytes :: in u64 = R2
00038b5b: read_result :: out u64 = R0

00016027:
0003072c: R16 := 0x27000
00030734: R17 := mem[R16 + 0xEA8, el]:u64
0003073b: R16 := R16 + 0xEA8
00030740: call R17 with noreturn

00038902: sub realloc(realloc_ptr, realloc_size, realloc_result)
00038b5c: realloc_ptr :: in out u64 = R0
00038b5d: realloc_size :: in u64 = R1
00038b5e: realloc_result :: out u64 = R0

00015f5e:
000303f3: R16 := 0x27000
000303fb: R17 := mem[R16 + 0xDA0, el]:u64
00030402: R16 := R16 + 0xDA0
00030407: call R17 with noreturn

00038903: sub recv(recv_fd, recv_buf, recv_n, recv_flags, recv_result)
00038b5f: recv_fd :: in u32 = low:32[R0]
00038b60: recv_buf :: in out u64 = R1
00038b61: recv_n :: in u64 = R2
00038b62: recv_flags :: in u32 = low:32[R3]
00038b63: recv_result :: out u64 = R0

00014990:
00030489: R16 := 0x27000
00030491: R17 := mem[R16 + 0xDD0, el]:u64
00030498: R16 := R16 + 0xDD0
0003049d: call R17 with noreturn

00038904: sub register_tm_clones(register_tm_clones_result)
00038b64: register_tm_clones_result :: out u32 = low:32[R0]

0002e80b:
0002e80f: R0 := 0x28000
0002e816: R0 := R0 + 0x498
0002e81c: R1 := 0x28000
0002e823: R1 := R1 + 0x498
0002e82b: R1 := R1 - R0
0002e832: R2 := R1 >> 0x3F
0002e83a: R1 := R2 + (R1 ~>> 3)
0002e842: #17393 := ~(R1 ~>> 1) + 1
0002e846: NF := 63:63[#17393]
0002e849: VF := ~63:63[~(R1 ~>> 1)] & 63:63[#17393]
0002e84c: ZF := #17393 = 0
0002e84f: CF := 63:63[~(R1 ~>> 1)] & ~63:63[#17393]
0002e858: R1 := R1 >> 1
0002e864: #17396 := ZF
0002e85e: when #17396 goto %0002e85c
00038906: goto %0002e910

0002e910:
0002e914: R2 := 0x27000
0002e91c: R2 := mem[R2 + 0xFE8, el]:u64
0002e927: #17402 := R2 = 0
0002e921: when #17402 goto %0002e85c
00038905: goto %0002e92a

0002e85c:
0002e869: call R30 with noreturn

0002e92a:
0002e930: R16 := R2
0002e935: call R16 with noreturn

00038907: sub reset_rr_data(reset_rr_data_result)
00038b65: reset_rr_data_result :: out u32 = low:32[R0]

000134de:
000134e6: mem := mem with [R31 - 0x30, el]:u64 <- R29
000134ea: mem := mem with [R31 - 0x28, el]:u64 <- R30
000134ed: R31 := R31 - 0x30
000134f4: R29 := R31
000134fd: mem := mem with [R31, el]:u64 <- R31 + 0x20
00013501: mem := mem with [R31, el]:u64 <- R31 + 0x28
00013509: R19 := R0
00013515: #4695 := R0 = 0
0001350f: when #4695 goto %0001350d
00038914: goto %00013c70

00013c70:
00013c74: R0 := 0x11000
00013c7c: mem := mem with [R19, el]:u32 <- 0
00013c84: R20 := mem[R19 + 8, el]:u64
00013c8c: mem := mem with [R19 + 0x20, el]:u32 <- 0
00013c9c: #4866 := R20 = 0
00013c96: when #4866 goto %00013c94
00038913: goto %00013d6d

00013d6d:
00013d73: mem := mem with [R31 + 0x20, el]:u64 <- R21
00038912: goto %00013d77

00013d77:
00013d7d: R21 := R20
00013d85: R20 := mem[R20 + 0x18, el]:u64
00013d8d: R0 := mem[R21, el]:u64
00013d92: R30 := 0x53A0
00013d94: call @free with return %00013d96

00013d96:
00013d9c: R0 := mem[R21 + 8, el]:u64
00013da1: R30 := 0x53A8
00013da3: call @free with return %00013da5

00013da5:
00013dab: R0 := R21
00013db0: R30 := 0x53B0
00013db2: call @free with return %00013db4

00013db4:
00013dbd: #4882 := ~R20 = 0
00013db7: when #4882 goto %00013d77
00038911: goto %00013dc0

00013dc0:
00013dc6: R21 := mem[R31 + 0x20, el]:u64
00038910: goto %00013c94

00013c94:
00013ca4: R0 := mem[R19 + 0x28, el]:u64
00013cb0: #4867 := R0 = 0
00013caa: when #4867 goto %00013ca8
0003890f: goto %00013d66

00013d66:
00013d69: R30 := 0x53C4
00013d6b: call @free with return %00013ca8

00013ca8:
00013cb8: R0 := mem[R19 + 0x30, el]:u64
00013cc4: #4868 := R0 = 0
00013cbe: when #4868 goto %00013cbc
0003890e: goto %00013d5f

00013d5f:
00013d62: R30 := 0x53D0
00013d64: call @free with return %00013cbc

00013cbc:
00013ccc: R0 := mem[R19 + 0x38, el]:u64
00013cd8: #4869 := R0 = 0
00013cd2: when #4869 goto %00013cd0
0003890d: goto %00013d58

00013d58:
00013d5b: R30 := 0x53DC
00013d5d: call @free with return %00013cd0

00013cd0:
00013ce0: R0 := mem[R19 + 0x40, el]:u64
00013cec: #4870 := R0 = 0
00013ce6: when #4870 goto %00013ce4
0003890c: goto %00013d51

00013d51:
00013d54: R30 := 0x53E8
00013d56: call @free with return %00013ce4

00013ce4:
00013cf4: R0 := mem[R19 + 0x48, el]:u64
00013d00: #4871 := R0 = 0
00013cfa: when #4871 goto %00013cf8
0003890b: goto %00013d4a

00013d4a:
00013d4d: R30 := 0x53F4
00013d4f: call @free with return %00013cf8

00013cf8:
00013d08: R0 := mem[R19 + 0x50, el]:u64
00013d14: #4872 := R0 = 0
00013d0e: when #4872 goto %00013d0c
0003890a: goto %00013d43

00013d43:
00013d46: R30 := 0x5400
00013d48: call @free with return %00013d0c

00013d0c:
00013d1c: R0 := mem[R19 + 0x58, el]:u64
00013d28: #4873 := R0 = 0
00013d22: when #4873 goto %00013d20
00038909: goto %00013d3c

00013d3c:
00013d3f: R30 := 0x540C
00013d41: call @free with return %00013d20

00013d20:
00013d32: mem := mem with [R19 + 8, el]:u64 <- 0
00038908: goto %0001350d

0001350d:
0001351d: R0 := R19
00013526: R19 := mem[R31 + 0x10, el]:u64
0001352a: R20 := mem[R31 + 0x18, el]:u64
00013534: R29 := mem[R31, el]:u64
00013538: R30 := mem[R31 + 8, el]:u64
0001353b: R31 := R31 + 0x30
00013540: call R30 with noreturn

00038915: sub scanmem(scanmem_result)
00038b66: scanmem_result :: out u32 = low:32[R0]

0000fabb:
0000fac3: mem := mem with [R31 - 0x30, el]:u64 <- R29
0000fac7: mem := mem with [R31 - 0x28, el]:u64 <- R30
0000faca: R31 := R31 - 0x30
0000fad1: R29 := R31
0000fada: mem := mem with [R31, el]:u64 <- R31 + 0x20
0000fade: mem := mem with [R31, el]:u64 <- R31 + 0x28
0000fae6: R19 := R0
0000faee: mem := mem with [R31 + 0x20, el]:u64 <- R21
0000faf7: R21 := 31:0[R1]
0000fafc: R30 := 0x5B94
0000fafe: call @strlen with return %0000fb00

0000fb00:
0000fb0a: #242 := ~~0:0[R0]
0000fb04: when #242 goto %0000fb02
0003891a: goto %0002a9fc

0000fb02:
0000fb10: R0 := 0
0000fb19: R19 := mem[R31 + 0x10, el]:u64
0000fb1d: R20 := mem[R31 + 0x18, el]:u64
0000fb25: R21 := mem[R31 + 0x20, el]:u64
0000fb2f: R29 := mem[R31, el]:u64
0000fb33: R30 := mem[R31 + 8, el]:u64
0000fb36: R31 := R31 + 0x30
0000fb3b: call R30 with noreturn

0002a9fc:
0002aa01: R20 := R0 >> 1
0002aa07: R1 := 1
0002aa0f: R0 := extend:64[31:0[R20]] + 1
0002aa16: R0 := extend:64[31:0[R0]]
0002aa1b: R30 := 0x5BAC
0002aa1d: call @calloc with return %0002aa1f

0002aa1f:
0002aa24: #15993 := extend:64[31:0[R20]]
0002aa28: NF := 63:63[#15993]
0002aa2b: VF := 31:31[R20] & ~63:63[#15993]
0002aa2e: ZF := #15993 = 0
0002aa31: CF := 31:31[R20] | 31:31[R20] & ~63:63[#15993] | ~63:63[#15993]
0002aa41: #15995 := (NF <> VF | ZF) <> 0
0002aa3b: when #15995 goto %0000fb3d
00038919: goto %0002aa44

0000fb3d:
0000fb43: R7 := R0
0000fb4b: mem := mem with [R7] <- 0
0000fb50: goto %0000fb4e

0002aa44:
0002aa4a: R6 := extend:64[31:0[R20]] - 1
0002aa50: R5 := 0x28000
0002aa57: R5 := R5 + 0x10
0002aa5e: R1 := 7
0002aa65: R6 := R6 + 2
0002aa6d: R3 := R19
0002aa74: R5 := R5 + 0x20
0002aa7b: R8 := R0 - 1
0002aa84: R21 := 31:0[R1] - 31:0[R21]
0002aa8a: R2 := 1
0002aa8f: goto %0002aa8d

0002aa8d:
0002aa97: R1 := pad:64[mem[R3]]
0002aaa0: R7 := 31:0[R2]
0002aaa9: R4 := pad:64[mem[R3 + 1]]
0002aab0: R3 := R3 + 2
0002aabb: #16005 := extend:64[31:0[R1]]
0002aabf: NF := 63:63[#16005]
0002aac2: VF := 31:31[R1] & ~63:63[#16005]
0002aac5: ZF := #16005 = 0
0002aac8: CF := 31:31[R1] | 31:31[R1] & ~63:63[#16005] | ~63:63[#16005]
0002aaf2: #16007 := NF = VF
0002aaf3: goto %0002aaea

0002aaea:
0002aaec: when #16007 goto %0002aad2
0002aaed: goto %0002aade

0002aade:
0002aadf: NF := 0
0002aae2: ZF := 0
0002aae5: CF := 0
0002aae8: VF := 1
0002aaef: goto %0002aaeb

0002aad2:
0002aad3: NF := 63:63[extend:64[31:0[R4]] + 0]
0002aad6: VF := 31:31[R4] & ~63:63[extend:64[31:0[R4]] + 0]
0002aad9: ZF := extend:64[31:0[R4]] + 0 = 0
0002aadc: CF := 31:31[R4] | ~63:63[extend:64[31:0[R4]] + 0] | 31:31[R4] &
          ~63:63[extend:64[31:0[R4]] + 0]
0002aaee: goto %0002aaeb

0002aaeb:
0002ab01: #16010 := NF = VF
0002aafb: when #16010 goto %0002aaf9
00038918: goto %0002ab4b

0002ab4b:
0002ab4e: R30 := 0x5C20
0002ab50: call @free with return %0002ab52

0002ab52:
0002ab56: R0 := 0
0002ab5f: R19 := mem[R31 + 0x10, el]:u64
0002ab63: R20 := mem[R31 + 0x18, el]:u64
0002ab6b: R21 := mem[R31 + 0x20, el]:u64
0002ab75: R29 := mem[R31, el]:u64
0002ab79: R30 := mem[R31 + 8, el]:u64
0002ab7c: R31 := R31 + 0x30
0002ab81: call R30 with noreturn

0002aaf9:
0002ab0a: R1 := 31:0[R4] + (31:0[R1] << 4)
0002ab13: R1 := 31:0[R1] ^ 31:0[R21]
0002ab1c: R2 := R2 + 1
0002ab24: #16020 := 1 + ~R2 + R6
0002ab28: NF := 63:63[#16020]
0002ab2b: VF := 63:63[R6] & 63:63[~R2] & ~63:63[#16020] | ~63:63[R6] &
          ~63:63[~R2] & 63:63[#16020]
0002ab2e: ZF := #16020 = 0
0002ab31: CF := 63:63[R6] & 63:63[~R2] | 63:63[~R2] & ~63:63[#16020] |
          63:63[R6] & ~63:63[#16020]
0002ab3f: #16022 := ZF
0002ab39: when #16022 goto %0002ab37
00038917: goto %0002aa8d

0002ab37:
0002ab49: mem := mem with [R7] <- 0
00038916: goto %0000fb4e

0000fb4e:
0000fb58: R19 := mem[R31 + 0x10, el]:u64
0000fb5c: R20 := mem[R31 + 0x18, el]:u64
0000fb64: R21 := mem[R31 + 0x20, el]:u64
0000fb6e: R29 := mem[R31, el]:u64
0000fb72: R30 := mem[R31 + 8, el]:u64
0000fb75: R31 := R31 + 0x30
0000fb7a: call R30 with noreturn

0003891b: sub scanner_hook(scanner_hook_result)
00038b67: scanner_hook_result :: out u32 = low:32[R0]

000228cf:
000228d4: R31 := R31 - 0x100
000228dd: mem := mem with [R31, el]:u64 <- R31 + 0x20
000228e1: mem := mem with [R31, el]:u64 <- R31 + 0x28
000228e8: R29 := R31 + 0x10
000228f1: R6 := pad:64[mem[R0, el]:u32]
000228fa: mem := mem with [R31, el]:u64 <- R31 + 0x40
000228fe: mem := mem with [R31, el]:u64 <- R31 + 0x48
00022904: R19 := 0x27000
0002290c: R7 := mem[R19 + 0xFB8, el]:u64
00022915: mem := mem with [R31, el]:u64 <- R31 + 0xC0
00022919: mem := mem with [R31, el]:u64 <- R31 + 0xC8
00022921: R8 := mem[R7, el]:u64
00022929: mem := mem with [R31 + 0xF8, el]:u64 <- R8
0002292f: R8 := 0
00022937: mem := mem with [R31 + 0x78, el]:u64 <- R2
0002293f: mem := mem with [R31 + 0xB0, el]:u32 <- 31:0[R3]
0002294b: #12866 := 31:0[R6] = 0
00022945: when #12866 goto %00022943
0003896a: goto %0002447a

0002447a:
00024481: R2 := pad:64[mem[R1 + 0x10, el]:u32]
00024489: R20 := R1
00024490: #13540 := 0xFFFFFFFFFFFFFF38 + extend:64[31:0[R2]]
00024494: NF := 63:63[#13540]
00024497: VF := 31:31[R2] & ~63:63[#13540]
0002449a: ZF := #13540 = 0
0002449d: CF := 31:31[R2] | 31:31[R2] & ~63:63[#13540] | ~63:63[#13540]
000244ab: #13542 := ZF
000244a5: when #13542 goto %00024252
00038969: goto %00022943

00024252:
00024259: mem := mem with [R31, el]:u64 <- R31 + 0x60
0002425d: mem := mem with [R31, el]:u64 <- R31 + 0x68
00024265: R21 := R0
0002426d: R22 := R4
00024276: mem := mem with [R31, el]:u64 <- R31 + 0x80
0002427a: mem := mem with [R31, el]:u64 <- R31 + 0x88
00024282: R23 := R5
00024287: R30 := 0xF7A4
00024289: call @http_has_body with return %0002428b

0002428b:
00024297: #13501 := ZF
00024291: when #13501 goto %0002428f
00038968: goto %000242c4

0002428f:
0002429f: R0 := mem[R20 + 8, el]:u64
000242a5: R2 := 0x12000
000242ab: R1 := 0x12000
000242b2: R2 := R2 + 0x968
000242b9: R1 := R1 + 0x938
000242be: R30 := 0xF7D0
000242c0: call @hlist_subcmp with return %000242c2

000242c2:
000242cc: #13502 := ~31:0[R0] = 0
000242c6: when #13502 goto %000242c4
00038967: goto %000242ec

000242ec:
000242f2: R0 := mem[R20 + 8, el]:u64
000242f8: R2 := 0x12000
000242fe: R1 := 0x12000
00024305: R2 := R2 + 0x950
0002430c: R1 := R1 + 0xE40
00024311: R30 := 0xF7EC
00024313: call @hlist_subcmp with return %00024315

00024315:
0002431e: #13505 := 31:0[R0] = 0
00024318: when #13505 goto %000242c4
00038966: goto %00024321

00024321:
00024327: R0 := mem[R21 + 8, el]:u64
0002432d: R1 := 0x13000
00024334: R1 := R1 + 0x6E8
0002433d: mem := mem with [R31, el]:u64 <- R31 + 0xA0
00024341: mem := mem with [R31, el]:u64 <- R31 + 0xA8
00024346: R30 := 0xF804
00024348: call @hlist_get with return %0002434a

0002434a:
00024353: #13507 := R0 = 0
0002434d: when #13507 goto %00022ef7
00038965: goto %00024356

00024356:
00024359: R30 := 0xF80C
0002435b: call @strdup with return %0002435d

0002435d:
00024361: R28 := 0x13000
00024366: R30 := 0xF814
00024368: call @lowercase with return %0002436a

0002436a:
00024370: R26 := R0
00024376: R1 := 0x27000
0002437c: R0 := 0x27000
00024383: R28 := R28 + 0x6F8
0002438b: R1 := mem[R1 + 0xFF8, el]:u64
00024393: R27 := mem[R0 + 0xF78, el]:u64
0002439b: R25 := mem[R1, el]:u64
000243a7: #13511 := ~R25 = 0
000243a1: when #13511 goto %0002439f
00038964: goto %00024476

0002439f:
000243af: R0 := mem[R25 + 8, el]:u64
000243b4: R30 := 0xF864
000243b6: call @strdup with return %000243b8

000243b8:
000243bb: R30 := 0xF868
000243bd: call @lowercase with return %000243bf

000243bf:
000243c5: R24 := R0
000243ce: R1 := pad:64[mem[R27, el]:u32]
000243da: #13515 := 31:0[R1] = 0
000243d4: when #13515 goto %000243d2
00038963: goto %0002444c

0002444c:
00024452: R3 := R0
0002445a: R2 := R26
00024462: R1 := R28
00024469: R0 := 1
0002446e: R30 := 0xF888
00024470: call @__printf_chk with return %00024472

00024472:
00024474: goto %000243d2

000243d2:
000243e2: R1 := R26
000243ea: R0 := R24
000243f1: R2 := 0
000243f6: R30 := 0xF848
000243f8: call @fnmatch with return %000243fa

000243fa:
00024404: #13522 := 31:0[R0] = 0
000243fe: when #13522 goto %000243fc
00038962: goto %00024429

000243fc:
0002440a: R0 := 0x27000
00024412: R0 := mem[R0 + 0xF78, el]:u64
0002441b: R0 := pad:64[mem[R0, el]:u32]
00024426: #13523 := ~31:0[R0] = 0
00024420: when #13523 goto %00022eb4
00038961: goto %00022ed0

00022eb4:
00022eb8: R1 := 0x13000
00022ebf: R0 := 1
00022ec6: R1 := R1 + 0x728
00022ecb: R30 := 0x1007C
00022ecd: call @__printf_chk with return %00022ecf

00022ecf:
00022ed2: goto %00022ed0

00022ed0:
00022ed9: R0 := R24
00022edf: R23 := 0
00022ee4: R30 := 0xF8A8
00022ee6: call @free with return %00022ee8

00024429:
0002442f: R0 := R24
00024434: R30 := 0xF854
00024436: call @free with return %00024438

00024438:
0002443e: R25 := mem[R25 + 0x10, el]:u64
00024449: #13527 := R25 = 0
00024443: when #13527 goto %00022ee8
00038960: goto %0002439f

00024476:
00024478: goto %00022ee8

00022ee8:
00022eee: R0 := R26
00022ef3: R30 := 0xF8B0
00022ef5: call @free with return %00022ef7

00022ef7:
00022efb: R0 := 0x1000
00022f00: R30 := 0xF8B8
00022f02: call @new with return %00022f04

00022f04:
00022f08: R1 := 0x27000
00022f0f: R24 := 0
00022f15: R28 := 0x13000
00022f1c: R28 := R28 + 0x748
00022f24: R27 := mem[R1 + 0xF78, el]:u64
00022f2c: R25 := R0
00022f33: R26 := 0xFFF
00022f3b: mem := mem with [R31 + 0x80, el]:u64 <- R21
00022f44: R21 := 31:0[R24]
00022f4c: R24 := R23
00022f54: R23 := R20
00022f5c: R20 := R28
00022f64: R28 := R27
00022f69: goto %00022f67

00022f67:
00022f71: R0 := pad:64[mem[R22, el]:u32]
00022f7a: R2 := 31:0[R26] - 31:0[R21]
00022f83: R2 := extend:64[31:0[R2]]
00022f88: R30 := 0xF910
00022f8a: call @read with return %00022f8c

00022f8c:
00022f92: R27 := R0
00022f9b: R1 := pad:64[mem[R28, el]:u32]
00022fa7: #13045 := ~31:0[R1] = 0
00022fa1: when #13045 goto %00022f9f
0003895f: goto %00022fd9

00022f9f:
00022fae: R0 := 0x1000
00022fb7: R2 := 31:0[R27]
00022fc0: R3 := 31:0[R0] - 31:0[R21]
00022fc8: R1 := R20
00022fcf: R0 := 1
00022fd4: R30 := 0xFC3C
00022fd6: call @__printf_chk with return %00022fd8

00022fd8:
00022fdb: goto %00022fd9

00022fd9:
00022fe1: #13055 := extend:64[31:0[R27]]
00022fe5: NF := 63:63[#13055]
00022fe8: VF := 31:31[R27] & ~63:63[#13055]
00022feb: ZF := #13055 = 0
00022fee: CF := 31:31[R27] | 31:31[R27] & ~63:63[#13055] | ~63:63[#13055]
00022fff: #13057 := (NF = VF & ~ZF) <> 0
00022ff9: when #13057 goto %00022ff7
0003895e: goto %00023710

00023710:
00023716: R20 := R23
0002371c: R1 := 0x13000
00023724: R23 := R24
0002372c: R0 := R25
00023735: R24 := 31:0[R21]
0002373c: R1 := R1 + 0x768
00023744: R21 := mem[R31 + 0x80, el]:u64
00023749: R30 := 0xF944
0002374b: call @strstr with return %0002374d

0002374d:
00023757: #13231 := R0 = 0
00023751: when #13231 goto %0002374f
0003895d: goto %00023760

00023760:
00023764: R1 := 0x13000
0002376c: R0 := R25
00023773: R1 := R1 + 0x790
00023778: R30 := 0xF958
0002377a: call @strstr with return %0002377c

0002377c:
00023785: #13235 := R0 = 0
0002377f: when #13235 goto %0002374f
0003895c: goto %00023788

00023788:
0002378d: R1 := 0x22
00023792: R30 := 0xF964
00023794: call @strchr with return %00023796

00023796:
0002379f: #13236 := R0 = 0
00023799: when #13236 goto %0002374f
0003895b: goto %00023673

0002374f:
0002375e: R28 := 1
0003895a: goto %00022a3f

00022ff7:
00023008: R21 := 31:0[R21] + 31:0[R27]
0002300f: #13061 := 0xFFFFFFFFFFFFF002 + extend:64[31:0[R21]]
00023013: NF := 63:63[#13061]
00023016: VF := 31:31[R21] & ~63:63[#13061]
00023019: ZF := #13061 = 0
0002301c: CF := 31:31[R21] | 31:31[R21] & ~63:63[#13061] | ~63:63[#13061]
0002302d: #13063 := (NF = VF & ~ZF) <> 0
00023027: when #13063 goto %00023025
00038959: goto %00022f67

00023025:
00023035: R20 := R23
0002303b: R1 := 0x13000
00023043: R23 := R24
0002304b: R0 := R25
00023054: R24 := 31:0[R21]
0002305b: R1 := R1 + 0x768
00023063: R21 := mem[R31 + 0x80, el]:u64
00023068: R30 := 0x102C8
0002306a: call @strstr with return %0002306c

0002306c:
00023076: #13076 := R0 = 0
00023070: when #13076 goto %0002306e
00038958: goto %0002363b

0002363b:
0002363f: R1 := 0x13000
00023647: R0 := R25
0002364e: R1 := R1 + 0x790
00023653: R30 := 0x102DC
00023655: call @strstr with return %00023657

00023657:
00023660: #13201 := R0 = 0
0002365a: when #13201 goto %0002306e
00038957: goto %00023663

00023663:
00023668: R1 := 0x22
0002366d: R30 := 0x102E8
0002366f: call @strchr with return %00023671

00023671:
0002367b: #13202 := ~R0 = 0
00023675: when #13202 goto %00023673
00038956: goto %0002306e

0002306e:
0002307c: R0 := 0x27000
00023084: R0 := mem[R0 + 0xF78, el]:u64
0002308d: R0 := pad:64[mem[R0, el]:u32]
00023092: goto %00023090

00023673:
00023682: R26 := R0 + 1
0002368a: R0 := R26
0002368f: R30 := 0xF974
00023691: call @strlen with return %00023693

00023693:
00023697: R1 := 0
000236a3: #13206 := ~R0 = 0
0002369d: when #13206 goto %0002369b
00038955: goto %0002370c

0002369b:
000236ac: R3 := high:32[R3].pad:64[mem[R26 + R1]]
000236b5: R2 := 31:0[R1]
000236bc: #13210 := 0xFFFFFFFFFFFFFFDE + extend:64[31:0[R3]]
000236c0: NF := 63:63[#13210]
000236c3: VF := 31:31[R3] & ~63:63[#13210]
000236c6: ZF := #13210 = 0
000236c9: CF := 31:31[R3] | 31:31[R3] & ~63:63[#13210] | ~63:63[#13210]
000236d8: #13212 := ~ZF <> 0
000236d2: when #13212 goto %000236d0
00038954: goto %0002316a

000236d0:
000236e0: R2 := extend:64[31:0[R1]] + 1
000236e7: R1 := R1 + 1
000236ef: #13216 := 1 + ~R1 + R0
000236f3: NF := 63:63[#13216]
000236f6: VF := 63:63[R0] & 63:63[~R1] & ~63:63[#13216] | ~63:63[R0] &
          ~63:63[~R1] & 63:63[#13216]
000236f9: ZF := #13216 = 0
000236fc: CF := 63:63[R0] & 63:63[~R1] | 63:63[~R1] & ~63:63[#13216] |
          63:63[R0] & ~63:63[#13216]
00023709: #13218 := ZF
00023703: when #13218 goto %00023146
00038953: goto %0002369b

00023146:
00038952: goto %00023148

0002370c:
0002370e: goto %000232a0

000232a0:
000232a6: R0 := R26
000232ad: R2 := 0
000232b1: goto %00023148

00023148:
0002314f: R0 := pad:64[mem[R0]]
00023156: #13089 := 0xFFFFFFFFFFFFFFDE + extend:64[31:0[R0]]
0002315a: NF := 63:63[#13089]
0002315d: VF := 31:31[R0] & ~63:63[#13089]
00023160: ZF := #13089 = 0
00023163: CF := 31:31[R0] | 31:31[R0] & ~63:63[#13089] | ~63:63[#13089]
00023172: #13091 := ZF
0002316c: when #13091 goto %0002316a
00038951: goto %000232b3

000232b3:
000232b7: R0 := 0x27000
000232bf: R0 := mem[R0 + 0xF78, el]:u64
000232c8: R0 := pad:64[mem[R0, el]:u32]
000232d3: #13118 := ~31:0[R0] = 0
000232cd: when #13118 goto %00022e8c
00038950: goto %000232d6

00022e8c:
00022e90: R1 := 0x13000
00022e97: R0 := 1
00022e9e: R1 := R1 + 0xA38
00022ea7: R28 := 31:0[R0]
00022eac: R30 := 0x10068
00022eae: call @__printf_chk with return %00022eb0

00022eb0:
00022eb2: goto %00022a3f

000232d6:
000232db: R28 := 1
000232e6: #13119 := ~31:0[R24] = 0
000232e0: when #13119 goto %00023095
0003894f: goto %000232e9

000232e9:
000232eb: goto %00022a67

0002316a:
00023179: R1 := 0
00023181: R0 := R26
00023186: R30 := 0xF9AC
00023188: call @substr with return %0002318a

0002318a:
00023190: mem := mem with [R31 + 0xD8, el]:u64 <- R0
00023196: R1 := 0x27000
0002319e: R1 := mem[R1 + 0xF78, el]:u64
000231a7: R0 := pad:64[mem[R1, el]:u32]
000231b3: #13096 := ~31:0[R0] = 0
000231ad: when #13096 goto %000231ab
0003894e: goto %000231d9

000231ab:
000231bb: R2 := mem[R31 + 0xD8, el]:u64
000231c1: R1 := 0x13000
000231c8: R0 := 1
000231cf: R1 := R1 + 0x7A8
000231d4: R30 := 0x100A8
000231d6: call @__printf_chk with return %000231d8

000231d8:
000231db: goto %000231d9

000231d9:
000231e1: R26 := 0x1000
000231e7: R0 := 0x1000
000231ef: mem := mem with [R31 + 0xE8, el]:u32 <- 31:0[R26]
000231f4: R30 := 0xF9D0
000231f6: call @new with return %000231f8

000231f8:
000231fc: R1 := 0x27000
00023202: R2 := 0x13000
00023209: R2 := R2 + 0x7C8
00023212: mem := mem with [R31, el]:u64 <- R31 + 0x130
00023216: mem := mem with [R31, el]:u64 <- R31 + 0x138
0002321d: R2 := R31 + 0xF0
00023225: R1 := mem[R1 + 0xF78, el]:u64
0002322d: mem := mem with [R31 + 0xB8, el]:u64 <- R1
00023233: R1 := 0x13000
0002323a: R1 := R1 + 0x808
00023242: mem := mem with [R31 + 0xC0, el]:u64 <- R1
00023249: R1 := R31 + 0xE8
0002324f: R28 := 0x1000
00023258: mem := mem with [R31, el]:u64 <- R31 + 0x110
0002325c: mem := mem with [R31, el]:u64 <- R31 + 0x118
00023264: R23 := R2
0002326c: R22 := R1
00023274: mem := mem with [R31 + 0xA8, el]:u64 <- R20
0002327c: mem := mem with [R31 + 0xB4, el]:u32 <- 0
00023285: mem := mem with [R31, el]:u64 <- R31 + 0x190
00023289: mem := mem with [R31, el]:u64 <- R31 + 0x198
00023292: R21 := 31:0[R26]
0002329a: mem := mem with [R31 + 0xF0, el]:u64 <- R0
0002329e: goto %00022b5f

00022b5f:
00022b65: R0 := mem[R31 + 0x88, el]:u64
00022b6d: R2 := R22
00022b75: R1 := R23
00022b7e: R0 := pad:64[mem[R0, el]:u32]
00022b83: R30 := 0xFBB0
00022b85: call @so_recvln with return %00022b87

00022b87:
00022b8e: R20 := 31:0[R0]
00022b96: R26 := mem[R31 + 0xF0, el]:u64
00022b9e: R0 := R26
00022ba3: R30 := 0xFBC0
00022ba5: call @strlen with return %00022ba7

00022ba7:
00022bad: R27 := R0
00022bb7: #12922 := 1 + ~R28 + R0
00022bbb: NF := 63:63[#12922]
00022bbe: VF := 63:63[R0] & 63:63[~R28] & ~63:63[#12922] | ~63:63[R0] &
          ~63:63[~R28] & 63:63[#12922]
00022bc1: ZF := #12922 = 0
00022bc4: CF := 63:63[R0] & 63:63[~R28] | 63:63[~R28] & ~63:63[#12922] |
          63:63[R0] & ~63:63[#12922]
00022bd3: #12924 := NF <> VF
00022bcd: when #12924 goto %00022bcb
0003894d: goto %00024177

00024177:
0002417d: R21 := 31:0[R21] << 0x21
00024185: R0 := R25
0002418c: R28 := extend:64[31:0[R21]]
00024194: R1 := R28
00024199: R30 := 0xFBE4
0002419b: call @realloc with return %0002419d

0002419d:
000241a6: #13474 := R0 = 0
000241a0: when #13474 goto %00024160
0003894c: goto %000241a9

000241a9:
000241af: R26 := mem[R31 + 0xF0, el]:u64
000241b7: R25 := R0
0003894b: goto %00022bcb

00022bcb:
00022bdb: R1 := R26
00022be4: R24 := 31:0[R24] + 31:0[R27]
00022bec: R0 := R25
00022bf1: R30 := 0xFC00
00022bf3: call @strcat with return %00022bf5

00022bf5:
00022bff: #12934 := ~31:31[R20]
00022bf9: when #12934 goto %00022bf7
0003894a: goto %00024160

00024160:
00024166: R20 := mem[R31 + 0xA8, el]:u64
0002416d: R28 := 1
00024175: R27 := mem[R31 + 0xF0, el]:u64
00038949: goto %00022a1d

00022bf7:
00022c07: R1 := mem[R31 + 0xA0, el]:u64
00022c0f: R27 := mem[R31 + 0xF0, el]:u64
00022c17: R0 := R27
00022c1c: R30 := 0xFA34
00022c1e: call @strstr with return %00022c20

00022c20:
00022c26: R26 := R0
00022c31: #12941 := R0 = 0
00022c2b: when #12941 goto %00022aab
00038948: goto %00022c34

00022c34:
00022c37: R30 := 0xFA40
00022c39: call @__ctype_b_loc with return %00022c3b

00022c3b:
00022c42: R1 := pad:64[mem[R26 + 0xB]]
00022c4a: R0 := mem[R0, el]:u64
00022c57: #12942 := ~11:11[R0]
00022c51: when #12942 goto %00022aab
00038947: goto %00022c5a

00022aab:
00022ab1: R0 := R27
00022ab7: R1 := 0x13000
00022abe: R1 := R1 + 0x7D8
00022ac3: R30 := 0xFCEC
00022ac5: call @strstr with return %00022ac7

00022ac7:
00022acd: R26 := R0
00022ad9: #12896 := R0 = 0
00022ad3: when #12896 goto %00022ad1
00038946: goto %000241b9

000241b9:
000241bc: R30 := 0xFCF8
000241be: call @__ctype_b_loc with return %000241c0

000241c0:
000241c7: R1 := pad:64[mem[R26 + 0x11]]
000241cf: R0 := mem[R0, el]:u64
000241dc: #13478 := ~11:11[R0]
000241d6: when #13478 goto %00022ad1
00038945: goto %000241df

00022ad1:
00022ae0: R0 := 1
00022ae8: mem := mem with [R31 + 0x80, el]:u32 <- 0
00022aed: goto %00022aeb

000241df:
000241e4: R0 := 1
000241ec: mem := mem with [R31 + 0x80, el]:u32 <- 31:0[R0]
000241f0: goto %00022c62

00022c5a:
00022c60: mem := mem with [R31 + 0x80, el]:u32 <- 0
00038944: goto %00022c62

00022c62:
00022c68: R0 := mem[R31 + 0xB8, el]:u64
00022c71: R0 := pad:64[mem[R0, el]:u32]
00022c7d: #12944 := ~31:0[R0] = 0
00022c77: when #12944 goto %00022c75
00038943: goto %00022cab

00022c75:
00022c85: R2 := R27
00022c8b: R1 := 0x13000
00022c92: R0 := 1
00022c99: R1 := R1 + 0x7F0
00022c9e: R30 := 0xFF58
00022ca0: call @__printf_chk with return %00022ca2

00022ca2:
00022ca8: R27 := mem[R31 + 0xF0, el]:u64
00022cad: goto %00022cab

00022cab:
00022cb4: R1 := mem[R31 + 0xC0, el]:u64
00022cbc: R0 := R27
00022cc1: R30 := 0xFA6C
00022cc3: call @strstr with return %00022cc5

00022cc5:
00022ccf: #12951 := R0 = 0
00022cc9: when #12951 goto %00022cc7
00038942: goto %00023f9a

00022cc7:
00022cd8: R0 := pad:64[mem[R31 + 0xB4, el]:u32]
00022ce4: #12952 := ~31:0[R0] = 0
00022cde: when #12952 goto %00022cdc
00038941: goto %00023f5f

00023f5f:
00023f63: R0 := 0x27000
00023f6b: R22 := mem[R31 + 0x88, el]:u64
00023f73: R0 := mem[R0 + 0xF78, el]:u64
00023f7b: R20 := mem[R31 + 0xA8, el]:u64
00023f84: R0 := pad:64[mem[R0, el]:u32]
00023f8c: R21 := mem[R31 + 0xD0, el]:u64
00023f97: #13427 := ~31:0[R0] = 0
00023f91: when #13427 goto %00023ecd
00038940: goto %000229fd

00023ecd:
00023ed1: R1 := 0x13000
00023ed8: R0 := 1
00023edf: R1 := R1 + 0x898
00023ee4: R30 := 0x1021C
00023ee6: call @__printf_chk with return %00023ee8

00023ee8:
00023eee: R27 := mem[R31 + 0xF0, el]:u64
00023ef2: goto %000229fd

00023f9a:
00023f9f: R2 := 0xA
00023fa5: R1 := 0
00023fac: R0 := R0 + 0x10
00023fb1: R30 := 0xFA80
00023fb3: call @strtol with return %00023fb5

00023fb5:
00023fb9: R1 := 0x27000
00023fc1: R2 := R0
00023fc9: mem := mem with [R31 + 0x98, el]:u64 <- R2
00023fd1: R1 := mem[R1 + 0xF78, el]:u64
00023fda: R0 := pad:64[mem[R1, el]:u32]
00023fe6: #13432 := 31:0[R0] = 0
00023fe0: when #13432 goto %00023fde
0003893f: goto %00024112

00024112:
00024117: #13461 := R2
0002411b: NF := 63:63[#13461]
0002411e: VF := 63:63[R2] & ~63:63[#13461]
00024121: ZF := #13461 = 0
00024124: CF := 63:63[R2] | ~63:63[#13461] | 63:63[R2] & ~63:63[#13461]
00024133: #13463 := (NF <> VF | ZF) <> 0
0002412d: when #13463 goto %00023f20
0003893e: goto %00024136

00023f20:
00023f24: R1 := 0x13000
00023f2b: R0 := 1
00023f32: R1 := R1 + 0x858
00023f3a: R22 := mem[R31 + 0x88, el]:u64
00023f42: R20 := mem[R31 + 0xA8, el]:u64
00023f4a: R21 := mem[R31 + 0xD0, el]:u64
00023f4f: R30 := 0x10130
00023f51: call @__printf_chk with return %00023f53

00023f53:
00023f59: R27 := mem[R31 + 0xF0, el]:u64
00023f5d: goto %000229fd

00024136:
0002413c: R3 := mem[R31 + 0x90, el]:u64
00024142: R1 := 0x13000
00024149: R2 := R2 >> 0xA
00024150: R1 := R1 + 0x820
00024157: R0 := 1
0002415c: R30 := 0xFAB8
0002415e: call @__printf_chk with return %00023fde

00023fde:
00023fee: R0 := mem[R31 + 0x90, el]:u64
00023ffa: #13433 := R0 = 0
00023ff4: when #13433 goto %00023ff2
0003893d: goto %00024086

00024086:
0002408b: #13449 := 0xFFFFFFFFFFFFFFFF + R0
0002408f: NF := 63:63[#13449]
00024092: VF := 63:63[R0] & ~63:63[#13449]
00024095: ZF := #13449 = 0
00024098: CF := 63:63[R0] | ~63:63[#13449] | 63:63[R0] & ~63:63[#13449]
000240a5: #13451 := ZF
0002409f: when #13451 goto %00022b31
0003893c: goto %000240a8

000240a8:
000240ae: R1 := mem[R31 + 0x98, el]:u64
000240b5: #13452 := R1
000240b9: NF := 63:63[#13452]
000240bc: VF := 63:63[R1] & ~63:63[#13452]
000240bf: ZF := #13452 = 0
000240c2: CF := 63:63[R1] | ~63:63[#13452] | 63:63[R1] & ~63:63[#13452]
000240cb: R0 := R1 + 0x3FF
000240e2: #13454 := NF <> VF
000240e3: goto %000240da

000240da:
000240dc: when #13454 goto %000240d4
000240dd: goto %000240d7

000240d7:
000240d8: R0 := R1
000240df: goto %000240db

000240d4:
000240d5: R0 := R0
000240de: goto %000240db

000240db:
000240ec: R1 := mem[R31 + 0x90, el]:u64
000240f4: #13458 := 1 + ~(R0 ~>> 0xA) + R1
000240f8: NF := 63:63[#13458]
000240fb: VF := 63:63[R1] & 63:63[~(R0 ~>> 0xA)] & ~63:63[#13458] |
          ~63:63[R1] & ~63:63[~(R0 ~>> 0xA)] & 63:63[#13458]
000240fe: ZF := #13458 = 0
00024101: CF := 63:63[R1] & 63:63[~(R0 ~>> 0xA)] | 63:63[~(R0 ~>> 0xA)] &
          ~63:63[#13458] | 63:63[R1] & ~63:63[#13458]
0002410f: #13460 := NF <> VF
00024109: when #13460 goto %00022b31
0003893b: goto %00023ff2

00023ff2:
00024000: R0 := 0x32
00024005: R30 := 0xFAEC
00024007: call @new with return %00024009

00024009:
0002400f: R1 := mem[R31 + 0xD0, el]:u64
00024015: R4 := 0x13000
0002401c: R4 := R4 + 0x888
00024022: R3 := 0xFFFFFFFFFFFFFFFF
00024029: R2 := 1
00024031: R26 := R0
00024039: R5 := mem[R1 + 0x48, el]:u64
0002403f: R1 := 0x32
00024044: R30 := 0xFB10
00024046: call @__snprintf_chk with return %00024048

00024048:
0002404e: R0 := R26
00024053: R30 := 0xFB18
00024055: call @strlen with return %00024057

00024057:
0002405d: R2 := R0
00024066: R0 := pad:64[mem[R31 + 0xB0, el]:u32]
0002406e: R1 := R26
00024073: R30 := 0xFB28
00024075: call @write with return %00024077

00024077:
0002407d: R0 := R26
00024082: R30 := 0xFB30
00024084: call @free with return %00022cdc

00022cdc:
00022cec: R0 := mem[R31 + 0x98, el]:u64
00022cf3: #12953 := R0
00022cf7: NF := 63:63[#12953]
00022cfa: VF := 63:63[R0] & ~63:63[#12953]
00022cfd: ZF := #12953 = 0
00022d00: CF := 63:63[R0] | ~63:63[#12953] | 63:63[R0] & ~63:63[#12953]
00022d0a: R0 := mem[R31 + 0x90, el]:u64
00022d22: #12955 := ~ZF <> 0
00022d23: goto %00022d1a

00022d1a:
00022d1c: when #12955 goto %00022d13
00022d1d: goto %00022d17

00022d17:
00022d18: R26 := 1
00022d1f: goto %00022d1b

00022d13:
00022d14: R26 := 0
00022d1e: goto %00022d1b

00022d1b:
00022d2b: #12956 := R0
00022d2f: NF := 63:63[#12956]
00022d32: VF := 63:63[R0] & ~63:63[#12956]
00022d35: ZF := #12956 = 0
00022d38: CF := 63:63[R0] | ~63:63[#12956] | 63:63[R0] & ~63:63[#12956]
00022d43: R0 := pad:64[mem[R31 + 0x80, el]:u32]
00022d5b: #12958 := ~ZF <> 0
00022d5c: goto %00022d53

00022d53:
00022d55: when #12958 goto %00022d4c
00022d56: goto %00022d50

00022d50:
00022d51: R26 := 0
00022d58: goto %00022d54

00022d4c:
00022d4d: R26 := 31:0[R26]
00022d57: goto %00022d54

00022d54:
00022d69: #12959 := 31:0[R0] = 0
00022d63: when #12959 goto %00022d61
0003893a: goto %00023847

00022d61:
00022d6f: R0 := 0x32
00022d74: R30 := 0xFF68
00022d76: call @new with return %00022d78

00022d78:
00022d7e: R3 := mem[R31 + 0xF0, el]:u64
00022d86: R27 := R0
00022d8d: R2 := 0xA
00022d93: R1 := 0
00022d9a: R0 := R3 + 0xC
00022d9f: R30 := 0xFF80
00022da1: call @strtol with return %00022da3

00022da3:
00022da9: R5 := R0
00022db1: R6 := mem[R31 + 0x98, el]:u64
00022db7: R4 := 0x13000
00022dbe: R4 := R4 + 0x8D8
00022dc4: R3 := 0xFFFFFFFFFFFFFFFF
00022dcb: R2 := 1
00022dd1: R1 := 0x32
00022dd9: mem := mem with [R31 + 0xC8, el]:u64 <- R0
00022de1: R0 := R27
00022de6: R30 := 0xFFA8
00022de8: call @__snprintf_chk with return %00022dea

00022dea:
00022df0: R0 := R27
00022df5: R30 := 0xFFB0
00022df7: call @strlen with return %00022df9

00022df9:
00022dff: R2 := R0
00022e08: R0 := pad:64[mem[R31 + 0xB0, el]:u32]
00022e10: R1 := R27
00022e15: R30 := 0xFFC0
00022e17: call @write with return %00022e19

00022e19:
00022e1f: R0 := R27
00022e24: R30 := 0xFFC8
00022e26: call @free with return %00022e28

00022e28:
00022e32: #12982 := ~31:0[R26] = 0
00022e2c: when #12982 goto %00022e2a
00038939: goto %00023834

00023834:
00023839: R0 := 1
00023841: mem := mem with [R31 + 0xB4, el]:u32 <- 31:0[R0]
00023845: goto %00022aeb

00023847:
00023851: #13271 := 31:0[R26] = 0
0002384b: when #13271 goto %00023849
00038938: goto %00022e2a

00023849:
0002385a: R0 := pad:64[mem[R31 + 0x80, el]:u32]
00023862: mem := mem with [R31 + 0xB4, el]:u32 <- 31:0[R0]
0002386a: R22 := mem[R31 + 0x88, el]:u64
00023872: R20 := mem[R31 + 0xA8, el]:u64
0002387a: R21 := mem[R31 + 0xD0, el]:u64
00023882: R27 := mem[R31 + 0xF0, el]:u64
00023887: goto %00023885

00022e2a:
00022e3a: R0 := mem[R31 + 0x90, el]:u64
00022e41: #12983 := 0xFFFFFFFFFFFFFFFF + R0
00022e45: NF := 63:63[#12983]
00022e48: VF := 63:63[R0] & ~63:63[#12983]
00022e4b: ZF := #12983 = 0
00022e4e: CF := 63:63[R0] | ~63:63[#12983] | 63:63[R0] & ~63:63[#12983]
00022e5c: #12985 := ZF
00022e56: when #12985 goto %00022e54
00038937: goto %000237a2

00022e54:
00022e65: R0 := pad:64[mem[R31 + 0x80, el]:u32]
00022e6e: R1 := pad:64[mem[R31 + 0x90, el]:u32]
00022e76: R0 := 31:0[R0] ^ 1
00022e7e: mem := mem with [R31 + 0x98, el]:u64 <- 0
00022e86: mem := mem with [R31 + 0xB4, el]:u32 <- 31:0[R1]
00022e8a: goto %00022aeb

000237a2:
000237a8: R1 := mem[R31 + 0xC8, el]:u64
000237af: #13237 := R1
000237b3: NF := 63:63[#13237]
000237b6: VF := 63:63[R1] & ~63:63[#13237]
000237b9: ZF := #13237 = 0
000237bc: CF := 63:63[R1] | ~63:63[#13237] | 63:63[R1] & ~63:63[#13237]
000237c5: R0 := R1 + 0x3FF
000237dc: #13239 := NF <> VF
000237dd: goto %000237d4

000237d4:
000237d6: when #13239 goto %000237ce
000237d7: goto %000237d1

000237d1:
000237d2: R0 := R1
000237d9: goto %000237d5

000237ce:
000237cf: R0 := R0
000237d8: goto %000237d5

000237d5:
000237e6: R1 := mem[R31 + 0x90, el]:u64
000237ee: #13243 := 1 + ~(R0 ~>> 0xA) + R1
000237f2: NF := 63:63[#13243]
000237f5: VF := 63:63[R1] & 63:63[~(R0 ~>> 0xA)] & ~63:63[#13243] |
          ~63:63[R1] & ~63:63[~(R0 ~>> 0xA)] & 63:63[#13243]
000237f8: ZF := #13243 = 0
000237fb: CF := 63:63[R1] & 63:63[~(R0 ~>> 0xA)] | 63:63[~(R0 ~>> 0xA)] &
          ~63:63[#13243] | 63:63[R1] & ~63:63[#13243]
00023809: #13245 := NF <> VF
00023803: when #13245 goto %000229c5
00038936: goto %0002380c

0002380c:
00023813: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0002381a: R1 := 1
00023822: mem := mem with [R31 + 0x98, el]:u64 <- 0
0002382a: R0 := 31:0[R0] ^ 1
00023832: mem := mem with [R31 + 0xB4, el]:u32 <- 31:0[R1]
00038935: goto %00022aeb

00022aeb:
00022af3: #12898 := extend:64[31:0[R20]]
00022af7: NF := 63:63[#12898]
00022afa: VF := 31:31[R20] & ~63:63[#12898]
00022afd: ZF := #12898 = 0
00022b00: CF := 31:31[R20] | 31:31[R20] & ~63:63[#12898] | ~63:63[#12898]
00022b2b: #12900 := (NF = VF & ~ZF) <> 0
00022b2c: goto %00022b23

00022b23:
00022b25: when #12900 goto %00022b0b
00022b26: goto %00022b17

00022b17:
00022b18: NF := 0
00022b1b: ZF := 1
00022b1e: CF := 0
00022b21: VF := 0
00022b28: goto %00022b24

00022b0b:
00022b0c: NF := 63:63[extend:64[31:0[R0]] + 0]
00022b0f: VF := 31:31[R0] & ~63:63[extend:64[31:0[R0]] + 0]
00022b12: ZF := extend:64[31:0[R0]] + 0 = 0
00022b15: CF := 31:31[R0] | ~63:63[extend:64[31:0[R0]] + 0] | 31:31[R0] &
          ~63:63[extend:64[31:0[R0]] + 0]
00022b27: goto %00022b24

00022b24:
00022b39: #12903 := ZF
00022b33: when #12903 goto %00022b31
00038934: goto %00022b5f

00022b31:
00022b41: R22 := mem[R31 + 0x88, el]:u64
00022b49: R20 := mem[R31 + 0xA8, el]:u64
00022b51: R21 := mem[R31 + 0xD0, el]:u64
00022b59: R27 := mem[R31 + 0xF0, el]:u64
00022b5d: goto %000229fd

000242c4:
000242d5: R21 := mem[R31 + 0x30, el]:u64
000242d9: R22 := mem[R31 + 0x38, el]:u64
000242e2: R23 := mem[R31 + 0x40, el]:u64
000242e6: R24 := mem[R31 + 0x48, el]:u64
000242ea: goto %00022943

00022943:
00022952: R28 := 3
00038933: goto %00022954

00022954:
0002295a: R19 := mem[R19 + 0xFB8, el]:u64
00022962: R0 := mem[R31 + 0xF8, el]:u64
0002296a: R1 := mem[R19, el]:u64
00022972: #12870 := 1 + ~R1 + R0
00022976: NF := 63:63[#12870]
00022979: VF := 63:63[R0] & 63:63[~R1] & ~63:63[#12870] | ~63:63[R0] &
          ~63:63[~R1] & 63:63[#12870]
0002297c: ZF := #12870 = 0
0002297f: CF := 63:63[R0] & 63:63[~R1] | 63:63[~R1] & ~63:63[#12870] |
          63:63[R0] & ~63:63[#12870]
00022983: R0 := #12870
00022989: R1 := 0
00022995: #12872 := ~ZF <> 0
0002298f: when #12872 goto %0002298d
00038932: goto %00024216

0002298d:
0002299e: mem := mem with [R31, el]:u64 <- R31 + 0x60
000229a2: mem := mem with [R31, el]:u64 <- R31 + 0x68
000229ab: mem := mem with [R31, el]:u64 <- R31 + 0x80
000229af: mem := mem with [R31, el]:u64 <- R31 + 0x88
000229b8: mem := mem with [R31, el]:u64 <- R31 + 0xA0
000229bc: mem := mem with [R31, el]:u64 <- R31 + 0xA8
000229c1: R30 := 0x100DC
000229c3: call @__stack_chk_fail with return %000229c5

000229c5:
000229ca: R0 := 1
000229d2: mem := mem with [R31 + 0x98, el]:u64 <- 0
000229da: mem := mem with [R31 + 0xB4, el]:u32 <- 31:0[R0]
000229e2: R22 := mem[R31 + 0x88, el]:u64
000229ea: R20 := mem[R31 + 0xA8, el]:u64
000229f2: R21 := mem[R31 + 0xD0, el]:u64
000229fa: R27 := mem[R31 + 0xF0, el]:u64
000229ff: goto %000229fd

000229fd:
00022a07: R0 := pad:64[mem[R31 + 0x80, el]:u32]
00022a13: #12878 := 31:0[R0] = 0
00022a0d: when #12878 goto %00022a0b
00038931: goto %00023885

00022a0b:
00022a1a: R28 := 1
00022a1f: goto %00022a1d

00023885:
0002388e: R0 := R27
00023894: R1 := 0x13000
0002389b: R1 := R1 + 0x8F8
000238a0: R30 := 0xFD5C
000238a2: call @strstr with return %000238a4

000238a4:
000238a9: R23 := R0 + 3
000238b0: R1 := 0x22
000238b8: R0 := R23
000238bd: R30 := 0xFD6C
000238bf: call @strchr with return %000238c1

000238c1:
000238c7: R2 := R0 - R23
000238ce: R28 := 1
000238d5: #13282 := R2
000238d9: NF := 63:63[#13282]
000238dc: VF := 63:63[R2] & ~63:63[#13282]
000238df: ZF := #13282 = 0
000238e2: CF := 63:63[R2] | ~63:63[#13282] | 63:63[R2] & ~63:63[#13282]
000238f1: #13284 := (NF <> VF | ZF) <> 0
000238eb: when #13284 goto %00022a1d
00038930: goto %000238f4

000238f4:
000238f9: R1 := 0
00023901: R0 := R23
00023906: R30 := 0xFD88
00023908: call @substr with return %0002390a

0002390a:
00023910: R26 := R0
00023915: R30 := 0xFD90
00023917: call @urlencode with return %00023919

00023919:
0002391f: R23 := R0
00023927: R0 := R26
0002392c: R30 := 0xFD9C
0002392e: call @free with return %00023930

00023930:
00023936: R0 := mem[R21 + 0x30, el]:u64
0002393b: R30 := 0xFDA4
0002393d: call @urlencode with return %0002393f

0002393f:
00023945: R26 := R0
0002394b: R0 := 0x1000
00023953: mem := mem with [R31 + 0x80, el]:u64 <- R26
00023958: R30 := 0xFDB4
0002395a: call @new with return %0002395c

0002395c:
00023962: R27 := R0
0002396a: R5 := mem[R31 + 0xD8, el]:u64
00023973: mem := mem with [R31, el]:u64 <- R31
00023977: mem := mem with [R31, el]:u64 <- R31 + 8
0002397f: R6 := R23
00023987: R7 := R5
00023990: R2 := 31:0[R28]
00023996: R4 := 0x13000
0002399c: R3 := 0xFFFFFFFFFFFFFFFF
000239a3: R4 := R4 + 0x900
000239a9: R1 := 0xFFF
000239ae: R30 := 0xFDE0
000239b0: call @__snprintf_chk with return %000239b2

000239b2:
000239b6: R0 := 0x27000
000239be: R0 := mem[R0 + 0xF78, el]:u64
000239c7: R0 := pad:64[mem[R0, el]:u32]
000239d3: #13314 := ~31:0[R0] = 0
000239cd: when #13314 goto %000239cb
0003892f: goto %000239fb

000239cb:
000239db: R2 := mem[R21 + 0x30, el]:u64
000239e4: R0 := 31:0[R28]
000239ea: R1 := 0x13000
000239f1: R1 := R1 + 0x928
000239f6: R30 := 0x10110
000239f8: call @__printf_chk with return %000239fa

000239fa:
000239fd: goto %000239fb

000239fb:
00023a02: R0 := 0x32
00023a07: R30 := 0xFDF8
00023a09: call @new with return %00023a0b

00023a0b:
00023a11: R28 := R0
00023a19: R0 := R27
00023a1e: R30 := 0xFE04
00023a20: call @strlen with return %00023a22

00023a22:
00023a29: R5 := 31:0[R0]
00023a2f: R4 := 0x13000
00023a36: R4 := R4 + 0x958
00023a3c: R3 := 0xFFFFFFFFFFFFFFFF
00023a43: R2 := 1
00023a49: R1 := 0x32
00023a51: R0 := R28
00023a56: R30 := 0xFE24
00023a58: call @__snprintf_chk with return %00023a5a

00023a5a:
00023a5d: R30 := 0xFE28
00023a5f: call @new_rr_data with return %00023a61

00023a61:
00023a67: R23 := R0
00023a6f: R0 := R21
00023a74: R30 := 0xFE34
00023a76: call @dup_rr_data with return %00023a78

00023a78:
00023a7e: R26 := R0
00023a86: R0 := mem[R0 + 0x28, el]:u64
00023a8b: R30 := 0xFE40
00023a8d: call @free with return %00023a8f

00023a8f:
00023a93: R0 := 0x13000
00023a9a: R0 := R0 + 0x960
00023a9f: R30 := 0xFE4C
00023aa1: call @strdup with return %00023aa3

00023aa3:
00023aa9: R2 := mem[R21 + 0x30, el]:u64
00023ab1: mem := mem with [R26 + 0x28, el]:u64 <- R0
00023ab9: R0 := mem[R26 + 8, el]:u64
00023ac0: R3 := 1
00023ac6: R1 := 0x13000
00023acd: R1 := R1 + 0x968
00023ad2: R30 := 0xFE68
00023ad4: call @hlist_mod with return %00023ad6

00023ad6:
00023adc: R0 := mem[R26 + 8, el]:u64
00023ae3: R3 := 1
00023ae9: R2 := 0x13000
00023aef: R1 := 0x12000
00023af6: R2 := R2 + 0x970
00023afd: R1 := R1 + 0x928
00023b02: R30 := 0xFE84
00023b04: call @hlist_mod with return %00023b06

00023b06:
00023b0c: R0 := mem[R26 + 8, el]:u64
00023b14: R2 := R28
00023b1a: R1 := 0x12000
00023b21: R1 := R1 + 0x918
00023b28: R3 := 1
00023b2d: R30 := 0xFE9C
00023b2f: call @hlist_mod with return %00023b31

00023b31:
00023b37: R0 := R28
00023b3c: R30 := 0xFEA4
00023b3e: call @free with return %00023b40

00023b40:
00023b46: R21 := mem[R31 + 0x78, el]:u64
00023b4e: R0 := R21
00023b53: R30 := 0xFEB0
00023b55: call @proxy_connect with return %00023b57

00023b57:
00023b5e: R4 := 31:0[R0]
00023b66: R3 := R21
00023b6e: R2 := R23
00023b76: R1 := R26
00023b7d: R0 := R31 + 0xEC
00023b85: mem := mem with [R31 + 0xEC, el]:u32 <- 31:0[R4]
00023b8a: R30 := 0xFECC
00023b8c: call @proxy_authenticate with return %00023b8e

00023b8e:
00023b98: #13362 := 31:0[R0] = 0
00023b92: when #13362 goto %00023b90
0003892e: goto %00023ef4

00023ef4:
00023efb: R0 := pad:64[mem[R23 + 0x10, el]:u32]
00023f02: #13424 := 0xFFFFFFFFFFFFFE69 + extend:64[31:0[R0]]
00023f06: NF := 63:63[#13424]
00023f09: VF := 31:31[R0] & ~63:63[#13424]
00023f0c: ZF := #13424 = 0
00023f0f: CF := 31:31[R0] | 31:31[R0] & ~63:63[#13424] | ~63:63[#13424]
00023f1d: #13426 := ZF
00023f17: when #13426 goto %00023e8b
0003892d: goto %00023b90

00023e8b:
00023e8f: R0 := 0x27000
00023e97: R0 := mem[R0 + 0xF78, el]:u64
00023ea0: R0 := pad:64[mem[R0, el]:u32]
00023eab: #13423 := 31:0[R0] = 0
00023ea5: when #13423 goto %00023bf4
0003892c: goto %00023eae

00023eae:
00023eb2: R1 := 0x13000
00023eb9: R0 := 1
00023ec0: R1 := R1 + 0x998
00023ec5: R30 := 0x10208
00023ec7: call @__printf_chk with return %00023ec9

00023ec9:
00023ecb: goto %00023bf4

00023b90:
00023b9e: R0 := 0x27000
00023ba6: R0 := mem[R0 + 0xF78, el]:u64
00023baf: R0 := pad:64[mem[R0, el]:u32]
00023bbb: #13363 := ~31:0[R0] = 0
00023bb5: when #13363 goto %00023bb3
0003892b: goto %00023bd9

00023bb3:
00023bc1: R1 := 0x13000
00023bc8: R0 := 1
00023bcf: R1 := R1 + 0x9D0
00023bd4: R30 := 0x101E4
00023bd6: call @__printf_chk with return %00023bd8

00023bd8:
00023bdb: goto %00023bd9

00023bd9:
00023be3: R0 := pad:64[mem[R31 + 0xEC, el]:u32]
00023be8: R30 := 0xFEF4
00023bea: call @close with return %00023bec

00023bec:
00023bf2: mem := mem with [R31 + 0xEC, el]:u32 <- 0
0003892a: goto %00023bf4

00023bf4:
00023bfa: R0 := R23
00023bff: R30 := 0xFF00
00023c01: call @reset_rr_data with return %00023c03

00023c03:
00023c0a: R0 := pad:64[mem[R31 + 0xEC, el]:u32]
00023c16: #13368 := ~31:0[R0] = 0
00023c10: when #13368 goto %00023c0e
00038929: goto %00023c29

00023c0e:
00023c1e: R1 := R26
00023c23: R30 := 0x10154
00023c25: call @headers_send with return %00023c27

00023c27:
00023c31: #13372 := 31:0[R0] = 0
00023c2b: when #13372 goto %00023c29
00038928: goto %00023cc6

00023cc6:
00023ccc: R0 := R27
00023cd1: R30 := 0x10160
00023cd3: call @strlen with return %00023cd5

00023cd5:
00023cdb: R2 := R0
00023ce4: R0 := pad:64[mem[R31 + 0xEC, el]:u32]
00023cec: R1 := R27
00023cf1: R30 := 0x10170
00023cf3: call @write with return %00023cf5

00023cf5:
00023cfe: #13395 := R0 = 0
00023cf8: when #13395 goto %00023c29
00038927: goto %00023d01

00023d01:
00023d08: R0 := pad:64[mem[R31 + 0xEC, el]:u32]
00023d10: R1 := R23
00023d15: R30 := 0x10180
00023d17: call @headers_recv with return %00023d19

00023d19:
00023d22: #13399 := 31:0[R0] = 0
00023d1c: when #13399 goto %00023c29
00038926: goto %00023d25

00023d25:
00023d29: R0 := 0x27000
00023d31: R0 := mem[R0 + 0xF78, el]:u64
00023d3a: R0 := pad:64[mem[R0, el]:u32]
00023d46: #13400 := ~31:0[R0] = 0
00023d40: when #13400 goto %00023d3e
00038925: goto %00023d58

00023d3e:
00023d4e: R0 := mem[R23 + 8, el]:u64
00023d53: R30 := 0x10288
00023d55: call @hlist_dump with return %00023d57

00023d57:
00023d5a: goto %00023d58

00023d58:
00023d61: R0 := mem[R31 + 0x98, el]:u64
00023d69: R1 := mem[R31 + 0xC8, el]:u64
00023d71: R0 := R0 | R1
00023d7d: #13404 := ~R0 = 0
00023d77: when #13404 goto %00023d75
00038924: goto %00023e2d

00023d75:
00023d83: R0 := 0x14
00023d88: R30 := 0x10234
00023d8a: call @new with return %00023d8c

00023d8c:
00023d92: R1 := mem[R31 + 0x98, el]:u64
00023d9a: R21 := R0
00023da2: R2 := mem[R31 + 0xC8, el]:u64
00023da9: #13408 := R1
00023dad: NF := 63:63[#13408]
00023db0: VF := 63:63[R1] & ~63:63[#13408]
00023db3: ZF := #13408 = 0
00023db6: CF := 63:63[R1] | ~63:63[#13408] | 63:63[R1] & ~63:63[#13408]
00023dbe: R3 := 0xFFFFFFFFFFFFFFFF
00023dc4: R4 := 0x13000
00023dda: #13410 := ~ZF <> 0
00023ddb: goto %00023dd2

00023dd2:
00023dd4: when #13410 goto %00023dcc
00023dd5: goto %00023dcf

00023dcf:
00023dd0: R5 := R2
00023dd7: goto %00023dd3

00023dcc:
00023dcd: R5 := R1
00023dd6: goto %00023dd3

00023dd3:
00023de3: R4 := R4 + 0xA08
00023dea: R2 := 1
00023df0: R1 := 0x14
00023df5: R30 := 0x10260
00023df7: call @__snprintf_chk with return %00023df9

00023df9:
00023dff: R0 := mem[R23 + 8, el]:u64
00023e07: R2 := R21
00023e0d: R1 := 0x12000
00023e14: R3 := 1
00023e1b: R1 := R1 + 0x918
00023e20: R30 := 0x10278
00023e22: call @hlist_mod with return %00023e24

00023e24:
00023e2a: mem := mem with [R23 + 8, el]:u64 <- R0
00023e2f: goto %00023e2d

00023e2d:
00023e37: R0 := pad:64[mem[R31 + 0xB4, el]:u32]
00023e3f: R1 := R23
00023e47: mem := mem with [R23 + 0x14, el]:u32 <- 31:0[R0]
00023e4f: R0 := R20
00023e56: R24 := 0
00023e5d: R28 := 3
00023e62: R30 := 0x101C0
00023e64: call @copy_rr_data with return %00023e66

00023e66:
00023e6d: R0 := pad:64[mem[R22, el]:u32]
00023e72: R30 := 0x101C8
00023e74: call @close with return %00023e76

00023e76:
00023e7d: R0 := pad:64[mem[R31 + 0xEC, el]:u32]
00023e85: mem := mem with [R22, el]:u32 <- 31:0[R0]
00023e89: goto %00023c7b

00023c29:
00023c37: R0 := 0x27000
00023c3e: R28 := 1
00023c46: R0 := mem[R0 + 0xF78, el]:u64
00023c4f: R0 := pad:64[mem[R0, el]:u32]
00023c5b: #13373 := ~31:0[R0] = 0
00023c55: when #13373 goto %00023c53
00038923: goto %00023c7b

00023c53:
00023c64: R0 := 31:0[R28]
00023c6a: R1 := 0x13000
00023c71: R1 := R1 + 0xA10
00023c76: R30 := 0x10148
00023c78: call @__printf_chk with return %00023c7a

00023c7a:
00023c7d: goto %00023c7b

00023c7b:
00023c84: R0 := R26
00023c89: R30 := 0xFF24
00023c8b: call @free with return %00023c8d

00023c8d:
00023c93: R0 := R23
00023c98: R30 := 0xFF2C
00023c9a: call @free with return %00023c9c

00023c9c:
00023ca2: R0 := R27
00023ca7: R30 := 0xFF34
00023ca9: call @free with return %00023cab

00023cab:
00023cb1: R0 := mem[R31 + 0x80, el]:u64
00023cb6: R30 := 0xFF3C
00023cb8: call @free with return %00023cba

00023cba:
00023cc0: R27 := mem[R31 + 0xF0, el]:u64
00023cc4: goto %00022a1d

00022a1d:
00022a26: R0 := R27
00022a2b: R30 := 0xFC18
00022a2d: call @free with return %00022a2f

00022a2f:
00022a35: R0 := mem[R31 + 0xD8, el]:u64
00022a3a: R30 := 0xFC20
00022a3c: call @free with return %00022a3e

00022a3e:
00022a41: goto %00022a3f

00022a3f:
00022a46: R0 := 0x27000
00022a4e: R0 := mem[R0 + 0xF78, el]:u64
00022a57: R0 := pad:64[mem[R0, el]:u32]
00022a63: #12882 := 31:0[R24] = 0
00022a5d: when #12882 goto %00022a5b
00038922: goto %00023090

00023090:
0002309d: #13077 := 31:0[R0] = 0
00023097: when #13077 goto %00023095
00038921: goto %00023363

00023363:
0002336a: R2 := 31:0[R24]
00023370: R1 := 0x13000
00023377: R0 := 1
0002337e: R1 := R1 + 0xA58
00023383: R30 := 0xFC6C
00023385: call @__printf_chk with return %00023387

00023387:
0002338d: R0 := mem[R20 + 8, el]:u64
00023392: R30 := 0xFC74
00023394: call @hlist_dump with return %00023095

00023095:
000230a6: R0 := pad:64[mem[R31 + 0xB0, el]:u32]
000230ae: R1 := R20
000230b3: R30 := 0xFC80
000230b5: call @headers_send with return %000230b7

000230b7:
000230c1: #13081 := 31:0[R0] = 0
000230bb: when #13081 goto %000230b9
00038920: goto %00023301

000230b9:
000230c7: R0 := 0x27000
000230cf: R0 := mem[R0 + 0xF78, el]:u64
000230d8: R0 := pad:64[mem[R0, el]:u32]
000230e4: #13082 := ~31:0[R0] = 0
000230de: when #13082 goto %000230dc
0003891f: goto %00023102

000230dc:
000230ea: R1 := 0x13000
000230f1: R0 := 1
000230f8: R1 := R1 + 0xA88
000230fd: R30 := 0x10090
000230ff: call @__printf_chk with return %00023101

00023101:
00023104: goto %00023102

00023102:
0002310b: R0 := R25
00023112: R28 := 0x8000
00023117: R30 := 0xFFF4
00023119: call @free with return %0002311b

0002311b:
00023122: R21 := mem[R31 + 0x30, el]:u64
00023126: R22 := mem[R31 + 0x38, el]:u64
0002312f: R23 := mem[R31 + 0x40, el]:u64
00023133: R24 := mem[R31 + 0x48, el]:u64
0002313c: R25 := mem[R31 + 0x50, el]:u64
00023140: R26 := mem[R31 + 0x58, el]:u64
00023144: goto %00022954

00023301:
00023308: R0 := pad:64[mem[R31 + 0xB0, el]:u32]
0002330f: R2 := extend:64[31:0[R24]]
00023317: R1 := R25
0002331c: R30 := 0xFC94
0002331e: call @write with return %00023320

00023320:
00023325: #13124 := extend:64[31:0[R0]]
00023329: NF := 63:63[#13124]
0002332c: VF := 31:31[R0] & ~63:63[#13124]
0002332f: ZF := #13124 = 0
00023332: CF := 31:31[R0] | 31:31[R0] & ~63:63[#13124] | ~63:63[#13124]
0002333b: R0 := 0x27000
00023343: R0 := mem[R0 + 0xF78, el]:u64
00023350: #13126 := (NF <> VF | ZF) <> 0
0002334a: when #13126 goto %000232ed
0003891e: goto %00023353

000232ed:
000232f4: R0 := pad:64[mem[R0, el]:u32]
000232fb: R28 := 0x8000
000232ff: goto %00022a5b

00023353:
0002335a: R0 := pad:64[mem[R0, el]:u32]
00023361: R28 := 2
0003891d: goto %00022a5b

00022a5b:
00022a6f: #12883 := 31:0[R0] = 0
00022a69: when #12883 goto %00022a67
0003891c: goto %000241f2

000241f2:
000241f6: R1 := 0x13000
000241ff: R2 := 31:0[R28]
00024206: R1 := R1 + 0xAB0
0002420d: R0 := 1
00024212: R30 := 0xFCC4
00024214: call @__printf_chk with return %00022a67

00022a67:
00022a77: R0 := R25
00022a7c: R30 := 0xFCCC
00022a7e: call @free with return %00022a80

00022a80:
00022a87: R21 := mem[R31 + 0x30, el]:u64
00022a8b: R22 := mem[R31 + 0x38, el]:u64
00022a94: R23 := mem[R31 + 0x40, el]:u64
00022a98: R24 := mem[R31 + 0x48, el]:u64
00022aa1: R25 := mem[R31 + 0x50, el]:u64
00022aa5: R26 := mem[R31 + 0x58, el]:u64
00022aa9: goto %00022954

00024216:
0002421d: R0 := 31:0[R28]
00024226: R29 := mem[R31 + 0x10, el]:u64
0002422a: R30 := mem[R31 + 0x18, el]:u64
00024233: R19 := mem[R31 + 0x20, el]:u64
00024237: R20 := mem[R31 + 0x28, el]:u64
00024240: R27 := mem[R31 + 0x60, el]:u64
00024244: R28 := mem[R31 + 0x68, el]:u64
0002424b: R31 := R31 + 0x100
00024250: call R30 with noreturn

0003896b: sub select(select_result)
00038b68: select_result :: out u32 = low:32[R0]

0001e0c9:
00030777: R16 := 0x27000
0003077f: R17 := mem[R16 + 0xEC0, el]:u64
00030786: R16 := R16 + 0xEC0
0003078b: call R17 with noreturn

0003896c: sub setgid(setgid_arg1, setgid_result)
00038b69: setgid_arg1 :: in u32 = low:32[R0]
00038b6a: setgid_result :: out u32 = low:32[R0]

0002c2e2:
00030538: R16 := 0x27000
00030540: R17 := mem[R16 + 0xE08, el]:u64
00030547: R16 := R16 + 0xE08
0003054c: call R17 with noreturn

0003896d: sub setsid(setsid_result)
00038b6b: setsid_result :: out u32 = low:32[R0]

0002f2a8:
00030790: R16 := 0x27000
00030798: R17 := mem[R16 + 0xEC8, el]:u64
0003079f: R16 := R16 + 0xEC8
000307a4: call R17 with noreturn

0003896e: sub setsockopt(setsockopt_fd, setsockopt_level, setsockopt_optnmae, setsockopt_optval, setsockopt_len, setsockopt_result)
00038b6c: setsockopt_fd :: in u32 = low:32[R0]
00038b6d: setsockopt_level :: in u32 = low:32[R1]
00038b6e: setsockopt_optnmae :: in u32 = low:32[R2]
00038b6f: setsockopt_optval :: in out u64 = R3
00038b70: setsockopt_len :: in u64 = R4
00038b71: setsockopt_result :: out u32 = low:32[R0]

00016395:
00030263: R16 := 0x27000
0003026b: R17 := mem[R16 + 0xD20, el]:u64
00030272: R16 := R16 + 0xD20
00030277: call R17 with noreturn

0003896f: sub setuid(setuid_arg1, setuid_result)
00038b72: setuid_arg1 :: in u32 = low:32[R0]
00038b73: setuid_result :: out u32 = low:32[R0]

0002c2f3:
0002fff2: R16 := 0x27000
0002fffa: R17 := mem[R16 + 0xC58, el]:u64
00030001: R16 := R16 + 0xC58
00030006: call R17 with noreturn

00038970: sub sighandler(sighandler_result)
00038b74: sighandler_result :: out u32 = low:32[R0]

00020973:
0002097b: mem := mem with [R31 - 0x20, el]:u64 <- R29
0002097f: mem := mem with [R31 - 0x18, el]:u64 <- R30
00020982: R31 := R31 - 0x20
0002098b: R3 := 31:0[R0]
00020992: R29 := R31
0002099a: mem := mem with [R31 + 0x10, el]:u64 <- R19
000209a0: R19 := 0x28000
000209a9: R0 := pad:64[mem[R19 + 0x4D8, el]:u32]
000209b5: #11914 := ~31:0[R0] = 0
000209af: when #11914 goto %000209ad
00038971: goto %0002508f

000209ad:
000209bb: R2 := 0x13000
000209c2: R1 := 1
000209c9: R2 := R2 + 0xE60
000209d0: R0 := 6
000209d5: R30 := 0x10508
000209d7: call @__syslog_chk with return %000209d9

000209d9:
000209dc: goto %000209da

0002508f:
00025093: R2 := 0x13000
0002509a: R1 := 1
000250a1: R2 := R2 + 0xE30
000250a8: R0 := 6
000250ad: R30 := 0x104C8
000250af: call @__syslog_chk with return %000209da

000209da:
000209e2: R1 := R19 + 0x4D8
000209eb: R0 := pad:64[mem[R19 + 0x4D8, el]:u32]
000209f3: R2 := extend:64[31:0[R0]] + 2
000209fc: R1 := pad:64[mem[R1 + 4, el]:u32]
00020a05: R1 := 31:0[R0] | 31:0[R1]
00020a0c: #11918 := extend:64[31:0[R1]]
00020a10: NF := 63:63[#11918]
00020a13: VF := 31:31[R1] & ~63:63[#11918]
00020a16: ZF := #11918 = 0
00020a19: CF := 31:31[R1] | 31:31[R1] & ~63:63[#11918] | ~63:63[#11918]
00020a34: #11920 := ~ZF <> 0
00020a35: goto %00020a2c

00020a2c:
00020a2e: when #11920 goto %00020a25
00020a2f: goto %00020a29

00020a29:
00020a2a: R0 := extend:64[31:0[R0]] + 1
00020a31: goto %00020a2d

00020a25:
00020a26: R0 := 31:0[R2]
00020a30: goto %00020a2d

00020a2d:
00020a3e: mem := mem with [R19 + 0x4D8, el]:u32 <- 31:0[R0]
00020a46: R19 := mem[R31 + 0x10, el]:u64
00020a50: R29 := mem[R31, el]:u64
00020a54: R30 := mem[R31 + 8, el]:u64
00020a57: R31 := R31 + 0x20
00020a5c: call R30 with noreturn

00038972: sub signal(signal_result)
00038b75: signal_result :: out u32 = low:32[R0]

0002c4c8:
0003019b: R16 := 0x27000
000301a3: R17 := mem[R16 + 0xCE0, el]:u64
000301aa: R16 := R16 + 0xCE0
000301af: call R17 with noreturn

00038973: sub so_closed(so_closed_result)
00038b76: so_closed_result :: out u32 = low:32[R0]

00014aae:
00014ab6: mem := mem with [R31 - 0x30, el]:u64 <- R29
00014aba: mem := mem with [R31 - 0x28, el]:u64 <- R30
00014abd: R31 := R31 - 0x30
00014ac6: R29 := R31
00014acf: mem := mem with [R31, el]:u64 <- R31 + 0x20
00014ad3: mem := mem with [R31, el]:u64 <- R31 + 0x28
00014ad9: R19 := 0x27000
00014ae1: R1 := mem[R19 + 0xFB8, el]:u64
00014ae9: R2 := mem[R1, el]:u64
00014af1: mem := mem with [R31 + 0x28, el]:u64 <- R2
00014af7: R2 := 0
00014b03: #5184 := ZF
00014afd: when #5184 goto %00014afb
0003897b: goto %0001621e

0001621e:
00016223: R1 := R31 + 0x27
0001622a: R3 := 0x42
00016230: R2 := 1
00016235: R30 := 0xABE0
00016237: call @recv with return %00016239

00016239:
00016242: #5830 := ~31:0[R0] = 0
0001623c: when #5830 goto %000161a9
0003897a: goto %00014afb

000161a9:
000161b0: R20 := 0
000161bb: #5823 := ~ZF <> 0
000161b5: when #5823 goto %00014b0c
00038979: goto %000161be

000161be:
000161c1: R30 := 0xAC20
000161c4: call @__errno_location with return %000161c6

000161c6:
000161cd: R0 := pad:64[mem[R0, el]:u32]
000161d4: #5824 := 0xFFFFFFFFFFFFFFFE + extend:64[31:0[R0]]
000161d8: NF := 63:63[#5824]
000161db: VF := 31:31[R0] & ~63:63[#5824]
000161de: ZF := #5824 = 0
000161e1: CF := 31:31[R0] | 31:31[R0] & ~63:63[#5824] | ~63:63[#5824]
0001620a: #5826 := ~ZF <> 0
0001620b: goto %00016202

00016202:
00016204: when #5826 goto %000161ea
00016205: goto %000161f6

000161f6:
000161f7: NF := 0
000161fa: ZF := 1
000161fd: CF := 0
00016200: VF := 0
00016207: goto %00016203

000161ea:
000161eb: NF := 63:63[extend:64[31:0[R0]] - 0xB]
000161ee: VF := 31:31[R0] & ~63:63[extend:64[31:0[R0]] - 0xB]
000161f1: ZF := extend:64[31:0[R0]] - 0xB = 0
000161f4: CF := 31:31[R0] | ~63:63[extend:64[31:0[R0]] - 0xB] | 31:31[R0] &
          ~63:63[extend:64[31:0[R0]] - 0xB]
00016206: goto %00016203

00016203:
00016217: #5829 := ZF
00016211: when #5829 goto %00014b0c
00038978: goto %0001621a

0001621a:
0001621c: goto %00014afb

00014afb:
00014b0a: R20 := 1
00038977: goto %00014b0c

00014b0c:
00014b12: R19 := mem[R19 + 0xFB8, el]:u64
00014b1a: R0 := mem[R31 + 0x28, el]:u64
00014b22: R1 := mem[R19, el]:u64
00014b2a: #5188 := 1 + ~R1 + R0
00014b2e: NF := 63:63[#5188]
00014b31: VF := 63:63[R0] & 63:63[~R1] & ~63:63[#5188] | ~63:63[R0] &
          ~63:63[~R1] & 63:63[#5188]
00014b34: ZF := #5188 = 0
00014b37: CF := 63:63[R0] & 63:63[~R1] | 63:63[~R1] & ~63:63[#5188] |
          63:63[R0] & ~63:63[#5188]
00014b3b: R0 := #5188
00014b41: R1 := 0
00014b4d: #5190 := ~ZF <> 0
00014b47: when #5190 goto %00014b45
00038976: goto %0001617d

00014b45:
00014b52: R30 := 0xAC38
00014b54: call @__stack_chk_fail with return %00038974

00038974:
00038975: call @so_recvln with noreturn

0001617d:
00016184: R0 := 31:0[R20]
0001618d: R19 := mem[R31 + 0x10, el]:u64
00016191: R20 := mem[R31 + 0x18, el]:u64
0001619b: R29 := mem[R31, el]:u64
0001619f: R30 := mem[R31 + 8, el]:u64
000161a2: R31 := R31 + 0x30
000161a7: call R30 with noreturn

0003897c: sub so_connect(so_connect_result)
00038b77: so_connect_result :: out u32 = low:32[R0]

000146fb:
00014703: mem := mem with [R31 - 0x60, el]:u64 <- R29
00014707: mem := mem with [R31 - 0x58, el]:u64 <- R30
0001470a: R31 := R31 - 0x60
00014711: R2 := 0
00014718: R29 := R31
00014721: mem := mem with [R31, el]:u64 <- R31 + 0x40
00014725: mem := mem with [R31, el]:u64 <- R31 + 0x48
0001472b: R22 := 0x27000
00014734: R21 := 31:0[R0]
0001473c: R0 := mem[R22 + 0xFB8, el]:u64
00014745: mem := mem with [R31, el]:u64 <- R31 + 0x20
00014749: mem := mem with [R31, el]:u64 <- R31 + 0x28
00014752: R20 := 31:0[R1]
0001475a: R3 := mem[R0, el]:u64
00014762: mem := mem with [R31 + 0x58, el]:u64 <- R3
00014768: R3 := 0
0001476f: R1 := 1
00014776: R0 := 2
0001477b: R30 := 0xA81C
0001477e: call @socket with return %00014780

00014780:
0001478a: #5125 := ~~31:31[R0]
00014784: when #5125 goto %00014782
00038988: goto %000165c2

00014782:
00014790: R0 := 0x27000
00014797: R19 := 0xFFFFFFFFFFFFFFFF
0001479f: R0 := mem[R0 + 0xF78, el]:u64
000147a8: R0 := pad:64[mem[R0, el]:u32]
000147b4: #5126 := 31:0[R0] = 0
000147ae: when #5126 goto %000147ac
00038987: goto %0001643e

0001643e:
00016441: R30 := 0xA8C8
00016443: call @__errno_location with return %00016445

00016445:
0001644c: R0 := pad:64[mem[R0, el]:u32]
00016451: R30 := 0xA8D0
00016453: call @strerror with return %00016455

00016455:
0001645b: R2 := R0
00016461: R1 := 0x12000
00016468: R0 := 1
0001646f: R1 := R1 + 0x428
00016474: R30 := 0xA8E4
00016476: call @__printf_chk with return %00016478

00016478:
0001647a: goto %000147ac

000165c2:
000165c7: R3 := 2
000165d2: R19 := 31:0[R0]
000165d9: R2 := 0
000165e0: R1 := 3
000165e8: mem := mem with [R31 + 0x30, el]:u64 <- R23
000165ef: R23 := R31 + 0x48
000165fb: mem := mem with [R31 + 0x4C, el]:u32 <- 31:0[R21]
00016603: mem := mem with [R31 + 0x50, el]:u64 <- 0
00016608: R30 := 0xA850
0001660b: call @fcntl with return %0001660d

0001660d:
00016614: R20 := 31:0[R0]
0001661f: #5901 := ~~31:31[R0]
00016619: when #5901 goto %0001647c
00038986: goto %00016622

0001647c:
00016480: R0 := 0x27000
00016488: R0 := mem[R0 + 0xF78, el]:u64
00016491: R0 := pad:64[mem[R0, el]:u32]
0001649d: #5877 := ~31:0[R0] = 0
00016497: when #5877 goto %00016495
00038985: goto %000164da

00016495:
000164a2: R30 := 0xA978
000164a4: call @__errno_location with return %000164a6

000164a6:
000164ad: R0 := pad:64[mem[R0, el]:u32]
000164b2: R30 := 0xA980
000164b4: call @strerror with return %000164b6

000164b6:
000164bc: R2 := R0
000164c2: R1 := 0x12000
000164c9: R0 := 1
000164d0: R1 := R1 + 0x440
000164d5: R30 := 0xA994
000164d7: call @__printf_chk with return %000164d9

000164d9:
000164dc: goto %000164da

00016622:
00016628: R1 := R23
00016631: R0 := 31:0[R19]
00016638: R2 := 0x10
0001663d: R30 := 0xA868
00016640: call @connect with return %00016642

00016642:
0001664b: #5908 := ~~31:31[R0]
00016645: when #5908 goto %00016500
00038984: goto %0001664e

00016500:
00016504: R0 := 0x27000
0001650c: R0 := mem[R0 + 0xF78, el]:u64
00016515: R0 := pad:64[mem[R0, el]:u32]
00016520: #5884 := 31:0[R0] = 0
0001651a: when #5884 goto %000164da
00038983: goto %00016523

00016523:
00016526: R30 := 0xA920
00016528: call @__errno_location with return %0001652a

0001652a:
00016531: R0 := pad:64[mem[R0, el]:u32]
00016536: R30 := 0xA928
00016538: call @strerror with return %0001653a

0001653a:
00016540: R2 := R0
00016546: R1 := 0x12000
0001654d: R0 := 1
00016554: R1 := R1 + 0x460
00016559: R30 := 0xA93C
0001655b: call @__printf_chk with return %0001655d

0001655d:
0001655f: goto %000164da

0001664e:
00016654: R2 := 31:0[R20] & 0xFFFFF7FF
0001665d: R0 := 31:0[R19]
00016664: R1 := 4
00016669: R30 := 0xA87C
0001666b: call @fcntl with return %0001666d

0001666d:
00016676: #5936 := ~~31:31[R0]
00016670: when #5936 goto %00016561
00038982: goto %00016679

00016561:
00016565: R0 := 0x27000
0001656d: R0 := mem[R0 + 0xF78, el]:u64
00016576: R0 := pad:64[mem[R0, el]:u32]
00016581: #5888 := 31:0[R0] = 0
0001657b: when #5888 goto %000164da
00038981: goto %00016584

00016584:
00016587: R30 := 0xA954
00016589: call @__errno_location with return %0001658b

0001658b:
00016592: R0 := pad:64[mem[R0, el]:u32]
00016597: R30 := 0xA95C
00016599: call @strerror with return %0001659b

0001659b:
000165a1: R2 := R0
000165a7: R1 := 0x12000
000165ae: R0 := 1
000165b5: R1 := R1 + 0x470
000165ba: R30 := 0xA970
000165bc: call @__printf_chk with return %000165be

000165be:
000165c0: goto %000164da

000164da:
000164e4: R0 := 31:0[R19]
000164eb: R19 := 0xFFFFFFFFFFFFFFFF
000164f0: R30 := 0xA904
000164f2: call @close with return %000164f4

000164f4:
000164fa: R23 := mem[R31 + 0x30, el]:u64
000164fe: goto %000147ac

00016679:
0001667f: R23 := mem[R31 + 0x30, el]:u64
00038980: goto %000147ac

000147ac:
000147bc: R0 := mem[R22 + 0xFB8, el]:u64
000147c4: R1 := mem[R31 + 0x58, el]:u64
000147cc: R2 := mem[R0, el]:u64
000147d4: #5130 := 1 + ~R2 + R1
000147d8: NF := 63:63[#5130]
000147db: VF := 63:63[R1] & 63:63[~R2] & ~63:63[#5130] | ~63:63[R1] &
          ~63:63[~R2] & 63:63[#5130]
000147de: ZF := #5130 = 0
000147e1: CF := 63:63[R1] & 63:63[~R2] | 63:63[~R2] & ~63:63[#5130] |
          63:63[R1] & ~63:63[#5130]
000147e5: R1 := #5130
000147eb: R2 := 0
000147f7: #5132 := ~ZF <> 0
000147f1: when #5132 goto %000147ef
0003897f: goto %00016405

000147ef:
000147ff: mem := mem with [R31 + 0x30, el]:u64 <- R23
00014804: R30 := 0xA9A0
00014806: call @__stack_chk_fail with return %0003897d

0003897d:
0003897e: call @so_listen with noreturn

00016405:
0001640c: R0 := 31:0[R19]
00016415: R19 := mem[R31 + 0x10, el]:u64
00016419: R20 := mem[R31 + 0x18, el]:u64
00016422: R21 := mem[R31 + 0x20, el]:u64
00016426: R22 := mem[R31 + 0x28, el]:u64
00016430: R29 := mem[R31, el]:u64
00016434: R30 := mem[R31 + 8, el]:u64
00016437: R31 := R31 + 0x60
0001643c: call R30 with noreturn

00038989: sub so_dataready(so_dataready_result)
00038b78: so_dataready_result :: out u32 = low:32[R0]

000149d8:
000149e0: mem := mem with [R31 - 0x30, el]:u64 <- R29
000149e4: mem := mem with [R31 - 0x28, el]:u64 <- R30
000149e7: R31 := R31 - 0x30
000149ed: R2 := 1
000149f4: R3 := 0x42
000149fb: R29 := R31
00014a03: mem := mem with [R31 + 0x10, el]:u64 <- R19
00014a09: R19 := 0x27000
00014a10: R1 := R31 + 0x27
00014a18: R19 := mem[R19 + 0xFB8, el]:u64
00014a20: R4 := mem[R19, el]:u64
00014a28: mem := mem with [R31 + 0x28, el]:u64 <- R4
00014a2e: R4 := 0
00014a33: R30 := 0xAB78
00014a35: call @recv with return %00014a37

00014a37:
00014a3c: #5171 := extend:64[31:0[R0]]
00014a40: NF := 63:63[#5171]
00014a43: VF := 31:31[R0] & ~63:63[#5171]
00014a46: ZF := #5171 = 0
00014a49: CF := 31:31[R0] | 31:31[R0] & ~63:63[#5171] | ~63:63[#5171]
00014a66: #5173 := (NF <> VF | ZF) <> 0
00014a67: goto %00014a5e

00014a5e:
00014a60: when #5173 goto %00014a57
00014a61: goto %00014a5b

00014a5b:
00014a5c: R0 := 1
00014a63: goto %00014a5f

00014a57:
00014a58: R0 := 0
00014a62: goto %00014a5f

00014a5f:
00014a70: R1 := mem[R31 + 0x28, el]:u64
00014a78: R2 := mem[R19, el]:u64
00014a80: #5177 := 1 + ~R2 + R1
00014a84: NF := 63:63[#5177]
00014a87: VF := 63:63[R1] & 63:63[~R2] & ~63:63[#5177] | ~63:63[R1] &
          ~63:63[~R2] & 63:63[#5177]
00014a8a: ZF := #5177 = 0
00014a8d: CF := 63:63[R1] & 63:63[~R2] | 63:63[~R2] & ~63:63[#5177] |
          63:63[R1] & ~63:63[#5177]
00014a91: R1 := #5177
00014a97: R2 := 0
00014aa3: #5179 := ~ZF <> 0
00014a9d: when #5179 goto %00014a9b
0003898b: goto %00016245

00014a9b:
00014aa8: R30 := 0xABA4
00014aaa: call @__stack_chk_fail with return %00014aac

00014aac:
0003898a: call @so_closed with noreturn

00016245:
0001624b: R19 := mem[R31 + 0x10, el]:u64
00016255: R29 := mem[R31, el]:u64
00016259: R30 := mem[R31 + 8, el]:u64
0001625c: R31 := R31 + 0x30
00016261: call R30 with noreturn

0003898c: sub so_listen(so_listen_result)
00038b79: so_listen_result :: out u32 = low:32[R0]

00014808:
00014810: mem := mem with [R31 - 0x60, el]:u64 <- R29
00014814: mem := mem with [R31 - 0x58, el]:u64 <- R30
00014817: R31 := R31 - 0x60
0001481e: R2 := 0
00014825: R29 := R31
0001482e: mem := mem with [R31, el]:u64 <- R31 + 0x20
00014832: mem := mem with [R31, el]:u64 <- R31 + 0x28
00014838: R20 := 0x27000
00014840: R3 := mem[R20 + 0xFB8, el]:u64
00014848: mem := mem with [R31 + 0x30, el]:u64 <- R23
00014851: R23 := 31:0[R0]
0001485a: mem := mem with [R31, el]:u64 <- R31 + 0x40
0001485e: mem := mem with [R31, el]:u64 <- R31 + 0x48
00014866: R0 := mem[R3, el]:u64
0001486e: mem := mem with [R31 + 0x58, el]:u64 <- R0
00014874: R0 := 0
0001487d: R21 := 31:0[R1]
00014884: R0 := 2
0001488b: R1 := 1
00014890: R30 := 0xA9E0
00014892: call @socket with return %00014894

00014894:
0001489b: R19 := 31:0[R0]
000148a7: #5148 := ~~31:31[R0]
000148a1: when #5148 goto %0001489f
00038992: goto %00016364

0001489f:
000148ad: R0 := 0x27000
000148b5: R0 := mem[R0 + 0xF78, el]:u64
000148be: R0 := pad:64[mem[R0, el]:u32]
000148ca: #5149 := 31:0[R0] = 0
000148c4: when #5149 goto %000148c2
00038991: goto %0001632a

0001632a:
0001632d: R30 := 0xAA84
0001632f: call @__errno_location with return %00016331

00016331:
00016338: R0 := pad:64[mem[R0, el]:u32]
0001633d: R30 := 0xAA8C
0001633f: call @strerror with return %00016341

00016341:
00016347: R2 := R0
0001634d: R1 := 0x12000
00016354: R0 := 1
0001635b: R1 := R1 + 0x490
00016360: R30 := 0xAAA0
00016362: call @__printf_chk with return %000148c2

00016364:
00016369: R3 := R31 + 0x44
00016370: R4 := 4
00016377: R22 := 1
0001637e: R2 := 2
00016387: R1 := 31:0[R22]
0001638f: mem := mem with [R31 + 0x44, el]:u32 <- 31:0[R22]
00016394: R30 := 0xAA04
00016397: call @setsockopt with return %00016399

00016399:
0001639f: mem := mem with [R31 + 0x4C, el]:u32 <- 31:0[R21]
000163a8: R4 := 2
000163af: R1 := R31 + 0x48
000163b8: R0 := 31:0[R19]
000163bf: R2 := 0x10
000163cb: mem := mem with [R31 + 0x50, el]:u64 <- 0
000163d0: R30 := 0xAA2C
000163d3: call @bind with return %000163d5

000163d5:
000163de: #5863 := ~31:0[R0] = 0
000163d8: when #5863 goto %000162c2
00038990: goto %000163e1

000162c2:
000162c5: R30 := 0xAAB4
000162c7: call @__errno_location with return %000162c9

000162c9:
000162d0: R0 := pad:64[mem[R0, el]:u32]
000162d5: R30 := 0xAABC
000162d8: call @strerror with return %000162da

000162da:
000162e0: R4 := R0
000162e9: R3 := 31:0[R23]
000162f2: R1 := 31:0[R22]
000162f8: R2 := 0x12000
000162ff: R2 := R2 + 0x4B0
00016306: R0 := 3
0001630b: R30 := 0xAAD8
0001630d: call @__syslog_chk with return %0001630f

0001630f:
00016316: R0 := 31:0[R19]
0001631d: R19 := 0xFFFFFFFFFFFFFFFF
00016322: R30 := 0xAAE4
00016324: call @close with return %00016326

00016326:
00016328: goto %000148e5

000163e1:
000163e8: R0 := 31:0[R19]
000163ef: R1 := 5
000163f4: R30 := 0xAA3C
000163f7: call @listen with return %000163f9

000163f9:
00016402: #5867 := ~31:0[R0] = 0
000163fc: when #5867 goto %000148c2
0003898f: goto %000148e5

000148c2:
000148d3: R0 := 31:0[R19]
000148da: R19 := 0xFFFFFFFFFFFFFFFF
000148df: R30 := 0xAAAC
000148e2: call @close with return %000148e4

000148e4:
000148e7: goto %000148e5

000148e5:
000148ee: R20 := mem[R20 + 0xFB8, el]:u64
000148f6: R0 := mem[R31 + 0x58, el]:u64
000148fe: R1 := mem[R20, el]:u64
00014906: #5156 := 1 + ~R1 + R0
0001490a: NF := 63:63[#5156]
0001490d: VF := 63:63[R0] & 63:63[~R1] & ~63:63[#5156] | ~63:63[R0] &
          ~63:63[~R1] & 63:63[#5156]
00014910: ZF := #5156 = 0
00014913: CF := 63:63[R0] & 63:63[~R1] | 63:63[~R1] & ~63:63[#5156] |
          63:63[R0] & ~63:63[#5156]
00014917: R0 := #5156
0001491d: R1 := 0
00014929: #5158 := ~ZF <> 0
00014923: when #5158 goto %00014921
0003898e: goto %00016281

00014921:
0001492e: R30 := 0xAAEC
00014930: call @__stack_chk_fail with return %00014932

00014932:
0003898d: call @so_recvtest with noreturn

00016281:
00016288: R0 := 31:0[R19]
00016291: R19 := mem[R31 + 0x10, el]:u64
00016295: R20 := mem[R31 + 0x18, el]:u64
0001629e: R21 := mem[R31 + 0x20, el]:u64
000162a2: R22 := mem[R31 + 0x28, el]:u64
000162aa: R23 := mem[R31 + 0x30, el]:u64
000162b4: R29 := mem[R31, el]:u64
000162b8: R30 := mem[R31 + 8, el]:u64
000162bb: R31 := R31 + 0x60
000162c0: call R30 with noreturn

00038993: sub so_recvln(so_recvln_result)
00038b7a: so_recvln_result :: out u32 = low:32[R0]

00014b56:
00014b5e: mem := mem with [R31 - 0x70, el]:u64 <- R29
00014b62: mem := mem with [R31 - 0x68, el]:u64 <- R30
00014b65: R31 := R31 - 0x70
00014b6c: R29 := R31
00014b75: mem := mem with [R31, el]:u64 <- R31 + 0x80
00014b79: mem := mem with [R31, el]:u64 <- R31 + 0x88
00014b7f: R25 := 0x27000
00014b87: R3 := mem[R25 + 0xFB8, el]:u64
00014b90: mem := mem with [R31, el]:u64 <- R31 + 0x20
00014b94: mem := mem with [R31, el]:u64 <- R31 + 0x28
00014b9c: R20 := R2
00014ba4: R4 := mem[R3, el]:u64
00014bac: mem := mem with [R31 + 0x68, el]:u64 <- R4
00014bb2: R4 := 0
00014bbb: R2 := pad:64[mem[R2, el]:u32]
00014bc4: mem := mem with [R31, el]:u64 <- R31 + 0x40
00014bc8: mem := mem with [R31, el]:u64 <- R31 + 0x48
00014bd0: R21 := R1
00014bd7: #5202 := 0xFFFFFFFFFFFFFFFF + extend:64[31:0[R2]]
00014bdb: NF := 63:63[#5202]
00014bde: VF := 31:31[R2] & ~63:63[#5202]
00014be1: ZF := #5202 = 0
00014be4: CF := 31:31[R2] | 31:31[R2] & ~63:63[#5202] | ~63:63[#5202]
00014bf0: mem := mem with [R31, el]:u64 <- R31 + 0xA0
00014bf4: mem := mem with [R31, el]:u64 <- R31 + 0xA8
00014bfc: mem := mem with [R31 + 0x67] <- 0
00014c0a: #5205 := (NF <> VF | ZF) <> 0
00014c04: when #5205 goto %00014c02
000389a2: goto %0001613b

00014c02:
00014c10: R27 := 0
00014c17: R19 := 1
00014c1c: goto %00014c1a

0001613b:
00016142: mem := mem with [R31, el]:u64 <- R31 + 0x60
00016146: mem := mem with [R31, el]:u64 <- R31 + 0x68
0001614c: R24 := 0x27000
00016152: R26 := 0x12000
0001615a: R24 := mem[R24 + 0xF78, el]:u64
00016163: R22 := 31:0[R0]
0001616a: R26 := R26 + 0x4D0
00016171: R23 := R31 + 0x67
00016177: R27 := 1
0001617b: goto %0001600c

0001600c:
00016012: R1 := R23
0001601b: R0 := 31:0[R22]
00016021: R2 := 1
00016026: R30 := 0xACCC
00016029: call @read with return %0001602b

0001602b:
00016030: R1 := R27 - 1
00016037: #5785 := extend:64[31:0[R0]]
0001603b: NF := 63:63[#5785]
0001603e: VF := 31:31[R0] & ~63:63[#5785]
00016041: ZF := #5785 = 0
00016044: CF := 31:31[R0] | 31:31[R0] & ~63:63[#5785] | ~63:63[#5785]
00016050: R19 := 31:0[R0]
0001605e: #5790 := (NF <> VF | ZF) <> 0
00016058: when #5790 goto %00016056
000389a1: goto %00016079

00016056:
00016066: R27 := R1
0001606f: R23 := mem[R31 + 0x30, el]:u64
00016073: R24 := mem[R31 + 0x38, el]:u64
00016077: goto %00014c1a

00016079:
0001607f: R2 := mem[R21, el]:u64
00016088: R28 := 31:0[R27]
00016091: R0 := pad:64[mem[R31 + 0x67]]
0001609a: #5798 := 0xFFFFFFFFFFFFFFF6 + extend:64[31:0[R0]]
0001609e: NF := 63:63[#5798]
000160a1: VF := 31:31[R0] & ~63:63[#5798]
000160a4: ZF := #5798 = 0
000160a7: CF := 31:31[R0] | 31:31[R0] & ~63:63[#5798] | ~63:63[#5798]
000160b3: R3 := pad:64[mem[R20, el]:u32]
000160bb: R0 := extend:64[31:0[R3]] - 1
000160e7: #5800 := ~ZF <> 0
000160e8: goto %000160df

000160df:
000160e1: when #5800 goto %000160c2
000160e2: goto %000160d3

000160d3:
000160d4: NF := 0
000160d7: ZF := 0
000160da: CF := 0
000160dd: VF := 0
000160e4: goto %000160e0

000160c2:
000160c3: #5801 := ~31:0[R27]
000160c8: NF := 63:63[extend:64[31:0[R0]] + extend:64[#5801] + 1]
000160cb: VF := 31:31[R0] & 31:31[#5801] & ~63:63[extend:64[31:0[R0]] +
          extend:64[#5801] + 1] | ~31:31[R0] & ~31:31[#5801] &
          63:63[extend:64[31:0[R0]] + extend:64[#5801] + 1]
000160ce: ZF := extend:64[31:0[R0]] + extend:64[#5801] + 1 = 0
000160d1: CF := 31:31[R0] & 31:31[#5801] | 31:31[#5801] &
          ~63:63[extend:64[31:0[R0]] + extend:64[#5801] + 1] | 31:31[R0] &
          ~63:63[extend:64[31:0[R0]] + extend:64[#5801] + 1]
000160e3: goto %000160e0

000160e0:
000160f5: #5803 := ~ZF <> 0
000160ef: when #5803 goto %000160ed
000389a0: goto %0001611c

0001611c:
00016123: R0 := pad:64[mem[R24, el]:u32]
0001612b: R3 := 31:0[R3] << 0x21
00016136: #5812 := ~31:0[R0] = 0
00016130: when #5812 goto %00015f0f
0003899f: goto %00015f40

00015f0f:
00015f16: R2 := 31:0[R22]
00015f1e: R1 := R26
00015f25: R0 := 1
00015f2a: R30 := 0xAD88
00015f2c: call @__printf_chk with return %00015f2e

00015f2e:
00015f35: R3 := pad:64[mem[R20, el]:u32]
00015f3d: R3 := 31:0[R3] << 0x21
00015f42: goto %00015f40

00015f40:
00015f49: R0 := mem[R21, el]:u64
00015f51: mem := mem with [R20, el]:u32 <- 31:0[R3]
00015f58: R1 := extend:64[31:0[R3]]
00015f5d: R30 := 0xAD1C
00015f60: call @realloc with return %00015f62

00015f62:
00015f6c: #5763 := R0 = 0
00015f66: when #5763 goto %00015f64
0003899e: goto %00015f86

00015f64:
00015f73: R19 := 0xFFFFFFFFFFFFFFFF
00015f7c: R23 := mem[R31 + 0x30, el]:u64
00015f80: R24 := mem[R31 + 0x38, el]:u64
00015f84: goto %00014c27

00015f86:
00015f8d: R1 := pad:64[mem[R20, el]:u32]
00015f95: mem := mem with [R21, el]:u64 <- R0
00015f9d: R0 := extend:64[31:0[R1]] - 1
00015fa5: #5769 := 1 + extend:64[~31:0[R0]] + extend:64[31:0[R28]]
00015fa9: NF := 63:63[#5769]
00015fac: VF := 31:31[~31:0[R0]] & 31:31[R28] & ~63:63[#5769] |
          ~31:31[~31:0[R0]] & ~31:31[R28] & 63:63[#5769]
00015faf: ZF := #5769 = 0
00015fb2: CF := 31:31[~31:0[R0]] & 31:31[R28] | 31:31[R28] & ~63:63[#5769] |
          31:31[~31:0[R0]] & ~63:63[#5769]
00015fc2: #5771 := NF <> VF
00015fbc: when #5771 goto %00015fba
0003899d: goto %00016139

00016139:
0003899c: goto %00015fed

000160ed:
000160fd: #5807 := 1 + extend:64[~31:0[R0]] + extend:64[31:0[R28]]
00016101: NF := 63:63[#5807]
00016104: VF := 31:31[~31:0[R0]] & 31:31[R28] & ~63:63[#5807] |
          ~31:31[~31:0[R0]] & ~31:31[R28] & 63:63[#5807]
00016107: ZF := #5807 = 0
0001610a: CF := 31:31[~31:0[R0]] & 31:31[R28] | 31:31[R28] & ~63:63[#5807] |
          31:31[~31:0[R0]] & ~63:63[#5807]
00016119: #5809 := NF = VF
00016113: when #5809 goto %00015fed
0003899b: goto %00015fba

00015fba:
00015fcb: R0 := pad:64[mem[R31 + 0x67]]
00015fd2: R1 := R27 + 1
00015fd9: #5772 := 0xFFFFFFFFFFFFFFF6 + extend:64[31:0[R0]]
00015fdd: NF := 63:63[#5772]
00015fe0: VF := 31:31[R0] & ~63:63[#5772]
00015fe3: ZF := #5772 = 0
00015fe6: CF := 31:31[R0] | 31:31[R0] & ~63:63[#5772] | ~63:63[#5772]
00015ff5: #5774 := ZF
00015fef: when #5774 goto %00015fed
0003899a: goto %00016004

00015fed:
00015ffe: R23 := mem[R31 + 0x30, el]:u64
00016002: R24 := mem[R31 + 0x38, el]:u64
00038999: goto %00014c1a

00014c1a:
00014c23: R0 := mem[R21, el]:u64
00038998: goto %00014c27

00014c27:
00014c2d: R25 := mem[R25 + 0xFB8, el]:u64
00014c35: R0 := mem[R31 + 0x68, el]:u64
00014c3d: R1 := mem[R25, el]:u64
00014c45: #5209 := 1 + ~R1 + R0
00014c49: NF := 63:63[#5209]
00014c4c: VF := 63:63[R0] & 63:63[~R1] & ~63:63[#5209] | ~63:63[R0] &
          ~63:63[~R1] & 63:63[#5209]
00014c4f: ZF := #5209 = 0
00014c52: CF := 63:63[R0] & 63:63[~R1] | 63:63[~R1] & ~63:63[#5209] |
          63:63[R0] & ~63:63[#5209]
00014c56: R0 := #5209
00014c5c: R1 := 0
00014c68: #5211 := ~ZF <> 0
00014c62: when #5211 goto %00014c60
00038997: goto %00015ebc

00014c60:
00014c71: mem := mem with [R31, el]:u64 <- R31 + 0x60
00014c75: mem := mem with [R31, el]:u64 <- R31 + 0x68
00014c7a: R30 := 0xADC0
00014c7c: call @__stack_chk_fail with return %00038995

00038995:
00038996: call @acl_add with noreturn

00015ebc:
00015ec3: R0 := 31:0[R19]
00015ecc: R19 := mem[R31 + 0x10, el]:u64
00015ed0: R20 := mem[R31 + 0x18, el]:u64
00015ed9: R21 := mem[R31 + 0x20, el]:u64
00015edd: R22 := mem[R31 + 0x28, el]:u64
00015ee6: R25 := mem[R31 + 0x40, el]:u64
00015eea: R26 := mem[R31 + 0x48, el]:u64
00015ef3: R27 := mem[R31 + 0x50, el]:u64
00015ef7: R28 := mem[R31 + 0x58, el]:u64
00015f01: R29 := mem[R31, el]:u64
00015f05: R30 := mem[R31 + 8, el]:u64
00015f08: R31 := R31 + 0x70
00015f0d: call R30 with noreturn

00016004:
0001600a: R27 := R1
00038994: goto %0001600c

000389a3: sub so_recvtest(so_recvtest_result)
00038b7b: so_recvtest_result :: out u32 = low:32[R0]

00014934:
0001493c: mem := mem with [R31 - 0x30, el]:u64 <- R29
00014940: mem := mem with [R31 - 0x28, el]:u64 <- R30
00014943: R31 := R31 - 0x30
00014949: R2 := 1
00014950: R3 := 0x42
00014957: R29 := R31
0001495f: mem := mem with [R31 + 0x10, el]:u64 <- R19
00014965: R19 := 0x27000
0001496c: R1 := R31 + 0x27
00014974: R19 := mem[R19 + 0xFB8, el]:u64
0001497c: R4 := mem[R19, el]:u64
00014984: mem := mem with [R31 + 0x28, el]:u64 <- R4
0001498a: R4 := 0
0001498f: R30 := 0xAB20
00014992: call @recv with return %00014994

00014994:
0001499a: R1 := mem[R31 + 0x28, el]:u64
000149a2: R2 := mem[R19, el]:u64
000149aa: #5165 := 1 + ~R2 + R1
000149ae: NF := 63:63[#5165]
000149b1: VF := 63:63[R1] & 63:63[~R2] & ~63:63[#5165] | ~63:63[R1] &
          ~63:63[~R2] & 63:63[#5165]
000149b4: ZF := #5165 = 0
000149b7: CF := 63:63[R1] & 63:63[~R2] | 63:63[~R2] & ~63:63[#5165] |
          63:63[R1] & ~63:63[#5165]
000149bb: R1 := #5165
000149c1: R2 := 0
000149cd: #5167 := ~ZF <> 0
000149c7: when #5167 goto %000149c5
000389a5: goto %00016263

000149c5:
000149d2: R30 := 0xAB44
000149d4: call @__stack_chk_fail with return %000149d6

000149d6:
000389a4: call @so_dataready with noreturn

00016263:
00016269: R19 := mem[R31 + 0x10, el]:u64
00016273: R29 := mem[R31, el]:u64
00016277: R30 := mem[R31 + 8, el]:u64
0001627a: R31 := R31 + 0x30
0001627f: call R30 with noreturn

000389a6: sub so_resolv(so_resolv_result)
00038b7c: so_resolv_result :: out u32 = low:32[R0]

0001456f:
00014577: mem := mem with [R31 - 0x80, el]:u64 <- R29
0001457b: mem := mem with [R31 - 0x78, el]:u64 <- R30
0001457e: R31 := R31 - 0x80
00014584: R2 := 0x12000
0001458b: R29 := R31
00014594: mem := mem with [R31, el]:u64 <- R31 + 0x40
00014598: mem := mem with [R31, el]:u64 <- R31 + 0x48
0001459e: R22 := 0x27000
000145a6: R21 := R1
000145ae: R1 := mem[R22 + 0xFB8, el]:u64
000145b7: mem := mem with [R31, el]:u64 <- R31 + 0x90
000145bb: mem := mem with [R31, el]:u64 <- R31 + 0x98
000145c5: R2 := mem[R1, el]:u64
000145cd: mem := mem with [R31 + 0x78, el]:u64 <- R2
000145d3: R2 := 0
000145da: R3 := R31 + 0x40
000145e1: R2 := R31 + 0x48
000145e7: R1 := 0
000145f0: mem := mem with [R31, el]:u64 <- R31 + 0x20
000145f4: mem := mem with [R31, el]:u64 <- R31 + 0x28
000145fc: R19 := R0
00014604: R0 := R21
0001460f: mem := mem with [R31, el]:u64 <- R31 + 0xB0
00014613: mem := mem with [R31, el]:u64 <- R31 + 0xB8
0001461c: mem := mem with [R31, el]:u64 <- R31 + 0xD0
00014620: mem := mem with [R31, el]:u64 <- R31 + 0xD8
00014625: R30 := 0xA658
00014628: call @getaddrinfo with return %0001462a

0001462a:
00014634: #5094 := ~31:0[R0] = 0
0001462e: when #5094 goto %0001462c
000389ba: goto %000168d0

0001462c:
0001463a: R1 := 0x27000
00014642: R1 := mem[R1 + 0xF78, el]:u64
0001464b: R1 := pad:64[mem[R1, el]:u32]
00014657: #5095 := ~31:0[R1] = 0
00014651: when #5095 goto %0001464f
000389b9: goto %000146a6

0001464f:
00014660: R20 := 31:0[R0]
00014665: R30 := 0xA7AC
00014668: call @gai_strerror with return %0001466a

0001466a:
00014671: R4 := 31:0[R20]
00014679: R3 := R0
00014681: R2 := R21
00014687: R1 := 0x12000
0001468e: R0 := 1
00014695: R1 := R1 + 0x3D8
0001469a: R30 := 0xA7C8
0001469c: call @__printf_chk with return %0001469e

0001469e:
000146a3: R1 := 0
000146a8: goto %000146a6

000168d0:
000168d4: R20 := 0x27000
000168dc: R0 := mem[R20 + 0xF78, el]:u64
000168e5: R0 := pad:64[mem[R0, el]:u32]
000168f0: #5975 := ~31:0[R0] = 0
000168ea: when #5975 goto %00016823
000389b8: goto %00016847

00016823:
00016829: R2 := R21
0001682f: R1 := 0x12000
00016836: R0 := 1
0001683d: R1 := R1 + 0x3F8
00016842: R30 := 0xA74C
00016844: call @__printf_chk with return %00016846

00016846:
00016849: goto %00016847

00016847:
00016850: R21 := mem[R31 + 0x40, el]:u64
0001685b: #5968 := R21 = 0
00016855: when #5968 goto %000166ee
000389b7: goto %0001685e

0001685e:
00016864: R0 := mem[R21 + 0x18, el]:u64
0001686c: mem := mem with [R31 + 0x30, el]:u64 <- R23
00016877: #5970 := R0 = 0
00016871: when #5970 goto %000166c2
000389b6: goto %0001687a

0001687a:
00016880: R23 := mem[R20 + 0xF78, el]:u64
00016889: R1 := pad:64[mem[R0 + 4, el]:u32]
00016891: mem := mem with [R19, el]:u32 <- 31:0[R1]
0001689a: R2 := pad:64[mem[R23, el]:u32]
000168a5: #5972 := ~31:0[R2] = 0
0001689f: when #5972 goto %0001670b
000389b5: goto %000168a8

0001670b:
00016712: R0 := pad:64[mem[R0 + 4, el]:u32]
00016717: R30 := 0xA70C
00016719: call @inet_ntoa with return %0001671b

0001671b:
00016721: R2 := R0
00016727: R1 := 0x12000
0001672e: R0 := 1
00016735: R1 := R1 + 0x408
0001673a: R30 := 0xA720
0001673c: call @__printf_chk with return %0001673e

0001673e:
00016744: R19 := mem[R21 + 0x28, el]:u64
00016750: #5952 := R19 = 0
0001674a: when #5952 goto %00016748
000389b4: goto %00016762

00016762:
00016768: R0 := mem[R19 + 0x18, el]:u64
00016773: #5953 := R0 = 0
0001676d: when #5953 goto %000166ba
000389b3: goto %00016776

00016776:
0001677d: R2 := pad:64[mem[R23, el]:u32]
00016782: goto %00016780

000168a8:
000168ae: R19 := mem[R21 + 0x28, el]:u64
000168b9: #5973 := R19 = 0
000168b3: when #5973 goto %000166e5
000389b2: goto %000168bc

000166e5:
000166eb: R23 := mem[R31 + 0x30, el]:u64
000166f0: goto %000166ee

000168bc:
000168c2: R0 := mem[R19 + 0x18, el]:u64
000168cd: #5974 := R0 = 0
000168c7: when #5974 goto %000166c2
000389b1: goto %00016780

00016780:
00016787: R1 := 0x12000
0001678e: R21 := R1 + 0x418
00016796: R20 := mem[R20 + 0xF78, el]:u64
000167a2: #5954 := ~31:0[R2] = 0
0001679c: when #5954 goto %0001679a
000389b0: goto %00016805

00016805:
00016815: R19 := mem[R19 + 0x28, el]:u64
00016820: #5964 := R19 = 0
0001681a: when #5964 goto %00016748
000389af: goto %000167dc

000167dc:
000167ec: R0 := mem[R19 + 0x18, el]:u64
000167f7: #5962 := R0 = 0
000167f1: when #5962 goto %000166ba
000389ae: goto %000167fa

000166ba:
000166c0: R21 := mem[R31 + 0x40, el]:u64
000389ad: goto %000166c2

000166c2:
000166c8: R0 := R21
000166cd: R30 := 0xA798
000166d0: call @freeaddrinfo with return %000166d2

000166d2:
000166d7: R1 := 0
000166df: R23 := mem[R31 + 0x30, el]:u64
000166e3: goto %000146a6

000167fa:
00016801: R2 := pad:64[mem[R20, el]:u32]
0001680d: #5963 := 31:0[R2] = 0
00016807: when #5963 goto %00016805
000389ac: goto %0001679a

0001679a:
000167ab: R0 := pad:64[mem[R0 + 4, el]:u32]
000167b0: R30 := 0xA6D4
000167b2: call @inet_ntoa with return %000167b4

000167b4:
000167ba: R2 := R0
000167c2: R1 := R21
000167c9: R0 := 1
000167ce: R30 := 0xA6E4
000167d0: call @__printf_chk with return %000167d2

000167d2:
000167d8: R19 := mem[R19 + 0x28, el]:u64
000167e4: #5961 := ~R19 = 0
000167de: when #5961 goto %000167dc
000389ab: goto %00016748

00016748:
00016758: R23 := mem[R31 + 0x30, el]:u64
00016760: R21 := mem[R31 + 0x40, el]:u64
000389aa: goto %000166ee

000166ee:
000166f7: R0 := R21
000166fc: R30 := 0xA6FC
000166fe: call @freeaddrinfo with return %00016700

00016700:
00016705: R1 := 1
00016709: goto %000146a6

000146a6:
000146af: R22 := mem[R22 + 0xFB8, el]:u64
000146b7: R0 := mem[R31 + 0x78, el]:u64
000146bf: R2 := mem[R22, el]:u64
000146c7: #5111 := 1 + ~R2 + R0
000146cb: NF := 63:63[#5111]
000146ce: VF := 63:63[R0] & 63:63[~R2] & ~63:63[#5111] | ~63:63[R0] &
          ~63:63[~R2] & 63:63[#5111]
000146d1: ZF := #5111 = 0
000146d4: CF := 63:63[R0] & 63:63[~R2] | 63:63[~R2] & ~63:63[#5111] |
          63:63[R0] & ~63:63[#5111]
000146d8: R0 := #5111
000146de: R2 := 0
000146ea: #5113 := ~ZF <> 0
000146e4: when #5113 goto %000146e2
000389a9: goto %00016681

000146e2:
000146f2: mem := mem with [R31 + 0x30, el]:u64 <- R23
000146f7: R30 := 0xA7E0
000146f9: call @__stack_chk_fail with return %000389a7

000389a7:
000389a8: call @so_connect with noreturn

00016681:
00016688: R0 := 31:0[R1]
00016691: R19 := mem[R31 + 0x10, el]:u64
00016695: R20 := mem[R31 + 0x18, el]:u64
0001669e: R21 := mem[R31 + 0x20, el]:u64
000166a2: R22 := mem[R31 + 0x28, el]:u64
000166ac: R29 := mem[R31, el]:u64
000166b0: R30 := mem[R31 + 8, el]:u64
000166b3: R31 := R31 + 0x80
000166b8: call R30 with noreturn

000389bb: sub socket(socket_domain, socket_type, socket_protocol, socket_result)
00038b7d: socket_domain :: in u32 = low:32[R0]
00038b7e: socket_type :: in u32 = low:32[R1]
00038b7f: socket_protocol :: in u32 = low:32[R2]
00038b80: socket_result :: out u32 = low:32[R0]

0001477c:
000306e1: R16 := 0x27000
000306e9: R17 := mem[R16 + 0xE90, el]:u64
000306f0: R16 := R16 + 0xE90
000306f5: call R17 with noreturn

000389bc: sub socks5_thread(socks5_thread_result)
00038b81: socks5_thread_result :: out u32 = low:32[R0]

000218a3:
000218ab: mem := mem with [R31 - 0x80, el]:u64 <- R29
000218af: mem := mem with [R31 - 0x78, el]:u64 <- R30
000218b2: R31 := R31 - 0x80
000218b9: R29 := R31
000218c2: mem := mem with [R31, el]:u64 <- R31 + 0x80
000218c6: mem := mem with [R31, el]:u64 <- R31 + 0x88
000218cc: R26 := 0x28000
000218d3: R1 := R26 + 0x4D8
000218dc: mem := mem with [R31, el]:u64 <- R31 + 0x20
000218e0: mem := mem with [R31, el]:u64 <- R31 + 0x28
000218e6: R20 := 0x27000
000218ee: R19 := R0
000218f6: R0 := mem[R1 + 0x60, el]:u64
000218ff: mem := mem with [R31, el]:u64 <- R31 + 0x40
00021903: mem := mem with [R31, el]:u64 <- R31 + 0x48
0002190b: R1 := mem[R20 + 0xFB8, el]:u64
00021914: mem := mem with [R31, el]:u64 <- R31 + 0x60
00021918: mem := mem with [R31, el]:u64 <- R31 + 0x68
00021920: R2 := mem[R1, el]:u64
00021928: mem := mem with [R31 + 0x78, el]:u64 <- R2
0002192e: R2 := 0
00021937: mem := mem with [R31, el]:u64 <- R31 + 0xA0
0002193b: mem := mem with [R31, el]:u64 <- R31 + 0xA8
00021940: R30 := 0x10FEC
00021942: call @hlist_count with return %00021944

00021944:
0002194b: R23 := pad:64[mem[R19, el]:u32]
00021953: R1 := mem[R19 + 0x10, el]:u64
0002195c: R24 := 31:0[R0]
00021964: R0 := R19
0002196c: mem := mem with [R31 + 0x68, el]:u64 <- R1
00021971: R30 := 0x11004
00021973: call @free with return %00021975

00021975:
00021979: R0 := 0xA
0002197e: R30 := 0x1100C
00021980: call @new with return %00021982

00021982:
00021988: R19 := R0
0002198e: R0 := 0x32
00021993: R30 := 0x11018
00021995: call @new with return %00021997

00021997:
0002199d: R21 := R0
000219a3: R0 := 0x32
000219a8: R30 := 0x11024
000219aa: call @new with return %000219ac

000219ac:
000219b2: R1 := R19
000219ba: R22 := R0
000219c0: R2 := 2
000219c9: R0 := 31:0[R23]
000219ce: R30 := 0x11038
000219d0: call @read with return %000219d2

000219d2:
000219d7: #12327 := 0xFFFFFFFFFFFFFFFE + extend:64[31:0[R0]]
000219db: NF := 63:63[#12327]
000219de: VF := 31:31[R0] & ~63:63[#12327]
000219e1: ZF := #12327 = 0
000219e4: CF := 31:31[R0] | 31:31[R0] & ~63:63[#12327] | ~63:63[#12327]
000219f3: #12329 := ~ZF <> 0
000219ed: when #12329 goto %000219eb
000389e5: goto %0002270f

000219eb:
000219fa: R27 := 0xFFFFFFFFFFFFFFFF
00021a00: R25 := 0
00021a05: goto %00021a03

0002270f:
00022716: R0 := pad:64[mem[R19]]
0002271d: R27 := 0xFFFFFFFFFFFFFFFF
00022723: R25 := 0
0002272a: #12815 := 0xFFFFFFFFFFFFFFFB + extend:64[31:0[R0]]
0002272e: NF := 63:63[#12815]
00022731: VF := 31:31[R0] & ~63:63[#12815]
00022734: ZF := #12815 = 0
00022737: CF := 31:31[R0] | 31:31[R0] & ~63:63[#12815] | ~63:63[#12815]
00022745: #12817 := ZF
0002273f: when #12817 goto %0002259d
000389e4: goto %00021a03

0002259d:
000225a4: R0 := pad:64[mem[R19 + 1]]
000225ac: mem := mem with [R31 + 0x74, el]:u32 <- 31:0[R0]
000225b4: R0 := extend:64[31:0[R0]] + 1
000225bb: R0 := extend:64[31:0[R0]]
000225c0: R30 := 0x110F4
000225c2: call @new with return %000225c4

000225c4:
000225ca: R2 := extend:64[mem[R31 + 0x74, el]:u32]
000225d2: R28 := R0
000225da: R1 := R28
000225e3: R0 := 31:0[R23]
000225e8: R30 := 0x11108
000225ea: call @read with return %000225ec

000225ec:
000225f3: R2 := pad:64[mem[R31 + 0x74, el]:u32]
000225fb: #12777 := 1 + extend:64[~31:0[R0]] + extend:64[31:0[R2]]
000225ff: NF := 63:63[#12777]
00022602: VF := 31:31[~31:0[R0]] & 31:31[R2] & ~63:63[#12777] |
          ~31:31[~31:0[R0]] & ~31:31[R2] & 63:63[#12777]
00022605: ZF := #12777 = 0
00022608: CF := 31:31[~31:0[R0]] & 31:31[R2] | 31:31[R2] & ~63:63[#12777] |
          31:31[~31:0[R0]] & ~63:63[#12777]
00022616: #12779 := ~ZF <> 0
00022610: when #12779 goto %00021bdc
000389e3: goto %00022619

00022619:
0002261e: #12780 := extend:64[31:0[R2]]
00022622: NF := 63:63[#12780]
00022625: VF := 31:31[R2] & ~63:63[#12780]
00022628: ZF := #12780 = 0
0002262b: CF := 31:31[R2] | 31:31[R2] & ~63:63[#12780] | ~63:63[#12780]
00022639: #12781 := ~31:0[R24] = 0
00022633: when #12781 goto %00021bed
000389e2: goto %0002263c

00021bed:
00021bf1: R0 := 0
00021bff: #12408 := (NF = VF & ~ZF) <> 0
00021bf9: when #12408 goto %00021bf7
000389e1: goto %00022354

00022354:
00022356: goto %00021c50

0002263c:
00022647: #12783 := (NF <> VF | ZF) <> 0
00022641: when #12783 goto %00021c50
000389e0: goto %0002264a

0002264a:
00022650: R3 := extend:64[31:0[R2]] - 1
00022658: R0 := R28
0002265f: R3 := R3 + 1
00022667: R3 := R3 + R28
0002266c: goto %0002266a

0002266a:
00022674: R1 := pad:64[mem[R0]]
00022680: #12790 := ~31:0[R1] = 0
0002267a: when #12790 goto %00022678
000389df: goto %000226ac

000226ac:
000226b1: R0 := 5
000226bb: R1 := R19
000226c4: R0 := 31:0[R23]
000226ca: R2 := 2
000226cf: R30 := 0x11160
000226d1: call @write with return %00021e4d

00022678:
00022687: R0 := R0 + 1
0002268f: #12794 := 1 + ~R3 + R0
00022693: NF := 63:63[#12794]
00022696: VF := 63:63[R0] & 63:63[~R3] & ~63:63[#12794] | ~63:63[R0] &
          ~63:63[~R3] & 63:63[#12794]
00022699: ZF := #12794 = 0
0002269c: CF := 63:63[R0] & 63:63[~R3] | 63:63[~R3] & ~63:63[#12794] |
          63:63[R0] & ~63:63[#12794]
000226a9: #12796 := ZF
000226a3: when #12796 goto %00021d4a
000389de: goto %0002266a

00021d4a:
00021d4e: R0 := 0
00021d52: goto %00021bf7

00021bf7:
00021c08: R1 := high:32[R1].pad:64[mem[R28 + R0]]
00021c0f: #12409 := 0xFFFFFFFFFFFFFFFE + extend:64[31:0[R1]]
00021c13: NF := 63:63[#12409]
00021c16: VF := 31:31[R1] & ~63:63[#12409]
00021c19: ZF := #12409 = 0
00021c1c: CF := 31:31[R1] | 31:31[R1] & ~63:63[#12409] | ~63:63[#12409]
00021c2b: #12411 := ~ZF <> 0
00021c25: when #12411 goto %00021c23
000389dd: goto %000222c5

000222c5:
000222ca: R0 := 0x205
000222d4: R1 := R19
000222da: R2 := 2
000222e3: R0 := 31:0[R23]
000222e8: R30 := 0x11288
000222ea: call @write with return %000222ec

000222ec:
000222f2: R1 := R19
000222fb: R0 := 31:0[R23]
00022301: R2 := 2
00022306: R30 := 0x11298
00022308: call @read with return %0002230a

0002230a:
0002230f: #12686 := 0xFFFFFFFFFFFFFFFE + extend:64[31:0[R0]]
00022313: NF := 63:63[#12686]
00022316: VF := 31:31[R0] & ~63:63[#12686]
00022319: ZF := #12686 = 0
0002231c: CF := 31:31[R0] | 31:31[R0] & ~63:63[#12686] | ~63:63[#12686]
0002232a: #12688 := ZF
00022324: when #12688 goto %00021c92
000389dc: goto %0002232d

00021c92:
00021c99: R0 := pad:64[mem[R19 + 1]]
00021ca1: mem := mem with [R31 + 0x74, el]:u32 <- 31:0[R0]
00021ca9: R0 := extend:64[31:0[R0]] + 1
00021cb0: R0 := extend:64[31:0[R0]]
00021cb5: R30 := 0x11304
00021cb7: call @new with return %00021cb9

00021cb9:
00021cc0: R2 := pad:64[mem[R31 + 0x74, el]:u32]
00021cc8: R24 := R0
00021cd0: R1 := R24
00021cd9: R0 := 31:0[R23]
00021ce1: R2 := extend:64[31:0[R2]] + 1
00021ce8: R2 := extend:64[31:0[R2]]
00021ced: R30 := 0x11320
00021cef: call @read with return %00021cf1

00021cf1:
00021cf8: R1 := pad:64[mem[R31 + 0x74, el]:u32]
00021d00: R2 := extend:64[31:0[R1]] + 1
00021d08: #12439 := 1 + extend:64[~31:0[R0]] + extend:64[31:0[R2]]
00021d0c: NF := 63:63[#12439]
00021d0f: VF := 31:31[~31:0[R0]] & 31:31[R2] & ~63:63[#12439] |
          ~31:31[~31:0[R0]] & ~31:31[R2] & 63:63[#12439]
00021d12: ZF := #12439 = 0
00021d15: CF := 31:31[~31:0[R0]] & 31:31[R2] | 31:31[R2] & ~63:63[#12439] |
          31:31[~31:0[R0]] & ~63:63[#12439]
00021d24: #12441 := ~ZF <> 0
00021d1e: when #12441 goto %00021d1c
000389db: goto %0002223f

0002223f:
00022249: R0 := extend:64[31:0[R2]] + 1
00022251: mem := mem with [R31 + 0x74, el]:u32 <- 31:0[R2]
00022258: R0 := extend:64[31:0[R0]]
0002225d: R30 := 0x11348
0002225f: call @new with return %00022261

00022261:
00022267: R2 := extend:64[mem[R31 + 0x74, el]:u32]
0002226f: R25 := R0
00022277: R1 := R25
00022280: R0 := 31:0[R23]
00022285: R30 := 0x1135C
00022287: call @read with return %00022289

00022289:
00022290: R1 := pad:64[mem[R31 + 0x74, el]:u32]
00022298: #12668 := 1 + extend:64[~31:0[R0]] + extend:64[31:0[R1]]
0002229c: NF := 63:63[#12668]
0002229f: VF := 31:31[~31:0[R0]] & 31:31[R1] & ~63:63[#12668] |
          ~31:31[~31:0[R0]] & ~31:31[R1] & 63:63[#12668]
000222a2: ZF := #12668 = 0
000222a5: CF := 31:31[~31:0[R0]] & 31:31[R1] | 31:31[R1] & ~63:63[#12668] |
          31:31[~31:0[R0]] & ~63:63[#12668]
000222b3: #12670 := ZF
000222ad: when #12670 goto %00021da5
000389da: goto %000222b6

00021da5:
00021daa: R27 := R26 + 0x4D8
00021db4: R1 := R24
00021dbc: R0 := mem[R27 + 0x60, el]:u64
00021dc1: R30 := 0x113C4
00021dc3: call @hlist_get with return %00021dc5

00021dc5:
00021dcb: R26 := R0
00021dd3: R0 := mem[R27 + 0x60, el]:u64
00021dd8: R30 := 0x113D0
00021dda: call @hlist_count with return %00021ddc

00021ddc:
00021de1: R3 := 0
00021ded: #12462 := 31:0[R0] = 0
00021de7: when #12462 goto %00021de5
000389d9: goto %000221db

000221db:
000221e0: R3 := 0xFF
000221eb: #12622 := R26 = 0
000221e5: when #12622 goto %00021de5
000389d8: goto %000221ee

000221ee:
000221f4: R0 := R26
000221fc: R1 := R25
00022201: R30 := 0x113EC
00022204: call @strcmp with return %00022206

00022206:
0002220b: #12629 := extend:64[31:0[R0]]
0002220f: NF := 63:63[#12629]
00022212: VF := 31:31[R0] & ~63:63[#12629]
00022215: ZF := #12629 = 0
00022218: CF := 31:31[R0] | 31:31[R0] & ~63:63[#12629] | ~63:63[#12629]
00022233: #12631 := ZF
00022234: goto %0002222b

0002222b:
0002222d: when #12631 goto %00022224
0002222e: goto %00022228

00022228:
00022229: R3 := 0xFFFFFFFF
00022230: goto %0002222c

00022224:
00022225: R3 := 0
0002222f: goto %0002222c

0002222c:
0002223d: R3 := 31:0[R3] & 0xFF
000389d7: goto %00021de5

00021de5:
00021df5: R1 := R19
00021dfc: R0 := 1
00021e04: mem := mem with [R19] <- low:8[31:0[R0]]
00021e0a: R2 := 2
00021e12: mem := mem with [R19 + 1] <- low:8[31:0[R3]]
00021e1b: R0 := 31:0[R23]
00021e20: R30 := 0x11414
00021e22: call @write with return %00021e24

00021e24:
00021e2a: R0 := R25
00021e2f: R30 := 0x1141C
00021e31: call @free with return %00021e33

00021e33:
00021e39: R0 := R24
00021e3e: R30 := 0x11424
00021e40: call @free with return %00021e42

00021e42:
00021e49: R0 := pad:64[mem[R19 + 1]]
00021e55: #12475 := 31:0[R0] = 0
00021e4f: when #12475 goto %00021e4d
000389d6: goto %000221d7

000221d7:
000221d9: goto %00021d36

00021e4d:
00021e5d: R1 := R19
00021e66: R0 := 31:0[R23]
00021e6c: R2 := 4
00021e71: R30 := 0x11170
00021e73: call @read with return %00021e75

00021e75:
00021e7b: R1 := R0
00021e82: #12485 := 0xFFFFFFFFFFFFFFFC + extend:64[31:0[R0]]
00021e86: NF := 63:63[#12485]
00021e89: VF := 31:31[R0] & ~63:63[#12485]
00021e8c: ZF := #12485 = 0
00021e8f: CF := 31:31[R0] | 31:31[R0] & ~63:63[#12485] | ~63:63[#12485]
00021e9d: #12487 := ~ZF <> 0
00021e97: when #12487 goto %00021bdc
000389d5: goto %00021ea0

00021ea0:
00021ea7: R0 := pad:64[mem[R19 + 1]]
00021eae: #12488 := 0xFFFFFFFFFFFFFFFF + extend:64[31:0[R0]]
00021eb2: NF := 63:63[#12488]
00021eb5: VF := 31:31[R0] & ~63:63[#12488]
00021eb8: ZF := #12488 = 0
00021ebb: CF := 31:31[R0] | 31:31[R0] & ~63:63[#12488] | ~63:63[#12488]
00021ec9: #12490 := ~ZF <> 0
00021ec3: when #12490 goto %00021d54
000389d4: goto %00021ecc

00021ecc:
00021ed3: R25 := pad:64[mem[R19 + 3]]
00021edb: R0 := 31:0[R25] & 0xFFFFFFFD
00021ee2: #12515 := 0xFFFFFFFFFFFFFFFF + extend:64[31:0[R0]]
00021ee6: NF := 63:63[#12515]
00021ee9: VF := 31:31[R0] & ~63:63[#12515]
00021eec: ZF := #12515 = 0
00021eef: CF := 31:31[R0] | 31:31[R0] & ~63:63[#12515] | ~63:63[#12515]
00021efd: #12517 := ~ZF <> 0
00021ef7: when #12517 goto %00021d54
000389d3: goto %00021f00

00021d54:
00021d5a: R3 := R19
00021d61: R4 := 0x205
00021d68: R4 := high:32[R4].extend:64[31:0[R4]] & 0xFFFFFFFF0000FFFF |
          0x1000000
00021d70: R1 := R19
00021d79: R0 := 31:0[R23]
00021d7f: R2 := 0xA
00021d88: R27 := 0xFFFFFFFFFFFFFFFF
00021d90: mem := mem with [R19 + 4, el]:u32 <- 0
00021d96: R25 := 0
00021d9d: R30 := 0x113AC
00021d9f: call @write with return %00021da1

00021da1:
00021da3: goto %00021bb3

00021f00:
00021f05: #12518 := 0xFFFFFFFFFFFFFFFF + extend:64[31:0[R25]]
00021f09: NF := 63:63[#12518]
00021f0c: VF := 31:31[R25] & ~63:63[#12518]
00021f0f: ZF := #12518 = 0
00021f12: CF := 31:31[R25] | 31:31[R25] & ~63:63[#12518] | ~63:63[#12518]
00021f21: #12520 := ZF
00021f1b: when #12520 goto %00021f19
000389d2: goto %000220a1

00021f19:
00021f27: R0 := 0xF
00021f2f: mem := mem with [R31 + 0x74, el]:u32 <- 31:0[R1]
00021f34: R30 := 0x1143C
00021f36: call @new with return %00021f38

00021f38:
00021f3e: R1 := R0
00021f46: R2 := extend:64[mem[R31 + 0x74, el]:u32]
00021f4e: R24 := R0
00021f57: R0 := 31:0[R23]
00021f5c: R30 := 0x11450
00021f5e: call @read with return %00021f60

00021f60:
00021f67: R1 := pad:64[mem[R31 + 0x74, el]:u32]
00021f6f: #12534 := 1 + extend:64[~31:0[R0]] + extend:64[31:0[R1]]
00021f73: NF := 63:63[#12534]
00021f76: VF := 31:31[~31:0[R0]] & 31:31[R1] & ~63:63[#12534] |
          ~31:31[~31:0[R0]] & ~31:31[R1] & 63:63[#12534]
00021f79: ZF := #12534 = 0
00021f7c: CF := 31:31[~31:0[R0]] & 31:31[R1] | 31:31[R1] & ~63:63[#12534] |
          31:31[~31:0[R0]] & ~63:63[#12534]
00021f8b: #12536 := ~ZF <> 0
00021f85: when #12536 goto %00021f83
000389d1: goto %00021f9a

00021f9a:
00021fa0: R3 := 0x14000
00021fa7: R3 := R3 + 0x78
00021fb0: R1 := 31:0[R25]
00021fb9: R7 := pad:64[mem[R24 + 3]]
00021fbf: R2 := 0xFFFFFFFFFFFFFFFF
00021fc8: R6 := pad:64[mem[R24 + 2]]
00021fd0: R0 := R21
00021fd9: R5 := pad:64[mem[R24 + 1]]
00021fe2: R4 := pad:64[mem[R24]]
00021fe7: R30 := 0x11488
00021fe9: call @__sprintf_chk with return %00021feb

00021feb:
00021ff0: R1 := R31 + 0x72
00021ff9: R0 := 31:0[R23]
00021fff: R2 := 2
00022004: R30 := 0x11498
00022006: call @read with return %00022008

00022008:
0002200d: #12546 := 0xFFFFFFFFFFFFFFFE + extend:64[31:0[R0]]
00022011: NF := 63:63[#12546]
00022014: VF := 31:31[R0] & ~63:63[#12546]
00022017: ZF := #12546 = 0
0002201a: CF := 31:31[R0] | 31:31[R0] & ~63:63[#12546] | ~63:63[#12546]
00022029: #12548 := ZF
00022023: when #12548 goto %00022021
000389d0: goto %00022081

00022081:
00022086: R27 := 0xFFFFFFFFFFFFFFFF
0002208c: R25 := 0
00022091: goto %0002208f

000220a1:
000220a6: #12585 := 0xFFFFFFFFFFFFFFFD + extend:64[31:0[R25]]
000220aa: NF := 63:63[#12585]
000220ad: VF := 31:31[R25] & ~63:63[#12585]
000220b0: ZF := #12585 = 0
000220b3: CF := 31:31[R25] | 31:31[R25] & ~63:63[#12585] | ~63:63[#12585]
000220c1: #12587 := ~ZF <> 0
000220bb: when #12587 goto %00021bdc
000389cf: goto %000220c4

000220c4:
000220c9: R1 := R31 + 0x74
000220d2: R0 := 31:0[R23]
000220d8: R2 := 1
000220dd: R30 := 0x111B8
000220df: call @read with return %000220e1

000220e1:
000220e6: #12591 := 0xFFFFFFFFFFFFFFFF + extend:64[31:0[R0]]
000220ea: NF := 63:63[#12591]
000220ed: VF := 31:31[R0] & ~63:63[#12591]
000220f0: ZF := #12591 = 0
000220f3: CF := 31:31[R0] | 31:31[R0] & ~63:63[#12591] | ~63:63[#12591]
00022101: #12593 := ~ZF <> 0
000220fb: when #12593 goto %00021bdc
000389ce: goto %00022104

00021bdc:
00021be1: R27 := 0xFFFFFFFFFFFFFFFF
00021be7: R25 := 0
00021beb: goto %00021bb3

00022104:
0002210b: R0 := pad:64[mem[R31 + 0x74, el]:u32]
00022113: R0 := extend:64[31:0[R0]] + 0xB
0002211a: R0 := extend:64[31:0[R0]]
0002211f: R30 := 0x111D0
00022121: call @new with return %00022123

00022123:
00022129: R2 := extend:64[mem[R31 + 0x74, el]:u32]
00022131: R24 := R0
00022139: R1 := R24
00022142: R0 := 31:0[R23]
00022147: R30 := 0x111E4
00022149: call @read with return %0002214b

0002214b:
00022152: R1 := pad:64[mem[R31 + 0x74, el]:u32]
0002215a: #12607 := 1 + extend:64[~31:0[R0]] + extend:64[31:0[R1]]
0002215e: NF := 63:63[#12607]
00022161: VF := 31:31[~31:0[R0]] & 31:31[R1] & ~63:63[#12607] |
          ~31:31[~31:0[R0]] & ~31:31[R1] & 63:63[#12607]
00022164: ZF := #12607 = 0
00022167: CF := 31:31[~31:0[R0]] & 31:31[R1] | 31:31[R1] & ~63:63[#12607] |
          31:31[~31:0[R0]] & ~63:63[#12607]
00022175: #12609 := ~ZF <> 0
0002216f: when #12609 goto %00021f83
000389cd: goto %00022178

00022178:
0002217e: R2 := 0x32
00022186: R1 := R24
0002218e: R0 := R21
00022193: R30 := 0x11204
00022195: call @strlcpy with return %00022197

00022197:
0002219c: R1 := R31 + 0x72
000221a5: R0 := 31:0[R23]
000221ab: R2 := 2
000221b0: R30 := 0x11214
000221b2: call @read with return %000221b4

000221b4:
000221b9: #12619 := 0xFFFFFFFFFFFFFFFE + extend:64[31:0[R0]]
000221bd: NF := 63:63[#12619]
000221c0: VF := 31:31[R0] & ~63:63[#12619]
000221c3: ZF := #12619 = 0
000221c6: CF := 31:31[R0] | 31:31[R0] & ~63:63[#12619] | ~63:63[#12619]
000221d4: #12621 := ZF
000221ce: when #12621 goto %00022021
000389cc: goto %00021f83

00022021:
00022031: R0 := R21
00022036: R30 := 0x114B4
00022038: call @noproxy_match with return %0002203a

0002203a:
00022043: #12552 := 31:0[R0] = 0
0002203d: when #12552 goto %00021ab0
000389cb: goto %00022046

00022046:
0002204e: R0 := R21
00022054: R25 := 0
0002205e: R1 := 31:0[R1] & 0xFFFF
00022063: R30 := 0x114D0
00022065: call @host_connect with return %00022067

00022067:
0002206e: R27 := 31:0[R0]
00022077: R0 := ~31:0[R0]
0002207f: R0 := pad:64[1:1[R0]]
000389ca: goto %00021b67

00021f83:
00021f92: R27 := 0xFFFFFFFFFFFFFFFF
00021f98: R25 := 0
000389c9: goto %00021bae

000222b6:
000222bc: R0 := R25
000222c1: R30 := 0x11370
000222c3: call @free with return %00021d1c

00021d1c:
00021d2c: R0 := R24
00021d31: R30 := 0x11378
00021d33: call @free with return %00021d35

00021d35:
00021d38: goto %00021d36

0002232d:
00022332: R0 := 0xFFFFFFFFFFFFFF01
0002233c: R1 := R19
00022345: R0 := 31:0[R23]
0002234b: R2 := 2
00022350: R30 := 0x112B8
00022352: call @write with return %00021d36

00021d36:
00021d3e: R27 := 0xFFFFFFFFFFFFFFFF
00021d44: R25 := 0
00021d48: goto %00021bc9

00021c23:
00021c32: R0 := R0 + 1
00021c3a: #12415 := 1 + extend:64[~31:0[R0]] + extend:64[31:0[R2]]
00021c3e: NF := 63:63[#12415]
00021c41: VF := 31:31[~31:0[R0]] & 31:31[R2] & ~63:63[#12415] |
          ~31:31[~31:0[R0]] & ~31:31[R2] & 63:63[#12415]
00021c44: ZF := #12415 = 0
00021c47: CF := 31:31[~31:0[R0]] & 31:31[R2] | 31:31[R2] & ~63:63[#12415] |
          31:31[~31:0[R0]] & ~63:63[#12415]
00021c58: #12417 := (NF <> VF | ZF) <> 0
00021c52: when #12417 goto %00021c50
000389c8: goto %00021bf7

00021c50:
00021c5f: R0 := 0xFFFFFFFFFFFFFF05
00021c69: R1 := R19
00021c72: R0 := 31:0[R23]
00021c78: R2 := 2
00021c7f: R27 := 0xFFFFFFFFFFFFFFFF
00021c85: R25 := 0
00021c8a: R30 := 0x112EC
00021c8c: call @write with return %00021c8e

00021c8e:
00021c90: goto %00021bb3

00021a03:
00021a10: #12330 := R21 = 0
00021a0a: when #12330 goto %00021a08
000389c7: goto %00022700

00022700:
00022706: R0 := R21
0002270b: R30 := 0x11060
0002270d: call @free with return %00021a08

00021a08:
00021a1c: #12331 := R22 = 0
00021a16: when #12331 goto %00021a14
000389c6: goto %000226f1

000226f1:
000226f7: R0 := R22
000226fc: R30 := 0x1106C
000226fe: call @free with return %00021a14

00021a14:
00021a28: #12332 := R19 = 0
00021a22: when #12332 goto %00021a20
000389c5: goto %000226e2

000226e2:
000226e8: R0 := R19
000226ed: R30 := 0x11078
000226ef: call @free with return %00021a20

00021a20:
00021a34: #12333 := R25 = 0
00021a2e: when #12333 goto %00021a2c
000389c4: goto %000226d3

000226d3:
000226d9: R0 := R25
000226de: R30 := 0x11084
000226e0: call @free with return %00021a2c

00021a2c:
00021a40: #12334 := ~31:0[R27] = 0
00021a3a: when #12334 goto %00021a38
000389c3: goto %00021a53

00021a38:
00021a49: R0 := 31:0[R27]
00021a4e: R30 := 0x110DC
00021a50: call @close with return %00021a52

00021a52:
00021a55: goto %00021a53

00021a53:
00021a5d: R0 := 31:0[R23]
00021a62: R30 := 0x11090
00021a64: call @close with return %00021a66

00021a66:
00021a6c: R20 := mem[R20 + 0xFB8, el]:u64
00021a74: R0 := mem[R31 + 0x78, el]:u64
00021a7c: R1 := mem[R20, el]:u64
00021a84: #12344 := 1 + ~R1 + R0
00021a88: NF := 63:63[#12344]
00021a8b: VF := 63:63[R0] & 63:63[~R1] & ~63:63[#12344] | ~63:63[R0] &
          ~63:63[~R1] & 63:63[#12344]
00021a8e: ZF := #12344 = 0
00021a91: CF := 63:63[R0] & 63:63[~R1] | 63:63[~R1] & ~63:63[#12344] |
          63:63[R0] & ~63:63[#12344]
00021a95: R0 := #12344
00021a9b: R1 := 0
00021aa7: #12346 := ~ZF <> 0
00021aa1: when #12346 goto %00021a9f
000389c2: goto %00022540

00021a9f:
00021aac: R30 := 0x11540
00021aae: call @__stack_chk_fail with return %00021ab0

00021ab0:
00021ab6: R3 := 0x13000
00021abd: R3 := R3 + 0x958
00021ac3: R2 := 0xFFFFFFFFFFFFFFFF
00021acc: R1 := 1
00021ad4: R4 := 31:0[R4] & 0xFFFF
00021adc: R0 := R22
00021ae1: R30 := 0x11564
00021ae3: call @__sprintf_chk with return %00021ae5

00021ae5:
00021ae9: R2 := 0x32
00021af1: R0 := R21
00021af7: R1 := 0x12000
00021afe: R1 := R1 + 0x728
00021b03: R30 := 0x11578
00021b05: call @strlcat with return %00021b07

00021b07:
00021b0d: R1 := R22
00021b13: R2 := 0x32
00021b1b: R0 := R21
00021b20: R30 := 0x11588
00021b22: call @strlcat with return %00021b24

00021b24:
00021b27: R30 := 0x1158C
00021b29: call @new_auth with return %00021b2b

00021b2b:
00021b31: R25 := R0
00021b36: R30 := 0x11594
00021b38: call @proxy_connect with return %00021b3a

00021b3a:
00021b41: R27 := 31:0[R0]
00021b4d: #12387 := ~31:31[R0]
00021b47: when #12387 goto %00021b45
000389c1: goto %00022539

00021b45:
00021b55: R2 := R21
00021b5d: R1 := R25
00021b62: R30 := 0x115D0
00021b64: call @prepare_http_connect with return %00021b66

00021b66:
00021b69: goto %00021b67

00021b67:
00021b6f: R3 := R19 + 4
00021b7b: #12394 := 31:0[R0] = 0
00021b75: when #12394 goto %00021b73
000389c0: goto %00022358

00022358:
0002235d: R0 := 5
00022365: R1 := R19
0002236c: R0 := high:32[R0].extend:64[31:0[R0]] & 0xFFFFFFFF0000FFFF |
          0x1000000
00022376: R2 := 0xA
0002237f: R0 := 31:0[R23]
00022384: R30 := 0x11504
00022386: call @write with return %00022388

00022388:
0002238e: R0 := mem[R31 + 0x68, el]:u64
00022395: R0 := R0 >> 0x20
0002239a: R30 := 0x11510
0002239c: call @inet_ntoa with return %0002239e

0002239e:
000223a4: R4 := R21
000223ac: R3 := R0
000223b2: R2 := 0x14000
000223b9: R2 := R2 + 0x68
000223c0: R1 := 1
000223c7: R0 := 7
000223cc: R30 := 0x1152C
000223ce: call @__syslog_chk with return %000223d0

000223d0:
000223d7: R1 := 31:0[R27]
000223e0: R0 := 31:0[R23]
000223e5: R30 := 0x11538
000223e7: call @tunnel with return %000223e9

000223e9:
000223eb: goto %00021bae

00022539:
0002253e: R3 := R19 + 4
000389bf: goto %00021b73

00021b73:
00021b82: R0 := 0x105
00021b8a: R1 := R19
00021b91: R0 := high:32[R0].extend:64[31:0[R0]] & 0xFFFFFFFF0000FFFF |
          0x1000000
00021b9e: R0 := 31:0[R23]
00021ba4: R2 := 0xA
00021ba9: R30 := 0x115C0
00021bab: call @write with return %00021bad

00021bad:
00021bb0: goto %00021bae

00021bae:
00021bbb: #12402 := R24 = 0
00021bb5: when #12402 goto %00021bb3
000389be: goto %0002208f

0002208f:
00022098: R0 := R24
0002209d: R30 := 0x11230
0002209f: call @free with return %00021bb3

00021bb3:
00021bc6: #12403 := R28 = 0
00021bc0: when #12403 goto %00021a03
000389bd: goto %00021bc9

00021bc9:
00021bcf: R0 := R28
00021bd4: R30 := 0x1123C
00021bd6: call @free with return %00021bd8

00021bd8:
00021bda: goto %00021a03

00022540:
00022544: R0 := 0
0002254d: R19 := mem[R31 + 0x10, el]:u64
00022551: R20 := mem[R31 + 0x18, el]:u64
0002255a: R21 := mem[R31 + 0x20, el]:u64
0002255e: R22 := mem[R31 + 0x28, el]:u64
00022567: R23 := mem[R31 + 0x30, el]:u64
0002256b: R24 := mem[R31 + 0x38, el]:u64
00022574: R25 := mem[R31 + 0x40, el]:u64
00022578: R26 := mem[R31 + 0x48, el]:u64
00022581: R27 := mem[R31 + 0x50, el]:u64
00022585: R28 := mem[R31 + 0x58, el]:u64
0002258f: R29 := mem[R31, el]:u64
00022593: R30 := mem[R31 + 8, el]:u64
00022596: R31 := R31 + 0x80
0002259b: call R30 with noreturn

000389e6: sub srandom(srandom_arg1)
00038b82: srandom_arg1 :: in u32 = low:32[R0]

0002c549:
000307c2: R16 := 0x27000
000307ca: R17 := mem[R16 + 0xED8, el]:u64
000307d1: R16 := R16 + 0xED8
000307d6: call R17 with noreturn

000389e7: sub strcasecmp(strcasecmp_s1, strcasecmp_s2, strcasecmp_result)
00038b83: strcasecmp_s1 :: in u64 = R0
00038b84: strcasecmp_s2 :: in u64 = R1
00038b85: strcasecmp_result :: out u32 = low:32[R0]

0001318c:
000303da: R16 := 0x27000
000303e2: R17 := mem[R16 + 0xD98, el]:u64
000303e9: R16 := R16 + 0xD98
000303ee: call R17 with noreturn

000389e8: sub strcat(strcat_dst, strcat_src, strcat_result)
00038b86: strcat_dst :: in out u64 = R0
00038b87: strcat_src :: in u64 = R1
00038b88: strcat_result :: out u64 = R0

0001ab32:
000302e0: R16 := 0x27000
000302e8: R17 := mem[R16 + 0xD48, el]:u64
000302ef: R16 := R16 + 0xD48
000302f4: call R17 with noreturn

000389e9: sub strchr(strchr_s, strchr_c, strchr_result)
00038b89: strchr_s :: in u64 = R0
00038b8a: strchr_c :: in u32 = low:32[R1]
00038b8b: strchr_result :: out u64 = R0

0001d06e:
0003067d: R16 := 0x27000
00030685: R17 := mem[R16 + 0xE70, el]:u64
0003068c: R16 := R16 + 0xE70
00030691: call R17 with noreturn

000389ea: sub strcmp(strcmp_s1, strcmp_s2, strcmp_result)
00038b8c: strcmp_s1 :: in u64 = R0
00038b8d: strcmp_s2 :: in u64 = R1
00038b8e: strcmp_result :: out u32 = low:32[R0]

00022202:
0003059c: R16 := 0x27000
000305a4: R17 := mem[R16 + 0xE28, el]:u64
000305ab: R16 := R16 + 0xE28
000305b0: call R17 with noreturn

000389eb: sub strcpy(strcpy_dst, strcpy_src, strcpy_result)
00038b8f: strcpy_dst :: in out u64 = R0
00038b90: strcpy_src :: in u64 = R1
00038b91: strcpy_result :: out u64 = R0

00024c12:
000306fa: R16 := 0x27000
00030702: R17 := mem[R16 + 0xE98, el]:u64
00030709: R16 := R16 + 0xE98
0003070e: call R17 with noreturn

000389ec: sub strcspn(strcspn_s, strcspn_reject, strcspn_result)
00038b92: strcspn_s :: in u64 = R0
00038b93: strcspn_reject :: in u64 = R1
00038b94: strcspn_result :: out u64 = R0

00015e70:
0003083f: R16 := 0x27000
00030847: R17 := mem[R16 + 0xF00, el]:u64
0003084e: R16 := R16 + 0xF00
00030853: call R17 with noreturn

000389ed: sub strdup(strdup_s, strdup_result)
00038b95: strdup_s :: in u64 = R0
00038b96: strdup_result :: out u64 = R0

0001300b:
00030425: R16 := 0x27000
0003042d: R17 := mem[R16 + 0xDB0, el]:u64
00030434: R16 := R16 + 0xDB0
00030439: call R17 with noreturn

000389ee: sub strerror(strerror_result)
00038b97: strerror_result :: out u32 = low:32[R0]

000162d6:
0003043e: R16 := 0x27000
00030446: R17 := mem[R16 + 0xDB8, el]:u64
0003044d: R16 := R16 + 0xDB8
00030452: call R17 with noreturn

000389ef: sub strlcat(strlcat_result)
00038b98: strlcat_result :: out u32 = low:32[R0]

0000f4c1:
0000f4c9: mem := mem with [R31 - 0x20, el]:u64 <- R29
0000f4cd: mem := mem with [R31 - 0x18, el]:u64 <- R30
0000f4d0: R31 := R31 - 0x20
0000f4d7: R29 := R31
0000f4df: mem := mem with [R31 + 0x10, el]:u64 <- R19
0000f4e7: R19 := R0
0000f4ef: R0 := R1
0000f4fb: #54 := R2 = 0
0000f4f5: when #54 goto %0000f4f3
000389fa: goto %0002ad42

0000f4f3:
0000f501: R19 := 0
000389f9: goto %0000f503

0002ad42:
0002ad48: R6 := R19 + R2
0002ad50: R3 := R19
0002ad55: goto %0002ad53

0002ad53:
0002ad5d: R4 := pad:64[mem[R3]]
0002ad69: #16138 := ~31:0[R4] = 0
0002ad63: when #16138 goto %0002ad61
000389f8: goto %0002ad8b

0002ad61:
0002ad70: R3 := R3 + 1
0002ad78: #16142 := 1 + ~R6 + R3
0002ad7c: NF := 63:63[#16142]
0002ad7f: VF := 63:63[R3] & 63:63[~R6] & ~63:63[#16142] | ~63:63[R3] &
          ~63:63[~R6] & 63:63[#16142]
0002ad82: ZF := #16142 = 0
0002ad85: CF := 63:63[R3] & 63:63[~R6] | 63:63[~R6] & ~63:63[#16142] |
          63:63[R3] & ~63:63[#16142]
0002ad93: #16144 := ZF
0002ad8d: when #16144 goto %0002ad8b
000389f7: goto %0002ad53

0002ad8b:
0002ad9b: R19 := R3 - R19
0002ada3: #16151 := 1 + ~R19 + R2
0002ada7: NF := 63:63[#16151]
0002adaa: VF := 63:63[R2] & 63:63[~R19] & ~63:63[#16151] | ~63:63[R2] &
          ~63:63[~R19] & 63:63[#16151]
0002adad: ZF := #16151 = 0
0002adb0: CF := 63:63[R2] & 63:63[~R19] | 63:63[~R19] & ~63:63[#16151] |
          63:63[R2] & ~63:63[#16151]
0002adb4: R2 := #16151
0002adbf: #16153 := ZF
0002adb9: when #16153 goto %0000f503
000389f6: goto %0002adc2

0000f503:
0000f506: R30 := 0x5868
0000f509: call @strlen with return %0000f50b

0000f50b:
0000f511: R19 := R19 + R0
0000f519: R0 := R19
0000f521: R19 := mem[R31 + 0x10, el]:u64
0000f52b: R29 := mem[R31, el]:u64
0000f52f: R30 := mem[R31 + 8, el]:u64
0000f532: R31 := R31 + 0x20
0000f537: call R30 with noreturn

0002adc2:
0002adc9: R6 := pad:64[mem[R0]]
0002add1: R5 := R0
0002add9: R4 := R3
0002ade5: #16160 := ~31:0[R6] = 0
0002addf: when #16160 goto %0002addd
000389f5: goto %0002ae84

0002addd:
0002aded: R4 := R3
0002adf4: #16164 := 0xFFFFFFFFFFFFFFFF + R2
0002adf8: NF := 63:63[#16164]
0002adfb: VF := 63:63[R2] & ~63:63[#16164]
0002adfe: ZF := #16164 = 0
0002ae01: CF := 63:63[R2] | ~63:63[#16164] | 63:63[R2] & ~63:63[#16164]
0002ae0f: #16166 := ~ZF <> 0
0002ae09: when #16166 goto %0002ae07
000389f4: goto %0002ae6e

0002ae6e:
0002ae79: #16181 := ~31:0[R1] = 0
0002ae73: when #16181 goto %0002ae6e
000389f3: goto %0002ae7c

0002ae7c:
0002ae82: R4 := R3
000389f2: goto %0002ae26

0002ae07:
0002ae18: R2 := R2 - 1
0002ae22: R3 := R4
0002ae2e: #16170 := 31:0[R6] = 0
0002ae28: when #16170 goto %0002ae26
000389f1: goto %0002addd

0002ae26:
0002ae36: R5 := R5 - R0
0002ae3e: R19 := R19 + R5
000389f0: goto %0002ae40

0002ae84:
0002ae86: goto %0002ae40

0002ae40:
0002ae46: mem := mem with [R4] <- 0
0002ae4e: R0 := R19
0002ae56: R19 := mem[R31 + 0x10, el]:u64
0002ae60: R29 := mem[R31, el]:u64
0002ae64: R30 := mem[R31 + 8, el]:u64
0002ae67: R31 := R31 + 0x20
0002ae6c: call R30 with noreturn

000389fb: sub strlcpy(strlcpy_result)
00038b99: strlcpy_result :: out u32 = low:32[R0]

0000f47c:
0000f485: R3 := R0
0000f491: #38 := R2 = 0
0000f48b: when #38 goto %0000f489
00038a01: goto %0002ae88

0000f489:
0000f499: R2 := R1
00038a00: goto %0000f49d

0002ae88:
0002ae8d: R5 := R2 - 1
0002ae95: R2 := R1
0002ae9d: R5 := R0 + R5
0002aea2: goto %0002aea0

0002aea0:
0002aea9: R0 := R2
0002aeb1: #16197 := 1 + ~R5 + R3
0002aeb5: NF := 63:63[#16197]
0002aeb8: VF := 63:63[R3] & 63:63[~R5] & ~63:63[#16197] | ~63:63[R3] &
          ~63:63[~R5] & 63:63[#16197]
0002aebb: ZF := #16197 = 0
0002aebe: CF := 63:63[R3] & 63:63[~R5] | 63:63[~R5] & ~63:63[#16197] |
          63:63[R3] & ~63:63[#16197]
0002aec7: R2 := R2 + 1
0002aed3: #16199 := ~ZF <> 0
0002aecd: when #16199 goto %0002aecb
000389ff: goto %0002aef9

0002aef9:
0002aeff: R2 := R0
0002af07: mem := mem with [R3] <- 0
0002af14: #16207 := ~31:0[R3] = 0
0002af0e: when #16207 goto %0000f49d
000389fe: goto %0002aedb

0000f49d:
0000f4a8: #42 := ~31:0[R3] = 0
0000f4a2: when #42 goto %0000f49d
000389fd: goto %0000f4ab

0000f4ab:
0000f4b1: R0 := R2 - R1
0000f4b8: R0 := R0 - 1
0000f4bd: call R30 with noreturn

0002aecb:
0002aee3: #16200 := 31:0[R4] = 0
0002aedd: when #16200 goto %0002aedb
000389fc: goto %0002aea0

0002aedb:
0002aeeb: R0 := R2 - R1
0002aef2: R0 := R0 - 1
0002aef7: call R30 with noreturn

00038a02: sub strlen(strlen_s, strlen_result)
00038b9a: strlen_s :: in u64 = R0
00038b9b: strlen_result :: out u64 = R0

0000f507:
00030024: R16 := 0x27000
0003002c: R17 := mem[R16 + 0xC68, el]:u64
00030033: R16 := R16 + 0xC68
00030038: call R17 with noreturn

00038a03: sub strncasecmp(strncasecmp_s1, strncasecmp_s2, strncasecmp_n, strncasecmp_result)
00038b9c: strncasecmp_s1 :: in u64 = R0
00038b9d: strncasecmp_s2 :: in u64 = R1
00038b9e: strncasecmp_n :: in u64 = R2
00038b9f: strncasecmp_result :: out u32 = low:32[R0]

0001d8a7:
0003064b: R16 := 0x27000
00030653: R17 := mem[R16 + 0xE60, el]:u64
0003065a: R16 := R16 + 0xE60
0003065f: call R17 with noreturn

00038a04: sub strncpy(strncpy_dst, strncpy_src, strncpy_n, strncpy_result)
00038ba0: strncpy_dst :: in out u64 = R0
00038ba1: strncpy_src :: in u64 = R1
00038ba2: strncpy_n :: in u64 = R2
00038ba3: strncpy_result :: out u64 = R0

0001a7c4:
000307f4: R16 := 0x27000
000307fc: R17 := mem[R16 + 0xEE8, el]:u64
00030803: R16 := R16 + 0xEE8
00030808: call R17 with noreturn

00038a05: sub strstr(strstr_haystack, strstr_needle, strstr_result)
00038ba4: strstr_haystack :: in u64 = R0
00038ba5: strstr_needle :: in u64 = R1
00038ba6: strstr_result :: out u64 = R0

000140d8:
000307a9: R16 := 0x27000
000307b1: R17 := mem[R16 + 0xED0, el]:u64
000307b8: R16 := R16 + 0xED0
000307bd: call R17 with noreturn

00038a06: sub strtok_r(strtok_r_str, strtok_r_delim, strtok_r_saveptr, strtok_r_result)
00038ba7: strtok_r_str :: in out u64 = R0
00038ba8: strtok_r_delim :: in u64 = R1
00038ba9: strtok_r_saveptr :: in out u64 = R2
00038baa: strtok_r_result :: out u64 = R0

0002122f:
000301ff: R16 := 0x27000
00030207: R17 := mem[R16 + 0xD00, el]:u64
0003020e: R16 := R16 + 0xD00
00030213: call R17 with noreturn

00038a07: sub strtol(strtol_nptr, strtol_endptr, strtol_base, strtol_result)
00038bab: strtol_nptr :: in u64 = R0
00038bac: strtol_endptr :: in out u64 = R1
00038bad: strtol_base :: in u32 = low:32[R2]
00038bae: strtol_result :: out u64 = R0

00015d2e:
000305ce: R16 := 0x27000
000305d6: R17 := mem[R16 + 0xE38, el]:u64
000305dd: R16 := R16 + 0xE38
000305e2: call R17 with noreturn

00038a08: sub strtoll(strtoll_nptr, strtoll_endptr, strtoll_base, strtoll_result)
00038baf: strtoll_nptr :: in u64 = R0
00038bb0: strtoll_endptr :: in out u64 = R1
00038bb1: strtoll_base :: in u32 = low:32[R2]
00038bb2: strtoll_result :: out u64 = R0

0001e2bc:
000300a1: R16 := 0x27000
000300a9: R17 := mem[R16 + 0xC90, el]:u64
000300b0: R16 := R16 + 0xC90
000300b5: call R17 with noreturn

00038a09: sub strtoul(strtoul_nptr, strtoul_endptr, strtoul_base, strtoul_result)
00038bb3: strtoul_nptr :: in u64 = R0
00038bb4: strtoul_endptr :: in out u64 = R1
00038bb5: strtoul_base :: in u32 = low:32[R2]
00038bb6: strtoul_result :: out u64 = R0

0002cc4e:
0003000b: R16 := 0x27000
00030013: R17 := mem[R16 + 0xC60, el]:u64
0003001a: R16 := R16 + 0xC60
0003001f: call R17 with noreturn

00038a0a: sub sub_b518(sub_b518_result)
00038bb7: sub_b518_result :: out u32 = low:32[R0]

0001ca5a:
0001ca62: mem := mem with [R31 - 0x70, el]:u64 <- R29
0001ca66: mem := mem with [R31 - 0x68, el]:u64 <- R30
0001ca69: R31 := R31 - 0x70
0001ca70: R29 := R31
0001ca79: mem := mem with [R31, el]:u64 <- R31 + 0x20
0001ca7d: mem := mem with [R31, el]:u64 <- R31 + 0x28
0001ca86: R20 := 31:0[R0]
0001ca8e: R19 := R2
0001ca94: R0 := 0x800
0001ca9d: mem := mem with [R31, el]:u64 <- R31 + 0x40
0001caa1: mem := mem with [R31, el]:u64 <- R31 + 0x48
0001caaa: mem := mem with [R31, el]:u64 <- R31 + 0x60
0001caae: mem := mem with [R31, el]:u64 <- R31 + 0x68
0001cab7: R24 := 31:0[R1]
0001cabe: R23 := 1
0001cac7: mem := mem with [R31, el]:u64 <- R31 + 0x80
0001cacb: mem := mem with [R31, el]:u64 <- R31 + 0x88
0001cad4: mem := mem with [R31, el]:u64 <- R31 + 0xA0
0001cad8: mem := mem with [R31, el]:u64 <- R31 + 0xA8
0001cadd: R30 := 0xB54C
0001cadf: call @new with return %0001cae1

0001cae1:
0001cae5: R1 := 0x27000
0001caed: R22 := R0
0001caf4: R28 := 0
0001cafc: R27 := mem[R1 + 0xF78, el]:u64
0001cb02: R0 := 0x12000
0001cb09: R0 := R0 + 0x6D0
0001cb11: mem := mem with [R31 + 0x68, el]:u64 <- R0
00038a1f: goto %0001cb13

0001cb13:
0001cb1f: #10413 := ZF
0001cb19: when #10413 goto %0001cb17
00038a1e: goto %0002a32a

0002a32a:
0002a331: #15828 := 0xFFFFFFFFFFFFF800 + R0
0002a335: NF := 63:63[#15828]
0002a338: VF := 63:63[R0] & ~63:63[#15828]
0002a33b: ZF := #15828 = 0
0002a33e: CF := 63:63[R0] | ~63:63[#15828] | 63:63[R0] & ~63:63[#15828]
0002a34d: #15830 := (NF = VF & ~ZF) <> 0
0002a347: when #15830 goto %0001cb17
00038a1d: goto %0002a350

0002a350:
0002a357: R21 := 31:0[R19] - 31:0[R28]
0002a35e: R2 := extend:64[31:0[R21]]
00038a1c: goto %0001cb31

0001cb31:
0001cb3a: R1 := R22
0001cb43: R0 := 31:0[R24]
0001cb48: R30 := 0xB590
0001cb4a: call @read with return %0001cb4c

0001cb4c:
0001cb51: #10423 := extend:64[31:0[R0]]
0001cb55: NF := 63:63[#10423]
0001cb58: VF := 31:31[R0] & ~63:63[#10423]
0001cb5b: ZF := #10423 = 0
0001cb5e: CF := 31:31[R0] | 31:31[R0] & ~63:63[#10423] | ~63:63[#10423]
0001cb69: R26 := R0
0001cb72: R0 := 31:0[R28] + 31:0[R0]
0001cb8c: #10431 := (NF = VF & ~ZF) <> 0
0001cb8d: goto %0001cb84

0001cb84:
0001cb86: when #10431 goto %0001cb7d
0001cb87: goto %0001cb81

0001cb81:
0001cb82: R28 := 31:0[R28]
0001cb89: goto %0001cb85

0001cb7d:
0001cb7e: R28 := 31:0[R0]
0001cb88: goto %0001cb85

0001cb85:
0001cb97: R25 := 31:0[R26]
0001cba3: #10435 := ~~31:31[R20]
0001cb9d: when #10435 goto %0001cb9b
00038a1b: goto %0002a2ee

0001cb9b:
0001cbaa: #10436 := extend:64[31:0[R26]]
0001cbae: NF := 63:63[#10436]
0001cbb1: VF := 31:31[R26] & ~63:63[#10436]
0001cbb4: ZF := #10436 = 0
0001cbb7: CF := 31:31[R26] | 31:31[R26] & ~63:63[#10436] | ~63:63[#10436]
0001cbd4: #10438 := (NF <> VF | ZF) <> 0
0001cbd5: goto %0001cbcc

0001cbcc:
0001cbce: when #10438 goto %0001cbc5
0001cbcf: goto %0001cbc9

0001cbc9:
0001cbca: R21 := 1
0001cbd1: goto %0001cbcd

0001cbc5:
0001cbc6: R21 := 0
0001cbd0: goto %0001cbcd

0001cbcd:
0001cbdb: goto %0001cbd9

0002a2ee:
0002a2f5: R0 := pad:64[mem[R27, el]:u32]
0002a2fb: R1 := 0x27000
0002a303: mem := mem with [R31 + 0x60, el]:u64 <- R1
0002a30e: #15826 := 31:0[R0] = 0
0002a308: when #15826 goto %0002a24c
00038a1a: goto %0002a311

0002a311:
0002a315: R6 := 0x12000
0002a31c: R6 := R6 + 0x690
0002a327: #15827 := ~~31:31[R26]
0002a321: when #15827 goto %0002a1eb
00038a19: goto %0002a20b

0002a1eb:
0002a1ee: R30 := 0xB698
0002a1f0: call @__errno_location with return %0002a1f2

0002a1f2:
0002a1f9: R0 := pad:64[mem[R0, el]:u32]
0002a1fe: R30 := 0xB6A0
0002a200: call @strerror with return %0002a202

0002a202:
0002a208: R6 := R0
0002a20d: goto %0002a20b

0002a20b:
0002a212: R1 := 0x12000
0002a21b: R3 := 31:0[R21]
0002a223: R5 := R19
0002a22a: R1 := R1 + 0x698
0002a233: R4 := 31:0[R28]
0002a23c: R2 := 31:0[R26]
0002a243: R0 := 1
0002a248: R30 := 0xB5E4
0002a24a: call @__printf_chk with return %0002a24c

0002a24c:
0002a253: R0 := 31:0[R20]
0002a258: R30 := 0xB5EC
0002a25a: call @so_closed with return %0002a25c

0002a25c:
0002a265: #15807 := ~31:0[R0] = 0
0002a25f: when #15807 goto %0001cdf9
00038a18: goto %0002a268

0001cdf9:
0001cdff: R0 := R22
0001ce04: R30 := 0xB730
0001ce06: call @free with return %0001ce08

0001ce08:
0001ce0e: R0 := mem[R31 + 0x60, el]:u64
0001ce15: R25 := 0xFFFFFFFFFFFFFC19
0001ce1d: R26 := mem[R0 + 0xF78, el]:u64
0001ce26: R0 := pad:64[mem[R26, el]:u32]
0001ce31: #10486 := ~31:0[R0] = 0
0001ce2b: when #10486 goto %0001cd65
00038a17: goto %0001ce34

0001ce34:
0001ce3b: R19 := mem[R31 + 0x10, el]:u64
0001ce3f: R20 := mem[R31 + 0x18, el]:u64
0001ce48: R21 := mem[R31 + 0x20, el]:u64
0001ce4c: R22 := mem[R31 + 0x28, el]:u64
0001ce55: R23 := mem[R31 + 0x30, el]:u64
0001ce59: R24 := mem[R31 + 0x38, el]:u64
0001ce62: R25 := mem[R31 + 0x40, el]:u64
0001ce66: R26 := mem[R31 + 0x48, el]:u64
0001ce6f: R27 := mem[R31 + 0x50, el]:u64
0001ce73: R28 := mem[R31 + 0x58, el]:u64
0001ce7d: R29 := mem[R31, el]:u64
0001ce81: R30 := mem[R31 + 8, el]:u64
0001ce84: R31 := R31 + 0x70
0001ce89: call R30 with noreturn

0002a268:
0002a26d: #15808 := extend:64[31:0[R26]]
0002a271: NF := 63:63[#15808]
0002a274: VF := 31:31[R26] & ~63:63[#15808]
0002a277: ZF := #15808 = 0
0002a27a: CF := 31:31[R26] | 31:31[R26] & ~63:63[#15808] | ~63:63[#15808]
0002a28b: #15810 := (NF <> VF | ZF) <> 0
0002a285: when #15810 goto %0002a283
00038a16: goto %0002a29c

0002a283:
0002a293: R0 := R22
0002a298: R30 := 0xB6B0
0002a29a: call @free with return %0001cc84

0002a29c:
0002a2a2: R1 := R22
0002a2a9: R2 := extend:64[31:0[R26]]
0002a2b2: R0 := 31:0[R20]
0002a2b7: R30 := 0xB608
0002a2b9: call @write with return %0002a2bb

0002a2bb:
0002a2bf: R1 := 0x27000
0002a2c8: R23 := 31:0[R0]
0002a2cf: R21 := 1
0002a2d7: R1 := mem[R1 + 0xF78, el]:u64
0002a2e0: R1 := pad:64[mem[R1, el]:u32]
0002a2eb: #15824 := ~31:0[R1] = 0
0002a2e5: when #15824 goto %0002a1bd
00038a15: goto %0001cbd9

0002a1bd:
0002a1c3: R1 := mem[R31 + 0x68, el]:u64
0002a1cc: R2 := 31:0[R0]
0002a1d5: R3 := 31:0[R26]
0002a1de: R0 := 31:0[R21]
0002a1e3: R30 := 0xB690
0002a1e5: call @__printf_chk with return %0002a1e7

0002a1e7:
0002a1e9: goto %0001cbd9

0001cbd9:
0001cbe1: #10439 := extend:64[31:0[R23]]
0001cbe5: NF := 63:63[#10439]
0001cbe8: VF := 31:31[R23] & ~63:63[#10439]
0001cbeb: ZF := #10439 = 0
0001cbee: CF := 31:31[R23] | 31:31[R23] & ~63:63[#10439] | ~63:63[#10439]
0001cc19: #10441 := (NF = VF & ~ZF) <> 0
0001cc1a: goto %0001cc11

0001cc11:
0001cc13: when #10441 goto %0001cbf9
0001cc14: goto %0001cc05

0001cc05:
0001cc06: NF := 0
0001cc09: ZF := 1
0001cc0c: CF := 0
0001cc0f: VF := 0
0001cc16: goto %0001cc12

0001cbf9:
0001cbfa: NF := 63:63[extend:64[31:0[R21]] + 0]
0001cbfd: VF := 31:31[R21] & ~63:63[extend:64[31:0[R21]] + 0]
0001cc00: ZF := extend:64[31:0[R21]] + 0 = 0
0001cc03: CF := 31:31[R21] | ~63:63[extend:64[31:0[R21]] + 0] | 31:31[R21] &
          ~63:63[extend:64[31:0[R21]] + 0]
0001cc15: goto %0001cc12

0001cc12:
0001cc27: #10444 := ZF
0001cc21: when #10444 goto %0001cc1f
00038a14: goto %0002a189

0001cc1f:
0001cc2f: R0 := R22
0001cc34: R30 := 0xB768
0001cc36: call @free with return %0001cc38

0001cc38:
0001cc3d: #10448 := extend:64[31:0[R25]]
0001cc41: NF := 63:63[#10448]
0001cc44: VF := 31:31[R25] & ~63:63[#10448]
0001cc47: ZF := #10448 = 0
0001cc4a: CF := 31:31[R25] | 31:31[R25] & ~63:63[#10448] | ~63:63[#10448]
0001cc54: R0 := 1
0001cc7c: #10450 := (NF = VF & ~ZF) <> 0
0001cc7d: goto %0001cc74

0001cc74:
0001cc76: when #10450 goto %0001cc5c
0001cc77: goto %0001cc68

0001cc68:
0001cc69: NF := 0
0001cc6c: ZF := 1
0001cc6f: CF := 0
0001cc72: VF := 0
0001cc79: goto %0001cc75

0001cc5c:
0001cc5d: NF := 63:63[extend:64[31:0[R23]] + 0]
0001cc60: VF := 31:31[R23] & ~63:63[extend:64[31:0[R23]] + 0]
0001cc63: ZF := extend:64[31:0[R23]] + 0 = 0
0001cc66: CF := 31:31[R23] | ~63:63[extend:64[31:0[R23]] + 0] | 31:31[R23] &
          ~63:63[extend:64[31:0[R23]] + 0]
0001cc78: goto %0001cc75

0001cc75:
0001cc8c: #10453 := (NF <> VF | ZF) <> 0
0001cc86: when #10453 goto %0001cc84
00038a13: goto %0001ceb5

0001ceb5:
0001cebc: R19 := mem[R31 + 0x10, el]:u64
0001cec0: R20 := mem[R31 + 0x18, el]:u64
0001cec9: R21 := mem[R31 + 0x20, el]:u64
0001cecd: R22 := mem[R31 + 0x28, el]:u64
0001ced6: R23 := mem[R31 + 0x30, el]:u64
0001ceda: R24 := mem[R31 + 0x38, el]:u64
0001cee3: R25 := mem[R31 + 0x40, el]:u64
0001cee7: R26 := mem[R31 + 0x48, el]:u64
0001cef0: R27 := mem[R31 + 0x50, el]:u64
0001cef4: R28 := mem[R31 + 0x58, el]:u64
0001cefe: R29 := mem[R31, el]:u64
0001cf02: R30 := mem[R31 + 8, el]:u64
0001cf05: R31 := R31 + 0x70
0001cf0a: call R30 with noreturn

0001cc84:
0001cc93: #10454 := extend:64[31:0[R25]]
0001cc97: NF := 63:63[#10454]
0001cc9a: VF := 31:31[R25] & ~63:63[#10454]
0001cc9d: ZF := #10454 = 0
0001cca0: CF := 31:31[R25] | 31:31[R25] & ~63:63[#10454] | ~63:63[#10454]
0001ccc9: #10456 := ZF
0001ccca: goto %0001ccc1

0001ccc1:
0001ccc3: when #10456 goto %0001cca9
0001ccc4: goto %0001ccb5

0001ccb5:
0001ccb6: NF := 0
0001ccb9: ZF := 1
0001ccbc: CF := 0
0001ccbf: VF := 0
0001ccc6: goto %0001ccc2

0001cca9:
0001ccaa: NF := 63:63[extend:64[31:0[R23]] + 0]
0001ccad: VF := 31:31[R23] & ~63:63[extend:64[31:0[R23]] + 0]
0001ccb0: ZF := extend:64[31:0[R23]] + 0 = 0
0001ccb3: CF := 31:31[R23] | ~63:63[extend:64[31:0[R23]] + 0] | 31:31[R23] &
          ~63:63[extend:64[31:0[R23]] + 0]
0001ccc5: goto %0001ccc2

0001ccc2:
0001ccd9: #10459 := (NF <> VF | ZF) <> 0
0001ccd3: when #10459 goto %0001ccd1
00038a12: goto %0001ce8b

0001ce8b:
0001ce92: R0 := 1
0001ce9d: #10494 := ZF
0001ce97: when #10494 goto %0001cd04
00038a11: goto %0001cea0

0001cea0:
0001ceab: #10496 := ZF
0001cea5: when #10496 goto %0001cd04
00038a10: goto %0001ceae

0001ceae:
0001ceb3: R25 := 0
00038a0f: goto %0001ccd1

0001ccd1:
0001ccdf: R0 := 0x27000
0001cce7: mem := mem with [R31 + 0x60, el]:u64 <- R0
0001ccef: R0 := mem[R31 + 0x60, el]:u64
0001ccf7: R26 := mem[R0 + 0xF78, el]:u64
0001cd00: R0 := pad:64[mem[R26, el]:u32]
0001cd0c: #10461 := 31:0[R0] = 0
0001cd06: when #10461 goto %0001cd04
00038a0e: goto %0001cd65

0001cd65:
0001cd6c: R4 := 31:0[R25]
0001cd75: R3 := 31:0[R24]
0001cd7e: R2 := 31:0[R20]
0001cd84: R1 := 0x12000
0001cd8b: R0 := 1
0001cd92: R1 := R1 + 0x6F0
0001cd97: R30 := 0xB708
0001cd99: call @__printf_chk with return %0001cd9b

0001cd9b:
0001cda0: R0 := 0
0001cda9: R19 := mem[R31 + 0x10, el]:u64
0001cdad: R20 := mem[R31 + 0x18, el]:u64
0001cdb6: R21 := mem[R31 + 0x20, el]:u64
0001cdba: R22 := mem[R31 + 0x28, el]:u64
0001cdc3: R23 := mem[R31 + 0x30, el]:u64
0001cdc7: R24 := mem[R31 + 0x38, el]:u64
0001cdd0: R25 := mem[R31 + 0x40, el]:u64
0001cdd4: R26 := mem[R31 + 0x48, el]:u64
0001cddd: R27 := mem[R31 + 0x50, el]:u64
0001cde1: R28 := mem[R31 + 0x58, el]:u64
0001cdeb: R29 := mem[R31, el]:u64
0001cdef: R30 := mem[R31 + 8, el]:u64
0001cdf2: R31 := R31 + 0x70
0001cdf7: call R30 with noreturn

0002a189:
0002a194: #15774 := ZF
0002a18e: when #15774 goto %0001cb17
00038a0d: goto %0002a197

0001cb17:
0001cb25: R2 := 0x800
0001cb2e: R21 := 31:0[R2]
0001cb33: goto %0001cb31

0002a197:
0002a1a4: #15776 := (NF = VF & ~ZF) <> 0
0002a19e: when #15776 goto %0001cb13
00038a0c: goto %0002a1a7

0002a1a7:
0002a1ad: R0 := R22
0002a1b2: R30 := 0xB644
0002a1b4: call @free with return %0002a1b6

0002a1b6:
0002a1bb: R0 := 1
00038a0b: goto %0001cd04

0001cd04:
0001cd15: R19 := mem[R31 + 0x10, el]:u64
0001cd19: R20 := mem[R31 + 0x18, el]:u64
0001cd22: R21 := mem[R31 + 0x20, el]:u64
0001cd26: R22 := mem[R31 + 0x28, el]:u64
0001cd2f: R23 := mem[R31 + 0x30, el]:u64
0001cd33: R24 := mem[R31 + 0x38, el]:u64
0001cd3c: R25 := mem[R31 + 0x40, el]:u64
0001cd40: R26 := mem[R31 + 0x48, el]:u64
0001cd49: R27 := mem[R31 + 0x50, el]:u64
0001cd4d: R28 := mem[R31 + 0x58, el]:u64
0001cd57: R29 := mem[R31, el]:u64
0001cd5b: R30 := mem[R31 + 8, el]:u64
0001cd5e: R31 := R31 + 0x70
0001cd63: call R30 with noreturn

00038a20: sub substr(substr_result)
00038bb8: substr_result :: out u32 = low:32[R0]

00013363:
0001336b: mem := mem with [R31 - 0x30, el]:u64 <- R29
0001336f: mem := mem with [R31 - 0x28, el]:u64 <- R30
00013372: R31 := R31 - 0x30
00013379: R29 := R31
00013382: mem := mem with [R31, el]:u64 <- R31 + 0x20
00013386: mem := mem with [R31, el]:u64 <- R31 + 0x28
0001338f: R19 := 31:0[R2]
00013397: R20 := R0
000133a0: mem := mem with [R31, el]:u64 <- R31 + 0x40
000133a4: mem := mem with [R31, el]:u64 <- R31 + 0x48
000133ab: R22 := extend:64[31:0[R1]]
000133b0: R30 := 0x5288
000133b2: call @strlen with return %000133b4

000133b4:
000133b9: #4665 := extend:64[31:0[R19]]
000133bd: NF := 63:63[#4665]
000133c0: VF := 31:31[R19] & ~63:63[#4665]
000133c3: ZF := #4665 = 0
000133c6: CF := 31:31[R19] | 31:31[R19] & ~63:63[#4665] | ~63:63[#4665]
000133d1: R1 := R0 - R22
000133e9: #4670 := ~ZF <> 0
000133ea: goto %000133e1

000133e1:
000133e3: when #4670 goto %000133da
000133e4: goto %000133de

000133de:
000133df: R19 := 31:0[R0]
000133e6: goto %000133e2

000133da:
000133db: R19 := 31:0[R19]
000133e5: goto %000133e2

000133e2:
000133f4: R0 := 31:0[R0] - 31:0[R22]
0001340f: #4675 := (~CF | ZF) <> 0
00013410: goto %00013407

00013407:
00013409: when #4675 goto %00013400
0001340a: goto %00013404

00013404:
00013405: R19 := 31:0[R19]
0001340c: goto %00013408

00013400:
00013401: R19 := 31:0[R0]
0001340b: goto %00013408

00013408:
00013418: #4676 := extend:64[31:0[R19]]
0001341c: NF := 63:63[#4676]
0001341f: VF := 31:31[R19] & ~63:63[#4676]
00013422: ZF := #4676 = 0
00013425: CF := 31:31[R19] | 31:31[R19] & ~63:63[#4676] | ~63:63[#4676]
00013436: #4678 := (NF <> VF | ZF) <> 0
00013430: when #4678 goto %0001342e
00038a26: goto %00013dc8

0001342e:
0001343f: R19 := mem[R31 + 0x10, el]:u64
00013443: R20 := mem[R31 + 0x18, el]:u64
00013449: R1 := 1
00013452: R21 := mem[R31 + 0x20, el]:u64
00013456: R22 := mem[R31 + 0x28, el]:u64
0001345e: R0 := R1
00013468: R29 := mem[R31, el]:u64
0001346c: R30 := mem[R31 + 8, el]:u64
0001346f: R31 := R31 + 0x30
00013473: call @calloc with noreturn

00013dc8:
00013dce: R0 := extend:64[31:0[R19]] + 1
00013dd4: R1 := 1
00013ddb: R19 := extend:64[31:0[R19]]
00013de2: R0 := extend:64[31:0[R0]]
00013de7: R30 := 0x52BC
00013de9: call @calloc with return %00013deb

00013deb:
00013df1: R1 := R20 + R22
00013df9: R2 := R0
00038a25: goto %00013dfb

00013dfb:
00013e05: R4 := R19 - R2
00013e11: #4894 := 31:0[R3] = 0
00013e0b: when #4894 goto %00013e09
00038a24: goto %00013e43

00013e43:
00013e4e: #4899 := ~ZF <> 0
00013e48: when #4899 goto %00013dfb
00038a23: goto %00013e51

00013e51:
00013e57: mem := mem with [R2] <- 0
00038a22: goto %00013e59

00013e59:
00013e64: #4900 := ~31:0[R2] = 0
00013e5e: when #4900 goto %00013e59
00038a21: goto %00013e09

00013e09:
00013e1a: R19 := mem[R31 + 0x10, el]:u64
00013e1e: R20 := mem[R31 + 0x18, el]:u64
00013e27: R21 := mem[R31 + 0x20, el]:u64
00013e2b: R22 := mem[R31 + 0x28, el]:u64
00013e35: R29 := mem[R31, el]:u64
00013e39: R30 := mem[R31 + 8, el]:u64
00013e3c: R31 := R31 + 0x30
00013e41: call R30 with noreturn

00038a27: sub tcgetattr(tcgetattr_result)
00038bb9: tcgetattr_result :: out u32 = low:32[R0]

0002baf3:
00030182: R16 := 0x27000
0003018a: R17 := mem[R16 + 0xCD8, el]:u64
00030191: R16 := R16 + 0xCD8
00030196: call R17 with noreturn

00038a28: sub tcsetattr(tcsetattr_result)
00038bba: tcsetattr_result :: out u32 = low:32[R0]

0002bba0:
00030745: R16 := 0x27000
0003074d: R17 := mem[R16 + 0xEB0, el]:u64
00030754: R16 := R16 + 0xEB0
00030759: call R17 with noreturn

00038a29: sub time(time_result)
00038bbb: time_result :: out u32 = low:32[R0]

0001c8e3:
00030231: R16 := 0x27000
00030239: R17 := mem[R16 + 0xD10, el]:u64
00030240: R16 := R16 + 0xD10
00030245: call R17 with noreturn

00038a2a: sub to_base64(to_base64_result)
00038bbc: to_base64_result :: out u32 = low:32[R0]

0000fb7e:
0000fb83: #250 := 0xFFFFFFFFFFFFFFFE + R2
0000fb87: NF := 63:63[#250]
0000fb8a: VF := 63:63[R2] & ~63:63[#250]
0000fb8d: ZF := #250 = 0
0000fb90: CF := 63:63[R2] | ~63:63[#250] | 63:63[R2] & ~63:63[#250]
0000fbb9: #252 := (CF & ~ZF) <> 0
0000fbba: goto %0000fbb1

0000fbb1:
0000fbb3: when #252 goto %0000fb99
0000fbb4: goto %0000fba5

0000fba5:
0000fba6: NF := 0
0000fba9: ZF := 0
0000fbac: CF := 0
0000fbaf: VF := 0
0000fbb6: goto %0000fbb2

0000fb99:
0000fb9a: NF := 63:63[R3 - 0xA]
0000fb9d: VF := 63:63[R3] & ~63:63[R3 - 0xA]
0000fba0: ZF := R3 - 0xA = 0
0000fba3: CF := 63:63[R3] | ~63:63[R3 - 0xA] | 63:63[R3] & ~63:63[R3 - 0xA]
0000fbb5: goto %0000fbb2

0000fbb2:
0000fbc8: #255 := (~CF | ZF) <> 0
0000fbc2: when #255 goto %0000fbc0
00038a31: goto %0002a913

0002a913:
0002a917: R4 := 0x28000
0002a91e: R4 := R4 + 0x10
0002a925: R4 := R4 + 0x220
00038a30: goto %0002a927

0002a927:
0002a92e: R5 := pad:64[mem[R1]]
0002a935: R0 := R0 + 4
0002a93c: R2 := R2 - 3
0002a943: R3 := R3 - 4
0002a94a: #15952 := 0xFFFFFFFFFFFFFFFE + R2
0002a94e: NF := 63:63[#15952]
0002a951: VF := 63:63[R2] & ~63:63[#15952]
0002a954: ZF := #15952 = 0
0002a957: CF := 63:63[R2] | ~63:63[#15952] | 63:63[R2] & ~63:63[#15952]
0002a960: R1 := R1 + 3
0002a968: R5 := pad:64[31:2[R5]]
0002a98f: #15955 := (CF & ~ZF) <> 0
0002a990: goto %0002a987

0002a987:
0002a989: when #15955 goto %0002a96f
0002a98a: goto %0002a97b

0002a97b:
0002a97c: NF := 0
0002a97f: ZF := 0
0002a982: CF := 0
0002a985: VF := 0
0002a98c: goto %0002a988

0002a96f:
0002a970: NF := 63:63[R3 - 0xA]
0002a973: VF := 63:63[R3] & ~63:63[R3 - 0xA]
0002a976: ZF := R3 - 0xA = 0
0002a979: CF := 63:63[R3] | ~63:63[R3 - 0xA] | 63:63[R3] & ~63:63[R3 - 0xA]
0002a98b: goto %0002a988

0002a988:
0002a99b: mem := mem with [R0 - 4] <- low:8[31:0[R5]]
0002a9a7: R6 := pad:64[1:0[R6]] << 0x24
0002a9b0: R5 := 31:0[R6] | 31:0[R5] >> 4
0002a9ba: mem := mem with [R0 - 3] <- low:8[31:0[R5]]
0002a9c6: R6 := pad:64[3:0[R6]] << 0x22
0002a9cf: R5 := 31:0[R6] | 31:0[R5] >> 6
0002a9d9: mem := mem with [R0 - 2] <- low:8[31:0[R5]]
0002a9e3: R5 := 31:0[R5] & 0x3F
0002a9ed: mem := mem with [R0 - 1] <- low:8[31:0[R5]]
0002a9f9: #15990 := (CF & ~ZF) <> 0
0002a9f3: when #15990 goto %0002a927
00038a2f: goto %0000fbc0

0000fbc0:
0000fbcf: #256 := R2
0000fbd3: NF := 63:63[#256]
0000fbd6: VF := 63:63[R2] & ~63:63[#256]
0000fbd9: ZF := #256 = 0
0000fbdc: CF := 63:63[R2] | ~63:63[#256] | 63:63[R2] & ~63:63[#256]
0000fc04: #258 := ~ZF <> 0
0000fc05: goto %0000fbfc

0000fbfc:
0000fbfe: when #258 goto %0000fbe4
0000fbff: goto %0000fbf0

0000fbf0:
0000fbf1: NF := 0
0000fbf4: ZF := 0
0000fbf7: CF := 0
0000fbfa: VF := 0
0000fc01: goto %0000fbfd

0000fbe4:
0000fbe5: NF := 63:63[R3 - 4]
0000fbe8: VF := 63:63[R3] & ~63:63[R3 - 4]
0000fbeb: ZF := R3 - 4 = 0
0000fbee: CF := 63:63[R3] | ~63:63[R3 - 4] | 63:63[R3] & ~63:63[R3 - 4]
0000fc00: goto %0000fbfd

0000fbfd:
0000fc13: #261 := (~CF | ZF) <> 0
0000fc0d: when #261 goto %0000fc0b
00038a2e: goto %0002a881

0002a881:
0002a888: R4 := pad:64[mem[R1]]
0002a88e: R3 := 0x28000
0002a895: R3 := R3 + 0x10
0002a89c: #15941 := 0xFFFFFFFFFFFFFFFF + R2
0002a8a0: NF := 63:63[#15941]
0002a8a3: VF := 63:63[R2] & ~63:63[#15941]
0002a8a6: ZF := #15941 = 0
0002a8a9: CF := 63:63[R2] | ~63:63[#15941] | 63:63[R2] & ~63:63[#15941]
0002a8b2: R2 := R3 + 0x220
0002a8ba: R3 := pad:64[31:2[R4]]
0002a8c4: mem := mem with [R0] <- low:8[31:0[R3]]
0002a8cd: R3 := pad:64[mem[R1]]
0002a8d5: R3 := pad:64[1:0[R3]] << 0x24
0002a8e1: #15946 := (~CF | ZF) <> 0
0002a8db: when #15946 goto %0000fc22
00038a2d: goto %0002a8e4

0000fc22:
0000fc29: R2 := 0x3D
0000fc31: mem := mem with [R0 + 1] <- low:8[31:0[R1]]
0000fc36: goto %0000fc34

0002a8e4:
0002a8eb: R4 := pad:64[mem[R1 + 1]]
0002a8f4: R3 := 31:0[R3] | 31:0[R4] >> 4
0002a8fe: mem := mem with [R0 + 1] <- low:8[31:0[R3]]
0002a907: R1 := pad:64[mem[R1 + 1]]
0002a90f: R1 := pad:64[3:0[R1]] << 0x22
00038a2c: goto %0000fc34

0000fc34:
0000fc3c: R1 := 0x3D
0000fc43: R0 := R0 + 4
0000fc4b: mem := mem with [R0 - 2] <- low:8[31:0[R2]]
0000fc53: mem := mem with [R0 - 1] <- low:8[31:0[R1]]
00038a2b: goto %0000fc0b

0000fc0b:
0000fc1b: mem := mem with [R0] <- 0
0000fc20: call R30 with noreturn

00038a32: sub trimr(trimr_result)
00038bbd: trimr_result :: out u32 = low:32[R0]

000138c3:
000138cb: mem := mem with [R31 - 0x20, el]:u64 <- R29
000138cf: mem := mem with [R31 - 0x18, el]:u64 <- R30
000138d2: R31 := R31 - 0x20
000138d9: R29 := R31
000138e2: mem := mem with [R31, el]:u64 <- R31 + 0x20
000138e6: mem := mem with [R31, el]:u64 <- R31 + 0x28
000138ee: R20 := R0
000138f3: R30 := 0x56E4
000138f5: call @strlen with return %000138f7

000138f7:
000138fc: #4790 := 0xFFFFFFFFFFFFFFFF + extend:64[31:0[R0]]
00013900: NF := 63:63[#4790]
00013903: VF := 31:31[R0] & ~63:63[#4790]
00013906: ZF := #4790 = 0
00013909: CF := 31:31[R0] | 31:31[R0] & ~63:63[#4790] | ~63:63[#4790]
0001390e: R19 := #4790
0001391a: #4792 := NF
00013914: when #4792 goto %00013912
00038a35: goto %000139a4

00013912:
00013921: R1 := extend:64[31:0[R19]]
00013926: goto %00013924

000139a4:
000139a7: R30 := 0x56F0
000139a9: call @__ctype_b_loc with return %000139ab

000139ab:
000139b0: R1 := extend:64[31:0[R19]]
000139b8: R0 := mem[R0, el]:u64
000139bd: goto %000139bb

000139bb:
000139c5: R2 := high:32[R2].pad:64[mem[R20 + R1]]
000139cd: R3 := extend:64[31:0[R1]] - 1
000139db: #4812 := ~~13:13[R2]
000139d5: when #4812 goto %000139d3
00038a34: goto %00013924

00013924:
0001392d: R1 := R20 + R1
00013935: R0 := R20
0001393d: mem := mem with [R1 + 1] <- 0
00013946: R19 := mem[R31 + 0x10, el]:u64
0001394a: R20 := mem[R31 + 0x18, el]:u64
00013954: R29 := mem[R31, el]:u64
00013958: R30 := mem[R31 + 8, el]:u64
0001395b: R31 := R31 + 0x20
00013960: call R30 with noreturn

000139d3:
000139e2: R1 := R1 - 1
000139ed: #4813 := ~~31:31[R1]
000139e7: when #4813 goto %00013962
00038a33: goto %000139bb

00013962:
00013967: R1 := extend:64[31:0[R3]]
0001396f: R0 := R20
00013977: R1 := R20 + R1
0001397f: mem := mem with [R1 + 1] <- 0
00013988: R19 := mem[R31 + 0x10, el]:u64
0001398c: R20 := mem[R31 + 0x18, el]:u64
00013996: R29 := mem[R31, el]:u64
0001399a: R30 := mem[R31 + 8, el]:u64
0001399d: R31 := R31 + 0x20
000139a2: call R30 with noreturn

00038a36: sub tunnel(tunnel_result)
00038bbe: tunnel_result :: out u32 = low:32[R0]

0001de98:
0001dea0: mem := mem with [R31 - 0x100, el]:u64 <- R29
0001dea4: mem := mem with [R31 - 0xF8, el]:u64 <- R30
0001dea7: R31 := R31 - 0x100
0001deae: R29 := R31
0001deb7: mem := mem with [R31, el]:u64 <- R31 + 0xA0
0001debb: mem := mem with [R31, el]:u64 <- R31 + 0xA8
0001dec1: R27 := 0x27000
0001dec9: R2 := mem[R27 + 0xFB8, el]:u64
0001ded2: mem := mem with [R31, el]:u64 <- R31 + 0x80
0001ded6: mem := mem with [R31, el]:u64 <- R31 + 0x88
0001dedf: R25 := 31:0[R1]
0001dee7: R1 := mem[R2, el]:u64
0001deef: mem := mem with [R31 + 0xF8, el]:u64 <- R1
0001def5: R1 := 0
0001defe: R26 := 31:0[R0]
0001df04: R0 := 0x1000
0001df0d: mem := mem with [R31, el]:u64 <- R31 + 0x20
0001df11: mem := mem with [R31, el]:u64 <- R31 + 0x28
0001df1a: mem := mem with [R31, el]:u64 <- R31 + 0x40
0001df1e: mem := mem with [R31, el]:u64 <- R31 + 0x48
0001df27: mem := mem with [R31, el]:u64 <- R31 + 0x60
0001df2b: mem := mem with [R31, el]:u64 <- R31 + 0x68
0001df30: R30 := 0xC430
0001df32: call @new with return %0001df34

0001df34:
0001df38: R1 := 0x27000
0001df40: R22 := R0
0001df48: R1 := mem[R1 + 0xF78, el]:u64
0001df51: R0 := pad:64[mem[R1, el]:u32]
0001df5d: #10887 := ~31:0[R0] = 0
0001df57: when #10887 goto %0001df55
00038a41: goto %0001df8d

0001df55:
0001df66: R3 := 31:0[R25]
0001df6f: R2 := 31:0[R26]
0001df75: R1 := 0x12000
0001df7c: R0 := 1
0001df83: R1 := R1 + 0x8E0
0001df88: R30 := 0xC5C8
0001df8a: call @__printf_chk with return %0001df8c

0001df8c:
0001df8f: goto %0001df8d

0001df8d:
0001df96: #10897 := extend:64[~31:0[R26]] + 1
0001df9a: NF := 63:63[#10897]
0001df9d: VF := ~31:31[~31:0[R26]] & 63:63[#10897]
0001dfa0: ZF := #10897 = 0
0001dfa3: CF := 31:31[~31:0[R26]] & ~63:63[#10897]
0001dfa8: R20 := #10897
0001dfb0: R0 := 31:0[R26] & 0x3F
0001dfb8: R20 := 31:0[R20] & 0x3F
0001dfc0: R1 := 31:0[R25] & 0x3F
0001dfd8: #10965 := NF
0001dfd9: goto %0001dfd0

0001dfd0:
0001dfd2: when #10965 goto %0001dfc9
0001dfd3: goto %0001dfcd

0001dfcd:
0001dfce: R20 := -31:0[R20]
0001dfd5: goto %0001dfd1

0001dfc9:
0001dfca: R20 := 31:0[R0]
0001dfd4: goto %0001dfd1

0001dfd1:
0001dfe2: #10969 := extend:64[~31:0[R25]] + 1
0001dfe6: NF := 63:63[#10969]
0001dfe9: VF := ~31:31[~31:0[R25]] & 63:63[#10969]
0001dfec: ZF := #10969 = 0
0001dfef: CF := 31:31[~31:0[R25]] & ~63:63[#10969]
0001dff4: R0 := #10969
0001dffc: R0 := 31:0[R0] & 0x3F
0001e002: R23 := 1
0001e01a: #10993 := NF
0001e01b: goto %0001e012

0001e012:
0001e014: when #10993 goto %0001e00b
0001e015: goto %0001e00f

0001e00f:
0001e010: R0 := -31:0[R0]
0001e017: goto %0001e013

0001e00b:
0001e00c: R0 := 31:0[R1]
0001e016: goto %0001e013

0001e013:
0001e023: R21 := extend:64[31:0[R26]]
0001e02c: R24 := extend:64[31:0[R25]]
0001e033: R19 := R31 + 0x70
00038a40: goto %0001e039

0001e039:
0001e03f: R0 := R21
0001e04c: R30 := 0xC498
0001e04f: call @__fdelt_chk with return %0001e051

0001e051:
0001e057: R1 := R0
0001e05f: R0 := R24
0001e068: R2 := mem[R19 + (R1 << 3), el]:u64
0001e070: R2 := R2 | R20
0001e079: mem := mem with [R19 + (R1 << 3), el]:u64 <- R2
0001e07e: R30 := 0xC4B0
0001e080: call @__fdelt_chk with return %0001e082

0001e082:
0001e088: R5 := R0
0001e090: R1 := R19
0001e096: R4 := 0
0001e09c: R3 := 0
0001e0a2: R2 := 0
0001e0ab: R6 := mem[R19 + (R5 << 3), el]:u64
0001e0b2: R0 := 0x400
0001e0ba: R6 := R6 | R23
0001e0c3: mem := mem with [R19 + (R5 << 3), el]:u64 <- R6
0001e0c8: R30 := 0xC4D8
0001e0cb: call @select with return %0001e0cd

0001e0cd:
0001e0d2: #11017 := extend:64[31:0[R0]]
0001e0d6: NF := 63:63[#11017]
0001e0d9: VF := 31:31[R0] & ~63:63[#11017]
0001e0dc: ZF := #11017 = 0
0001e0df: CF := 31:31[R0] | 31:31[R0] & ~63:63[#11017] | ~63:63[#11017]
0001e0f2: #11019 := (NF <> VF | ZF) <> 0
0001e0ec: when #11019 goto %0001e0ea
00038a3f: goto %000294dc

0001e0ea:
0001e0fd: #11021 := ZF
0001e0f7: when #11021 goto %0001e039
00038a3e: goto %0001e100

0001e100:
0001e106: R0 := R22
0001e10b: R30 := 0xC53C
0001e10d: call @free with return %0001e10f

0001e10f:
0001e114: R0 := 0
0001e119: goto %0001e117

000294dc:
000294e2: R0 := R21
000294e7: R30 := 0xC4EC
000294e9: call @__fdelt_chk with return %000294eb

000294eb:
000294f2: R0 := mem[R19 + (R0 << 3), el]:u64
000294ff: #15389 := ~ZF <> 0
000294f9: when #15389 goto %00029411
00038a3d: goto %00029502

00029411:
00029417: R1 := R22
00029420: R0 := 31:0[R26]
00029426: R2 := 0x1000
0002942f: R28 := 31:0[R25]
00029434: R30 := 0xC558
00029436: call @read with return %00029438

00029438:
0002943d: #15365 := extend:64[31:0[R0]]
00029441: NF := 63:63[#15365]
00029444: VF := 31:31[R0] & ~63:63[#15365]
00029447: ZF := #15365 = 0
0002944a: CF := 31:31[R0] | 31:31[R0] & ~63:63[#15365] | ~63:63[#15365]
00029456: R1 := 31:0[R0]
00029464: #15370 := (NF = VF & ~ZF) <> 0
0002945e: when #15370 goto %0002945c
00038a3c: goto %0002948b

00029502:
00029508: R1 := R22
00029511: R0 := 31:0[R25]
00029517: R2 := 0x1000
00029520: R28 := 31:0[R26]
00029525: R30 := 0xC50C
00029527: call @read with return %00029529

00029529:
0002952e: #15399 := extend:64[31:0[R0]]
00029532: NF := 63:63[#15399]
00029535: VF := 31:31[R0] & ~63:63[#15399]
00029538: ZF := #15399 = 0
0002953b: CF := 31:31[R0] | 31:31[R0] & ~63:63[#15399] | ~63:63[#15399]
00029547: R1 := 31:0[R0]
00029554: #15404 := (NF <> VF | ZF) <> 0
0002954e: when #15404 goto %0002948b
00038a3b: goto %0002945c

0002948b:
00029491: R0 := R22
00029499: mem := mem with [R31 + 0x6C, el]:u32 <- 31:0[R1]
0002949e: R30 := 0xC570
000294a0: call @free with return %000294a2

000294a2:
000294a9: R1 := pad:64[mem[R31 + 0x6C, el]:u32]
000294b0: #15382 := extend:64[31:0[R1]]
000294b4: NF := 63:63[#15382]
000294b7: VF := 31:31[R1] & ~63:63[#15382]
000294ba: ZF := #15382 = 0
000294bd: CF := 31:31[R1] | 31:31[R1] & ~63:63[#15382] | ~63:63[#15382]
000294d8: #15384 := ~ZF <> 0
000294d9: goto %000294d0

000294d0:
000294d2: when #15384 goto %000294c9
000294d3: goto %000294cd

000294cd:
000294ce: R0 := 1
000294d5: goto %000294d1

000294c9:
000294ca: R0 := 0
000294d4: goto %000294d1

000294d1:
00038a3a: goto %0001e117

0001e117:
0001e120: R27 := mem[R27 + 0xFB8, el]:u64
0001e128: R1 := mem[R31 + 0xF8, el]:u64
0001e130: R2 := mem[R27, el]:u64
0001e138: #11028 := 1 + ~R2 + R1
0001e13c: NF := 63:63[#11028]
0001e13f: VF := 63:63[R1] & 63:63[~R2] & ~63:63[#11028] | ~63:63[R1] &
          ~63:63[~R2] & 63:63[#11028]
0001e142: ZF := #11028 = 0
0001e145: CF := 63:63[R1] & 63:63[~R2] | 63:63[~R2] & ~63:63[#11028] |
          63:63[R1] & ~63:63[#11028]
0001e149: R1 := #11028
0001e14f: R2 := 0
0001e15b: #11030 := ~ZF <> 0
0001e155: when #11030 goto %0001e153
00038a39: goto %000293ba

0001e153:
0001e160: R30 := 0xC5D0
0001e162: call @__stack_chk_fail with return %00038a37

00038a37:
00038a38: call @http_has_body with noreturn

000293ba:
000293c1: R19 := mem[R31 + 0x10, el]:u64
000293c5: R20 := mem[R31 + 0x18, el]:u64
000293ce: R21 := mem[R31 + 0x20, el]:u64
000293d2: R22 := mem[R31 + 0x28, el]:u64
000293db: R23 := mem[R31 + 0x30, el]:u64
000293df: R24 := mem[R31 + 0x38, el]:u64
000293e8: R25 := mem[R31 + 0x40, el]:u64
000293ec: R26 := mem[R31 + 0x48, el]:u64
000293f5: R27 := mem[R31 + 0x50, el]:u64
000293f9: R28 := mem[R31 + 0x58, el]:u64
00029403: R29 := mem[R31, el]:u64
00029407: R30 := mem[R31 + 8, el]:u64
0002940a: R31 := R31 + 0x100
0002940f: call R30 with noreturn

0002945c:
0002946b: R2 := extend:64[31:0[R0]]
00029473: R1 := R22
0002947c: R0 := 31:0[R28]
00029481: R30 := 0xC528
00029483: call @write with return %00029485

00029485:
00029489: goto %0001e039

00038a42: sub tunnel_add(tunnel_add_result)
00038bbf: tunnel_add_result :: out u32 = low:32[R0]

00021015:
0002101d: mem := mem with [R31 - 0x80, el]:u64 <- R29
00021021: mem := mem with [R31 - 0x78, el]:u64 <- R30
00021024: R31 := R31 - 0x80
0002102b: R29 := R31
00021034: mem := mem with [R31, el]:u64 <- R31 + 0x20
00021038: mem := mem with [R31, el]:u64 <- R31 + 0x28
0002103e: R19 := 0x27000
00021047: R20 := 31:0[R2]
0002104f: R3 := mem[R19 + 0xFB8, el]:u64
00021058: mem := mem with [R31, el]:u64 <- R31 + 0x40
0002105c: mem := mem with [R31, el]:u64 <- R31 + 0x48
00021064: R21 := R0
0002106c: R0 := R1
00021074: R1 := mem[R3, el]:u64
0002107c: mem := mem with [R31 + 0x78, el]:u64 <- R1
00021082: R1 := 0
00021087: R30 := 0x1084C
00021089: call @strdup with return %0002108b

0002108b:
00021091: R22 := R0
00021096: R30 := 0x10854
00021098: call @strlen with return %0002109a

0002109a:
0002109f: #12098 := extend:64[31:0[R0]]
000210a3: NF := 63:63[#12098]
000210a6: VF := 31:31[R0] & ~63:63[#12098]
000210a9: ZF := #12098 = 0
000210ac: CF := 31:31[R0] | 31:31[R0] & ~63:63[#12098] | ~63:63[#12098]
000210bd: #12100 := (NF <> VF | ZF) <> 0
000210b7: when #12100 goto %000210b5
00038a52: goto %00024e49

000210b5:
000210c4: #12101 := extend:64[31:0[R20]]
000210c8: NF := 63:63[#12101]
000210cb: VF := 31:31[R20] & ~63:63[#12101]
000210ce: ZF := #12101 = 0
000210d1: CF := 31:31[R20] | 31:31[R20] & ~63:63[#12101] | ~63:63[#12101]
000210db: R0 := 0x7F
000210e2: R0 := high:32[R0].extend:64[31:0[R0]] & 0xFFFFFFFF0000FFFF |
          0x1000000
000210fa: #12104 := ZF
000210fb: goto %000210f2

000210f2:
000210f4: when #12104 goto %000210eb
000210f5: goto %000210ef

000210ef:
000210f0: R0 := 0
000210f7: goto %000210f3

000210eb:
000210ec: R0 := 31:0[R0]
000210f6: goto %000210f3

000210f3:
00021104: mem := mem with [R31 + 0x50, el]:u32 <- 31:0[R0]
00021109: goto %00021107

00024e49:
00024e4d: R1 := 1
00024e55: R5 := R0
00024e5c: R6 := R22 - 1
00024e65: R4 := 31:0[R1]
00024e6c: R7 := R31 + 0x58
00038a51: goto %00024994

00024994:
000249a5: R3 := high:32[R3].pad:64[mem[R6 + R1]]
000249ac: #13708 := 0xFFFFFFFFFFFFFFC6 + extend:64[31:0[R3]]
000249b0: NF := 63:63[#13708]
000249b3: VF := 31:31[R3] & ~63:63[#13708]
000249b6: ZF := #13708 = 0
000249b9: CF := 31:31[R3] | 31:31[R3] & ~63:63[#13708] | ~63:63[#13708]
000249c7: #13710 := ZF
000249c1: when #13710 goto %00024905
00038a50: goto %000249ca

00024905:
0002490b: R2 := extend:64[31:0[R4]] + 1
00024913: R0 := R22 + R1
0002491a: #13694 := 0xFFFFFFFFFFFFFFFD + extend:64[31:0[R2]]
0002491e: NF := 63:63[#13694]
00024921: VF := 31:31[R2] & ~63:63[#13694]
00024924: ZF := #13694 = 0
00024927: CF := 31:31[R2] | 31:31[R2] & ~63:63[#13694] | ~63:63[#13694]
00024946: #13696 := (NF = VF & ~ZF) <> 0
00024947: goto %0002493e

0002493e:
00024940: when #13696 goto %00024937
00024941: goto %0002493b

0002493b:
0002493c: R3 := 1
00024943: goto %0002493f

00024937:
00024938: R3 := 0
00024942: goto %0002493f

0002493f:
00024950: #13700 := 1 + extend:64[~31:0[R1]] + extend:64[31:0[R5]]
00024954: NF := 63:63[#13700]
00024957: VF := 31:31[~31:0[R1]] & 31:31[R5] & ~63:63[#13700] |
          ~31:31[~31:0[R1]] & ~31:31[R5] & 63:63[#13700]
0002495a: ZF := #13700 = 0
0002495d: CF := 31:31[~31:0[R1]] & 31:31[R5] | 31:31[R5] & ~63:63[#13700] |
          31:31[~31:0[R1]] & ~63:63[#13700]
0002497c: #13702 := (NF <> VF | ZF) <> 0
0002497d: goto %00024974

00024974:
00024976: when #13702 goto %0002496d
00024977: goto %00024971

00024971:
00024972: R0 := 1
00024979: goto %00024975

0002496d:
0002496e: R0 := 0
00024978: goto %00024975

00024975:
00024987: R4 := 31:0[R2]
00024990: R1 := R1 + 1
0002499c: #13707 := ~ZF <> 0
00024996: when #13707 goto %00024994
00038a4f: goto %00024e26

00024e26:
00024e2b: #13830 := 0xFFFFFFFFFFFFFFFC + extend:64[31:0[R4]]
00024e2f: NF := 63:63[#13830]
00024e32: VF := 31:31[R4] & ~63:63[#13830]
00024e35: ZF := #13830 = 0
00024e38: CF := 31:31[R4] | 31:31[R4] & ~63:63[#13830] | ~63:63[#13830]
00024e46: #13832 := ~ZF <> 0
00024e40: when #13832 goto %00024dbc
00038a4e: goto %00024a5f

000249ca:
000249cf: #13711 := 0xFFFFFFFFFFFFFFFD + extend:64[31:0[R4]]
000249d3: NF := 63:63[#13711]
000249d6: VF := 31:31[R4] & ~63:63[#13711]
000249d9: ZF := #13711 = 0
000249dc: CF := 31:31[R4] | 31:31[R4] & ~63:63[#13711] | ~63:63[#13711]
000249f9: #13713 := (NF = VF & ~ZF) <> 0
000249fa: goto %000249f1

000249f1:
000249f3: when #13713 goto %000249ea
000249f4: goto %000249ee

000249ee:
000249ef: R3 := 1
000249f6: goto %000249f2

000249ea:
000249eb: R3 := 0
000249f5: goto %000249f2

000249f2:
00024a03: #13717 := 1 + extend:64[~31:0[R1]] + extend:64[31:0[R5]]
00024a07: NF := 63:63[#13717]
00024a0a: VF := 31:31[~31:0[R1]] & 31:31[R5] & ~63:63[#13717] |
          ~31:31[~31:0[R1]] & ~31:31[R5] & 63:63[#13717]
00024a0d: ZF := #13717 = 0
00024a10: CF := 31:31[~31:0[R1]] & 31:31[R5] | 31:31[R5] & ~63:63[#13717] |
          31:31[~31:0[R1]] & ~63:63[#13717]
00024a2d: #13719 := (NF <> VF | ZF) <> 0
00024a2e: goto %00024a25

00024a25:
00024a27: when #13719 goto %00024a1e
00024a28: goto %00024a22

00024a22:
00024a23: R2 := 1
00024a2a: goto %00024a26

00024a1e:
00024a1f: R2 := 0
00024a29: goto %00024a26

00024a26:
00024a36: R1 := R1 + 1
00024a43: #13721 := ~ZF <> 0
00024a3d: when #13721 goto %00024994
00038a4d: goto %00024a46

00024a46:
00024a4b: #13722 := 0xFFFFFFFFFFFFFFFC + extend:64[31:0[R4]]
00024a4f: NF := 63:63[#13722]
00024a52: VF := 31:31[R4] & ~63:63[#13722]
00024a55: ZF := #13722 = 0
00024a58: CF := 31:31[R4] | 31:31[R4] & ~63:63[#13722] | ~63:63[#13722]
00024a67: #13724 := ZF
00024a61: when #13724 goto %00024a5f
00038a4c: goto %00024dbc

00024a5f:
00024a6f: R1 := R22
00024a76: R0 := R31 + 0x50
00024a7f: mem := mem with [R31, el]:u64 <- R31 + 0x60
00024a83: mem := mem with [R31, el]:u64 <- R31 + 0x68
00024a8b: mem := mem with [R31 + 0x40, el]:u64 <- R25
00024a90: R30 := 0x1094C
00024a92: call @so_resolv with return %00024a94

00024a94:
00024a9e: #13730 := 31:0[R0] = 0
00024a98: when #13730 goto %00024a96
00038a4b: goto %00024ad9

00024a96:
00024aa6: R3 := R22
00024aac: R2 := 0x13000
00024ab3: R2 := R2 + 0xF10
00024aba: R1 := 1
00024ac1: R0 := 3
00024ac6: R30 := 0x10A80
00024ac8: call @__syslog_chk with return %00024aca

00024aca:
00024acf: R0 := 1
00024ad4: R30 := 0x10A88
00024ad6: call @myexit with return %00024ad8

00024ad8:
00024adb: goto %00024ad9

00024ad9:
00024ae2: R20 := mem[R31 + 0x60, el]:u64
00024ae9: R2 := 0xA
00024aef: R1 := 0
00024af6: R25 := 3
00024afe: R0 := R20
00024b05: R24 := 2
00024b0a: R30 := 0x1096C
00024b0c: call @strtol with return %00024b0e

00024b0e:
00024b14: R23 := R0
00024b20: #13740 := 31:0[R0] = 0
00024b1a: when #13740 goto %00024b18
00038a4a: goto %00024b5b

00024dbc:
00024dc1: #13822 := extend:64[31:0[R20]]
00024dc5: NF := 63:63[#13822]
00024dc8: VF := 31:31[R20] & ~63:63[#13822]
00024dcb: ZF := #13822 = 0
00024dce: CF := 31:31[R20] | 31:31[R20] & ~63:63[#13822] | ~63:63[#13822]
00024dd8: R0 := 0x7F
00024ddf: R0 := high:32[R0].extend:64[31:0[R0]] & 0xFFFFFFFF0000FFFF |
          0x1000000
00024df7: #13825 := ~ZF <> 0
00024df8: goto %00024def

00024def:
00024df1: when #13825 goto %00024de8
00024df2: goto %00024dec

00024dec:
00024ded: R0 := 31:0[R0]
00024df4: goto %00024df0

00024de8:
00024de9: R0 := 0
00024df3: goto %00024df0

00024df0:
00024e01: mem := mem with [R31 + 0x50, el]:u32 <- 31:0[R0]
00024e08: #13827 := 0xFFFFFFFFFFFFFFFD + extend:64[31:0[R4]]
00024e0c: NF := 63:63[#13827]
00024e0f: VF := 31:31[R4] & ~63:63[#13827]
00024e12: ZF := #13827 = 0
00024e15: CF := 31:31[R4] | 31:31[R4] & ~63:63[#13827] | ~63:63[#13827]
00024e23: #13829 := ZF
00024e1d: when #13829 goto %00024cc1
00038a49: goto %00021107

00024cc1:
00024cc7: R20 := R22
00024cce: R2 := 0xA
00024cd6: R0 := R20
00024cdc: R1 := 0
00024ce5: mem := mem with [R31, el]:u64 <- R31 + 0x60
00024ce9: mem := mem with [R31, el]:u64 <- R31 + 0x68
00024cf0: R24 := 1
00024cf8: mem := mem with [R31 + 0x40, el]:u64 <- R25
00024cfd: R30 := 0x10AC0
00024cff: call @strtol with return %00024d01

00024d01:
00024d06: R25 := 2
00024d0e: R23 := R0
00024d19: #13803 := ~31:0[R0] = 0
00024d13: when #13803 goto %00024b5b
00038a48: goto %00024b18

00024b18:
00024b28: R3 := R20
00024b2e: R2 := 0x13000
00024b35: R2 := R2 + 0xF38
00024b3c: R1 := 1
00024b43: R0 := 3
00024b48: R30 := 0x10AE4
00024b4a: call @__syslog_chk with return %00024b4c

00024b4c:
00024b51: R0 := 1
00024b56: R30 := 0x10AEC
00024b58: call @myexit with return %00024b5a

00024b5a:
00024b5d: goto %00024b5b

00024b5b:
00024b63: R0 := R31 + 0x58
00024b70: R0 := pad:64[mem[R24]]
00024b7c: #13744 := 31:0[R0] = 0
00024b76: when #13744 goto %00024b74
00038a47: goto %00024da7

00024da7:
00024dae: R0 := pad:64[mem[R25]]
00024db9: #13821 := 31:0[R0] = 0
00024db3: when #13821 goto %00024b74
00038a46: goto %00024bbf

00024b74:
00024b84: R4 := R25
00024b8c: R3 := R24
00024b92: R2 := 0x13000
00024b99: R2 := R2 + 0xF58
00024ba0: R1 := 1
00024ba7: R0 := 3
00024bac: R30 := 0x10A5C
00024bae: call @__syslog_chk with return %00024bb0

00024bb0:
00024bb5: R0 := 1
00024bba: R30 := 0x10A64
00024bbc: call @myexit with return %00024bbe

00024bbe:
00024bc1: goto %00024bbf

00024bbf:
00024bc8: R0 := R24
00024bcd: R30 := 0x10998
00024bcf: call @strlen with return %00024bd1

00024bd1:
00024bd7: R20 := R0
00024bdf: R0 := R25
00024be4: R30 := 0x109A4
00024be6: call @strlen with return %00024be8

00024be8:
00024bee: R0 := R20 + R0
00024bf5: R0 := R0 + 3
00024bfa: R30 := 0x109B0
00024bfc: call @new with return %00024bfe

00024bfe:
00024c04: R1 := R24
00024c0c: R20 := R0
00024c11: R30 := 0x109BC
00024c14: call @strcpy with return %00024c16

00024c16:
00024c1c: R0 := R20
00024c21: R30 := 0x109C4
00024c23: call @strlen with return %00024c25

00024c25:
00024c2b: R2 := R0
00024c32: R3 := 0x3A
00024c39: R0 := R0 + 1
00024c41: R1 := R25
00024c49: R0 := R20 + R0
00024c50: R30 := 0x109E0
00024c52: call @strcpy with return %00024c54

00024c54:
00024c5b: R1 := pad:64[mem[R31 + 0x50, el]:u32]
00024c64: R0 := 31:0[R23]
00024c69: R30 := 0x109EC
00024c6b: call @so_listen with return %00024c6d

00024c6d:
00024c72: R1 := extend:64[31:0[R0]]
00024c79: #13785 := extend:64[31:0[R1]]
00024c7d: NF := 63:63[#13785]
00024c80: VF := 31:31[R1] & ~63:63[#13785]
00024c83: ZF := #13785 = 0
00024c86: CF := 31:31[R1] | 31:31[R1] & ~63:63[#13785] | ~63:63[#13785]
00024c97: #13787 := (NF <> VF | ZF) <> 0
00024c91: when #13787 goto %00024c8f
00038a45: goto %00024d1c

00024c8f:
00024c9f: R0 := R20
00024ca4: R30 := 0x10A94
00024ca6: call @free with return %00024ca8

00024ca8:
00024caf: R23 := mem[R31 + 0x30, el]:u64
00024cb3: R24 := mem[R31 + 0x38, el]:u64
00024cbb: R25 := mem[R31 + 0x40, el]:u64
00024cbf: goto %00021133

00024d1c:
00024d22: R0 := mem[R21, el]:u64
00024d2a: R2 := R20
00024d2f: R30 := 0x10A04
00024d31: call @plist_add with return %00024d33

00024d33:
00024d39: R1 := R0
00024d42: R0 := pad:64[mem[R31 + 0x50, el]:u32]
00024d4a: mem := mem with [R21, el]:u64 <- R1
00024d4f: R30 := 0x10A14
00024d51: call @inet_ntoa with return %00024d53

00024d53:
00024d59: R3 := R0
00024d62: R4 := 31:0[R23]
00024d6a: R5 := R20
00024d70: R2 := 0x13000
00024d77: R1 := 1
00024d7e: R2 := R2 + 0xF78
00024d85: R0 := 6
00024d8a: R30 := 0x10A34
00024d8c: call @__syslog_chk with return %00024d8e

00024d8e:
00024d95: R23 := mem[R31 + 0x30, el]:u64
00024d99: R24 := mem[R31 + 0x38, el]:u64
00024da1: R25 := mem[R31 + 0x40, el]:u64
00024da5: goto %00021133

00021107:
0002110e: R1 := 0x13000
00021115: R1 := R1 + 0xF98
0002111c: R0 := 1
00021121: R30 := 0x108CC
00021123: call @__printf_chk with return %00021125

00021125:
0002112a: R0 := 1
0002112f: R30 := 0x108D4
00021131: call @myexit with return %00021133

00021133:
00021139: R19 := mem[R19 + 0xFB8, el]:u64
00021141: R0 := mem[R31 + 0x78, el]:u64
00021149: R1 := mem[R19, el]:u64
00021151: #12109 := 1 + ~R1 + R0
00021155: NF := 63:63[#12109]
00021158: VF := 63:63[R0] & 63:63[~R1] & ~63:63[#12109] | ~63:63[R0] &
          ~63:63[~R1] & 63:63[#12109]
0002115b: ZF := #12109 = 0
0002115e: CF := 63:63[R0] & 63:63[~R1] | 63:63[~R1] & ~63:63[#12109] |
          63:63[R0] & ~63:63[#12109]
00021162: R0 := #12109
00021168: R1 := 0
00021174: #12111 := ~ZF <> 0
0002116e: when #12111 goto %0002116c
00038a44: goto %000248ce

0002116c:
0002117d: mem := mem with [R31, el]:u64 <- R31 + 0x60
00021181: mem := mem with [R31, el]:u64 <- R31 + 0x68
00021189: mem := mem with [R31 + 0x40, el]:u64 <- R25
0002118e: R30 := 0x10B14
00021190: call @__stack_chk_fail with return %00021192

00021192:
00038a43: call @noproxy_add with noreturn

000248ce:
000248d4: R0 := R22
000248dd: R19 := mem[R31 + 0x10, el]:u64
000248e1: R20 := mem[R31 + 0x18, el]:u64
000248ea: R21 := mem[R31 + 0x20, el]:u64
000248ee: R22 := mem[R31 + 0x28, el]:u64
000248f8: R29 := mem[R31, el]:u64
000248fc: R30 := mem[R31 + 8, el]:u64
000248ff: R31 := R31 + 0x80
00024903: call @free with noreturn

00038a53: sub tunnel_thread(tunnel_thread_result)
00038bc0: tunnel_thread_result :: out u32 = low:32[R0]

00021768:
00021770: mem := mem with [R31 - 0x20, el]:u64 <- R29
00021774: mem := mem with [R31 - 0x18, el]:u64 <- R30
00021777: R31 := R31 - 0x20
0002177e: R29 := R31
00021787: mem := mem with [R31, el]:u64 <- R31 + 0x20
0002178b: mem := mem with [R31, el]:u64 <- R31 + 0x28
00021793: R19 := R0
0002179b: R0 := mem[R0 + 8, el]:u64
000217a0: R30 := 0x10F18
000217a2: call @strdup with return %000217a4

000217a4:
000217aa: R20 := R0
000217b1: R1 := 0x3A
000217b6: R30 := 0x10F24
000217b8: call @strchr with return %000217ba

000217ba:
000217c4: #12266 := R0 = 0
000217be: when #12266 goto %000217bc
00038a56: goto %000245fd

000245fd:
00024603: mem := mem with [R0] <- 0
00038a55: goto %000217bc

000217bc:
000217cc: R0 := R20
000217d1: R30 := 0x10F34
000217d3: call @noproxy_match with return %000217d5

000217d5:
000217df: #12270 := 31:0[R0] = 0
000217d9: when #12270 goto %000217d7
00038a54: goto %00022748

000217d7:
000217e7: R0 := R19
000217ec: R30 := 0x10FA0
000217ee: call @forward_tunnel with return %000217f0

000217f0:
000217f3: goto %000217f1

00022748:
0002274e: R0 := R19
00022753: R30 := 0x10F40
00022756: call @direct_tunnel with return %000217f1

000217f1:
000217fa: R0 := R20
000217ff: R30 := 0x10F48
00021801: call @free with return %00021803

00021803:
00021809: R0 := R19
0002180f: R19 := 0x28000
00021816: R19 := R19 + 0x4D8
0002181b: R30 := 0x10F58
0002181d: call @free with return %0002181f

0002181f:
00021824: R20 := R19 + 0x28
0002182c: R0 := R20
00021831: R30 := 0x10F64
00021833: call @pthread_mutex_lock with return %00021835

00021835:
00021838: R30 := 0x10F68
0002183a: call @pthread_self with return %0002183c

0002183c:
00021842: R1 := R0
0002184a: R0 := mem[R19 + 0x58, el]:u64
00021850: R2 := 0
00021855: R30 := 0x10F78
00021857: call @plist_add with return %00021859

00021859:
0002185f: R1 := R0
00021867: R0 := R20
0002186f: mem := mem with [R19 + 0x58, el]:u64 <- R1
00021874: R30 := 0x10F88
00021876: call @pthread_mutex_unlock with return %00021878

00021878:
0002187c: R0 := 0
00021885: R19 := mem[R31 + 0x10, el]:u64
00021889: R20 := mem[R31 + 0x18, el]:u64
00021893: R29 := mem[R31, el]:u64
00021897: R30 := mem[R31 + 8, el]:u64
0002189a: R31 := R31 + 0x20
0002189f: call R30 with noreturn

00038a57: sub umask(umask_result)
00038bc1: umask_result :: out u32 = low:32[R0]

0002c38f:
00030826: R16 := 0x27000
0003082e: R17 := mem[R16 + 0xEF8, el]:u64
00030835: R16 := R16 + 0xEF8
0003083a: call R17 with noreturn

00038a58: sub unicode(unicode_result)
00038bc2: unicode_result :: out u32 = low:32[R0]

0000f6b8:
0000f6c0: mem := mem with [R31 - 0x40, el]:u64 <- R29
0000f6c4: mem := mem with [R31 - 0x38, el]:u64 <- R30
0000f6c7: R31 := R31 - 0x40
0000f6ce: R29 := R31
0000f6d7: mem := mem with [R31, el]:u64 <- R31 + 0x40
0000f6db: mem := mem with [R31, el]:u64 <- R31 + 0x48
0000f6e3: mem := mem with [R31 + 0x30, el]:u64 <- R23
0000f6eb: R23 := R0
0000f6f7: #106 := R1 = 0
0000f6f1: when #106 goto %0000f6ef
00038a5c: goto %0002ac19

0000f6ef:
0000f6ff: mem := mem with [R0, el]:u64 <- 0
0000f706: R21 := 0
0000f70f: R0 := 31:0[R21]
0000f718: R21 := mem[R31 + 0x20, el]:u64
0000f71c: R22 := mem[R31 + 0x28, el]:u64
0000f724: R23 := mem[R31 + 0x30, el]:u64
0000f72e: R29 := mem[R31, el]:u64
0000f732: R30 := mem[R31 + 8, el]:u64
0000f735: R31 := R31 + 0x40
0000f73a: call R30 with noreturn

0002ac19:
0002ac1f: R0 := R1
0002ac25: R21 := 0x40
0002ac2e: mem := mem with [R31, el]:u64 <- R31 + 0x20
0002ac32: mem := mem with [R31, el]:u64 <- R31 + 0x28
0002ac3a: R19 := R1
0002ac3f: R30 := 0x5954
0002ac41: call @strlen with return %0002ac43

0002ac43:
0002ac49: #16101 := 1 + ~R21 + R0
0002ac4d: NF := 63:63[#16101]
0002ac50: VF := 63:63[R0] & 63:63[~R21] & ~63:63[#16101] | ~63:63[R0] &
          ~63:63[~R21] & 63:63[#16101]
0002ac53: ZF := #16101 = 0
0002ac56: CF := 63:63[R0] & 63:63[~R21] | 63:63[~R21] & ~63:63[#16101] |
          63:63[R0] & ~63:63[#16101]
0002ac5e: R1 := 1
0002ac75: #16103 := (~CF | ZF) <> 0
0002ac76: goto %0002ac6d

0002ac6d:
0002ac6f: when #16103 goto %0002ac67
0002ac70: goto %0002ac6a

0002ac6a:
0002ac6b: R21 := R21
0002ac72: goto %0002ac6e

0002ac67:
0002ac68: R21 := R0
0002ac71: goto %0002ac6e

0002ac6e:
0002ac7f: R22 := R0
0002ac88: R20 := 31:0[R21]
0002ac90: R21 := 31:0[R21] << 0x21
0002ac97: R0 := extend:64[31:0[R21]]
0002ac9c: R30 := 0x5974
0002ac9e: call @calloc with return %0002aca0

0002aca0:
0002aca6: R1 := R0
0002acb2: #16116 := R22 = 0
0002acac: when #16116 goto %0002acaa
00038a5b: goto %0002acfd

0002acfd:
0002ad01: R2 := 0
00038a5a: goto %0002ad03

0002ad03:
0002ad08: R3 := R2 << 1
0002ad11: R4 := high:32[R4].pad:64[mem[R19 + R2]]
0002ad18: R2 := R2 + 1
0002ad20: #16129 := 1 + extend:64[~31:0[R2]] + extend:64[31:0[R20]]
0002ad24: NF := 63:63[#16129]
0002ad27: VF := 31:31[~31:0[R2]] & 31:31[R20] & ~63:63[#16129] |
          ~31:31[~31:0[R2]] & ~31:31[R20] & 63:63[#16129]
0002ad2a: ZF := #16129 = 0
0002ad2d: CF := 31:31[~31:0[R2]] & 31:31[R20] | 31:31[R20] & ~63:63[#16129] |
          31:31[~31:0[R2]] & ~63:63[#16129]
0002ad3f: #16131 := (NF = VF & ~ZF) <> 0
0002ad39: when #16131 goto %0002ad03
00038a59: goto %0002acaa

0002acaa:
0002acbb: R19 := mem[R31 + 0x10, el]:u64
0002acbf: R20 := mem[R31 + 0x18, el]:u64
0002acc7: mem := mem with [R23, el]:u64 <- R1
0002acd0: R0 := 31:0[R21]
0002acd9: R21 := mem[R31 + 0x20, el]:u64
0002acdd: R22 := mem[R31 + 0x28, el]:u64
0002ace5: R23 := mem[R31 + 0x30, el]:u64
0002acef: R29 := mem[R31, el]:u64
0002acf3: R30 := mem[R31 + 8, el]:u64
0002acf6: R31 := R31 + 0x40
0002acfb: call R30 with noreturn

00038a5d: sub unlink(unlink_name, unlink_result)
00038bc3: unlink_name :: in u64 = R0
00038bc4: unlink_result :: out u32 = low:32[R0]

0002b929:
000308a3: R16 := 0x27000
000308ab: R17 := mem[R16 + 0xF20, el]:u64
000308b2: R16 := R16 + 0xF20
000308b7: call R17 with noreturn

00038a5e: sub uppercase(uppercase_result)
00038bc5: uppercase_result :: out u32 = low:32[R0]

0000f5ff:
0000f607: mem := mem with [R31 - 0x20, el]:u64 <- R29
0000f60b: mem := mem with [R31 - 0x18, el]:u64 <- R30
0000f60e: R31 := R31 - 0x20
0000f615: R29 := R31
0000f61e: mem := mem with [R31, el]:u64 <- R31 + 0x20
0000f622: mem := mem with [R31, el]:u64 <- R31 + 0x28
0000f62a: R20 := R0
0000f630: R19 := 0
0000f635: goto %0000f633

0000f633:
0000f63c: R0 := R20
0000f641: R30 := 0x5910
0000f643: call @strlen with return %0000f645

0000f645:
0000f64b: #92 := 1 + ~R19 + R0
0000f64f: NF := 63:63[#92]
0000f652: VF := 63:63[R0] & 63:63[~R19] & ~63:63[#92] | ~63:63[R0] &
          ~63:63[~R19] & 63:63[#92]
0000f655: ZF := #92 = 0
0000f658: CF := 63:63[R0] & 63:63[~R19] | 63:63[~R19] & ~63:63[#92] |
          63:63[R0] & ~63:63[#92]
0000f667: #94 := (CF & ~ZF) <> 0
0000f661: when #94 goto %0000f65f
00038a60: goto %0000f68d

0000f68d:
0000f693: R0 := R20
0000f69c: R19 := mem[R31 + 0x10, el]:u64
0000f6a0: R20 := mem[R31 + 0x18, el]:u64
0000f6aa: R29 := mem[R31, el]:u64
0000f6ae: R30 := mem[R31 + 8, el]:u64
0000f6b1: R31 := R31 + 0x20
0000f6b6: call R30 with noreturn

0000f65f:
0000f66c: R30 := 0x58F4
0000f66f: call @__ctype_toupper_loc with return %0000f671

0000f671:
0000f678: R1 := high:32[R1].pad:64[mem[R20 + R19]]
0000f680: R0 := mem[R0, el]:u64
0000f68b: R19 := R19 + 1
00038a5f: goto %0000f633

00038a61: sub urlencode(urlencode_result)
00038bc6: urlencode_result :: out u32 = low:32[R0]

0000f73c:
0000f744: mem := mem with [R31 - 0x60, el]:u64 <- R29
0000f748: mem := mem with [R31 - 0x58, el]:u64 <- R30
0000f74b: R31 := R31 - 0x60
0000f752: R29 := R31
0000f75b: mem := mem with [R31, el]:u64 <- R31 + 0x20
0000f75f: mem := mem with [R31, el]:u64 <- R31 + 0x28
0000f765: R20 := 0
0000f76e: mem := mem with [R31, el]:u64 <- R31 + 0x40
0000f772: mem := mem with [R31, el]:u64 <- R31 + 0x48
0000f779: R21 := 0
0000f780: R22 := extend:64[31:0[R21]]
0000f789: mem := mem with [R31, el]:u64 <- R31 + 0x60
0000f78d: mem := mem with [R31, el]:u64 <- R31 + 0x68
0000f795: R23 := R0
0000f79e: mem := mem with [R31, el]:u64 <- R31 + 0x80
0000f7a2: mem := mem with [R31, el]:u64 <- R31 + 0x88
0000f7a8: R26 := 0x11000
0000f7af: R25 := 0x7E
0000f7b8: mem := mem with [R31, el]:u64 <- R31 + 0xA0
0000f7bc: mem := mem with [R31, el]:u64 <- R31 + 0xA8
0000f7c1: R30 := 0x5A08
0000f7c3: call @strlen with return %0000f7c5

0000f7c5:
0000f7c9: R1 := 1
0000f7d1: R0 := R0 + (R0 << 1)
0000f7d8: R26 := R26 + 0x6E8
0000f7e0: R0 := R0 + R1
0000f7e5: R30 := 0x5A1C
0000f7e7: call @calloc with return %0000f7e9

0000f7e9:
0000f7ef: R24 := R0
0000f7f7: R0 := R23
0000f7fc: R30 := 0x5A28
0000f7fe: call @strlen with return %0000f800

0000f800:
0000f806: #138 := 1 + ~R20 + R0
0000f80a: NF := 63:63[#138]
0000f80d: VF := 63:63[R0] & 63:63[~R20] & ~63:63[#138] | ~63:63[R0] &
          ~63:63[~R20] & 63:63[#138]
0000f810: ZF := #138 = 0
0000f813: CF := 63:63[R0] & 63:63[~R20] | 63:63[~R20] & ~63:63[#138] |
          63:63[R0] & ~63:63[#138]
0000f822: #140 := (~CF | ZF) <> 0
0000f81c: when #140 goto %0000f81a
00038a67: goto %0000f8f4

0000f8f4:
0000f901: R30 := 0x5A34
0000f904: call @__ctype_b_loc with return %0000f906

0000f906:
0000f90d: R28 := high:32[R28].pad:64[mem[R23 + R20]]
0000f915: R1 := mem[R0, el]:u64
0000f91d: R27 := R24 + R22
0000f924: R0 := pad:64[7:0[R28]] << 1
0000f92c: R19 := R28
0000f93a: #177 := ~~11:11[R0]
0000f934: when #177 goto %0000f932
00038a66: goto %0000f94d

0000f94d:
0000f950: R30 := 0x5A54
0000f952: call @__ctype_tolower_loc with return %0000f954

0000f954:
0000f95a: R0 := mem[R0, el]:u64
0000f962: R1 := extend:64[31:0[R28]] - 0x2D
0000f96a: R1 := 31:0[R1] & 0xFF
0000f974: R0 := extend:64[31:0[R0]] - 0x61
0000f97b: #200 := 0xFFFFFFFFFFFFFFE7 + extend:64[31:0[R0]]
0000f97f: NF := 63:63[#200]
0000f982: VF := 31:31[R0] & ~63:63[#200]
0000f985: ZF := #200 = 0
0000f988: CF := 31:31[R0] | 31:31[R0] & ~63:63[#200] | ~63:63[#200]
0000f997: #202 := (~CF | ZF) <> 0
0000f991: when #202 goto %0000f932
00038a65: goto %0000f99a

0000f99a:
0000f99f: #203 := 0xFFFFFFFFFFFFFFA1 + extend:64[31:0[R28]]
0000f9a3: NF := 63:63[#203]
0000f9a6: VF := 31:31[R28] & ~63:63[#203]
0000f9a9: ZF := #203 = 0
0000f9ac: CF := 31:31[R28] | 31:31[R28] & ~63:63[#203] | ~63:63[#203]
0000f9d5: #205 := ~ZF <> 0
0000f9d6: goto %0000f9cd

0000f9cd:
0000f9cf: when #205 goto %0000f9b5
0000f9d0: goto %0000f9c1

0000f9c1:
0000f9c2: NF := 0
0000f9c5: ZF := 0
0000f9c8: CF := 0
0000f9cb: VF := 0
0000f9d2: goto %0000f9ce

0000f9b5:
0000f9b6: NF := 63:63[extend:64[31:0[R1]] - 1]
0000f9b9: VF := 31:31[R1] & ~63:63[extend:64[31:0[R1]] - 1]
0000f9bc: ZF := extend:64[31:0[R1]] - 1 = 0
0000f9bf: CF := 31:31[R1] | ~63:63[extend:64[31:0[R1]] - 1] | 31:31[R1] &
          ~63:63[extend:64[31:0[R1]] - 1]
0000f9d1: goto %0000f9ce

0000f9ce:
0000fa04: #208 := (CF & ~ZF) <> 0
0000fa05: goto %0000f9fc

0000f9fc:
0000f9fe: when #208 goto %0000f9df
0000f9ff: goto %0000f9f0

0000f9f0:
0000f9f1: NF := 0
0000f9f4: ZF := 1
0000f9f7: CF := 0
0000f9fa: VF := 0
0000fa01: goto %0000f9fd

0000f9df:
0000f9e0: #209 := ~31:0[R25]
0000f9e5: NF := 63:63[extend:64[31:0[R28]] + extend:64[#209] + 1]
0000f9e8: VF := 31:31[R28] & 31:31[#209] & ~63:63[extend:64[31:0[R28]] +
          extend:64[#209] + 1] | ~31:31[R28] & ~31:31[#209] &
          63:63[extend:64[31:0[R28]] + extend:64[#209] + 1]
0000f9eb: ZF := extend:64[31:0[R28]] + extend:64[#209] + 1 = 0
0000f9ee: CF := 31:31[R28] & 31:31[#209] | 31:31[#209] &
          ~63:63[extend:64[31:0[R28]] + extend:64[#209] + 1] | 31:31[R28] &
          ~63:63[extend:64[31:0[R28]] + extend:64[#209] + 1]
0000fa00: goto %0000f9fd

0000f9fd:
0000fa11: #211 := ~ZF <> 0
0000fa0b: when #211 goto %0000f883
00038a64: goto %0000f932

0000f883:
0000f88a: R4 := 31:0[R28]
0000f892: R0 := R27
0000f89a: R3 := R26
0000f8a0: R2 := 0xFFFFFFFFFFFFFFFF
0000f8a7: R1 := 1
0000f8af: R21 := extend:64[31:0[R21]] + 3
0000f8b6: R20 := R20 + 1
0000f8bb: R30 := 0x5AE0
0000f8be: call @__sprintf_chk with return %0000f8c0

0000f8c0:
0000f8c3: goto %0000f8c1

0000f932:
0000f942: R21 := extend:64[31:0[R21]] + 1
0000f949: R20 := R20 + 1
00038a63: goto %0000f8c1

0000f8c1:
0000f8ca: R0 := R23
0000f8d1: R22 := extend:64[31:0[R21]]
0000f8d6: R30 := 0x5A98
0000f8d8: call @strlen with return %0000f8da

0000f8da:
0000f8e0: #166 := 1 + ~R20 + R0
0000f8e4: NF := 63:63[#166]
0000f8e7: VF := 63:63[R0] & 63:63[~R20] & ~63:63[#166] | ~63:63[R0] &
          ~63:63[~R20] & 63:63[#166]
0000f8ea: ZF := #166 = 0
0000f8ed: CF := 63:63[R0] & 63:63[~R20] | 63:63[~R20] & ~63:63[#166] |
          63:63[R0] & ~63:63[#166]
0000f8fc: #168 := (CF & ~ZF) <> 0
0000f8f6: when #168 goto %0000f8f4
00038a62: goto %0000f81a

0000f81a:
0000f82a: R0 := R24
0000f833: R19 := mem[R31 + 0x10, el]:u64
0000f837: R20 := mem[R31 + 0x18, el]:u64
0000f840: R21 := mem[R31 + 0x20, el]:u64
0000f844: R22 := mem[R31 + 0x28, el]:u64
0000f84d: R23 := mem[R31 + 0x30, el]:u64
0000f851: R24 := mem[R31 + 0x38, el]:u64
0000f85a: R25 := mem[R31 + 0x40, el]:u64
0000f85e: R26 := mem[R31 + 0x48, el]:u64
0000f867: R27 := mem[R31 + 0x50, el]:u64
0000f86b: R28 := mem[R31 + 0x58, el]:u64
0000f875: R29 := mem[R31, el]:u64
0000f879: R30 := mem[R31 + 8, el]:u64
0000f87c: R31 := R31 + 0x60
0000f881: call R30 with noreturn

00038a68: sub write(write_arg1, write_arg2, write_arg3, write_result)
00038bc7: write_arg1 :: in u32 = low:32[R0]
00038bc8: write_arg2 :: in out u64 = R1
00038bc9: write_arg3 :: in u64 = R2
00038bca: write_result :: out u64 = R0

0001db5d:
000304d4: R16 := 0x27000
000304dc: R17 := mem[R16 + 0xDE8, el]:u64
000304e3: R16 := R16 + 0xDE8
000304e8: call R17 with noreturn

00038a69: sub www_authenticate(www_authenticate_result)
00038bcb: www_authenticate_result :: out u32 = low:32[R0]

000203d4:
000203dc: mem := mem with [R31 - 0x80, el]:u64 <- R29
000203e0: mem := mem with [R31 - 0x78, el]:u64 <- R30
000203e3: R31 := R31 - 0x80
000203ea: R29 := R31
000203f3: mem := mem with [R31, el]:u64 <- R31 + 0x40
000203f7: mem := mem with [R31, el]:u64 <- R31 + 0x48
000203fd: R22 := 0x27000
00020406: R21 := 31:0[R0]
0002040e: R4 := mem[R22 + 0xFB8, el]:u64
00020417: mem := mem with [R31, el]:u64 <- R31 + 0x20
0002041b: mem := mem with [R31, el]:u64 <- R31 + 0x28
00020423: R0 := mem[R4, el]:u64
0002042b: mem := mem with [R31 + 0x78, el]:u64 <- R0
00020431: R0 := 0
0002043a: mem := mem with [R31, el]:u64 <- R31 + 0x60
0002043e: mem := mem with [R31, el]:u64 <- R31 + 0x68
00020444: R0 := 0x1000
0002044c: R24 := R1
00020454: R23 := R2
0002045d: mem := mem with [R31, el]:u64 <- R31 + 0x80
00020461: mem := mem with [R31, el]:u64 <- R31 + 0x88
00020469: R25 := R3
00020472: mem := mem with [R31, el]:u64 <- R31 + 0xA0
00020476: mem := mem with [R31, el]:u64 <- R31 + 0xA8
0002047b: R30 := 0xE998
0002047d: call @new with return %0002047f

0002047f:
00020483: R1 := 0x12000
0002048a: R2 := R1 + 0xB50
00020492: R20 := R0
00020499: R27 := R31 + 0x70
000204a1: R1 := R25
000204a9: R0 := R27
000204b2: R3 := pad:64[mem[R2, el]:u32]
000204bc: mem := mem with [R20, el]:u32 <- 31:0[R3]
000204c3: R30 := 0xE9C4
000204c5: call @ntlm_request with return %000204c7

000204c7:
000204d1: #11808 := ~31:0[R0] = 0
000204cb: when #11808 goto %000204c9
00038a80: goto %00020506

000204c9:
000204d9: R1 := mem[R31 + 0x70, el]:u64
000204e0: R2 := extend:64[31:0[R0]]
000204e6: R3 := 0xFFB
000204ed: R0 := R20 + 5
000204f2: R30 := 0xEB30
000204f4: call @to_base64 with return %000204f6

000204f6:
000204fc: R0 := mem[R31 + 0x70, el]:u64
00020501: R30 := 0xEB38
00020503: call @free with return %00020505

00020505:
00020508: goto %00020506

00020506:
0002050f: R0 := R24
00020514: R30 := 0xE9D0
00020516: call @dup_rr_data with return %00020518

00020518:
0002051e: R19 := R0
00020525: R3 := 1
0002052d: R0 := mem[R0 + 8, el]:u64
00020533: R2 := 0x12000
00020539: R1 := 0x12000
00020540: R2 := R2 + 0xE30
00020547: R1 := R1 + 0x958
0002054d: R28 := 0x13000
00020552: R30 := 0xE9F4
00020554: call @hlist_mod with return %00020556

00020556:
0002055c: mem := mem with [R19 + 8, el]:u64 <- R0
00020563: R1 := R28 + 0x410
0002056b: R2 := R20
00020572: R3 := 1
00020577: R30 := 0xEA08
00020579: call @hlist_mod with return %0002057b

0002057b:
00020581: mem := mem with [R19 + 8, el]:u64 <- R0
00020587: R2 := 0x12000
0002058e: R2 := R2 + 0xB70
00020595: R3 := 1
0002059b: R1 := 0x12000
000205a2: R1 := R1 + 0x918
000205a7: R30 := 0xEA24
000205a9: call @hlist_mod with return %000205ab

000205ab:
000205b1: mem := mem with [R19 + 8, el]:u64 <- R0
000205b7: R1 := 0x12000
000205be: R1 := R1 + 0x938
000205c3: R30 := 0xEA34
000205c5: call @hlist_del with return %000205c7

000205c7:
000205cd: mem := mem with [R19 + 8, el]:u64 <- R0
000205d5: R1 := R23
000205de: R0 := 31:0[R21]
000205e3: R30 := 0xEA44
000205e5: call @http_body_drop with return %000205e7

000205e7:
000205f1: #11829 := 31:0[R0] = 0
000205eb: when #11829 goto %000205e9
00038a7f: goto %000268e2

000268e2:
000268e6: R26 := 0x27000
000268ee: R0 := mem[R26 + 0xF78, el]:u64
000268f7: R0 := pad:64[mem[R0, el]:u32]
00026902: #14444 := ~31:0[R0] = 0
000268fc: when #14444 goto %00026444
00038a7e: goto %00026905

00026444:
00026448: R1 := 0x13000
0002644f: R0 := 1
00026456: R1 := R1 + 0x420
0002645b: R30 := 0xEB00
0002645d: call @__printf_chk with return %0002645f

0002645f:
00026465: R0 := mem[R19 + 8, el]:u64
0002646a: R30 := 0xEB08
0002646c: call @hlist_dump with return %0002646e

0002646e:
00026474: R1 := R19
0002647d: R0 := 31:0[R21]
00026482: R30 := 0xEB14
00026484: call @headers_send with return %00026486

00026486:
00026490: #14357 := ~31:0[R0] = 0
0002648a: when #14357 goto %00026488
00038a7d: goto %000268de

000268de:
000268e0: goto %000205e9

00026905:
0002690b: R1 := R19
00026914: R0 := 31:0[R21]
00026919: R30 := 0xEA64
0002691b: call @headers_send with return %0002691d

0002691d:
00026926: #14451 := 31:0[R0] = 0
00026920: when #14451 goto %000205e9
00038a7c: goto %00026488

00026488:
00026498: R0 := mem[R26 + 0xF78, el]:u64
000264a1: R0 := pad:64[mem[R0, el]:u32]
000264ad: #14358 := ~31:0[R0] = 0
000264a7: when #14358 goto %000264a5
00038a7b: goto %000264cb

000264a5:
000264b3: R1 := 0x13000
000264ba: R0 := 1
000264c1: R1 := R1 + 0x440
000264c6: R30 := 0xEC84
000264c8: call @__printf_chk with return %000264ca

000264ca:
000264cd: goto %000264cb

000264cb:
000264d4: R0 := R19
000264d9: R30 := 0xEA7C
000264db: call @reset_rr_data with return %000264dd

000264dd:
000264e3: R1 := R19
000264ec: R0 := 31:0[R21]
000264f1: R30 := 0xEA88
000264f3: call @headers_recv with return %000264f5

000264f5:
000264fe: #14368 := 31:0[R0] = 0
000264f8: when #14368 goto %000205e9
00038a7a: goto %00026501

00026501:
00026507: R0 := mem[R26 + 0xF78, el]:u64
00026510: R0 := pad:64[mem[R0, el]:u32]
0002651c: #14369 := ~31:0[R0] = 0
00026516: when #14369 goto %00026514
00038a79: goto %0002652e

00026514:
00026524: R0 := mem[R19 + 8, el]:u64
00026529: R30 := 0xEC70
0002652b: call @hlist_dump with return %0002652d

0002652d:
00026530: goto %0002652e

0002652e:
00026538: R0 := pad:64[mem[R19 + 0x10, el]:u32]
0002653f: #14370 := 0xFFFFFFFFFFFFFE6F + extend:64[31:0[R0]]
00026543: NF := 63:63[#14370]
00026546: VF := 31:31[R0] & ~63:63[#14370]
00026549: ZF := #14370 = 0
0002654c: CF := 31:31[R0] | 31:31[R0] & ~63:63[#14370] | ~63:63[#14370]
0002655b: #14372 := ZF
00026555: when #14372 goto %00026553
00038a78: goto %000205e9

00026553:
00026563: R1 := R19
0002656c: R0 := 31:0[R21]
00026571: R30 := 0xEB48
00026573: call @http_body_drop with return %00026575

00026575:
0002657e: #14379 := 31:0[R0] = 0
00026578: when #14379 goto %000205e9
00038a77: goto %00026581

00026581:
00026587: R0 := mem[R19 + 8, el]:u64
0002658d: R1 := 0x13000
00026594: R1 := R1 + 0x460
00026599: R30 := 0xEB5C
0002659b: call @hlist_get with return %0002659d

0002659d:
000265a3: mem := mem with [R31 + 0x70, el]:u64 <- R0
000265af: #14381 := R0 = 0
000265a9: when #14381 goto %000265a7
00038a76: goto %00026759

00026759:
0002675c: R30 := 0xEB68
0002675e: call @strlen with return %00026760

00026760:
00026765: #14409 := 0xFFFFFFFFFFFFFFF2 + R0
00026769: NF := 63:63[#14409]
0002676c: VF := 63:63[R0] & ~63:63[#14409]
0002676f: ZF := #14409 = 0
00026772: CF := 63:63[R0] | ~63:63[#14409] | 63:63[R0] & ~63:63[#14409]
00026780: #14411 := (~CF | ZF) <> 0
0002677a: when #14411 goto %000265a7
00038a75: goto %00026783

000265a7:
000265b6: R0 := 4
000265bc: R2 := 0x13000
000265c3: R1 := 1
000265ca: R2 := R2 + 0x4C8
000265cf: R30 := 0xEC9C
000265d1: call @__syslog_chk with return %000265d3

000265d3:
000265d8: R21 := 0
000265de: R0 := 0x13000
000265e5: R0 := R0 + 0x4F0
000265ed: mem := mem with [R23 + 0x60, el]:u64 <- R0
000265f1: goto %000205fa

00026783:
00026788: R0 := R0 + 6
0002678d: R30 := 0xEB78
0002678f: call @new with return %00026791

00026791:
00026797: R1 := mem[R31 + 0x70, el]:u64
0002679f: mem := mem with [R31 + 0x68, el]:u64 <- R0
000267a6: R1 := R1 + 5
000267ab: R30 := 0xEB88
000267ad: call @from_base64 with return %000267af

000267af:
000267b6: R2 := 31:0[R0]
000267bd: #14416 := 0xFFFFFFFFFFFFFFE8 + extend:64[31:0[R0]]
000267c1: NF := 63:63[#14416]
000267c4: VF := 31:31[R0] & ~63:63[#14416]
000267c7: ZF := #14416 = 0
000267ca: CF := 31:31[R0] | 31:31[R0] & ~63:63[#14416] | ~63:63[#14416]
000267da: #14418 := (NF <> VF | ZF) <> 0
000267d4: when #14418 goto %000265f3
00038a74: goto %000267dd

000265f3:
000265f7: R2 := 0x13000
000265fe: R2 := R2 + 0x4A0
00038a73: goto %00026600

000267dd:
000267e3: R3 := R25
000267eb: R0 := R27
000267f3: R25 := mem[R31 + 0x68, el]:u64
000267fb: R1 := R25
00026800: R30 := 0xEBA8
00026802: call @ntlm_response with return %00026804

00026804:
00026809: #14428 := extend:64[31:0[R0]]
0002680d: NF := 63:63[#14428]
00026810: VF := 31:31[R0] & ~63:63[#14428]
00026813: ZF := #14428 = 0
00026816: CF := 31:31[R0] | 31:31[R0] & ~63:63[#14428] | ~63:63[#14428]
00026826: #14430 := (NF <> VF | ZF) <> 0
00026820: when #14430 goto %00026644
00038a72: goto %00026829

00026644:
00026648: R2 := 0x12000
0002664f: R2 := R2 + 0xBD8
00026653: goto %00026600

00026600:
00026605: R1 := 1
0002660c: R0 := 3
00026611: R30 := 0xECC4
00026613: call @__syslog_chk with return %00026615

00026615:
0002661a: R21 := 0
00026620: R0 := 0x13000
00026627: R0 := R0 + 0x478
0002662f: mem := mem with [R23 + 0x60, el]:u64 <- R0
00026637: R0 := mem[R31 + 0x68, el]:u64
0002663c: R30 := 0xECDC
0002663e: call @free with return %00026640

00026640:
00026642: goto %000205fa

00026829:
0002682d: R1 := 0x12000
00026834: R1 := R1 + 0xB50
0002683b: R2 := extend:64[31:0[R0]]
00026841: R3 := 0xFFB
00026848: R0 := R20 + 5
00026851: R4 := pad:64[mem[R1, el]:u32]
0002685b: mem := mem with [R20, el]:u32 <- 31:0[R4]
00026865: R1 := mem[R31 + 0x70, el]:u64
0002686a: R30 := 0xEBDC
0002686c: call @to_base64 with return %0002686e

0002686e:
00026874: R0 := mem[R24 + 8, el]:u64
0002687c: R2 := R20
00026883: R3 := 1
0002688a: R1 := R28 + 0x410
0002688f: R30 := 0xEBF0
00026891: call @hlist_mod with return %00026893

00026893:
00026899: R1 := R0
000268a1: R0 := mem[R31 + 0x70, el]:u64
000268a9: mem := mem with [R24 + 8, el]:u64 <- R1
000268ae: R30 := 0xEC00
000268b0: call @free with return %000268b2

000268b2:
000268b8: R0 := R25
000268bd: R30 := 0xEC08
000268bf: call @free with return %000268c1

000268c1:
000268c7: R0 := mem[R26 + 0xF78, el]:u64
000268d0: R0 := pad:64[mem[R0, el]:u32]
000268db: #14443 := ~31:0[R0] = 0
000268d5: when #14443 goto %00026655
00038a71: goto %00026671

00026655:
00026659: R1 := 0x13000
00026660: R0 := 1
00026667: R1 := R1 + 0x518
0002666c: R30 := 0xECFC
0002666e: call @__printf_chk with return %00026670

00026670:
00026673: goto %00026671

00026671:
0002667a: R1 := R24
00026683: R0 := 31:0[R21]
00026688: R30 := 0xEC20
0002668a: call @headers_send with return %0002668c

0002668c:
00026695: #14390 := 31:0[R0] = 0
0002668f: when #14390 goto %000205e9
00038a70: goto %00026698

00026698:
0002669e: R0 := mem[R26 + 0xF78, el]:u64
000266a7: R0 := pad:64[mem[R0, el]:u32]
000266b3: #14391 := ~31:0[R0] = 0
000266ad: when #14391 goto %000266ab
00038a6f: goto %000266d1

000266ab:
000266b9: R1 := 0x13000
000266c0: R0 := 1
000266c7: R1 := R1 + 0x530
000266cc: R30 := 0xED10
000266ce: call @__printf_chk with return %000266d0

000266d0:
000266d3: goto %000266d1

000266d1:
000266da: R0 := R19
000266df: R30 := 0xEC38
000266e1: call @reset_rr_data with return %000266e3

000266e3:
000266e9: R1 := R19
000266f2: R0 := 31:0[R21]
000266f7: R30 := 0xEC44
000266f9: call @headers_recv with return %000266fb

000266fb:
00026704: #14401 := 31:0[R0] = 0
000266fe: when #14401 goto %000205e9
00038a6e: goto %00026707

00026707:
0002670d: R26 := mem[R26 + 0xF78, el]:u64
00026716: R0 := pad:64[mem[R26, el]:u32]
00026722: #14402 := ~31:0[R0] = 0
0002671c: when #14402 goto %0002671a
00038a6d: goto %00026734

0002671a:
0002672a: R0 := mem[R19 + 8, el]:u64
0002672f: R30 := 0xED1C
00026731: call @hlist_dump with return %00026733

00026733:
00026736: goto %00026734

00026734:
0002673d: R0 := R23
00026745: R1 := R19
0002674c: R21 := 1
00026751: R30 := 0xEC64
00026753: call @copy_rr_data with return %00026755

00026755:
00026757: goto %000205fa

000205e9:
000205f8: R21 := 0
00038a6c: goto %000205fa

000205fa:
00020600: R0 := R19
00020605: R30 := 0xEAB0
00020607: call @free_rr_data with return %00020609

00020609:
0002060f: R0 := R20
00020614: R30 := 0xEAB8
00020616: call @free with return %00020618

00020618:
0002061e: R22 := mem[R22 + 0xFB8, el]:u64
00020626: R0 := mem[R31 + 0x78, el]:u64
0002062e: R1 := mem[R22, el]:u64
00020636: #11839 := 1 + ~R1 + R0
0002063a: NF := 63:63[#11839]
0002063d: VF := 63:63[R0] & 63:63[~R1] & ~63:63[#11839] | ~63:63[R0] &
          ~63:63[~R1] & 63:63[#11839]
00020640: ZF := #11839 = 0
00020643: CF := 63:63[R0] & 63:63[~R1] | 63:63[~R1] & ~63:63[#11839] |
          63:63[R0] & ~63:63[#11839]
00020647: R0 := #11839
0002064d: R1 := 0
00020659: #11841 := ~ZF <> 0
00020653: when #11841 goto %00020651
00038a6b: goto %000263e4

00020651:
0002065e: R30 := 0xED24
00020660: call @__stack_chk_fail with return %00020662

00020662:
00038a6a: call @direct_request with noreturn

000263e4:
000263eb: R0 := 31:0[R21]
000263f4: R19 := mem[R31 + 0x10, el]:u64
000263f8: R20 := mem[R31 + 0x18, el]:u64
00026401: R21 := mem[R31 + 0x20, el]:u64
00026405: R22 := mem[R31 + 0x28, el]:u64
0002640e: R23 := mem[R31 + 0x30, el]:u64
00026412: R24 := mem[R31 + 0x38, el]:u64
0002641b: R25 := mem[R31 + 0x40, el]:u64
0002641f: R26 := mem[R31 + 0x48, el]:u64
00026428: R27 := mem[R31 + 0x50, el]:u64
0002642c: R28 := mem[R31 + 0x58, el]:u64
00026436: R29 := mem[R31, el]:u64
0002643a: R30 := mem[R31 + 8, el]:u64
0002643d: R31 := R31 + 0x80
00026442: call R30 with noreturn
