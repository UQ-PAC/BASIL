0003b366: program
0003acd9: sub __ctype_b_loc(__ctype_b_loc_result)
0003b367: __ctype_b_loc_result :: out u32 = low:32[R0]

0000f9e1:
00032e95: R16 := 0x27000
00032e9d: R17 := mem[R16 + 0xE30, el]:u64
00032ea4: R16 := R16 + 0xE30
00032ea9: call R17 with noreturn

0003acda: sub __ctype_tolower_loc(__ctype_tolower_loc_result)
0003b368: __ctype_tolower_loc_result :: out u32 = low:32[R0]

0000f626:
00032a49: R16 := 0x27000
00032a51: R17 := mem[R16 + 0xCD0, el]:u64
00032a58: R16 := R16 + 0xCD0
00032a5d: call R17 with noreturn

0003acdb: sub __ctype_toupper_loc(__ctype_toupper_loc_result)
0003b369: __ctype_toupper_loc_result :: out u32 = low:32[R0]

0000f706:
00032cec: R16 := 0x27000
00032cf4: R17 := mem[R16 + 0xDA8, el]:u64
00032cfb: R16 := R16 + 0xDA8
00032d00: call R17 with noreturn

0003acdc: sub __cxa_finalize(__cxa_finalize_result)
0003b36a: __cxa_finalize_result :: out u32 = low:32[R0]

00031129:
000329cc: R16 := 0x27000
000329d4: R17 := mem[R16 + 0xCA8, el]:u64
000329db: R16 := R16 + 0xCA8
000329e0: call R17 with noreturn

0003acdd: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
0003b36b: __do_global_dtors_aux_result :: out u32 = low:32[R0]

00031082:
00031089: #21716 := R31 - 0x20
0003108e: mem := mem with [#21716, el]:u64 <- R29
00031093: mem := mem with [#21716 + 8, el]:u64 <- R30
00031097: R31 := #21716
0003109e: R29 := R31
000310a6: mem := mem with [R31 + 0x10, el]:u64 <- R19
000310ac: R19 := 0x28000
000310b5: R0 := pad:32[mem[R19 + 0x498]]
000310c1: #21718 := ~31:0[R0] = 0
000310bb: when #21718 goto %000310b9
0003acde: goto %000310e7

000310e7:
000310eb: R0 := 0x27000
000310f3: R0 := mem[R0 + 0xF58, el]:u64
000310ff: #21722 := R0 = 0
000310f9: when #21722 goto %000310f7
0003acdf: goto %00031117

00031117:
0003111b: R0 := 0x28000
00031123: R0 := mem[R0 + 8, el]:u64
00031128: R30 := 0x47E8
0003112b: call @__cxa_finalize with return %000310f7

000310f7:
00031104: R30 := 0x47EC
00031106: call @deregister_tm_clones with return %00031108

00031108:
0003110d: R0 := 1
00031115: mem := mem with [R19 + 0x498] <- low:8[31:0[R0]]
0003ace0: goto %000310b9

000310b9:
000310c9: R19 := mem[R31 + 0x10, el]:u64
000310d3: R29 := mem[R31, el]:u64
000310d7: R30 := mem[R31 + 8, el]:u64
000310da: R31 := R31 + 0x20
000310df: call R30 with noreturn

0003ace1: sub __errno_location(__errno_location_result)
0003b36c: __errno_location_result :: out u64 = R0

0001740a:
00033138: R16 := 0x27000
00033140: R17 := mem[R16 + 0xF08, el]:u64
00033147: R16 := R16 + 0xF08
0003314c: call R17 with noreturn

0003ace2: sub __fdelt_chk(__fdelt_chk_result)
0003b36d: __fdelt_chk_result :: out u32 = low:32[R0]

0001fd09:
00032b75: R16 := 0x27000
00032b7d: R17 := mem[R16 + 0xD30, el]:u64
00032b84: R16 := R16 + 0xD30
00032b89: call R17 with noreturn

0003ace3: sub __fprintf_chk(__fprintf_chk_result)
0003b36e: __fprintf_chk_result :: out u32 = low:32[R0]

00022051:
00032e63: R16 := 0x27000
00032e6b: R17 := mem[R16 + 0xE20, el]:u64
00032e72: R16 := R16 + 0xE20
00032e77: call R17 with noreturn

0003ace4: sub __libc_csu_fini(__libc_csu_fini_result)
0003b36f: __libc_csu_fini_result :: out u32 = low:32[R0]

000244b2:
000244b5: call R30 with noreturn

0003ace5: sub __libc_csu_init(__libc_csu_init_result)
0003b370: __libc_csu_init_result :: out u32 = low:32[R0]

000243b9:
000243c0: #15726 := R31 - 0x40
000243c5: mem := mem with [#15726, el]:u64 <- R29
000243ca: mem := mem with [#15726 + 8, el]:u64 <- R30
000243ce: R31 := #15726
000243d5: R29 := R31
000243dd: #15731 := R31 + 0x10
000243e2: mem := mem with [#15731, el]:u64 <- R19
000243e7: mem := mem with [#15731 + 8, el]:u64 <- R20
000243ed: R20 := 0x27000
000243f4: R20 := R20 + 0xA10
000243fc: #15736 := R31 + 0x20
00024401: mem := mem with [#15736, el]:u64 <- R21
00024406: mem := mem with [#15736 + 8, el]:u64 <- R22
0002440c: R21 := 0x27000
00024413: R21 := R21 + 0xA08
0002441b: R20 := R20 - R21
00024424: R22 := 31:0[R0]
0002442c: #15747 := R31 + 0x30
00024431: mem := mem with [#15747, el]:u64 <- R23
00024436: mem := mem with [#15747 + 8, el]:u64 <- R24
0002443e: R23 := R1
00024446: R24 := R2
0002444b: R30 := 0x11610
0002444e: call @_init with return %00024450

00024450:
00024456: #15758 := ~(R20 ~>> 3) + 1
0002445a: NF := 63:63[#15758]
0002445d: VF := ~63:63[~(R20 ~>> 3)] & 63:63[#15758]
00024460: ZF := #15758 = 0
00024463: CF := 63:63[~(R20 ~>> 3)] & ~63:63[#15758]
00024471: #15763 := ZF
0002446b: when #15763 goto %00024469
0003ace6: goto %000244b7

000244b7:
000244bc: R20 := R20 >> 3
000244c2: R19 := 0
0003ace7: goto %000244c4

000244c4:
000244ca: #15770 := R19 << 3
000244cf: R3 := mem[R21 + #15770, el]:u64
000244d7: R2 := R24
000244de: R19 := R19 + 1
000244e6: R1 := R23
000244ef: R0 := 31:0[R22]
000244f5: R30 := 0x11638
000244f7: call R3 with return %000244f9

000244f9:
000244ff: #15783 := 1 + ~R19 + R20
00024503: NF := 63:63[#15783]
00024506: VF := 63:63[R20] & 63:63[~R19] & ~63:63[#15783] | ~63:63[R20] &
          ~63:63[~R19] & 63:63[#15783]
00024509: ZF := #15783 = 0
0002450c: CF := 63:63[R20] & 63:63[~R19] | 63:63[~R19] & ~63:63[#15783] |
          63:63[R20] & ~63:63[#15783]
00024519: #15788 := ~ZF <> 0
00024513: when #15788 goto %000244c4
0003ace8: goto %00024469

00024469:
0002447a: R19 := mem[R31 + 0x10, el]:u64
0002447e: R20 := mem[R31 + 0x18, el]:u64
00024487: R21 := mem[R31 + 0x20, el]:u64
0002448b: R22 := mem[R31 + 0x28, el]:u64
00024494: R23 := mem[R31 + 0x30, el]:u64
00024498: R24 := mem[R31 + 0x38, el]:u64
000244a2: R29 := mem[R31, el]:u64
000244a6: R30 := mem[R31 + 8, el]:u64
000244a9: R31 := R31 + 0x40
000244ae: call R30 with noreturn

0003ace9: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
0003b371: __libc_start_main_main :: in u64 = R0
0003b372: __libc_start_main_arg2 :: in u32 = low:32[R1]
0003b373: __libc_start_main_arg3 :: in out u64 = R2
0003b374: __libc_start_main_auxv :: in out u64 = R3
0003b375: __libc_start_main_result :: out u32 = low:32[R0]

00030fb5:
00032ba7: R16 := 0x27000
00032baf: R17 := mem[R16 + 0xD40, el]:u64
00032bb6: R16 := R16 + 0xD40
00032bbb: call R17 with noreturn

0003acea: sub __posix_getopt(__posix_getopt_result)
0003b376: __posix_getopt_result :: out u32 = low:32[R0]

0002db73:
00032c3d: R16 := 0x27000
00032c45: R17 := mem[R16 + 0xD70, el]:u64
00032c4c: R16 := R16 + 0xD70
00032c51: call R17 with noreturn

0003aceb: sub __printf_chk(__printf_chk_result)
0003b377: __printf_chk_result :: out u32 = low:32[R0]

00014ec2:
00032bd9: R16 := 0x27000
00032be1: R17 := mem[R16 + 0xD50, el]:u64
00032be8: R16 := R16 + 0xD50
00032bed: call R17 with noreturn

0003acec: sub __snprintf_chk(__snprintf_chk_result)
0003b378: __snprintf_chk_result :: out u32 = low:32[R0]

000227a0:
00032a94: R16 := 0x27000
00032a9c: R17 := mem[R16 + 0xCE8, el]:u64
00032aa3: R16 := R16 + 0xCE8
00032aa8: call R17 with noreturn

0003aced: sub __sprintf_chk(__sprintf_chk_result)
0003b379: __sprintf_chk_result :: out u32 = low:32[R0]

0000f99b:
0003291d: R16 := 0x27000
00032925: R17 := mem[R16 + 0xC70, el]:u64
0003292c: R16 := R16 + 0xC70
00032931: call R17 with noreturn

0003acee: sub __stack_chk_fail(__stack_chk_fail_result)
0003b37a: __stack_chk_fail_result :: out u32 = low:32[R0]

000108a9:
00032d37: R16 := 0x27000
00032d3f: R17 := mem[R16 + 0xDC0, el]:u64
00032d46: R16 := R16 + 0xDC0
00032d4b: call R17 with noreturn

0003acef: sub __syslog_chk(__syslog_chk_result)
0003b37b: __syslog_chk_result :: out u32 = low:32[R0]

00016007:
00032fa8: R16 := 0x27000
00032fb0: R17 := mem[R16 + 0xE88, el]:u64
00032fb7: R16 := R16 + 0xE88
00032fbc: call R17 with noreturn

0003acf0: sub _fini(_fini_result)
0003b37c: _fini_result :: out u32 = low:32[R0]

0000001c:
00000023: #3 := R31 - 0x10
00000028: mem := mem with [#3, el]:u64 <- R29
0000002d: mem := mem with [#3 + 8, el]:u64 <- R30
00000031: R31 := #3
00000038: R29 := R31
00000042: R29 := mem[R31, el]:u64
00000046: R30 := mem[R31 + 8, el]:u64
00000049: R31 := R31 + 0x10
0000004e: call R30 with noreturn

0003acf1: sub _init(_init_result)
0003b37d: _init_result :: out u32 = low:32[R0]

0002444c:
00036e84: #22205 := R31 - 0x10
00036e89: mem := mem with [#22205, el]:u64 <- R29
00036e8e: mem := mem with [#22205 + 8, el]:u64 <- R30
00036e92: R31 := #22205
00036e99: R29 := R31
00036e9e: R30 := 0x1DDC
00036ea0: call @call_weak_fn with return %00036ea2

00036ea2:
00036eaa: R29 := mem[R31, el]:u64
00036eae: R30 := mem[R31 + 8, el]:u64
00036eb1: R31 := R31 + 0x10
00036eb6: call R30 with noreturn

0003acf2: sub _start(_start_result)
0003b37e: _start_result :: out u32 = low:32[R0]

00030f5d:
00030f61: R29 := 0
00030f67: R30 := 0
00030f6f: R5 := R0
00030f77: R1 := mem[R31, el]:u64
00030f7e: R2 := R31 + 8
00030f85: R6 := R31
00030f8b: R0 := 0x27000
00030f93: R0 := mem[R0 + 0xFD8, el]:u64
00030f99: R3 := 0x27000
00030fa1: R3 := mem[R3 + 0xFC8, el]:u64
00030fa7: R4 := 0x27000
00030faf: R4 := mem[R4 + 0xF40, el]:u64
00030fb4: R30 := 0x4730
00030fb7: call @__libc_start_main with return %00030fb9

00030fb9:
00030fbc: R30 := 0x4734
00030fbf: call @abort with return %0003acf3

0003acf3:
0003acf4: call @call_weak_fn with noreturn

0003acf5: sub abort()


00030fbd:
00032de6: R16 := 0x27000
00032dee: R17 := mem[R16 + 0xDF8, el]:u64
00032df5: R16 := R16 + 0xDF8
00032dfa: call R17 with noreturn

0003acf6: sub accept(accept_fd, accept_addr, accept_len_ptr, accept_result)
0003b37f: accept_fd :: in u32 = low:32[R0]
0003b380: accept_addr :: in u64 = R1
0003b381: accept_len_ptr :: in out u64 = R2
0003b382: accept_result :: out u32 = low:32[R0]

0002f033:
00032c56: R16 := 0x27000
00032c5e: R17 := mem[R16 + 0xD78, el]:u64
00032c65: R16 := R16 + 0xD78
00032c6a: call R17 with noreturn

0003acf7: sub acl_add(acl_add_result)
0003b383: acl_add_result :: out u32 = low:32[R0]

00015d82:
00015d89: #6629 := R31 - 0x70
00015d8e: mem := mem with [#6629, el]:u64 <- R29
00015d93: mem := mem with [#6629 + 8, el]:u64 <- R30
00015d97: R31 := #6629
00015d9e: R29 := R31
00015da6: #6634 := R31 + 0x20
00015dab: mem := mem with [#6634, el]:u64 <- R21
00015db0: mem := mem with [#6634 + 8, el]:u64 <- R22
00015db6: R21 := 0x27000
00015dbe: R3 := mem[R21 + 0xFB8, el]:u64
00015dc6: #6640 := R31 + 0x10
00015dcb: mem := mem with [#6640, el]:u64 <- R19
00015dd0: mem := mem with [#6640 + 8, el]:u64 <- R20
00015dd8: R20 := R0
00015de0: R0 := R1
00015de8: R1 := mem[R3, el]:u64
00015df0: mem := mem with [R31 + 0x68, el]:u64 <- R1
00015df6: R1 := 0
00015dfe: #6652 := R31 + 0x40
00015e03: mem := mem with [#6652, el]:u64 <- R25
00015e08: mem := mem with [#6652 + 8, el]:u64 <- R26
00015e0f: R25 := 0
00015e1b: #6654 := R20 = 0
00015e15: when #6654 goto %00015e13
0003acf8: goto %0001703b

0001703b:
00017041: #7308 := R31 + 0x30
00017046: mem := mem with [#7308, el]:u64 <- R23
0001704b: mem := mem with [#7308 + 8, el]:u64 <- R24
00017054: R23 := 31:0[R2]
00017059: R30 := 0xAE04
0001705b: call @strdup with return %0001705d

0001705d:
00017063: R19 := R0
00017069: R0 := 8
0001706e: R30 := 0xAE10
00017070: call @new with return %00017072

00017072:
00017078: R22 := R0
0001707e: R1 := 0x12000
00017086: R0 := R19
0001708d: R1 := R1 + 0x508
00017092: R30 := 0xAE24
00017095: call @strcspn with return %00017097

00017097:
0001709d: R24 := R0
000170a4: R26 := 0x20
000170ac: R0 := R19
000170b3: R24 := extend:64[31:0[R24]]
000170b8: R30 := 0xAE38
000170ba: call @strlen with return %000170bc

000170bc:
000170c2: #7332 := 1 + ~R0 + R24
000170c6: NF := 63:63[#7332]
000170c9: VF := 63:63[R24] & 63:63[~R0] & ~63:63[#7332] | ~63:63[R24] &
          ~63:63[~R0] & 63:63[#7332]
000170cc: ZF := #7332 = 0
000170cf: CF := 63:63[R24] & 63:63[~R0] | 63:63[~R0] & ~63:63[#7332] |
          63:63[R24] & ~63:63[#7332]
000170dc: #7337 := ~CF <> 0
000170d6: when #7337 goto %00016f09
0003acf9: goto %00016fc0

00016f09:
00016f0f: #7270 := R24
00016f14: mem := mem with [R19 + #7270] <- 0
00016f1b: R25 := R24 + 1
00016f23: R0 := R19 + R25
00016f2a: R1 := R31 + 0x60
00016f31: R2 := 0xA
00016f36: R30 := 0xAF78
00016f39: call @strtol with return %00016f3b

00016f3b:
00016f41: #7277 := 1 + extend:64[~31:0[R26]] + extend:64[31:0[R0]]
00016f45: NF := 63:63[#7277]
00016f48: VF := 31:31[~31:0[R26]] & 31:31[R0] & ~63:63[#7277] |
          ~31:31[~31:0[R26]] & ~31:31[R0] & 63:63[#7277]
00016f4b: ZF := #7277 = 0
00016f4e: CF := 31:31[~31:0[R26]] & 31:31[R0] | 31:31[R0] & ~63:63[#7277] |
          31:31[~31:0[R26]] & ~63:63[#7277]
00016f5e: #7279 := (CF & ~ZF) <> 0
00016f58: when #7279 goto %00016f56
0003acfa: goto %00016f8a

00016f8a:
00016f90: #7283 := R25
00016f96: R1 := pad:32[mem[R19 + #7283]]
00016fa1: #7284 := 31:0[R1] = 0
00016f9b: when #7284 goto %00016f56
0003acfb: goto %00016fa4

00016fa4:
00016faa: R1 := mem[R31 + 0x60, el]:u64
00016fb3: R26 := 31:0[R0]
00016fbc: R1 := pad:32[mem[R1]]
00016fc8: #7289 := 31:0[R1] = 0
00016fc2: when #7289 goto %00016fc0
0003acfc: goto %00016f56

00016f56:
00016f64: R2 := 0x12000
00016f6c: R3 := R19
00016f73: R2 := R2 + 0x510
00016f7a: R1 := 1
00016f81: R0 := 3
00016f88: R25 := 0
0003acfd: goto %00016000

00016fc0:
00016fd1: R0 := pad:32[mem[R19]]
00016fd8: #7290 := 0xFFFFFFFFFFFFFFD6 + extend:64[31:0[R0]]
00016fdc: NF := 63:63[#7290]
00016fdf: VF := 31:31[R0] & ~63:63[#7290]
00016fe2: ZF := #7290 = 0
00016fe5: CF := 31:31[R0] | 31:31[R0] & ~63:63[#7290] | ~63:63[#7290]
00016ff3: #7292 := ~ZF <> 0
00016fed: when #7292 goto %00015f79
0003acfe: goto %00016ff6

00016ff6:
00016ffd: R1 := pad:32[mem[R19 + 1]]
00017006: R2 := -31:0[R1]
00017011: #7296 := ~31:0[R1] = 0
0001700b: when #7296 goto %00015f79
0003acff: goto %00017014

00015f79:
00015f7e: #6702 := 0xFFFFFFFFFFFFFFD0 + extend:64[31:0[R0]]
00015f82: NF := 63:63[#6702]
00015f85: VF := 31:31[R0] & ~63:63[#6702]
00015f88: ZF := #6702 = 0
00015f8b: CF := 31:31[R0] | 31:31[R0] & ~63:63[#6702] | ~63:63[#6702]
00015f9a: #6704 := ZF
00015f94: when #6704 goto %00015f92
0003ad00: goto %00015fa7

00015f92:
00015fa3: R0 := pad:32[mem[R19 + 1]]
00015faf: #6705 := ~31:0[R0] = 0
00015fa9: when #6705 goto %00015fa7
0003ad01: goto %0001702e

0001702e:
00017035: R2 := 31:0[R26]
00017039: goto %00017014

00015fa7:
00015fb7: R1 := R19
00015fbe: R0 := R31 + 0x58
00015fc3: R30 := 0xAF08
00015fc5: call @so_resolv with return %00015fc7

00015fc7:
00015fce: R25 := 31:0[R0]
00015fda: #6712 := 31:0[R0] = 0
00015fd4: when #6712 goto %00015fd2
0003ad02: goto %0001603a

00015fd2:
00015fe0: R2 := 0x12000
00015fe8: R3 := R19
00015fef: R2 := R2 + 0x530
00015ff6: R1 := 1
00015ffd: R0 := 3
00016002: goto %00016000

00016000:
00016006: R30 := 0xAFB4
00016009: call @__syslog_chk with return %0001600b

0001600b:
00016011: R0 := R22
00016016: R30 := 0xAFBC
00016018: call @free with return %0001601a

0001601a:
00016020: R0 := R19
00016025: R30 := 0xAFC4
00016027: call @free with return %00016029

00016029:
00016030: R23 := mem[R31 + 0x30, el]:u64
00016034: R24 := mem[R31 + 0x38, el]:u64
00016038: goto %00015e13

0001603a:
0001603f: R0 := 0x20
00016048: R0 := 31:0[R0] - 31:0[R26]
00016051: R1 := mem[R31 + 0x58, el]:u32
00016057: R24 := 1
0001605f: R0 := R24 << R0 % 0x40
00016068: R0 := -31:0[R0]
00016070: #6733 := R22
00016075: mem := mem with [#6733, el]:u32 <- 31:0[R1]
0001607a: mem := mem with [#6733 + 4, el]:u32 <- 31:0[R26]
00016082: R0 := 7:0[R0].15:8[R0].23:16[R0].31:24[R0]
0001608a: #6738 := 31:0[R0]
0001608e: #6739 := ~#6738
00016092: #6740 := 31:0[R1] & #6739
00016096: NF := 31:31[#6740]
00016099: ZF := #6740 = 0
0001609c: CF := 0
0001609f: VF := 0
000160ae: #6742 := ZF
000160a8: when #6742 goto %000160a6
0003ad03: goto %00016ec0

00016ec0:
00016ec7: R0 := mem[R31 + 0x58, el]:u32
00016ecc: R30 := 0xAF40
00016ece: call @inet_ntoa with return %00016ed0

00016ed0:
00016ed6: R3 := R0
00016edf: R4 := mem[R22 + 4, el]:u32
00016ee8: R1 := 31:0[R24]
00016eee: R2 := 0x12000
00016ef5: R0 := 4
00016efc: R2 := R2 + 0x558
00016f01: R30 := 0xAF5C
00016f03: call @__syslog_chk with return %00016f05

00016f05:
00016f07: goto %000160a6

00017014:
0001701a: mem := mem with [R31 + 0x58, el]:u32 <- 0
00017022: #7300 := R22
00017027: mem := mem with [#7300, el]:u32 <- 0
0001702c: mem := mem with [#7300 + 4, el]:u32 <- 31:0[R2]
0003ad04: goto %000160a6

000160a6:
000160b7: R0 := mem[R31 + 0x58, el]:u32
000160be: #6744 := extend:64[31:0[R23]]
000160c2: NF := 63:63[#6744]
000160c5: VF := 31:31[R23] & ~63:63[#6744]
000160c8: ZF := #6744 = 0
000160cb: CF := 31:31[R23] | 31:31[R23] & ~63:63[#6744] | ~63:63[#6744]
000160d4: R3 := 0x12000
000160db: R3 := R3 + 0x500
000160e1: R24 := 0x12000
000160e8: R24 := R24 + 0x4F8
000160fe: #6746 := ZF
000160ff: goto %000160f6

000160f6:
000160f8: when #6746 goto %000160f0
000160f9: goto %000160f3

000160f3:
000160f4: R24 := R3
000160fb: goto %000160f7

000160f0:
000160f1: R24 := R24
000160fa: goto %000160f7

000160f7:
00016107: R25 := 1
0001610c: R30 := 0xAE84
0001610f: call @inet_ntoa with return %00016111

00016111:
00016117: R4 := R0
00016120: R5 := mem[R22 + 4, el]:u32
00016128: R3 := R24
00016131: R1 := 31:0[R25]
00016138: R0 := 6
0001613e: R2 := 0x12000
00016145: R2 := R2 + 0x588
0001614a: R30 := 0xAEA4
0001614c: call @__syslog_chk with return %0001614e

0001614e:
00016154: R0 := mem[R20, el]:u64
0001615d: R1 := 31:0[R23]
00016165: R2 := R22
0001616a: R30 := 0xAEB4
0001616d: call @plist_add with return %00016e9c

00016e9c:
00016ea2: mem := mem with [R20, el]:u64 <- R0
00016eaa: R0 := R19
00016eaf: R30 := 0xAEC0
00016eb1: call @free with return %00016eb3

00016eb3:
00016eba: R23 := mem[R31 + 0x30, el]:u64
00016ebe: R24 := mem[R31 + 0x38, el]:u64
0003ad05: goto %00015e13

00015e13:
00015e23: R21 := mem[R21 + 0xFB8, el]:u64
00015e2b: R0 := mem[R31 + 0x68, el]:u64
00015e33: R1 := mem[R21, el]:u64
00015e3b: #6661 := 1 + ~R1 + R0
00015e3f: NF := 63:63[#6661]
00015e42: VF := 63:63[R0] & 63:63[~R1] & ~63:63[#6661] | ~63:63[R0] &
          ~63:63[~R1] & 63:63[#6661]
00015e45: ZF := #6661 = 0
00015e48: CF := 63:63[R0] & 63:63[~R1] | 63:63[~R1] & ~63:63[#6661] |
          63:63[R0] & ~63:63[#6661]
00015e4c: R0 := #6661
00015e52: R1 := 0
00015e5e: #6666 := ~ZF <> 0
00015e58: when #6666 goto %00015e56
0003ad06: goto %00015f33

00015e56:
00015e66: #6670 := R31 + 0x30
00015e6b: mem := mem with [#6670, el]:u64 <- R23
00015e70: mem := mem with [#6670 + 8, el]:u64 <- R24
00015e75: R30 := 0xAFFC
00015e77: call @__stack_chk_fail with return %00015e79

00015e79:
0003ad07: call @acl_check with noreturn

00015f33:
00015f3a: R0 := 31:0[R25]
00015f43: R19 := mem[R31 + 0x10, el]:u64
00015f47: R20 := mem[R31 + 0x18, el]:u64
00015f50: R21 := mem[R31 + 0x20, el]:u64
00015f54: R22 := mem[R31 + 0x28, el]:u64
00015f5d: R25 := mem[R31 + 0x40, el]:u64
00015f61: R26 := mem[R31 + 0x48, el]:u64
00015f6b: R29 := mem[R31, el]:u64
00015f6f: R30 := mem[R31 + 8, el]:u64
00015f72: R31 := R31 + 0x70
00015f77: call R30 with noreturn

0003ad08: sub acl_check(acl_check_result)
0003b384: acl_check_result :: out u32 = low:32[R0]

00015e7b:
00015e85: #6672 := R0 = 0
00015e7f: when #6672 goto %00015e7d
0003ad09: goto %00015e93

00015e7d:
00015e8c: R0 := 0
00015e91: call R30 with noreturn

00015e93:
00015e98: R5 := 0x20
00015e9e: R4 := 1
00015ea3: goto %00015ea1

00015ea1:
00015eaa: R3 := mem[R0 + 8, el]:u64
00015eb3: R2 := mem[R3 + 4, el]:u32
00015ebc: R3 := mem[R3, el]:u32
00015ec5: R2 := 31:0[R5] - 31:0[R2]
00015ece: R3 := 31:0[R1] ^ 31:0[R3]
00015ed6: R2 := R4 << R2 % 0x40
00015edf: R2 := -31:0[R2]
00015ee7: R2 := 7:0[R2].15:8[R2].23:16[R2].31:24[R2]
00015eef: #6688 := 31:0[R2]
00015ef3: #6689 := 31:0[R3] & #6688
00015ef7: NF := 31:31[#6689]
00015efa: ZF := #6689 = 0
00015efd: CF := 0
00015f00: VF := 0
00015f0f: #6691 := ~ZF <> 0
00015f09: when #6691 goto %00015f07
0003ad0a: goto %00015f2a

00015f2a:
00015f31: R0 := mem[R0, el]:u32
0003ad0b: goto %00015f1b

00015f07:
00015f17: R0 := mem[R0 + 0x10, el]:u64
00015f23: #6693 := R0 = 0
00015f1d: when #6693 goto %00015f1b
0003ad0c: goto %00015ea1

00015f1b:
00015f28: call R30 with noreturn

0003ad0d: sub bind(bind_fd, bind_addr, bind_len, bind_result)
0003b385: bind_fd :: in u32 = low:32[R0]
0003b386: bind_addr :: in u64 = R1
0003b387: bind_len :: in u64 = R2
0003b388: bind_result :: out u32 = low:32[R0]

0001762a:
000329b3: R16 := 0x27000
000329bb: R17 := mem[R16 + 0xCA0, el]:u64
000329c2: R16 := R16 + 0xCA0
000329c7: call R17 with noreturn

0003ad0e: sub call_weak_fn(call_weak_fn_result)
0003b389: call_weak_fn_result :: out u32 = low:32[R0]

00030fc1:
00030fc5: R0 := 0x27000
00030fcd: R0 := mem[R0 + 0xFB0, el]:u64
00030fd9: #21686 := R0 = 0
00030fd3: when #21686 goto %00030fd1
0003ad0f: goto %0003117b

00030fd1:
00030fde: call R30 with noreturn

0003117b:
0003117e: goto @__gmon_start__

0003117c:
00032d9b: R16 := 0x27000
00032da3: R17 := mem[R16 + 0xDE0, el]:u64
00032daa: R16 := R16 + 0xDE0
00032daf: call R17 with noreturn

0003ad10: sub calloc(calloc_nmemb, calloc_size, calloc_result)
0003b38a: calloc_nmemb :: in u64 = R0
0003b38b: calloc_size :: in u64 = R1
0003b38c: calloc_result :: out u64 = R0

0000f5a9:
00032ca1: R16 := 0x27000
00032ca9: R17 := mem[R16 + 0xD90, el]:u64
00032cb0: R16 := R16 + 0xD90
00032cb5: call R17 with noreturn

0003ad11: sub chdir(chdir_arg1, chdir_result)
0003b38d: chdir_arg1 :: in u64 = R0
0003b38e: chdir_result :: out u32 = low:32[R0]

00031b46:
00032ee0: R16 := 0x27000
00032ee8: R17 := mem[R16 + 0xE48, el]:u64
00032eef: R16 := R16 + 0xE48
00032ef4: call R17 with noreturn

0003ad12: sub chunked_data_send(chunked_data_send_result)
0003b38f: chunked_data_send_result :: out u32 = low:32[R0]

0001f915:
0001f91c: #13142 := R31 - 0x70
0001f921: mem := mem with [#13142, el]:u64 <- R29
0001f926: mem := mem with [#13142 + 8, el]:u64 <- R30
0001f92a: R31 := #13142
0001f931: R29 := R31
0001f939: #13147 := R31 + 0x40
0001f93e: mem := mem with [#13147, el]:u64 <- R25
0001f943: mem := mem with [#13147 + 8, el]:u64 <- R26
0001f949: R25 := 0x27000
0001f951: R2 := mem[R25 + 0xFB8, el]:u64
0001f959: #13153 := R31 + 0x10
0001f95e: mem := mem with [#13153, el]:u64 <- R19
0001f963: mem := mem with [#13153 + 8, el]:u64 <- R20
0001f96c: R20 := 31:0[R1]
0001f974: R3 := mem[R2, el]:u64
0001f97c: mem := mem with [R31 + 0x68, el]:u64 <- R3
0001f982: R3 := 0
0001f989: R1 := 0x1000
0001f991: #13162 := R31 + 0x20
0001f996: mem := mem with [#13162, el]:u64 <- R21
0001f99b: mem := mem with [#13162 + 8, el]:u64 <- R22
0001f9a4: R21 := 31:0[R0]
0001f9aa: R0 := 0x1000
0001f9b2: #13170 := R31 + 0x30
0001f9b7: mem := mem with [#13170, el]:u64 <- R23
0001f9bc: mem := mem with [#13170 + 8, el]:u64 <- R24
0001f9c3: R22 := R31 + 0x58
0001f9ca: R23 := R31 + 0x54
0001f9d2: mem := mem with [R31 + 0x54, el]:u32 <- 31:0[R1]
0001f9d9: R24 := R31 + 0x60
0001f9e1: mem := mem with [R31 + 0x60, el]:u64 <- 0
0001f9e6: R30 := 0xC18C
0001f9e8: call @new with return %0001f9ea

0001f9ea:
0001f9f0: mem := mem with [R31 + 0x58, el]:u64 <- R0
0001f9fc: #13172 := ~31:31[R21]
0001f9f6: when #13172 goto %0001f9f4
0003ad13: goto %0002bc93

0001f9f4:
0001fa04: R2 := R23
0001fa0c: R1 := R22
0001fa15: R0 := 31:0[R20]
0001fa1a: R30 := 0xC240
0001fa1c: call @so_recvln with return %0001fa1e

0001fa1e:
0001fa23: #13182 := extend:64[31:0[R0]]
0001fa27: NF := 63:63[#13182]
0001fa2a: VF := 31:31[R0] & ~63:63[#13182]
0001fa2d: ZF := #13182 = 0
0001fa30: CF := 31:31[R0] | 31:31[R0] & ~63:63[#13182] | ~63:63[#13182]
0001fa41: #13184 := (NF <> VF | ZF) <> 0
0001fa3b: when #13184 goto %0001fa39
0003ad14: goto %0002baca

0002baca:
0002bad0: R0 := mem[R31 + 0x58, el]:u64
0002bad8: R1 := R24
0002badf: R2 := 0x10
0002bae4: R30 := 0xC258
0002bae6: call @strtol with return %0002bae8

0002bae8:
0002baee: R19 := R0
0002baf3: R30 := 0xC260
0002baf5: call @__ctype_b_loc with return %0002baf7

0002baf7:
0002bafd: R2 := mem[R31 + 0x60, el]:u64
0002bb05: R1 := mem[R0, el]:u64
0002bb0e: R0 := pad:32[mem[R2]]
0002bb15: #19213 := 0xFFFFFFFFFFFFFFC5 + extend:64[31:0[R0]]
0002bb19: NF := 63:63[#19213]
0002bb1c: VF := 31:31[R0] & ~63:63[#19213]
0002bb1f: ZF := #19213 = 0
0002bb22: CF := 31:31[R0] | 31:31[R0] & ~63:63[#19213] | ~63:63[#19213]
0002bb2c: R0 := pad:64[7:0[R0]] << 1
0002bb34: #19216 := R0
0002bb3a: R0 := mem[R1 + #19216, el]:u16
0002bb42: R0 := 31:0[R0] & 0x2000
0002bb68: #19242 := ~ZF <> 0
0002bb69: goto %0002bb60

0002bb60:
0002bb62: when #19242 goto %0002bb48
0002bb63: goto %0002bb54

0002bb54:
0002bb55: NF := 0
0002bb58: ZF := 0
0002bb5b: CF := 0
0002bb5e: VF := 0
0002bb65: goto %0002bb61

0002bb48:
0002bb49: NF := 63:63[extend:64[31:0[R0]] + 0]
0002bb4c: VF := 31:31[R0] & ~63:63[extend:64[31:0[R0]] + 0]
0002bb4f: ZF := extend:64[31:0[R0]] + 0 = 0
0002bb52: CF := 31:31[R0] | ~63:63[extend:64[31:0[R0]] + 0] | 31:31[R0] &
          ~63:63[extend:64[31:0[R0]] + 0]
0002bb64: goto %0002bb61

0002bb61:
0002bb75: #19245 := ZF
0002bb6f: when #19245 goto %0002b9f5
0003ad15: goto %0002bb78

0002bb78:
0002bb7e: R26 := mem[R31 + 0x58, el]:u64
0002bb86: R0 := R26
0002bb8b: R30 := 0xC290
0002bb8d: call @strlen with return %0002bb8f

0002bb8f:
0002bb95: R1 := R26
0002bb9d: R2 := R0
0002bba6: R0 := 31:0[R21]
0002bbab: R30 := 0xC2A0
0002bbad: call @write with return %0002bbaf

0002bbaf:
0002bbb8: #19259 := 31:0[R19] = 0
0002bbb2: when #19259 goto %0002b8c6
0003ad16: goto %0002bbbb

0002bbbb:
0002bbc0: #19260 := 2 + extend:64[31:0[R19]]
0002bbc4: NF := 63:63[#19260]
0002bbc7: VF := ~31:31[R19] & 63:63[#19260]
0002bbca: ZF := #19260 = 0
0002bbcd: CF := 31:31[R19] & ~63:63[#19260]
0002bbd2: R19 := #19260
0002bbdd: #19262 := ZF
0002bbd7: when #19262 goto %0001f9f4
0003ad17: goto %0002bbe0

0002bbe0:
0002bbe5: R2 := extend:64[31:0[R19]]
0002bbee: R1 := 31:0[R20]
0002bbf7: R0 := 31:0[R21]
0002bbfc: R30 := 0xC2BC
0002bbfe: call @sub_b518 with return %0002bc00

0002bc00:
0002bc0a: #19270 := 31:0[R0] = 0
0002bc04: when #19270 goto %0002bc02
0003ad18: goto %0002bc4e

0002bc4e:
0002bc54: R2 := R23
0002bc5c: R1 := R22
0002bc65: R0 := 31:0[R20]
0002bc6a: R30 := 0xC2D0
0002bc6c: call @so_recvln with return %0002bc6e

0002bc6e:
0002bc73: #19283 := extend:64[31:0[R0]]
0002bc77: NF := 63:63[#19283]
0002bc7a: VF := 31:31[R0] & ~63:63[#19283]
0002bc7d: ZF := #19283 = 0
0002bc80: CF := 31:31[R0] | 31:31[R0] & ~63:63[#19283] | ~63:63[#19283]
0002bc90: #19285 := (NF = VF & ~ZF) <> 0
0002bc8a: when #19285 goto %0002baca
0003ad19: goto %0001fa39

0002bc93:
0003ad1a: goto %0002bc95

0002bc95:
0002bc9b: R2 := R23
0002bca3: R1 := R22
0002bcac: R0 := 31:0[R20]
0002bcb1: R30 := 0xC1A8
0002bcb3: call @so_recvln with return %0002bcb5

0002bcb5:
0002bcba: #19295 := extend:64[31:0[R0]]
0002bcbe: NF := 63:63[#19295]
0002bcc1: VF := 31:31[R0] & ~63:63[#19295]
0002bcc4: ZF := #19295 = 0
0002bcc7: CF := 31:31[R0] | 31:31[R0] & ~63:63[#19295] | ~63:63[#19295]
0002bcd7: #19297 := (NF <> VF | ZF) <> 0
0002bcd1: when #19297 goto %0001fa39
0003ad1b: goto %0002bcda

0001fa39:
0001fa47: R0 := 0x27000
0001fa4f: R0 := mem[R0 + 0xF78, el]:u64
0001fa58: R0 := mem[R0, el]:u32
0001fa64: #13187 := ~31:0[R0] = 0
0001fa5e: when #13187 goto %0001fa5c
0003ad1c: goto %0001fa82

0001fa5c:
0001fa6a: R1 := 0x12000
0001fa71: R0 := 1
0001fa78: R1 := R1 + 0x848
0001fa7d: R30 := 0xC3E8
0001fa7f: call @__printf_chk with return %0001fa81

0001fa81:
0001fa84: goto %0001fa82

0002bcda:
0002bce0: R0 := mem[R31 + 0x58, el]:u64
0002bce8: R1 := R24
0002bcef: R2 := 0x10
0002bcf4: R30 := 0xC1C0
0002bcf6: call @strtol with return %0002bcf8

0002bcf8:
0002bcfe: R19 := R0
0002bd03: R30 := 0xC1C8
0002bd05: call @__ctype_b_loc with return %0002bd07

0002bd07:
0002bd0d: R1 := mem[R31 + 0x60, el]:u64
0002bd15: R0 := mem[R0, el]:u64
0002bd1e: R2 := pad:32[mem[R1]]
0002bd25: #19307 := 0xFFFFFFFFFFFFFFC5 + extend:64[31:0[R2]]
0002bd29: NF := 63:63[#19307]
0002bd2c: VF := 31:31[R2] & ~63:63[#19307]
0002bd2f: ZF := #19307 = 0
0002bd32: CF := 31:31[R2] | 31:31[R2] & ~63:63[#19307] | ~63:63[#19307]
0002bd3c: R2 := pad:64[7:0[R2]] << 1
0002bd44: #19310 := R2
0002bd4a: R0 := mem[R0 + #19310, el]:u16
0002bd52: R0 := 31:0[R0] & 0x2000
0002bd78: #19336 := ~ZF <> 0
0002bd79: goto %0002bd70

0002bd70:
0002bd72: when #19336 goto %0002bd58
0002bd73: goto %0002bd64

0002bd64:
0002bd65: NF := 0
0002bd68: ZF := 0
0002bd6b: CF := 0
0002bd6e: VF := 0
0002bd75: goto %0002bd71

0002bd58:
0002bd59: NF := 63:63[extend:64[31:0[R0]] + 0]
0002bd5c: VF := 31:31[R0] & ~63:63[extend:64[31:0[R0]] + 0]
0002bd5f: ZF := extend:64[31:0[R0]] + 0 = 0
0002bd62: CF := 31:31[R0] | ~63:63[extend:64[31:0[R0]] + 0] | 31:31[R0] &
          ~63:63[extend:64[31:0[R0]] + 0]
0002bd74: goto %0002bd71

0002bd71:
0002bd85: #19339 := ZF
0002bd7f: when #19339 goto %0002b9f5
0003ad1d: goto %0002bd88

0002b9f5:
0002b9f9: R0 := 0x27000
0002ba01: R0 := mem[R0 + 0xF78, el]:u64
0002ba0a: R0 := mem[R0, el]:u32
0002ba15: #19183 := 31:0[R0] = 0
0002ba0f: when #19183 goto %0001fa82
0003ad1e: goto %0002ba18

0002ba18:
0002ba1c: R1 := 0x12000
0002ba23: R0 := 1
0002ba2a: R1 := R1 + 0x878
0002ba2f: R30 := 0xC3C4
0002ba31: call @__printf_chk with return %0002ba33

0002ba33:
0002ba35: goto %0001fa82

0002bd88:
0002bd91: #19340 := 31:0[R19] = 0
0002bd8b: when #19340 goto %0002b8c6
0003ad1f: goto %0002bd94

0002b8c6:
0002b8cd: R0 := ~31:0[R21]
0002b8d5: R19 := pad:64[1:1[R0]]
0002b8da: goto %0002b8d8

0002b8d8:
0002b8e1: R2 := R23
0002b8e9: R1 := R22
0002b8f2: R0 := 31:0[R20]
0002b8f7: R30 := 0xC35C
0002b8f9: call @so_recvln with return %0002b8fb

0002b8fb:
0002b900: #19164 := extend:64[31:0[R0]]
0002b904: NF := 63:63[#19164]
0002b907: VF := 31:31[R0] & ~63:63[#19164]
0002b90a: ZF := #19164 = 0
0002b90d: CF := 31:31[R0] | 31:31[R0] & ~63:63[#19164] | ~63:63[#19164]
0002b938: #19166 := (NF = VF & ~ZF) <> 0
0002b939: goto %0002b930

0002b930:
0002b932: when #19166 goto %0002b918
0002b933: goto %0002b924

0002b924:
0002b925: NF := 0
0002b928: ZF := 1
0002b92b: CF := 0
0002b92e: VF := 0
0002b935: goto %0002b931

0002b918:
0002b919: NF := 63:63[extend:64[31:0[R19]] + 0]
0002b91c: VF := 31:31[R19] & ~63:63[extend:64[31:0[R19]] + 0]
0002b91f: ZF := extend:64[31:0[R19]] + 0 = 0
0002b922: CF := 31:31[R19] | ~63:63[extend:64[31:0[R19]] + 0] | 31:31[R19] &
          ~63:63[extend:64[31:0[R19]] + 0]
0002b934: goto %0002b931

0002b931:
0002b946: #19169 := ZF
0002b940: when #19169 goto %0002b93e
0003ad20: goto %0002ba37

0002ba37:
0002ba3d: R24 := mem[R31 + 0x58, el]:u64
0002ba45: R0 := R24
0002ba4a: R30 := 0xC374
0002ba4c: call @strlen with return %0002ba4e

0002ba4e:
0002ba54: R1 := R24
0002ba5c: R2 := R0
0002ba65: R0 := 31:0[R21]
0002ba6a: R30 := 0xC384
0002ba6c: call @write with return %0002ba6e

0002ba6e:
0002ba74: R0 := mem[R31 + 0x58, el]:u64
0002ba7d: R1 := pad:32[mem[R0]]
0002ba84: #19198 := 0xFFFFFFFFFFFFFFF3 + extend:64[31:0[R1]]
0002ba88: NF := 63:63[#19198]
0002ba8b: VF := 31:31[R1] & ~63:63[#19198]
0002ba8e: ZF := #19198 = 0
0002ba91: CF := 31:31[R1] | 31:31[R1] & ~63:63[#19198] | ~63:63[#19198]
0002baba: #19200 := ~ZF <> 0
0002babb: goto %0002bab2

0002bab2:
0002bab4: when #19200 goto %0002ba9a
0002bab5: goto %0002baa6

0002baa6:
0002baa7: NF := 0
0002baaa: ZF := 1
0002baad: CF := 0
0002bab0: VF := 0
0002bab7: goto %0002bab3

0002ba9a:
0002ba9b: NF := 63:63[extend:64[31:0[R1]] - 0xA]
0002ba9e: VF := 31:31[R1] & ~63:63[extend:64[31:0[R1]] - 0xA]
0002baa1: ZF := extend:64[31:0[R1]] - 0xA = 0
0002baa4: CF := 31:31[R1] | ~63:63[extend:64[31:0[R1]] - 0xA] | 31:31[R1] &
          ~63:63[extend:64[31:0[R1]] - 0xA]
0002bab6: goto %0002bab3

0002bab3:
0002bac7: #19203 := ~ZF <> 0
0002bac1: when #19203 goto %0002b8d8
0003ad21: goto %0002b9d9

0002b93e:
0002b94d: #19170 := extend:64[31:0[R0]]
0002b951: NF := 63:63[#19170]
0002b954: VF := 31:31[R0] & ~63:63[#19170]
0002b957: ZF := #19170 = 0
0002b95a: CF := 31:31[R0] | 31:31[R0] & ~63:63[#19170] | ~63:63[#19170]
0002b96b: #19172 := (NF <> VF | ZF) <> 0
0002b965: when #19172 goto %0002b963
0003ad22: goto %0002b987

0002b963:
0002b973: R0 := mem[R31 + 0x58, el]:u64
0002b978: R30 := 0xC3D0
0002b97a: call @free with return %0002b97c

0002b97c:
0002b981: R0 := 1
0002b985: goto %0001fa9b

0002b987:
0002b98d: R0 := mem[R31 + 0x58, el]:u64
0002b996: R1 := pad:32[mem[R0]]
0002b99d: #19175 := 0xFFFFFFFFFFFFFFF3 + extend:64[31:0[R1]]
0002b9a1: NF := 63:63[#19175]
0002b9a4: VF := 31:31[R1] & ~63:63[#19175]
0002b9a7: ZF := #19175 = 0
0002b9aa: CF := 31:31[R1] | 31:31[R1] & ~63:63[#19175] | ~63:63[#19175]
0002b9d3: #19177 := ~ZF <> 0
0002b9d4: goto %0002b9cb

0002b9cb:
0002b9cd: when #19177 goto %0002b9b3
0002b9ce: goto %0002b9bf

0002b9bf:
0002b9c0: NF := 0
0002b9c3: ZF := 1
0002b9c6: CF := 0
0002b9c9: VF := 0
0002b9d0: goto %0002b9cc

0002b9b3:
0002b9b4: NF := 63:63[extend:64[31:0[R1]] - 0xA]
0002b9b7: VF := 31:31[R1] & ~63:63[extend:64[31:0[R1]] - 0xA]
0002b9ba: ZF := extend:64[31:0[R1]] - 0xA = 0
0002b9bd: CF := 31:31[R1] | ~63:63[extend:64[31:0[R1]] - 0xA] | 31:31[R1] &
          ~63:63[extend:64[31:0[R1]] - 0xA]
0002b9cf: goto %0002b9cc

0002b9cc:
0002b9e1: #19180 := ZF
0002b9db: when #19180 goto %0002b9d9
0003ad23: goto %0002b8d8

0002b9d9:
0002b9e6: R30 := 0xC39C
0002b9e8: call @free with return %0002b9ea

0002b9ea:
0002b9ef: R0 := 1
0002b9f3: goto %0001fa9b

0002bd94:
0002bd99: #19341 := 2 + extend:64[31:0[R19]]
0002bd9d: NF := 63:63[#19341]
0002bda0: VF := ~31:31[R19] & 63:63[#19341]
0002bda3: ZF := #19341 = 0
0002bda6: CF := 31:31[R19] & ~63:63[#19341]
0002bdab: R19 := #19341
0002bdb6: #19343 := ZF
0002bdb0: when #19343 goto %0002bc95
0003ad24: goto %0002bdb9

0002bdb9:
0002bdbe: R2 := extend:64[31:0[R19]]
0002bdc7: R1 := 31:0[R20]
0002bdd0: R0 := 31:0[R21]
0002bdd5: R30 := 0xC208
0002bdd7: call @sub_b518 with return %0002bdd9

0002bdd9:
0002bde2: #19351 := ~31:0[R0] = 0
0002bddc: when #19351 goto %0002bc95
0003ad25: goto %0002bc02

0002bc02:
0002bc10: R0 := 0x27000
0002bc18: R0 := mem[R0 + 0xF78, el]:u64
0002bc21: R0 := mem[R0, el]:u32
0002bc2c: #19273 := 31:0[R0] = 0
0002bc26: when #19273 goto %0001fa82
0003ad26: goto %0002bc2f

0002bc2f:
0002bc33: R1 := 0x12000
0002bc3a: R0 := 1
0002bc41: R1 := R1 + 0x8B0
0002bc46: R30 := 0xC22C
0002bc48: call @__printf_chk with return %0002bc4a

0002bc4a:
0002bc4c: goto %0001fa82

0001fa82:
0001fa8b: R0 := mem[R31 + 0x58, el]:u64
0001fa90: R30 := 0xC2F0
0001fa92: call @free with return %0001fa94

0001fa94:
0001fa99: R0 := 0
0003ad27: goto %0001fa9b

0001fa9b:
0001faa1: R25 := mem[R25 + 0xFB8, el]:u64
0001faa9: R1 := mem[R31 + 0x68, el]:u64
0001fab1: R2 := mem[R25, el]:u64
0001fab9: #13195 := 1 + ~R2 + R1
0001fabd: NF := 63:63[#13195]
0001fac0: VF := 63:63[R1] & 63:63[~R2] & ~63:63[#13195] | ~63:63[R1] &
          ~63:63[~R2] & 63:63[#13195]
0001fac3: ZF := #13195 = 0
0001fac6: CF := 63:63[R1] & 63:63[~R2] | 63:63[~R2] & ~63:63[#13195] |
          63:63[R1] & ~63:63[#13195]
0001faca: R1 := #13195
0001fad0: R2 := 0
0001fadc: #13200 := ~ZF <> 0
0001fad6: when #13200 goto %0001fad4
0003ad28: goto %0002b87c

0001fad4:
0001fae1: R30 := 0xC3F0
0001fae3: call @__stack_chk_fail with return %0003ad29

0003ad29:
0003ad2a: call @tunnel with noreturn

0002b87c:
0002b883: R19 := mem[R31 + 0x10, el]:u64
0002b887: R20 := mem[R31 + 0x18, el]:u64
0002b890: R21 := mem[R31 + 0x20, el]:u64
0002b894: R22 := mem[R31 + 0x28, el]:u64
0002b89d: R23 := mem[R31 + 0x30, el]:u64
0002b8a1: R24 := mem[R31 + 0x38, el]:u64
0002b8aa: R25 := mem[R31 + 0x40, el]:u64
0002b8ae: R26 := mem[R31 + 0x48, el]:u64
0002b8b8: R29 := mem[R31, el]:u64
0002b8bc: R30 := mem[R31 + 8, el]:u64
0002b8bf: R31 := R31 + 0x70
0002b8c4: call R30 with noreturn

0003ad2b: sub close(close_fd, close_result)
0003b390: close_fd :: in u32 = low:32[R0]
0003b391: close_result :: out u32 = low:32[R0]

0001598e:
00032d50: R16 := 0x27000
00032d58: R17 := mem[R16 + 0xDC8, el]:u64
00032d5f: R16 := R16 + 0xDC8
00032d64: call R17 with noreturn

0003ad2c: sub config_close(config_close_result)
0003b392: config_close_result :: out u32 = low:32[R0]

000155c1:
000155cb: #6348 := R0 = 0
000155c5: when #6348 goto %000155c3
0003ad2d: goto %00017b5d

000155c3:
000155d0: call R30 with noreturn

00017b5d:
00017b64: #7617 := R31 - 0x20
00017b69: mem := mem with [#7617, el]:u64 <- R29
00017b6e: mem := mem with [#7617 + 8, el]:u64 <- R30
00017b72: R31 := #7617
00017b79: R29 := R31
00017b81: mem := mem with [R31 + 0x10, el]:u64 <- R19
00017b89: R19 := R0
00017b91: R0 := mem[R0, el]:u64
00017b96: R30 := 0xA5EC
00017b98: call @hlist_free with return %00017b9a

00017b9a:
00017ba0: R0 := R19
00017ba8: R19 := mem[R31 + 0x10, el]:u64
00017bb2: R29 := mem[R31, el]:u64
00017bb6: R30 := mem[R31 + 8, el]:u64
00017bb9: R31 := R31 + 0x20
00017bbd: call @free with noreturn

0003ad2e: sub config_count(config_count_result)
0003b393: config_count_result :: out u32 = low:32[R0]

000155b5:
000155bb: R0 := mem[R0, el]:u64
000155bf: call @hlist_count with noreturn

0003ad2f: sub config_open(config_open_result)
0003b394: config_open_result :: out u32 = low:32[R0]

00013b92:
00013b99: #5484 := R31 - 0xB0
00013b9e: mem := mem with [#5484, el]:u64 <- R29
00013ba3: mem := mem with [#5484 + 8, el]:u64 <- R30
00013ba7: R31 := #5484
00013bad: R4 := 0x6C67
00013bb4: R4 := R4 & 0xFFFFFFFF0000FFFF | 0x626F0000
00013bbb: R29 := R31
00013bc3: #5490 := R31 + 0x20
00013bc8: mem := mem with [#5490, el]:u64 <- R21
00013bcd: mem := mem with [#5490 + 8, el]:u64 <- R22
00013bd3: R22 := 0x27000
00013bda: R4 := R4 & 0xFFFF0000FFFFFFFF | 0x6C6100000000
00013be2: R2 := mem[R22 + 0xFB8, el]:u64
00013be8: R5 := 0
00013bee: R1 := 0x12000
00013bf5: R1 := R1 + 0x3B0
00013bfd: R3 := mem[R2, el]:u64
00013c05: mem := mem with [R31 + 0xA8, el]:u64 <- R3
00013c0b: R3 := 0
00013c13: #5498 := R31 + 0x30
00013c18: mem := mem with [#5498, el]:u64 <- R23
00013c1d: mem := mem with [#5498 + 8, el]:u64 <- R24
00013c25: #5503 := R31 + 0x70
00013c2a: mem := mem with [#5503, el]:u64 <- R4
00013c2f: mem := mem with [#5503 + 8, el]:u64 <- R5
00013c37: #5508 := R31 + 0x80
00013c3c: mem := mem with [#5508, el]:u64 <- 0
00013c41: mem := mem with [#5508 + 8, el]:u64 <- 0
00013c49: #5513 := R31 + 0x90
00013c4e: mem := mem with [#5513, el]:u64 <- 0
00013c53: mem := mem with [#5513 + 8, el]:u64 <- 0
00013c5b: mem := mem with [R31 + 0xA0, el]:u16 <- 0
00013c60: R30 := 0xA1C0
00013c63: call @fopen with return %00013c65

00013c65:
00013c6f: #5515 := R0 = 0
00013c69: when #5515 goto %00013c67
0003ad30: goto %00018465

00013c67:
00013c75: R23 := 0
00013c7a: goto %00013c78

00018465:
00018469: R24 := 0x27000
00018471: R21 := R0
00018477: R0 := 0x1000
0001847f: #7937 := R31 + 0x10
00018484: mem := mem with [#7937, el]:u64 <- R19
00018489: mem := mem with [#7937 + 8, el]:u64 <- R20
00018491: #7942 := R31 + 0x40
00018496: mem := mem with [#7942, el]:u64 <- R25
0001849b: mem := mem with [#7942 + 8, el]:u64 <- R26
000184a1: R25 := 0x12000
000184a8: R26 := R31 + 0x70
000184b0: #7947 := R31 + 0x50
000184b5: mem := mem with [#7947, el]:u64 <- R27
000184ba: mem := mem with [#7947 + 8, el]:u64 <- R28
000184bf: R30 := 0xA1E8
000184c1: call @new with return %000184c3

000184c3:
000184c9: R20 := R0
000184cf: R0 := 8
000184d4: R30 := 0xA1F4
000184d6: call @new with return %000184d8

000184d8:
000184de: R24 := mem[R24 + 0xF78, el]:u64
000184e6: R23 := R0
000184ed: R25 := R25 + 0x3D0
000184f5: mem := mem with [R0, el]:u64 <- 0
0003ad31: goto %00017c42

00017c42:
00017c52: R0 := R21
00017c57: R30 := 0xA210
00017c59: call @feof with return %00017c5b

00017c5b:
00017c65: #7648 := ~31:0[R0] = 0
00017c5f: when #7648 goto %00017c5d
0003ad32: goto %00017cad

00017cad:
00017cb3: R2 := R21
00017cbb: R0 := R20
00017cc2: R1 := 0x1000
00017cc7: R30 := 0xA224
00017cca: call @fgets with return %00017ccc

00017ccc:
00017cd5: #7664 := R0 = 0
00017ccf: when #7664 goto %00017c5d
0003ad33: goto %00017cd8

00017cd8:
00017cde: R0 := R20
00017ce3: R30 := 0xA230
00017ce5: call @strlen with return %00017ce7

00017ce7:
00017cec: #7668 := 0xFFFFFFFFFFFFF000 + R0
00017cf0: NF := 63:63[#7668]
00017cf3: VF := 63:63[R0] & ~63:63[#7668]
00017cf6: ZF := #7668 = 0
00017cf9: CF := 63:63[R0] | ~63:63[#7668] | 63:63[R0] & ~63:63[#7668]
00017d07: #7670 := (CF & ~ZF) <> 0
00017d01: when #7670 goto %00017c25
0003ad34: goto %00017d0a

00017c25:
00017c2a: R19 := 0x1000
00017c2f: goto %00017c2d

00017d0a:
00017d11: R19 := 31:0[R0]
00017d1c: #7674 := R0 = 0
00017d16: when #7674 goto %00017c42
0003ad35: goto %00017c2d

00017c2d:
00017c36: R0 := R21
00017c3b: R30 := 0xA248
00017c3e: call @feof with return %00017c40

00017c40:
00017c4a: #7644 := ~31:0[R0] = 0
00017c44: when #7644 goto %00017c42
0003ad36: goto %00017d1f

00017d1f:
00017d22: R30 := 0xA250
00017d24: call @__ctype_b_loc with return %00017d26

00017d26:
00017d2c: R28 := R0
00017d32: R2 := 0
00017d3a: R5 := mem[R0, el]:u64
00017d3f: goto %00017d3d

00017d3d:
00017d46: #7679 := R2
00017d4c: R4 := pad:32[mem[R20 + #7679]]
00017d55: R1 := 31:0[R2]
00017d5c: R3 := pad:64[7:0[R4]] << 1
00017d64: #7685 := R3
00017d6a: R3 := mem[R5 + #7685, el]:u16
00017d76: #7686 := ~~13:13[R3]
00017d70: when #7686 goto %00017d6e
0003ad37: goto %00017da5

00017da5:
00017daa: #7693 := 0xFFFFFFFFFFFFFFDD + extend:64[31:0[R4]]
00017dae: NF := 63:63[#7693]
00017db1: VF := 31:31[R4] & ~63:63[#7693]
00017db4: ZF := #7693 = 0
00017db7: CF := 31:31[R4] | 31:31[R4] & ~63:63[#7693] | ~63:63[#7693]
00017dc1: R0 := 0x3B
00017ded: #7695 := ~ZF <> 0
00017dee: goto %00017de5

00017de5:
00017de7: when #7695 goto %00017dc8
00017de8: goto %00017dd9

00017dd9:
00017dda: NF := 0
00017ddd: ZF := 1
00017de0: CF := 0
00017de3: VF := 0
00017dea: goto %00017de6

00017dc8:
00017dc9: #7696 := ~31:0[R0]
00017dce: NF := 63:63[extend:64[31:0[R4]] + extend:64[#7696] + 1]
00017dd1: VF := 31:31[R4] & 31:31[#7696] & ~63:63[extend:64[31:0[R4]] +
          extend:64[#7696] + 1] | ~31:31[R4] & ~31:31[#7696] &
          63:63[extend:64[31:0[R4]] + extend:64[#7696] + 1]
00017dd4: ZF := extend:64[31:0[R4]] + extend:64[#7696] + 1 = 0
00017dd7: CF := 31:31[R4] & 31:31[#7696] | 31:31[#7696] &
          ~63:63[extend:64[31:0[R4]] + extend:64[#7696] + 1] | 31:31[R4] &
          ~63:63[extend:64[31:0[R4]] + extend:64[#7696] + 1]
00017de9: goto %00017de6

00017de6:
00017df6: R4 := extend:64[31:0[R2]]
00017e01: #7699 := ZF
00017dfb: when #7699 goto %00017c42
0003ad38: goto %00017e04

00017e04:
00017e0e: #7700 := ~3:3[R3]
00017e08: when #7700 goto %00017e06
0003ad39: goto %00018410

00018410:
00018415: R4 := R4 + 1
0001841d: #7925 := 1 + extend:64[~31:0[R4]] + extend:64[31:0[R19]]
00018421: NF := 63:63[#7925]
00018424: VF := 31:31[~31:0[R4]] & 31:31[R19] & ~63:63[#7925] |
          ~31:31[~31:0[R4]] & ~31:31[R19] & 63:63[#7925]
00018427: ZF := #7925 = 0
0001842a: CF := 31:31[~31:0[R4]] & 31:31[R19] | 31:31[R19] & ~63:63[#7925] |
          31:31[~31:0[R4]] & ~63:63[#7925]
0001843a: #7927 := (NF <> VF | ZF) <> 0
00018434: when #7927 goto %00017c42
0003ad3a: goto %0001843d

0001843d:
00018443: #7928 := R4
00018449: R2 := pad:32[mem[R20 + #7928]]
00018451: #7929 := R2 << 1
00018457: R3 := mem[R5 + #7929, el]:u16
00018462: #7930 := ~~3:3[R3]
0001845c: when #7930 goto %00018410
0003ad3b: goto %00017e06

00017e06:
00017e16: #7704 := 1 + extend:64[~31:0[R4]] + extend:64[31:0[R19]]
00017e1a: NF := 63:63[#7704]
00017e1d: VF := 31:31[~31:0[R4]] & 31:31[R19] & ~63:63[#7704] |
          ~31:31[~31:0[R4]] & ~31:31[R19] & 63:63[#7704]
00017e20: ZF := #7704 = 0
00017e23: CF := 31:31[~31:0[R4]] & 31:31[R19] | 31:31[R19] & ~63:63[#7704] |
          31:31[~31:0[R4]] & ~63:63[#7704]
00017e33: #7706 := (NF <> VF | ZF) <> 0
00017e2d: when #7706 goto %00017c42
0003ad3c: goto %00017e36

00017e36:
00017e3c: #7707 := extend:64[31:0[R4]]
00017e42: R0 := pad:32[mem[R20 + #7707]]
00017e49: R27 := extend:64[31:0[R4]]
00017e50: #7709 := 0xFFFFFFFFFFFFFFA5 + extend:64[31:0[R0]]
00017e54: NF := 63:63[#7709]
00017e57: VF := 31:31[R0] & ~63:63[#7709]
00017e5a: ZF := #7709 = 0
00017e5d: CF := 31:31[R0] | 31:31[R0] & ~63:63[#7709] | ~63:63[#7709]
00017e6c: #7711 := ZF
00017e66: when #7711 goto %00017e64
0003ad3d: goto %0001806f

00017e64:
00017e74: R0 := extend:64[31:0[R4]] + 1
00017e7c: #7715 := 1 + extend:64[~31:0[R0]] + extend:64[31:0[R19]]
00017e80: NF := 63:63[#7715]
00017e83: VF := 31:31[~31:0[R0]] & 31:31[R19] & ~63:63[#7715] |
          ~31:31[~31:0[R0]] & ~31:31[R19] & 63:63[#7715]
00017e86: ZF := #7715 = 0
00017e89: CF := 31:31[~31:0[R0]] & 31:31[R19] | 31:31[R19] & ~63:63[#7715] |
          31:31[~31:0[R0]] & ~63:63[#7715]
00017e99: #7717 := (NF <> VF | ZF) <> 0
00017e93: when #7717 goto %00017c42
0003ad3e: goto %00017e9c

00017e9c:
00017ea1: R0 := extend:64[31:0[R0]]
00017ea6: goto %00017ea4

00017ea4:
00017ead: #7719 := R0
00017eb3: R2 := pad:32[mem[R20 + #7719]]
00017ebc: R6 := 31:0[R0]
00017ec4: R1 := R20 + R0
00017ecc: #7726 := R2 << 1
00017ed2: R2 := mem[R5 + #7726, el]:u16
00017ede: #7727 := ~~13:13[R2]
00017ed8: when #7727 goto %00017ed6
0003ad3f: goto %00017f0d

00017f0d:
00017f13: #7737 := 1 + extend:64[~31:0[R0]] + extend:64[31:0[R19]]
00017f17: NF := 63:63[#7737]
00017f1a: VF := 31:31[~31:0[R0]] & 31:31[R19] & ~63:63[#7737] |
          ~31:31[~31:0[R0]] & ~31:31[R19] & 63:63[#7737]
00017f1d: ZF := #7737 = 0
00017f20: CF := 31:31[~31:0[R0]] & 31:31[R19] | 31:31[R19] & ~63:63[#7737] |
          31:31[~31:0[R0]] & ~63:63[#7737]
00017f30: #7739 := (NF <> VF | ZF) <> 0
00017f2a: when #7739 goto %00017c42
0003ad40: goto %00017f33

00017f33:
00017f39: R4 := low:32[extend:64[31:0[R19]] - 1]
00017f40: R0 := extend:64[31:0[R0]]
00017f49: R4 := 31:0[R4] - 31:0[R6]
00017f50: R7 := 1
00017f57: R8 := R0 + 0x31
00017f5f: R4 := R4 + R0
00017f68: R7 := 31:0[R7] - 31:0[R6]
00017f6d: goto %00017f6b

00017f6b:
00017f74: #7750 := R0
00017f7a: R2 := pad:32[mem[R20 + #7750]]
00017f83: R3 := 31:0[R0]
00017f8a: #7754 := 0xFFFFFFFFFFFFFFA3 + extend:64[31:0[R2]]
00017f8e: NF := 63:63[#7754]
00017f91: VF := 31:31[R2] & ~63:63[#7754]
00017f94: ZF := #7754 = 0
00017f97: CF := 31:31[R2] | 31:31[R2] & ~63:63[#7754] | ~63:63[#7754]
00017fa6: #7756 := ~ZF <> 0
00017fa0: when #7756 goto %00017f9e
0003ad41: goto %00017fbf

00017f9e:
00017fad: R2 := pad:64[7:0[R2]] << 1
00017fb5: #7759 := R2
00017fbb: R2 := mem[R5 + #7759, el]:u16
00017fc7: #7760 := ~~13:13[R2]
00017fc1: when #7760 goto %00017fbf
0003ad42: goto %00018019

00017fbf:
00017fd0: R3 := 31:0[R3] - 31:0[R6]
0003ad43: goto %00017fd2

00018019:
00018020: R3 := 31:0[R7] + 31:0[R3]
00018028: #7777 := 1 + ~R4 + R0
0001802c: NF := 63:63[#7777]
0001802f: VF := 63:63[R0] & 63:63[~R4] & ~63:63[#7777] | ~63:63[R0] &
          ~63:63[~R4] & 63:63[#7777]
00018032: ZF := #7777 = 0
00018035: CF := 63:63[R0] & 63:63[~R4] | 63:63[~R4] & ~63:63[#7777] |
          63:63[R0] & ~63:63[#7777]
00018042: #7782 := ZF
0001803c: when #7782 goto %00017fd2
0003ad44: goto %00018045

00018045:
0001804a: R0 := R0 + 1
00018052: #7786 := 1 + ~R0 + R8
00018056: NF := 63:63[#7786]
00018059: VF := 63:63[R8] & 63:63[~R0] & ~63:63[#7786] | ~63:63[R8] &
          ~63:63[~R0] & 63:63[#7786]
0001805c: ZF := #7786 = 0
0001805f: CF := 63:63[R8] & 63:63[~R0] | 63:63[~R0] & ~63:63[#7786] |
          63:63[R8] & ~63:63[#7786]
0001806c: #7791 := ZF
00018066: when #7791 goto %00017fd2
0003ad45: goto %00017f6b

00017fd2:
00017fd7: #7764 := extend:64[31:0[R3]]
00017fdb: NF := 63:63[#7764]
00017fde: VF := 31:31[R3] & ~63:63[#7764]
00017fe1: ZF := #7764 = 0
00017fe4: CF := 31:31[R3] | 31:31[R3] & ~63:63[#7764] | ~63:63[#7764]
00017ff4: #7766 := (NF <> VF | ZF) <> 0
00017fee: when #7766 goto %00017c42
0003ad46: goto %00017ff7

00017ff7:
00017ffd: R3 := extend:64[31:0[R3]] + 1
00018005: R0 := R26
0001800c: R2 := extend:64[31:0[R3]]
00018011: R30 := 0xA49C
00018013: call @strlcpy with return %00018015

00018015:
00018017: goto %00017c42

00017ed6:
00017ee5: R0 := R0 + 1
00017eed: #7731 := 1 + extend:64[~31:0[R0]] + extend:64[31:0[R19]]
00017ef1: NF := 63:63[#7731]
00017ef4: VF := 31:31[~31:0[R0]] & 31:31[R19] & ~63:63[#7731] |
          ~31:31[~31:0[R0]] & ~31:31[R19] & 63:63[#7731]
00017ef7: ZF := #7731 = 0
00017efa: CF := 31:31[~31:0[R0]] & 31:31[R19] | 31:31[R19] & ~63:63[#7731] |
          31:31[~31:0[R0]] & ~63:63[#7731]
00017f0a: #7733 := (NF <> VF | ZF) <> 0
00017f04: when #7733 goto %00017c42
0003ad47: goto %00017ea4

0001806f:
00018076: R2 := 31:0[R4] - 31:0[R1]
0001807e: R0 := R20
00018083: R30 := 0xA2D4
00018085: call @substr with return %00018087

00018087:
0001808d: R3 := R0
00018095: R5 := mem[R28, el]:u64
0001809a: goto %00018098

00018098:
000180a1: #7802 := R27
000180a7: R1 := pad:32[mem[R20 + #7802]]
000180ae: R4 := pad:64[7:0[R1]] << 1
000180b6: #7805 := R4
000180bc: R4 := mem[R5 + #7805, el]:u16
000180c8: #7806 := ~~13:13[R4]
000180c2: when #7806 goto %000180c0
0003ad48: goto %000180f7

000180f7:
000180fd: #7816 := 1 + extend:64[~31:0[R27]] + extend:64[31:0[R19]]
00018101: NF := 63:63[#7816]
00018104: VF := 31:31[~31:0[R27]] & 31:31[R19] & ~63:63[#7816] |
          ~31:31[~31:0[R27]] & ~31:31[R19] & 63:63[#7816]
00018107: ZF := #7816 = 0
0001810a: CF := 31:31[~31:0[R27]] & 31:31[R19] | 31:31[R19] & ~63:63[#7816] |
          31:31[~31:0[R27]] & ~63:63[#7816]
0001811a: #7818 := (NF <> VF | ZF) <> 0
00018114: when #7818 goto %00017c42
0003ad49: goto %0001811d

0001811d:
00018122: #7819 := 0xFFFFFFFFFFFFFFC5 + extend:64[31:0[R1]]
00018126: NF := 63:63[#7819]
00018129: VF := 31:31[R1] & ~63:63[#7819]
0001812c: ZF := #7819 = 0
0001812f: CF := 31:31[R1] | 31:31[R1] & ~63:63[#7819] | ~63:63[#7819]
00018139: R0 := 0x23
00018165: #7821 := ~ZF <> 0
00018166: goto %0001815d

0001815d:
0001815f: when #7821 goto %00018140
00018160: goto %00018151

00018151:
00018152: NF := 0
00018155: ZF := 1
00018158: CF := 0
0001815b: VF := 0
00018162: goto %0001815e

00018140:
00018141: #7822 := ~31:0[R0]
00018146: NF := 63:63[extend:64[31:0[R1]] + extend:64[#7822] + 1]
00018149: VF := 31:31[R1] & 31:31[#7822] & ~63:63[extend:64[31:0[R1]] +
          extend:64[#7822] + 1] | ~31:31[R1] & ~31:31[#7822] &
          63:63[extend:64[31:0[R1]] + extend:64[#7822] + 1]
0001814c: ZF := extend:64[31:0[R1]] + extend:64[#7822] + 1 = 0
0001814f: CF := 31:31[R1] & 31:31[#7822] | 31:31[#7822] &
          ~63:63[extend:64[31:0[R1]] + extend:64[#7822] + 1] | 31:31[R1] &
          ~63:63[extend:64[31:0[R1]] + extend:64[#7822] + 1]
00018161: goto %0001815e

0001815e:
00018172: #7824 := ZF
0001816c: when #7824 goto %00017c42
0003ad4a: goto %00018175

00018175:
0001817a: #7825 := 0xFFFFFFFFFFFFFFDE + extend:64[31:0[R1]]
0001817e: NF := 63:63[#7825]
00018181: VF := 31:31[R1] & ~63:63[#7825]
00018184: ZF := #7825 = 0
00018187: CF := 31:31[R1] | 31:31[R1] & ~63:63[#7825] | ~63:63[#7825]
00018196: #7827 := ZF
00018190: when #7827 goto %0001818e
0003ad4b: goto %0001835b

0001818e:
0001819e: R1 := extend:64[31:0[R27]] + 1
000181a6: #7831 := 1 + extend:64[~31:0[R1]] + extend:64[31:0[R19]]
000181aa: NF := 63:63[#7831]
000181ad: VF := 31:31[~31:0[R1]] & 31:31[R19] & ~63:63[#7831] |
          ~31:31[~31:0[R1]] & ~31:31[R19] & 63:63[#7831]
000181b0: ZF := #7831 = 0
000181b3: CF := 31:31[~31:0[R1]] & 31:31[R19] | 31:31[R19] & ~63:63[#7831] |
          31:31[~31:0[R1]] & ~63:63[#7831]
000181c3: #7833 := (NF <> VF | ZF) <> 0
000181bd: when #7833 goto %00017c42
0003ad4c: goto %000181c6

000181c6:
000181cc: #7834 := extend:64[31:0[R1]]
000181d2: R0 := pad:32[mem[R20 + #7834]]
000181d9: #7835 := 0xFFFFFFFFFFFFFFDE + extend:64[31:0[R0]]
000181dd: NF := 63:63[#7835]
000181e0: VF := 31:31[R0] & ~63:63[#7835]
000181e3: ZF := #7835 = 0
000181e6: CF := 31:31[R0] | 31:31[R0] & ~63:63[#7835] | ~63:63[#7835]
000181f5: #7837 := ZF
000181ef: when #7837 goto %000181ed
0003ad4d: goto %000182de

000181ed:
000181fe: R2 := 31:0[R1]
00018203: goto %00018201

000182de:
000182e4: R2 := extend:64[31:0[R27]] + 2
000182eb: R5 := R20 - 1
000182f2: R4 := extend:64[31:0[R2]]
0003ad4e: goto %000182f4

000182f4:
000182fb: R2 := 31:0[R4]
00018302: R4 := R4 + 1
0001830a: #7875 := R4
00018310: R0 := pad:32[mem[R5 + #7875]]
00018317: #7876 := 0xFFFFFFFFFFFFFFDE + extend:64[31:0[R0]]
0001831b: NF := 63:63[#7876]
0001831e: VF := 31:31[R0] & ~63:63[#7876]
00018321: ZF := #7876 = 0
00018324: CF := 31:31[R0] | 31:31[R0] & ~63:63[#7876] | ~63:63[#7876]
00018332: #7878 := ~ZF <> 0
0001832c: when #7878 goto %000182f4
0003ad4f: goto %00018335

00018335:
0001833b: #7882 := 1 + extend:64[~31:0[R2]] + extend:64[31:0[R19]]
0001833f: NF := 63:63[#7882]
00018342: VF := 31:31[~31:0[R2]] & 31:31[R19] & ~63:63[#7882] |
          ~31:31[~31:0[R2]] & ~31:31[R19] & 63:63[#7882]
00018345: ZF := #7882 = 0
00018348: CF := 31:31[~31:0[R2]] & 31:31[R19] | 31:31[R19] & ~63:63[#7882] |
          31:31[~31:0[R2]] & ~63:63[#7882]
00018358: #7884 := (NF <> VF | ZF) <> 0
00018352: when #7884 goto %00017c42
0003ad50: goto %00018201

00018201:
0001820b: R2 := 31:0[R2] - 31:0[R1]
00018213: R0 := R20
0001821b: mem := mem with [R31 + 0x68, el]:u64 <- R3
00018220: R30 := 0xA51C
00018222: call @substr with return %00018224

00018224:
0001822a: R19 := R0
00018232: R3 := mem[R31 + 0x68, el]:u64
00018237: goto %00018235

0001835b:
00018362: R2 := 31:0[R19] - 31:0[R27]
0001836b: R1 := 31:0[R27]
00018373: R0 := R20
0001837b: mem := mem with [R31 + 0x68, el]:u64 <- R3
00018380: R30 := 0xA330
00018382: call @substr with return %00018384

00018384:
0001838a: R19 := R0
00018392: R1 := R25
00018397: R30 := 0xA33C
00018399: call @strcspn with return %0001839b

0001839b:
000183a1: R27 := R0
000183a9: R0 := R19
000183b0: R27 := extend:64[31:0[R27]]
000183b5: R30 := 0xA34C
000183b7: call @strlen with return %000183b9

000183b9:
000183bf: #7910 := 1 + ~R0 + R27
000183c3: NF := 63:63[#7910]
000183c6: VF := 63:63[R27] & 63:63[~R0] & ~63:63[#7910] | ~63:63[R27] &
          ~63:63[~R0] & 63:63[#7910]
000183c9: ZF := #7910 = 0
000183cc: CF := 63:63[R27] & 63:63[~R0] | 63:63[~R0] & ~63:63[#7910] |
          63:63[R27] & ~63:63[#7910]
000183d6: R3 := mem[R31 + 0x68, el]:u64
000183e2: #7916 := ZF
000183dc: when #7916 goto %000183da
0003ad51: goto %00018403

00018403:
00018409: #7921 := R27
0001840e: mem := mem with [R19 + #7921] <- 0
0003ad52: goto %000183da

000183da:
000183ea: R0 := R19
000183f2: mem := mem with [R31 + 0x68, el]:u64 <- R3
000183f7: R30 := 0xA368
000183f9: call @trimr with return %000183fb

000183fb:
00018401: R3 := mem[R31 + 0x68, el]:u64
0003ad53: goto %00018235

00018235:
0001823f: R0 := mem[R24, el]:u32
0001824b: #7852 := ~31:0[R0] = 0
00018245: when #7852 goto %00018243
0003ad54: goto %00018289

00018243:
00018253: R4 := R19
0001825b: R2 := R26
00018261: R1 := 0x12000
00018268: R0 := 1
0001826f: R1 := R1 + 0x3B8
00018277: mem := mem with [R31 + 0x68, el]:u64 <- R3
0001827c: R30 := 0xA4C4
0001827e: call @__printf_chk with return %00018280

00018280:
00018286: R3 := mem[R31 + 0x68, el]:u64
0001828b: goto %00018289

00018289:
00018292: R0 := mem[R23, el]:u64
0001829a: R1 := R3
000182a2: R2 := R19
000182a9: R4 := 0
000182b0: R3 := 0
000182b5: R30 := 0xA38C
000182b7: call @hlist_add with return %000182b9

000182b9:
000182bf: mem := mem with [R23, el]:u64 <- R0
000182c7: R0 := R21
000182cc: R30 := 0xA398
000182ce: call @feof with return %000182d0

000182d0:
000182d9: #7870 := 31:0[R0] = 0
000182d3: when #7870 goto %00017cad
0003ad55: goto %000182dc

000182dc:
0003ad56: goto %00017c5d

00017c5d:
00017c6d: R0 := R20
00017c72: R30 := 0xA3A8
00017c74: call @free with return %00017c76

00017c76:
00017c7c: R0 := R21
00017c81: R30 := 0xA3B0
00017c84: call @fclose with return %00017c86

00017c86:
00017c8d: R19 := mem[R31 + 0x10, el]:u64
00017c91: R20 := mem[R31 + 0x18, el]:u64
00017c9a: R25 := mem[R31 + 0x40, el]:u64
00017c9e: R26 := mem[R31 + 0x48, el]:u64
00017ca7: R27 := mem[R31 + 0x50, el]:u64
00017cab: R28 := mem[R31 + 0x58, el]:u64
0003ad57: goto %00013c78

00013c78:
00013c81: R22 := mem[R22 + 0xFB8, el]:u64
00013c89: R0 := mem[R31 + 0xA8, el]:u64
00013c91: R1 := mem[R22, el]:u64
00013c99: #5522 := 1 + ~R1 + R0
00013c9d: NF := 63:63[#5522]
00013ca0: VF := 63:63[R0] & 63:63[~R1] & ~63:63[#5522] | ~63:63[R0] &
          ~63:63[~R1] & 63:63[#5522]
00013ca3: ZF := #5522 = 0
00013ca6: CF := 63:63[R0] & 63:63[~R1] | 63:63[~R1] & ~63:63[#5522] |
          63:63[R0] & ~63:63[#5522]
00013caa: R0 := #5522
00013cb0: R1 := 0
00013cbc: #5527 := ~ZF <> 0
00013cb6: when #5527 goto %00013cb4
0003ad58: goto %00017bed

00013cb4:
00013cc4: #5531 := R31 + 0x10
00013cc9: mem := mem with [#5531, el]:u64 <- R19
00013cce: mem := mem with [#5531 + 8, el]:u64 <- R20
00013cd6: #5536 := R31 + 0x40
00013cdb: mem := mem with [#5536, el]:u64 <- R25
00013ce0: mem := mem with [#5536 + 8, el]:u64 <- R26
00013ce8: #5541 := R31 + 0x50
00013ced: mem := mem with [#5541, el]:u64 <- R27
00013cf2: mem := mem with [#5541 + 8, el]:u64 <- R28
00013cf7: R30 := 0xA540
00013cf9: call @__stack_chk_fail with return %0003ad59

0003ad59:
0003ad5a: call @config_set with noreturn

00017bed:
00017bf3: R0 := R23
00017bfc: R21 := mem[R31 + 0x20, el]:u64
00017c00: R22 := mem[R31 + 0x28, el]:u64
00017c09: R23 := mem[R31 + 0x30, el]:u64
00017c0d: R24 := mem[R31 + 0x38, el]:u64
00017c17: R29 := mem[R31, el]:u64
00017c1b: R30 := mem[R31 + 8, el]:u64
00017c1e: R31 := R31 + 0xB0
00017c23: call R30 with noreturn

000180c0:
000180cf: R27 := R27 + 1
000180d7: #7810 := 1 + extend:64[~31:0[R27]] + extend:64[31:0[R19]]
000180db: NF := 63:63[#7810]
000180de: VF := 31:31[~31:0[R27]] & 31:31[R19] & ~63:63[#7810] |
          ~31:31[~31:0[R27]] & ~31:31[R19] & 63:63[#7810]
000180e1: ZF := #7810 = 0
000180e4: CF := 31:31[~31:0[R27]] & 31:31[R19] | 31:31[R19] & ~63:63[#7810] |
          31:31[~31:0[R27]] & ~63:63[#7810]
000180f4: #7812 := (NF <> VF | ZF) <> 0
000180ee: when #7812 goto %00017c42
0003ad5b: goto %00018098

00017d6e:
00017d7d: R2 := R2 + 1
00017d85: #7690 := 1 + extend:64[~31:0[R2]] + extend:64[31:0[R19]]
00017d89: NF := 63:63[#7690]
00017d8c: VF := 31:31[~31:0[R2]] & 31:31[R19] & ~63:63[#7690] |
          ~31:31[~31:0[R2]] & ~31:31[R19] & 63:63[#7690]
00017d8f: ZF := #7690 = 0
00017d92: CF := 31:31[~31:0[R2]] & 31:31[R19] | 31:31[R19] & ~63:63[#7690] |
          31:31[~31:0[R2]] & ~63:63[#7690]
00017da2: #7692 := (NF <> VF | ZF) <> 0
00017d9c: when #7692 goto %00017c42
0003ad5c: goto %00017d3d

0003ad5d: sub config_pop(config_pop_result)
0003b395: config_pop_result :: out u32 = low:32[R0]

00015515:
0001551c: #6323 := R31 - 0x30
00015521: mem := mem with [#6323, el]:u64 <- R29
00015526: mem := mem with [#6323 + 8, el]:u64 <- R30
0001552a: R31 := #6323
00015531: R29 := R31
00015539: #6328 := R31 + 0x10
0001553e: mem := mem with [#6328, el]:u64 <- R19
00015543: mem := mem with [#6328 + 8, el]:u64 <- R20
0001554b: R20 := R0
00015553: R0 := mem[R0, el]:u64
0001555b: mem := mem with [R31 + 0x20, el]:u64 <- R21
00015563: R21 := R1
00015568: R30 := 0xA590
0001556a: call @hlist_get with return %0001556c

0001556c:
00015572: R19 := R0
0001557e: #6340 := R0 = 0
00015578: when #6340 goto %00015576
0003ad5e: goto %00017bbf

00017bbf:
00017bc2: R30 := 0xA59C
00017bc4: call @strdup with return %00017bc6

00017bc6:
00017bcc: R19 := R0
00017bd4: R0 := mem[R20, el]:u64
00017bdc: R1 := R21
00017be1: R30 := 0xA5AC
00017be3: call @hlist_del with return %00017be5

00017be5:
00017beb: mem := mem with [R20, el]:u64 <- R0
0003ad5f: goto %00015576

00015576:
00015586: R0 := R19
0001558f: R19 := mem[R31 + 0x10, el]:u64
00015593: R20 := mem[R31 + 0x18, el]:u64
0001559b: R21 := mem[R31 + 0x20, el]:u64
000155a5: R29 := mem[R31, el]:u64
000155a9: R30 := mem[R31 + 8, el]:u64
000155ac: R31 := R31 + 0x30
000155b1: call R30 with noreturn

0003ad60: sub config_set(config_set_result)
0003b396: config_set_result :: out u32 = low:32[R0]

00013cfb:
00013d02: #5546 := R31 - 0x20
00013d07: mem := mem with [#5546, el]:u64 <- R29
00013d0c: mem := mem with [#5546 + 8, el]:u64 <- R30
00013d10: R31 := #5546
00013d17: R3 := 1
00013d1e: R29 := R31
00013d26: mem := mem with [R31 + 0x10, el]:u64 <- R19
00013d2e: R19 := R0
00013d36: R0 := mem[R0, el]:u64
00013d3b: R30 := 0xA55C
00013d3e: call @hlist_mod with return %000154ed

000154ed:
000154f3: mem := mem with [R19, el]:u64 <- R0
000154fb: R19 := mem[R31 + 0x10, el]:u64
00015505: R29 := mem[R31, el]:u64
00015509: R30 := mem[R31 + 8, el]:u64
0001550c: R31 := R31 + 0x20
00015511: call R30 with noreturn

0003ad61: sub connect(connect_fd, connect_addr, connect_len, connect_result)
0003b397: connect_fd :: in u32 = low:32[R0]
0003b398: connect_addr :: in u64 = R1
0003b399: connect_len :: in u64 = R2
0003b39a: connect_result :: out u32 = low:32[R0]

000178a8:
00032f44: R16 := 0x27000
00032f4c: R17 := mem[R16 + 0xE68, el]:u64
00032f53: R16 := R16 + 0xE68
00032f58: call R17 with noreturn

0003ad62: sub copy_auth(copy_auth_result)
0003b39b: copy_auth_result :: out u32 = low:32[R0]

0000f3f8:
0000f3ff: #64 := R31 - 0x40
0000f404: mem := mem with [#64, el]:u64 <- R29
0000f409: mem := mem with [#64 + 8, el]:u64 <- R30
0000f40d: R31 := #64
0000f414: R4 := R1 + 0x200
0000f41b: R3 := R0 + 0x200
0000f422: R29 := R31
0000f42a: #69 := R31 + 0x10
0000f42f: mem := mem with [#69, el]:u64 <- R19
0000f434: mem := mem with [#69 + 8, el]:u64 <- R20
0000f43c: R20 := R1
0000f444: V0 := high:64[V0].mem[R4 - 0xD4, el]:u64
0000f44c: #78 := R31 + 0x20
0000f451: mem := mem with [#78, el]:u64 <- R21
0000f456: mem := mem with [#78 + 8, el]:u64 <- R22
0000f45e: R19 := R0
0000f465: R1 := R1 + 0x32
0000f46d: #86 := R31 + 0x30
0000f472: mem := mem with [#86, el]:u64 <- R23
0000f477: mem := mem with [#86 + 8, el]:u64 <- R24
0000f47e: R0 := R0 + 0x32
0000f487: R24 := 31:0[R2]
0000f48f: mem := mem with [R3 - 0xD4, el]:u64 <- 63:0[V0]
0000f495: R2 := 0x32
0000f49e: R4 := mem[R20 + 0x134, el]:u32
0000f4a5: R22 := R19 + 0xFA
0000f4ae: R3 := mem[R20 + 0x138, el]:u32
0000f4b5: R23 := R19 + 0xC8
0000f4bd: mem := mem with [R19 + 0x134, el]:u32 <- 31:0[R4]
0000f4c4: R21 := R19 + 0x96
0000f4cc: mem := mem with [R19 + 0x138, el]:u32 <- 31:0[R3]
0000f4d1: R30 := 0xB154
0000f4d4: call @strlcpy with return %0002d4aa

0002d4aa:
0002d4af: R1 := R20 + 0x64
0002d4b6: R0 := R19 + 0x64
0002d4bc: R2 := 0x32
0002d4c1: R30 := 0xB164
0002d4c3: call @strlcpy with return %0002d4c5

0002d4c5:
0002d4cf: #20085 := 31:0[R24] = 0
0002d4c9: when #20085 goto %0002d4c7
0003ad63: goto %0002d60e

0002d4c7:
0002d4d7: #20089 := R19
0002d4dc: mem := mem with [#20089, el]:u64 <- 0
0002d4e1: mem := mem with [#20089 + 8, el]:u64 <- 0
0002d4e9: R0 := R19
0002d4f1: #20097 := R19 + 0x10
0002d4f6: mem := mem with [#20097, el]:u64 <- 0
0002d4fb: mem := mem with [#20097 + 8, el]:u64 <- 0
0002d503: #20102 := R19 + 0x20
0002d508: mem := mem with [#20102, el]:u64 <- 0
0002d50d: mem := mem with [#20102 + 8, el]:u64 <- 0
0002d515: mem := mem with [R19 + 0x30, el]:u16 <- 0
0002d51d: #20107 := R22
0002d522: mem := mem with [#20107, el]:u64 <- 0
0002d527: mem := mem with [#20107 + 8, el]:u64 <- 0
0002d52f: #20112 := R22 + 0x10
0002d534: mem := mem with [#20112, el]:u64 <- 0
0002d539: mem := mem with [#20112 + 8, el]:u64 <- 0
0002d541: #20117 := R22 + 0x20
0002d546: mem := mem with [#20117, el]:u64 <- 0
0002d54b: mem := mem with [#20117 + 8, el]:u64 <- 0
0002d553: mem := mem with [R22 + 0x30, el]:u16 <- 0
0002d55b: #20122 := R19 + 0xC8
0002d560: mem := mem with [#20122, el]:u64 <- 0
0002d565: mem := mem with [#20122 + 8, el]:u64 <- 0
0002d56d: #20127 := R23 + 0x10
0002d572: mem := mem with [#20127, el]:u64 <- 0
0002d577: mem := mem with [#20127 + 8, el]:u64 <- 0
0002d57f: #20132 := R23 + 0x20
0002d584: mem := mem with [#20132, el]:u64 <- 0
0002d589: mem := mem with [#20132 + 8, el]:u64 <- 0
0002d591: mem := mem with [R23 + 0x30, el]:u16 <- 0
0002d599: #20137 := R21
0002d59e: mem := mem with [#20137, el]:u64 <- 0
0002d5a3: mem := mem with [#20137 + 8, el]:u64 <- 0
0002d5ab: #20142 := R21 + 0x10
0002d5b0: mem := mem with [#20142, el]:u64 <- 0
0002d5b5: mem := mem with [#20142 + 8, el]:u64 <- 0
0002d5bd: #20147 := R21 + 0x20
0002d5c2: mem := mem with [#20147, el]:u64 <- 0
0002d5c7: mem := mem with [#20147 + 8, el]:u64 <- 0
0002d5cf: mem := mem with [R21 + 0x30, el]:u16 <- 0
0002d5d8: R19 := mem[R31 + 0x10, el]:u64
0002d5dc: R20 := mem[R31 + 0x18, el]:u64
0002d5e5: R21 := mem[R31 + 0x20, el]:u64
0002d5e9: R22 := mem[R31 + 0x28, el]:u64
0002d5f2: R23 := mem[R31 + 0x30, el]:u64
0002d5f6: R24 := mem[R31 + 0x38, el]:u64
0002d600: R29 := mem[R31, el]:u64
0002d604: R30 := mem[R31 + 8, el]:u64
0002d607: R31 := R31 + 0x40
0002d60c: call R30 with noreturn

0002d60e:
0002d614: R1 := R20
0002d61c: R0 := R19
0002d622: R2 := 0x32
0002d627: R30 := 0xB178
0002d629: call @strlcpy with return %0002d62b

0002d62b:
0002d630: R1 := R20 + 0xFA
0002d637: R0 := R20 + 0x96
0002d640: R2 := mem[R1, el]:u64
0002d644: R3 := mem[R1 + 8, el]:u64
0002d64c: #20163 := R22
0002d651: mem := mem with [#20163, el]:u64 <- R2
0002d656: mem := mem with [#20163 + 8, el]:u64 <- R3
0002d65f: R2 := mem[R1 + 0x10, el]:u64
0002d663: R3 := mem[R1 + 0x18, el]:u64
0002d66b: #20169 := R22 + 0x10
0002d670: mem := mem with [#20169, el]:u64 <- R2
0002d675: mem := mem with [#20169 + 8, el]:u64 <- R3
0002d67e: R2 := mem[R1 + 0x20, el]:u64
0002d682: R3 := mem[R1 + 0x28, el]:u64
0002d68a: #20175 := R22 + 0x20
0002d68f: mem := mem with [#20175, el]:u64 <- R2
0002d694: mem := mem with [#20175 + 8, el]:u64 <- R3
0002d69d: R1 := mem[R20 + 0x12A, el]:u16
0002d6a5: mem := mem with [R22 + 0x30, el]:u16 <- low:16[31:0[R1]]
0002d6ae: R2 := mem[R20 + 0xC8, el]:u64
0002d6b2: R3 := mem[R20 + 0xD0, el]:u64
0002d6ba: #20182 := R19 + 0xC8
0002d6bf: mem := mem with [#20182, el]:u64 <- R2
0002d6c4: mem := mem with [#20182 + 8, el]:u64 <- R3
0002d6cd: R2 := mem[R20 + 0xD8, el]:u64
0002d6d1: R3 := mem[R20 + 0xE0, el]:u64
0002d6d9: #20188 := R23 + 0x10
0002d6de: mem := mem with [#20188, el]:u64 <- R2
0002d6e3: mem := mem with [#20188 + 8, el]:u64 <- R3
0002d6ec: R2 := mem[R20 + 0xE8, el]:u64
0002d6f0: R3 := mem[R20 + 0xF0, el]:u64
0002d6f8: #20194 := R23 + 0x20
0002d6fd: mem := mem with [#20194, el]:u64 <- R2
0002d702: mem := mem with [#20194 + 8, el]:u64 <- R3
0002d70b: R1 := mem[R20 + 0xF8, el]:u16
0002d713: mem := mem with [R23 + 0x30, el]:u16 <- low:16[31:0[R1]]
0002d71c: R2 := mem[R0, el]:u64
0002d720: R3 := mem[R0 + 8, el]:u64
0002d728: #20201 := R21
0002d72d: mem := mem with [#20201, el]:u64 <- R2
0002d732: mem := mem with [#20201 + 8, el]:u64 <- R3
0002d73b: R2 := mem[R0 + 0x10, el]:u64
0002d73f: R3 := mem[R0 + 0x18, el]:u64
0002d747: #20207 := R21 + 0x10
0002d74c: mem := mem with [#20207, el]:u64 <- R2
0002d751: mem := mem with [#20207 + 8, el]:u64 <- R3
0002d75a: R2 := mem[R0 + 0x20, el]:u64
0002d75e: R3 := mem[R0 + 0x28, el]:u64
0002d766: #20213 := R21 + 0x20
0002d76b: mem := mem with [#20213, el]:u64 <- R2
0002d770: mem := mem with [#20213 + 8, el]:u64 <- R3
0002d779: R0 := mem[R20 + 0xC6, el]:u16
0002d781: mem := mem with [R21 + 0x30, el]:u16 <- low:16[31:0[R0]]
0002d789: R0 := R19
0002d792: R19 := mem[R31 + 0x10, el]:u64
0002d796: R20 := mem[R31 + 0x18, el]:u64
0002d79f: R21 := mem[R31 + 0x20, el]:u64
0002d7a3: R22 := mem[R31 + 0x28, el]:u64
0002d7ac: R23 := mem[R31 + 0x30, el]:u64
0002d7b0: R24 := mem[R31 + 0x38, el]:u64
0002d7ba: R29 := mem[R31, el]:u64
0002d7be: R30 := mem[R31 + 8, el]:u64
0002d7c1: R31 := R31 + 0x40
0002d7c6: call R30 with noreturn

0003ad64: sub copy_rr_data(copy_rr_data_result)
0003b39c: copy_rr_data_result :: out u32 = low:32[R0]

00014462:
00014469: #5825 := R31 - 0x50
0001446e: mem := mem with [#5825, el]:u64 <- R29
00014473: mem := mem with [#5825 + 8, el]:u64 <- R30
00014477: R31 := #5825
0001447e: #5827 := R1
00014482: NF := 63:63[#5827]
00014485: VF := 63:63[R1] & ~63:63[#5827]
00014488: ZF := #5827 = 0
0001448b: CF := 63:63[R1] | ~63:63[#5827] | 63:63[R1] & ~63:63[#5827]
000144b3: #5829 := ~ZF <> 0
000144b4: goto %000144ab

000144ab:
000144ad: when #5829 goto %00014493
000144ae: goto %0001449f

0001449f:
000144a0: NF := 0
000144a3: ZF := 1
000144a6: CF := 0
000144a9: VF := 0
000144b0: goto %000144ac

00014493:
00014494: NF := 63:63[R0 + 0]
00014497: VF := 63:63[R0] & ~63:63[R0 + 0]
0001449a: ZF := R0 + 0 = 0
0001449d: CF := 63:63[R0] | ~63:63[R0 + 0] | 63:63[R0] & ~63:63[R0 + 0]
000144af: goto %000144ac

000144ac:
000144bc: R29 := R31
000144c4: #5834 := R31 + 0x10
000144c9: mem := mem with [#5834, el]:u64 <- R19
000144ce: mem := mem with [#5834 + 8, el]:u64 <- R20
000144d4: R20 := 0
000144e0: #5837 := ZF
000144da: when #5837 goto %000144d8
0003ad65: goto %00014b76

00014b76:
00014b7c: R19 := R1
00014b84: R20 := R0
00014b8c: #6026 := R31 + 0x20
00014b91: mem := mem with [#6026, el]:u64 <- R21
00014b96: mem := mem with [#6026 + 8, el]:u64 <- R22
00014b9b: R30 := 0x5464
00014b9d: call @reset_rr_data with return %00014b9f

00014b9f:
00014ba6: R0 := mem[R19, el]:u32
00014bae: R22 := mem[R19 + 8, el]:u64
00014bb6: mem := mem with [R20, el]:u32 <- 31:0[R0]
00014bbf: V0 := mem[R19 + 0x10, el]:u64.mem[R19 + 0x18, el]:u64
00014bc7: mem := mem with [R20 + 0x10, el]:u128 <- V0
00014bd0: R0 := mem[R19 + 0x20, el]:u32
00014bd8: mem := mem with [R20 + 0x20, el]:u32 <- 31:0[R0]
00014be3: #6033 := R22 = 0
00014bdd: when #6033 goto %000146a7
0003ad66: goto %00014be6

00014be6:
00014bec: #6037 := R31 + 0x30
00014bf1: mem := mem with [#6037, el]:u64 <- R23
00014bf6: mem := mem with [#6037 + 8, el]:u64 <- R24
00014bfc: R23 := 0
00014c04: mem := mem with [R31 + 0x40, el]:u64 <- R25
0003ad67: goto %00014596

00014596:
000145a7: R25 := mem[R22, el]:u64
000145ab: R24 := mem[R22 + 8, el]:u64
000145b2: #5863 := R25
000145b6: NF := 63:63[#5863]
000145b9: VF := 63:63[R25] & ~63:63[#5863]
000145bc: ZF := #5863 = 0
000145bf: CF := 63:63[R25] | ~63:63[#5863] | 63:63[R25] & ~63:63[#5863]
000145e7: #5865 := ~ZF <> 0
000145e8: goto %000145df

000145df:
000145e1: when #5865 goto %000145c7
000145e2: goto %000145d3

000145d3:
000145d4: NF := 0
000145d7: ZF := 1
000145da: CF := 0
000145dd: VF := 0
000145e4: goto %000145e0

000145c7:
000145c8: NF := 63:63[R24 + 0]
000145cb: VF := 63:63[R24] & ~63:63[R24 + 0]
000145ce: ZF := R24 + 0 = 0
000145d1: CF := 63:63[R24] | ~63:63[R24 + 0] | 63:63[R24] & ~63:63[R24 + 0]
000145e3: goto %000145e0

000145e0:
000145f4: #5868 := ZF
000145ee: when #5868 goto %00014589
0003ad68: goto %000145f7

000145f7:
000145fb: R0 := 0x20
00014600: R30 := 0x54A8
00014602: call @malloc with return %00014604

00014604:
0001460a: R21 := R0
00014612: R0 := R25
00014617: R30 := 0x54B4
00014619: call @strdup with return %0001461b

0001461b:
00014621: R1 := R0
00014629: R0 := R24
00014631: mem := mem with [R21, el]:u64 <- R1
00014636: R30 := 0x54C4
00014638: call @strdup with return %0001463a

0001463a:
00014640: mem := mem with [R21 + 8, el]:u64 <- R0
00014648: mem := mem with [R21 + 0x10, el]:u32 <- 0
00014650: mem := mem with [R21 + 0x18, el]:u64 <- 0
0001465b: #5881 := R23 = 0
00014655: when #5881 goto %00014580
0003ad69: goto %0001465e

00014580:
00014586: R23 := R21
0001458b: goto %00014589

0001465e:
00014664: R0 := R23
0003ad6a: goto %00014666

00014666:
0001466c: R1 := R0
00014674: R0 := mem[R0 + 0x18, el]:u64
0001467f: #5889 := ~R0 = 0
00014679: when #5889 goto %00014666
0003ad6b: goto %00014682

00014682:
00014688: mem := mem with [R1 + 0x18, el]:u64 <- R21
0003ad6c: goto %00014589

00014589:
00014592: R22 := mem[R22 + 0x18, el]:u64
0001459e: #5861 := ~R22 = 0
00014598: when #5861 goto %00014596
0003ad6d: goto %0001468a

0001468a:
00014690: R25 := mem[R31 + 0x40, el]:u64
00014698: mem := mem with [R20 + 8, el]:u64 <- R23
000146a1: R23 := mem[R31 + 0x30, el]:u64
000146a5: R24 := mem[R31 + 0x38, el]:u64
0003ad6e: goto %000146a7

000146a7:
000146ad: R0 := mem[R19 + 0x28, el]:u64
000146b9: #5893 := R0 = 0
000146b3: when #5893 goto %000146b1
0003ad6f: goto %000147b9

000147b9:
000147bc: R30 := 0x5508
000147be: call @strdup with return %000147c0

000147c0:
000147c6: mem := mem with [R20 + 0x28, el]:u64 <- R0
0003ad70: goto %000146b1

000146b1:
000146c1: R0 := mem[R19 + 0x30, el]:u64
000146cd: #5895 := R0 = 0
000146c7: when #5895 goto %000146c5
0003ad71: goto %000147aa

000147aa:
000147ad: R30 := 0x5518
000147af: call @strdup with return %000147b1

000147b1:
000147b7: mem := mem with [R20 + 0x30, el]:u64 <- R0
0003ad72: goto %000146c5

000146c5:
000146d5: R0 := mem[R19 + 0x38, el]:u64
000146e1: #5897 := R0 = 0
000146db: when #5897 goto %000146d9
0003ad73: goto %0001479b

0001479b:
0001479e: R30 := 0x5528
000147a0: call @strdup with return %000147a2

000147a2:
000147a8: mem := mem with [R20 + 0x38, el]:u64 <- R0
0003ad74: goto %000146d9

000146d9:
000146e9: R0 := mem[R19 + 0x40, el]:u64
000146f5: #5899 := R0 = 0
000146ef: when #5899 goto %000146ed
0003ad75: goto %0001478c

0001478c:
0001478f: R30 := 0x5538
00014791: call @strdup with return %00014793

00014793:
00014799: mem := mem with [R20 + 0x40, el]:u64 <- R0
0003ad76: goto %000146ed

000146ed:
000146fd: R0 := mem[R19 + 0x48, el]:u64
00014709: #5901 := R0 = 0
00014703: when #5901 goto %00014701
0003ad77: goto %0001477d

0001477d:
00014780: R30 := 0x5548
00014782: call @strdup with return %00014784

00014784:
0001478a: mem := mem with [R20 + 0x48, el]:u64 <- R0
0003ad78: goto %00014701

00014701:
00014711: R0 := mem[R19 + 0x50, el]:u64
0001471d: #5903 := R0 = 0
00014717: when #5903 goto %00014715
0003ad79: goto %0001476e

0001476e:
00014771: R30 := 0x5558
00014773: call @strdup with return %00014775

00014775:
0001477b: mem := mem with [R20 + 0x50, el]:u64 <- R0
0003ad7a: goto %00014715

00014715:
00014725: R0 := mem[R19 + 0x58, el]:u64
00014731: #5905 := R0 = 0
0001472b: when #5905 goto %00014729
0003ad7b: goto %00014740

00014740:
00014747: R2 := mem[R19 + 0x18, el]:u32
0001474e: #5908 := extend:64[31:0[R2]]
00014752: NF := 63:63[#5908]
00014755: VF := 31:31[R2] & ~63:63[#5908]
00014758: ZF := #5908 = 0
0001475b: CF := 31:31[R2] | 31:31[R2] & ~63:63[#5908] | ~63:63[#5908]
0001476b: #5910 := (NF = VF & ~ZF) <> 0
00014765: when #5910 goto %0001450d
0003ad7c: goto %00014729

0001450d:
00014512: R21 := extend:64[31:0[R2]]
00014518: R1 := 1
00014520: R0 := R21
00014525: R30 := 0x5594
00014527: call @calloc with return %00014529

00014529:
0001452f: mem := mem with [R20 + 0x58, el]:u64 <- R0
00014537: R2 := R21
0001453f: R1 := mem[R19 + 0x58, el]:u64
00014544: R30 := 0x55A4
00014546: call @memcpy with return %00014548

00014548:
0001454e: R0 := R20
00014557: R19 := mem[R31 + 0x10, el]:u64
0001455b: R20 := mem[R31 + 0x18, el]:u64
00014564: R21 := mem[R31 + 0x20, el]:u64
00014568: R22 := mem[R31 + 0x28, el]:u64
00014572: R29 := mem[R31, el]:u64
00014576: R30 := mem[R31 + 8, el]:u64
00014579: R31 := R31 + 0x50
0001457e: call R30 with noreturn

00014729:
0001473a: R21 := mem[R31 + 0x20, el]:u64
0001473e: R22 := mem[R31 + 0x28, el]:u64
0003ad7d: goto %000144d8

000144d8:
000144e8: R0 := R20
000144f1: R19 := mem[R31 + 0x10, el]:u64
000144f5: R20 := mem[R31 + 0x18, el]:u64
000144ff: R29 := mem[R31, el]:u64
00014503: R30 := mem[R31 + 8, el]:u64
00014506: R31 := R31 + 0x50
0001450b: call R30 with noreturn

0003ad7e: sub croak(croak_result)
0003b39d: croak_result :: out u32 = low:32[R0]

00022a4b:
00022a52: #14794 := R31 - 0x10
00022a57: mem := mem with [#14794, el]:u64 <- R29
00022a5c: mem := mem with [#14794 + 8, el]:u64 <- R30
00022a60: R31 := #14794
00022a67: R29 := R31
00022a73: #14796 := 31:0[R1] = 0
00022a6d: when #14796 goto %00022a6b
0003ad7f: goto %00022ab3

00022ab3:
00022ab9: R2 := R0
00022abf: R1 := 0x11000
00022ac6: R0 := 1
00022acd: R1 := R1 + 0x6B0
00022ad2: R30 := 0x4868
00022ad4: call @__printf_chk with return %00022aa0

00022aa0:
00022aa8: R0 := 1
00022aad: R30 := 0x4870
00022aaf: call @myexit with return %00022a6b

00022a6b:
00022a7b: R3 := R0
00022a81: R2 := 0x11000
00022a88: R1 := 1
00022a8f: R2 := R2 + 0x6B0
00022a96: R0 := 3
00022a9b: R30 := 0x4888
00022a9d: call @__syslog_chk with return %00022a9f

00022a9f:
00022aa2: goto %00022aa0

0003ad80: sub data_send(data_send_result)
0003b39e: data_send_result :: out u32 = low:32[R0]

0001f905:
0001f90f: #13138 := ~R2 = 0
0001f909: when #13138 goto %0001f907
0003ad81: goto %0002bde5

0001f907:
0001f913: call @sub_b518 with noreturn

0002bde5:
0002bdea: R0 := 1
0002bdef: call R30 with noreturn

0003ad82: sub deregister_tm_clones(deregister_tm_clones_result)
0003b39f: deregister_tm_clones_result :: out u32 = low:32[R0]

00030fe0:
00030fe4: R0 := 0x28000
00030feb: R0 := R0 + 0x498
00030ff1: R1 := 0x28000
00030ff8: R1 := R1 + 0x498
00031000: #21690 := 1 + ~R0 + R1
00031004: NF := 63:63[#21690]
00031007: VF := 63:63[R1] & 63:63[~R0] & ~63:63[#21690] | ~63:63[R1] &
          ~63:63[~R0] & 63:63[#21690]
0003100a: ZF := #21690 = 0
0003100d: CF := 63:63[R1] & 63:63[~R0] | 63:63[~R0] & ~63:63[#21690] |
          63:63[R1] & ~63:63[#21690]
0003101b: #21695 := ZF
00031015: when #21695 goto %00031013
0003ad83: goto %00031154

00031154:
00031158: R1 := 0x27000
00031160: R1 := mem[R1 + 0xF48, el]:u64
0003116b: #21730 := R1 = 0
00031165: when #21730 goto %00031013
0003ad84: goto %0003116e

00031013:
00031020: call R30 with noreturn

0003116e:
00031174: R16 := R1
00031179: call R16 with noreturn

0003ad85: sub des_key_schedule(des_key_schedule_result)
0003b3a0: des_key_schedule_result :: out u32 = low:32[R0]

0000ff7e:
0000ff88: #488 := R31 - 0x50
0000ff8d: mem := mem with [#488, el]:u64 <- R29
0000ff92: mem := mem with [#488 + 8, el]:u64 <- R30
0000ff96: R31 := #488
0000ff9c: R3 := 0x11000
0000ffa3: R3 := R3 + 0x8E0
0000ffaa: R29 := R31
0000ffb2: #493 := R31 + 0x10
0000ffb7: mem := mem with [#493, el]:u64 <- R19
0000ffbc: mem := mem with [#493 + 8, el]:u64 <- R20
0000ffc3: R4 := R3 + 0x40
0000ffca: R6 := R3 + 0x80
0000ffd2: #498 := R31 + 0x20
0000ffd7: mem := mem with [#498, el]:u64 <- R21
0000ffdc: mem := mem with [#498 + 8, el]:u64 <- R22
0000ffe3: R12 := R1 + 0x80
0000ffea: R11 := 0x1C
0000fff2: #503 := R31 + 0x30
0000fff7: mem := mem with [#503, el]:u64 <- R23
0000fffc: mem := mem with [#503 + 8, el]:u64 <- R24
00010003: R10 := 0x24000000
0001000a: R9 := 0x2080000
00010012: mem := mem with [R31 + 0x40, el]:u64 <- R25
00010019: R8 := 0x808
00010020: R7 := 0x11
0001002a: R2 := mem[R0, el]:u32
0001002f: R5 := mem[R0 + 4, el]:u32
00010037: R5 := 7:0[R5].15:8[R5].23:16[R5].31:24[R5]
0001003f: R2 := 7:0[R2].15:8[R2].23:16[R2].31:24[R2]
00010048: R0 := 31:0[R2] ^ 31:0[R5] >> 4
00010050: R0 := 31:0[R0] & 0xF0F0F0F
00010059: R2 := 31:0[R2] ^ 31:0[R0]
00010062: R0 := 31:0[R5] ^ 31:0[R0] << 4
0001006b: R5 := 31:0[R2] ^ 31:0[R0]
00010073: R5 := 31:0[R5] & 0x10101010
0001007c: R2 := 31:0[R2] ^ 31:0[R5]
00010085: R0 := 31:0[R0] ^ 31:0[R5]
0001008c: R22 := R2 & 0xF
00010093: R13 := pad:64[3:0[R2]]
0001009a: R14 := pad:64[11:8[R2]]
000100a1: R19 := pad:64[11:8[R2]]
000100a8: R16 := pad:64[12:9[R0]]
000100af: R15 := pad:64[7:4[R0]]
000100b7: #598 := R22 << 2
000100bd: R22 := mem[R3 + #598, el]:u32
000100c5: #600 := R13 << 2
000100cb: R13 := mem[R3 + #600, el]:u32
000100d2: R5 := pad:64[12:9[R0]]
000100da: #603 := R19 << 2
000100e0: R19 := mem[R3 + #603, el]:u32
000100e8: R20 := pad:64[15:12[R0]]
000100f0: #606 := R14 << 2
000100f6: R14 := mem[R3 + #606, el]:u32
000100fd: R21 := pad:64[low:4[0xF & R2 >> 0xD]]
00010104: R23 := pad:64[4:1[R0]]
0001010c: R13 := 31:0[R13] << 0x21
00010113: R18 := pad:64[8:5[R2]]
0001011b: R17 := pad:64[7:5[R2]]
00010124: R14 := 31:0[R13] | 31:0[R14] << 2
0001012d: R22 := 31:0[R19] | 31:0[R22] << 3
00010135: #620 := R16 << 2
0001013b: R13 := mem[R4 + #620, el]:u32
00010142: R16 := pad:64[4:1[R0]]
0001014a: #623 := R15 << 2
00010150: R19 := mem[R4 + #623, el]:u32
00010157: R15 := pad:64[7:4[R0]]
0001015f: #626 := R5 << 2
00010165: R5 := mem[R4 + #626, el]:u32
0001016c: R2 := pad:64[8:5[R2]]
00010174: #629 := R20 << 2
0001017a: R20 := mem[R4 + #629, el]:u32
00010181: R0 := pad:64[15:12[R0]]
00010189: #632 := R21 << 2
0001018f: R21 := mem[R3 + #632, el]:u32
00010197: R19 := 31:0[R19] << 0x27
0001019f: #636 := R23 << 2
000101a5: R23 := mem[R4 + #636, el]:u32
000101ad: R5 := 31:0[R5] << 0x22
000101b5: #640 := R18 << 2
000101bb: R18 := mem[R3 + #640, el]:u32
000101c4: R20 := 31:0[R13] | 31:0[R20] << 4
000101cc: #645 := R17 << 2
000101d2: R17 := mem[R3 + #645, el]:u32
000101da: R21 := 31:0[R21] << 0x26
000101e2: #649 := R16 << 2
000101e8: R16 := mem[R4 + #649, el]:u32
000101f1: R5 := 31:0[R5] | 31:0[R23] << 3
000101f9: #654 := R15 << 2
000101ff: R15 := mem[R4 + #654, el]:u32
00010208: R18 := 31:0[R21] | 31:0[R18] << 7
00010210: #659 := R2 << 2
00010216: R13 := mem[R3 + #659, el]:u32
0001021f: R3 := 31:0[R14] | 31:0[R22]
00010227: #664 := R0 << 2
0001022d: R2 := mem[R4 + #664, el]:u32
00010235: R14 := 31:0[R17] << 0x24
0001023e: R0 := 31:0[R5] | 31:0[R20]
00010246: R4 := 31:0[R15] << 0x25
0001024f: R5 := 31:0[R19] | 31:0[R16] << 1
00010258: R3 := 31:0[R3] | 31:0[R18]
00010261: R13 := 31:0[R14] | 31:0[R13] << 5
0001026a: R0 := 31:0[R0] | 31:0[R5]
00010273: R2 := 31:0[R4] | 31:0[R2] << 6
0001027c: R13 := 31:0[R13] | 31:0[R3]
00010285: R2 := 31:0[R2] | 31:0[R0]
0001028d: R13 := 31:0[R13] & 0xFFFFFFF
00010295: R2 := 31:0[R2] & 0xFFFFFFF
0003ad86: goto %00010299

00010299:
000102a1: R16 := pad:32[mem[R6]]
000102a4: R6 := R6 + 1
000102ad: R3 := 31:0[R11] - 31:0[R16]
000102b6: R0 := 31:0[R13] << extend:32[extend:64[31:0[R16]] % 0x20]
000102bf: R13 := 31:0[R13] >> extend:32[extend:64[31:0[R3]] % 0x20]
000102c8: R0 := 31:0[R0] | 31:0[R13]
000102d1: R3 := 31:0[R2] >> extend:32[extend:64[31:0[R3]] % 0x20]
000102d9: R13 := 31:0[R0] & 0xFFFFFFF
000102e1: R5 := 31:0[R0] << 0x2E
000102ea: R18 := 31:0[R9] & 31:0[R0] << 0x12
000102f2: R17 := pad:64[0:0[R0]] << 0x3C
000102fa: R14 := 31:0[R0] << 0x29
00010303: R15 := 31:0[R10] & 31:0[R0] << 4
0001030b: R4 := 31:0[R0] << 0x26
00010313: R5 := 31:0[R5] & 0x8000000
0001031b: R21 := 31:0[R0] << 0x2F
00010324: R5 := 31:0[R5] | 31:0[R18]
0001032d: R15 := 31:0[R15] | 31:0[R17]
00010335: R19 := 31:0[R0] << 0x36
0001033d: R18 := 31:0[R0] << 0x31
00010346: R2 := 31:0[R2] << extend:32[extend:64[31:0[R16]] % 0x20]
0001034e: R4 := 31:0[R4] & 0x1000000
00010357: R2 := 31:0[R2] | 31:0[R3]
0001035f: R16 := 31:0[R0] << 0x2A
00010367: R3 := 31:0[R14] & 0x200000
0001036e: R14 := pad:64[27:1[R0]]
00010377: R4 := 31:0[R4] | 31:0[R3]
0001037f: R23 := 31:0[R16] & 0x40000
00010387: R17 := 31:0[R21] & 0x20000000
00010390: R15 := 31:0[R15] | 31:0[R5]
00010398: R16 := 31:0[R16] & 0x8000000
000103a0: R30 := pad:64[27:0[R0]] << 0x22
000103a7: R22 := pad:64[27:10[R0]]
000103ae: R3 := pad:64[27:2[R0]]
000103b6: R20 := pad:64[27:0[R0]] << 0x21
000103be: R14 := 31:0[R14] & 0x100000
000103c6: R19 := 31:0[R19] & 0x4000000
000103ce: R18 := 31:0[R18] & 0x10000000
000103d7: R5 := 31:0[R15] | 31:0[R4]
000103e0: R14 := 31:0[R14] | 31:0[R23]
000103e9: R19 := 31:0[R19] | 31:0[R16]
000103f0: R23 := pad:64[27:13[R2]]
000103f8: R4 := 31:0[R0] << 0x30
00010400: R30 := 31:0[R30] & 0x20000
00010408: R22 := 31:0[R22] & 0x10000
0001040f: R15 := pad:64[27:4[R2]]
00010418: R18 := 31:0[R18] | 31:0[R17]
00010420: R3 := 31:0[R3] & 0x2000000
00010428: R20 := 31:0[R20] & 0x1000000
00010430: R24 := 31:0[R0] << 0x2B
00010439: R16 := 31:0[R3] | 31:0[R20]
00010442: R17 := 31:0[R19] | 31:0[R18]
0001044a: R3 := 31:0[R4] & 0x200000
00010453: R5 := 31:0[R5] | 31:0[R14]
0001045b: R25 := 31:0[R2] << 0x26
00010464: R14 := 31:0[R30] | 31:0[R22]
0001046c: R24 := 31:0[R24] & 0x100000
00010474: R22 := 31:0[R23] & 0x2000
0001047c: R30 := pad:64[27:0[R0]] << 0x23
00010483: R23 := pad:64[27:1[R2]]
0001048a: R4 := pad:64[27:6[R0]]
00010492: R15 := 31:0[R15] & 0x1000
0001049b: R15 := 31:0[R22] | 31:0[R15]
000104a3: R18 := 31:0[R23] & 0x400
000104aa: R20 := pad:64[27:14[R2]]
000104b1: R19 := pad:64[27:5[R2]]
000104ba: R5 := 31:0[R5] | 31:0[R14]
000104c3: R17 := 31:0[R17] | 31:0[R16]
000104cb: R4 := 31:0[R4] & 0x40000
000104d4: R16 := 31:0[R3] | 31:0[R24]
000104dc: R14 := 31:0[R25] & 0x800
000104e4: R30 := 31:0[R30] & 0x80000
000104eb: R0 := pad:64[27:4[R0]]
000104f4: R14 := 31:0[R14] | 31:0[R18]
000104fd: R17 := 31:0[R17] | 31:0[R16]
00010504: R18 := pad:64[27:3[R2]]
0001050d: R5 := 31:0[R5] | 31:0[R15]
00010515: R22 := 31:0[R20] & 0x200
0001051d: R15 := 31:0[R19] & 0x20
00010525: R3 := 31:0[R21] & 0x20000
0001052c: R19 := pad:64[27:10[R2]]
00010535: R30 := 31:0[R30] | 31:0[R4]
0001053d: R0 := 31:0[R0] & 0x10000
00010544: R16 := pad:64[27:2[R2]]
0001054c: R24 := 31:0[R2] << 0x28
00010555: R4 := 31:0[R17] | 31:0[R30]
0001055e: R5 := 31:0[R5] | 31:0[R14]
00010567: R22 := 31:0[R15] | 31:0[R22]
0001056f: R21 := 31:0[R18] & 8
00010576: R15 := pad:64[27:18[R2]]
0001057d: R23 := pad:64[3:2[R2]]
00010586: R3 := 31:0[R0] | 31:0[R3]
0001058d: R14 := pad:64[27:9[R2]]
00010595: R0 := 31:0[R24] & 0x1000
0001059d: R19 := 31:0[R19] & 0x10
000105a5: R16 := 31:0[R16] & 0x2000
000105ae: R5 := 31:0[R5] | 31:0[R22]
000105b7: R19 := 31:0[R19] | 31:0[R21]
000105bf: R17 := 31:0[R23] & 2
000105c8: R3 := 31:0[R4] | 31:0[R3]
000105d1: R16 := 31:0[R16] | 31:0[R0]
000105d8: R30 := pad:64[27:7[R2]]
000105e0: R0 := 31:0[R2] << 0x27
000105e9: R20 := 31:0[R20] & 31:0[R8]
000105f1: R15 := 31:0[R15] & 4
000105f9: R14 := 31:0[R14] & 0x400
00010602: R4 := 31:0[R5] | 31:0[R19]
0001060b: R15 := 31:0[R15] | 31:0[R17]
00010613: R19 := 31:0[R2] & 0x100
0001061a: R17 := pad:64[0:0[R2]]
00010623: R14 := 31:0[R14] | 31:0[R20]
0001062b: R5 := 31:0[R0] & 0x100
00010634: R3 := 31:0[R3] | 31:0[R16]
0001063c: R0 := 31:0[R30] & 0x20
00010645: R5 := 31:0[R5] | 31:0[R0]
0001064e: R4 := 31:0[R4] | 31:0[R15]
00010657: R3 := 31:0[R3] | 31:0[R14]
0001065e: R0 := pad:64[27:21[R2]]
00010666: R14 := pad:64[0:0[R2]] << 0x22
0001066f: R18 := 31:0[R18] & 31:0[R7]
00010678: R15 := 31:0[R17] | 31:0[R19]
00010681: R3 := 31:0[R3] | 31:0[R5]
0001068a: R4 := 31:0[R4] | 31:0[R15]
00010692: R5 := 31:0[R2] & 0x200
0001069b: R18 := 31:0[R14] | 31:0[R18]
000106a3: R0 := 31:0[R0] & 2
000106ac: mem := mem with [R1, el]:u32 <- 31:0[R4]
000106af: R1 := R1 + 8
000106b8: R3 := 31:0[R3] | 31:0[R18]
000106c1: R0 := 31:0[R0] | 31:0[R5]
000106c9: R2 := 31:0[R2] & 0xFFFFFFF
000106d2: R3 := 31:0[R3] | 31:0[R0]
000106da: mem := mem with [R1 - 4, el]:u32 <- 31:0[R3]
000106e2: #1872 := 1 + ~R1 + R12
000106e6: NF := 63:63[#1872]
000106e9: VF := 63:63[R12] & 63:63[~R1] & ~63:63[#1872] | ~63:63[R12] &
          ~63:63[~R1] & 63:63[#1872]
000106ec: ZF := #1872 = 0
000106ef: CF := 63:63[R12] & 63:63[~R1] | 63:63[~R1] & ~63:63[#1872] |
          63:63[R12] & ~63:63[#1872]
000106fc: #1877 := ~ZF <> 0
000106f6: when #1877 goto %00010299
0003ad87: goto %000106ff

000106ff:
00010706: R19 := mem[R31 + 0x10, el]:u64
0001070a: R20 := mem[R31 + 0x18, el]:u64
00010713: R21 := mem[R31 + 0x20, el]:u64
00010717: R22 := mem[R31 + 0x28, el]:u64
00010720: R23 := mem[R31 + 0x30, el]:u64
00010724: R24 := mem[R31 + 0x38, el]:u64
0001072c: R25 := mem[R31 + 0x40, el]:u64
00010736: R29 := mem[R31, el]:u64
0001073a: R30 := mem[R31 + 8, el]:u64
0001073d: R31 := R31 + 0x50
00010742: call R30 with noreturn

0003ad88: sub direct_request(direct_request_result)
0003b3a1: direct_request_result :: out u32 = low:32[R0]

00022498:
0002249f: #14611 := R31 - 0x110
000224a4: mem := mem with [#14611, el]:u64 <- R29
000224a9: mem := mem with [#14611 + 8, el]:u64 <- R30
000224ad: R31 := #14611
000224b3: R2 := 0x27000
000224ba: R29 := R31
000224c2: #14616 := R31 + 0x30
000224c7: mem := mem with [#14616, el]:u64 <- R23
000224cc: mem := mem with [#14616 + 8, el]:u64 <- R24
000224d2: R24 := 0x27000
000224da: R3 := mem[R24 + 0xF78, el]:u64
000224e2: #14622 := R31 + 0x10
000224e7: mem := mem with [#14622, el]:u64 <- R19
000224ec: mem := mem with [#14622 + 8, el]:u64 <- R20
000224f4: R19 := R1
000224fc: R2 := mem[R2 + 0xFB8, el]:u64
00022504: #14631 := R31 + 0x20
00022509: mem := mem with [#14631, el]:u64 <- R21
0002250e: mem := mem with [#14631 + 8, el]:u64 <- R22
00022517: R1 := mem[R3, el]:u32
0002251f: R3 := mem[R2, el]:u64
00022527: mem := mem with [R31 + 0x108, el]:u64 <- R3
0002252d: R3 := 0
00022536: R2 := mem[R0, el]:u32
0002253e: R0 := mem[R0 + 0x10, el]:u64
00022546: #14640 := R31 + 0x40
0002254b: mem := mem with [#14640, el]:u64 <- R25
00022550: mem := mem with [#14640 + 8, el]:u64 <- R26
00022558: #14645 := R31 + 0x50
0002255d: mem := mem with [#14645, el]:u64 <- R27
00022562: mem := mem with [#14645 + 8, el]:u64 <- R28
0002256a: mem := mem with [R31 + 0x7C, el]:u32 <- 31:0[R2]
00022572: mem := mem with [R31 + 0xB0, el]:u64 <- R0
0002257a: mem := mem with [R31 + 0xD4, el]:u32 <- 31:0[R2]
00022586: #14647 := ~31:0[R1] = 0
00022580: when #14647 goto %0002257e
0003ad89: goto %000225a4

0002257e:
0002258c: R1 := 0x13000
00022593: R0 := 1
0002259a: R1 := R1 + 0x578
0002259f: R30 := 0xF250
000225a1: call @__printf_chk with return %000225a3

000225a3:
000225a6: goto %000225a4

000225a4:
000225aa: R30 := 0xED84
000225ac: call @__errno_location with return %000225ae

000225ae:
000225b5: R20 := mem[R19 + 0x20, el]:u32
000225bd: R1 := mem[R19 + 0x40, el]:u64
000225c5: mem := mem with [R0, el]:u32 <- 0
000225cc: R28 := R31 + 0xD0
000225d3: R25 := 0xFFFFFFFFFFFFFFFF
000225db: mem := mem with [R31 + 0xB8, el]:u64 <- R0
000225e3: R0 := R28
000225e8: R30 := 0xEDA4
000225ea: call @so_resolv with return %000225ec

000225ec:
000225f6: #14653 := 31:0[R0] = 0
000225f0: when #14653 goto %000225ee
0003ad8a: goto %000280ef

000280ef:
000280f6: R0 := mem[R31 + 0xD0, el]:u32
000280ff: R1 := 31:0[R20]
00028104: R30 := 0xEDB4
00028106: call @so_connect with return %00028108

00028108:
0002810e: mem := mem with [R31 + 0xD0, el]:u32 <- 31:0[R0]
00028117: R25 := 31:0[R0]
00028122: #17632 := ~~31:31[R0]
0002811c: when #17632 goto %000225ee
0003ad8b: goto %00028125

000225ee:
000225fe: R22 := mem[R31 + 0xB8, el]:u64
00022604: R1 := 0xFFFFFFFFFFFFFFFF
0002260c: R20 := mem[R19 + 0x40, el]:u64
00022614: mem := mem with [R31 + 0x80, el]:u64 <- R1
0002261d: R0 := mem[R22, el]:u32
00022626: R21 := mem[R19 + 0x20, el]:u32
0002262b: R30 := 0xF270
0002262d: call @strerror with return %0002262f

0002262f:
00022635: R5 := R0
0002263e: R4 := 31:0[R21]
00022646: R3 := R20
0002264d: R1 := 1
00022654: R0 := 4
0002265a: R2 := 0x13000
00022661: R2 := R2 + 0x598
00022666: R30 := 0xF290
00022668: call @__syslog_chk with return %0002266a

0002266a:
00022671: R0 := mem[R22, el]:u32
00022679: R19 := mem[R19 + 0x48, el]:u64
0002267e: R30 := 0xF29C
00022680: call @strerror with return %00022682

00022682:
00022688: R1 := R0
00022690: R0 := R19
00022695: R30 := 0xF2A8
00022698: call @gen_502_page with return %000271f4

000271f4:
000271fa: R19 := R0
000271ff: R30 := 0xF2B0
00027201: call @strlen with return %00027203

00027203:
00027209: R2 := R0
00027212: R0 := mem[R31 + 0x7C, el]:u32
0002721a: R1 := R19
0002721f: R30 := 0xF2C0
00027221: call @write with return %00027223

00027223:
00027229: R0 := R19
0002722e: R30 := 0xF2C8
00027230: call @free with return %00027232

00027232:
00027235: goto %00027233

00028125:
00028129: R0 := 0x27000
00028130: R1 := 1
00028138: R0 := mem[R0 + 0xF80, el]:u64
00028140: R0 := mem[R0, el]:u64
00028145: R30 := 0xEDD4
00028148: call @dup_auth with return %00028559

00028559:
0002855f: R1 := R0
00028567: R0 := mem[R19 + 0x40, el]:u64
0002856f: mem := mem with [R31 + 0xA0, el]:u64 <- R1
0002857a: #17816 := R0 = 0
00028574: when #17816 goto %00027a22
0003ad8c: goto %0002857d

00027a22:
00027a28: R0 := mem[R19 + 0x48, el]:u64
00027a2e: R1 := 0x13000
00027a35: R1 := R1 + 0x5C0
00027a3a: R30 := 0xF488
00027a3c: call @gen_502_page with return %00027a3e

00027a3e:
00027a44: R19 := R0
00027a49: R30 := 0xF490
00027a4b: call @strlen with return %00027a4d

00027a4d:
00027a53: R2 := R0
00027a5c: R0 := mem[R31 + 0x7C, el]:u32
00027a64: R1 := R19
00027a69: R30 := 0xF4A0
00027a6b: call @write with return %00027a6d

00027a6d:
00027a73: R0 := R19
00027a78: R30 := 0xF4A8
00027a7a: call @free with return %00027a7c

00027a7c:
00027a82: R0 := mem[R31 + 0xA0, el]:u64
00027a8e: #17464 := R0 = 0
00027a88: when #17464 goto %00027a86
0003ad8d: goto %00027aa2

00027a86:
00027a94: R0 := 0xFFFFFFFFFFFFFFFF
00027a9c: mem := mem with [R31 + 0x80, el]:u64 <- R0
00027aa0: goto %00027233

00027aa2:
00027aa6: R1 := 0xFFFFFFFFFFFFFFFF
00027aae: mem := mem with [R31 + 0x80, el]:u64 <- R1
00027ab3: R30 := 0xF4BC
00027ab5: call @free with return %00027ab7

00027ab7:
00027ab9: goto %00027233

0002857d:
00028580: R30 := 0xEDE8
00028582: call @strdup with return %00028584

00028584:
0002858a: R23 := R0
00028593: R1 := mem[R19 + 0x20, el]:u32
0002859b: R0 := R19
000285a3: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R1]
000285a8: R30 := 0xEDFC
000285aa: call @dup_rr_data with return %000285ac

000285ac:
000285b2: R19 := R0
000285b8: R0 := 0x13000
000285bf: R0 := R0 + 0x5D8
000285c7: mem := mem with [R31 + 0x98, el]:u64 <- R0
000285ce: R0 := R31 + 0xD4
000285d6: mem := mem with [R31 + 0x68, el]:u64 <- R0
000285dd: R0 := R31 + 0xE8
000285e5: mem := mem with [R31 + 0x70, el]:u64 <- R0
000285ec: R0 := R31 + 0xD8
000285f4: mem := mem with [R31 + 0x60, el]:u64 <- R0
000285fb: R0 := R31 + 0xC8
00028603: mem := mem with [R31 + 0x80, el]:u64 <- 0
0002860b: mem := mem with [R31 + 0xA8, el]:u64 <- R0
00028613: mem := mem with [R31 + 0xD8, el]:u64 <- R19
0003ad8e: goto %000276bc

000276bc:
000276c2: R30 := 0xEE38
000276c4: call @new_rr_data with return %000276c6

000276c6:
000276ca: R26 := 0x12000
000276d2: R21 := R0
000276d9: R0 := R26 + 0xD80
000276e1: R22 := mem[R31 + 0x70, el]:u64
000276e9: mem := mem with [R31 + 0x88, el]:u64 <- R0
000276f1: R0 := mem[R31 + 0x68, el]:u64
000276f7: R20 := 0
000276fe: R27 := 0
00027706: mem := mem with [R31 + 0xE0, el]:u64 <- R21
0002770e: mem := mem with [R31 + 0xE8, el]:u64 <- R0
00027716: #17369 := R31 + 0xF0
0002771b: mem := mem with [#17369, el]:u64 <- R28
00027720: mem := mem with [#17369 + 8, el]:u64 <- R28
00027728: mem := mem with [R31 + 0x100, el]:u64 <- R0
0003ad8f: goto %000272fe

000272fe:
00027307: R0 := mem[R31 + 0x60, el]:u64
00027310: R25 := 31:0[R20]
00027318: #17245 := R20 << 3
0002731d: R26 := mem[R0 + #17245, el]:u64
00027325: R0 := mem[R24 + 0xF78, el]:u64
0002732e: R1 := mem[R26 + 0x1C, el]:u32
00027337: R2 := mem[R0, el]:u32
00027343: #17249 := 31:0[R1] = 0
0002733d: when #17249 goto %0002733b
0003ad90: goto %00028028

00028028:
0002802e: R0 := mem[R22, el]:u64
00028037: R5 := mem[R0, el]:u32
00028043: #17606 := ~31:0[R2] = 0
0002803d: when #17606 goto %0002803b
0003ad91: goto %000280b7

0002803b:
0002804c: R3 := mem[R31 + 0x7C, el]:u32
00028054: R2 := extend:64[31:0[R20]] + 1
0002805d: R4 := mem[R31 + 0xD0, el]:u32
00028064: R0 := 1
0002806c: R1 := mem[R31 + 0x98, el]:u64
00028074: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R5]
00028079: R30 := 0xF0E8
0002807b: call @__printf_chk with return %0002807d

0002807d:
00028084: R5 := mem[R31 + 0x94, el]:u32
0002808b: R0 := 1
00028093: R1 := mem[R31 + 0x88, el]:u64
0002809c: R2 := 31:0[R5]
000280a4: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R5]
000280a9: R30 := 0xF100
000280ab: call @__printf_chk with return %000280ad

000280ad:
000280b4: R5 := mem[R31 + 0x94, el]:u32
000280b9: goto %000280b7

000280b7:
000280c1: R0 := 31:0[R5]
000280c9: R1 := R26
000280ce: R30 := 0xEE9C
000280d0: call @headers_recv with return %000280d2

000280d2:
000280db: #17622 := 31:0[R0] = 0
000280d5: when #17622 goto %00027589
0003ad92: goto %000280de

000280de:
000280e4: R0 := mem[R24 + 0xF78, el]:u64
000280ed: R2 := mem[R0, el]:u32
0003ad93: goto %0002733b

0002733b:
0002734b: R25 := 31:0[R25] ^ 1
00027352: #17272 := R23
00027356: NF := 63:63[#17272]
00027359: VF := 63:63[R23] & ~63:63[#17272]
0002735c: ZF := #17272 = 0
0002735f: CF := 63:63[R23] | ~63:63[#17272] | 63:63[R23] & ~63:63[#17272]
00027379: #17274 := ~ZF <> 0
0002737a: goto %00027371

00027371:
00027373: when #17274 goto %0002736a
00027374: goto %0002736e

0002736e:
0002736f: R25 := 0
00027376: goto %00027372

0002736a:
0002736b: R25 := 31:0[R25]
00027375: goto %00027372

00027372:
00027387: #17275 := 31:0[R25] = 0
00027381: when #17275 goto %0002737f
0003ad94: goto %00027fb2

00027fb2:
00027fb8: R1 := mem[R19 + 0x40, el]:u64
00027fc3: #17590 := R1 = 0
00027fbd: when #17590 goto %0002737f
0003ad95: goto %00027fc6

00027fc6:
00027fcc: R0 := R23
00027fd4: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R2]
00027fd9: R30 := 0xEECC
00027fdb: call @strcasecmp with return %00027fdd

00027fdd:
00027fe4: R2 := mem[R31 + 0x94, el]:u32
00027fef: #17595 := ~31:0[R0] = 0
00027fe9: when #17595 goto %00027991
0003ad96: goto %00027ff2

00027ff2:
00027ff9: R0 := mem[R19 + 0x20, el]:u32
00028002: R1 := mem[R31 + 0x90, el]:u32
0002800a: #17601 := 1 + extend:64[~31:0[R1]] + extend:64[31:0[R0]]
0002800e: NF := 63:63[#17601]
00028011: VF := 31:31[~31:0[R1]] & 31:31[R0] & ~63:63[#17601] |
          ~31:31[~31:0[R1]] & ~31:31[R0] & 63:63[#17601]
00028014: ZF := #17601 = 0
00028017: CF := 31:31[~31:0[R1]] & 31:31[R0] | 31:31[R0] & ~63:63[#17601] |
          31:31[~31:0[R1]] & ~63:63[#17601]
00028025: #17603 := ~ZF <> 0
0002801f: when #17603 goto %00027991
0003ad97: goto %0002737f

00027991:
0002799b: #17432 := ~31:0[R2] = 0
00027995: when #17432 goto %00027993
0003ad98: goto %000279c1

00027993:
000279a3: R2 := mem[R19 + 0x30, el]:u64
000279a9: R1 := 0x13000
000279b0: R0 := 1
000279b7: R1 := R1 + 0x600
000279bc: R30 := 0xF4F0
000279be: call @__printf_chk with return %000279c0

000279c0:
000279c3: goto %000279c1

000279c1:
000279ca: R0 := R19
000279cf: R30 := 0xF450
000279d1: call @dup_rr_data with return %000279d3

000279d3:
000279d9: R1 := R0
000279e1: R0 := R19
000279e9: mem := mem with [R31 + 0x80, el]:u64 <- R1
000279ee: R30 := 0xF460
000279f0: call @free_rr_data with return %000279f2

000279f2:
000279f8: R0 := R21
000279fd: R30 := 0xF468
000279ff: call @free_rr_data with return %00027a01

00027a01:
00027a07: R0 := mem[R31 + 0xA0, el]:u64
00027a10: R25 := mem[R31 + 0xD0, el]:u32
00027a1b: #17448 := ~R0 = 0
00027a15: when #17448 goto %000275f7
0003ad99: goto %00027a1e

00027a1e:
00027a20: goto %000275e8

0002737f:
00027393: #17276 := ~31:0[R2] = 0
0002738d: when #17276 goto %0002738b
0003ad9a: goto %00027fa6

0002738b:
0002739b: R0 := mem[R26 + 8, el]:u64
000273a0: R30 := 0xEF98
000273a2: call @hlist_dump with return %000273a4

000273a4:
000273ae: #17278 := R20 = 0
000273a8: when #17278 goto %000273a6
0003ad9b: goto %00027f39

00027fa6:
00027faf: #17588 := ~R20 = 0
00027fa9: when #17588 goto %00027f39
0003ad9c: goto %000273a6

00027f39:
00027f40: R0 := mem[R21 + 0x10, el]:u32
00027f46: R25 := 0x12000
00027f4c: R27 := 0x12000
00027f53: #17583 := 0xFFFFFFFFFFFFFE6F + extend:64[31:0[R0]]
00027f57: NF := 63:63[#17583]
00027f5a: VF := 31:31[R0] & ~63:63[#17583]
00027f5d: ZF := #17583 = 0
00027f60: CF := 31:31[R0] | 31:31[R0] & ~63:63[#17583] | ~63:63[#17583]
00027f6b: R0 := mem[R21 + 8, el]:u64
00027f77: #17586 := ZF
00027f71: when #17586 goto %00027f6f
0003ad9d: goto %00027c89

00027f6f:
00027f7d: R2 := 0x12000
00027f83: R1 := 0x13000
00027f8a: R2 := R2 + 0xA80
00027f91: R1 := R1 + 0x460
00027f96: R30 := 0xF2E0
00027f98: call @hlist_subcmp_all with return %00027f9a

00027f9a:
00027fa3: #17587 := ~31:0[R0] = 0
00027f9d: when #17587 goto %00027e42
0003ad9e: goto %00027c76

00027e42:
00027e48: R0 := mem[R21 + 8, el]:u64
00027e4f: R2 := R27 + 0x950
00027e56: R1 := R25 + 0x958
00027e5b: R30 := 0xF370
00027e5d: call @hlist_subcmp with return %00027e5f

00027e5f:
00027e66: R4 := mem[R31 + 0xD0, el]:u32
00027e71: #17560 := 31:0[R0] = 0
00027e6b: when #17560 goto %00027c0f
0003ad9f: goto %00027e74

00027e74:
00027e7a: R0 := mem[R24 + 0xF78, el]:u64
00027e83: R0 := mem[R0, el]:u32
00027e8e: #17563 := ~31:0[R0] = 0
00027e88: when #17563 goto %00027abb
0003ada0: goto %00027ae8

00027abb:
00027abf: R1 := 0x13000
00027ac6: R0 := 1
00027acd: R1 := R1 + 0x648
00027ad5: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R4]
00027ada: R30 := 0xF4D4
00027adc: call @__printf_chk with return %00027ade

00027ade:
00027ae5: R4 := mem[R31 + 0x94, el]:u32
00027aea: goto %00027ae8

00027ae8:
00027af2: R0 := 31:0[R4]
00027af7: R30 := 0xF38C
00027af9: call @close with return %00027afb

00027afb:
00027b02: R2 := mem[R19 + 0x20, el]:u32
00027b0a: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R2]
00027b12: R2 := mem[R31 + 0xB8, el]:u64
00027b1a: R1 := mem[R19 + 0x40, el]:u64
00027b22: R0 := mem[R31 + 0xA8, el]:u64
00027b2a: mem := mem with [R2, el]:u32 <- 0
00027b2f: R30 := 0xF3A8
00027b31: call @so_resolv with return %00027b33

00027b33:
00027b3a: R2 := mem[R31 + 0x94, el]:u32
00027b46: #17474 := 31:0[R0] = 0
00027b40: when #17474 goto %00027b3e
0003ada1: goto %00027bcc

00027b3e:
00027b4d: R0 := 0xFFFFFFFFFFFFFFFF
00027b56: R25 := 31:0[R0]
00027b5e: mem := mem with [R31 + 0xD0, el]:u32 <- 31:0[R0]
0003ada2: goto %00027b60

00027bcc:
00027bd3: R0 := mem[R31 + 0xC8, el]:u32
00027bdc: R1 := 31:0[R2]
00027be1: R30 := 0xF3BC
00027be3: call @so_connect with return %00027be5

00027be5:
00027beb: mem := mem with [R31 + 0xD0, el]:u32 <- 31:0[R0]
00027bf4: R4 := 31:0[R0]
00027c00: #17499 := ~~31:31[R0]
00027bfa: when #17499 goto %00027bf8
0003ada3: goto %00027c0f

00027bf8:
00027c09: R25 := 31:0[R0]
00027c0d: goto %00027b60

00027b60:
00027b66: R0 := mem[R19 + 0x48, el]:u64
00027b6c: R1 := 0x13000
00027b73: R1 := R1 + 0x668
00027b79: R2 := 0xFFFFFFFFFFFFFFFF
00027b81: mem := mem with [R31 + 0x80, el]:u64 <- R2
00027b86: R30 := 0xF580
00027b88: call @gen_502_page with return %00027b8a

00027b8a:
00027b90: R19 := R0
00027b95: R30 := 0xF588
00027b97: call @strlen with return %00027b99

00027b99:
00027b9f: R2 := R0
00027ba8: R0 := mem[R31 + 0x7C, el]:u32
00027bb0: R1 := R19
00027bb5: R30 := 0xF598
00027bb7: call @write with return %00027bb9

00027bb9:
00027bbf: R0 := R19
00027bc4: R30 := 0xF5A0
00027bc6: call @free with return %00027bc8

00027bc8:
00027bca: goto %000275c8

00027c0f:
00027c15: R3 := mem[R31 + 0xA0, el]:u64
00027c1e: R0 := 31:0[R4]
00027c26: R2 := R21
00027c2e: R1 := R19
00027c36: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R4]
00027c3b: R30 := 0xF3E0
00027c3d: call @www_authenticate with return %00027c3f

00027c3f:
00027c46: R4 := mem[R31 + 0x94, el]:u32
00027c51: #17514 := 31:0[R0] = 0
00027c4b: when #17514 goto %00027888
0003ada4: goto %00027c54

00027888:
0002788e: R24 := mem[R24 + 0xF78, el]:u64
00027897: R25 := 31:0[R4]
000278a0: R0 := mem[R24, el]:u32
000278ac: #17407 := ~31:0[R0] = 0
000278a6: when #17407 goto %000278a4
0003ada5: goto %000278ca

000278a4:
000278b2: R1 := 0x13000
000278b9: R0 := 1
000278c0: R1 := R1 + 0x690
000278c5: R30 := 0xF5B4
000278c7: call @__printf_chk with return %000278c9

000278c9:
000278cc: goto %000278ca

000278ca:
000278d3: R2 := mem[R21 + 0x60, el]:u64
000278d9: R3 := 0xFFFFFFFFFFFFFFFF
000278e1: R0 := mem[R21 + 0x48, el]:u64
000278e8: #17410 := R2
000278ec: NF := 63:63[#17410]
000278ef: VF := 63:63[R2] & ~63:63[#17410]
000278f2: ZF := #17410 = 0
000278f5: CF := 63:63[R2] | ~63:63[#17410] | 63:63[R2] & ~63:63[#17410]
000278fd: R1 := 0x13000
00027904: R1 := R1 + 0x558
0002791a: #17412 := ZF
0002791b: goto %00027912

00027912:
00027914: when #17412 goto %0002790c
00027915: goto %0002790f

0002790f:
00027910: R1 := R2
00027917: goto %00027913

0002790c:
0002790d: R1 := R1
00027916: goto %00027913

00027913:
00027924: mem := mem with [R31 + 0x80, el]:u64 <- R3
00027929: R30 := 0xF558
0002792b: call @gen_502_page with return %0002792d

0002792d:
00027930: goto %0002792e

00027c54:
00027c5b: R0 := mem[R21 + 0x10, el]:u32
00027c62: #17516 := 0xFFFFFFFFFFFFFE6F + extend:64[31:0[R0]]
00027c66: NF := 63:63[#17516]
00027c69: VF := 31:31[R0] & ~63:63[#17516]
00027c6c: ZF := #17516 = 0
00027c6f: CF := 31:31[R0] | 31:31[R0] & ~63:63[#17516] | ~63:63[#17516]
00027c7e: #17518 := ~ZF <> 0
00027c78: when #17518 goto %00027c76
0003ada6: goto %00027e91

00027e91:
00027e95: R0 := 0xFFFFFFFFFFFFFFFF
00027e9e: R2 := mem[R19 + 0x20, el]:u32
00027ea6: mem := mem with [R31 + 0x80, el]:u64 <- R0
00027eaf: R25 := 31:0[R4]
00027eb7: R1 := mem[R19 + 0x40, el]:u64
00027ebf: R0 := mem[R21 + 0x48, el]:u64
00027ec4: R30 := 0xF410
00027ec6: call @gen_401_page with return %0002792e

0002792e:
00027937: R20 := R0
0002793c: R30 := 0xF418
0002793e: call @strlen with return %00027940

00027940:
00027946: R2 := R0
0002794f: R0 := mem[R31 + 0x7C, el]:u32
00027957: R1 := R20
0002795c: R30 := 0xF428
0002795e: call @write with return %00027960

00027960:
00027966: R0 := R20
0002796b: R30 := 0xF430
0002796d: call @free with return %0002796f

0002796f:
00027975: R0 := R19
0002797a: R30 := 0xF438
0002797c: call @free_rr_data with return %0002797e

0002797e:
00027984: R0 := R21
00027989: R30 := 0xF440
0002798b: call @free_rr_data with return %0002798d

0002798d:
0002798f: goto %000275c8

00027c76:
00027c86: R0 := mem[R21 + 8, el]:u64
00027c8b: goto %00027c89

00027c89:
00027c91: R25 := R25 + 0x958
00027c98: R2 := R27 + 0x950
00027ca0: R1 := R25
00027ca5: R30 := 0xEFC4
00027ca7: call @hlist_subcmp with return %00027ca9

00027ca9:
00027cb3: #17523 := ~31:0[R0] = 0
00027cad: when #17523 goto %00027cab
0003ada7: goto %00027d38

00027d38:
00027d3e: R1 := R21
00027d46: R0 := R19
00027d4b: R30 := 0xEFD4
00027d4d: call @http_has_body with return %00027d4f

00027d4f:
00027d54: #17537 := 1 + R0
00027d58: NF := 63:63[#17537]
00027d5b: VF := ~63:63[R0] & 63:63[#17537]
00027d5e: ZF := #17537 = 0
00027d61: CF := 63:63[R0] & ~63:63[#17537]
00027d6f: #17539 := ~ZF <> 0
00027d69: when #17539 goto %00027d67
0003ada8: goto %00027cab

00027d67:
00027d77: R0 := mem[R21 + 8, el]:u64
00027d7d: R27 := 0x12000
00027d84: R27 := R27 + 0xE30
00027d8b: R3 := 1
00027d93: R2 := R27
00027d99: R1 := 0x12000
00027da0: R1 := R1 + 0xE40
00027da5: R30 := 0xF30C
00027da7: call @hlist_mod with return %00027da9

00027da9:
00027daf: mem := mem with [R21 + 8, el]:u64 <- R0
00027db7: R2 := R27
00027dbf: R1 := R25
00027dc6: R3 := 1
00027dcb: R30 := 0xF320
00027dcd: call @hlist_mod with return %00027dcf

00027dcf:
00027dd4: R27 := 1
00027ddc: R1 := mem[R24 + 0xF78, el]:u64
00027de4: mem := mem with [R21 + 8, el]:u64 <- R0
00027ded: R2 := mem[R1, el]:u32
00027df1: goto %000274db

00027cab:
00027cbb: R0 := mem[R21 + 8, el]:u64
00027cc2: R2 := R27 + 0x950
00027cc8: R1 := 0x12000
00027ccf: R3 := 1
00027cd6: R1 := R1 + 0xE40
00027cdd: R27 := 0
00027ce2: R30 := 0xEFF8
00027ce4: call @hlist_mod with return %00027ce6

00027ce6:
00027cec: mem := mem with [R21 + 8, el]:u64 <- R0
00027cf4: R1 := mem[R24 + 0xF78, el]:u64
00027cfb: R0 := R31 + 0xF8
00027d01: R2 := 0xFFFFFFFFFFFFFFFF
00027d09: mem := mem with [R31 + 0x80, el]:u64 <- R2
00027d12: R2 := mem[R1, el]:u32
00027d1a: #17528 := R20 << 3
00027d1f: R0 := mem[R0 + #17528, el]:u64
00027d28: R25 := mem[R0, el]:u32
00027d33: #17530 := 31:0[R2] = 0
00027d2d: when #17530 goto %0002772c
0003ada9: goto %00027d36

00027d36:
0003adaa: goto %00027504

000273a6:
000273b7: R0 := mem[R19, el]:u32
000273c3: #17280 := ~31:0[R0] = 0
000273bd: when #17280 goto %000273bb
0003adab: goto %00027f28

000273bb:
000273cb: R0 := mem[R31 + 0xB0, el]:u64
000273d2: R0 := R0 >> 0x20
000273d7: R30 := 0xF114
000273d9: call @inet_ntoa with return %000273db

000273db:
000273e2: R4 := mem[R19 + 0x28, el]:u64
000273e6: R5 := mem[R19 + 0x30, el]:u64
000273ee: R3 := R0
000273f4: R2 := 0x12000
000273fb: R0 := 7
00027402: R2 := R2 + 0xDC0
00027409: R1 := 1
0002740e: R30 := 0xF130
00027410: call @__syslog_chk with return %00027412

00027412:
00027418: R0 := mem[R19 + 0x38, el]:u64
00027424: #17288 := R0 = 0
0002741e: when #17288 goto %0002741c
0003adac: goto %00027eee

00027eee:
00027ef4: R1 := mem[R19 + 0x30, el]:u64
00027f00: #17575 := R1 = 0
00027efa: when #17575 goto %00027ef8
0003adad: goto %00027f11

00027f11:
00027f17: R0 := R1
00027f1c: R30 := 0xF148
00027f1e: call @free with return %00027f20

00027f20:
00027f26: R0 := mem[R19 + 0x38, el]:u64
0003adae: goto %00027ef8

00027ef8:
00027f05: R30 := 0xF150
00027f07: call @strdup with return %00027f09

00027f09:
00027f0f: mem := mem with [R19 + 0x30, el]:u64 <- R0
0003adaf: goto %0002741c

0002741c:
0002742c: R0 := mem[R19 + 8, el]:u64
00027432: R2 := 0x12000
00027439: R2 := R2 + 0xE30
00027440: R3 := 1
00027446: R25 := 0x12000
0002744d: R1 := R25 + 0x958
00027452: R30 := 0xF170
00027454: call @hlist_mod with return %00027456

00027456:
0002745c: mem := mem with [R19 + 8, el]:u64 <- R0
00027462: R1 := 0x12000
00027469: R1 := R1 + 0xB58
0002746e: R30 := 0xF180
00027470: call @hlist_del with return %00027472

00027472:
00027478: mem := mem with [R19 + 8, el]:u64 <- R0
00027480: R2 := mem[R31 + 0xA0, el]:u64
00027486: R1 := 0x13000
0002748d: R1 := R1 + 0x410
00027492: R30 := 0xF194
00027494: call @http_parse_basic with return %00027496

00027496:
0002749b: #17291 := extend:64[31:0[R0]]
0002749f: NF := 63:63[#17291]
000274a2: VF := 31:31[R0] & ~63:63[#17291]
000274a5: ZF := #17291 = 0
000274a8: CF := 31:31[R0] | 31:31[R0] & ~63:63[#17291] | ~63:63[#17291]
000274b9: #17293 := (NF <> VF | ZF) <> 0
000274b3: when #17293 goto %000274b1
0003adb0: goto %00027ec8

000274b1:
000274c1: R1 := mem[R24 + 0xF78, el]:u64
000274ca: R0 := mem[R19, el]:u32
000274d3: R2 := mem[R1, el]:u32
000274d8: goto %000274d6

00027ec8:
00027ece: R25 := mem[R24 + 0xF78, el]:u64
00027ed7: R2 := mem[R25, el]:u32
00027ee2: #17572 := ~31:0[R2] = 0
00027edc: when #17572 goto %00027df3
0003adb1: goto %00027ee5

00027df3:
00027df9: R0 := mem[R31 + 0xA0, el]:u64
00027dff: R1 := 0x12000
00027e06: R1 := R1 + 0xDD0
00027e0d: R2 := R0 + 0x32
00027e14: R4 := R0 + 0x64
00027e1c: R3 := R0
00027e23: R0 := 1
00027e28: R30 := 0xF354
00027e2a: call @__printf_chk with return %00027e2c

00027e2c:
00027e33: R2 := mem[R25, el]:u32
00027e3c: R0 := mem[R19, el]:u32
00027e40: goto %000274d6

00027ee5:
00027eec: R0 := mem[R19, el]:u32
0003adb2: goto %000274d6

000274d6:
000274e3: #17297 := 31:0[R0] = 0
000274dd: when #17297 goto %000274db
0003adb3: goto %00027750

00027750:
00027756: R1 := mem[R19 + 0x28, el]:u64
0002775c: R0 := 0x12000
00027763: R0 := R0 + 0xF00
0002776b: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R2]
00027770: R30 := 0xF1C4
00027772: call @strcasecmp with return %00027774

00027774:
0002777b: R2 := mem[R31 + 0x94, el]:u32
00027786: #17380 := ~31:0[R0] = 0
00027780: when #17380 goto %000274db
0003adb4: goto %00027789

00027789:
00027793: #17381 := ~31:0[R2] = 0
0002778d: when #17381 goto %0002778b
0003adb5: goto %000277b1

0002778b:
00027799: R1 := 0x13000
000277a0: R0 := 1
000277a7: R1 := R1 + 0x620
000277ac: R30 := 0xF520
000277ae: call @__printf_chk with return %000277b0

000277b0:
000277b3: goto %000277b1

000277b1:
000277b9: R0 := 0xC8
000277c1: mem := mem with [R21, el]:u32 <- 0
000277c9: mem := mem with [R21 + 0x10, el]:u32 <- 31:0[R0]
000277cf: R0 := 0x13000
000277d7: mem := mem with [R21 + 0x1C, el]:u32 <- 0
000277de: R0 := R0 + 0x630
000277e3: R30 := 0xF1EC
000277e5: call @strdup with return %000277e7

000277e7:
000277ed: R1 := R0
000277f5: R0 := mem[R19 + 0x48, el]:u64
000277fd: mem := mem with [R21 + 0x50, el]:u64 <- R1
00027802: R30 := 0xF1FC
00027804: call @strdup with return %00027806

00027806:
0002780c: mem := mem with [R21 + 0x48, el]:u64 <- R0
00027815: R0 := mem[R31 + 0x7C, el]:u32
0002781d: R1 := R21
00027822: R30 := 0xF20C
00027824: call @headers_send with return %00027826

00027826:
0002782d: R25 := mem[R31 + 0xD0, el]:u32
00027839: #17391 := ~31:0[R0] = 0
00027833: when #17391 goto %00027831
0003adb6: goto %00027855

00027831:
00027842: R0 := mem[R31 + 0x7C, el]:u32
0002784b: R1 := 31:0[R25]
00027850: R30 := 0xF50C
00027852: call @tunnel with return %00027854

00027854:
00027857: goto %00027855

00027855:
0002785c: R1 := 0xFFFFFFFFFFFFFFFF
00027864: R0 := R19
0002786c: mem := mem with [R31 + 0x80, el]:u64 <- R1
00027871: R30 := 0xF224
00027873: call @free_rr_data with return %00027875

00027875:
0002787b: R0 := R21
00027880: R30 := 0xF22C
00027882: call @free_rr_data with return %00027884

00027884:
00027886: goto %000275c8

00027f28:
00027f2e: R0 := mem[R24 + 0xF78, el]:u64
00027f37: R2 := mem[R0, el]:u32
0003adb7: goto %000274db

000274db:
000274ea: R0 := R31 + 0xF8
000274f2: #17299 := R20 << 3
000274f7: R0 := mem[R0 + #17299, el]:u64
00027500: R25 := mem[R0, el]:u32
0002750c: #17301 := ~31:0[R2] = 0
00027506: when #17301 goto %00027504
0003adb8: goto %0002772c

00027504:
00027515: R2 := 31:0[R25]
0002751b: R1 := 0x12000
00027522: R0 := 1
00027529: R1 := R1 + 0xFD8
0002752e: R30 := 0xF034
00027530: call @__printf_chk with return %00027532

00027532:
00027538: R1 := R26
00027541: R0 := 31:0[R25]
00027546: R30 := 0xF040
00027548: call @headers_send with return %0002754a

0002754a:
00027554: #17311 := ~31:0[R0] = 0
0002754e: when #17311 goto %0002754c
0003adb9: goto %0002772a

0002772a:
0003adba: goto %00027589

0002772c:
00027732: R1 := R26
0002773b: R0 := 31:0[R25]
00027740: R30 := 0xEF18
00027742: call @headers_send with return %00027744

00027744:
0002774d: #17377 := 31:0[R0] = 0
00027747: when #17377 goto %00027589
0003adbb: goto %0002754c

0002754c:
0002755c: R1 := mem[R22, el]:u64
00027565: R0 := 31:0[R25]
0002756d: R3 := R21
00027575: R2 := R19
0002757e: R1 := mem[R1, el]:u32
00027583: R30 := 0xEF34
00027585: call @http_body_send with return %00027587

00027587:
00027591: #17323 := 31:0[R0] = 0
0002758b: when #17323 goto %00027589
0003adbc: goto %00027606

00027589:
00027597: R1 := 0xFFFFFFFFFFFFFFFF
0002759f: R0 := R19
000275a7: mem := mem with [R31 + 0x80, el]:u64 <- R1
000275ac: R30 := 0xF058
000275ae: call @free_rr_data with return %000275b0

000275b0:
000275b6: R0 := R21
000275bb: R30 := 0xF060
000275bd: call @free_rr_data with return %000275bf

000275bf:
000275c6: R25 := mem[R31 + 0xD0, el]:u32
0003adbd: goto %000275c8

00027606:
0002760b: R22 := R22 + 8
00027616: #17338 := R20 = 0
00027610: when #17338 goto %000272f7
0003adbe: goto %00027619

000272f7:
000272fb: R20 := 1
00027300: goto %000272fe

00027619:
0002761f: R0 := R19
00027624: R30 := 0xEF48
00027626: call @free_rr_data with return %00027628

00027628:
0002762e: R0 := R21
00027633: R30 := 0xEF50
00027635: call @free_rr_data with return %00027637

00027637:
0002763e: R25 := mem[R31 + 0xD0, el]:u32
00027649: #17346 := 31:0[R27] = 0
00027643: when #17346 goto %000275c8
0003adbf: goto %0002764c

0002764c:
00027653: R0 := 31:0[R25]
00027658: R30 := 0xEF60
0002765a: call @so_closed with return %0002765c

0002765c:
00027665: #17350 := ~31:0[R0] = 0
0002765f: when #17350 goto %000275c8
0003adc0: goto %00027668

00027668:
0002766f: R0 := mem[R31 + 0x7C, el]:u32
00027674: R30 := 0xEF6C
00027676: call @so_closed with return %00027678

00027678:
0002767c: R1 := 0x27000
00027684: R1 := mem[R1 + 0xFD0, el]:u64
0002768d: R1 := mem[R1, el]:u32
00027696: R0 := 31:0[R0] | 31:0[R1]
000276a1: #17357 := ~31:0[R0] = 0
0002769b: when #17357 goto %000275c8
0003adc1: goto %000276a4

000275c8:
000275ce: R0 := mem[R31 + 0xA0, el]:u64
000275da: #17332 := R0 = 0
000275d4: when #17332 goto %000275d2
0003adc2: goto %000275f7

000275f7:
000275fd: R0 := mem[R31 + 0xA0, el]:u64
00027602: R30 := 0xF074
00027604: call @free with return %000275d2

000275d2:
000275e5: #17333 := R23 = 0
000275df: when #17333 goto %00027233
0003adc3: goto %000275e8

000275e8:
000275ee: R0 := R23
000275f3: R30 := 0xF080
000275f5: call @free with return %00027233

00027233:
0002723d: R0 := 31:0[R25]
00027242: R30 := 0xF088
00027244: call @close with return %00027246

00027246:
0002724a: R0 := 0x27000
00027252: R0 := mem[R0 + 0xFB8, el]:u64
0002725a: R1 := mem[R31 + 0x108, el]:u64
00027262: R2 := mem[R0, el]:u64
0002726a: #17227 := 1 + ~R2 + R1
0002726e: NF := 63:63[#17227]
00027271: VF := 63:63[R1] & 63:63[~R2] & ~63:63[#17227] | ~63:63[R1] &
          ~63:63[~R2] & 63:63[#17227]
00027274: ZF := #17227 = 0
00027277: CF := 63:63[R1] & 63:63[~R2] | 63:63[~R2] & ~63:63[#17227] |
          63:63[R1] & ~63:63[#17227]
0002727b: R1 := #17227
00027281: R2 := 0
0002728d: #17232 := ~ZF <> 0
00027287: when #17232 goto %00027285
0003adc4: goto %00027298

00027285:
00027292: R30 := 0xF5C4
00027294: call @__stack_chk_fail with return %00027296

00027296:
0003adc5: call @direct_tunnel with noreturn

00027298:
0002729f: R19 := mem[R31 + 0x10, el]:u64
000272a3: R20 := mem[R31 + 0x18, el]:u64
000272ac: R21 := mem[R31 + 0x20, el]:u64
000272b0: R22 := mem[R31 + 0x28, el]:u64
000272b9: R23 := mem[R31 + 0x30, el]:u64
000272bd: R24 := mem[R31 + 0x38, el]:u64
000272c6: R25 := mem[R31 + 0x40, el]:u64
000272ca: R26 := mem[R31 + 0x48, el]:u64
000272d3: R27 := mem[R31 + 0x50, el]:u64
000272d7: R28 := mem[R31 + 0x58, el]:u64
000272df: R0 := mem[R31 + 0x80, el]:u64
000272e9: R29 := mem[R31, el]:u64
000272ed: R30 := mem[R31 + 8, el]:u64
000272f0: R31 := R31 + 0x110
000272f5: call R30 with noreturn

000276a4:
000276a7: R30 := 0xEF84
000276a9: call @new_rr_data with return %000276ab

000276ab:
000276b1: R19 := R0
000276b9: mem := mem with [R31 + 0xD8, el]:u64 <- R0
000276be: goto %000276bc

0003adc6: sub direct_tunnel(direct_tunnel_result)
0003b3a2: direct_tunnel_result :: out u32 = low:32[R0]

0002473d:
00024747: #15859 := R31 - 0x50
0002474c: mem := mem with [#15859, el]:u64 <- R29
00024751: mem := mem with [#15859 + 8, el]:u64 <- R30
00024755: R31 := #15859
0002475d: R1 := R0
00024764: R29 := R31
0002476c: #15867 := R31 + 0x10
00024771: mem := mem with [#15867, el]:u64 <- R19
00024776: mem := mem with [#15867 + 8, el]:u64 <- R20
0002477c: R20 := 0x27000
00024783: R19 := 0
0002478b: R0 := mem[R20 + 0xFB8, el]:u64
00024793: #15873 := R31 + 0x30
00024798: mem := mem with [#15873, el]:u64 <- R23
0002479d: mem := mem with [#15873 + 8, el]:u64 <- R24
000247a6: R23 := mem[R1 + 8, el]:u64
000247aa: R24 := mem[R1 + 0x10, el]:u64
000247b2: R2 := mem[R0, el]:u64
000247ba: mem := mem with [R31 + 0x48, el]:u64 <- R2
000247c0: R2 := 0
000247c8: #15880 := R31 + 0x20
000247cd: mem := mem with [#15880, el]:u64 <- R21
000247d2: mem := mem with [#15880 + 8, el]:u64 <- R22
000247db: R22 := mem[R1, el]:u32
000247e3: R0 := R23
000247e8: R30 := 0xF608
000247ea: call @strdup with return %000247ec

000247ec:
000247f1: R1 := 0x3A
000247f9: R21 := R0
000247fe: R30 := 0xF614
00024800: call @strchr with return %00024802

00024802:
0002480c: #15889 := R0 = 0
00024806: when #15889 goto %00024804
0003adc7: goto %00026677

00026677:
0002667e: mem := mem with [R0] <- 0
00026681: R0 := R0 + 1
00026688: R2 := 0xA
0002668e: R1 := 0
00026693: R30 := 0xF628
00026695: call @strtol with return %00026697

00026697:
0002669e: R19 := 31:0[R0]
0003adc8: goto %00024804

00024804:
00024811: R30 := 0xF630
00024813: call @__errno_location with return %00024815

00024815:
0002481b: R2 := R0
00024823: R1 := R21
0002482a: R0 := R31 + 0x40
00024832: mem := mem with [R2, el]:u32 <- 0
00024837: R30 := 0xF644
00024839: call @so_resolv with return %0002483b

0002483b:
00024845: #15896 := 31:0[R0] = 0
0002483f: when #15896 goto %0002483d
0003adc9: goto %000265cd

0002483d:
0002484c: R19 := 0xFFFFFFFFFFFFFFFF
00024851: goto %0002484f

000265cd:
000265d4: R0 := mem[R31 + 0x40, el]:u32
000265dd: R1 := 31:0[R19]
000265e2: R30 := 0xF654
000265e4: call @so_connect with return %000265e6

000265e6:
000265ed: R19 := 31:0[R0]
000265f4: #16826 := extend:64[31:0[R0]]
000265f8: NF := 63:63[#16826]
000265fb: VF := 31:31[R0] & ~63:63[#16826]
000265fe: ZF := #16826 = 0
00026601: CF := 31:31[R0] | 31:31[R0] & ~63:63[#16826] | ~63:63[#16826]
00026611: #16828 := (NF <> VF | ZF) <> 0
0002660b: when #16828 goto %0002484f
0003adca: goto %00026614

00026614:
00026619: R0 := R24 >> 0x20
0002661e: R30 := 0xF668
00026620: call @inet_ntoa with return %00026622

00026622:
00026628: R4 := R23
00026630: R3 := R0
00026636: R2 := 0x13000
0002663d: R0 := 7
00026644: R2 := R2 + 0x6B0
0002664b: R1 := 1
00026650: R30 := 0xF684
00026652: call @__syslog_chk with return %00026654

00026654:
00026658: R0 := 0x27000
00026660: R0 := mem[R0 + 0xF78, el]:u64
00026669: R0 := mem[R0, el]:u32
00026674: #16838 := ~31:0[R0] = 0
0002666e: when #16838 goto %00026584
0003adcb: goto %000265b1

00026584:
0002658a: R2 := R23
00026593: R3 := 31:0[R22]
00026599: R1 := 0x13000
000265a0: R0 := 1
000265a7: R1 := R1 + 0x6C0
000265ac: R30 := 0xF6FC
000265ae: call @__printf_chk with return %000265b0

000265b0:
000265b3: goto %000265b1

000265b1:
000265bb: R1 := 31:0[R19]
000265c4: R0 := 31:0[R22]
000265c9: R30 := 0xF6A0
000265cb: call @tunnel with return %0002484f

0002484f:
00024858: R0 := R21
0002485d: R30 := 0xF6A8
0002485f: call @free with return %00024861

00024861:
00024868: R0 := 31:0[R19]
0002486d: R30 := 0xF6B0
0002486f: call @close with return %00024871

00024871:
00024878: R0 := 31:0[R22]
0002487d: R30 := 0xF6B8
0002487f: call @close with return %00024881

00024881:
00024887: R20 := mem[R20 + 0xFB8, el]:u64
0002488f: R0 := mem[R31 + 0x48, el]:u64
00024897: R1 := mem[R20, el]:u64
0002489f: #15912 := 1 + ~R1 + R0
000248a3: NF := 63:63[#15912]
000248a6: VF := 63:63[R0] & 63:63[~R1] & ~63:63[#15912] | ~63:63[R0] &
          ~63:63[~R1] & 63:63[#15912]
000248a9: ZF := #15912 = 0
000248ac: CF := 63:63[R0] & 63:63[~R1] | 63:63[~R1] & ~63:63[#15912] |
          63:63[R0] & ~63:63[#15912]
000248b0: R0 := #15912
000248b6: R1 := 0
000248c2: #15917 := ~ZF <> 0
000248bc: when #15917 goto %000248ba
0003adcc: goto %00026547

000248ba:
000248c7: R30 := 0xF70C
000248c9: call @__stack_chk_fail with return %000248cb

000248cb:
0003adcd: call @scanner_hook with noreturn

00026547:
0002654e: R19 := mem[R31 + 0x10, el]:u64
00026552: R20 := mem[R31 + 0x18, el]:u64
0002655b: R21 := mem[R31 + 0x20, el]:u64
0002655f: R22 := mem[R31 + 0x28, el]:u64
00026568: R23 := mem[R31 + 0x30, el]:u64
0002656c: R24 := mem[R31 + 0x38, el]:u64
00026576: R29 := mem[R31, el]:u64
0002657a: R30 := mem[R31 + 8, el]:u64
0002657d: R31 := R31 + 0x50
00026582: call R30 with noreturn

0003adce: sub dump_auth(dump_auth_result)
0003b3a3: dump_auth_result :: out u32 = low:32[R0]

0001e4ff:
0001e509: #12537 := R31 - 0x30
0001e50e: mem := mem with [#12537, el]:u64 <- R29
0001e513: mem := mem with [#12537 + 8, el]:u64 <- R30
0001e517: R31 := #12537
0001e51d: R1 := 0x12000
0001e524: R1 := R1 + 0x5A0
0001e52b: R29 := R31
0001e533: #12542 := R31 + 0x10
0001e538: mem := mem with [#12542, el]:u64 <- R19
0001e53d: mem := mem with [#12542 + 8, el]:u64 <- R20
0001e545: R19 := R0
0001e54c: R0 := 1
0001e551: R30 := 0xB3D0
0001e553: call @__printf_chk with return %0001e555

0001e555:
0001e55f: #12547 := R19 = 0
0001e559: when #12547 goto %0001e557
0003adcf: goto %0002c72b

0001e557:
0001e568: R19 := mem[R31 + 0x10, el]:u64
0001e56c: R20 := mem[R31 + 0x18, el]:u64
0001e572: R1 := 0x12000
0001e57c: R29 := mem[R31, el]:u64
0001e580: R30 := mem[R31 + 8, el]:u64
0001e583: R31 := R31 + 0x30
0001e58a: R1 := R1 + 0x5C0
0001e591: R0 := 1
0001e595: call @__printf_chk with noreturn

0002c72b:
0002c731: R2 := R19
0002c737: R1 := 0x12000
0002c73e: R0 := 1
0002c745: R1 := R1 + 0x5E0
0002c74a: R30 := 0xB3E8
0002c74c: call @__printf_chk with return %0002c74e

0002c74e:
0002c753: R2 := R19 + 0x32
0002c759: R1 := 0x12000
0002c760: R0 := 1
0002c767: R1 := R1 + 0x5F0
0002c76c: R30 := 0xB3FC
0002c76e: call @__printf_chk with return %0002c770

0002c770:
0002c775: R2 := R19 + 0x64
0002c77b: R1 := 0x12000
0002c782: R0 := 1
0002c789: R1 := R1 + 0x600
0002c78e: R30 := 0xB410
0002c790: call @__printf_chk with return %0002c792

0002c792:
0002c799: R2 := mem[R19 + 0x12C, el]:u32
0002c79f: R1 := 0x12000
0002c7a6: R0 := 1
0002c7ad: R1 := R1 + 0x610
0002c7b2: R30 := 0xB424
0002c7b4: call @__printf_chk with return %0002c7b6

0002c7b6:
0002c7bd: R2 := mem[R19 + 0x130, el]:u32
0002c7c3: R1 := 0x12000
0002c7ca: R0 := 1
0002c7d1: R1 := R1 + 0x620
0002c7d6: R30 := 0xB438
0002c7d8: call @__printf_chk with return %0002c7da

0002c7da:
0002c7e1: R2 := mem[R19 + 0x134, el]:u32
0002c7e7: R1 := 0x12000
0002c7ee: R0 := 1
0002c7f5: R1 := R1 + 0x630
0002c7fa: R30 := 0xB44C
0002c7fc: call @__printf_chk with return %0002c7fe

0002c7fe:
0002c805: R2 := mem[R19 + 0x138, el]:u32
0002c80b: R1 := 0x12000
0002c812: R0 := 1
0002c819: R1 := R1 + 0x640
0002c81e: R30 := 0xB460
0002c820: call @__printf_chk with return %0002c822

0002c822:
0002c827: R0 := R19 + 0xFA
0002c82e: R2 := 8
0002c834: R1 := 0x10
0002c839: R30 := 0xB470
0002c83b: call @printmem with return %0002c83d

0002c83d:
0002c841: R1 := 0x12000
0002c849: R2 := R0
0002c850: R1 := R1 + 0x650
0002c858: R20 := R0
0002c85f: R0 := 1
0002c864: R30 := 0xB488
0002c866: call @__printf_chk with return %0002c868

0002c868:
0002c86e: R0 := R20
0002c873: R30 := 0xB490
0002c875: call @free with return %0002c877

0002c877:
0002c87c: R0 := R19 + 0xC8
0002c883: R2 := 8
0002c889: R1 := 0x10
0002c88e: R30 := 0xB4A0
0002c890: call @printmem with return %0002c892

0002c892:
0002c896: R1 := 0x12000
0002c89e: R2 := R0
0002c8a5: R1 := R1 + 0x660
0002c8ad: R20 := R0
0002c8b4: R0 := 1
0002c8b9: R30 := 0xB4B8
0002c8bb: call @__printf_chk with return %0002c8bd

0002c8bd:
0002c8c3: R0 := R20
0002c8c8: R30 := 0xB4C0
0002c8ca: call @free with return %0002c8cc

0002c8cc:
0002c8d1: R0 := R19 + 0x96
0002c8d8: R2 := 8
0002c8de: R1 := 0x10
0002c8e3: R30 := 0xB4D0
0002c8e5: call @printmem with return %0002c8e7

0002c8e7:
0002c8eb: R1 := 0x12000
0002c8f3: R19 := R0
0002c8fb: R2 := R0
0002c902: R1 := R1 + 0x670
0002c90a: mem := mem with [R31 + 0x28, el]:u64 <- R0
0002c911: R0 := 1
0002c916: R30 := 0xB4EC
0002c918: call @__printf_chk with return %0002c91a

0002c91a:
0002c920: R0 := R19
0002c929: R19 := mem[R31 + 0x10, el]:u64
0002c92d: R20 := mem[R31 + 0x18, el]:u64
0002c937: R29 := mem[R31, el]:u64
0002c93b: R30 := mem[R31 + 8, el]:u64
0002c93e: R31 := R31 + 0x30
0002c942: call @free with noreturn

0003add0: sub dup2(dup2_fd, dup2_fd2, dup2_result)
0003b3a4: dup2_fd :: in u32 = low:32[R0]
0003b3a5: dup2_fd2 :: in u32 = low:32[R1]
0003b3a6: dup2_result :: out u32 = low:32[R0]

0002e872:
000330bb: R16 := 0x27000
000330c3: R17 := mem[R16 + 0xEE0, el]:u64
000330ca: R16 := R16 + 0xEE0
000330cf: call R17 with noreturn

0003add1: sub dup_auth(dup_auth_result)
0003b3a7: dup_auth_result :: out u32 = low:32[R0]

00028146:
00028150: #17638 := R31 - 0x40
00028155: mem := mem with [#17638, el]:u64 <- R29
0002815a: mem := mem with [#17638 + 8, el]:u64 <- R30
0002815e: R31 := #17638
00028165: R29 := R31
0002816d: #17643 := R31 + 0x10
00028172: mem := mem with [#17643, el]:u64 <- R19
00028177: mem := mem with [#17643 + 8, el]:u64 <- R20
0002817f: R20 := R0
00028187: #17651 := R31 + 0x30
0002818c: mem := mem with [#17651, el]:u64 <- R23
00028191: mem := mem with [#17651 + 8, el]:u64 <- R24
0002819a: R24 := 31:0[R1]
0002819f: R30 := 0xB26C
000281a1: call @new_auth with return %000281a3

000281a3:
000281a9: R19 := R0
000281b5: #17659 := R0 = 0
000281af: when #17659 goto %000281ad
0003add2: goto %0002832c

0002832c:
00028331: R3 := R20 + 0x200
00028338: R4 := R0 + 0x200
00028340: #17736 := R31 + 0x20
00028345: mem := mem with [#17736, el]:u64 <- R21
0002834a: mem := mem with [#17736 + 8, el]:u64 <- R22
00028350: R2 := 0x32
00028358: R1 := R20 + R2
00028360: V0 := high:64[V0].mem[R3 - 0xD4, el]:u64
00028368: R0 := R0 + R2
0002836f: R22 := R19 + 0xFA
00028376: R23 := R19 + 0xC8
0002837d: R21 := R19 + 0x96
00028385: mem := mem with [R4 - 0xD4, el]:u64 <- 63:0[V0]
0002838e: R4 := mem[R20 + 0x134, el]:u32
00028397: R3 := mem[R20 + 0x138, el]:u32
0002839f: mem := mem with [R19 + 0x134, el]:u32 <- 31:0[R4]
000283a7: mem := mem with [R19 + 0x138, el]:u32 <- 31:0[R3]
000283ac: R30 := 0xB2B4
000283ae: call @strlcpy with return %000283b0

000283b0:
000283b5: R1 := R20 + 0x64
000283bc: R0 := R19 + 0x64
000283c2: R2 := 0x32
000283c7: R30 := 0xB2C4
000283c9: call @strlcpy with return %000283cb

000283cb:
000283d4: #17747 := 31:0[R24] = 0
000283ce: when #17747 goto %000281ef
0003add3: goto %000283d7

000281ef:
000281f5: #17669 := R19
000281fa: mem := mem with [#17669, el]:u64 <- 0
000281ff: mem := mem with [#17669 + 8, el]:u64 <- 0
00028207: R0 := R19
0002820f: #17677 := R19 + 0x10
00028214: mem := mem with [#17677, el]:u64 <- 0
00028219: mem := mem with [#17677 + 8, el]:u64 <- 0
00028221: #17682 := R19 + 0x20
00028226: mem := mem with [#17682, el]:u64 <- 0
0002822b: mem := mem with [#17682 + 8, el]:u64 <- 0
00028233: mem := mem with [R19 + 0x30, el]:u16 <- 0
0002823b: #17687 := R22
00028240: mem := mem with [#17687, el]:u64 <- 0
00028245: mem := mem with [#17687 + 8, el]:u64 <- 0
0002824d: #17692 := R22 + 0x10
00028252: mem := mem with [#17692, el]:u64 <- 0
00028257: mem := mem with [#17692 + 8, el]:u64 <- 0
0002825f: #17697 := R22 + 0x20
00028264: mem := mem with [#17697, el]:u64 <- 0
00028269: mem := mem with [#17697 + 8, el]:u64 <- 0
00028271: mem := mem with [R22 + 0x30, el]:u16 <- 0
00028279: #17702 := R19 + 0xC8
0002827e: mem := mem with [#17702, el]:u64 <- 0
00028283: mem := mem with [#17702 + 8, el]:u64 <- 0
0002828b: #17707 := R23 + 0x10
00028290: mem := mem with [#17707, el]:u64 <- 0
00028295: mem := mem with [#17707 + 8, el]:u64 <- 0
0002829d: #17712 := R23 + 0x20
000282a2: mem := mem with [#17712, el]:u64 <- 0
000282a7: mem := mem with [#17712 + 8, el]:u64 <- 0
000282af: mem := mem with [R23 + 0x30, el]:u16 <- 0
000282b7: #17717 := R21
000282bc: mem := mem with [#17717, el]:u64 <- 0
000282c1: mem := mem with [#17717 + 8, el]:u64 <- 0
000282c9: #17722 := R21 + 0x10
000282ce: mem := mem with [#17722, el]:u64 <- 0
000282d3: mem := mem with [#17722 + 8, el]:u64 <- 0
000282db: #17727 := R21 + 0x20
000282e0: mem := mem with [#17727, el]:u64 <- 0
000282e5: mem := mem with [#17727 + 8, el]:u64 <- 0
000282ed: mem := mem with [R21 + 0x30, el]:u16 <- 0
000282f6: R19 := mem[R31 + 0x10, el]:u64
000282fa: R20 := mem[R31 + 0x18, el]:u64
00028303: R21 := mem[R31 + 0x20, el]:u64
00028307: R22 := mem[R31 + 0x28, el]:u64
00028310: R23 := mem[R31 + 0x30, el]:u64
00028314: R24 := mem[R31 + 0x38, el]:u64
0002831e: R29 := mem[R31, el]:u64
00028322: R30 := mem[R31 + 8, el]:u64
00028325: R31 := R31 + 0x40
0002832a: call R30 with noreturn

000283d7:
000283dd: R1 := R20
000283e3: R2 := 0x32
000283eb: R0 := R19
000283f0: R30 := 0xB2D8
000283f2: call @strlcpy with return %000283f4

000283f4:
000283f9: R1 := R20 + 0xFA
00028400: R0 := R20 + 0x96
00028409: R2 := mem[R1, el]:u64
0002840d: R3 := mem[R1 + 8, el]:u64
00028415: #17758 := R22
0002841a: mem := mem with [#17758, el]:u64 <- R2
0002841f: mem := mem with [#17758 + 8, el]:u64 <- R3
00028428: R2 := mem[R1 + 0x10, el]:u64
0002842c: R3 := mem[R1 + 0x18, el]:u64
00028434: #17764 := R22 + 0x10
00028439: mem := mem with [#17764, el]:u64 <- R2
0002843e: mem := mem with [#17764 + 8, el]:u64 <- R3
00028447: R2 := mem[R1 + 0x20, el]:u64
0002844b: R3 := mem[R1 + 0x28, el]:u64
00028453: #17770 := R22 + 0x20
00028458: mem := mem with [#17770, el]:u64 <- R2
0002845d: mem := mem with [#17770 + 8, el]:u64 <- R3
00028466: R1 := mem[R20 + 0x12A, el]:u16
0002846e: mem := mem with [R22 + 0x30, el]:u16 <- low:16[31:0[R1]]
00028477: R2 := mem[R20 + 0xC8, el]:u64
0002847b: R3 := mem[R20 + 0xD0, el]:u64
00028483: #17777 := R19 + 0xC8
00028488: mem := mem with [#17777, el]:u64 <- R2
0002848d: mem := mem with [#17777 + 8, el]:u64 <- R3
00028496: R2 := mem[R20 + 0xD8, el]:u64
0002849a: R3 := mem[R20 + 0xE0, el]:u64
000284a2: #17783 := R23 + 0x10
000284a7: mem := mem with [#17783, el]:u64 <- R2
000284ac: mem := mem with [#17783 + 8, el]:u64 <- R3
000284b5: R2 := mem[R20 + 0xE8, el]:u64
000284b9: R3 := mem[R20 + 0xF0, el]:u64
000284c1: #17789 := R23 + 0x20
000284c6: mem := mem with [#17789, el]:u64 <- R2
000284cb: mem := mem with [#17789 + 8, el]:u64 <- R3
000284d4: R1 := mem[R20 + 0xF8, el]:u16
000284dc: mem := mem with [R23 + 0x30, el]:u16 <- low:16[31:0[R1]]
000284e5: R2 := mem[R0, el]:u64
000284e9: R3 := mem[R0 + 8, el]:u64
000284f1: #17796 := R21
000284f6: mem := mem with [#17796, el]:u64 <- R2
000284fb: mem := mem with [#17796 + 8, el]:u64 <- R3
00028504: R2 := mem[R0 + 0x10, el]:u64
00028508: R3 := mem[R0 + 0x18, el]:u64
00028510: #17802 := R21 + 0x10
00028515: mem := mem with [#17802, el]:u64 <- R2
0002851a: mem := mem with [#17802 + 8, el]:u64 <- R3
00028523: R2 := mem[R0 + 0x20, el]:u64
00028527: R3 := mem[R0 + 0x28, el]:u64
0002852f: #17808 := R21 + 0x20
00028534: mem := mem with [#17808, el]:u64 <- R2
00028539: mem := mem with [#17808 + 8, el]:u64 <- R3
00028542: R0 := mem[R20 + 0xC6, el]:u16
0002854a: mem := mem with [R21 + 0x30, el]:u16 <- low:16[31:0[R0]]
00028553: R21 := mem[R31 + 0x20, el]:u64
00028557: R22 := mem[R31 + 0x28, el]:u64
0003add4: goto %000281ad

000281ad:
000281bd: R0 := R19
000281c6: R19 := mem[R31 + 0x10, el]:u64
000281ca: R20 := mem[R31 + 0x18, el]:u64
000281d3: R23 := mem[R31 + 0x30, el]:u64
000281d7: R24 := mem[R31 + 0x38, el]:u64
000281e1: R29 := mem[R31, el]:u64
000281e5: R30 := mem[R31 + 8, el]:u64
000281e8: R31 := R31 + 0x40
000281ed: call R30 with noreturn

0003add5: sub dup_rr_data(dup_rr_data_result)
0003b3a8: dup_rr_data_result :: out u32 = low:32[R0]

000147c8:
000147d2: #5911 := R0 = 0
000147cc: when #5911 goto %000147ca
0003add6: goto %00014ac1

000147ca:
000147d7: call R30 with noreturn

00014ac1:
00014ac8: #6001 := R31 - 0x20
00014acd: mem := mem with [#6001, el]:u64 <- R29
00014ad2: mem := mem with [#6001 + 8, el]:u64 <- R30
00014ad6: R31 := #6001
00014add: R29 := R31
00014ae5: mem := mem with [R31 + 0x10, el]:u64 <- R19
00014aed: R19 := R0
00014af3: R0 := 0x68
00014af8: R30 := 0x55DC
00014afa: call @malloc with return %00014afc

00014afc:
00014b00: R2 := 0x11000
00014b08: R1 := R19
00014b0e: V0 := 0
00014b17: V1 := mem[R2 + 0x6F0, el]:u64.mem[R2 + 0x6F8, el]:u64
00014b1f: R19 := mem[R31 + 0x10, el]:u64
00014b27: mem := mem with [R0, el]:u32 <- 0
00014b2f: mem := mem with [R0 + 8, el]:u64 <- 0
00014b37: mem := mem with [R0 + 0x20, el]:u32 <- 0
00014b3f: mem := mem with [R0 + 0x10, el]:u128 <- V1
00014b47: mem := mem with [R0 + 0x28, el]:u128 <- V0
00014b4f: mem := mem with [R0 + 0x38, el]:u128 <- V0
00014b57: mem := mem with [R0 + 0x48, el]:u128 <- V0
00014b5f: mem := mem with [R0 + 0x58, el]:u128 <- V0
00014b69: R29 := mem[R31, el]:u64
00014b6d: R30 := mem[R31 + 8, el]:u64
00014b70: R31 := R31 + 0x20
00014b74: call @copy_rr_data with noreturn

0003add7: sub exit(exit_code)
0003b3a9: exit_code :: in u32 = low:32[R0]

00022a45:
00032936: R16 := 0x27000
0003293e: R17 := mem[R16 + 0xC78, el]:u64
00032945: R16 := R16 + 0xC78
0003294a: call R17 with noreturn

0003add8: sub fclose(fclose_fp, fclose_result)
0003b3aa: fclose_fp :: in out u64 = R0
0003b3ab: fclose_result :: out u32 = low:32[R0]

00017c82:
00032aad: R16 := 0x27000
00032ab5: R17 := mem[R16 + 0xCF0, el]:u64
00032abc: R16 := R16 + 0xCF0
00032ac1: call R17 with noreturn

0003add9: sub fcntl(fcntl_result)
0003b3ac: fcntl_result :: out u32 = low:32[R0]

00017873:
00032f8f: R16 := 0x27000
00032f97: R17 := mem[R16 + 0xE80, el]:u64
00032f9e: R16 := R16 + 0xE80
00032fa3: call R17 with noreturn

0003adda: sub feof(feof_stream, feof_result)
0003b3ad: feof_stream :: in out u64 = R0
0003b3ae: feof_result :: out u32 = low:32[R0]

00017c3c:
00032e31: R16 := 0x27000
00032e39: R17 := mem[R16 + 0xE10, el]:u64
00032e40: R16 := R16 + 0xE10
00032e45: call R17 with noreturn

0003addb: sub ferror(ferror_stream, ferror_result)
0003b3af: ferror_stream :: in out u64 = R0
0003b3b0: ferror_result :: out u32 = low:32[R0]

000128cd:
000331b5: R16 := 0x27000
000331bd: R17 := mem[R16 + 0xF30, el]:u64
000331c4: R16 := R16 + 0xF30
000331c9: call R17 with noreturn

0003addc: sub fgets(fgets_s, fgets_size, fgets_stream, fgets_result)
0003b3b1: fgets_s :: in out u64 = R0
0003b3b2: fgets_size :: in u32 = low:32[R1]
0003b3b3: fgets_stream :: in out u64 = R2
0003b3b4: fgets_result :: out u64 = R0

00017cc8:
0003319c: R16 := 0x27000
000331a4: R17 := mem[R16 + 0xF28, el]:u64
000331ab: R16 := R16 + 0xF28
000331b0: call R17 with noreturn

0003addd: sub fnmatch(fnmatch_result)
0003b3b5: fnmatch_result :: out u32 = low:32[R0]

00023292:
00032f76: R16 := 0x27000
00032f7e: R17 := mem[R16 + 0xE78, el]:u64
00032f85: R16 := R16 + 0xE78
00032f8a: call R17 with noreturn

0003adde: sub fopen(fopen_path, fopen_mode, fopen_result)
0003b3b6: fopen_path :: in u64 = R0
0003b3b7: fopen_mode :: in u64 = R1
0003b3b8: fopen_result :: out u64 = R0

00013c61:
00032af8: R16 := 0x27000
00032b00: R17 := mem[R16 + 0xD08, el]:u64
00032b07: R16 := R16 + 0xD08
00032b0c: call R17 with noreturn

0003addf: sub fork(fork_result)
0003b3b9: fork_result :: out u32 = low:32[R0]

00031ac9:
00032a30: R16 := 0x27000
00032a38: R17 := mem[R16 + 0xCC8, el]:u64
00032a3f: R16 := R16 + 0xCC8
00032a44: call R17 with noreturn

0003ade0: sub forward_request(forward_request_result)
0003b3ba: forward_request_result :: out u32 = low:32[R0]

000213e6:
000213ed: #14049 := R31 - 0xE0
000213f2: mem := mem with [#14049, el]:u64 <- R29
000213f7: mem := mem with [#14049 + 8, el]:u64 <- R30
000213fb: R31 := #14049
00021401: R2 := 0x27000
00021408: R29 := R31
00021410: R2 := mem[R2 + 0xFB8, el]:u64
00021418: #14055 := R31 + 0x10
0002141d: mem := mem with [#14055, el]:u64 <- R19
00021422: mem := mem with [#14055 + 8, el]:u64 <- R20
0002142a: R20 := R1
00021432: R1 := mem[R0 + 0x10, el]:u64
0002143a: mem := mem with [R31 + 0x90, el]:u64 <- R1
00021442: R1 := mem[R2, el]:u64
0002144a: mem := mem with [R31 + 0xD8, el]:u64 <- R1
00021450: R1 := 0
00021457: R2 := R31 + 0xBC
0002145d: R1 := 0x14000
00021464: R1 := R1 + 0xD00
0002146c: mem := mem with [R31 + 0xA0, el]:u64 <- R1
00021473: R1 := R31 + 0xC0
0002147b: mem := mem with [R31 + 0x80, el]:u64 <- R1
00021482: R1 := R31 + 0xC8
0002148b: R0 := mem[R0, el]:u32
00021493: #14066 := R31 + 0x30
00021498: mem := mem with [#14066, el]:u64 <- R23
0002149d: mem := mem with [#14066 + 8, el]:u64 <- R24
000214a4: R23 := R31 + 0xB8
000214ac: #14071 := R31 + 0x40
000214b1: mem := mem with [#14071, el]:u64 <- R25
000214b6: mem := mem with [#14071 + 8, el]:u64 <- R26
000214bc: R25 := 0
000214c4: #14076 := R31 + 0x50
000214c9: mem := mem with [#14076, el]:u64 <- R27
000214ce: mem := mem with [#14076 + 8, el]:u64 <- R28
000214d5: R27 := 0
000214de: R26 := 31:0[R27]
000214e6: mem := mem with [R31 + 0x70, el]:u64 <- R1
000214ee: R1 := R2
000214f6: #14087 := R31 + 0x20
000214fb: mem := mem with [#14087, el]:u64 <- R21
00021500: mem := mem with [#14087 + 8, el]:u64 <- R22
00021506: R21 := 0x27000
0002150e: mem := mem with [R31 + 0x78, el]:u64 <- R2
00021516: mem := mem with [R31 + 0xBC, el]:u32 <- 31:0[R0]
0002151e: mem := mem with [R31 + 0xC0, el]:u64 <- 0
0003ade1: goto %00021520

00021520:
00021526: R0 := mem[R21 + 0xF78, el]:u64
0002152e: mem := mem with [R31 + 0xB8, el]:u32 <- 0
00021536: #14093 := R31 + 0xC8
0002153b: mem := mem with [#14093, el]:u64 <- R1
00021540: mem := mem with [#14093 + 8, el]:u64 <- R23
00021549: R0 := mem[R0, el]:u32
00021555: #14096 := 31:0[R0] = 0
0002154f: when #14096 goto %0002154d
0003ade2: goto %0002a8a6

0002a8a6:
0002a8ab: #18776 := extend:64[31:0[R26]]
0002a8af: NF := 63:63[#18776]
0002a8b2: VF := 31:31[R26] & ~63:63[#18776]
0002a8b5: ZF := #18776 = 0
0002a8b8: CF := 31:31[R26] | 31:31[R26] & ~63:63[#18776] | ~63:63[#18776]
0002a8c1: R2 := 0x12000
0002a8c9: R0 := mem[R31 + 0xA0, el]:u64
0002a8d0: R2 := R2 + 0xCD0
0002a8d6: R1 := 0x12000
0002a8dd: R1 := R1 + 0xCE0
0002a8f3: #18779 := ~ZF <> 0
0002a8f4: goto %0002a8eb

0002a8eb:
0002a8ed: when #18779 goto %0002a8e5
0002a8ee: goto %0002a8e8

0002a8e8:
0002a8e9: R2 := R0
0002a8f0: goto %0002a8ec

0002a8e5:
0002a8e6: R2 := R2
0002a8ef: goto %0002a8ec

0002a8ec:
0002a8fc: R0 := 1
0002a901: R30 := 0xD5F4
0002a903: call @__printf_chk with return %0002a905

0002a905:
0002a909: R0 := 0x27000
0002a911: R19 := mem[R0 + 0xF60, el]:u64
0002a919: R0 := R19
0002a91e: R30 := 0xD604
0002a920: call @pthread_mutex_lock with return %0002a922

0002a922:
0002a926: R0 := 0x27000
0002a92e: R0 := mem[R0 + 0xFC0, el]:u64
0002a936: R0 := mem[R0, el]:u64
0002a93b: R30 := 0xD614
0002a93d: call @plist_dump with return %0002a93f

0002a93f:
0002a945: R0 := R19
0002a94a: R30 := 0xD61C
0002a94c: call @pthread_mutex_unlock with return %0002154d

0002154d:
0002155b: R0 := 0x27000
00021563: R19 := mem[R0 + 0xF60, el]:u64
0002156b: R0 := R19
00021570: R30 := 0xD62C
00021572: call @pthread_mutex_lock with return %00021574

00021574:
00021578: R0 := 0x27000
00021580: R1 := mem[R31 + 0x80, el]:u64
00021588: R0 := mem[R0 + 0xFC0, el]:u64
0002158d: R30 := 0xD63C
0002158f: call @plist_pop with return %00021591

00021591:
00021598: R22 := 31:0[R0]
000215a0: R0 := R19
000215a8: mem := mem with [R31 + 0x6C, el]:u32 <- 31:0[R22]
000215ad: R30 := 0xD64C
000215af: call @pthread_mutex_unlock with return %000215b1

000215b1:
000215bb: #14109 := 31:0[R22] = 0
000215b5: when #14109 goto %000215b3
0003ade3: goto %0002a869

000215b3:
000215c0: R30 := 0xDC1C
000215c2: call @new_auth with return %000215c4

000215c4:
000215ca: mem := mem with [R31 + 0xC0, el]:u64 <- R0
000215cf: R30 := 0xDC24
000215d1: call @proxy_connect with return %000215d3

000215d3:
000215d9: mem := mem with [R31 + 0xB8, el]:u32 <- 31:0[R0]
000215e0: #14110 := extend:64[31:0[R0]]
000215e4: NF := 63:63[#14110]
000215e7: VF := 31:31[R0] & ~63:63[#14110]
000215ea: ZF := #14110 = 0
000215ed: CF := 31:31[R0] | 31:31[R0] & ~63:63[#14110] | ~63:63[#14110]
000215fe: #14112 := (NF = VF & ~ZF) <> 0
000215f8: when #14112 goto %000215f6
0003ade4: goto %0002a7f0

0002a7f0:
0002a7f6: R0 := mem[R20 + 0x48, el]:u64
0002a7fc: R1 := 0x12000
0002a803: R1 := R1 + 0xD20
0002a80a: R22 := 0
0002a811: R28 := 0
0002a818: R23 := 0
0002a81d: R30 := 0xDC4C
0002a81f: call @gen_502_page with return %0002a821

0002a821:
0002a827: R19 := R0
0002a82c: R30 := 0xDC54
0002a82e: call @strlen with return %0002a830

0002a830:
0002a836: R2 := R0
0002a83f: R0 := mem[R31 + 0xBC, el]:u32
0002a847: R1 := R19
0002a84d: R24 := 0xFFFFFFFFFFFFFFFF
0002a852: R30 := 0xDC68
0002a854: call @write with return %0002a856

0002a856:
0002a85c: R0 := R19
0002a861: R30 := 0xDC70
0002a863: call @free with return %0002a865

0002a865:
0002a867: goto %0002188c

0002a869:
0002a86f: R0 := mem[R21 + 0xF78, el]:u64
0002a878: R0 := mem[R0, el]:u32
0002a883: #18774 := ~31:0[R0] = 0
0002a87d: when #18774 goto %00029fa8
0003ade5: goto %0002a886

00029fa8:
00029faf: R2 := mem[R31 + 0x6C, el]:u32
00029fb5: R1 := 0x12000
00029fbc: R0 := 1
00029fc3: R1 := R1 + 0xCF8
00029fc8: R30 := 0xDB24
00029fca: call @__printf_chk with return %00029fcc

00029fcc:
00029fd3: R0 := mem[R31 + 0x6C, el]:u32
00029fdb: mem := mem with [R31 + 0xB8, el]:u32 <- 31:0[R0]
00029fe2: R0 := 1
00029fea: mem := mem with [R31 + 0x6C, el]:u32 <- 31:0[R0]
00029fee: goto %000215f6

0002a886:
0002a88d: R0 := mem[R31 + 0x6C, el]:u32
0002a895: mem := mem with [R31 + 0xB8, el]:u32 <- 31:0[R0]
0002a89c: R0 := 1
0002a8a4: mem := mem with [R31 + 0x6C, el]:u32 <- 31:0[R0]
0003ade6: goto %000215f6

000215f6:
0002160a: #14113 := R25 = 0
00021604: when #14113 goto %00021602
0003ade7: goto %00021616

00021602:
00021612: R25 := mem[R20 + 0x40, el]:u64
0002161e: #14115 := R25 = 0
00021618: when #14115 goto %00021616
0003ade8: goto %0002a7a8

0002a7a8:
0002a7ae: R0 := R25
0002a7b3: R30 := 0xDC84
0002a7b5: call @strdup with return %0002a7b7

0002a7b7:
0002a7bd: R25 := R0
0002a7c3: R0 := 0x12000
0002a7ca: R0 := R0 + 0xD40
0002a7d2: mem := mem with [R31 + 0x98, el]:u64 <- R0
0002a7db: R22 := mem[R31 + 0x6C, el]:u32
0002a7e2: R27 := 0
0002a7ed: #18757 := ~R20 = 0
0002a7e7: when #18757 goto %0002a79c
0003ade9: goto %00021647

00021616:
00021624: R0 := 0x12000
0002162b: R0 := R0 + 0xD40
00021633: mem := mem with [R31 + 0x98, el]:u64 <- R0
0002163a: R27 := 0
00021643: R22 := mem[R31 + 0x6C, el]:u32
0002164f: #14117 := R20 = 0
00021649: when #14117 goto %00021647
0003adea: goto %0002a79c

0002a79c:
0002a7a5: #18749 := 31:0[R26] = 0
0002a79f: when #18749 goto %0002a781
0003adeb: goto %00021661

0002a781:
0002a787: R0 := R20
0002a78c: R30 := 0xDCB4
0002a78e: call @dup_rr_data with return %0002a790

0002a790:
0002a796: R20 := R0
0002a79a: goto %00021661

00021661:
00021667: R30 := 0xD690
00021669: call @new_rr_data with return %0002166b

0002166b:
00021671: R24 := R20
00021679: R19 := R0
0002167f: R28 := 0x12000
00021686: R26 := 0
0002168d: R0 := R28 + 0xD80
00021695: mem := mem with [R31 + 0x88, el]:u64 <- R0
0003adec: goto %00021697

00021697:
0002169d: R0 := mem[R21 + 0xF78, el]:u64
000216a6: R1 := mem[R24 + 0x1C, el]:u32
000216af: R28 := mem[R0, el]:u32
000216bb: #14130 := 31:0[R1] = 0
000216b5: when #14130 goto %000216b3
0003aded: goto %0002a759

0002a759:
0002a75f: R1 := mem[R31 + 0x70, el]:u64
0002a766: R0 := extend:64[31:0[R26]]
0002a76e: #18741 := R0 << 3
0002a773: R7 := mem[R1 + #18741, el]:u64
0002a77e: #18742 := ~31:0[R28] = 0
0002a778: when #18742 goto %0002996f
0003adee: goto %000299e6

0002996f:
00029977: R4 := mem[R31 + 0xB8, el]:u32
0002997c: R3 := mem[R31 + 0xBC, el]:u32
00029985: R6 := 31:0[R27]
0002998d: R1 := mem[R31 + 0x98, el]:u64
00029996: R5 := 31:0[R22]
0002999e: R2 := extend:64[31:0[R26]] + 1
000299a5: R0 := 1
000299ad: mem := mem with [R31 + 0xA8, el]:u64 <- R7
000299b2: R30 := 0xD914
000299b4: call @__printf_chk with return %000299b6

000299b6:
000299bc: R7 := mem[R31 + 0xA8, el]:u64
000299c3: R0 := 1
000299cb: R1 := mem[R31 + 0x88, el]:u64
000299d4: R2 := mem[R7, el]:u32
000299d9: R30 := 0xD928
000299db: call @__printf_chk with return %000299dd

000299dd:
000299e3: R7 := mem[R31 + 0xA8, el]:u64
000299e8: goto %000299e6

000299e6:
000299f0: R0 := mem[R7, el]:u32
000299f8: R1 := R24
000299fd: R30 := 0xD6D4
000299ff: call @headers_recv with return %00029a01

00029a01:
00029a0b: #18333 := 31:0[R0] = 0
00029a05: when #18333 goto %00029a03
0003adef: goto %0002a60c

00029a03:
00029a14: R28 := 31:0[R0]
00029a19: goto %00029a17

0002a60c:
0002a612: R0 := mem[R21 + 0xF78, el]:u64
0002a61b: R28 := mem[R0, el]:u32
0003adf0: goto %000216b3

000216b3:
000216c2: #14131 := R25
000216c6: NF := 63:63[#14131]
000216c9: VF := 63:63[R25] & ~63:63[#14131]
000216cc: ZF := #14131 = 0
000216cf: CF := 63:63[R25] | ~63:63[#14131] | 63:63[R25] & ~63:63[#14131]
000216d9: R0 := 31:0[R26] ^ 1
000216f1: #14155 := ~ZF <> 0
000216f2: goto %000216e9

000216e9:
000216eb: when #14155 goto %000216e2
000216ec: goto %000216e6

000216e6:
000216e7: R0 := 0
000216ee: goto %000216ea

000216e2:
000216e3: R0 := 31:0[R0]
000216ed: goto %000216ea

000216ea:
000216ff: #14156 := 31:0[R0] = 0
000216f9: when #14156 goto %000216f7
0003adf1: goto %0002a72a

0002a72a:
0002a730: R1 := mem[R20 + 0x40, el]:u64
0002a73b: #18733 := R1 = 0
0002a735: when #18733 goto %000216f7
0003adf2: goto %0002a73e

0002a73e:
0002a744: R0 := R25
0002a749: R30 := 0xD700
0002a74b: call @strcasecmp with return %0002a74d

0002a74d:
0002a756: #18737 := ~31:0[R0] = 0
0002a750: when #18737 goto %0002a600
0003adf3: goto %000216f7

0002a600:
0002a609: #18709 := ~31:0[R28] = 0
0002a603: when #18709 goto %0002a50b
0003adf4: goto %0002a52f

0002a50b:
0002a511: R2 := mem[R20 + 0x30, el]:u64
0002a517: R1 := 0x12000
0002a51e: R0 := 1
0002a525: R1 := R1 + 0xDA0
0002a52a: R30 := 0xDF00
0002a52c: call @__printf_chk with return %0002a52e

0002a52e:
0002a531: goto %0002a52f

0002a52f:
0002a538: R0 := R20
0002a53d: R30 := 0xDE48
0002a53f: call @dup_rr_data with return %0002a541

0002a541:
0002a547: R24 := R0
0002a54f: R0 := R20
0002a554: R30 := 0xDE54
0002a556: call @free_rr_data with return %0002a558

0002a558:
0002a55e: R23 := 31:0[R22] & 1
0002a567: R28 := 31:0[R22]
0002a56f: R0 := R19
0002a574: R30 := 0xDE64
0002a576: call @free_rr_data with return %0002a578

0002a578:
0002a57b: goto %0002a579

000216f7:
0002170b: #14157 := ~31:0[R28] = 0
00021705: when #14157 goto %00021703
0003adf5: goto %0002a71e

00021703:
00021713: R0 := mem[R24 + 8, el]:u64
00021718: R30 := 0xD760
0002171a: call @hlist_dump with return %0002171c

0002171c:
00021726: #14159 := 31:0[R26] = 0
00021720: when #14159 goto %0002171e
0003adf6: goto %0002a6f2

0002a71e:
0002a727: #18731 := ~31:0[R26] = 0
0002a721: when #18731 goto %0002a6f2
0003adf7: goto %0002171e

0002a6f2:
0002a6f9: R0 := mem[R19 + 0x10, el]:u32
0002a700: #18728 := 0xFFFFFFFFFFFFFE69 + extend:64[31:0[R0]]
0002a704: NF := 63:63[#18728]
0002a707: VF := 31:31[R0] & ~63:63[#18728]
0002a70a: ZF := #18728 = 0
0002a70d: CF := 31:31[R0] | 31:31[R0] & ~63:63[#18728] | ~63:63[#18728]
0002a71b: #18730 := ZF
0002a715: when #18730 goto %0002a460
0003adf8: goto %0002a064

0002171e:
0002172f: R0 := mem[R20, el]:u32
0002173b: #14161 := ~31:0[R0] = 0
00021735: when #14161 goto %00021733
0003adf9: goto %00021795

00021733:
00021743: R0 := mem[R31 + 0x90, el]:u64
0002174a: R0 := R0 >> 0x20
0002174f: R30 := 0xD93C
00021751: call @inet_ntoa with return %00021753

00021753:
0002175a: R4 := mem[R20 + 0x28, el]:u64
0002175e: R5 := mem[R20 + 0x30, el]:u64
00021766: R3 := R0
0002176c: R2 := 0x12000
00021773: R0 := 7
0002177a: R2 := R2 + 0xDC0
00021781: R1 := 1
00021786: R30 := 0xD958
00021788: call @__syslog_chk with return %0002178a

0002178a:
00021791: R0 := mem[R20, el]:u32
0002179d: #14169 := 31:0[R0] = 0
00021797: when #14169 goto %00021795
0003adfa: goto %0002a68c

0002a68c:
0002a692: R0 := mem[R24 + 8, el]:u64
0002a698: R26 := 0x12000
0002a6a0: R2 := mem[R31 + 0xC0, el]:u64
0002a6a7: R1 := R26 + 0xB58
0002a6ac: R30 := 0xD974
0002a6ae: call @http_parse_basic with return %0002a6b0

0002a6b0:
0002a6b5: #18721 := extend:64[31:0[R0]]
0002a6b9: NF := 63:63[#18721]
0002a6bc: VF := 31:31[R0] & ~63:63[#18721]
0002a6bf: ZF := #18721 = 0
0002a6c2: CF := 31:31[R0] | 31:31[R0] & ~63:63[#18721] | ~63:63[#18721]
0002a6d2: #18723 := (NF <> VF | ZF) <> 0
0002a6cc: when #18723 goto %0002a188
0003adfb: goto %0002a6d5

0002a188:
0002a18c: R0 := 0x27000
0002a194: R0 := mem[R0 + 0xF90, el]:u64
0002a19d: R0 := mem[R0, el]:u32
0002a1a9: #18567 := 31:0[R0] = 0
0002a1a3: when #18567 goto %0002a1a1
0003adfc: goto %0002a443

0002a443:
0002a449: R0 := mem[R21 + 0xF78, el]:u64
0002a452: R0 := mem[R0, el]:u32
0002a45d: #18638 := ~31:0[R0] = 0
0002a457: when #18638 goto %00029f06
0003adfd: goto %00029f22

00029f06:
00029f0a: R1 := 0x12000
00029f11: R0 := 1
00029f18: R1 := R1 + 0xE00
00029f1d: R30 := 0xDF44
00029f1f: call @__printf_chk with return %00029f21

00029f21:
00029f24: goto %00029f22

00029f22:
00029f2b: R0 := mem[R24 + 0x48, el]:u64
00029f32: R28 := 0
00029f39: R23 := 0
00029f3f: R24 := 0xFFFFFFFFFFFFFFFF
00029f44: R30 := 0xDADC
00029f46: call @gen_407_page with return %00029f48

00029f48:
00029f4e: R26 := R0
00029f53: R30 := 0xDAE4
00029f55: call @strlen with return %00029f57

00029f57:
00029f5d: R2 := R0
00029f66: R0 := mem[R31 + 0xBC, el]:u32
00029f6e: R1 := R26
00029f73: R30 := 0xDAF4
00029f75: call @write with return %00029f77

00029f77:
00029f7d: R0 := R26
00029f82: R30 := 0xDAFC
00029f84: call @free with return %00029f86

00029f86:
00029f8c: R0 := R20
00029f91: R30 := 0xDB04
00029f93: call @free_rr_data with return %00029f95

00029f95:
00029f9b: R0 := R19
00029fa0: R30 := 0xDB0C
00029fa2: call @free_rr_data with return %00029fa4

00029fa4:
00029fa6: goto %0002188c

0002a6d5:
0002a6db: R0 := mem[R21 + 0xF78, el]:u64
0002a6e4: R0 := mem[R0, el]:u32
0002a6ef: #18726 := ~31:0[R0] = 0
0002a6e9: when #18726 goto %0002a640
0003adfe: goto %0002a1a1

0002a640:
0002a646: R3 := mem[R31 + 0xC0, el]:u64
0002a64c: R1 := 0x12000
0002a653: R0 := 1
0002a65a: R1 := R1 + 0xDD0
0002a661: R4 := R3 + 0x64
0002a668: R2 := R3 + 0x32
0002a66d: R30 := 0xDDA0
0002a66f: call @__printf_chk with return %0002a671

0002a671:
0002a673: goto %0002a1a1

0002a1a1:
0002a1af: R1 := 0x27000
0002a1b7: R0 := mem[R20 + 8, el]:u64
0002a1bf: R1 := mem[R1 + 0xF50, el]:u64
0002a1c7: R28 := mem[R1, el]:u64
0002a1d3: #18571 := R28 = 0
0002a1cd: when #18571 goto %0002a1cb
0003adff: goto %0002a40a

0002a40a:
0003ae00: goto %0002a40c

0002a40c:
0002a413: R1 := mem[R28, el]:u64
0002a417: R2 := mem[R28 + 8, el]:u64
0002a41e: R3 := 0
0002a423: R30 := 0xD9AC
0002a425: call @hlist_mod with return %0002a427

0002a427:
0002a42d: R28 := mem[R28 + 0x18, el]:u64
0002a435: mem := mem with [R20 + 8, el]:u64 <- R0
0002a440: #18635 := ~R28 = 0
0002a43a: when #18635 goto %0002a40c
0003ae01: goto %0002a1cb

0002a1cb:
0002a1d9: R2 := 0x12000
0002a1df: R1 := 0x12000
0002a1e6: R2 := R2 + 0xE30
0002a1ed: R1 := R1 + 0xE40
0002a1f4: R3 := 1
0002a1f9: R30 := 0xD9D0
0002a1fb: call @hlist_mod with return %0002a1fd

0002a1fd:
0002a203: mem := mem with [R20 + 8, el]:u64 <- R0
0002a20a: R26 := R26 + 0xB58
0002a212: R0 := mem[R24 + 8, el]:u64
0002a217: goto %0002a215

0002a215:
0002a21e: R1 := R26
0002a223: R30 := 0xD9F8
0002a225: call @hlist_get with return %0002a227

0002a227:
0002a231: #18576 := ~R0 = 0
0002a22b: when #18576 goto %0002a229
0003ae02: goto %0002a252

0002a252:
0002a259: R0 := mem[R20, el]:u32
0002a264: #18582 := 31:0[R0] = 0
0002a25e: when #18582 goto %00021795
0003ae03: goto %0002a267

0002a267:
0002a26e: R0 := 31:0[R22] | 31:0[R27]
0002a279: #18586 := ~31:0[R0] = 0
0002a273: when #18586 goto %00021795
0003ae04: goto %0002a27c

0002a27c:
0002a282: R3 := mem[R31 + 0xC0, el]:u64
0002a28a: R2 := R19
0002a292: R1 := R20
0002a29a: R0 := R23
0002a29f: R30 := 0xDA20
0002a2a1: call @proxy_authenticate with return %0002a2a3

0002a2a3:
0002a2ad: #18597 := 31:0[R0] = 0
0002a2a7: when #18597 goto %0002a2a5
0003ae05: goto %0002a363

0002a2a5:
0002a2b6: R28 := 31:0[R0]
0002a2be: R0 := mem[R21 + 0xF78, el]:u64
0002a2c7: R0 := mem[R0, el]:u32
0002a2d3: #18603 := ~31:0[R0] = 0
0002a2cd: when #18603 goto %0002a2cb
0003ae06: goto %0002a2f1

0002a2cb:
0002a2d9: R1 := 0x12000
0002a2e0: R0 := 1
0002a2e7: R1 := R1 + 0xE58
0002a2ec: R30 := 0xDCCC
0002a2ee: call @__printf_chk with return %0002a2f0

0002a2f0:
0002a2f3: goto %0002a2f1

0002a2f1:
0002a2fa: R0 := R20
0002a2ff: R30 := 0xDB68
0002a301: call @free_rr_data with return %0002a303

0002a303:
0002a309: R0 := R19
0002a310: R22 := 0
0002a317: R23 := 0
0002a31d: R24 := 0xFFFFFFFFFFFFFFFF
0002a322: R30 := 0xDB7C
0002a324: call @free_rr_data with return %0002a326

0002a326:
0002a328: goto %0002188c

0002a363:
0002a36a: R0 := mem[R19 + 0x10, el]:u32
0002a371: #18616 := 0xFFFFFFFFFFFFFE69 + extend:64[31:0[R0]]
0002a375: NF := 63:63[#18616]
0002a378: VF := 31:31[R0] & ~63:63[#18616]
0002a37b: ZF := #18616 = 0
0002a37e: CF := 31:31[R0] | 31:31[R0] & ~63:63[#18616] | ~63:63[#18616]
0002a38d: #18618 := ZF
0002a387: when #18618 goto %0002a385
0003ae07: goto %0002a3ed

0002a385:
0002a395: R0 := R19
0002a39a: R30 := 0xDBD0
0002a39c: call @reset_rr_data with return %0002a39e

0002a39e:
0002a3a4: R1 := mem[R21 + 0xF78, el]:u64
0002a3ab: R22 := 0
0002a3b4: R0 := mem[R23, el]:u32
0002a3bb: R27 := 0
0002a3c4: R1 := mem[R1, el]:u32
0002a3d0: #18625 := 31:0[R1] = 0
0002a3ca: when #18625 goto %0002a3c8
0003ae08: goto %000217bb

0002a3ed:
0002a3f3: R1 := mem[R21 + 0xF78, el]:u64
0002a3fc: R1 := mem[R1, el]:u32
0002a407: #18632 := ~31:0[R1] = 0
0002a401: when #18632 goto %00029ff0
0003ae09: goto %0002a015

00029ff0:
00029ff4: R1 := 0x12000
00029ffb: R0 := 1
0002a002: R1 := R1 + 0xE78
0002a007: R30 := 0xDB48
0002a009: call @__printf_chk with return %0002a00b

0002a00b:
0002a012: R0 := mem[R19 + 0x10, el]:u32
0002a017: goto %0002a015

0002a015:
0002a01d: #18509 := 0xFFFFFFFFFFFFFE71 + extend:64[31:0[R0]]
0002a021: NF := 63:63[#18509]
0002a024: VF := 31:31[R0] & ~63:63[#18509]
0002a027: ZF := #18509 = 0
0002a02a: CF := 31:31[R0] | 31:31[R0] & ~63:63[#18509] | ~63:63[#18509]
0002a047: #18511 := (NF = VF & ~ZF) <> 0
0002a048: goto %0002a03f

0002a03f:
0002a041: when #18511 goto %0002a038
0002a042: goto %0002a03c

0002a03c:
0002a03d: R27 := 1
0002a044: goto %0002a040

0002a038:
0002a039: R27 := 0
0002a043: goto %0002a040

0002a040:
0002a050: #18512 := 0xFFFFFFFFFFFFFE69 + extend:64[31:0[R0]]
0002a054: NF := 63:63[#18512]
0002a057: VF := 31:31[R0] & ~63:63[#18512]
0002a05a: ZF := #18512 = 0
0002a05d: CF := 31:31[R0] | 31:31[R0] & ~63:63[#18512] | ~63:63[#18512]
0002a06c: #18514 := ~ZF <> 0
0002a066: when #18514 goto %0002a064
0003ae0a: goto %0002a460

0002a460:
0002a467: R0 := mem[R31 + 0x6C, el]:u32
0002a470: R26 := 31:0[R0] | 31:0[R27]
0002a47c: #18643 := ~31:0[R26] = 0
0002a476: when #18643 goto %0002a474
0003ae0b: goto %0002a592

0002a474:
0002a484: R0 := mem[R21 + 0xF78, el]:u64
0002a48d: R0 := mem[R0, el]:u32
0002a499: #18646 := ~31:0[R0] = 0
0002a493: when #18646 goto %0002a491
0003ae0c: goto %0002a4c9

0002a491:
0002a4a2: R2 := mem[R31 + 0x6C, el]:u32
0002a4ab: R3 := 31:0[R27]
0002a4b1: R1 := 0x12000
0002a4b8: R0 := 1
0002a4bf: R1 := R1 + 0xEA8
0002a4c4: R30 := 0xDF1C
0002a4c6: call @__printf_chk with return %0002a4c8

0002a4c8:
0002a4cb: goto %0002a4c9

0002a4c9:
0002a4d2: R0 := mem[R31 + 0xC0, el]:u64
0002a4de: #18652 := R0 = 0
0002a4d8: when #18652 goto %0002a4d6
0003ae0d: goto %0002a58b

0002a58b:
0002a58e: R30 := 0xDED4
0002a590: call @free with return %0002a4d6

0002a4d6:
0002a4e6: R0 := R19
0002a4eb: R30 := 0xDEDC
0002a4ed: call @free_rr_data with return %0002a4ef

0002a4ef:
0002a4f6: R0 := mem[R31 + 0xB8, el]:u32
0002a4fb: R30 := 0xDEE4
0002a4fd: call @close with return %0002a4ff

0002a4ff:
0002a505: R1 := mem[R31 + 0x78, el]:u64
0002a509: goto %00021520

0002a592:
0002a596: R0 := 0x27000
0002a59d: R1 := 1
0002a5a5: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R1]
0002a5ac: R27 := 0
0002a5b4: R0 := mem[R0 + 0xFF0, el]:u64
0002a5bb: R26 := 0x7FFF
0002a5c4: R0 := mem[R0, el]:u32
0002a5cf: #18701 := 31:0[R0] = 0
0002a5c9: when #18701 goto %0002a138
0003ae0e: goto %0002a0ce

0002a064:
0002a072: R0 := 0x27000
0002a079: R1 := 1
0002a081: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R1]
0002a088: #18515 := 0xFFFFFFFFFFFFFFFF + extend:64[31:0[R27]]
0002a08c: NF := 63:63[#18515]
0002a08f: VF := 31:31[R27] & ~63:63[#18515]
0002a092: ZF := #18515 = 0
0002a095: CF := 31:31[R27] | 31:31[R27] & ~63:63[#18515] | ~63:63[#18515]
0002a0a0: R0 := mem[R0 + 0xFF0, el]:u64
0002a0b8: #18518 := ZF
0002a0b9: goto %0002a0b0

0002a0b0:
0002a0b2: when #18518 goto %0002a0a9
0002a0b3: goto %0002a0ad

0002a0ad:
0002a0ae: R22 := 1
0002a0b5: goto %0002a0b1

0002a0a9:
0002a0aa: R22 := 31:0[R22]
0002a0b4: goto %0002a0b1

0002a0b1:
0002a0c1: R26 := 0x7FFF
0002a0ca: R0 := mem[R0, el]:u32
0002a0d6: #18520 := ~31:0[R0] = 0
0002a0d0: when #18520 goto %0002a0ce
0003ae0f: goto %0002a138

0002a0ce:
0002a0dc: R5 := 0x27000
0002a0e5: R3 := mem[R31 + 0xBC, el]:u32
0002a0ed: R2 := mem[R31 + 0xC0, el]:u64
0002a0f5: R4 := R23
0002a0fd: R5 := mem[R5 + 0xF98, el]:u64
0002a105: R1 := R19
0002a10d: R0 := R20
0002a115: R5 := mem[R5, el]:u64
0002a11a: R30 := 0xDA9C
0002a11c: call @scanner_hook with return %0002a11e

0002a11e:
0002a125: R26 := 31:0[R0]
0002a12d: R0 := 31:0[R0] & 1
0002a135: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0002a13a: goto %0002a138

0002a138:
0002a141: R0 := mem[R19 + 8, el]:u64
0002a147: R1 := 0x12000
0002a14e: R24 := R1 + 0x958
0002a154: R2 := 0x12000
0002a15c: R1 := R24
0002a163: R2 := R2 + 0xE30
0002a168: R30 := 0xD7B0
0002a16a: call @hlist_subcmp with return %0002a16c

0002a16c:
0002a172: mem := mem with [R31 + 0xA8, el]:u32 <- 31:0[R0]
0002a17d: #18563 := 31:0[R0] = 0
0002a177: when #18563 goto %00029ae0
0003ae10: goto %0002a180

00029ae0:
00029ae6: R0 := mem[R19 + 8, el]:u64
00029aee: R1 := R24
00029af4: R2 := 0x12000
00029afb: R3 := 1
00029b02: R2 := R2 + 0x950
00029b07: R30 := 0xDD3C
00029b09: call @hlist_mod with return %00029b0b

00029b0b:
00029b11: mem := mem with [R19 + 8, el]:u64 <- R0
00029b16: goto %00029b14

0002a180:
0002a186: R0 := mem[R19 + 8, el]:u64
0003ae11: goto %00029b14

00029b14:
00029b1b: R1 := 0x12000
00029b22: R28 := R1 + 0xBC0
00029b27: goto %00029b25

00029b25:
00029b2e: R1 := R28
00029b33: R30 := 0xD7E0
00029b35: call @hlist_get with return %00029b37

00029b37:
00029b41: #18364 := ~R0 = 0
00029b3b: when #18364 goto %00029b39
0003ae12: goto %00029b62

00029b62:
00029b68: R24 := R0
00029b71: R0 := mem[R19 + 0x10, el]:u32
00029b78: #18373 := 0xFFFFFFFFFFFFFE69 + extend:64[31:0[R0]]
00029b7c: NF := 63:63[#18373]
00029b7f: VF := 31:31[R0] & ~63:63[#18373]
00029b82: ZF := #18373 = 0
00029b85: CF := 31:31[R0] | 31:31[R0] & ~63:63[#18373] | ~63:63[#18373]
00029b94: #18375 := ZF
00029b8e: when #18375 goto %00029b8c
0003ae13: goto %00029bca

00029b8c:
00029b9c: R0 := mem[R19 + 8, el]:u64
00029ba4: R1 := R28
00029baa: R2 := 0x12000
00029bb1: R3 := 1
00029bb8: R2 := R2 + 0xEE0
00029bbd: R30 := 0xDE34
00029bbf: call @hlist_mod with return %00029bc1

00029bc1:
00029bc7: mem := mem with [R19 + 8, el]:u64 <- R0
00029bcc: goto %00029bca

00029bca:
00029bd4: R0 := mem[R31 + 0x88, el]:u32
00029be0: #18381 := ~31:0[R0] = 0
00029bda: when #18381 goto %00029bd8
0003ae14: goto %00029c4d

00029bd8:
00029be8: R0 := mem[R21 + 0xF78, el]:u64
00029bf0: R1 := mem[R31 + 0x78, el]:u64
00029bf9: R0 := mem[R0, el]:u32
00029c02: R2 := mem[R1, el]:u32
00029c0e: #18386 := ~31:0[R0] = 0
00029c08: when #18386 goto %00029c06
0003ae15: goto %0002a5d8

00029c06:
00029c14: R1 := 0x12000
00029c1b: R0 := 1
00029c22: R1 := R1 + 0xFD8
00029c27: R30 := 0xDF80
00029c29: call @__printf_chk with return %00029c2b

00029c2b:
00029c31: R0 := mem[R31 + 0x78, el]:u64
00029c39: R1 := R19
00029c42: R0 := mem[R0, el]:u32
00029c47: R30 := 0xDF90
00029c49: call @headers_send with return %00029c4b

00029c4b:
00029c55: #18392 := ~31:0[R0] = 0
00029c4f: when #18392 goto %00029c4d
0003ae16: goto %0002a5d4

0002a5d4:
0002a5d6: goto %0002184f

0002a5d8:
0002a5df: R0 := 31:0[R2]
0002a5e7: R1 := R19
0002a5ec: R30 := 0xDF68
0002a5ee: call @headers_send with return %0002a5f0

0002a5f0:
0002a5f9: #18708 := ~31:0[R0] = 0
0002a5f3: when #18708 goto %00029c4d
0003ae17: goto %0002a5fc

0002a5fc:
0002a5fe: goto %0002184f

00029c4d:
00029c61: #18393 := R20 = 0
00029c5b: when #18393 goto %00029c59
0003ae18: goto %00029e0a

00029e0a:
00029e11: R0 := mem[R20, el]:u32
00029e1c: #18463 := 31:0[R0] = 0
00029e16: when #18463 goto %00029c59
0003ae19: goto %00029e1f

00029e1f:
00029e25: R1 := mem[R20 + 0x28, el]:u64
00029e2b: R0 := 0x12000
00029e32: R0 := R0 + 0xF00
00029e37: R30 := 0xD818
00029e39: call @strcasecmp with return %00029e3b

00029e3b:
00029e42: R1 := 31:0[R0]
00029e4d: #18468 := ~31:0[R0] = 0
00029e47: when #18468 goto %00029c59
0003ae1a: goto %00029e50

00029e50:
00029e57: R0 := mem[R19 + 0x10, el]:u32
00029e5e: #18470 := 0xFFFFFFFFFFFFFF38 + extend:64[31:0[R0]]
00029e62: NF := 63:63[#18470]
00029e65: VF := 31:31[R0] & ~63:63[#18470]
00029e68: ZF := #18470 = 0
00029e6b: CF := 31:31[R0] | 31:31[R0] & ~63:63[#18470] | ~63:63[#18470]
00029e7a: #18472 := ZF
00029e74: when #18472 goto %00029e72
0003ae1b: goto %0002a5d2

00029e72:
00029e82: R0 := mem[R21 + 0xF78, el]:u64
00029e8b: R28 := 31:0[R1]
00029e94: R0 := mem[R0, el]:u32
00029ea0: #18478 := ~31:0[R0] = 0
00029e9a: when #18478 goto %00029e98
0003ae1c: goto %00029ebe

00029e98:
00029ea6: R1 := 0x12000
00029ead: R0 := 1
00029eb4: R1 := R1 + 0xF08
00029eb9: R30 := 0xDF30
00029ebb: call @__printf_chk with return %00029ebd

00029ebd:
00029ec0: goto %00029ebe

00029ebe:
00029ec9: R1 := mem[R31 + 0xB8, el]:u32
00029ece: R0 := mem[R31 + 0xBC, el]:u32
00029ed5: R23 := 0
00029edb: R24 := 0xFFFFFFFFFFFFFFFF
00029ee0: R30 := 0xDE88
00029ee2: call @tunnel with return %00029ee4

00029ee4:
00029eea: R0 := R20
00029eef: R30 := 0xDE90
00029ef1: call @free_rr_data with return %00029ef3

00029ef3:
00029ef9: R0 := R19
00029efe: R30 := 0xDE98
00029f00: call @free_rr_data with return %00029f02

00029f02:
00029f04: goto %0002188c

0002a5d2:
0003ae1d: goto %00029c59

00029c59:
00029c6d: #18394 := ~~1:1[R26]
00029c67: when #18394 goto %00029c65
0003ae1e: goto %00029caa

00029c65:
00029c75: R0 := mem[R31 + 0x78, el]:u64
00029c7d: R3 := R19
00029c85: R1 := mem[R31 + 0xD0, el]:u64
00029c8d: R2 := R20
00029c96: R0 := mem[R0, el]:u32
00029c9f: R1 := mem[R1, el]:u32
00029ca4: R30 := 0xDD60
00029ca6: call @http_body_send with return %00029ca8

00029ca8:
00029cb2: #18405 := ~31:0[R0] = 0
00029cac: when #18405 goto %00029caa
0003ae1f: goto %0002184f

00029caa:
00029cba: R0 := mem[R19 + 8, el]:u64
00029cc0: R1 := 0x12000
00029cc7: R2 := R1 + 0xE30
00029ccd: R1 := 0x12000
00029cd4: R1 := R1 + 0xE40
00029cd9: R30 := 0xD84C
00029cdb: call @hlist_subcmp with return %00029cdd

00029cdd:
00029ce4: R1 := 31:0[R0]
00029cf0: #18410 := ~31:0[R0] = 0
00029cea: when #18410 goto %00029ce8
0003ae20: goto %00029dc5

00029ce8:
00029cf8: R0 := R20
00029d00: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R1]
00029d05: R30 := 0xDDC4
00029d07: call @free_rr_data with return %00029d09

00029d09:
00029d0f: R0 := R19
00029d14: R30 := 0xDDCC
00029d16: call @free_rr_data with return %00029d18

00029d18:
00029d1f: R0 := mem[R31 + 0xA8, el]:u32
00029d28: R1 := mem[R31 + 0x88, el]:u32
00029d34: #18419 := 31:0[R0] = 0
00029d2e: when #18419 goto %00029d2c
0003ae21: goto %00029d4b

00029d4b:
00029d52: R0 := mem[R31 + 0xB8, el]:u32
00029d5a: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R1]
00029d5f: R30 := 0xDDE4
00029d61: call @so_closed with return %00029d63

00029d63:
00029d6a: R1 := mem[R31 + 0x88, el]:u32
00029d75: #18447 := ~31:0[R0] = 0
00029d6f: when #18447 goto %00029d2c
0003ae22: goto %00029d78

00029d78:
00029d7f: R0 := mem[R31 + 0xBC, el]:u32
00029d87: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R1]
00029d8c: R30 := 0xDDF8
00029d8e: call @so_closed with return %00029d90

00029d90:
00029d94: R2 := 0x27000
00029d9d: R1 := mem[R31 + 0x88, el]:u32
00029da5: R2 := mem[R2 + 0xFD0, el]:u64
00029dae: R2 := mem[R2, el]:u32
00029db7: R26 := 31:0[R0] | 31:0[R2]
00029dc2: #18455 := 31:0[R26] = 0
00029dbc: when #18455 goto %00021647
0003ae23: goto %00029d2c

00029d2c:
00029d3d: R28 := 31:0[R1]
00029d45: R23 := 31:0[R22] & 1
00029d49: goto %0002188c

00021647:
00021654: R30 := 0xDCA4
00021656: call @new_rr_data with return %00021658

00021658:
0002165e: R20 := R0
00021663: goto %00021661

00029dc5:
00029dcb: R0 := mem[R21 + 0xF78, el]:u64
00029dd4: R28 := 31:0[R1]
00029ddd: R0 := mem[R0, el]:u32
00029de9: #18461 := ~31:0[R0] = 0
00029de3: when #18461 goto %00029de1
0003ae24: goto %00029a17

00029de1:
00029def: R1 := 0x12000
00029df6: R0 := 1
00029dfd: R1 := R1 + 0xF30
00029e02: R30 := 0xDDB4
00029e04: call @__printf_chk with return %00029e06

00029e06:
00029e08: goto %00029a17

00029a17:
00029a20: R0 := R20
00029a25: R30 := 0xD86C
00029a27: call @free_rr_data with return %00029a29

00029a29:
00029a2f: R0 := R19
00029a36: R23 := 0
00029a3c: R24 := 0xFFFFFFFFFFFFFFFF
00029a41: R30 := 0xD87C
00029a43: call @free_rr_data with return %0002188c

00029b39:
00029b49: R0 := mem[R19 + 8, el]:u64
00029b51: R1 := R28
00029b56: R30 := 0xD7D4
00029b58: call @hlist_del with return %00029b5a

00029b5a:
00029b60: mem := mem with [R19 + 8, el]:u64 <- R0
0003ae25: goto %00029b25

0002a229:
0002a239: R0 := mem[R24 + 8, el]:u64
0002a241: R1 := R26
0002a246: R30 := 0xD9EC
0002a248: call @hlist_del with return %0002a24a

0002a24a:
0002a250: mem := mem with [R24 + 8, el]:u64 <- R0
0003ae26: goto %0002a215

00021795:
000217a5: R1 := mem[R21 + 0xF78, el]:u64
000217ae: R0 := mem[R23, el]:u32
000217b7: R1 := mem[R1, el]:u32
000217c3: #14173 := ~31:0[R1] = 0
000217bd: when #14173 goto %000217bb
0003ae27: goto %0002a3c8

000217bb:
000217cc: R2 := 31:0[R0]
000217d2: R1 := 0x12000
000217d9: R0 := 1
000217e0: R1 := R1 + 0xFD8
000217e5: R30 := 0xDBFC
000217e7: call @__printf_chk with return %000217e9

000217e9:
000217ef: R0 := mem[R20 + 8, el]:u64
000217f4: R30 := 0xDC04
000217f6: call @hlist_dump with return %000217f8

000217f8:
000217ff: R0 := mem[R23, el]:u32
00021807: R1 := R20
0002180c: R30 := 0xDC10
0002180e: call @headers_send with return %00021810

00021810:
0002181a: #14182 := ~31:0[R0] = 0
00021814: when #14182 goto %00021812
0003ae28: goto %0002a688

0002a688:
0002a68a: goto %0002184f

0002a3c8:
0002a3d8: R1 := R20
0002a3dd: R30 := 0xD72C
0002a3df: call @headers_send with return %0002a3e1

0002a3e1:
0002a3ea: #18629 := 31:0[R0] = 0
0002a3e4: when #18629 goto %0002184f
0003ae29: goto %00021812

00021812:
00021822: R1 := mem[R31 + 0xC8, el]:u64
0002182a: R3 := R19
00021833: R0 := mem[R23, el]:u32
0002183b: R2 := R20
00021844: R1 := mem[R1, el]:u32
00021849: R30 := 0xD748
0002184b: call @http_body_send with return %0002184d

0002184d:
00021857: #14192 := 31:0[R0] = 0
00021851: when #14192 goto %0002184f
0003ae2a: goto %0002a675

0002184f:
0002185f: R0 := R20
00021864: R30 := 0xDD6C
00021866: call @free_rr_data with return %00021868

00021868:
0002186e: R0 := R19
00021875: R23 := 0
0002187c: R28 := 0
00021882: R24 := 0xFFFFFFFFFFFFFFFF
00021887: R30 := 0xDD80
00021889: call @free_rr_data with return %0002188b

0002188b:
0002188e: goto %0002188c

0002188c:
00021899: #14199 := R25 = 0
00021893: when #14199 goto %00021891
0003ae2b: goto %0002a579

0002a579:
0002a582: R0 := R25
0002a587: R30 := 0xD888
0002a589: call @free with return %00021891

00021891:
000218a1: R0 := mem[R21 + 0xF78, el]:u64
000218aa: R0 := mem[R0, el]:u32
000218b6: #14202 := ~31:0[R0] = 0
000218b0: when #14202 goto %000218ae
0003ae2c: goto %0002193a

000218ae:
000218bc: R1 := 0x27000
000218c5: R0 := mem[R31 + 0xB8, el]:u32
000218cd: R1 := mem[R1 + 0xF90, el]:u64
000218d6: R19 := mem[R1, el]:u32
000218db: R30 := 0xDB94
000218dd: call @so_closed with return %000218df

000218df:
000218e6: R3 := 31:0[R22]
000218ef: R5 := 31:0[R0]
000218f8: R4 := 31:0[R19]
00021901: R2 := 31:0[R28]
00021907: R1 := 0x12000
0002190e: R0 := 1
00021915: R1 := R1 + 0xF50
0002191a: R30 := 0xDBB4
0002191c: call @__printf_chk with return %0002191e

0002191e:
00021922: R1 := 0x12000
00021929: R0 := 1
00021930: R1 := R1 + 0xF90
00021935: R30 := 0xDBC4
00021937: call @__printf_chk with return %00021939

00021939:
0002193c: goto %0002193a

0002193a:
00021947: #14218 := 31:0[R23] = 0
00021941: when #14218 goto %0002193f
0003ae2d: goto %0002a61d

0002a61d:
0002a621: R0 := 0x27000
0002a629: R0 := mem[R0 + 0xF90, el]:u64
0002a632: R0 := mem[R0, el]:u32
0002a63d: #18714 := 31:0[R0] = 0
0002a637: when #18714 goto %0002a32a
0003ae2e: goto %0002193f

0002a32a:
0002a331: R0 := mem[R31 + 0xB8, el]:u32
0002a336: R30 := 0xDCD8
0002a338: call @so_closed with return %0002a33a

0002a33a:
0002a343: #18611 := ~31:0[R0] = 0
0002a33d: when #18611 goto %0002193f
0003ae2f: goto %0002a346

0002a346:
0002a34c: R21 := mem[R21 + 0xF78, el]:u64
0002a355: R0 := mem[R21, el]:u32
0002a360: #18614 := ~31:0[R0] = 0
0002a35a: when #18614 goto %00029a45
0003ae30: goto %00029a70

00029a45:
00029a4d: R3 := mem[R31 + 0xB8, el]:u32
00029a52: R2 := mem[R31 + 0xBC, el]:u32
00029a58: R1 := 0x12000
00029a5f: R0 := 1
00029a66: R1 := R1 + 0xFA8
00029a6b: R30 := 0xDEB8
00029a6d: call @__printf_chk with return %00029a6f

00029a6f:
00029a72: goto %00029a70

00029a70:
00029a77: R0 := 0x27000
00029a7f: R20 := mem[R0 + 0xF60, el]:u64
00029a87: R0 := R20
00029a8c: R30 := 0xDCF8
00029a8e: call @pthread_mutex_lock with return %00029a90

00029a90:
00029a94: R0 := 0x27000
00029a9c: R1 := extend:64[mem[R31 + 0xB8, el]:u32]
00029aa4: R2 := mem[R31 + 0xC0, el]:u64
00029aac: R19 := mem[R0 + 0xFC0, el]:u64
00029ab4: R0 := mem[R19, el]:u64
00029ab9: R30 := 0xDD10
00029abb: call @plist_add with return %00029abd

00029abd:
00029ac3: R1 := R0
00029acb: R0 := R20
00029ad3: mem := mem with [R19, el]:u64 <- R1
00029ad8: R30 := 0xDD20
00029ada: call @pthread_mutex_unlock with return %00029adc

00029adc:
00029ade: goto %00021968

0002193f:
0002194f: R0 := mem[R31 + 0xC0, el]:u64
00021954: R30 := 0xD8B0
00021956: call @free with return %00021958

00021958:
0002195f: R0 := mem[R31 + 0xB8, el]:u32
00021964: R30 := 0xD8B8
00021966: call @close with return %00021968

00021968:
0002196c: R0 := 0x27000
00021974: R0 := mem[R0 + 0xFB8, el]:u64
0002197c: R1 := mem[R31 + 0xD8, el]:u64
00021984: R2 := mem[R0, el]:u64
0002198c: #14227 := 1 + ~R2 + R1
00021990: NF := 63:63[#14227]
00021993: VF := 63:63[R1] & 63:63[~R2] & ~63:63[#14227] | ~63:63[R1] &
          ~63:63[~R2] & 63:63[#14227]
00021996: ZF := #14227 = 0
00021999: CF := 63:63[R1] & 63:63[~R2] | 63:63[~R2] & ~63:63[#14227] |
          63:63[R1] & ~63:63[#14227]
0002199d: R1 := #14227
000219a3: R2 := 0
000219af: #14232 := ~ZF <> 0
000219a9: when #14232 goto %000219a7
0003ae31: goto %00029910

000219a7:
000219b4: R30 := 0xDF9C
000219b6: call @__stack_chk_fail with return %000219b8

000219b8:
0003ae32: call @prepare_http_connect with noreturn

00029910:
00029916: R0 := R24
0002991f: R19 := mem[R31 + 0x10, el]:u64
00029923: R20 := mem[R31 + 0x18, el]:u64
0002992c: R21 := mem[R31 + 0x20, el]:u64
00029930: R22 := mem[R31 + 0x28, el]:u64
00029939: R23 := mem[R31 + 0x30, el]:u64
0002993d: R24 := mem[R31 + 0x38, el]:u64
00029946: R25 := mem[R31 + 0x40, el]:u64
0002994a: R26 := mem[R31 + 0x48, el]:u64
00029953: R27 := mem[R31 + 0x50, el]:u64
00029957: R28 := mem[R31 + 0x58, el]:u64
00029961: R29 := mem[R31, el]:u64
00029965: R30 := mem[R31 + 8, el]:u64
00029968: R31 := R31 + 0xE0
0002996d: call R30 with noreturn

0002a675:
0002a67b: R24 := R19
0002a682: R26 := 1
0002a686: goto %00021697

0003ae33: sub forward_tunnel(forward_tunnel_result)
0003b3bb: forward_tunnel_result :: out u32 = low:32[R0]

00021d0a:
00021d11: #14325 := R31 - 0x50
00021d16: mem := mem with [#14325, el]:u64 <- R29
00021d1b: mem := mem with [#14325 + 8, el]:u64 <- R30
00021d1f: R31 := #14325
00021d26: R29 := R31
00021d2e: #14330 := R31 + 0x10
00021d33: mem := mem with [#14330, el]:u64 <- R19
00021d38: mem := mem with [#14330 + 8, el]:u64 <- R20
00021d3e: R20 := 0x27000
00021d46: R1 := mem[R20 + 0xFB8, el]:u64
00021d4e: #14336 := R31 + 0x20
00021d53: mem := mem with [#14336, el]:u64 <- R21
00021d58: mem := mem with [#14336 + 8, el]:u64 <- R22
00021d61: R22 := mem[R0, el]:u32
00021d69: R2 := mem[R1, el]:u64
00021d71: mem := mem with [R31 + 0x48, el]:u64 <- R2
00021d77: R2 := 0
00021d7f: #14343 := R31 + 0x30
00021d84: mem := mem with [#14343, el]:u64 <- R23
00021d89: mem := mem with [#14343 + 8, el]:u64 <- R24
00021d92: R23 := mem[R0 + 8, el]:u64
00021d96: R24 := mem[R0 + 0x10, el]:u64
00021d9b: R30 := 0xE294
00021d9d: call @new_auth with return %00021d9f

00021d9f:
00021da5: R21 := R0
00021daa: R30 := 0xE29C
00021dac: call @proxy_connect with return %00021dae

00021dae:
00021db5: R19 := 31:0[R0]
00021dbc: #14352 := extend:64[31:0[R0]]
00021dc0: NF := 63:63[#14352]
00021dc3: VF := 31:31[R0] & ~63:63[#14352]
00021dc6: ZF := #14352 = 0
00021dc9: CF := 31:31[R0] | 31:31[R0] & ~63:63[#14352] | ~63:63[#14352]
00021dda: #14354 := (NF <> VF | ZF) <> 0
00021dd4: when #14354 goto %00021dd2
0003ae34: goto %000295a9

000295a9:
000295ae: R0 := R24 >> 0x20
000295b3: R30 := 0xE2B0
000295b5: call @inet_ntoa with return %000295b7

000295b7:
000295bd: R4 := R23
000295c5: R3 := R0
000295cb: R2 := 0x13000
000295d2: R0 := 7
000295d9: R2 := R2 + 0x110
000295e0: R1 := 1
000295e5: R30 := 0xE2CC
000295e7: call @__syslog_chk with return %000295e9

000295e9:
000295ed: R0 := 0x27000
000295f5: R0 := mem[R0 + 0xF78, el]:u64
000295fe: R0 := mem[R0, el]:u32
00029609: #18236 := ~31:0[R0] = 0
00029603: when #18236 goto %0002954d
0003ae35: goto %0002960c

0002954d:
00029554: R3 := 31:0[R22]
0002955c: R2 := R23
00029562: R1 := 0x13000
00029569: R0 := 1
00029570: R1 := R1 + 0x120
00029575: R30 := 0xE358
00029577: call @__printf_chk with return %00029579

00029579:
0002957f: R2 := R23
00029587: R1 := R21
00029590: R0 := 31:0[R19]
00029595: R30 := 0xE368
00029597: call @prepare_http_connect with return %00029599

00029599:
000295a2: #18226 := 31:0[R0] = 0
0002959c: when #18226 goto %00021dd2
0003ae36: goto %000295a5

000295a5:
000295a7: goto %00029530

0002960c:
00029612: R2 := R23
0002961a: R1 := R21
00029623: R0 := 31:0[R19]
00029628: R30 := 0xE2EC
0002962a: call @prepare_http_connect with return %0002962c

0002962c:
00029635: #18246 := ~31:0[R0] = 0
0002962f: when #18246 goto %00029530
0003ae37: goto %00021dd2

00029530:
00029537: R1 := 31:0[R19]
00029540: R0 := 31:0[R22]
00029545: R30 := 0xE33C
00029547: call @tunnel with return %00029549

00029549:
0002954b: goto %00021dd2

00021dd2:
00021de3: R0 := 31:0[R19]
00021de8: R30 := 0xE2F8
00021dea: call @close with return %00021dec

00021dec:
00021df3: R0 := 31:0[R22]
00021df8: R30 := 0xE300
00021dfa: call @close with return %00021dfc

00021dfc:
00021e02: R20 := mem[R20 + 0xFB8, el]:u64
00021e0a: R0 := mem[R31 + 0x48, el]:u64
00021e12: R1 := mem[R20, el]:u64
00021e1a: #14367 := 1 + ~R1 + R0
00021e1e: NF := 63:63[#14367]
00021e21: VF := 63:63[R0] & 63:63[~R1] & ~63:63[#14367] | ~63:63[R0] &
          ~63:63[~R1] & 63:63[#14367]
00021e24: ZF := #14367 = 0
00021e27: CF := 63:63[R0] & 63:63[~R1] | 63:63[~R1] & ~63:63[#14367] |
          63:63[R0] & ~63:63[#14367]
00021e2b: R0 := #14367
00021e31: R1 := 0
00021e3d: #14372 := ~ZF <> 0
00021e37: when #14372 goto %00021e35
0003ae38: goto %000294ec

00021e35:
00021e42: R30 := 0xE374
00021e44: call @__stack_chk_fail with return %00021e46

00021e46:
0003ae39: call @magic_auth_detect with noreturn

000294ec:
000294f2: R0 := R21
000294fb: R19 := mem[R31 + 0x10, el]:u64
000294ff: R20 := mem[R31 + 0x18, el]:u64
00029508: R21 := mem[R31 + 0x20, el]:u64
0002950c: R22 := mem[R31 + 0x28, el]:u64
00029515: R23 := mem[R31 + 0x30, el]:u64
00029519: R24 := mem[R31 + 0x38, el]:u64
00029523: R29 := mem[R31, el]:u64
00029527: R30 := mem[R31 + 8, el]:u64
0002952a: R31 := R31 + 0x50
0002952e: call @free with noreturn

0003ae3a: sub frame_dummy(frame_dummy_result)
0003b3bc: frame_dummy_result :: out u32 = low:32[R0]

000310e1:
000310e3: call @register_tm_clones with noreturn

0003ae3b: sub fread(fread_ptr, fread_size, fread_nmemb, fread_stream, fread_result)
0003b3bd: fread_ptr :: in out u64 = R0
0003b3be: fread_size :: in u64 = R1
0003b3bf: fread_nmemb :: in u64 = R2
0003b3c0: fread_stream :: in out u64 = R3
0003b3c1: fread_result :: out u64 = R0

00012887:
00032ec7: R16 := 0x27000
00032ecf: R17 := mem[R16 + 0xE40, el]:u64
00032ed6: R16 := R16 + 0xE40
00032edb: call R17 with noreturn

0003ae3c: sub free(free_ptr)
0003b3c2: free_ptr :: in out u64 = R0

0001405a:
00032ef9: R16 := 0x27000
00032f01: R17 := mem[R16 + 0xE50, el]:u64
00032f08: R16 := R16 + 0xE50
00032f0d: call R17 with noreturn

0003ae3d: sub free_rr_data(free_rr_data_result)
0003b3c3: free_rr_data_result :: out u32 = low:32[R0]

000147db:
000147e5: #5912 := R0 = 0
000147df: when #5912 goto %000147dd
0003ae3e: goto %00014935

000147dd:
000147ea: call R30 with noreturn

00014935:
0001493c: #5956 := R31 - 0x30
00014941: mem := mem with [#5956, el]:u64 <- R29
00014946: mem := mem with [#5956 + 8, el]:u64 <- R30
0001494a: R31 := #5956
00014951: R29 := R31
00014959: #5961 := R31 + 0x10
0001495e: mem := mem with [#5961, el]:u64 <- R19
00014963: mem := mem with [#5961 + 8, el]:u64 <- R20
0001496b: R19 := R0
00014973: R20 := mem[R0 + 8, el]:u64
0001497f: #5967 := R20 = 0
00014979: when #5967 goto %00014977
0003ae3f: goto %00014a68

00014a68:
00014a6e: mem := mem with [R31 + 0x20, el]:u64 <- R21
0003ae40: goto %00014a70

00014a70:
00014a76: R21 := R20
00014a7e: R20 := mem[R20 + 0x18, el]:u64
00014a86: R0 := mem[R21, el]:u64
00014a8b: R30 := 0x5650
00014a8d: call @free with return %00014a8f

00014a8f:
00014a95: R0 := mem[R21 + 8, el]:u64
00014a9a: R30 := 0x5658
00014a9c: call @free with return %00014a9e

00014a9e:
00014aa4: R0 := R21
00014aa9: R30 := 0x5660
00014aab: call @free with return %00014aad

00014aad:
00014ab6: #5996 := ~R20 = 0
00014ab0: when #5996 goto %00014a70
0003ae41: goto %00014ab9

00014ab9:
00014abf: R21 := mem[R31 + 0x20, el]:u64
0003ae42: goto %00014977

00014977:
00014987: R0 := mem[R19 + 0x28, el]:u64
00014993: #5969 := R0 = 0
0001498d: when #5969 goto %0001498b
0003ae43: goto %00014a61

00014a61:
00014a64: R30 := 0x5674
00014a66: call @free with return %0001498b

0001498b:
0001499b: R0 := mem[R19 + 0x30, el]:u64
000149a7: #5971 := R0 = 0
000149a1: when #5971 goto %0001499f
0003ae44: goto %00014a5a

00014a5a:
00014a5d: R30 := 0x5680
00014a5f: call @free with return %0001499f

0001499f:
000149af: R0 := mem[R19 + 0x38, el]:u64
000149bb: #5973 := R0 = 0
000149b5: when #5973 goto %000149b3
0003ae45: goto %00014a53

00014a53:
00014a56: R30 := 0x568C
00014a58: call @free with return %000149b3

000149b3:
000149c3: R0 := mem[R19 + 0x40, el]:u64
000149cf: #5975 := R0 = 0
000149c9: when #5975 goto %000149c7
0003ae46: goto %00014a4c

00014a4c:
00014a4f: R30 := 0x5698
00014a51: call @free with return %000149c7

000149c7:
000149d7: R0 := mem[R19 + 0x48, el]:u64
000149e3: #5977 := R0 = 0
000149dd: when #5977 goto %000149db
0003ae47: goto %00014a45

00014a45:
00014a48: R30 := 0x56A4
00014a4a: call @free with return %000149db

000149db:
000149eb: R0 := mem[R19 + 0x50, el]:u64
000149f7: #5979 := R0 = 0
000149f1: when #5979 goto %000149ef
0003ae48: goto %00014a3e

00014a3e:
00014a41: R30 := 0x56B0
00014a43: call @free with return %000149ef

000149ef:
000149ff: R0 := mem[R19 + 0x58, el]:u64
00014a0b: #5981 := R0 = 0
00014a05: when #5981 goto %00014a03
0003ae49: goto %00014a37

00014a37:
00014a3a: R30 := 0x56BC
00014a3c: call @free with return %00014a03

00014a03:
00014a13: R0 := R19
00014a1c: R19 := mem[R31 + 0x10, el]:u64
00014a20: R20 := mem[R31 + 0x18, el]:u64
00014a2a: R29 := mem[R31, el]:u64
00014a2e: R30 := mem[R31 + 8, el]:u64
00014a31: R31 := R31 + 0x30
00014a35: call @free with noreturn

0003ae4a: sub freeaddrinfo(freeaddrinfo_result)
0003b3c4: freeaddrinfo_result :: out u32 = low:32[R0]

00017938:
000328b9: R16 := 0x27000
000328c1: R17 := mem[R16 + 0xC50, el]:u64
000328c8: R16 := R16 + 0xC50
000328cd: call R17 with noreturn

0003ae4b: sub from_base64(from_base64_result)
0003b3c5: from_base64_result :: out u32 = low:32[R0]

0000fd83:
0000fd87: R3 := 0x28000
0000fd8e: R3 := R3 + 0x10
0000fd96: R7 := R0
0000fd9d: R3 := R3 + 0x260
0000fda4: R8 := 0
0000fda9: goto %0000fda7

0000fda7:
0000fdb1: R2 := pad:32[mem[R1]]
0000fdbd: #425 := ~~7:7[R2]
0000fdb7: when #425 goto %0000fdb5
0003ae4c: goto %0002ca48

0002ca48:
0002ca4e: #19704 := R2 << 2
0002ca54: R0 := mem[R3 + #19704, el]:u32
0002ca5b: #19705 := 1 + extend:64[31:0[R0]]
0002ca5f: NF := 63:63[#19705]
0002ca62: VF := ~31:31[R0] & 63:63[#19705]
0002ca65: ZF := #19705 = 0
0002ca68: CF := 31:31[R0] & ~63:63[#19705]
0002ca77: #19707 := ZF
0002ca71: when #19707 goto %0002ca6f
0003ae4d: goto %0002ca7e

0002ca7e:
0002ca85: R2 := pad:32[mem[R1 + 1]]
0002ca90: #19708 := ~~7:7[R2]
0002ca8a: when #19708 goto %0000fdb5
0003ae4e: goto %0002ca93

0002ca93:
0002ca9a: R4 := 31:0[R2]
0002caa2: #19713 := R4 << 2
0002caa8: R6 := mem[R3 + #19713, el]:u32
0002caaf: #19714 := 1 + extend:64[31:0[R6]]
0002cab3: NF := 63:63[#19714]
0002cab6: VF := ~31:31[R6] & 63:63[#19714]
0002cab9: ZF := #19714 = 0
0002cabc: CF := 31:31[R6] & ~63:63[#19714]
0002caca: #19716 := ZF
0002cac4: when #19716 goto %0000fdb5
0003ae4f: goto %0002cacd

0002cacd:
0002cad4: R2 := pad:32[mem[R1 + 2]]
0002cadf: #19717 := ~~7:7[R2]
0002cad9: when #19717 goto %0000fdb5
0003ae50: goto %0002cae2

0002cae2:
0002cae7: #19718 := 0xFFFFFFFFFFFFFFC3 + extend:64[31:0[R2]]
0002caeb: NF := 63:63[#19718]
0002caee: VF := 31:31[R2] & ~63:63[#19718]
0002caf1: ZF := #19718 = 0
0002caf4: CF := 31:31[R2] | 31:31[R2] & ~63:63[#19718] | ~63:63[#19718]
0002cb03: #19720 := ZF
0002cafd: when #19720 goto %0002cafb
0003ae51: goto %0002ccc6

0002ccc6:
0002cccd: R5 := 31:0[R2]
0002ccd5: #19771 := R5 << 2
0002ccdb: R5 := mem[R3 + #19771, el]:u32
0002cce2: #19772 := 1 + extend:64[31:0[R5]]
0002cce6: NF := 63:63[#19772]
0002cce9: VF := ~31:31[R5] & 63:63[#19772]
0002ccec: ZF := #19772 = 0
0002ccef: CF := 31:31[R5] & ~63:63[#19772]
0002ccfd: #19774 := ZF
0002ccf7: when #19774 goto %0000fdb5
0003ae52: goto %0002cafb

0002cafb:
0002cb0c: R5 := pad:32[mem[R1 + 3]]
0002cb17: #19721 := ~~7:7[R5]
0002cb11: when #19721 goto %0000fdb5
0003ae53: goto %0002cb1a

0000fdb5:
0000fdc4: R0 := 0xFFFFFFFFFFFFFFFF
0000fdc9: call R30 with noreturn

0002cb1a:
0002cb1f: #19722 := 0xFFFFFFFFFFFFFFC3 + extend:64[31:0[R5]]
0002cb23: NF := 63:63[#19722]
0002cb26: VF := 31:31[R5] & ~63:63[#19722]
0002cb29: ZF := #19722 = 0
0002cb2c: CF := 31:31[R5] | 31:31[R5] & ~63:63[#19722] | ~63:63[#19722]
0002cb3b: #19724 := ZF
0002cb35: when #19724 goto %0002cb33
0003ae54: goto %0002cc8c

0002cc8c:
0002cc93: R9 := 31:0[R5]
0002cc9b: #19763 := R9 << 2
0002cca1: R9 := mem[R3 + #19763, el]:u32
0002cca8: #19764 := 1 + extend:64[31:0[R9]]
0002ccac: NF := 63:63[#19764]
0002ccaf: VF := ~31:31[R9] & 63:63[#19764]
0002ccb2: ZF := #19764 = 0
0002ccb5: CF := 31:31[R9] & ~63:63[#19764]
0002ccc3: #19766 := ZF
0002ccbd: when #19766 goto %0000fdcb
0003ae55: goto %0002cb33

0000fdcb:
0000fdd2: R0 := 31:0[R9]
0000fdd7: call R30 with noreturn

0002cb33:
0002cb43: R6 := extend:64[31:4[R6]]
0002cb4a: R1 := R1 + 4
0002cb53: R0 := 31:0[R6] | 31:0[R0] << 2
0002cb5b: mem := mem with [R7] <- low:8[31:0[R0]]
0002cb62: #19729 := 0xFFFFFFFFFFFFFFC3 + extend:64[31:0[R2]]
0002cb66: NF := 63:63[#19729]
0002cb69: VF := 31:31[R2] & ~63:63[#19729]
0002cb6c: ZF := #19729 = 0
0002cb6f: CF := 31:31[R2] | 31:31[R2] & ~63:63[#19729] | ~63:63[#19729]
0002cb7e: #19731 := ~ZF <> 0
0002cb78: when #19731 goto %0002cb76
0003ae56: goto %0002cc79

0002cc79:
0002cc7e: R7 := R7 + 1
0002cc86: R8 := extend:64[31:0[R8]] + 1
0002cc8a: goto %0002cc25

0002cb76:
0002cb86: #19733 := R4 << 2
0002cb8c: R0 := mem[R3 + #19733, el]:u32
0002cb93: #19734 := 0xFFFFFFFFFFFFFFC3 + extend:64[31:0[R5]]
0002cb97: NF := 63:63[#19734]
0002cb9a: VF := 31:31[R5] & ~63:63[#19734]
0002cb9d: ZF := #19734 = 0
0002cba0: CF := 31:31[R5] | 31:31[R5] & ~63:63[#19734] | ~63:63[#19734]
0002cbab: #19736 := R2 << 2
0002cbb1: R4 := mem[R3 + #19736, el]:u32
0002cbb9: R4 := extend:64[31:2[R4]]
0002cbc2: R0 := 31:0[R4] | 31:0[R0] << 4
0002cbca: mem := mem with [R7 + 1] <- low:8[31:0[R0]]
0002cbd6: #19742 := ZF
0002cbd0: when #19742 goto %0002cbce
0003ae57: goto %0002cbe0

0002cbce:
0002cbde: R0 := extend:64[31:0[R8]] + 2
0003ae58: goto %0002ca6f

0002ca6f:
0002ca7c: call R30 with noreturn

0002cbe0:
0002cbe7: R4 := 31:0[R5]
0002cbef: #19747 := R2 << 2
0002cbf5: R0 := mem[R3 + #19747, el]:u32
0002cbfd: R8 := extend:64[31:0[R8]] + 3
0002cc04: R7 := R7 + 3
0002cc0c: #19749 := R4 << 2
0002cc12: R2 := mem[R3 + #19749, el]:u32
0002cc1b: R0 := 31:0[R2] | 31:0[R0] << 6
0002cc23: mem := mem with [R7 - 1] <- low:8[31:0[R0]]
0003ae59: goto %0002cc25

0002cc25:
0002cc2c: R0 := pad:32[mem[R1]]
0002cc33: #19753 := 0xFFFFFFFFFFFFFFC3 + extend:64[31:0[R5]]
0002cc37: NF := 63:63[#19753]
0002cc3a: VF := 31:31[R5] & ~63:63[#19753]
0002cc3d: ZF := #19753 = 0
0002cc40: CF := 31:31[R5] | 31:31[R5] & ~63:63[#19753] | ~63:63[#19753]
0002cc69: #19755 := ~ZF <> 0
0002cc6a: goto %0002cc61

0002cc61:
0002cc63: when #19755 goto %0002cc49
0002cc64: goto %0002cc55

0002cc55:
0002cc56: NF := 0
0002cc59: ZF := 1
0002cc5c: CF := 0
0002cc5f: VF := 0
0002cc66: goto %0002cc62

0002cc49:
0002cc4a: NF := 63:63[extend:64[31:0[R0]] + 0]
0002cc4d: VF := 31:31[R0] & ~63:63[extend:64[31:0[R0]] + 0]
0002cc50: ZF := extend:64[31:0[R0]] + 0 = 0
0002cc53: CF := 31:31[R0] | ~63:63[extend:64[31:0[R0]] + 0] | 31:31[R0] &
          ~63:63[extend:64[31:0[R0]] + 0]
0002cc65: goto %0002cc62

0002cc62:
0002cc76: #19758 := ZF
0002cc70: when #19758 goto %0000fdd9
0003ae5a: goto %0000fda7

0000fdd9:
0000fde0: R0 := 31:0[R8]
0000fde5: call R30 with noreturn

0003ae5b: sub gai_strerror(gai_strerror_result)
0003b3c6: gai_strerror_result :: out u32 = low:32[R0]

000156f4:
000328a0: R16 := 0x27000
000328a8: R17 := mem[R16 + 0xC48, el]:u64
000328af: R16 := R16 + 0xC48
000328b4: call R17 with noreturn

0003ae5c: sub gen_401_page(gen_401_page_result)
0003b3c7: gen_401_page_result :: out u32 = low:32[R0]

000254b4:
000254bb: #16305 := R31 - 0x30
000254c0: mem := mem with [#16305, el]:u64 <- R29
000254c5: mem := mem with [#16305 + 8, el]:u64 <- R30
000254c9: R31 := #16305
000254d0: #16307 := R0
000254d4: NF := 63:63[#16307]
000254d7: VF := 63:63[R0] & ~63:63[#16307]
000254da: ZF := #16307 = 0
000254dd: CF := 63:63[R0] | ~63:63[#16307] | 63:63[R0] & ~63:63[#16307]
000254e6: R29 := R31
000254ee: #16311 := R31 + 0x10
000254f3: mem := mem with [#16311, el]:u64 <- R19
000254f8: mem := mem with [#16311 + 8, el]:u64 <- R20
00025500: R19 := R0
00025506: R0 := 0x13000
0002550d: R0 := R0 + 0xAD0
00025515: R20 := R1
0002552b: #16320 := ZF
0002552c: goto %00025523

00025523:
00025525: when #16320 goto %0002551d
00025526: goto %00025520

00025520:
00025521: R19 := R19
00025528: goto %00025524

0002551d:
0002551e: R19 := R0
00025527: goto %00025524

00025524:
00025533: R0 := 0x1000
0002553b: mem := mem with [R31 + 0x20, el]:u64 <- R21
00025544: R21 := 31:0[R2]
00025549: R30 := 0x1038C
0002554b: call @new with return %0002554d

0002554d:
00025553: R5 := R19
0002555c: R7 := 31:0[R21]
00025564: R6 := R20
0002556c: R19 := R0
00025572: R3 := 0xFFFFFFFFFFFFFFFF
00025579: R2 := 1
0002557f: R1 := 0xFFF
00025585: R4 := 0x13000
0002558c: R4 := R4 + 0xBD0
00025591: R30 := 0x103B4
00025593: call @__snprintf_chk with return %00025595

00025595:
0002559b: R0 := R19
000255a4: R19 := mem[R31 + 0x10, el]:u64
000255a8: R20 := mem[R31 + 0x18, el]:u64
000255b0: R21 := mem[R31 + 0x20, el]:u64
000255ba: R29 := mem[R31, el]:u64
000255be: R30 := mem[R31 + 8, el]:u64
000255c1: R31 := R31 + 0x30
000255c6: call R30 with noreturn

0003ae5d: sub gen_407_page(gen_407_page_result)
0003b3c8: gen_407_page_result :: out u32 = low:32[R0]

000253e1:
000253e8: #16283 := R31 - 0x20
000253ed: mem := mem with [#16283, el]:u64 <- R29
000253f2: mem := mem with [#16283 + 8, el]:u64 <- R30
000253f6: R31 := #16283
000253fd: #16285 := R0
00025401: NF := 63:63[#16285]
00025404: VF := 63:63[R0] & ~63:63[#16285]
00025407: ZF := #16285 = 0
0002540a: CF := 63:63[R0] | ~63:63[#16285] | 63:63[R0] & ~63:63[#16285]
00025412: R1 := 0x13000
00025419: R1 := R1 + 0xAD0
00025420: R29 := R31
00025428: mem := mem with [R31 + 0x10, el]:u64 <- R19
00025430: R19 := R0
00025446: #16290 := ZF
00025447: goto %0002543e

0002543e:
00025440: when #16290 goto %00025438
00025441: goto %0002543b

0002543b:
0002543c: R19 := R19
00025443: goto %0002543f

00025438:
00025439: R19 := R1
00025442: goto %0002543f

0002543f:
0002544e: R0 := 0x1000
00025453: R30 := 0x10328
00025455: call @new with return %00025457

00025457:
0002545d: R5 := R19
00025463: R3 := 0xFFFFFFFFFFFFFFFF
0002546b: R19 := R0
00025472: R2 := 1
00025478: R1 := 0xFFF
0002547e: R4 := 0x13000
00025485: R4 := R4 + 0xAE0
0002548a: R30 := 0x10348
0002548c: call @__snprintf_chk with return %0002548e

0002548e:
00025494: R0 := R19
0002549c: R19 := mem[R31 + 0x10, el]:u64
000254a6: R29 := mem[R31, el]:u64
000254aa: R30 := mem[R31 + 8, el]:u64
000254ad: R31 := R31 + 0x20
000254b2: call R30 with noreturn

0003ae5e: sub gen_502_page(gen_502_page_result)
0003b3c9: gen_502_page_result :: out u32 = low:32[R0]

00022696:
000226a0: #14678 := R31 - 0x20
000226a5: mem := mem with [#14678, el]:u64 <- R29
000226aa: mem := mem with [#14678 + 8, el]:u64 <- R30
000226ae: R31 := #14678
000226b5: #14680 := R0
000226b9: NF := 63:63[#14680]
000226bc: VF := 63:63[R0] & ~63:63[#14680]
000226bf: ZF := #14680 = 0
000226c2: CF := 63:63[R0] | ~63:63[#14680] | 63:63[R0] & ~63:63[#14680]
000226cb: R29 := R31
000226d3: #14684 := R31 + 0x10
000226d8: mem := mem with [#14684, el]:u64 <- R19
000226dd: mem := mem with [#14684 + 8, el]:u64 <- R20
000226e5: R19 := R1
000226ed: R20 := R0
000226f3: R0 := 0x13000
000226fa: R0 := R0 + 0xAD0
00022710: #14693 := ZF
00022711: goto %00022708

00022708:
0002270a: when #14693 goto %00022702
0002270b: goto %00022705

00022705:
00022706: R20 := R20
0002270d: goto %00022709

00022702:
00022703: R20 := R0
0002270c: goto %00022709

00022709:
00022718: R1 := 0x13000
0002271f: #14694 := R19
00022723: NF := 63:63[#14694]
00022726: VF := 63:63[R19] & ~63:63[#14694]
00022729: ZF := #14694 = 0
0002272c: CF := 63:63[R19] | ~63:63[#14694] | 63:63[R19] & ~63:63[#14694]
00022735: R1 := R1 + 0xD78
0002274b: #14696 := ZF
0002274c: goto %00022743

00022743:
00022745: when #14696 goto %0002273d
00022746: goto %00022740

00022740:
00022741: R19 := R19
00022748: goto %00022744

0002273d:
0002273e: R19 := R1
00022747: goto %00022744

00022744:
00022753: R0 := 0x1000
00022758: R30 := 0x1045C
0002275a: call @new with return %0002275c

0002275c:
00022762: R5 := R20
0002276a: R7 := R19
00022772: R6 := R19
00022778: R3 := 0xFFFFFFFFFFFFFFFF
00022780: R19 := R0
00022787: R2 := 1
0002278d: R1 := 0xFFF
00022793: R4 := 0x13000
0002279a: R4 := R4 + 0xD88
0002279f: R30 := 0x10484
000227a2: call @__snprintf_chk with return %000227a4

000227a4:
000227aa: R0 := R19
000227b3: R19 := mem[R31 + 0x10, el]:u64
000227b7: R20 := mem[R31 + 0x18, el]:u64
000227c1: R29 := mem[R31, el]:u64
000227c5: R30 := mem[R31 + 8, el]:u64
000227c8: R31 := R31 + 0x20
000227cd: call R30 with noreturn

0003ae5f: sub gen_denied_page(gen_denied_page_result)
0003b3ca: gen_denied_page_result :: out u32 = low:32[R0]

000255c8:
000255cf: #16345 := R31 - 0x20
000255d4: mem := mem with [#16345, el]:u64 <- R29
000255d9: mem := mem with [#16345 + 8, el]:u64 <- R30
000255dd: R31 := #16345
000255e4: #16347 := R0
000255e8: NF := 63:63[#16347]
000255eb: VF := 63:63[R0] & ~63:63[#16347]
000255ee: ZF := #16347 = 0
000255f1: CF := 63:63[R0] | ~63:63[#16347] | 63:63[R0] & ~63:63[#16347]
000255f9: R1 := 0x13000
00025600: R1 := R1 + 0xCC0
00025607: R29 := R31
0002560f: mem := mem with [R31 + 0x10, el]:u64 <- R19
00025617: R19 := R0
0002562d: #16352 := ZF
0002562e: goto %00025625

00025625:
00025627: when #16352 goto %0002561f
00025628: goto %00025622

00025622:
00025623: R19 := R19
0002562a: goto %00025626

0002561f:
00025620: R19 := R1
00025629: goto %00025626

00025626:
00025635: R0 := 0x1000
0002563a: R30 := 0x103F0
0002563c: call @new with return %0002563e

0002563e:
00025644: R5 := R19
0002564a: R3 := 0xFFFFFFFFFFFFFFFF
00025652: R19 := R0
00025659: R2 := 1
0002565f: R1 := 0xFFF
00025665: R4 := 0x13000
0002566c: R4 := R4 + 0xCC8
00025671: R30 := 0x10410
00025673: call @__snprintf_chk with return %00025675

00025675:
0002567b: R0 := R19
00025683: R19 := mem[R31 + 0x10, el]:u64
0002568d: R29 := mem[R31, el]:u64
00025691: R30 := mem[R31 + 8, el]:u64
00025694: R31 := R31 + 0x20
00025699: call R30 with noreturn

0003ae60: sub get_http_header_name(get_http_header_name_result)
0003b3cb: get_http_header_name_result :: out u32 = low:32[R0]

0001eb62:
0001eb69: #12731 := R31 - 0x20
0001eb6e: mem := mem with [#12731, el]:u64 <- R29
0001eb73: mem := mem with [#12731 + 8, el]:u64 <- R30
0001eb77: R31 := #12731
0001eb7d: R1 := 0x12000
0001eb84: R1 := R1 + 0x728
0001eb8b: R29 := R31
0001eb93: #12736 := R31 + 0x10
0001eb98: mem := mem with [#12736, el]:u64 <- R19
0001eb9d: mem := mem with [#12736 + 8, el]:u64 <- R20
0001eba5: R19 := R0
0001ebaa: R30 := 0xB7F4
0001ebac: call @strcspn with return %0001ebae

0001ebae:
0001ebb4: R20 := R0
0001ebbc: R0 := R19
0001ebc1: R30 := 0xB800
0001ebc3: call @strlen with return %0001ebc5

0001ebc5:
0001ebcb: #12750 := 1 + extend:64[~(31:0[R20] << 0x30)] + R0
0001ebcf: NF := 63:63[#12750]
0001ebd2: VF := 63:63[R0] & 31:31[~(31:0[R20] << 0x30)] & ~63:63[#12750] |
          ~63:63[R0] & ~31:31[~(31:0[R20] << 0x30)] & 63:63[#12750]
0001ebd5: ZF := #12750 = 0
0001ebd8: CF := 63:63[R0] & 31:31[~(31:0[R20] << 0x30)] |
          31:31[~(31:0[R20] << 0x30)] & ~63:63[#12750] | 63:63[R0] &
          ~63:63[#12750]
0001ebe6: #12755 := ZF
0001ebe0: when #12755 goto %0001ebde
0003ae61: goto %0002c4eb

0001ebde:
0001ebec: R0 := 0
0001ebf5: R19 := mem[R31 + 0x10, el]:u64
0001ebf9: R20 := mem[R31 + 0x18, el]:u64
0001ec03: R29 := mem[R31, el]:u64
0001ec07: R30 := mem[R31 + 8, el]:u64
0001ec0a: R31 := R31 + 0x20
0001ec0f: call R30 with noreturn

0002c4eb:
0002c4f2: R2 := 31:0[R20]
0002c4fa: R0 := R19
0002c503: R19 := mem[R31 + 0x10, el]:u64
0002c507: R20 := mem[R31 + 0x18, el]:u64
0002c50e: R1 := 0
0002c518: R29 := mem[R31, el]:u64
0002c51c: R30 := mem[R31 + 8, el]:u64
0002c51f: R31 := R31 + 0x20
0002c523: call @substr with noreturn

0003ae62: sub get_http_header_value(get_http_header_value_result)
0003b3cc: get_http_header_value_result :: out u32 = low:32[R0]

0001ec11:
0001ec18: #12761 := R31 - 0x10
0001ec1d: mem := mem with [#12761, el]:u64 <- R29
0001ec22: mem := mem with [#12761 + 8, el]:u64 <- R30
0001ec26: R31 := #12761
0001ec2d: R1 := 0x3A
0001ec34: R29 := R31
0001ec39: R30 := 0xB840
0001ec3c: call @strchr with return %0001ec3e

0001ec3e:
0001ec48: #12763 := R0 = 0
0001ec42: when #12763 goto %0001ec40
0003ae63: goto %0002c471

0001ec40:
0001ec52: R29 := mem[R31, el]:u64
0001ec56: R30 := mem[R31 + 8, el]:u64
0001ec59: R31 := R31 + 0x10
0001ec5e: call R30 with noreturn

0002c471:
0002c478: R2 := pad:32[mem[R0 + 1]]
0002c47f: R0 := R0 + 1
0002c486: #19550 := 0xFFFFFFFFFFFFFFE0 + extend:64[31:0[R2]]
0002c48a: NF := 63:63[#19550]
0002c48d: VF := 31:31[R2] & ~63:63[#19550]
0002c490: ZF := #19550 = 0
0002c493: CF := 31:31[R2] | 31:31[R2] & ~63:63[#19550] | ~63:63[#19550]
0002c4a2: #19552 := ~ZF <> 0
0002c49c: when #19552 goto %0002c49a
0003ae64: goto %0002c4b9

0002c4b9:
0003ae65: goto %0002c4bb

0002c4bb:
0002c4c3: R1 := pad:32[mem[R0 + 1]]
0002c4c6: R0 := R0 + 1
0002c4cd: #19554 := 0xFFFFFFFFFFFFFFE0 + extend:64[31:0[R1]]
0002c4d1: NF := 63:63[#19554]
0002c4d4: VF := 31:31[R1] & ~63:63[#19554]
0002c4d7: ZF := #19554 = 0
0002c4da: CF := 31:31[R1] | 31:31[R1] & ~63:63[#19554] | ~63:63[#19554]
0002c4e8: #19556 := ZF
0002c4e2: when #19556 goto %0002c4bb
0003ae66: goto %0002c49a

0002c49a:
0002c4ac: R29 := mem[R31, el]:u64
0002c4b0: R30 := mem[R31 + 8, el]:u64
0002c4b3: R31 := R31 + 0x10
0002c4b7: call @strdup with noreturn

0003ae67: sub getaddrinfo(getaddrinfo_result)
0003b3cd: getaddrinfo_result :: out u32 = low:32[R0]

000156b4:
00032ff3: R16 := 0x27000
00032ffb: R17 := mem[R16 + 0xEA0, el]:u64
00033002: R16 := R16 + 0xEA0
00033007: call R17 with noreturn

0003ae68: sub geteuid(geteuid_result)
0003b3ce: geteuid_result :: out u32 = low:32[R0]

0002e94b:
0003299a: R16 := 0x27000
000329a2: R17 := mem[R16 + 0xC98, el]:u64
000329a9: R16 := R16 + 0xC98
000329ae: call R17 with noreturn

0003ae69: sub getgid(getgid_result)
0003b3cf: getgid_result :: out u32 = low:32[R0]

00031fdd:
00032f12: R16 := 0x27000
00032f1a: R17 := mem[R16 + 0xE58, el]:u64
00032f21: R16 := R16 + 0xE58
00032f26: call R17 with noreturn

0003ae6a: sub gethostname(gethostname_buf, gethostname_len, gethostname_result)
0003b3d0: gethostname_buf :: in out u64 = R0
0003b3d1: gethostname_len :: in u64 = R1
0003b3d2: gethostname_result :: out u32 = low:32[R0]

000319ff:
0003303e: R16 := 0x27000
00033046: R17 := mem[R16 + 0xEB8, el]:u64
0003304d: R16 := R16 + 0xEB8
00033052: call R17 with noreturn

0003ae6b: sub getpid(getpid_result)
0003b3d3: getpid_result :: out u32 = low:32[R0]

0002eb4d:
00032ac6: R16 := 0x27000
00032ace: R17 := mem[R16 + 0xCF8, el]:u64
00032ad5: R16 := R16 + 0xCF8
00032ada: call R17 with noreturn

0003ae6c: sub getpwnam(getpwnam_result)
0003b3d4: getpwnam_result :: out u32 = low:32[R0]

0002e9a1:
00032c0b: R16 := 0x27000
00032c13: R17 := mem[R16 + 0xD60, el]:u64
00032c1a: R16 := R16 + 0xD60
00032c1f: call R17 with noreturn

0003ae6d: sub getuid(getuid_result)
0003b3d5: getuid_result :: out u32 = low:32[R0]

0002e937:
000329e5: R16 := 0x27000
000329ed: R17 := mem[R16 + 0xCB0, el]:u64
000329f4: R16 := R16 + 0xCB0
000329f9: call R17 with noreturn

0003ae6e: sub gl_des_ecb_crypt(gl_des_ecb_crypt_result)
0003b3d6: gl_des_ecb_crypt_result :: out u32 = low:32[R0]

00010d59:
00010d60: #2138 := R31 - 0x30
00010d65: mem := mem with [#2138, el]:u64 <- R29
00010d6a: mem := mem with [#2138 + 8, el]:u64 <- R30
00010d6e: R31 := #2138
00010d75: R29 := R31
00010d7d: #2143 := R31 + 0x10
00010d82: mem := mem with [#2143, el]:u64 <- R19
00010d87: mem := mem with [#2143 + 8, el]:u64 <- R20
00010d8f: #2148 := R31 + 0x20
00010d94: mem := mem with [#2148, el]:u64 <- R21
00010d99: mem := mem with [#2148 + 8, el]:u64 <- R22
00010da5: #2150 := 31:0[R3] = 0
00010d9f: when #2150 goto %00010d9d
0003ae6f: goto %0001bd0b

00010d9d:
00010dae: R18 := mem[R0, el]:u32
00010db6: R3 := R0
00010dbb: goto %00010db9

0001bd0b:
0001bd12: R18 := mem[R0 + 0x80, el]:u32
0001bd19: R3 := R0 + 0x80
0003ae70: goto %00010db9

00010db9:
00010dc4: R12 := mem[R1, el]:u32
00010dc9: R4 := mem[R1 + 4, el]:u32
00010dcf: R0 := 0x11000
00010dd9: R30 := mem[R3 + 4, el]:u32
00010dde: R17 := mem[R3 + 8, el]:u32
00010de6: R12 := 7:0[R12].15:8[R12].23:16[R12].31:24[R12]
00010dee: R4 := 7:0[R4].15:8[R4].23:16[R4].31:24[R4]
00010df5: R0 := R0 + 0x8E0
00010dfe: R1 := 31:0[R4] ^ 31:0[R12] >> 4
00010e05: R10 := R0 + 0x290
00010e0d: R1 := 31:0[R1] & 0xF0F0F0F
00010e14: R9 := R0 + 0x390
00010e1d: R4 := 31:0[R4] ^ 31:0[R1]
00010e24: R11 := R0 + 0x490
00010e2d: R12 := 31:0[R12] ^ 31:0[R1] << 4
00010e34: R8 := R0 + 0x590
00010e3b: R7 := R0 + 0x690
00010e42: R6 := R0 + 0x790
00010e4b: R1 := 31:0[R4] ^ 31:0[R12] >> 0x10
00010e52: R5 := R0 + 0x890
00010e5a: R1 := 31:0[R1] & 0xFFFF
00010e61: R0 := R0 + 0x990
00010e6a: R4 := 31:0[R4] ^ 31:0[R1]
00010e73: R1 := 31:0[R12] ^ 31:0[R1] << 0x10
00010e7c: R13 := 31:0[R1] ^ 31:0[R4] >> 2
00010e84: R13 := 31:0[R13] & 0x33333333
00010e8d: R1 := 31:0[R1] ^ 31:0[R13]
00010e96: R4 := 31:0[R4] ^ 31:0[R13] << 2
00010ea0: R16 := mem[R3 + 0xC, el]:u32
00010ea5: R15 := mem[R3 + 0x10, el]:u32
00010eae: R13 := 31:0[R1] ^ 31:0[R4] >> 8
00010eb6: R13 := 31:0[R13] & 0xFF00FF
00010ebf: R1 := 31:0[R1] ^ 31:0[R13]
00010ec8: R13 := 31:0[R4] ^ 31:0[R13] << 8
00010ed2: R14 := mem[R3 + 0x14, el]:u32
00010ed7: R12 := mem[R3 + 0x18, el]:u32
00010ee0: R13 := 62:31[31:0[R13].31:0[R13]]
00010ee9: R4 := 31:0[R1] ^ 31:0[R13]
00010ef1: R4 := 31:0[R4] & 0xAAAAAAAA
00010efa: R13 := 31:0[R13] ^ 31:0[R4]
00010f03: R1 := 31:0[R1] ^ 31:0[R4]
00010f0c: R18 := 31:0[R18] ^ 31:0[R13]
00010f13: R19 := R18 & 0x3F
00010f1c: R30 := 31:0[R30] ^ (31:0[R13] >> 4 | 31:0[R13] << 0x1C)
00010f23: R4 := pad:64[13:8[R18]]
00010f2a: R20 := pad:64[21:16[R18]]
00010f31: R21 := R30 & 0x3F
00010f38: R18 := pad:64[29:24[R18]]
00010f40: #2372 := R19 << 2
00010f46: R19 := mem[R11 + #2372, el]:u32
00010f4d: R22 := pad:64[13:8[R30]]
00010f55: #2375 := R20 << 2
00010f5b: R20 := mem[R9 + #2375, el]:u32
00010f63: #2377 := R4 << 2
00010f69: R4 := mem[R10 + #2377, el]:u32
00010f71: #2379 := R21 << 2
00010f77: R21 := mem[R7 + #2379, el]:u32
00010f80: R19 := 31:0[R19] ^ (31:0[R1] >> 0x1F | 31:0[R1] << 1)
00010f89: R4 := 31:0[R4] ^ 31:0[R20]
00010f90: R20 := pad:64[21:16[R30]]
00010f98: #2390 := R18 << 2
00010f9e: R18 := mem[R8 + #2390, el]:u32
00010fa5: R30 := pad:64[29:24[R30]]
00010fad: #2393 := R22 << 2
00010fb3: R1 := mem[R6 + #2393, el]:u32
00010fbc: R4 := 31:0[R4] ^ 31:0[R19]
00010fc4: #2398 := R20 << 2
00010fca: R19 := mem[R5 + #2398, el]:u32
00010fd3: R18 := 31:0[R18] ^ 31:0[R21]
00010fdc: R4 := 31:0[R4] ^ 31:0[R18]
00010fe4: #2406 := R30 << 2
00010fea: R18 := mem[R0 + #2406, el]:u32
00010ff3: R1 := 31:0[R1] ^ 31:0[R19]
00010ffc: R4 := 31:0[R4] ^ 31:0[R1]
00011005: R18 := 31:0[R4] ^ 31:0[R18]
0001100e: R17 := 31:0[R18] ^ 31:0[R17]
00011015: R4 := R17 & 0x3F
0001101e: R16 := 31:0[R16] ^ (31:0[R18] >> 4 | 31:0[R18] << 0x1C)
00011025: R1 := pad:64[13:8[R17]]
0001102c: R21 := pad:64[21:16[R17]]
00011033: R20 := R16 & 0x3F
0001103a: R17 := pad:64[29:24[R17]]
00011042: #2472 := R4 << 2
00011048: R30 := mem[R11 + #2472, el]:u32
0001104f: R19 := pad:64[21:16[R16]]
00011056: R4 := pad:64[13:8[R16]]
0001105e: #2476 := R21 << 2
00011064: R21 := mem[R9 + #2476, el]:u32
0001106c: #2478 := R1 << 2
00011072: R1 := mem[R10 + #2478, el]:u32
00011079: R16 := pad:64[29:24[R16]]
00011081: #2481 := R17 << 2
00011087: R17 := mem[R8 + #2481, el]:u32
00011090: R13 := 31:0[R13] ^ 31:0[R30]
00011098: #2486 := R20 << 2
0001109e: R20 := mem[R7 + #2486, el]:u32
000110a7: R1 := 31:0[R1] ^ 31:0[R21]
000110af: #2491 := R19 << 2
000110b5: R19 := mem[R5 + #2491, el]:u32
000110be: R1 := 31:0[R1] ^ 31:0[R13]
000110c6: #2496 := R4 << 2
000110cc: R4 := mem[R6 + #2496, el]:u32
000110d5: R13 := 31:0[R17] ^ 31:0[R20]
000110de: R1 := 31:0[R1] ^ 31:0[R13]
000110e6: #2504 := R16 << 2
000110ec: R17 := mem[R0 + #2504, el]:u32
000110f5: R4 := 31:0[R4] ^ 31:0[R19]
000110fe: R1 := 31:0[R1] ^ 31:0[R4]
00011107: R17 := 31:0[R1] ^ 31:0[R17]
00011110: R15 := 31:0[R17] ^ 31:0[R15]
00011117: R13 := R15 & 0x3F
00011120: R14 := 31:0[R14] ^ (31:0[R17] >> 4 | 31:0[R17] << 0x1C)
00011127: R4 := pad:64[13:8[R15]]
0001112e: R20 := pad:64[21:16[R15]]
00011135: R16 := R14 & 0x3F
0001113c: R15 := pad:64[29:24[R15]]
00011144: #2570 := R13 << 2
0001114a: R13 := mem[R11 + #2570, el]:u32
00011151: R19 := pad:64[21:16[R14]]
00011158: R1 := pad:64[13:8[R14]]
00011160: #2574 := R20 << 2
00011166: R20 := mem[R9 + #2574, el]:u32
0001116e: #2576 := R4 << 2
00011174: R4 := mem[R10 + #2576, el]:u32
0001117d: R18 := 31:0[R18] ^ 31:0[R13]
00011185: #2581 := R16 << 2
0001118b: R16 := mem[R7 + #2581, el]:u32
00011192: R14 := pad:64[29:24[R14]]
0001119a: #2584 := R15 << 2
000111a0: R13 := mem[R8 + #2584, el]:u32
000111a9: R4 := 31:0[R4] ^ 31:0[R20]
000111b1: #2589 := R19 << 2
000111b7: R15 := mem[R5 + #2589, el]:u32
000111c0: R4 := 31:0[R4] ^ 31:0[R18]
000111c8: #2594 := R1 << 2
000111ce: R1 := mem[R6 + #2594, el]:u32
000111d7: R13 := 31:0[R13] ^ 31:0[R16]
000111df: #2599 := R14 << 2
000111e5: R18 := mem[R0 + #2599, el]:u32
000111ee: R4 := 31:0[R4] ^ 31:0[R13]
000111f7: R1 := 31:0[R1] ^ 31:0[R15]
00011200: R4 := 31:0[R4] ^ 31:0[R1]
0001120a: R16 := mem[R3 + 0x1C, el]:u32
0001120f: R15 := mem[R3 + 0x20, el]:u32
00011218: R18 := 31:0[R4] ^ 31:0[R18]
00011221: R12 := 31:0[R18] ^ 31:0[R12]
00011228: R4 := R12 & 0x3F
00011231: R16 := 31:0[R16] ^ (31:0[R18] >> 4 | 31:0[R18] << 0x1C)
00011238: R1 := pad:64[13:8[R12]]
0001123f: R21 := pad:64[21:16[R12]]
00011246: R20 := R16 & 0x3F
0001124d: R12 := pad:64[29:24[R12]]
00011255: #2669 := R4 << 2
0001125b: R30 := mem[R11 + #2669, el]:u32
00011262: R19 := pad:64[21:16[R16]]
00011269: R4 := pad:64[13:8[R16]]
00011271: #2673 := R21 << 2
00011277: R21 := mem[R9 + #2673, el]:u32
0001127e: R16 := pad:64[29:24[R16]]
00011286: #2676 := R1 << 2
0001128c: R1 := mem[R10 + #2676, el]:u32
00011295: R17 := 31:0[R17] ^ 31:0[R30]
0001129d: #2681 := R20 << 2
000112a3: R20 := mem[R7 + #2681, el]:u32
000112ab: #2683 := R12 << 2
000112b1: R12 := mem[R8 + #2683, el]:u32
000112ba: R1 := 31:0[R1] ^ 31:0[R21]
000112c2: #2688 := R19 << 2
000112c8: R19 := mem[R5 + #2688, el]:u32
000112d1: R1 := 31:0[R1] ^ 31:0[R17]
000112d9: #2693 := R4 << 2
000112df: R4 := mem[R6 + #2693, el]:u32
000112e8: R12 := 31:0[R12] ^ 31:0[R20]
000112f0: #2698 := R16 << 2
000112f6: R17 := mem[R0 + #2698, el]:u32
000112ff: R1 := 31:0[R1] ^ 31:0[R12]
00011308: R4 := 31:0[R4] ^ 31:0[R19]
00011311: R16 := mem[R3 + 0x34, el]:u32
0001131a: R1 := 31:0[R1] ^ 31:0[R4]
00011323: R17 := 31:0[R1] ^ 31:0[R17]
0001132c: R15 := 31:0[R17] ^ 31:0[R15]
00011336: R14 := mem[R3 + 0x24, el]:u32
0001133b: R13 := mem[R3 + 0x28, el]:u32
00011342: R1 := R15 & 0x3F
00011349: R4 := pad:64[13:8[R15]]
00011350: R21 := pad:64[21:16[R15]]
00011357: R15 := pad:64[29:24[R15]]
0001135f: #2742 := R1 << 2
00011365: R19 := mem[R11 + #2742, el]:u32
0001136e: R14 := 31:0[R14] ^ (31:0[R17] >> 4 | 31:0[R17] << 0x1C)
00011375: R20 := R14 & 0x3F
0001137d: #2771 := R21 << 2
00011383: R21 := mem[R9 + #2771, el]:u32
0001138c: R18 := 31:0[R18] ^ 31:0[R19]
00011393: R1 := pad:64[13:8[R14]]
0001139a: R19 := pad:64[21:16[R14]]
000113a2: #2778 := R4 << 2
000113a8: R4 := mem[R10 + #2778, el]:u32
000113b0: #2780 := R15 << 2
000113b6: R15 := mem[R8 + #2780, el]:u32
000113bd: R14 := pad:64[29:24[R14]]
000113c5: #2783 := R20 << 2
000113cb: R20 := mem[R7 + #2783, el]:u32
000113d4: R4 := 31:0[R4] ^ 31:0[R21]
000113dc: #2788 := R19 << 2
000113e2: R19 := mem[R5 + #2788, el]:u32
000113eb: R4 := 31:0[R4] ^ 31:0[R18]
000113f3: #2793 := R1 << 2
000113f9: R1 := mem[R6 + #2793, el]:u32
00011402: R18 := 31:0[R15] ^ 31:0[R20]
0001140b: R4 := 31:0[R4] ^ 31:0[R18]
00011413: #2801 := R14 << 2
00011419: R15 := mem[R0 + #2801, el]:u32
00011422: R1 := 31:0[R1] ^ 31:0[R19]
0001142c: R30 := mem[R3 + 0x2C, el]:u32
00011431: R12 := mem[R3 + 0x30, el]:u32
0001143a: R4 := 31:0[R4] ^ 31:0[R1]
00011443: R15 := 31:0[R4] ^ 31:0[R15]
0001144c: R13 := 31:0[R15] ^ 31:0[R13]
00011453: R18 := R13 & 0x3F
0001145c: R14 := 31:0[R30] ^ (31:0[R15] >> 4 | 31:0[R15] << 0x1C)
00011463: R1 := pad:64[13:8[R13]]
0001146a: R20 := pad:64[21:16[R13]]
00011471: R19 := R14 & 0x3F
00011478: R13 := pad:64[29:24[R13]]
00011480: #2868 := R18 << 2
00011486: R21 := mem[R11 + #2868, el]:u32
0001148d: R4 := pad:64[13:8[R14]]
00011494: R18 := pad:64[21:16[R14]]
0001149c: #2872 := R20 << 2
000114a2: R20 := mem[R9 + #2872, el]:u32
000114aa: #2874 := R1 << 2
000114b0: R1 := mem[R10 + #2874, el]:u32
000114b7: R14 := pad:64[29:24[R14]]
000114bf: #2877 := R19 << 2
000114c5: R19 := mem[R7 + #2877, el]:u32
000114ce: R17 := 31:0[R17] ^ 31:0[R21]
000114d6: #2882 := R13 << 2
000114dc: R13 := mem[R8 + #2882, el]:u32
000114e5: R1 := 31:0[R1] ^ 31:0[R20]
000114ed: #2887 := R18 << 2
000114f3: R18 := mem[R5 + #2887, el]:u32
000114fc: R1 := 31:0[R1] ^ 31:0[R17]
00011504: #2892 := R4 << 2
0001150a: R4 := mem[R6 + #2892, el]:u32
00011513: R13 := 31:0[R13] ^ 31:0[R19]
0001151b: #2897 := R14 << 2
00011521: R17 := mem[R0 + #2897, el]:u32
0001152a: R1 := 31:0[R1] ^ 31:0[R13]
00011533: R4 := 31:0[R4] ^ 31:0[R18]
0001153c: R1 := 31:0[R1] ^ 31:0[R4]
00011545: R17 := 31:0[R1] ^ 31:0[R17]
0001154e: R12 := 31:0[R17] ^ 31:0[R12]
00011557: R13 := 31:0[R16] ^ (31:0[R17] >> 4 | 31:0[R17] << 0x1C)
0001155e: R18 := R12 & 0x3F
00011565: R19 := pad:64[21:16[R12]]
0001156c: R4 := pad:64[13:8[R12]]
00011573: R16 := R13 & 0x3F
0001157a: R12 := pad:64[29:24[R12]]
00011581: R1 := pad:64[13:8[R13]]
00011588: R14 := pad:64[21:16[R13]]
00011590: #2968 := R4 << 2
00011596: R4 := mem[R10 + #2968, el]:u32
0001159d: R13 := pad:64[29:24[R13]]
000115a5: #2971 := R19 << 2
000115ab: R19 := mem[R9 + #2971, el]:u32
000115b3: #2973 := R18 << 2
000115b9: R18 := mem[R11 + #2973, el]:u32
000115c1: #2975 := R16 << 2
000115c7: R16 := mem[R7 + #2975, el]:u32
000115d0: R4 := 31:0[R4] ^ 31:0[R19]
000115d8: #2980 := R12 << 2
000115de: R12 := mem[R8 + #2980, el]:u32
000115e7: R15 := 31:0[R15] ^ 31:0[R18]
000115ef: #2985 := R14 << 2
000115f5: R14 := mem[R5 + #2985, el]:u32
000115fe: R4 := 31:0[R4] ^ 31:0[R15]
00011606: #2990 := R1 << 2
0001160c: R1 := mem[R6 + #2990, el]:u32
00011615: R12 := 31:0[R12] ^ 31:0[R16]
0001161e: R4 := 31:0[R4] ^ 31:0[R12]
00011626: #2998 := R13 << 2
0001162c: R16 := mem[R0 + #2998, el]:u32
00011635: R1 := 31:0[R1] ^ 31:0[R14]
0001163f: R12 := mem[R3 + 0x38, el]:u32
00011644: R14 := mem[R3 + 0x3C, el]:u32
0001164d: R4 := 31:0[R4] ^ 31:0[R1]
00011656: R16 := 31:0[R4] ^ 31:0[R16]
0001165f: R12 := 31:0[R16] ^ 31:0[R12]
00011666: R18 := R12 & 0x3F
0001166f: R14 := 31:0[R14] ^ (31:0[R16] >> 4 | 31:0[R16] << 0x1C)
00011676: R1 := pad:64[13:8[R12]]
0001167d: R20 := pad:64[21:16[R12]]
00011684: R19 := R14 & 0x3F
0001168b: R12 := pad:64[29:24[R12]]
00011693: #3065 := R18 << 2
00011699: R21 := mem[R11 + #3065, el]:u32
000116a0: R4 := pad:64[13:8[R14]]
000116a7: R18 := pad:64[21:16[R14]]
000116af: #3069 := R20 << 2
000116b5: R20 := mem[R9 + #3069, el]:u32
000116bd: #3071 := R1 << 2
000116c3: R1 := mem[R10 + #3071, el]:u32
000116ca: R14 := pad:64[29:24[R14]]
000116d2: #3074 := R19 << 2
000116d8: R19 := mem[R7 + #3074, el]:u32
000116e1: R17 := 31:0[R17] ^ 31:0[R21]
000116e9: #3079 := R12 << 2
000116ef: R12 := mem[R8 + #3079, el]:u32
000116f8: R1 := 31:0[R1] ^ 31:0[R20]
00011700: #3084 := R18 << 2
00011706: R18 := mem[R5 + #3084, el]:u32
0001170f: R1 := 31:0[R1] ^ 31:0[R17]
00011717: #3089 := R4 << 2
0001171d: R4 := mem[R6 + #3089, el]:u32
00011726: R12 := 31:0[R12] ^ 31:0[R19]
0001172e: #3094 := R14 << 2
00011734: R17 := mem[R0 + #3094, el]:u32
0001173d: R1 := 31:0[R1] ^ 31:0[R12]
00011747: R13 := mem[R3 + 0x40, el]:u32
0001174c: R15 := mem[R3 + 0x44, el]:u32
00011755: R4 := 31:0[R4] ^ 31:0[R18]
0001175e: R1 := 31:0[R1] ^ 31:0[R4]
00011767: R1 := 31:0[R1] ^ 31:0[R17]
00011770: R13 := 31:0[R1] ^ 31:0[R13]
00011777: R18 := R13 & 0x3F
00011780: R15 := 31:0[R15] ^ (31:0[R1] >> 4 | 31:0[R1] << 0x1C)
00011787: R17 := pad:64[21:16[R13]]
0001178e: R4 := pad:64[13:8[R13]]
00011795: R19 := R15 & 0x3F
0001179c: R13 := pad:64[29:24[R13]]
000117a4: #3164 := R18 << 2
000117aa: R30 := mem[R11 + #3164, el]:u32
000117b1: R20 := pad:64[13:8[R15]]
000117b8: R18 := pad:64[21:16[R15]]
000117c0: #3168 := R17 << 2
000117c6: R21 := mem[R9 + #3168, el]:u32
000117ce: #3170 := R4 << 2
000117d4: R4 := mem[R10 + #3170, el]:u32
000117db: R15 := pad:64[29:24[R15]]
000117e3: #3173 := R13 << 2
000117e9: R17 := mem[R8 + #3173, el]:u32
000117f2: R16 := 31:0[R16] ^ 31:0[R30]
000117fa: #3178 := R19 << 2
00011800: R19 := mem[R7 + #3178, el]:u32
00011809: R4 := 31:0[R4] ^ 31:0[R21]
00011811: #3183 := R20 << 2
00011817: R13 := mem[R6 + #3183, el]:u32
00011820: R4 := 31:0[R4] ^ 31:0[R16]
00011828: #3188 := R18 << 2
0001182e: R18 := mem[R5 + #3188, el]:u32
00011837: R16 := 31:0[R17] ^ 31:0[R19]
00011841: R12 := mem[R3 + 0x48, el]:u32
00011846: R14 := mem[R3 + 0x4C, el]:u32
0001184f: R13 := 31:0[R13] ^ 31:0[R18]
00011857: #3197 := R15 << 2
0001185d: R17 := mem[R0 + #3197, el]:u32
00011866: R4 := 31:0[R4] ^ 31:0[R16]
0001186f: R4 := 31:0[R4] ^ 31:0[R13]
00011878: R17 := 31:0[R4] ^ 31:0[R17]
00011881: R12 := 31:0[R17] ^ 31:0[R12]
00011888: R20 := R12 & 0x3F
00011891: R13 := 31:0[R14] ^ (31:0[R17] >> 4 | 31:0[R17] << 0x1C)
00011898: R4 := pad:64[13:8[R12]]
0001189f: R19 := pad:64[21:16[R12]]
000118a6: R15 := R13 & 0x3F
000118ad: R12 := pad:64[29:24[R12]]
000118b5: #3263 := R20 << 2
000118bb: R14 := mem[R11 + #3263, el]:u32
000118c2: R18 := pad:64[13:8[R13]]
000118ca: #3266 := R19 << 2
000118d0: R19 := mem[R9 + #3266, el]:u32
000118d7: R16 := pad:64[21:16[R13]]
000118df: #3269 := R4 << 2
000118e5: R4 := mem[R10 + #3269, el]:u32
000118ee: R1 := 31:0[R1] ^ 31:0[R14]
000118f5: R13 := pad:64[29:24[R13]]
000118fd: #3275 := R12 << 2
00011903: R14 := mem[R8 + #3275, el]:u32
0001190c: R4 := 31:0[R4] ^ 31:0[R19]
00011914: #3280 := R15 << 2
0001191a: R15 := mem[R7 + #3280, el]:u32
00011922: #3282 := R18 << 2
00011928: R12 := mem[R6 + #3282, el]:u32
00011931: R4 := 31:0[R4] ^ 31:0[R1]
00011939: #3287 := R16 << 2
0001193f: R1 := mem[R5 + #3287, el]:u32
00011948: R14 := 31:0[R14] ^ 31:0[R15]
00011950: #3292 := R13 << 2
00011956: R16 := mem[R0 + #3292, el]:u32
0001195f: R4 := 31:0[R4] ^ 31:0[R14]
00011968: R1 := 31:0[R12] ^ 31:0[R1]
00011972: R12 := mem[R3 + 0x50, el]:u32
00011977: R14 := mem[R3 + 0x54, el]:u32
00011980: R4 := 31:0[R4] ^ 31:0[R1]
00011989: R16 := 31:0[R4] ^ 31:0[R16]
00011992: R12 := 31:0[R16] ^ 31:0[R12]
00011999: R4 := R12 & 0x3F
000119a2: R14 := 31:0[R14] ^ (31:0[R16] >> 4 | 31:0[R16] << 0x1C)
000119a9: R18 := pad:64[21:16[R12]]
000119b0: R1 := pad:64[13:8[R12]]
000119b7: R30 := R14 & 0x3F
000119be: R12 := pad:64[29:24[R12]]
000119c6: #3362 := R4 << 2
000119cc: R4 := mem[R11 + #3362, el]:u32
000119d3: R20 := pad:64[13:8[R14]]
000119db: #3365 := R18 << 2
000119e1: R21 := mem[R9 + #3365, el]:u32
000119e8: R19 := pad:64[21:16[R14]]
000119f0: #3368 := R1 << 2
000119f6: R1 := mem[R10 + #3368, el]:u32
000119ff: R4 := 31:0[R17] ^ 31:0[R4]
00011a07: #3373 := R12 << 2
00011a0d: R18 := mem[R8 + #3373, el]:u32
00011a14: R14 := pad:64[29:24[R14]]
00011a1c: #3376 := R30 << 2
00011a22: R17 := mem[R7 + #3376, el]:u32
00011a2b: R1 := 31:0[R1] ^ 31:0[R21]
00011a33: #3381 := R20 << 2
00011a39: R12 := mem[R6 + #3381, el]:u32
00011a42: R1 := 31:0[R1] ^ 31:0[R4]
00011a4a: #3386 := R19 << 2
00011a50: R4 := mem[R5 + #3386, el]:u32
00011a59: R17 := 31:0[R18] ^ 31:0[R17]
00011a63: R13 := mem[R3 + 0x58, el]:u32
00011a68: R15 := mem[R3 + 0x5C, el]:u32
00011a71: R4 := 31:0[R12] ^ 31:0[R4]
00011a7a: R1 := 31:0[R1] ^ 31:0[R17]
00011a82: #3398 := R14 << 2
00011a88: R17 := mem[R0 + #3398, el]:u32
00011a91: R1 := 31:0[R1] ^ 31:0[R4]
00011a9a: R1 := 31:0[R1] ^ 31:0[R17]
00011aa3: R13 := 31:0[R1] ^ 31:0[R13]
00011aaa: R18 := R13 & 0x3F
00011ab3: R15 := 31:0[R15] ^ (31:0[R1] >> 4 | 31:0[R1] << 0x1C)
00011aba: R17 := pad:64[21:16[R13]]
00011ac1: R4 := pad:64[13:8[R13]]
00011ac8: R19 := R15 & 0x3F
00011acf: R13 := pad:64[29:24[R13]]
00011ad7: #3461 := R18 << 2
00011add: R30 := mem[R11 + #3461, el]:u32
00011ae4: R20 := pad:64[13:8[R15]]
00011aeb: R18 := pad:64[21:16[R15]]
00011af3: #3465 := R17 << 2
00011af9: R21 := mem[R9 + #3465, el]:u32
00011b01: #3467 := R4 << 2
00011b07: R4 := mem[R10 + #3467, el]:u32
00011b0e: R15 := pad:64[29:24[R15]]
00011b16: #3470 := R13 << 2
00011b1c: R17 := mem[R8 + #3470, el]:u32
00011b25: R16 := 31:0[R16] ^ 31:0[R30]
00011b2d: #3475 := R19 << 2
00011b33: R19 := mem[R7 + #3475, el]:u32
00011b3c: R4 := 31:0[R4] ^ 31:0[R21]
00011b44: #3480 := R20 << 2
00011b4a: R13 := mem[R6 + #3480, el]:u32
00011b53: R4 := 31:0[R4] ^ 31:0[R16]
00011b5b: #3485 := R18 << 2
00011b61: R18 := mem[R5 + #3485, el]:u32
00011b6a: R16 := 31:0[R17] ^ 31:0[R19]
00011b74: R12 := mem[R3 + 0x60, el]:u32
00011b79: R14 := mem[R3 + 0x64, el]:u32
00011b82: R13 := 31:0[R13] ^ 31:0[R18]
00011b8a: #3494 := R15 << 2
00011b90: R17 := mem[R0 + #3494, el]:u32
00011b99: R4 := 31:0[R4] ^ 31:0[R16]
00011ba2: R4 := 31:0[R4] ^ 31:0[R13]
00011bab: R17 := 31:0[R4] ^ 31:0[R17]
00011bb4: R12 := 31:0[R17] ^ 31:0[R12]
00011bbb: R4 := R12 & 0x3F
00011bc4: R14 := 31:0[R14] ^ (31:0[R17] >> 4 | 31:0[R17] << 0x1C)
00011bcb: R20 := pad:64[13:8[R12]]
00011bd2: R19 := pad:64[21:16[R12]]
00011bd9: R13 := pad:64[29:24[R12]]
00011be0: R15 := R14 & 0x3F
00011be8: #3560 := R4 << 2
00011bee: R4 := mem[R11 + #3560, el]:u32
00011bf5: R18 := pad:64[13:8[R14]]
00011bfd: #3563 := R20 << 2
00011c03: R12 := mem[R10 + #3563, el]:u32
00011c0a: R16 := pad:64[21:16[R14]]
00011c12: #3566 := R19 << 2
00011c18: R19 := mem[R9 + #3566, el]:u32
00011c21: R4 := 31:0[R1] ^ 31:0[R4]
00011c29: #3571 := R15 << 2
00011c2f: R15 := mem[R7 + #3571, el]:u32
00011c36: R14 := pad:64[29:24[R14]]
00011c3e: #3574 := R13 << 2
00011c44: R13 := mem[R8 + #3574, el]:u32
00011c4d: R1 := 31:0[R12] ^ 31:0[R19]
00011c56: R1 := 31:0[R1] ^ 31:0[R4]
00011c5e: #3582 := R18 << 2
00011c64: R12 := mem[R6 + #3582, el]:u32
00011c6c: #3584 := R16 << 2
00011c72: R4 := mem[R5 + #3584, el]:u32
00011c7b: R13 := 31:0[R13] ^ 31:0[R15]
00011c83: #3589 := R14 << 2
00011c89: R16 := mem[R0 + #3589, el]:u32
00011c92: R1 := 31:0[R1] ^ 31:0[R13]
00011c9b: R4 := 31:0[R12] ^ 31:0[R4]
00011ca5: R12 := mem[R3 + 0x68, el]:u32
00011caa: R15 := mem[R3 + 0x6C, el]:u32
00011cb3: R1 := 31:0[R1] ^ 31:0[R4]
00011cbc: R16 := 31:0[R1] ^ 31:0[R16]
00011cc5: R12 := 31:0[R16] ^ 31:0[R12]
00011ccc: R19 := R12 & 0x3F
00011cd5: R15 := 31:0[R15] ^ (31:0[R16] >> 4 | 31:0[R16] << 0x1C)
00011cdc: R1 := pad:64[21:16[R12]]
00011ce3: R4 := pad:64[13:8[R12]]
00011cea: R18 := R15 & 0x3F
00011cf1: R12 := pad:64[29:24[R12]]
00011cf9: #3659 := R19 << 2
00011cff: R21 := mem[R11 + #3659, el]:u32
00011d06: R30 := pad:64[13:8[R15]]
00011d0e: #3662 := R1 << 2
00011d14: R20 := mem[R9 + #3662, el]:u32
00011d1b: R19 := pad:64[21:16[R15]]
00011d23: #3665 := R4 << 2
00011d29: R4 := mem[R10 + #3665, el]:u32
00011d32: R17 := 31:0[R17] ^ 31:0[R21]
00011d3a: #3670 := R12 << 2
00011d40: R1 := mem[R8 + #3670, el]:u32
00011d47: R15 := pad:64[29:24[R15]]
00011d4f: #3673 := R18 << 2
00011d55: R18 := mem[R7 + #3673, el]:u32
00011d5e: R4 := 31:0[R4] ^ 31:0[R20]
00011d66: #3678 := R30 << 2
00011d6c: R12 := mem[R6 + #3678, el]:u32
00011d75: R4 := 31:0[R4] ^ 31:0[R17]
00011d7d: #3683 := R19 << 2
00011d83: R17 := mem[R5 + #3683, el]:u32
00011d8c: R1 := 31:0[R1] ^ 31:0[R18]
00011d96: R13 := mem[R3 + 0x70, el]:u32
00011d9b: R14 := mem[R3 + 0x74, el]:u32
00011da4: R12 := 31:0[R12] ^ 31:0[R17]
00011dac: #3692 := R15 << 2
00011db2: R15 := mem[R0 + #3692, el]:u32
00011dbb: R4 := 31:0[R4] ^ 31:0[R1]
00011dc4: R4 := 31:0[R4] ^ 31:0[R12]
00011dcd: R4 := 31:0[R4] ^ 31:0[R15]
00011dd6: R13 := 31:0[R4] ^ 31:0[R13]
00011de0: R1 := mem[R3 + 0x78, el]:u32
00011de5: R12 := mem[R3 + 0x7C, el]:u32
00011dec: R15 := R13 & 0x3F
00011df3: R30 := pad:64[21:16[R13]]
00011dfa: R3 := pad:64[13:8[R13]]
00011e03: R14 := 31:0[R14] ^ (31:0[R4] >> 4 | 31:0[R4] << 0x1C)
00011e0a: R13 := pad:64[29:24[R13]]
00011e11: R17 := R14 & 0x3F
00011e19: #3759 := R15 << 2
00011e1f: R15 := mem[R11 + #3759, el]:u32
00011e27: #3761 := R30 << 2
00011e2d: R30 := mem[R9 + #3761, el]:u32
00011e34: R19 := pad:64[13:8[R14]]
00011e3c: #3764 := R3 << 2
00011e42: R3 := mem[R10 + #3764, el]:u32
00011e49: R18 := pad:64[21:16[R14]]
00011e51: #3767 := R17 << 2
00011e57: R17 := mem[R7 + #3767, el]:u32
00011e60: R16 := 31:0[R16] ^ 31:0[R15]
00011e69: R3 := 31:0[R3] ^ 31:0[R30]
00011e71: #3775 := R13 << 2
00011e77: R15 := mem[R8 + #3775, el]:u32
00011e7e: R14 := pad:64[29:24[R14]]
00011e86: #3778 := R19 << 2
00011e8c: R13 := mem[R6 + #3778, el]:u32
00011e95: R3 := 31:0[R3] ^ 31:0[R16]
00011e9d: #3783 := R18 << 2
00011ea3: R16 := mem[R5 + #3783, el]:u32
00011eac: R15 := 31:0[R15] ^ 31:0[R17]
00011eb4: #3788 := R14 << 2
00011eba: R14 := mem[R0 + #3788, el]:u32
00011ec3: R13 := 31:0[R13] ^ 31:0[R16]
00011ecc: R3 := 31:0[R3] ^ 31:0[R15]
00011ed5: R3 := 31:0[R3] ^ 31:0[R13]
00011ede: R3 := 31:0[R3] ^ 31:0[R14]
00011ee7: R1 := 31:0[R3] ^ 31:0[R1]
00011ef0: R12 := 31:0[R12] ^ (31:0[R3] >> 4 | 31:0[R3] << 0x1C)
00011ef7: R19 := R1 & 0x3F
00011efe: R17 := pad:64[21:16[R1]]
00011f05: R18 := pad:64[13:8[R1]]
00011f0c: R13 := pad:64[29:24[R1]]
00011f13: R16 := R12 & 0x3F
00011f1a: R15 := pad:64[13:8[R12]]
00011f21: R14 := pad:64[21:16[R12]]
00011f29: #3859 := R19 << 2
00011f2f: R11 := mem[R11 + #3859, el]:u32
00011f36: R12 := pad:64[29:24[R12]]
00011f3e: #3862 := R18 << 2
00011f44: R1 := mem[R10 + #3862, el]:u32
00011f4c: #3864 := R17 << 2
00011f52: R9 := mem[R9 + #3864, el]:u32
00011f5b: R4 := 31:0[R4] ^ 31:0[R11]
00011f63: #3869 := R13 << 2
00011f69: R8 := mem[R8 + #3869, el]:u32
00011f71: #3871 := R16 << 2
00011f77: R7 := mem[R7 + #3871, el]:u32
00011f80: R1 := 31:0[R1] ^ 31:0[R9]
00011f88: #3876 := R15 << 2
00011f8e: R6 := mem[R6 + #3876, el]:u32
00011f97: R1 := 31:0[R1] ^ 31:0[R4]
00011f9f: #3881 := R14 << 2
00011fa5: R5 := mem[R5 + #3881, el]:u32
00011fae: R4 := 31:0[R8] ^ 31:0[R7]
00011fb7: R1 := 31:0[R1] ^ 31:0[R4]
00011fbf: #3889 := R12 << 2
00011fc5: R4 := mem[R0 + #3889, el]:u32
00011fce: R0 := 31:0[R6] ^ 31:0[R5]
00011fd7: R0 := 31:0[R1] ^ 31:0[R0]
00011fe0: R0 := 31:0[R0] ^ 31:0[R4]
00011fe9: R19 := mem[R31 + 0x10, el]:u64
00011fed: R20 := mem[R31 + 0x18, el]:u64
00011ff6: R0 := 32:1[31:0[R0].31:0[R0]]
00011fff: R1 := 31:0[R3] ^ 31:0[R0]
00012007: R1 := 31:0[R1] & 0xAAAAAAAA
00012010: R3 := 31:0[R3] ^ 31:0[R1]
00012019: R0 := 31:0[R0] ^ 31:0[R1]
00012022: R21 := mem[R31 + 0x20, el]:u64
00012026: R22 := mem[R31 + 0x28, el]:u64
0001202f: R3 := 32:1[31:0[R3].31:0[R3]]
00012039: R29 := mem[R31, el]:u64
0001203d: R30 := mem[R31 + 8, el]:u64
00012040: R31 := R31 + 0x30
00012049: R1 := 31:0[R0] ^ 31:0[R3] >> 8
00012051: R1 := 31:0[R1] & 0xFF00FF
0001205a: R0 := 31:0[R0] ^ 31:0[R1]
00012063: R3 := 31:0[R3] ^ 31:0[R1] << 8
0001206c: R1 := 31:0[R0] ^ 31:0[R3] >> 2
00012074: R1 := 31:0[R1] & 0x33333333
0001207d: R0 := 31:0[R0] ^ 31:0[R1]
00012086: R1 := 31:0[R3] ^ 31:0[R1] << 2
0001208f: R3 := 31:0[R1] ^ 31:0[R0] >> 0x10
00012097: R3 := 31:0[R3] & 0xFFFF
000120a0: R1 := 31:0[R1] ^ 31:0[R3]
000120a9: R0 := 31:0[R0] ^ 31:0[R3] << 0x10
000120b2: R3 := 31:0[R1] ^ 31:0[R0] >> 4
000120ba: R3 := 31:0[R3] & 0xF0F0F0F
000120c3: R1 := 31:0[R1] ^ 31:0[R3]
000120cc: R3 := 31:0[R0] ^ 31:0[R3] << 4
000120d4: R1 := 7:0[R1].15:8[R1].23:16[R1].31:24[R1]
000120dc: R3 := 7:0[R3].15:8[R3].23:16[R3].31:24[R3]
000120e4: #4062 := R2
000120e9: mem := mem with [#4062, el]:u32 <- 31:0[R3]
000120ee: mem := mem with [#4062 + 4, el]:u32 <- 31:0[R1]
000120f3: call R30 with noreturn

0003ae71: sub gl_des_is_weak_key(gl_des_is_weak_key_result)
0003b3d7: gl_des_is_weak_key_result :: out u32 = low:32[R0]

00010746:
0001074d: #1886 := R31 - 0x50
00010752: mem := mem with [#1886, el]:u64 <- R29
00010757: mem := mem with [#1886 + 8, el]:u64 <- R30
0001075b: R31 := #1886
00010761: V1 := 0xFEFEFEFEFEFEFEFE
00010768: R29 := R31
00010770: #1895 := R31 + 0x10
00010775: mem := mem with [#1895, el]:u64 <- R19
0001077a: mem := mem with [#1895 + 8, el]:u64 <- R20
00010781: R20 := 0
00010789: #1900 := R31 + 0x20
0001078e: mem := mem with [#1900, el]:u64 <- R21
00010793: mem := mem with [#1900 + 8, el]:u64 <- R22
00010799: R22 := 0x11000
000107a0: R22 := R22 + 0x8E0
000107a8: #1905 := R31 + 0x30
000107ad: mem := mem with [#1905, el]:u64 <- R23
000107b2: mem := mem with [#1905 + 8, el]:u64 <- R24
000107b8: R23 := 0x27000
000107bf: R24 := R31 + 0x40
000107c7: V0 := high:64[V0].mem[R0, el]:u64
000107ce: R22 := R22 + 0x90
000107d6: R0 := mem[R23 + 0xFB8, el]:u64
000107dd: R21 := 0x3F
000107e5: V0 := high:64[V0].63:0[V0] & 63:0[V1]
000107ed: R1 := mem[R0, el]:u64
000107f5: mem := mem with [R31 + 0x48, el]:u64 <- R1
000107fb: R1 := 0
00010803: mem := mem with [R31 + 0x40, el]:u64 <- 63:0[V0]
0003ae72: goto %00010805

00010805:
0001080c: R19 := 31:0[R20] + 31:0[R21]
00010814: R0 := R24
0001081a: R2 := 8
00010822: R19 := extend:64[31:1[R19]]
0001082a: R1 := R22 + (extend:64[31:0[R19]] << 3)
0001082f: R30 := 0x7488
00010832: call @memcmp with return %00010834

00010834:
00010839: #1921 := extend:64[31:0[R0]]
0001083d: NF := 63:63[#1921]
00010840: VF := 31:31[R0] & ~63:63[#1921]
00010843: ZF := #1921 = 0
00010846: CF := 31:31[R0] | 31:31[R0] & ~63:63[#1921] | ~63:63[#1921]
00010855: #1922 := 31:0[R0] = 0
0001084f: when #1922 goto %0001084d
0003ae73: goto %00010965

00010965:
0001097a: #1958 := (NF <> VF | ZF) <> 0
00010974: when #1958 goto %000108ea
0003ae74: goto %0001097d

000108ea:
000108f0: R21 := low:32[extend:64[31:0[R19]] - 1]
000108f8: #1942 := 1 + extend:64[~31:0[R20]] + extend:64[31:0[R21]]
000108fc: NF := 63:63[#1942]
000108ff: VF := 31:31[~31:0[R20]] & 31:31[R21] & ~63:63[#1942] |
          ~31:31[~31:0[R20]] & ~31:31[R21] & 63:63[#1942]
00010902: ZF := #1942 = 0
00010905: CF := 31:31[~31:0[R20]] & 31:31[R21] | 31:31[R21] & ~63:63[#1942] |
          31:31[~31:0[R20]] & ~63:63[#1942]
00010915: #1944 := NF <> VF
0001090f: when #1944 goto %0001090d
0003ae75: goto %0001091e

0001091e:
00010925: R19 := 31:0[R20] + 31:0[R21]
0001092d: R0 := R24
00010933: R2 := 8
0001093b: R19 := extend:64[31:1[R19]]
00010943: R1 := R22 + (extend:64[31:0[R19]] << 3)
00010948: R30 := 0x74F4
0001094a: call @memcmp with return %0001094c

0001094c:
00010951: #1955 := extend:64[31:0[R0]]
00010955: NF := 63:63[#1955]
00010958: VF := 31:31[R0] & ~63:63[#1955]
0001095b: ZF := #1955 = 0
0001095e: CF := 31:31[R0] | 31:31[R0] & ~63:63[#1955] | ~63:63[#1955]
0001096d: #1956 := ~31:0[R0] = 0
00010967: when #1956 goto %00010965
0003ae76: goto %0001084d

0001084d:
0001085c: R0 := 1
00010861: goto %0001085f

0001097d:
00010983: R20 := extend:64[31:0[R19]] + 1
0001098b: #1962 := 1 + extend:64[~31:0[R21]] + extend:64[31:0[R20]]
0001098f: NF := 63:63[#1962]
00010992: VF := 31:31[~31:0[R21]] & 31:31[R20] & ~63:63[#1962] |
          ~31:31[~31:0[R21]] & ~31:31[R20] & 63:63[#1962]
00010995: ZF := #1962 = 0
00010998: CF := 31:31[~31:0[R21]] & 31:31[R20] | 31:31[R20] & ~63:63[#1962] |
          31:31[~31:0[R21]] & ~63:63[#1962]
000109a8: #1964 := (NF <> VF | ZF) <> 0
000109a2: when #1964 goto %00010805
0003ae77: goto %0001090d

0001090d:
0001091c: R0 := 0
0003ae78: goto %0001085f

0001085f:
00010868: R23 := mem[R23 + 0xFB8, el]:u64
00010870: R1 := mem[R31 + 0x48, el]:u64
00010878: R2 := mem[R23, el]:u64
00010880: #1929 := 1 + ~R2 + R1
00010884: NF := 63:63[#1929]
00010887: VF := 63:63[R1] & 63:63[~R2] & ~63:63[#1929] | ~63:63[R1] &
          ~63:63[~R2] & 63:63[#1929]
0001088a: ZF := #1929 = 0
0001088d: CF := 63:63[R1] & 63:63[~R2] | 63:63[~R2] & ~63:63[#1929] |
          63:63[R1] & ~63:63[#1929]
00010891: R1 := #1929
00010897: R2 := 0
000108a3: #1934 := ~ZF <> 0
0001089d: when #1934 goto %0001089b
0003ae79: goto %000108ad

0001089b:
000108a8: R30 := 0x7508
000108ab: call @__stack_chk_fail with return %0003ae7a

0003ae7a:
0003ae7b: call @gl_des_setkey with noreturn

000108ad:
000108b4: R19 := mem[R31 + 0x10, el]:u64
000108b8: R20 := mem[R31 + 0x18, el]:u64
000108c1: R21 := mem[R31 + 0x20, el]:u64
000108c5: R22 := mem[R31 + 0x28, el]:u64
000108ce: R23 := mem[R31 + 0x30, el]:u64
000108d2: R24 := mem[R31 + 0x38, el]:u64
000108dc: R29 := mem[R31, el]:u64
000108e0: R30 := mem[R31 + 8, el]:u64
000108e3: R31 := R31 + 0x50
000108e8: call R30 with noreturn

0003ae7c: sub gl_des_makekey(gl_des_makekey_result)
0003b3d8: gl_des_makekey_result :: out u32 = low:32[R0]

00010a8d:
00010a94: #2014 := R31 - 0x60
00010a99: mem := mem with [#2014, el]:u64 <- R29
00010a9e: mem := mem with [#2014 + 8, el]:u64 <- R30
00010aa2: R31 := #2014
00010aa9: #2016 := 0xFFFFFFFFFFFFFFF8 + R2
00010aad: NF := 63:63[#2016]
00010ab0: VF := 63:63[R2] & ~63:63[#2016]
00010ab3: ZF := #2016 = 0
00010ab6: CF := 63:63[R2] | ~63:63[#2016] | 63:63[R2] & ~63:63[#2016]
00010abf: R29 := R31
00010ac7: #2020 := R31 + 0x10
00010acc: mem := mem with [#2020, el]:u64 <- R19
00010ad1: mem := mem with [#2020 + 8, el]:u64 <- R20
00010ad7: R20 := 0x27000
00010adf: R19 := R0
00010ae7: R3 := mem[R20 + 0xFB8, el]:u64
00010aef: R0 := mem[R3, el]:u64
00010af7: mem := mem with [R31 + 0x58, el]:u64 <- R0
00010afd: R0 := 0
00010b09: #2028 := ZF
00010b03: when #2028 goto %00010b01
0003ae7d: goto %00010cde

00010b01:
00010b11: #2032 := R31 + 0x30
00010b16: mem := mem with [#2032, el]:u64 <- R23
00010b1b: mem := mem with [#2032 + 8, el]:u64 <- R24
00010b23: R23 := R1
00010b2b: R0 := R23
00010b33: R1 := R19
00010b3b: #2046 := R31 + 0x20
00010b40: mem := mem with [#2046, el]:u64 <- R21
00010b45: mem := mem with [#2046 + 8, el]:u64 <- R22
00010b4b: R24 := 0x11000
00010b53: mem := mem with [R31 + 0x40, el]:u64 <- R25
00010b58: R30 := 0x75E0
00010b5a: call @des_key_schedule with return %00010b5c

00010b5c:
00010b64: V7 := mem[R19, el]:u64.mem[R19 + 8, el]:u64
00010b69: V0 := mem[R19 + 0x10, el]:u64.mem[R19 + 0x18, el]:u64
00010b6f: V16 := 0xFEFEFEFEFEFEFEFE
00010b79: V6 := mem[R19 + 0x20, el]:u64.mem[R19 + 0x28, el]:u64
00010b7e: V1 := mem[R19 + 0x30, el]:u64.mem[R19 + 0x38, el]:u64
00010b85: R24 := R24 + 0x8E0
00010b8f: V5 := mem[R19 + 0x40, el]:u64.mem[R19 + 0x48, el]:u64
00010b94: V4 := mem[R19 + 0x50, el]:u64.mem[R19 + 0x58, el]:u64
00010b9b: R24 := R24 + 0x90
00010ba5: V3 := mem[R19 + 0x60, el]:u64.mem[R19 + 0x68, el]:u64
00010baa: V2 := mem[R19 + 0x70, el]:u64.mem[R19 + 0x78, el]:u64
00010bb1: R25 := R31 + 0x50
00010bb9: V0 := 191:64[V0.V0]
00010bc0: R22 := 0x3F
00010bc8: V7 := 191:64[V7.V7]
00010bcf: R21 := 0
00010bd7: V6 := 191:64[V6.V6]
00010bdf: V1 := 191:64[V1.V1]
00010be7: V5 := 191:64[V5.V5]
00010bef: V4 := 191:64[V4.V4]
00010bf7: #2077 := R19 + 0xE0
00010bfc: mem := mem with [#2077, el]:u128 <- V0
00010c01: mem := mem with [#2077 + 0x10, el]:u128 <- V7
00010c09: V3 := 191:64[V3.V3]
00010c11: #2083 := R19 + 0xC0
00010c16: mem := mem with [#2083, el]:u128 <- V1
00010c1b: mem := mem with [#2083 + 0x10, el]:u128 <- V6
00010c23: V2 := 191:64[V2.V2]
00010c2b: #2089 := R19 + 0xA0
00010c30: mem := mem with [#2089, el]:u128 <- V4
00010c35: mem := mem with [#2089 + 0x10, el]:u128 <- V5
00010c3d: #2094 := R19 + 0x80
00010c42: mem := mem with [#2094, el]:u128 <- V2
00010c47: mem := mem with [#2094 + 0x10, el]:u128 <- V3
00010c4f: V0 := high:64[V0].mem[R23, el]:u64
00010c57: V0 := high:64[V0].63:0[V0] & 63:0[V16]
00010c5f: mem := mem with [R31 + 0x50, el]:u64 <- 63:0[V0]
0003ae7e: goto %00010c63

00010c63:
00010c6a: R19 := 31:0[R21] + 31:0[R22]
00010c72: R0 := R25
00010c78: R2 := 8
00010c80: R19 := extend:64[31:1[R19]]
00010c88: R1 := R24 + (extend:64[31:0[R19]] << 3)
00010c8d: R30 := 0x7660
00010c8f: call @memcmp with return %00010c91

00010c91:
00010c96: #2108 := extend:64[31:0[R0]]
00010c9a: NF := 63:63[#2108]
00010c9d: VF := 31:31[R0] & ~63:63[#2108]
00010ca0: ZF := #2108 = 0
00010ca3: CF := 31:31[R0] | 31:31[R0] & ~63:63[#2108] | ~63:63[#2108]
00010cb2: #2109 := 31:0[R0] = 0
00010cac: when #2109 goto %00010caa
0003ae7f: goto %0001bd3e

0001bd3e:
0001bd4a: #10883 := (NF <> VF | ZF) <> 0
0001bd44: when #10883 goto %0001bd42
0003ae80: goto %0001bdf7

0001bd42:
0001bd52: R22 := low:32[extend:64[31:0[R19]] - 1]
0001bd5a: #10887 := 1 + extend:64[~31:0[R21]] + extend:64[31:0[R22]]
0001bd5e: NF := 63:63[#10887]
0001bd61: VF := 31:31[~31:0[R21]] & 31:31[R22] & ~63:63[#10887] |
          ~31:31[~31:0[R21]] & ~31:31[R22] & 63:63[#10887]
0001bd64: ZF := #10887 = 0
0001bd67: CF := 31:31[~31:0[R21]] & 31:31[R22] | 31:31[R22] & ~63:63[#10887]
          | 31:31[~31:0[R21]] & ~63:63[#10887]
0001bd77: #10889 := NF <> VF
0001bd71: when #10889 goto %0001bd6f
0003ae81: goto %0001bda6

0001bda6:
0001bdad: R19 := 31:0[R21] + 31:0[R22]
0001bdb5: R0 := R25
0001bdbb: R2 := 8
0001bdc3: R19 := extend:64[31:1[R19]]
0001bdcb: R1 := R24 + (extend:64[31:0[R19]] << 3)
0001bdd0: R30 := 0x76B0
0001bdd2: call @memcmp with return %0001bdd4

0001bdd4:
0001bdd9: #10903 := extend:64[31:0[R0]]
0001bddd: NF := 63:63[#10903]
0001bde0: VF := 31:31[R0] & ~63:63[#10903]
0001bde3: ZF := #10903 = 0
0001bde6: CF := 31:31[R0] | 31:31[R0] & ~63:63[#10903] | ~63:63[#10903]
0001bdf4: #10904 := ~31:0[R0] = 0
0001bdee: when #10904 goto %0001bd3e
0003ae82: goto %00010caa

00010caa:
00010cb9: R0 := 0
00010cc2: R21 := mem[R31 + 0x20, el]:u64
00010cc6: R22 := mem[R31 + 0x28, el]:u64
00010ccf: R23 := mem[R31 + 0x30, el]:u64
00010cd3: R24 := mem[R31 + 0x38, el]:u64
00010cdb: R25 := mem[R31 + 0x40, el]:u64
00010ce0: goto %00010cde

0001bdf7:
0001bdfd: R21 := extend:64[31:0[R19]] + 1
0001be05: #10908 := 1 + extend:64[~31:0[R22]] + extend:64[31:0[R21]]
0001be09: NF := 63:63[#10908]
0001be0c: VF := 31:31[~31:0[R22]] & 31:31[R21] & ~63:63[#10908] |
          ~31:31[~31:0[R22]] & ~31:31[R21] & 63:63[#10908]
0001be0f: ZF := #10908 = 0
0001be12: CF := 31:31[~31:0[R22]] & 31:31[R21] | 31:31[R21] & ~63:63[#10908]
          | 31:31[~31:0[R22]] & ~63:63[#10908]
0001be22: #10910 := (NF <> VF | ZF) <> 0
0001be1c: when #10910 goto %00010c63
0003ae83: goto %0001bd6f

0001bd6f:
0001bd7e: R0 := 1
0001bd87: R21 := mem[R31 + 0x20, el]:u64
0001bd8b: R22 := mem[R31 + 0x28, el]:u64
0001bd94: R23 := mem[R31 + 0x30, el]:u64
0001bd98: R24 := mem[R31 + 0x38, el]:u64
0001bda0: R25 := mem[R31 + 0x40, el]:u64
0001bda4: goto %00010cde

00010cde:
00010ce7: R20 := mem[R20 + 0xFB8, el]:u64
00010cef: R1 := mem[R31 + 0x58, el]:u64
00010cf7: R2 := mem[R20, el]:u64
00010cff: #2119 := 1 + ~R2 + R1
00010d03: NF := 63:63[#2119]
00010d06: VF := 63:63[R1] & 63:63[~R2] & ~63:63[#2119] | ~63:63[R1] &
          ~63:63[~R2] & 63:63[#2119]
00010d09: ZF := #2119 = 0
00010d0c: CF := 63:63[R1] & 63:63[~R2] | 63:63[~R2] & ~63:63[#2119] |
          63:63[R1] & ~63:63[#2119]
00010d10: R1 := #2119
00010d16: R2 := 0
00010d22: #2124 := ~ZF <> 0
00010d1c: when #2124 goto %00010d1a
0003ae84: goto %0001bd1b

00010d1a:
00010d2a: #2128 := R31 + 0x20
00010d2f: mem := mem with [#2128, el]:u64 <- R21
00010d34: mem := mem with [#2128 + 8, el]:u64 <- R22
00010d3c: #2133 := R31 + 0x30
00010d41: mem := mem with [#2133, el]:u64 <- R23
00010d46: mem := mem with [#2133 + 8, el]:u64 <- R24
00010d4e: mem := mem with [R31 + 0x40, el]:u64 <- R25
00010d53: R30 := 0x76DC
00010d55: call @__stack_chk_fail with return %00010d57

00010d57:
0003ae85: call @gl_des_ecb_crypt with noreturn

0001bd1b:
0001bd22: R19 := mem[R31 + 0x10, el]:u64
0001bd26: R20 := mem[R31 + 0x18, el]:u64
0001bd30: R29 := mem[R31, el]:u64
0001bd34: R30 := mem[R31 + 8, el]:u64
0001bd37: R31 := R31 + 0x60
0001bd3c: call R30 with noreturn

0003ae86: sub gl_des_setkey(gl_des_setkey_result)
0003b3d9: gl_des_setkey_result :: out u32 = low:32[R0]

0000ff39:
0000ff43: #474 := R31 - 0x20
0000ff48: mem := mem with [#474, el]:u64 <- R29
0000ff4d: mem := mem with [#474 + 8, el]:u64 <- R30
0000ff51: R31 := #474
0000ff58: R29 := R31
0000ff60: mem := mem with [R31 + 0x10, el]:u64 <- R19
0000ff68: R19 := R0
0000ff70: R0 := R1
0000ff78: R1 := R19
0000ff7d: R30 := 0x7524
0000ff80: call @des_key_schedule with return %000109ab

000109ab:
000109b3: V0 := mem[R19, el]:u64.mem[R19 + 8, el]:u64
000109b8: V1 := mem[R19 + 0x10, el]:u64.mem[R19 + 0x18, el]:u64
000109c2: V2 := mem[R19 + 0x20, el]:u64.mem[R19 + 0x28, el]:u64
000109c7: V3 := mem[R19 + 0x30, el]:u64.mem[R19 + 0x38, el]:u64
000109d1: V4 := mem[R19 + 0x40, el]:u64.mem[R19 + 0x48, el]:u64
000109d6: V5 := mem[R19 + 0x50, el]:u64.mem[R19 + 0x58, el]:u64
000109e0: V7 := mem[R19 + 0x60, el]:u64.mem[R19 + 0x68, el]:u64
000109e5: V6 := mem[R19 + 0x70, el]:u64.mem[R19 + 0x78, el]:u64
000109ed: V5 := 191:64[V5.V5]
000109f5: V4 := 191:64[V4.V4]
000109fd: V7 := 191:64[V7.V7]
00010a05: V6 := 191:64[V6.V6]
00010a0d: V3 := 191:64[V3.V3]
00010a15: V2 := 191:64[V2.V2]
00010a1d: #1990 := R19 + 0xA0
00010a22: mem := mem with [#1990, el]:u128 <- V5
00010a27: mem := mem with [#1990 + 0x10, el]:u128 <- V4
00010a2f: V1 := 191:64[V1.V1]
00010a37: #1996 := R19 + 0x80
00010a3c: mem := mem with [#1996, el]:u128 <- V6
00010a41: mem := mem with [#1996 + 0x10, el]:u128 <- V7
00010a49: V0 := 191:64[V0.V0]
00010a51: #2002 := R19 + 0xC0
00010a56: mem := mem with [#2002, el]:u128 <- V3
00010a5b: mem := mem with [#2002 + 0x10, el]:u128 <- V2
00010a63: #2007 := R19 + 0xE0
00010a68: mem := mem with [#2007, el]:u128 <- V1
00010a6d: mem := mem with [#2007 + 0x10, el]:u128 <- V0
00010a75: R19 := mem[R31 + 0x10, el]:u64
00010a7f: R29 := mem[R31, el]:u64
00010a83: R30 := mem[R31 + 8, el]:u64
00010a86: R31 := R31 + 0x20
00010a8b: call R30 with noreturn

0003ae87: sub headers_recv(headers_recv_result)
0003b3da: headers_recv_result :: out u32 = low:32[R0]

0001ec62:
0001ec69: #12768 := R31 - 0xA0
0001ec6e: mem := mem with [#12768, el]:u64 <- R29
0001ec73: mem := mem with [#12768 + 8, el]:u64 <- R30
0001ec77: R31 := #12768
0001ec7e: R29 := R31
0001ec86: #12773 := R31 + 0x20
0001ec8b: mem := mem with [#12773, el]:u64 <- R21
0001ec90: mem := mem with [#12773 + 8, el]:u64 <- R22
0001ec96: R22 := 0x27000
0001ec9f: R21 := 31:0[R0]
0001eca7: R2 := mem[R22 + 0xFB8, el]:u64
0001ecaf: #12782 := R31 + 0x10
0001ecb4: mem := mem with [#12782, el]:u64 <- R19
0001ecb9: mem := mem with [#12782 + 8, el]:u64 <- R20
0001ecc1: R20 := R1
0001ecc9: R3 := mem[R2, el]:u64
0001ecd1: mem := mem with [R31 + 0x98, el]:u64 <- R3
0001ecd7: R3 := 0
0001ecde: R1 := 0x1000
0001ece4: R0 := 0x1000
0001ecec: #12791 := R31 + 0x30
0001ecf1: mem := mem with [#12791, el]:u64 <- R23
0001ecf6: mem := mem with [#12791 + 8, el]:u64 <- R24
0001ecfd: R23 := R31 + 0x84
0001ed05: #12796 := R31 + 0x40
0001ed0a: mem := mem with [#12796, el]:u64 <- R25
0001ed0f: mem := mem with [#12796 + 8, el]:u64 <- R26
0001ed16: R24 := R31 + 0x88
0001ed1e: mem := mem with [R31 + 0x84, el]:u32 <- 31:0[R1]
0001ed26: mem := mem with [R31 + 0x90, el]:u64 <- 0
0001ed2b: R30 := 0xB8C8
0001ed2d: call @new with return %0001ed2f

0001ed2f:
0001ed35: R3 := R0
0001ed3d: R2 := R23
0001ed46: R0 := 31:0[R21]
0001ed4e: R1 := R24
0001ed56: mem := mem with [R31 + 0x88, el]:u64 <- R3
0001ed5b: R30 := 0xB8E0
0001ed5d: call @so_recvln with return %0001ed5f

0001ed5f:
0001ed64: #12810 := extend:64[31:0[R0]]
0001ed68: NF := 63:63[#12810]
0001ed6b: VF := 31:31[R0] & ~63:63[#12810]
0001ed6e: ZF := #12810 = 0
0001ed71: CF := 31:31[R0] | 31:31[R0] & ~63:63[#12810] | ~63:63[#12810]
0001ed82: #12812 := (NF <> VF | ZF) <> 0
0001ed7c: when #12812 goto %0001ed7a
0003ae88: goto %0002c424

0001ed7a:
0001ed8b: R19 := 31:0[R0]
0001ed91: R0 := 0x27000
0001ed99: mem := mem with [R31 + 0x68, el]:u64 <- R0
0003ae89: goto %0001ed9b

0002c424:
0002c428: R0 := 0x27000
0002c430: R1 := R0
0002c438: mem := mem with [R31 + 0x68, el]:u64 <- R1
0002c440: #19544 := R31 + 0x50
0002c445: mem := mem with [#19544, el]:u64 <- R27
0002c44a: mem := mem with [#19544 + 8, el]:u64 <- R28
0002c452: R1 := mem[R1 + 0xF78, el]:u64
0002c45a: R0 := mem[R31 + 0x88, el]:u64
0002c463: R1 := mem[R1, el]:u32
0002c46e: #19549 := ~31:0[R1] = 0
0002c468: when #19549 goto %0002bfac
0003ae8a: goto %0002bfd8

0002bfac:
0002bfb2: R2 := R0
0002bfb8: R1 := 0x12000
0002bfbf: R0 := 1
0002bfc6: R1 := R1 + 0x730
0002bfcb: R30 := 0xBB70
0002bfcd: call @__printf_chk with return %0002bfcf

0002bfcf:
0002bfd5: R0 := mem[R31 + 0x88, el]:u64
0002bfda: goto %0002bfd8

0002bfd8:
0002bfde: R30 := 0xB90C
0002bfe0: call @trimr with return %0002bfe2

0002bfe2:
0002bfe7: R19 := R31 + 0x90
0002bfef: R0 := mem[R31 + 0x88, el]:u64
0002bff5: R26 := 0x13000
0002bffc: R28 := R26 + 0x178
0002c001: R30 := 0xB920
0002c003: call @strdup with return %0002c005

0002c005:
0002c00b: R25 := R0
0002c013: R27 := mem[R31 + 0x88, el]:u64
0002c01b: R0 := R27
0002c020: R30 := 0xB930
0002c022: call @strlen with return %0002c024

0002c024:
0002c02a: R1 := R28
0002c032: R2 := R19
0002c03a: mem := mem with [R31 + 0x60, el]:u64 <- R0
0002c042: R0 := R27
0002c047: R30 := 0xB944
0002c049: call @strtok_r with return %0002c04b

0002c04b:
0002c051: R27 := R0
0002c05c: #19428 := R0 = 0
0002c056: when #19428 goto %0001f2b3
0003ae8b: goto %0002c05f

0002c05f:
0002c065: R0 := mem[R31 + 0x88, el]:u64
0002c06b: R1 := 0x12000
0002c071: R2 := 5
0002c078: R1 := R1 + 0x740
0002c07d: R30 := 0xB960
0002c07f: call @strncasecmp with return %0002c081

0002c081:
0002c08b: #19430 := 31:0[R0] = 0
0002c085: when #19430 goto %0002c083
0003ae8c: goto %0002c1e4

0002c1e4:
0002c1e8: R1 := 0x12000
0002c1f0: R0 := R27
0002c1f7: R1 := R1 + 0x748
0002c1fd: R2 := 3
0002c202: R30 := 0xB978
0002c204: call @strncasecmp with return %0002c206

0002c206:
0002c20f: #19482 := 31:0[R0] = 0
0002c209: when #19482 goto %0002c083
0003ae8d: goto %0002c212

0002c083:
0002c093: mem := mem with [R20, el]:u32 <- 0
0002c09b: R0 := R27
0002c0a3: mem := mem with [R20 + 0x1C, el]:u32 <- 0
0002c0a8: R30 := 0xBB88
0002c0aa: call @strdup with return %0002c0ac

0002c0ac:
0002c0b2: #19437 := R20 + 0x48
0002c0b7: mem := mem with [#19437, el]:u64 <- R0
0002c0bc: mem := mem with [#19437 + 8, el]:u64 <- 0
0002c0c4: R2 := R19
0002c0cb: R1 := R26 + 0x178
0002c0d1: R0 := 0
0002c0d6: R30 := 0xBB9C
0002c0d8: call @strtok_r with return %0002c0da

0002c0da:
0002c0e0: R19 := R0
0002c0ec: #19445 := R0 = 0
0002c0e6: when #19445 goto %0002c0e4
0003ae8e: goto %0002c14a

0002c0e4:
0002c0f4: R0 := mem[R20 + 0x50, el]:u64
0002c100: #19447 := ~R0 = 0
0002c0fa: when #19447 goto %0002c0f8
0003ae8f: goto %0002c12e

0002c12e:
0002c132: R0 := 0x14000
0002c139: R0 := R0 + 0xD00
0002c13e: R30 := 0xBC7C
0002c140: call @strdup with return %0002c142

0002c142:
0002c148: mem := mem with [R20 + 0x50, el]:u64 <- R0
0003ae90: goto %0002c0f8

0002c0f8:
0002c108: R0 := R25
0002c113: #19451 := ~R25 = 0
0002c10d: when #19451 goto %0001f586
0003ae91: goto %0002c116

0002c116:
0002c11b: R19 := 0xFFFFFFFFFFFFFFFE
0002c124: R27 := mem[R31 + 0x50, el]:u64
0002c128: R28 := mem[R31 + 0x58, el]:u64
0002c12c: goto %0001ed9b

0002c14a:
0002c14d: R30 := 0xBBA8
0002c14f: call @strdup with return %0002c151

0002c151:
0002c157: R27 := R0
0002c15c: R30 := 0xBBB0
0002c15e: call @strlen with return %0002c160

0002c160:
0002c166: R0 := R19 + R0
0002c16e: R3 := mem[R31 + 0x88, el]:u64
0002c177: R1 := mem[R31 + 0x60, el]:u32
0002c17f: R3 := R3 + extend:64[31:0[R1]]
0002c184: goto %0002c182

0002c182:
0002c18c: R1 := pad:32[mem[R0]]
0002c194: #19467 := 1 + ~R0 + R3
0002c198: NF := 63:63[#19467]
0002c19b: VF := 63:63[R3] & 63:63[~R0] & ~63:63[#19467] | ~63:63[R3] &
          ~63:63[~R0] & 63:63[#19467]
0002c19e: ZF := #19467 = 0
0002c1a1: CF := 63:63[R3] & 63:63[~R0] | 63:63[~R0] & ~63:63[#19467] |
          63:63[R3] & ~63:63[#19467]
0002c1b0: #19472 := (CF & ~ZF) <> 0
0002c1aa: when #19472 goto %0002c1a8
0003ae92: goto %0001f35b

0002c1a8:
0002c1b7: #19473 := 0xFFFFFFFFFFFFFFE0 + extend:64[31:0[R1]]
0002c1bb: NF := 63:63[#19473]
0002c1be: VF := 31:31[R1] & ~63:63[#19473]
0002c1c1: ZF := #19473 = 0
0002c1c4: CF := 31:31[R1] | 31:31[R1] & ~63:63[#19473] | ~63:63[#19473]
0002c1ce: R2 := R0 + 1
0002c1d9: #19475 := ~ZF <> 0
0002c1d3: when #19475 goto %0001f349
0003ae93: goto %0002c1dc

0001f349:
0001f350: R1 := pad:32[mem[R0 + 1]]
0001f358: R0 := R2
0001f35d: goto %0001f35b

0001f35b:
0001f368: #12988 := ~31:0[R1] = 0
0001f362: when #12988 goto %0001f360
0003ae94: goto %0001f389

0001f360:
0001f36d: R30 := 0xBD68
0001f36f: call @strdup with return %0001f371

0001f371:
0001f377: mem := mem with [R20 + 0x50, el]:u64 <- R0
0001f37c: goto %0001f37a

0001f389:
0001f38f: R0 := mem[R20 + 0x50, el]:u64
0003ae95: goto %0001f37a

0001f37a:
0001f386: #12989 := R0 = 0
0001f380: when #12989 goto %0001ee2b
0003ae96: goto %0001ee48

0002c1dc:
0002c1e2: R0 := R2
0003ae97: goto %0002c182

0002c212:
0002c216: R1 := 0x12000
0002c21e: R0 := R25
0002c225: R1 := R1 + 0x7D8
0002c22a: R30 := 0xB98C
0002c22c: call @strstr with return %0002c22e

0002c22e:
0002c237: #19486 := R0 = 0
0002c231: when #19486 goto %0001f2b3
0003ae98: goto %0002c23a

0001f2b3:
0001f2b9: R0 := mem[R31 + 0x68, el]:u64
0001f2c1: R0 := mem[R0 + 0xF78, el]:u64
0001f2ca: R0 := mem[R0, el]:u32
0001f2d6: #12973 := ~31:0[R0] = 0
0001f2d0: when #12973 goto %0001f2ce
0003ae99: goto %0001f322

0001f2ce:
0001f2de: R2 := R25
0001f2e4: R1 := 0x12000
0001f2eb: R1 := R1 + 0x758
0001f2f2: R0 := 1
0001f2f7: R30 := 0xBD84
0001f2f9: call @__printf_chk with return %0001f2fb

0001f2fb:
0001f300: R19 := 0xFFFFFFFFFFFFFFFC
0001f308: R0 := R25
0001f30d: R30 := 0xBD90
0001f30f: call @free with return %0001f311

0001f311:
0001f318: R27 := mem[R31 + 0x50, el]:u64
0001f31c: R28 := mem[R31 + 0x58, el]:u64
0001f320: goto %0001ed9b

0001f322:
0001f328: R0 := R25
0001f32f: R19 := 0xFFFFFFFFFFFFFFFC
0001f334: R30 := 0xBD50
0001f336: call @free with return %0001f338

0001f338:
0001f33f: R27 := mem[R31 + 0x50, el]:u64
0001f343: R28 := mem[R31 + 0x58, el]:u64
0001f347: goto %0001ed9b

0002c23a:
0002c23e: V0 := 0
0002c245: R0 := 1
0002c24d: mem := mem with [R20, el]:u32 <- 31:0[R0]
0002c255: R0 := R27
0002c25d: mem := mem with [R20 + 0x1C, el]:u32 <- 0
0002c265: mem := mem with [R20 + 0x48, el]:u64 <- 0
0002c26d: mem := mem with [R20 + 0x28, el]:u128 <- V0
0002c275: mem := mem with [R20 + 0x38, el]:u128 <- V0
0002c27a: R30 := 0xB9B4
0002c27c: call @strdup with return %0002c27e

0002c27e:
0002c284: R1 := R28
0002c28c: mem := mem with [R20 + 0x28, el]:u64 <- R0
0002c294: R2 := R19
0002c29a: R0 := 0
0002c29f: R30 := 0xB9C8
0002c2a1: call @strtok_r with return %0002c2a3

0002c2a3:
0002c2ad: #19500 := R0 = 0
0002c2a7: when #19500 goto %0002c2a5
0003ae9a: goto %0002c3dd

0002c3dd:
0002c3e0: R30 := 0xB9D0
0002c3e2: call @strdup with return %0002c3e4

0002c3e4:
0002c3ea: mem := mem with [R20 + 0x30, el]:u64 <- R0
0003ae9b: goto %0002c2a5

0002c2a5:
0002c2b5: R2 := R19
0002c2bc: R1 := R26 + 0x178
0002c2c2: R0 := 0
0002c2c7: R30 := 0xB9E4
0002c2c9: call @strtok_r with return %0002c2cb

0002c2cb:
0002c2d5: #19504 := R0 = 0
0002c2cf: when #19504 goto %0002c2cd
0003ae9c: goto %0002c3ce

0002c3ce:
0002c3d1: R30 := 0xB9EC
0002c3d3: call @strdup with return %0002c3d5

0002c3d5:
0002c3db: mem := mem with [R20 + 0x48, el]:u64 <- R0
0003ae9d: goto %0002c2cd

0002c2cd:
0002c2dd: R19 := mem[R20 + 0x30, el]:u64
0002c2e8: #19506 := R19 = 0
0002c2e2: when #19506 goto %0001f429
0003ae9e: goto %0002c2eb

0001f429:
0001f42f: R0 := R25
0001f436: R19 := 0xFFFFFFFFFFFFFFFD
0001f43b: R30 := 0xBE6C
0001f43d: call @free with return %0001f43f

0001f43f:
0001f446: R27 := mem[R31 + 0x50, el]:u64
0001f44a: R28 := mem[R31 + 0x58, el]:u64
0001f44e: goto %0001ed9b

0002c2eb:
0002c2f1: R0 := mem[R20 + 0x48, el]:u64
0002c2fc: #19508 := R0 = 0
0002c2f6: when #19508 goto %0001f450
0003ae9f: goto %0002c2ff

0001f450:
0001f456: R0 := R25
0001f45b: R30 := 0xBE7C
0001f45d: call @free with return %0001f45f

0001f45f:
0001f465: R0 := mem[R31 + 0x88, el]:u64
0001f46c: R19 := 0xFFFFFFFFFFFFFFFD
0001f471: R30 := 0xBE88
0001f473: call @free with return %0001f475

0001f475:
0001f47c: R27 := mem[R31 + 0x50, el]:u64
0001f480: R28 := mem[R31 + 0x58, el]:u64
0001f484: goto %0001edaa

0002c2ff:
0002c305: R0 := R19
0002c30b: R1 := 0x12000
0002c312: R1 := R1 + 0x750
0002c317: R30 := 0xBA10
0002c319: call @strstr with return %0002c31b

0002c31b:
0002c320: #19512 := R0
0002c324: NF := 63:63[#19512]
0002c327: VF := 63:63[R0] & ~63:63[#19512]
0002c32a: ZF := #19512 = 0
0002c32d: CF := 63:63[R0] | ~63:63[#19512] | 63:63[R0] & ~63:63[#19512]
0002c336: R0 := R0 + 3
0002c34c: #19514 := ~ZF <> 0
0002c34d: goto %0002c344

0002c344:
0002c346: when #19514 goto %0002c33e
0002c347: goto %0002c341

0002c341:
0002c342: R19 := R19
0002c349: goto %0002c345

0002c33e:
0002c33f: R19 := R0
0002c348: goto %0002c345

0002c345:
0002c355: R1 := 0x2F
0002c35d: R0 := R19
0002c362: R30 := 0xBA28
0002c364: call @strchr with return %0002c366

0002c366:
0002c36c: mem := mem with [R31 + 0x90, el]:u64 <- R0
0002c374: R27 := R0
0002c37f: #19521 := R0 = 0
0002c379: when #19521 goto %0001f069
0003aea0: goto %0002c382

0001f069:
0001f06f: R0 := R19
0001f074: R30 := 0xBE38
0001f076: call @strlen with return %0001f078

0001f078:
0001f07f: R2 := 31:0[R0]
0001f086: R1 := 0
0001f08e: R0 := R19
0001f093: R30 := 0xBE48
0001f095: call @substr with return %0001f097

0001f097:
0001f09d: mem := mem with [R31 + 0x78, el]:u64 <- R0
0001f0a3: R0 := 0x12000
0001f0aa: R0 := R0 + 0x508
0001f0af: R30 := 0xBE58
0001f0b1: call @strdup with return %0001f0b3

0001f0b3:
0001f0b9: mem := mem with [R20 + 0x38, el]:u64 <- R0
0001f0be: goto %0001f0bc

0002c382:
0002c389: R2 := 31:0[R0] - 31:0[R19]
0002c390: R1 := 0
0002c398: R0 := R19
0002c39d: R30 := 0xBA44
0002c39f: call @substr with return %0002c3a1

0002c3a1:
0002c3a7: R1 := R0
0002c3ad: R27 := 0
0002c3b5: R0 := mem[R31 + 0x90, el]:u64
0002c3bd: mem := mem with [R31 + 0x78, el]:u64 <- R1
0002c3c2: R30 := 0xBA58
0002c3c4: call @strdup with return %0002c3c6

0002c3c6:
0002c3cc: mem := mem with [R20 + 0x38, el]:u64 <- R0
0003aea1: goto %0001f0bc

0001f0bc:
0001f0c3: R28 := 0x12000
0001f0ca: R28 := R28 + 0x728
0003aea2: goto %0001f0ce

0001f0ce:
0001f0d4: R2 := R23
0001f0dc: R1 := R24
0001f0e5: R0 := 31:0[R21]
0001f0ea: R30 := 0xBA78
0001f0ec: call @so_recvln with return %0001f0ee

0001f0ee:
0001f0f5: R19 := 31:0[R0]
0001f0fd: R0 := mem[R31 + 0x88, el]:u64
0001f102: R30 := 0xBA84
0001f104: call @trimr with return %0001f106

0001f106:
0001f10b: #12914 := extend:64[31:0[R19]]
0001f10f: NF := 63:63[#12914]
0001f112: VF := 31:31[R19] & ~63:63[#12914]
0001f115: ZF := #12914 = 0
0001f118: CF := 31:31[R19] | 31:31[R19] & ~63:63[#12914] | ~63:63[#12914]
0001f129: #12916 := (NF <> VF | ZF) <> 0
0001f123: when #12916 goto %0001f121
0003aea3: goto %0001f197

0001f197:
0001f19d: R26 := mem[R31 + 0x88, el]:u64
0001f1a5: R1 := R28
0001f1ad: R0 := R26
0001f1b2: R30 := 0xBA9C
0001f1b4: call @strcspn with return %0001f1b6

0001f1b6:
0001f1bc: R2 := R0
0001f1c4: R0 := R26
0001f1cc: mem := mem with [R31 + 0x60, el]:u64 <- R2
0001f1d1: R30 := 0xBAAC
0001f1d3: call @strlen with return %0001f1d5

0001f1d5:
0001f1db: R2 := mem[R31 + 0x60, el]:u64
0001f1e3: #12943 := 1 + ~R0 + R2
0001f1e7: NF := 63:63[#12943]
0001f1ea: VF := 63:63[R2] & 63:63[~R0] & ~63:63[#12943] | ~63:63[R2] &
          ~63:63[~R0] & 63:63[#12943]
0001f1ed: ZF := #12943 = 0
0001f1f0: CF := 63:63[R2] & 63:63[~R0] | 63:63[~R0] & ~63:63[#12943] |
          63:63[R2] & ~63:63[#12943]
0001f1fe: #12948 := ~ZF <> 0
0001f1f8: when #12948 goto %0001f1f6
0003aea4: goto %0001f29b

0001f1f6:
0001f206: #12952 := 1 + extend:64[~(31:0[R2] << 0x30)] + R0
0001f20a: NF := 63:63[#12952]
0001f20d: VF := 63:63[R0] & 31:31[~(31:0[R2] << 0x30)] & ~63:63[#12952] |
          ~63:63[R0] & ~31:31[~(31:0[R2] << 0x30)] & 63:63[#12952]
0001f210: ZF := #12952 = 0
0001f213: CF := 63:63[R0] & 31:31[~(31:0[R2] << 0x30)] |
          31:31[~(31:0[R2] << 0x30)] & ~63:63[#12952] | 63:63[R0] &
          ~63:63[#12952]
0001f21d: mem := mem with [R31 + 0x60, el]:u64 <- 0
0001f225: R0 := mem[R20 + 8, el]:u64
0001f22d: mem := mem with [R31 + 0x70, el]:u64 <- R0
0001f239: #12958 := ZF
0001f233: when #12958 goto %0001f231
0003aea5: goto %0001f403

0001f403:
0001f409: R0 := R26
0001f410: R1 := 0
0001f415: R30 := 0xBCD4
0001f417: call @substr with return %0001f419

0001f419:
0001f41f: mem := mem with [R31 + 0x60, el]:u64 <- R0
0001f427: R26 := mem[R31 + 0x88, el]:u64
0003aea6: goto %0001f231

0001f231:
0001f241: R0 := R26
0001f248: R1 := 0x3A
0001f24d: R30 := 0xBCE8
0001f24f: call @strchr with return %0001f251

0001f251:
0001f257: R2 := R0
0001f263: #12965 := R0 = 0
0001f25d: when #12965 goto %0001f25b
0003aea7: goto %0001f391

0001f391:
0001f398: R1 := pad:32[mem[R0 + 1]]
0001f39f: R0 := R0 + 1
0001f3a6: #12991 := 0xFFFFFFFFFFFFFFE0 + extend:64[31:0[R1]]
0001f3aa: NF := 63:63[#12991]
0001f3ad: VF := 31:31[R1] & ~63:63[#12991]
0001f3b0: ZF := #12991 = 0
0001f3b3: CF := 31:31[R1] | 31:31[R1] & ~63:63[#12991] | ~63:63[#12991]
0001f3c2: #12993 := ~ZF <> 0
0001f3bc: when #12993 goto %0001f3ba
0003aea8: goto %0001f3d3

0001f3d3:
0001f3db: R1 := pad:32[mem[R0 + 1]]
0001f3de: R0 := R0 + 1
0001f3e5: #12997 := 0xFFFFFFFFFFFFFFE0 + extend:64[31:0[R1]]
0001f3e9: NF := 63:63[#12997]
0001f3ec: VF := 31:31[R1] & ~63:63[#12997]
0001f3ef: ZF := #12997 = 0
0001f3f2: CF := 31:31[R1] | 31:31[R1] & ~63:63[#12997] | ~63:63[#12997]
0001f400: #12999 := ZF
0001f3fa: when #12999 goto %0001f3d3
0003aea9: goto %0001f3ba

0001f3ba:
0001f3c7: R30 := 0xBD10
0001f3c9: call @strdup with return %0001f3cb

0001f3cb:
0001f3d1: R2 := R0
0003aeaa: goto %0001f25b

0001f25b:
0001f26b: R1 := mem[R31 + 0x60, el]:u64
0001f272: R4 := 0
0001f27a: R0 := mem[R31 + 0x70, el]:u64
0001f281: R3 := 0
0001f286: R30 := 0xBD28
0001f288: call @hlist_add with return %0001f28a

0001f28a:
0001f290: mem := mem with [R20 + 8, el]:u64 <- R0
0001f298: R26 := mem[R31 + 0x88, el]:u64
0001f29d: goto %0001f29b

0001f29b:
0001f2a5: R0 := pad:32[mem[R26]]
0001f2b0: #12969 := ~31:0[R0] = 0
0001f2aa: when #12969 goto %0001f0ce
0003aeab: goto %0001f121

0001f121:
0001f132: R0 := mem[R20, el]:u32
0001f13d: #12918 := 31:0[R0] = 0
0001f137: when #12918 goto %0001efa6
0003aeac: goto %0001f140

0001f140:
0001f146: R1 := mem[R31 + 0x78, el]:u64
0001f152: #12920 := R1 = 0
0001f14c: when #12920 goto %0001f14a
0003aead: goto %0001f182

0001f182:
0001f189: R0 := pad:32[mem[R1]]
0001f194: #12925 := ~31:0[R0] = 0
0001f18e: when #12925 goto %0001eedf
0003aeae: goto %0001f14a

0001eedf:
0001eee5: R0 := R1
0001eeea: R30 := 0xBDB4
0001eeec: call @strdup with return %0001eeee

0001eeee:
0001eef4: mem := mem with [R20 + 0x40, el]:u64 <- R0
0001eefa: R23 := 0x12000
0001ef02: R0 := mem[R20 + 8, el]:u64
0001ef09: R23 := R23 + 0x780
0001ef11: R1 := R23
0001ef16: R30 := 0xBDCC
0001ef18: call @hlist_get with return %0001ef1a

0001ef1a:
0001ef24: #12860 := R0 = 0
0001ef1e: when #12860 goto %0001ef1c
0003aeaf: goto %0001ef5e

0001ef1c:
0001ef2c: R0 := mem[R20 + 8, el]:u64
0001ef33: R4 := 1
0001ef3b: R2 := mem[R31 + 0x78, el]:u64
0001ef43: R1 := R23
0001ef4c: R3 := 31:0[R4]
0001ef51: R30 := 0xBEE4
0001ef53: call @hlist_add with return %0001ef55

0001ef55:
0001ef5b: mem := mem with [R20 + 8, el]:u64 <- R0
0001ef60: goto %0001ef5e

0001ef5e:
0001ef67: R23 := mem[R20 + 0x40, el]:u64
0001ef73: #12870 := R23 = 0
0001ef6d: when #12870 goto %0001ef6b
0003aeb0: goto %0001f51d

0001f51d:
0001f523: R0 := R23
0001f52a: R1 := 0x3A
0001f52f: R30 := 0xBDE4
0001f531: call @strchr with return %0001f533

0001f533:
0001f53c: #13022 := R0 = 0
0001f536: when #13022 goto %0001ef6b
0003aeb1: goto %0001f53f

0001ef6b:
0001ef7b: R0 := mem[R20 + 0x30, el]:u64
0001ef87: #12872 := R0 = 0
0001ef81: when #12872 goto %0001ef7f
0003aeb2: goto %0001f49b

0001f49b:
0001f49f: R1 := 0x12000
0001f4a5: R2 := 5
0001f4ac: R1 := R1 + 0x7B0
0001f4b1: R30 := 0xBEA8
0001f4b4: call @strncasecmp with return %0001f4b6

0001f4b6:
0001f4bb: #13015 := extend:64[31:0[R0]]
0001f4bf: NF := 63:63[#13015]
0001f4c2: VF := 31:31[R0] & ~63:63[#13015]
0001f4c5: ZF := #13015 = 0
0001f4c8: CF := 31:31[R0] | 31:31[R0] & ~63:63[#13015] | ~63:63[#13015]
0001f4d2: R1 := 0x50
0001f4d9: R0 := 0x1BB
0001f4f1: #13017 := ZF
0001f4f2: goto %0001f4e9

0001f4e9:
0001f4eb: when #13017 goto %0001f4e2
0001f4ec: goto %0001f4e6

0001f4e6:
0001f4e7: R0 := 31:0[R1]
0001f4ee: goto %0001f4ea

0001f4e2:
0001f4e3: R0 := 31:0[R0]
0001f4ed: goto %0001f4ea

0001f4ea:
0001f4fb: mem := mem with [R20 + 0x20, el]:u32 <- 31:0[R0]
0001f504: R0 := pad:32[mem[R23]]
0001f50f: #13018 := ~31:0[R0] = 0
0001f509: when #13018 goto %0001efa6
0003aeb3: goto %0001f512

0001f512:
0001f517: R19 := 0xFFFFFFFFFFFFFFFB
0001f51b: goto %0001efa6

0001f53f:
0001f546: mem := mem with [R0] <- 0
0001f549: R0 := R0 + 1
0001f550: R2 := 0xA
0001f556: R1 := 0
0001f55b: R30 := 0xBDF8
0001f55d: call @strtol with return %0001f55f

0001f55f:
0001f565: mem := mem with [R20 + 0x20, el]:u32 <- 31:0[R0]
0001f56d: R23 := mem[R20 + 0x40, el]:u64
0003aeb4: goto %0001ef7f

0001ef7f:
0001ef90: R0 := pad:32[mem[R23]]
0001ef9c: #12873 := 31:0[R0] = 0
0001ef96: when #12873 goto %0001ef94
0003aeb5: goto %0001f486

0001f486:
0001f48d: R0 := mem[R20 + 0x20, el]:u32
0001f498: #13014 := ~31:0[R0] = 0
0001f492: when #13014 goto %0001efa6
0003aeb6: goto %0001ef94

0001ef94:
0001efa3: R19 := 0xFFFFFFFFFFFFFFFB
0001efa8: goto %0001efa6

0001f14a:
0001f15a: R0 := mem[R31 + 0x68, el]:u64
0001f161: R19 := 0xFFFFFFFFFFFFFFFA
0001f169: R0 := mem[R0 + 0xF78, el]:u64
0001f172: R0 := mem[R0, el]:u32
0001f17d: #12924 := ~31:0[R0] = 0
0001f177: when #12924 goto %0001f042
0003aeb7: goto %0001f180

0001f042:
0001f048: R2 := R25
0001f04e: R1 := 0x12000
0001f055: R0 := 1
0001f05c: R1 := R1 + 0x788
0001f061: R30 := 0xBE2C
0001f063: call @__printf_chk with return %0001f065

0001f065:
0001f067: goto %0001efa6

0001f180:
0003aeb8: goto %0001efa6

0001efa6:
0001efb3: #12874 := R25 = 0
0001efad: when #12874 goto %0001efab
0003aeb9: goto %0001f033

0001f033:
0001f039: R0 := R25
0001f03e: R30 := 0xBAFC
0001f040: call @free with return %0001efab

0001efab:
0001efbf: #12875 := R27 = 0
0001efb9: when #12875 goto %0001efb7
0003aeba: goto %0001f024

0001f024:
0001f02a: R0 := R27
0001f02f: R30 := 0xBB08
0001f031: call @free with return %0001efb7

0001efb7:
0001efc7: R0 := mem[R31 + 0x78, el]:u64
0001efd3: #12877 := R0 = 0
0001efcd: when #12877 goto %0001efcb
0003aebb: goto %0001f01d

0001f01d:
0001f020: R30 := 0xBB14
0001f022: call @free with return %0001efcb

0001efcb:
0001efdb: R0 := mem[R31 + 0x88, el]:u64
0001efe0: R30 := 0xBB1C
0001efe2: call @free with return %0001efe4

0001efe4:
0001efe9: #12879 := extend:64[31:0[R19]]
0001efed: NF := 63:63[#12879]
0001eff0: VF := 31:31[R19] & ~63:63[#12879]
0001eff3: ZF := #12879 = 0
0001eff6: CF := 31:31[R19] | 31:31[R19] & ~63:63[#12879] | ~63:63[#12879]
0001f000: R0 := 1
0001f009: R27 := mem[R31 + 0x50, el]:u64
0001f00d: R28 := mem[R31 + 0x58, el]:u64
0001f01a: #12882 := (NF <> VF | ZF) <> 0
0001f014: when #12882 goto %0001edaa
0003aebc: goto %0001edc5

0001edc5:
0001edd5: R22 := mem[R22 + 0xFB8, el]:u64
0001eddd: R1 := mem[R31 + 0x98, el]:u64
0001ede5: R2 := mem[R22, el]:u64
0001eded: #12827 := 1 + ~R2 + R1
0001edf1: NF := 63:63[#12827]
0001edf4: VF := 63:63[R1] & 63:63[~R2] & ~63:63[#12827] | ~63:63[R1] &
          ~63:63[~R2] & 63:63[#12827]
0001edf7: ZF := #12827 = 0
0001edfa: CF := 63:63[R1] & 63:63[~R2] | 63:63[~R2] & ~63:63[#12827] |
          63:63[R1] & ~63:63[#12827]
0001edfe: R1 := #12827
0001ee04: R2 := 0
0001ee10: #12832 := ~ZF <> 0
0001ee0a: when #12832 goto %0001ee08
0003aebd: goto %0002bf62

0001ee08:
0001ee18: #12836 := R31 + 0x50
0001ee1d: mem := mem with [#12836, el]:u64 <- R27
0001ee22: mem := mem with [#12836 + 8, el]:u64 <- R28
0001ee27: R30 := 0xBEF4
0001ee29: call @__stack_chk_fail with return %0001ee2b

0001ee2b:
0001ee2f: R0 := 0x14000
0001ee36: R0 := R0 + 0xD00
0001ee3b: R30 := 0xBF00
0001ee3d: call @strdup with return %0001ee3f

0001ee3f:
0001ee45: mem := mem with [R20 + 0x50, el]:u64 <- R0
0001ee4a: goto %0001ee48

0001ee48:
0001ee51: R0 := R27
0001ee56: R30 := 0xBBF4
0001ee58: call @strlen with return %0001ee5a

0001ee5a:
0001ee5f: #12841 := 0xFFFFFFFFFFFFFFFD + R0
0001ee63: NF := 63:63[#12841]
0001ee66: VF := 63:63[R0] & ~63:63[#12841]
0001ee69: ZF := #12841 = 0
0001ee6c: CF := 63:63[R0] | ~63:63[#12841] | 63:63[R0] & ~63:63[#12841]
0001ee7a: #12843 := ZF
0001ee74: when #12843 goto %0001ee72
0003aebe: goto %0001eea2

0001ee72:
0001ee82: R0 := R27
0001ee89: R2 := 0xA
0001ee8f: R1 := 0
0001ee94: R30 := 0xBCA4
0001ee96: call @strtol with return %0001ee98

0001ee98:
0001ee9e: mem := mem with [R20 + 0x10, el]:u32 <- 31:0[R0]
0001eeaa: #12847 := 31:0[R0] = 0
0001eea4: when #12847 goto %0001eea2
0003aebf: goto %0001f5b4

0001f5b4:
0001f5ba: mem := mem with [R31 + 0x78, el]:u64 <- 0
0001f5be: goto %0001f0bc

0001eea2:
0001eeb6: #12848 := R25 = 0
0001eeb0: when #12848 goto %0001eeae
0003aec0: goto %0001f56f

0001eeae:
0001eebe: R0 := R27
0001eec5: R19 := 0xFFFFFFFFFFFFFFFE
0001eeca: R30 := 0xBDA4
0001eecc: call @free with return %0001eece

0001eece:
0001eed5: R27 := mem[R31 + 0x50, el]:u64
0001eed9: R28 := mem[R31 + 0x58, el]:u64
0001eedd: goto %0001ed9b

0001ed9b:
0001eda1: R0 := mem[R31 + 0x88, el]:u64
0001eda6: R30 := 0xBC38
0001eda8: call @free with return %0001edaa

0001f56f:
0001f575: R0 := R25
0001f57a: R30 := 0xBC08
0001f57c: call @free with return %0001f57e

0001f57e:
0001f584: R0 := R27
0003aec1: goto %0001f586

0001f586:
0001f589: R30 := 0xBC10
0001f58b: call @free with return %0001f58d

0001f58d:
0001f592: R19 := 0xFFFFFFFFFFFFFFFE
0001f59a: R0 := mem[R31 + 0x88, el]:u64
0001f59f: R30 := 0xBC1C
0001f5a1: call @free with return %0001f5a3

0001f5a3:
0001f5aa: R27 := mem[R31 + 0x50, el]:u64
0001f5ae: R28 := mem[R31 + 0x58, el]:u64
0001f5b2: goto %0001edaa

0001edaa:
0001edb0: R0 := mem[R31 + 0x68, el]:u64
0001edb8: R26 := mem[R0 + 0xF78, el]:u64
0001edc1: R0 := mem[R26, el]:u32
0001edcd: #12820 := 31:0[R0] = 0
0001edc7: when #12820 goto %0001edc5
0003aec2: goto %0002c3ec

0002c3ec:
0002c3f3: R3 := 31:0[R19]
0002c3fc: R2 := 31:0[R21]
0002c402: R1 := 0x12000
0002c409: R0 := 1
0002c410: R1 := R1 + 0x7B8
0002c415: R30 := 0xBC60
0002c417: call @__printf_chk with return %0002c419

0002c419:
0002c41e: R0 := 0
0002c422: goto %0001edc5

0002bf62:
0002bf69: R19 := mem[R31 + 0x10, el]:u64
0002bf6d: R20 := mem[R31 + 0x18, el]:u64
0002bf76: R21 := mem[R31 + 0x20, el]:u64
0002bf7a: R22 := mem[R31 + 0x28, el]:u64
0002bf83: R23 := mem[R31 + 0x30, el]:u64
0002bf87: R24 := mem[R31 + 0x38, el]:u64
0002bf90: R25 := mem[R31 + 0x40, el]:u64
0002bf94: R26 := mem[R31 + 0x48, el]:u64
0002bf9e: R29 := mem[R31, el]:u64
0002bfa2: R30 := mem[R31 + 8, el]:u64
0002bfa5: R31 := R31 + 0xA0
0002bfaa: call R30 with noreturn

0003aec3: sub headers_send(headers_send_result)
0003b3db: headers_send_result :: out u32 = low:32[R0]

0001f5c0:
0001f5c7: #13035 := R31 - 0x40
0001f5cc: mem := mem with [#13035, el]:u64 <- R29
0001f5d1: mem := mem with [#13035 + 8, el]:u64 <- R30
0001f5d5: R31 := #13035
0001f5dc: R29 := R31
0001f5e4: #13040 := R31 + 0x20
0001f5e9: mem := mem with [#13040, el]:u64 <- R21
0001f5ee: mem := mem with [#13040 + 8, el]:u64 <- R22
0001f5f7: R22 := 31:0[R0]
0001f600: R0 := mem[R1, el]:u32
0001f608: #13049 := R31 + 0x10
0001f60d: mem := mem with [#13049, el]:u64 <- R19
0001f612: mem := mem with [#13049 + 8, el]:u64 <- R20
0001f61a: mem := mem with [R31 + 0x30, el]:u64 <- R23
0001f622: R23 := R1
0001f62e: #13054 := 31:0[R0] = 0
0001f628: when #13054 goto %0001f626
0003aec4: goto %0002bf13

0001f626:
0001f636: R0 := mem[R1 + 0x48, el]:u64
0001f63b: R30 := 0xC048
0001f63d: call @strlen with return %0001f63f

0001f63f:
0001f645: R21 := R0
0001f64d: R0 := mem[R23 + 0x50, el]:u64
0001f652: R30 := 0xC054
0001f654: call @strlen with return %0001f656

0001f656:
0001f65d: R21 := 31:0[R21] + 31:0[R0]
0001f665: R21 := extend:64[31:0[R21]] + 0x14
0001f66a: goto %0001f668

0002bf13:
0002bf19: R0 := mem[R1 + 0x28, el]:u64
0002bf1e: R30 := 0xBF34
0002bf20: call @strlen with return %0002bf22

0002bf22:
0002bf28: R19 := R0
0002bf30: R0 := mem[R23 + 0x30, el]:u64
0002bf35: R30 := 0xBF40
0002bf37: call @strlen with return %0002bf39

0002bf39:
0002bf40: R19 := 31:0[R19] + 31:0[R0]
0002bf48: R0 := mem[R23 + 0x48, el]:u64
0002bf4d: R30 := 0xBF4C
0002bf4f: call @strlen with return %0002bf51

0002bf51:
0002bf57: R21 := extend:64[31:0[R0]] + 0x14
0002bf60: R21 := 31:0[R21] + 31:0[R19]
0003aec5: goto %0001f668

0001f668:
0001f671: R20 := mem[R23 + 8, el]:u64
0001f67d: #13064 := R20 = 0
0001f677: when #13064 goto %0001f675
0003aec6: goto %0002bebd

0002bebd:
0003aec7: goto %0002bebf

0002bebf:
0002bec5: R0 := mem[R20, el]:u64
0002becd: R21 := extend:64[31:0[R21]] + 0x14
0002bed2: R30 := 0xBF6C
0002bed4: call @strlen with return %0002bed6

0002bed6:
0002bedc: R19 := R0
0002bee4: R0 := mem[R20 + 8, el]:u64
0002bee9: R30 := 0xBF78
0002beeb: call @strlen with return %0002beed

0002beed:
0002bef4: R19 := 31:0[R19] + 31:0[R0]
0002befc: R20 := mem[R20 + 0x18, el]:u64
0002bf05: R21 := 31:0[R19] + 31:0[R21]
0002bf10: #19386 := ~R20 = 0
0002bf0a: when #19386 goto %0002bebf
0003aec8: goto %0001f675

0001f675:
0001f684: R0 := extend:64[31:0[R21]]
0001f689: R30 := 0xBF90
0001f68b: call @new with return %0001f68d

0001f68d:
0001f694: R20 := mem[R23, el]:u32
0001f69c: R21 := R0
0001f6a8: #13070 := ~31:0[R20] = 0
0001f6a2: when #13070 goto %0001f6a0
0003aec9: goto %0002be64

0001f6a0:
0001f6b1: R4 := mem[R23 + 0x28, el]:u64
0001f6b5: R5 := mem[R23 + 0x30, el]:u64
0001f6bb: R3 := 0x12000
0001f6c3: R6 := mem[R23 + 0x48, el]:u64
0001f6ca: R3 := R3 + 0x7E0
0001f6d0: R2 := 0xFFFFFFFFFFFFFFFF
0001f6d7: R1 := 1
0001f6dc: R30 := 0xC0D0
0001f6de: call @__sprintf_chk with return %0001f6e0

0001f6e0:
0001f6e7: R20 := 31:0[R0]
0001f6ec: goto %0001f6ea

0002be64:
0002be6b: R1 := mem[R23 + 0x14, el]:u32
0002be77: #19368 := 31:0[R1] = 0
0002be71: when #19368 goto %0002be6f
0003aeca: goto %0001f6ea

0002be6f:
0002be80: R4 := mem[R23 + 0x48, el]:u64
0002be84: R6 := mem[R23 + 0x50, el]:u64
0002be8a: R3 := 0x12000
0002be93: R5 := mem[R23 + 0x10, el]:u32
0002be9a: R3 := R3 + 0x7F0
0002bea0: R2 := 0xFFFFFFFFFFFFFFFF
0002bea7: R1 := 1
0002beac: R30 := 0xC07C
0002beae: call @__sprintf_chk with return %0002beb0

0002beb0:
0002beb7: R20 := 31:0[R0]
0002bebb: goto %0001f6ea

0001f6ea:
0001f6f3: R19 := mem[R23 + 8, el]:u64
0001f6ff: #13077 := R19 = 0
0001f6f9: when #13077 goto %0001f6f7
0003aecb: goto %0002be07

0002be07:
0002be0b: R23 := 0x12000
0002be12: R23 := R23 + 0x800
0003aecc: goto %0002be16

0002be16:
0002be1d: R4 := mem[R19, el]:u64
0002be21: R5 := mem[R19 + 8, el]:u64
0002be29: R0 := R21 + extend:64[31:0[R20]]
0002be31: R3 := R23
0002be37: R2 := 0xFFFFFFFFFFFFFFFF
0002be3e: R1 := 1
0002be43: R30 := 0xBFD0
0002be45: call @__sprintf_chk with return %0002be47

0002be47:
0002be4e: R20 := 31:0[R20] + 31:0[R0]
0002be56: R19 := mem[R19 + 0x18, el]:u64
0002be61: #19366 := ~R19 = 0
0002be5b: when #19366 goto %0002be16
0003aecd: goto %0001f6f7

0001f6f7:
0001f707: R0 := R21
0001f70c: R30 := 0xBFE4
0001f70e: call @strlen with return %0001f710

0001f710:
0001f714: R1 := 0x12000
0001f71b: R1 := R1 + 0x7E8
0001f723: R2 := R0
0001f72b: R3 := R21 + R0
0001f734: R0 := 31:0[R22]
0001f73d: R4 := mem[R1, el]:u16
0001f746: R1 := pad:32[mem[R1 + 2]]
0001f74f: mem := mem with [R21 + R2, el]:u16 <- low:16[31:0[R4]]
0001f757: mem := mem with [R3 + 2] <- low:8[31:0[R1]]
0001f75c: R30 := 0xC00C
0001f75e: call @so_closed with return %0001f760

0001f760:
0001f76a: #13091 := 31:0[R0] = 0
0001f764: when #13091 goto %0001f762
0003aece: goto %0002bdf1

0001f762:
0001f772: R20 := extend:64[31:0[R20]] + 2
0001f77a: R1 := R21
0001f783: R0 := 31:0[R22]
0001f78a: R2 := extend:64[31:0[R20]]
0001f78f: R30 := 0xC0EC
0001f792: call @write with return %0001f794

0001f794:
0001f79a: R19 := R0
0001f7a2: R0 := R21
0001f7ab: R21 := 31:0[R19]
0001f7b0: R30 := 0xC0FC
0001f7b2: call @free with return %0001f7b4

0001f7b4:
0001f7b9: #13108 := extend:64[31:0[R19]]
0001f7bd: NF := 63:63[#13108]
0001f7c0: VF := 31:31[R19] & ~63:63[#13108]
0001f7c3: ZF := #13108 = 0
0001f7c6: CF := 31:31[R19] | 31:31[R19] & ~63:63[#13108] | ~63:63[#13108]
0001f7d7: #13110 := (NF <> VF | ZF) <> 0
0001f7d1: when #13110 goto %0001f7cf
0003aecf: goto %0001f8a0

0001f8a0:
0001f8a6: #13131 := 1 + extend:64[~31:0[R19]] + extend:64[31:0[R20]]
0001f8aa: NF := 63:63[#13131]
0001f8ad: VF := 31:31[~31:0[R19]] & 31:31[R20] & ~63:63[#13131] |
          ~31:31[~31:0[R19]] & ~31:31[R20] & 63:63[#13131]
0001f8b0: ZF := #13131 = 0
0001f8b3: CF := 31:31[~31:0[R19]] & 31:31[R20] | 31:31[R20] & ~63:63[#13131]
          | 31:31[~31:0[R19]] & ~63:63[#13131]
0001f8bd: R0 := 1
0001f8c8: #13133 := ~ZF <> 0
0001f8c2: when #13133 goto %0001f7cf
0003aed0: goto %0001f8cb

0001f8cb:
0001f8d2: R19 := mem[R31 + 0x10, el]:u64
0001f8d6: R20 := mem[R31 + 0x18, el]:u64
0001f8df: R21 := mem[R31 + 0x20, el]:u64
0001f8e3: R22 := mem[R31 + 0x28, el]:u64
0001f8eb: R23 := mem[R31 + 0x30, el]:u64
0001f8f5: R29 := mem[R31, el]:u64
0001f8f9: R30 := mem[R31 + 8, el]:u64
0001f8fc: R31 := R31 + 0x40
0001f901: call R30 with noreturn

0002bdf1:
0002bdf7: R0 := R21
0002bdfe: R21 := 0xFFFFFFFFFFFFFC19
0002be03: R30 := 0xC01C
0002be05: call @free with return %0001f7cf

0001f7cf:
0001f7dd: R0 := 0x27000
0001f7e5: R0 := mem[R0 + 0xF78, el]:u64
0001f7ee: R0 := mem[R0, el]:u32
0001f7fa: #13113 := ~31:0[R0] = 0
0001f7f4: when #13113 goto %0001f7f2
0003aed1: goto %0001f868

0001f7f2:
0001f803: R3 := 31:0[R21]
0001f80c: R2 := 31:0[R22]
0001f812: R1 := 0x12000
0001f819: R0 := 1
0001f820: R1 := R1 + 0x810
0001f825: R30 := 0xC09C
0001f827: call @__printf_chk with return %0001f829

0001f829:
0001f82e: R0 := 0
0001f837: R19 := mem[R31 + 0x10, el]:u64
0001f83b: R20 := mem[R31 + 0x18, el]:u64
0001f844: R21 := mem[R31 + 0x20, el]:u64
0001f848: R22 := mem[R31 + 0x28, el]:u64
0001f850: R23 := mem[R31 + 0x30, el]:u64
0001f85a: R29 := mem[R31, el]:u64
0001f85e: R30 := mem[R31 + 8, el]:u64
0001f861: R31 := R31 + 0x40
0001f866: call R30 with noreturn

0001f868:
0001f86f: R19 := mem[R31 + 0x10, el]:u64
0001f873: R20 := mem[R31 + 0x18, el]:u64
0001f87c: R21 := mem[R31 + 0x20, el]:u64
0001f880: R22 := mem[R31 + 0x28, el]:u64
0001f888: R23 := mem[R31 + 0x30, el]:u64
0001f892: R29 := mem[R31, el]:u64
0001f896: R30 := mem[R31 + 8, el]:u64
0001f899: R31 := R31 + 0x40
0001f89e: call R30 with noreturn

0003aed2: sub hlist_add(hlist_add_result)
0003b3dc: hlist_add_result :: out u32 = low:32[R0]

0001646f:
00016476: #6870 := R31 - 0x40
0001647b: mem := mem with [#6870, el]:u64 <- R29
00016480: mem := mem with [#6870 + 8, el]:u64 <- R30
00016484: R31 := #6870
0001648b: #6872 := R1
0001648f: NF := 63:63[#6872]
00016492: VF := 63:63[R1] & ~63:63[#6872]
00016495: ZF := #6872 = 0
00016498: CF := 63:63[R1] | ~63:63[#6872] | 63:63[R1] & ~63:63[#6872]
000164c0: #6874 := ~ZF <> 0
000164c1: goto %000164b8

000164b8:
000164ba: when #6874 goto %000164a0
000164bb: goto %000164ac

000164ac:
000164ad: NF := 0
000164b0: ZF := 1
000164b3: CF := 0
000164b6: VF := 0
000164bd: goto %000164b9

000164a0:
000164a1: NF := 63:63[R2 + 0]
000164a4: VF := 63:63[R2] & ~63:63[R2 + 0]
000164a7: ZF := R2 + 0 = 0
000164aa: CF := 63:63[R2] | ~63:63[R2 + 0] | 63:63[R2] & ~63:63[R2 + 0]
000164bc: goto %000164b9

000164b9:
000164c9: R29 := R31
000164d1: #6879 := R31 + 0x10
000164d6: mem := mem with [#6879, el]:u64 <- R19
000164db: mem := mem with [#6879 + 8, el]:u64 <- R20
000164e3: R19 := R0
000164ef: #6885 := ~ZF <> 0
000164e9: when #6885 goto %000164e7
0003aed3: goto %00016608

000164e7:
000164f7: R20 := R2
000164fd: R0 := 0x20
00016505: #6892 := R31 + 0x20
0001650a: mem := mem with [#6892, el]:u64 <- R21
0001650f: mem := mem with [#6892 + 8, el]:u64 <- R22
00016518: R22 := 31:0[R3]
00016520: R21 := R1
00016528: mem := mem with [R31 + 0x30, el]:u64 <- R23
00016531: R23 := 31:0[R4]
00016536: R30 := 0x4BF4
00016538: call @malloc with return %0001653a

0001653a:
0001653f: #6903 := 0xFFFFFFFFFFFFFFFF + extend:64[31:0[R22]]
00016543: NF := 63:63[#6903]
00016546: VF := 31:31[R22] & ~63:63[#6903]
00016549: ZF := #6903 = 0
0001654c: CF := 31:31[R22] | 31:31[R22] & ~63:63[#6903] | ~63:63[#6903]
00016557: R22 := R0
00016563: #6908 := ZF
0001655d: when #6908 goto %0001655b
0003aed4: goto %0001657d

0001655b:
0001656b: R0 := R21
00016570: R30 := 0x4C50
00016572: call @strdup with return %00016574

00016574:
0001657a: R21 := R0
0001657f: goto %0001657d

0001657d:
00016586: mem := mem with [R22, el]:u64 <- R21
0001658d: #6915 := 0xFFFFFFFFFFFFFFFF + extend:64[31:0[R23]]
00016591: NF := 63:63[#6915]
00016594: VF := 31:31[R23] & ~63:63[#6915]
00016597: ZF := #6915 = 0
0001659a: CF := 31:31[R23] | 31:31[R23] & ~63:63[#6915] | ~63:63[#6915]
000165a9: #6917 := ZF
000165a3: when #6917 goto %000165a1
0003aed5: goto %000165c3

000165a1:
000165b1: R0 := R20
000165b6: R30 := 0x4C60
000165b8: call @strdup with return %000165ba

000165ba:
000165c0: R20 := R0
000165c5: goto %000165c3

000165c3:
000165cc: mem := mem with [R22 + 8, el]:u64 <- R20
000165d4: mem := mem with [R22 + 0x10, el]:u32 <- 0
000165dc: mem := mem with [R22 + 0x18, el]:u64 <- 0
000165e8: #6924 := R19 = 0
000165e2: when #6924 goto %000165e0
0003aed6: goto %0001698f

000165e0:
000165f0: R19 := R22
000165f9: R21 := mem[R31 + 0x20, el]:u64
000165fd: R22 := mem[R31 + 0x28, el]:u64
00016605: R23 := mem[R31 + 0x30, el]:u64
0001660a: goto %00016608

0001698f:
00016995: R1 := R19
0003aed7: goto %00016997

00016997:
0001699d: R2 := R1
000169a5: R1 := mem[R1 + 0x18, el]:u64
000169b0: #7072 := ~R1 = 0
000169aa: when #7072 goto %00016997
0003aed8: goto %000169b3

000169b3:
000169b9: R23 := mem[R31 + 0x30, el]:u64
000169c1: mem := mem with [R2 + 0x18, el]:u64 <- R22
000169c9: R0 := R19
000169d2: R19 := mem[R31 + 0x10, el]:u64
000169d6: R20 := mem[R31 + 0x18, el]:u64
000169df: R21 := mem[R31 + 0x20, el]:u64
000169e3: R22 := mem[R31 + 0x28, el]:u64
000169ed: R29 := mem[R31, el]:u64
000169f1: R30 := mem[R31 + 8, el]:u64
000169f4: R31 := R31 + 0x40
000169f9: call R30 with noreturn

00016608:
00016611: R0 := R19
0001661a: R19 := mem[R31 + 0x10, el]:u64
0001661e: R20 := mem[R31 + 0x18, el]:u64
00016628: R29 := mem[R31, el]:u64
0001662c: R30 := mem[R31 + 8, el]:u64
0001662f: R31 := R31 + 0x40
00016634: call R30 with noreturn

0003aed9: sub hlist_count(hlist_count_result)
0003b3dd: hlist_count_result :: out u32 = low:32[R0]

00013edc:
00013ee2: R1 := R0
00013ee9: R0 := 0
00013ef5: #5614 := R1 = 0
00013eef: when #5614 goto %00013eed
0003aeda: goto %00015365

00015365:
0003aedb: goto %00015367

00015367:
0001536d: R1 := mem[R1 + 0x18, el]:u64
00015375: R0 := extend:64[31:0[R0]] + 1
00015380: #6268 := ~R1 = 0
0001537a: when #6268 goto %00015367
0003aedc: goto %00013eed

00013eed:
00013efa: call R30 with noreturn

0003aedd: sub hlist_del(hlist_del_result)
0003b3de: hlist_del_result :: out u32 = low:32[R0]

00016696:
0001669d: #6949 := R31 - 0x40
000166a2: mem := mem with [#6949, el]:u64 <- R29
000166a7: mem := mem with [#6949 + 8, el]:u64 <- R30
000166ab: R31 := #6949
000166b2: R29 := R31
000166ba: #6954 := R31 + 0x30
000166bf: mem := mem with [#6954, el]:u64 <- R23
000166c4: mem := mem with [#6954 + 8, el]:u64 <- R24
000166cc: R24 := R0
000166d8: #6959 := R0 = 0
000166d2: when #6959 goto %000166d0
0003aede: goto %0001672b

0001672b:
0001672f: R23 := 0
00016737: #6973 := R31 + 0x10
0001673c: mem := mem with [#6973, el]:u64 <- R19
00016741: mem := mem with [#6973 + 8, el]:u64 <- R20
00016749: R19 := R0
00016751: #6981 := R31 + 0x20
00016756: mem := mem with [#6981, el]:u64 <- R21
0001675b: mem := mem with [#6981 + 8, el]:u64 <- R22
00016763: R22 := R1
00016768: goto %00016766

00016766:
0001676f: R21 := mem[R19, el]:u64
00016777: R1 := R22
0001677f: R20 := R19
00016787: R0 := R21
0001678c: R30 := 0x4D78
0001678e: call @strcasecmp with return %00016790

00016790:
00016796: R19 := mem[R19 + 0x18, el]:u64
000167a2: #6997 := ~31:0[R0] = 0
0001679c: when #6997 goto %0001679a
0003aedf: goto %000167d2

000167d2:
000167d8: R0 := R21
000167dd: R30 := 0x4D88
000167df: call @free with return %000167e1

000167e1:
000167e7: R0 := mem[R20 + 8, el]:u64
000167ec: R30 := 0x4D90
000167ee: call @free with return %000167f0

000167f0:
000167f6: R0 := R20
000167fb: R30 := 0x4D98
000167fd: call @free with return %000167ff

000167ff:
00016808: #7011 := R23 = 0
00016802: when #7011 goto %00016705
0003aee0: goto %0001680b

00016705:
0001670b: R24 := R19
00016714: R19 := mem[R31 + 0x10, el]:u64
00016718: R20 := mem[R31 + 0x18, el]:u64
00016721: R21 := mem[R31 + 0x20, el]:u64
00016725: R22 := mem[R31 + 0x28, el]:u64
00016729: goto %000166d0

0001680b:
00016811: mem := mem with [R23 + 0x18, el]:u64 <- R19
0003aee1: goto %000167ae

0001679a:
000167aa: R23 := R20
000167b6: #7001 := R19 = 0
000167b0: when #7001 goto %000167ae
0003aee2: goto %00016766

000167ae:
000167bf: R19 := mem[R31 + 0x10, el]:u64
000167c3: R20 := mem[R31 + 0x18, el]:u64
000167cc: R21 := mem[R31 + 0x20, el]:u64
000167d0: R22 := mem[R31 + 0x28, el]:u64
0003aee3: goto %000166d0

000166d0:
000166e0: R0 := R24
000166e9: R23 := mem[R31 + 0x30, el]:u64
000166ed: R24 := mem[R31 + 0x38, el]:u64
000166f7: R29 := mem[R31, el]:u64
000166fb: R30 := mem[R31 + 8, el]:u64
000166fe: R31 := R31 + 0x40
00016703: call R30 with noreturn

0003aee4: sub hlist_dump(hlist_dump_result)
0003b3df: hlist_dump_result :: out u32 = low:32[R0]

00014211:
0001421b: #5741 := R0 = 0
00014215: when #5741 goto %00014213
0003aee5: goto %00014e5b

00014213:
00014220: call R30 with noreturn

00014e5b:
00014e62: #6100 := R31 - 0x20
00014e67: mem := mem with [#6100, el]:u64 <- R29
00014e6c: mem := mem with [#6100 + 8, el]:u64 <- R30
00014e70: R31 := #6100
00014e77: R29 := R31
00014e7f: #6105 := R31 + 0x10
00014e84: mem := mem with [#6105, el]:u64 <- R19
00014e89: mem := mem with [#6105 + 8, el]:u64 <- R20
00014e8f: R20 := 0x11000
00014e97: R19 := R0
00014e9e: R20 := R20 + 0x6D8
0003aee6: goto %00014ea2

00014ea2:
00014ea9: R2 := mem[R19, el]:u64
00014ead: R3 := mem[R19 + 8, el]:u64
00014eb5: R1 := R20
00014ebc: R0 := 1
00014ec1: R30 := 0x5250
00014ec4: call @__printf_chk with return %00014ec6

00014ec6:
00014ecc: R19 := mem[R19 + 0x18, el]:u64
00014ed7: #6115 := ~R19 = 0
00014ed1: when #6115 goto %00014ea2
0003aee7: goto %00014eda

00014eda:
00014ee1: R19 := mem[R31 + 0x10, el]:u64
00014ee5: R20 := mem[R31 + 0x18, el]:u64
00014eef: R29 := mem[R31, el]:u64
00014ef3: R30 := mem[R31 + 8, el]:u64
00014ef6: R31 := R31 + 0x20
00014efb: call R30 with noreturn

0003aee8: sub hlist_dup(hlist_dup_result)
0003b3e0: hlist_dup_result :: out u32 = low:32[R0]

00016636:
0001663d: #6938 := R31 - 0x40
00016642: mem := mem with [#6938, el]:u64 <- R29
00016647: mem := mem with [#6938 + 8, el]:u64 <- R30
0001664b: R31 := #6938
00016652: R29 := R31
0001665a: mem := mem with [R31 + 0x30, el]:u64 <- R23
00016666: #6940 := R0 = 0
00016660: when #6940 goto %0001665e
0003aee9: goto %00016813

0001665e:
0001666c: R23 := 0
00016674: R0 := R23
0001667c: R23 := mem[R31 + 0x30, el]:u64
00016686: R29 := mem[R31, el]:u64
0001668a: R30 := mem[R31 + 8, el]:u64
0001668d: R31 := R31 + 0x40
00016692: call R30 with noreturn

00016813:
00016819: #7015 := R31 + 0x10
0001681e: mem := mem with [#7015, el]:u64 <- R19
00016823: mem := mem with [#7015 + 8, el]:u64 <- R20
0001682b: R19 := R0
00016831: R23 := 0
00016839: #7023 := R31 + 0x20
0001683e: mem := mem with [#7023, el]:u64 <- R21
00016843: mem := mem with [#7023 + 8, el]:u64 <- R22
0003aeea: goto %00016845

00016845:
0001684c: R22 := mem[R19, el]:u64
00016850: R21 := mem[R19 + 8, el]:u64
00016857: #7026 := R22
0001685b: NF := 63:63[#7026]
0001685e: VF := 63:63[R22] & ~63:63[#7026]
00016861: ZF := #7026 = 0
00016864: CF := 63:63[R22] | ~63:63[#7026] | 63:63[R22] & ~63:63[#7026]
0001688c: #7028 := ~ZF <> 0
0001688d: goto %00016884

00016884:
00016886: when #7028 goto %0001686c
00016887: goto %00016878

00016878:
00016879: NF := 0
0001687c: ZF := 1
0001687f: CF := 0
00016882: VF := 0
00016889: goto %00016885

0001686c:
0001686d: NF := 63:63[R21 + 0]
00016870: VF := 63:63[R21] & ~63:63[R21 + 0]
00016873: ZF := R21 + 0 = 0
00016876: CF := 63:63[R21] | ~63:63[R21 + 0] | 63:63[R21] & ~63:63[R21 + 0]
00016888: goto %00016885

00016885:
0001689a: #7031 := ZF
00016894: when #7031 goto %00016892
0003aeeb: goto %000168fc

000168fc:
00016900: R0 := 0x20
00016905: R30 := 0x4CB0
00016907: call @malloc with return %00016909

00016909:
0001690f: R20 := R0
00016917: R0 := R22
0001691c: R30 := 0x4CBC
0001691e: call @strdup with return %00016920

00016920:
00016926: R1 := R0
0001692e: R0 := R21
00016936: mem := mem with [R20, el]:u64 <- R1
0001693b: R30 := 0x4CCC
0001693d: call @strdup with return %0001693f

0001693f:
00016945: mem := mem with [R20 + 8, el]:u64 <- R0
0001694d: mem := mem with [R20 + 0x10, el]:u32 <- 0
00016955: mem := mem with [R20 + 0x18, el]:u64 <- 0
00016960: #7056 := R23 = 0
0001695a: when #7056 goto %000168f0
0003aeec: goto %00016963

000168f0:
000168f6: R23 := R20
000168fa: goto %00016892

00016963:
00016969: R1 := R23
0003aeed: goto %0001696b

0001696b:
00016971: R0 := R1
00016979: R1 := mem[R1 + 0x18, el]:u64
00016984: #7064 := ~R1 = 0
0001697e: when #7064 goto %0001696b
0003aeee: goto %00016987

00016987:
0001698d: mem := mem with [R0 + 0x18, el]:u64 <- R20
0003aeef: goto %00016892

00016892:
000168a2: R19 := mem[R19 + 0x18, el]:u64
000168ad: #7033 := ~R19 = 0
000168a7: when #7033 goto %00016845
0003aef0: goto %000168b0

000168b0:
000168b6: R0 := R23
000168bf: R19 := mem[R31 + 0x10, el]:u64
000168c3: R20 := mem[R31 + 0x18, el]:u64
000168cc: R21 := mem[R31 + 0x20, el]:u64
000168d0: R22 := mem[R31 + 0x28, el]:u64
000168d8: R23 := mem[R31 + 0x30, el]:u64
000168e2: R29 := mem[R31, el]:u64
000168e6: R30 := mem[R31 + 8, el]:u64
000168e9: R31 := R31 + 0x40
000168ee: call R30 with noreturn

0003aef1: sub hlist_free(hlist_free_result)
0003b3e1: hlist_free_result :: out u32 = low:32[R0]

000141f8:
00014202: #5740 := R0 = 0
000141fc: when #5740 goto %000141fa
0003aef2: goto %00014efd

000141fa:
00014208: R0 := 0
0001420d: call R30 with noreturn

00014efd:
00014f04: #6121 := R31 - 0x20
00014f09: mem := mem with [#6121, el]:u64 <- R29
00014f0e: mem := mem with [#6121 + 8, el]:u64 <- R30
00014f12: R31 := #6121
00014f19: R29 := R31
00014f21: #6126 := R31 + 0x10
00014f26: mem := mem with [#6126, el]:u64 <- R19
00014f2b: mem := mem with [#6126 + 8, el]:u64 <- R20
00014f33: R19 := R0
0003aef3: goto %00014f37

00014f37:
00014f3d: R20 := R19
00014f45: R19 := mem[R19 + 0x18, el]:u64
00014f4d: R0 := mem[R20, el]:u64
00014f52: R30 := 0x51F0
00014f54: call @free with return %00014f56

00014f56:
00014f5c: R0 := mem[R20 + 8, el]:u64
00014f61: R30 := 0x51F8
00014f63: call @free with return %00014f65

00014f65:
00014f6b: R0 := R20
00014f70: R30 := 0x5200
00014f72: call @free with return %00014f74

00014f74:
00014f7d: #6140 := ~R19 = 0
00014f77: when #6140 goto %00014f37
0003aef4: goto %00014f80

00014f80:
00014f84: R0 := 0
00014f8d: R19 := mem[R31 + 0x10, el]:u64
00014f91: R20 := mem[R31 + 0x18, el]:u64
00014f9b: R29 := mem[R31, el]:u64
00014f9f: R30 := mem[R31 + 8, el]:u64
00014fa2: R31 := R31 + 0x20
00014fa7: call R30 with noreturn

0003aef5: sub hlist_get(hlist_get_result)
0003b3e2: hlist_get_result :: out u32 = low:32[R0]

00013efc:
00013f06: #5615 := R0 = 0
00013f00: when #5615 goto %00013efe
0003aef6: goto %00015296

00013efe:
00013f0c: R0 := 0
00013f11: call R30 with noreturn

00015296:
0001529d: #6242 := R31 - 0x20
000152a2: mem := mem with [#6242, el]:u64 <- R29
000152a7: mem := mem with [#6242 + 8, el]:u64 <- R30
000152ab: R31 := #6242
000152b2: R29 := R31
000152ba: #6247 := R31 + 0x10
000152bf: mem := mem with [#6247, el]:u64 <- R19
000152c4: mem := mem with [#6247 + 8, el]:u64 <- R20
000152cc: R19 := R0
000152d4: R20 := R1
000152d9: goto %000152d7

000152d7:
000152e0: R0 := mem[R19, el]:u64
000152e8: R1 := R20
000152ed: R30 := 0x4F58
000152ef: call @strcasecmp with return %000152f1

000152f1:
000152fb: #6259 := ~31:0[R0] = 0
000152f5: when #6259 goto %000152f3
0003aef7: goto %0001533a

0001533a:
00015340: R0 := mem[R19 + 8, el]:u64
00015349: R19 := mem[R31 + 0x10, el]:u64
0001534d: R20 := mem[R31 + 0x18, el]:u64
00015357: R29 := mem[R31, el]:u64
0001535b: R30 := mem[R31 + 8, el]:u64
0001535e: R31 := R31 + 0x20
00015363: call R30 with noreturn

000152f3:
00015303: R19 := mem[R19 + 0x18, el]:u64
0001530f: #6261 := R19 = 0
00015309: when #6261 goto %00015307
0003aef8: goto %000152d7

00015307:
00015315: R0 := 0
0001531e: R19 := mem[R31 + 0x10, el]:u64
00015322: R20 := mem[R31 + 0x18, el]:u64
0001532c: R29 := mem[R31, el]:u64
00015330: R30 := mem[R31 + 8, el]:u64
00015333: R31 := R31 + 0x20
00015338: call R30 with noreturn

0003aef9: sub hlist_in(hlist_in_result)
0003b3e3: hlist_in_result :: out u32 = low:32[R0]

00013ec2:
00013ecc: #5610 := R0 = 0
00013ec6: when #5610 goto %00013ec4
0003aefa: goto %00015383

00013ec4:
00013ed3: R0 := 0
00013ed8: call R30 with noreturn

00015383:
0001538a: #6272 := R31 - 0x20
0001538f: mem := mem with [#6272, el]:u64 <- R29
00015394: mem := mem with [#6272 + 8, el]:u64 <- R30
00015398: R31 := #6272
0001539f: R29 := R31
000153a7: #6277 := R31 + 0x10
000153ac: mem := mem with [#6277, el]:u64 <- R19
000153b1: mem := mem with [#6277 + 8, el]:u64 <- R20
000153b9: R19 := R0
000153c1: R20 := R1
000153c6: goto %000153c4

000153c4:
000153cd: R0 := mem[R19, el]:u64
000153d5: R1 := R20
000153da: R30 := 0x4ED8
000153dc: call @strcasecmp with return %000153de

000153de:
000153e8: #6289 := ~31:0[R0] = 0
000153e2: when #6289 goto %000153e0
0003aefb: goto %00015428

00015428:
0001542d: R0 := 1
00015436: R19 := mem[R31 + 0x10, el]:u64
0001543a: R20 := mem[R31 + 0x18, el]:u64
00015444: R29 := mem[R31, el]:u64
00015448: R30 := mem[R31 + 8, el]:u64
0001544b: R31 := R31 + 0x20
00015450: call R30 with noreturn

000153e0:
000153f0: R19 := mem[R19 + 0x18, el]:u64
000153fc: #6291 := R19 = 0
000153f6: when #6291 goto %000153f4
0003aefc: goto %000153c4

000153f4:
00015403: R0 := 0
0001540c: R19 := mem[R31 + 0x10, el]:u64
00015410: R20 := mem[R31 + 0x18, el]:u64
0001541a: R29 := mem[R31, el]:u64
0001541e: R30 := mem[R31 + 8, el]:u64
00015421: R31 := R31 + 0x20
00015426: call R30 with noreturn

0003aefd: sub hlist_mod(hlist_mod_result)
0003b3e4: hlist_mod_result :: out u32 = low:32[R0]

00013d3c:
00013d46: #5555 := R31 - 0x40
00013d4b: mem := mem with [#5555, el]:u64 <- R29
00013d50: mem := mem with [#5555 + 8, el]:u64 <- R30
00013d54: R31 := #5555
00013d5b: R29 := R31
00013d63: #5560 := R31 + 0x10
00013d68: mem := mem with [#5560, el]:u64 <- R19
00013d6d: mem := mem with [#5560 + 8, el]:u64 <- R20
00013d75: R20 := R1
00013d7d: #5568 := R31 + 0x20
00013d82: mem := mem with [#5568, el]:u64 <- R21
00013d87: mem := mem with [#5568 + 8, el]:u64 <- R22
00013d8f: R21 := R0
00013d97: R22 := R2
00013d9f: mem := mem with [R31 + 0x30, el]:u64 <- R23
00013da8: R23 := 31:0[R3]
00013db4: #5579 := R0 = 0
00013dae: when #5579 goto %00013dac
0003aefe: goto %00015484

00015484:
0001548a: R19 := R0
0001548f: goto %0001548d

0001548d:
00015496: R0 := mem[R19, el]:u64
0001549e: R1 := R20
000154a3: R30 := 0x4E0C
000154a5: call @strcasecmp with return %000154a7

000154a7:
000154b1: #6311 := ~31:0[R0] = 0
000154ab: when #6311 goto %000154a9
0003aeff: goto %000154c7

000154c7:
000154cd: R0 := mem[R19 + 8, el]:u64
000154d2: R30 := 0x4E18
000154d4: call @free with return %000154d6

000154d6:
000154dc: R0 := R22
000154e1: R30 := 0x4E20
000154e3: call @strdup with return %000154e5

000154e5:
000154eb: mem := mem with [R19 + 8, el]:u64 <- R0
0003af00: goto %00013db8

000154a9:
000154b9: R19 := mem[R19 + 0x18, el]:u64
000154c4: #6313 := R19 = 0
000154be: when #6313 goto %00013dac
0003af01: goto %0001548d

00013dac:
00013dc0: #5580 := 31:0[R23] = 0
00013dba: when #5580 goto %00013db8
0003af02: goto %00013e02

00013e02:
00013e07: #5588 := R20
00013e0b: NF := 63:63[#5588]
00013e0e: VF := 63:63[R20] & ~63:63[#5588]
00013e11: ZF := #5588 = 0
00013e14: CF := 63:63[R20] | ~63:63[#5588] | 63:63[R20] & ~63:63[#5588]
00013e3c: #5590 := ~ZF <> 0
00013e3d: goto %00013e34

00013e34:
00013e36: when #5590 goto %00013e1c
00013e37: goto %00013e28

00013e28:
00013e29: NF := 0
00013e2c: ZF := 1
00013e2f: CF := 0
00013e32: VF := 0
00013e39: goto %00013e35

00013e1c:
00013e1d: NF := 63:63[R22 + 0]
00013e20: VF := 63:63[R22] & ~63:63[R22 + 0]
00013e23: ZF := R22 + 0 = 0
00013e26: CF := 63:63[R22] | ~63:63[R22 + 0] | 63:63[R22] & ~63:63[R22 + 0]
00013e38: goto %00013e35

00013e35:
00013e49: #5593 := ZF
00013e43: when #5593 goto %00013db8
0003af03: goto %00013e4c

00013e4c:
00013e50: R0 := 0x20
00013e55: R30 := 0x4E54
00013e57: call @malloc with return %00013e59

00013e59:
00013e5f: R19 := R0
00013e67: R0 := R20
00013e6c: R30 := 0x4E60
00013e6f: call @strdup with return %00013e71

00013e71:
00013e77: R1 := R0
00013e7f: R0 := R22
00013e87: mem := mem with [R19, el]:u64 <- R1
00013e8c: R30 := 0x4E70
00013e8e: call @strdup with return %00013e90

00013e90:
00013e96: mem := mem with [R19 + 8, el]:u64 <- R0
00013e9e: mem := mem with [R19 + 0x10, el]:u32 <- 0
00013ea6: mem := mem with [R19 + 0x18, el]:u64 <- 0
00013eb2: #5606 := R21 = 0
00013eac: when #5606 goto %00013eaa
0003af04: goto %00015452

00013eaa:
00013eba: R21 := R19
00013ebe: goto %00013db8

00015452:
00015458: R1 := R21
0003af05: goto %0001545c

0001545c:
00015462: R2 := R1
0001546a: R1 := mem[R1 + 0x18, el]:u64
00015475: #6303 := ~R1 = 0
0001546f: when #6303 goto %0001545c
0003af06: goto %00015478

00015478:
0001547e: mem := mem with [R2 + 0x18, el]:u64 <- R19
00015482: goto %00013db8

00013db8:
00013dc8: R0 := R21
00013dd1: R19 := mem[R31 + 0x10, el]:u64
00013dd5: R20 := mem[R31 + 0x18, el]:u64
00013dde: R21 := mem[R31 + 0x20, el]:u64
00013de2: R22 := mem[R31 + 0x28, el]:u64
00013dea: R23 := mem[R31 + 0x30, el]:u64
00013df4: R29 := mem[R31, el]:u64
00013df8: R30 := mem[R31 + 8, el]:u64
00013dfb: R31 := R31 + 0x40
00013e00: call R30 with noreturn

0003af07: sub hlist_subcmp(hlist_subcmp_result)
0003b3e5: hlist_subcmp_result :: out u32 = low:32[R0]

00013f15:
00013f1c: #5619 := R31 - 0x30
00013f21: mem := mem with [#5619, el]:u64 <- R29
00013f26: mem := mem with [#5619 + 8, el]:u64 <- R30
00013f2a: R31 := #5619
00013f31: R29 := R31
00013f39: #5624 := R31 + 0x10
00013f3e: mem := mem with [#5624, el]:u64 <- R19
00013f43: mem := mem with [#5624 + 8, el]:u64 <- R20
00013f4b: R19 := R0
00013f51: R20 := 0
00013f59: R0 := R2
00013f61: #5635 := R31 + 0x20
00013f66: mem := mem with [#5635, el]:u64 <- R21
00013f6b: mem := mem with [#5635 + 8, el]:u64 <- R22
00013f73: R21 := R1
00013f78: R30 := 0x4FAC
00013f7a: call @strdup with return %00013f7c

00013f7c:
00013f82: R22 := R0
00013f87: goto %00013f85

00013f85:
00013f8e: R0 := R22
00013f93: R30 := 0x4FD4
00013f95: call @strlen with return %00013f97

00013f97:
00013f9d: #5649 := 1 + ~R20 + R0
00013fa1: NF := 63:63[#5649]
00013fa4: VF := 63:63[R0] & 63:63[~R20] & ~63:63[#5649] | ~63:63[R0] &
          ~63:63[~R20] & 63:63[#5649]
00013fa7: ZF := #5649 = 0
00013faa: CF := 63:63[R0] & 63:63[~R20] | 63:63[~R20] & ~63:63[#5649] |
          63:63[R0] & ~63:63[#5649]
00013fb9: #5654 := (CF & ~ZF) <> 0
00013fb3: when #5654 goto %00013fb1
0003af08: goto %00013ffa

00013ffa:
00014004: #5660 := ~R19 = 0
00013ffe: when #5660 goto %00013ffc
0003af09: goto %00015292

00013ffc:
0001400c: R0 := mem[R19, el]:u64
00014014: R1 := R21
00014019: R30 := 0x4FF8
0001401c: call @strcasecmp with return %0001401e

0001401e:
00014025: R20 := 31:0[R0]
00014031: #5668 := ~31:0[R0] = 0
0001402b: when #5668 goto %00014029
0003af0a: goto %00015155

00015155:
0001515b: R0 := mem[R19 + 8, el]:u64
00015167: #6197 := R0 = 0
00015161: when #6197 goto %0001515f
0003af0b: goto %000151b1

000151b1:
000151b4: R30 := 0x500C
000151b6: call @strdup with return %000151b8

000151b8:
000151bc: R20 := 0
000151c4: R19 := R0
000151c9: goto %000151c7

000151c7:
000151d0: R0 := R19
000151d5: R30 := 0x5038
000151d7: call @strlen with return %000151d9

000151d9:
000151df: #6216 := 1 + ~R20 + R0
000151e3: NF := 63:63[#6216]
000151e6: VF := 63:63[R0] & 63:63[~R20] & ~63:63[#6216] | ~63:63[R0] &
          ~63:63[~R20] & 63:63[#6216]
000151e9: ZF := #6216 = 0
000151ec: CF := 63:63[R0] & 63:63[~R20] | 63:63[~R20] & ~63:63[#6216] |
          63:63[R0] & ~63:63[#6216]
000151fb: #6221 := (CF & ~ZF) <> 0
000151f5: when #6221 goto %000151f3
0003af0c: goto %0001523c

0001523c:
00015242: R1 := R22
0001524a: R0 := R19
0001524f: R30 := 0x504C
00015251: call @strstr with return %00015253

00015253:
00015258: #6233 := R0
0001525c: NF := 63:63[#6233]
0001525f: VF := 63:63[R0] & ~63:63[#6233]
00015262: ZF := #6233 = 0
00015265: CF := 63:63[R0] | ~63:63[#6233] | 63:63[R0] & ~63:63[#6233]
0001527f: #6235 := ZF
00015280: goto %00015277

00015277:
00015279: when #6235 goto %00015270
0001527a: goto %00015274

00015274:
00015275: R20 := 1
0001527c: goto %00015278

00015270:
00015271: R20 := 0
0001527b: goto %00015278

00015278:
00015289: R0 := R19
0001528e: R30 := 0x505C
00015290: call @free with return %0001515f

0001515f:
0001516f: R0 := R22
00015174: R30 := 0x5064
00015176: call @free with return %00015178

00015178:
0001517f: R0 := 31:0[R20]
00015188: R19 := mem[R31 + 0x10, el]:u64
0001518c: R20 := mem[R31 + 0x18, el]:u64
00015195: R21 := mem[R31 + 0x20, el]:u64
00015199: R22 := mem[R31 + 0x28, el]:u64
000151a3: R29 := mem[R31, el]:u64
000151a7: R30 := mem[R31 + 8, el]:u64
000151aa: R31 := R31 + 0x30
000151af: call R30 with noreturn

000151f3:
00015200: R30 := 0x501C
00015202: call @__ctype_tolower_loc with return %00015204

00015204:
0001520a: #6222 := R20
00015210: R1 := pad:32[mem[R19 + #6222]]
00015218: R0 := mem[R0, el]:u64
00015220: #6225 := R1 << 2
00015226: R0 := mem[R0 + #6225, el]:u32
0001522e: #6226 := R20
00015233: mem := mem with [R19 + #6226] <- low:8[31:0[R0]]
0001523a: R20 := R20 + 1
0003af0d: goto %000151c7

00014029:
00014039: R19 := mem[R19 + 0x18, el]:u64
00014045: #5670 := R19 = 0
0001403f: when #5670 goto %0001403d
0003af0e: goto %00013ffc

00015292:
00015294: goto %0001403d

0001403d:
0001404d: R0 := R22
00014054: R20 := 0
00014059: R30 := 0x5084
0001405c: call @free with return %0001405e

0001405e:
00014065: R0 := 31:0[R20]
0001406e: R19 := mem[R31 + 0x10, el]:u64
00014072: R20 := mem[R31 + 0x18, el]:u64
0001407b: R21 := mem[R31 + 0x20, el]:u64
0001407f: R22 := mem[R31 + 0x28, el]:u64
00014089: R29 := mem[R31, el]:u64
0001408d: R30 := mem[R31 + 8, el]:u64
00014090: R31 := R31 + 0x30
00014095: call R30 with noreturn

00013fb1:
00013fbe: R30 := 0x4FB8
00013fc0: call @__ctype_tolower_loc with return %00013fc2

00013fc2:
00013fc8: #5655 := R20
00013fce: R1 := pad:32[mem[R22 + #5655]]
00013fd6: R0 := mem[R0, el]:u64
00013fde: #5658 := R1 << 2
00013fe4: R0 := mem[R0 + #5658, el]:u32
00013fec: #5659 := R20
00013ff1: mem := mem with [R22 + #5659] <- low:8[31:0[R0]]
00013ff8: R20 := R20 + 1
0003af0f: goto %00013f85

0003af10: sub hlist_subcmp_all(hlist_subcmp_all_result)
0003b3e6: hlist_subcmp_all_result :: out u32 = low:32[R0]

00014097:
0001409e: #5683 := R31 - 0x50
000140a3: mem := mem with [#5683, el]:u64 <- R29
000140a8: mem := mem with [#5683 + 8, el]:u64 <- R30
000140ac: R31 := #5683
000140b3: R29 := R31
000140bb: #5688 := R31 + 0x10
000140c0: mem := mem with [#5688, el]:u64 <- R19
000140c5: mem := mem with [#5688 + 8, el]:u64 <- R20
000140cb: R19 := 0
000140d3: #5693 := R31 + 0x20
000140d8: mem := mem with [#5693, el]:u64 <- R21
000140dd: mem := mem with [#5693 + 8, el]:u64 <- R22
000140e5: R21 := R0
000140ed: R0 := R2
000140f5: #5704 := R31 + 0x30
000140fa: mem := mem with [#5704, el]:u64 <- R23
000140ff: mem := mem with [#5704 + 8, el]:u64 <- R24
00014107: R23 := R1
0001410c: R30 := 0x50C0
0001410e: call @strdup with return %00014110

00014110:
00014116: R22 := R0
0001411b: goto %00014119

00014119:
00014122: R0 := R22
00014127: R30 := 0x50E8
00014129: call @strlen with return %0001412b

0001412b:
00014131: #5718 := 1 + ~R19 + R0
00014135: NF := 63:63[#5718]
00014138: VF := 63:63[R0] & 63:63[~R19] & ~63:63[#5718] | ~63:63[R0] &
          ~63:63[~R19] & 63:63[#5718]
0001413b: ZF := #5718 = 0
0001413e: CF := 63:63[R0] & 63:63[~R19] | 63:63[~R19] & ~63:63[#5718] |
          63:63[R0] & ~63:63[#5718]
0001414d: #5723 := (CF & ~ZF) <> 0
00014147: when #5723 goto %00014145
0003af11: goto %0001418e

0001418e:
00014198: #5729 := R21 = 0
00014192: when #5729 goto %00014190
0003af12: goto %00014fa9

00014190:
000141a0: R0 := R22
000141a7: R24 := 0
000141ac: R30 := 0x51AC
000141ae: call @free with return %000141b0

000141b0:
000141b7: R0 := 31:0[R24]
000141c0: R19 := mem[R31 + 0x10, el]:u64
000141c4: R20 := mem[R31 + 0x18, el]:u64
000141cd: R21 := mem[R31 + 0x20, el]:u64
000141d1: R22 := mem[R31 + 0x28, el]:u64
000141da: R23 := mem[R31 + 0x30, el]:u64
000141de: R24 := mem[R31 + 0x38, el]:u64
000141e8: R29 := mem[R31, el]:u64
000141ec: R30 := mem[R31 + 8, el]:u64
000141ef: R31 := R31 + 0x50
000141f4: call R30 with noreturn

00014fa9:
00014fae: R24 := 0
00014fb6: mem := mem with [R31 + 0x40, el]:u64 <- R25
00014fbd: R25 := 1
00014fc2: goto %00014fc0

00014fc0:
00014fc9: R0 := mem[R21, el]:u64
00014fd1: R1 := R23
00014fd6: R30 := 0x5118
00014fd8: call @strcasecmp with return %00014fda

00014fda:
00014fe4: #6147 := ~31:0[R0] = 0
00014fde: when #6147 goto %00014fdc
0003af13: goto %00015057

00015057:
0001505d: R0 := mem[R21 + 8, el]:u64
00015063: R19 := 0
00015068: R30 := 0x5128
0001506a: call @strdup with return %0001506c

0001506c:
00015072: R20 := R0
00015077: goto %00015075

00015075:
0001507e: R0 := R20
00015083: R30 := 0x5150
00015085: call @strlen with return %00015087

00015087:
0001508d: #6171 := 1 + ~R19 + R0
00015091: NF := 63:63[#6171]
00015094: VF := 63:63[R0] & 63:63[~R19] & ~63:63[#6171] | ~63:63[R0] &
          ~63:63[~R19] & 63:63[#6171]
00015097: ZF := #6171 = 0
0001509a: CF := 63:63[R0] & 63:63[~R19] | 63:63[~R19] & ~63:63[#6171] |
          63:63[R0] & ~63:63[#6171]
000150a9: #6176 := (CF & ~ZF) <> 0
000150a3: when #6176 goto %000150a1
0003af14: goto %000150ea

000150ea:
000150f0: R1 := R22
000150f8: R0 := R20
000150fd: R30 := 0x5164
00015100: call @strstr with return %00015102

00015102:
00015107: #6188 := R0
0001510b: NF := 63:63[#6188]
0001510e: VF := 63:63[R0] & ~63:63[#6188]
00015111: ZF := #6188 = 0
00015114: CF := 63:63[R0] | ~63:63[#6188] | 63:63[R0] & ~63:63[#6188]
0001512e: #6190 := ZF
0001512f: goto %00015126

00015126:
00015128: when #6190 goto %0001511f
00015129: goto %00015123

00015123:
00015124: R24 := 31:0[R25]
0001512b: goto %00015127

0001511f:
00015120: R24 := 31:0[R24]
0001512a: goto %00015127

00015127:
00015138: R0 := R20
0001513d: R30 := 0x5174
0001513f: call @free with return %00015141

00015141:
00015147: R21 := mem[R21 + 0x18, el]:u64
00015152: #6195 := ~R21 = 0
0001514c: when #6195 goto %00014fc0
0003af15: goto %00014ff0

000150a1:
000150ae: R30 := 0x5134
000150b0: call @__ctype_tolower_loc with return %000150b2

000150b2:
000150b8: #6177 := R19
000150be: R1 := pad:32[mem[R20 + #6177]]
000150c6: R0 := mem[R0, el]:u64
000150ce: #6180 := R1 << 2
000150d4: R0 := mem[R0 + #6180, el]:u32
000150dc: #6181 := R19
000150e1: mem := mem with [R20 + #6181] <- low:8[31:0[R0]]
000150e8: R19 := R19 + 1
0003af16: goto %00015075

00014fdc:
00014fec: R21 := mem[R21 + 0x18, el]:u64
00014ff8: #6149 := R21 = 0
00014ff2: when #6149 goto %00014ff0
0003af17: goto %00014fc0

00014ff0:
00015000: R0 := R22
00015008: R25 := mem[R31 + 0x40, el]:u64
0001500d: R30 := 0x5188
0001500f: call @free with return %00015011

00015011:
00015018: R0 := 31:0[R24]
00015021: R19 := mem[R31 + 0x10, el]:u64
00015025: R20 := mem[R31 + 0x18, el]:u64
0001502e: R21 := mem[R31 + 0x20, el]:u64
00015032: R22 := mem[R31 + 0x28, el]:u64
0001503b: R23 := mem[R31 + 0x30, el]:u64
0001503f: R24 := mem[R31 + 0x38, el]:u64
00015049: R29 := mem[R31, el]:u64
0001504d: R30 := mem[R31 + 8, el]:u64
00015050: R31 := R31 + 0x50
00015055: call R30 with noreturn

00014145:
00014152: R30 := 0x50CC
00014154: call @__ctype_tolower_loc with return %00014156

00014156:
0001415c: #5724 := R19
00014162: R1 := pad:32[mem[R22 + #5724]]
0001416a: R0 := mem[R0, el]:u64
00014172: #5727 := R1 << 2
00014178: R0 := mem[R0 + #5727, el]:u32
00014180: #5728 := R19
00014185: mem := mem with [R22 + #5728] <- low:8[31:0[R0]]
0001418c: R19 := R19 + 1
0003af18: goto %00014119

0003af19: sub hmac_md5(hmac_md5_result)
0003b3e7: hmac_md5_result :: out u32 = low:32[R0]

0001330e:
00013313: R31 := R31 - 0x210
0001331a: #5141 := 0xFFFFFFFFFFFFFFC0 + R1
0001331e: NF := 63:63[#5141]
00013321: VF := 63:63[R1] & ~63:63[#5141]
00013324: ZF := #5141 = 0
00013327: CF := 63:63[R1] | ~63:63[#5141] | 63:63[R1] & ~63:63[#5141]
00013331: #5145 := R31
00013336: mem := mem with [#5145, el]:u64 <- R29
0001333b: mem := mem with [#5145 + 8, el]:u64 <- R30
00013342: R29 := R31
0001334a: #5150 := R31 + 0x10
0001334f: mem := mem with [#5150, el]:u64 <- R19
00013354: mem := mem with [#5150 + 8, el]:u64 <- R20
0001335a: R20 := 0x27000
00013362: R5 := mem[R20 + 0xFB8, el]:u64
0001336a: #5156 := R31 + 0x20
0001336f: mem := mem with [#5156, el]:u64 <- R21
00013374: mem := mem with [#5156 + 8, el]:u64 <- R22
0001337c: R22 := R2
00013384: R6 := mem[R5, el]:u64
0001338c: mem := mem with [R31 + 0x208, el]:u64 <- R6
00013392: R6 := 0
0001339a: #5165 := R31 + 0x30
0001339f: mem := mem with [#5165, el]:u64 <- R23
000133a4: mem := mem with [#5165 + 8, el]:u64 <- R24
000133ac: R21 := R4
000133b4: #5173 := R31 + 0x40
000133b9: mem := mem with [#5173, el]:u64 <- R25
000133be: mem := mem with [#5173 + 8, el]:u64 <- R26
000133c6: R25 := R3
000133ce: #5181 := R31 + 0x50
000133d3: mem := mem with [#5181, el]:u64 <- R27
000133d8: mem := mem with [#5181 + 8, el]:u64 <- R28
000133e5: #5184 := (CF & ~ZF) <> 0
000133df: when #5184 goto %000133dd
0003af1a: goto %00018ff9

000133dd:
000133eb: R2 := 0x11000
000133f2: R28 := R31 + 0x100
000133f9: R19 := R31 + 0x1A0
00013401: mem := mem with [R31 + 0x110, el]:u64 <- 0
0001340a: V0 := mem[R2 + 0x8D0, el]:u64.mem[R2 + 0x8D8, el]:u64
00013412: R2 := R28
0001341a: mem := mem with [R31 + 0x118, el]:u32 <- 0
00013421: R27 := R31 + 0x1C0
00013429: R23 := R19
0001342f: R24 := 0xF
00013437: mem := mem with [R31 + 0x100, el]:u128 <- V0
0001343c: R30 := 0x9E14
0001343e: call @md5_process_bytes with return %00013440

00013440:
00013446: R1 := R19
0001344e: R0 := R28
00013453: R30 := 0x9E20
00013455: call @md5_finish_ctx with return %00013457

00013457:
0001345b: R3 := 0x11000
00013463: R0 := R27
00013469: R26 := 0x10
0001346f: R2 := 0x40
00013478: V0 := mem[R3 + 0x8D0, el]:u64.mem[R3 + 0x8D8, el]:u64
0001347f: R1 := 0x36
00013487: mem := mem with [R31 + 0x70, el]:u64 <- 0
0001348f: mem := mem with [R31 + 0x78, el]:u32 <- 0
00013497: mem := mem with [R31 + 0x60, el]:u128 <- V0
0001349c: R30 := 0x9E48
0001349f: call @memset with return %000134a1

000134a1:
000134a4: goto %000134a2

00018ff9:
00018ffd: R3 := 0x11000
00019004: R27 := R31 + 0x1C0
0001900c: R26 := R1
00019014: R23 := R0
0001901d: V0 := mem[R3 + 0x8D0, el]:u64.mem[R3 + 0x8D8, el]:u64
00019025: R0 := R27
0001902b: R2 := 0x40
00019032: R1 := 0x36
0001903a: mem := mem with [R31 + 0x70, el]:u64 <- 0
00019042: mem := mem with [R31 + 0x60, el]:u128 <- V0
0001904a: mem := mem with [R31 + 0x78, el]:u32 <- 0
0001904f: R30 := 0x99B8
00019051: call @memset with return %00019053

00019053:
0001905c: #8252 := R26 = 0
00019056: when #8252 goto %00018f52
0003af1b: goto %0001905f

00018f52:
00018f57: R19 := R31 + 0x60
00018f5f: R0 := R27
00018f67: R2 := R19
00018f6d: R1 := 0x40
00018f72: R30 := 0x9E74
00018f74: call @md5_process_block with return %00018f76

00018f76:
00018f7b: R28 := R31 + 0x100
00018f83: R1 := R25
00018f8b: R0 := R22
00018f92: R22 := R31 + 0x1B0
00018f97: R30 := 0x9E88
00018f99: call @md5_process_bytes with return %00018f9b

00018f9b:
00018fa1: R1 := R22
00018fa9: R0 := R19
00018fae: R30 := 0x9E94
00018fb0: call @md5_finish_ctx with return %00018fb2

00018fb2:
00018fb8: mem := mem with [R31 + 0x110, el]:u64 <- 0
00018fbe: R3 := 0x11000
00018fc6: R0 := R27
00018fcc: R2 := 0x40
00018fd3: R1 := 0x5C
00018fdc: V0 := mem[R3 + 0x8D0, el]:u64.mem[R3 + 0x8D8, el]:u64
00018fe4: mem := mem with [R31 + 0x118, el]:u32 <- 0
00018fec: mem := mem with [R31 + 0x100, el]:u128 <- V0
00018ff1: R30 := 0x9EB8
00018ff3: call @memset with return %00018ff5

00018ff5:
00018ff7: goto %000136b7

0001905f:
00019064: R24 := R26 - 1
0001906b: #8253 := 0xFFFFFFFFFFFFFFF2 + R24
0001906f: NF := 63:63[#8253]
00019072: VF := 63:63[R24] & ~63:63[#8253]
00019075: ZF := #8253 = 0
00019078: CF := 63:63[R24] | ~63:63[#8253] | 63:63[R24] & ~63:63[#8253]
00019086: #8255 := (~CF | ZF) <> 0
00019080: when #8255 goto %00018f2f
0003af1c: goto %00019089

00018f2f:
00018f35: R0 := R26
00018f3d: R2 := R23
00018f45: R1 := R27
00018f4c: R28 := R31 + 0x100
00018f50: goto %00018a74

00019089:
0001908e: R28 := R31 + 0x100
0003af1d: goto %000134a2

000134a2:
000134aa: R19 := R26 - 0x10
000134b2: R6 := R27
000134b8: R5 := 0
000134bf: R0 := R19 >> 4
000134c6: R0 := R0 + 1
0003af1e: goto %000134c8

000134c8:
000134cd: R1 := R5 << 4
000134d4: R5 := R5 + 1
000134dd: V0 := mem[R6, el]:u64.mem[R6 + 8, el]:u64
000134e5: #5215 := 1 + ~R0 + R5
000134e9: NF := 63:63[#5215]
000134ec: VF := 63:63[R5] & 63:63[~R0] & ~63:63[#5215] | ~63:63[R5] &
          ~63:63[~R0] & 63:63[#5215]
000134ef: ZF := #5215 = 0
000134f2: CF := 63:63[R5] & 63:63[~R0] | 63:63[~R0] & ~63:63[#5215] |
          63:63[R5] & ~63:63[#5215]
000134fc: #5220 := R1
00013502: V1 := mem[R23 + #5220, el]:u64.mem[R23 + #5220 + 8, el]:u64
0001350a: V0 := V0 ^ V1
00013513: mem := mem with [R6, el]:u128 <- V0
00013516: R6 := R6 + 0x10
00013521: #5223 := ~CF <> 0
0001351b: when #5223 goto %000134c8
0003af1f: goto %00013524

00013524:
00013529: R0 := R0 << 4
00013531: #5229 := 1 + ~R0 + R26
00013535: NF := 63:63[#5229]
00013538: VF := 63:63[R26] & 63:63[~R0] & ~63:63[#5229] | ~63:63[R26] &
          ~63:63[~R0] & 63:63[#5229]
0001353b: ZF := #5229 = 0
0001353e: CF := 63:63[R26] & 63:63[~R0] | 63:63[~R0] & ~63:63[#5229] |
          63:63[R26] & ~63:63[#5229]
00013548: R2 := R23 + R0
00013550: R1 := R27 + R0
00013558: R0 := R26 - R0
00013564: #5243 := ZF
0001355e: when #5243 goto %0001355c
0003af20: goto %00018a74

0001355c:
0001356b: R24 := R31 + 0x60
00013573: R0 := R27
0001357b: R2 := R24
00013581: R1 := 0x40
00013586: R30 := 0x9ED8
00013588: call @md5_process_block with return %0001358a

0001358a:
00013590: R1 := R25
00013598: R0 := R22
0001359f: R22 := R31 + 0x1B0
000135a4: R30 := 0x9EE8
000135a6: call @md5_process_bytes with return %000135a8

000135a8:
000135ae: R1 := R22
000135b6: R0 := R24
000135bb: R30 := 0x9EF4
000135bd: call @md5_finish_ctx with return %000135bf

000135bf:
000135c5: mem := mem with [R31 + 0x110, el]:u64 <- 0
000135cb: R0 := 0x11000
000135d1: R2 := 0x40
000135d8: R1 := 0x5C
000135e0: mem := mem with [R31 + 0x118, el]:u32 <- 0
000135e9: V0 := mem[R0 + 0x8D0, el]:u64.mem[R0 + 0x8D8, el]:u64
000135f1: R0 := R27
000135f9: mem := mem with [R31 + 0x100, el]:u128 <- V0
000135fe: R30 := 0x9F18
00013600: call @memset with return %00013602

00013602:
00013605: goto %00013603

00018a74:
00018a7b: R3 := pad:32[mem[R2]]
00018a82: #8093 := 0xFFFFFFFFFFFFFFFF + R0
00018a86: NF := 63:63[#8093]
00018a89: VF := 63:63[R0] & ~63:63[#8093]
00018a8c: ZF := #8093 = 0
00018a8f: CF := 63:63[R0] | ~63:63[#8093] | 63:63[R0] & ~63:63[#8093]
00018a9a: R4 := pad:32[mem[R1]]
00018aa3: R3 := 31:0[R3] ^ 31:0[R4]
00018aab: mem := mem with [R1] <- low:8[31:0[R3]]
00018ab7: #8098 := ZF
00018ab1: when #8098 goto %00018aaf
0003af21: goto %00018b8b

00018b8b:
00018b92: R3 := pad:32[mem[R2 + 1]]
00018b99: #8128 := 0xFFFFFFFFFFFFFFFE + R0
00018b9d: NF := 63:63[#8128]
00018ba0: VF := 63:63[R0] & ~63:63[#8128]
00018ba3: ZF := #8128 = 0
00018ba6: CF := 63:63[R0] | ~63:63[#8128] | 63:63[R0] & ~63:63[#8128]
00018bb1: R4 := pad:32[mem[R1 + 1]]
00018bba: R3 := 31:0[R3] ^ 31:0[R4]
00018bc2: mem := mem with [R1 + 1] <- low:8[31:0[R3]]
00018bcd: #8133 := ZF
00018bc7: when #8133 goto %00018aaf
0003af22: goto %00018bd0

00018bd0:
00018bd7: R3 := pad:32[mem[R2 + 2]]
00018bde: #8134 := 0xFFFFFFFFFFFFFFFD + R0
00018be2: NF := 63:63[#8134]
00018be5: VF := 63:63[R0] & ~63:63[#8134]
00018be8: ZF := #8134 = 0
00018beb: CF := 63:63[R0] | ~63:63[#8134] | 63:63[R0] & ~63:63[#8134]
00018bf6: R4 := pad:32[mem[R1 + 2]]
00018bff: R3 := 31:0[R3] ^ 31:0[R4]
00018c07: mem := mem with [R1 + 2] <- low:8[31:0[R3]]
00018c12: #8139 := ZF
00018c0c: when #8139 goto %00018aaf
0003af23: goto %00018c15

00018c15:
00018c1c: R3 := pad:32[mem[R2 + 3]]
00018c23: #8140 := 0xFFFFFFFFFFFFFFFC + R0
00018c27: NF := 63:63[#8140]
00018c2a: VF := 63:63[R0] & ~63:63[#8140]
00018c2d: ZF := #8140 = 0
00018c30: CF := 63:63[R0] | ~63:63[#8140] | 63:63[R0] & ~63:63[#8140]
00018c3b: R4 := pad:32[mem[R1 + 3]]
00018c44: R3 := 31:0[R3] ^ 31:0[R4]
00018c4c: mem := mem with [R1 + 3] <- low:8[31:0[R3]]
00018c57: #8145 := ZF
00018c51: when #8145 goto %00018aaf
0003af24: goto %00018c5a

00018c5a:
00018c61: R3 := pad:32[mem[R2 + 4]]
00018c68: #8146 := 0xFFFFFFFFFFFFFFFB + R0
00018c6c: NF := 63:63[#8146]
00018c6f: VF := 63:63[R0] & ~63:63[#8146]
00018c72: ZF := #8146 = 0
00018c75: CF := 63:63[R0] | ~63:63[#8146] | 63:63[R0] & ~63:63[#8146]
00018c80: R4 := pad:32[mem[R1 + 4]]
00018c89: R3 := 31:0[R3] ^ 31:0[R4]
00018c91: mem := mem with [R1 + 4] <- low:8[31:0[R3]]
00018c9c: #8151 := ZF
00018c96: when #8151 goto %00018aaf
0003af25: goto %00018c9f

00018c9f:
00018ca6: R3 := pad:32[mem[R2 + 5]]
00018cad: #8152 := 0xFFFFFFFFFFFFFFFA + R0
00018cb1: NF := 63:63[#8152]
00018cb4: VF := 63:63[R0] & ~63:63[#8152]
00018cb7: ZF := #8152 = 0
00018cba: CF := 63:63[R0] | ~63:63[#8152] | 63:63[R0] & ~63:63[#8152]
00018cc5: R4 := pad:32[mem[R1 + 5]]
00018cce: R3 := 31:0[R3] ^ 31:0[R4]
00018cd6: mem := mem with [R1 + 5] <- low:8[31:0[R3]]
00018ce1: #8157 := ZF
00018cdb: when #8157 goto %00018aaf
0003af26: goto %00018ce4

00018ce4:
00018ceb: R3 := pad:32[mem[R2 + 6]]
00018cf2: #8158 := 0xFFFFFFFFFFFFFFF9 + R0
00018cf6: NF := 63:63[#8158]
00018cf9: VF := 63:63[R0] & ~63:63[#8158]
00018cfc: ZF := #8158 = 0
00018cff: CF := 63:63[R0] | ~63:63[#8158] | 63:63[R0] & ~63:63[#8158]
00018d0a: R4 := pad:32[mem[R1 + 6]]
00018d13: R3 := 31:0[R3] ^ 31:0[R4]
00018d1b: mem := mem with [R1 + 6] <- low:8[31:0[R3]]
00018d26: #8163 := ZF
00018d20: when #8163 goto %00018aaf
0003af27: goto %00018d29

00018d29:
00018d30: R3 := pad:32[mem[R2 + 7]]
00018d37: #8164 := 0xFFFFFFFFFFFFFFF8 + R0
00018d3b: NF := 63:63[#8164]
00018d3e: VF := 63:63[R0] & ~63:63[#8164]
00018d41: ZF := #8164 = 0
00018d44: CF := 63:63[R0] | ~63:63[#8164] | 63:63[R0] & ~63:63[#8164]
00018d4f: R4 := pad:32[mem[R1 + 7]]
00018d58: R3 := 31:0[R3] ^ 31:0[R4]
00018d60: mem := mem with [R1 + 7] <- low:8[31:0[R3]]
00018d6b: #8169 := ZF
00018d65: when #8169 goto %00018aaf
0003af28: goto %00018d6e

00018d6e:
00018d75: R3 := pad:32[mem[R2 + 8]]
00018d7c: #8170 := 0xFFFFFFFFFFFFFFF7 + R0
00018d80: NF := 63:63[#8170]
00018d83: VF := 63:63[R0] & ~63:63[#8170]
00018d86: ZF := #8170 = 0
00018d89: CF := 63:63[R0] | ~63:63[#8170] | 63:63[R0] & ~63:63[#8170]
00018d94: R4 := pad:32[mem[R1 + 8]]
00018d9d: R3 := 31:0[R3] ^ 31:0[R4]
00018da5: mem := mem with [R1 + 8] <- low:8[31:0[R3]]
00018db0: #8175 := ZF
00018daa: when #8175 goto %00018aaf
0003af29: goto %00018db3

00018db3:
00018dba: R3 := pad:32[mem[R2 + 9]]
00018dc1: #8176 := 0xFFFFFFFFFFFFFFF6 + R0
00018dc5: NF := 63:63[#8176]
00018dc8: VF := 63:63[R0] & ~63:63[#8176]
00018dcb: ZF := #8176 = 0
00018dce: CF := 63:63[R0] | ~63:63[#8176] | 63:63[R0] & ~63:63[#8176]
00018dd9: R4 := pad:32[mem[R1 + 9]]
00018de2: R3 := 31:0[R3] ^ 31:0[R4]
00018dea: mem := mem with [R1 + 9] <- low:8[31:0[R3]]
00018df5: #8181 := ZF
00018def: when #8181 goto %00018aaf
0003af2a: goto %00018df8

00018df8:
00018dff: R3 := pad:32[mem[R2 + 0xA]]
00018e06: #8182 := 0xFFFFFFFFFFFFFFF5 + R0
00018e0a: NF := 63:63[#8182]
00018e0d: VF := 63:63[R0] & ~63:63[#8182]
00018e10: ZF := #8182 = 0
00018e13: CF := 63:63[R0] | ~63:63[#8182] | 63:63[R0] & ~63:63[#8182]
00018e1e: R4 := pad:32[mem[R1 + 0xA]]
00018e27: R3 := 31:0[R3] ^ 31:0[R4]
00018e2f: mem := mem with [R1 + 0xA] <- low:8[31:0[R3]]
00018e3a: #8187 := ZF
00018e34: when #8187 goto %00018aaf
0003af2b: goto %00018e3d

00018e3d:
00018e44: R3 := pad:32[mem[R2 + 0xB]]
00018e4b: #8188 := 0xFFFFFFFFFFFFFFF4 + R0
00018e4f: NF := 63:63[#8188]
00018e52: VF := 63:63[R0] & ~63:63[#8188]
00018e55: ZF := #8188 = 0
00018e58: CF := 63:63[R0] | ~63:63[#8188] | 63:63[R0] & ~63:63[#8188]
00018e63: R4 := pad:32[mem[R1 + 0xB]]
00018e6c: R3 := 31:0[R3] ^ 31:0[R4]
00018e74: mem := mem with [R1 + 0xB] <- low:8[31:0[R3]]
00018e7f: #8193 := ZF
00018e79: when #8193 goto %00018aaf
0003af2c: goto %00018e82

00018e82:
00018e89: R3 := pad:32[mem[R2 + 0xC]]
00018e90: #8194 := 0xFFFFFFFFFFFFFFF3 + R0
00018e94: NF := 63:63[#8194]
00018e97: VF := 63:63[R0] & ~63:63[#8194]
00018e9a: ZF := #8194 = 0
00018e9d: CF := 63:63[R0] | ~63:63[#8194] | 63:63[R0] & ~63:63[#8194]
00018ea8: R4 := pad:32[mem[R1 + 0xC]]
00018eb1: R3 := 31:0[R3] ^ 31:0[R4]
00018eb9: mem := mem with [R1 + 0xC] <- low:8[31:0[R3]]
00018ec4: #8199 := ZF
00018ebe: when #8199 goto %00018aaf
0003af2d: goto %00018ec7

00018ec7:
00018ece: R3 := pad:32[mem[R2 + 0xD]]
00018ed5: #8200 := 0xFFFFFFFFFFFFFFF2 + R0
00018ed9: NF := 63:63[#8200]
00018edc: VF := 63:63[R0] & ~63:63[#8200]
00018edf: ZF := #8200 = 0
00018ee2: CF := 63:63[R0] | ~63:63[#8200] | 63:63[R0] & ~63:63[#8200]
00018eed: R0 := pad:32[mem[R1 + 0xD]]
00018ef6: R0 := 31:0[R3] ^ 31:0[R0]
00018efe: mem := mem with [R1 + 0xD] <- low:8[31:0[R0]]
00018f09: #8205 := ZF
00018f03: when #8205 goto %00018aaf
0003af2e: goto %00018f0c

00018f0c:
00018f13: R0 := pad:32[mem[R2 + 0xE]]
00018f1c: R2 := pad:32[mem[R1 + 0xE]]
00018f25: R0 := 31:0[R0] ^ 31:0[R2]
00018f2d: mem := mem with [R1 + 0xE] <- low:8[31:0[R0]]
0003af2f: goto %00018aaf

00018aaf:
00018abe: R19 := R31 + 0x60
00018ac6: R0 := R27
00018ace: R2 := R19
00018ad4: R1 := 0x40
00018ad9: R30 := 0x9B8C
00018adb: call @md5_process_block with return %00018add

00018add:
00018ae3: R0 := R22
00018aeb: R1 := R25
00018af2: R22 := R31 + 0x1B0
00018af7: R30 := 0x9B9C
00018af9: call @md5_process_bytes with return %00018afb

00018afb:
00018b01: R1 := R22
00018b09: R0 := R19
00018b0e: R30 := 0x9BA8
00018b10: call @md5_finish_ctx with return %00018b12

00018b12:
00018b18: mem := mem with [R31 + 0x110, el]:u64 <- 0
00018b1e: R0 := 0x11000
00018b24: R2 := 0x40
00018b2b: R1 := 0x5C
00018b33: mem := mem with [R31 + 0x118, el]:u32 <- 0
00018b3c: V0 := mem[R0 + 0x8D0, el]:u64.mem[R0 + 0x8D8, el]:u64
00018b44: R0 := R27
00018b4c: mem := mem with [R31 + 0x100, el]:u128 <- V0
00018b51: R30 := 0x9BCC
00018b53: call @memset with return %00018b55

00018b55:
00018b5a: #8122 := 0xFFFFFFFFFFFFFFF2 + R24
00018b5e: NF := 63:63[#8122]
00018b61: VF := 63:63[R24] & ~63:63[#8122]
00018b64: ZF := #8122 = 0
00018b67: CF := 63:63[R24] | ~63:63[#8122] | 63:63[R24] & ~63:63[#8122]
00018b76: #8124 := (~CF | ZF) <> 0
00018b70: when #8124 goto %00018b6e
0003af30: goto %00018b84

00018b6e:
00018b7e: R1 := R27
00018b82: goto %0001868b

00018b84:
00018b89: R19 := R26 - 0x10
0003af31: goto %00013603

00013603:
0001360b: R5 := R19 >> 4
00013613: R3 := R27
0001361a: R5 := R5 + 1
00013620: R2 := 0
0003af32: goto %00013622

00013622:
00013627: R0 := R2 << 4
0001362e: R2 := R2 + 1
00013637: V0 := mem[R3, el]:u64.mem[R3 + 8, el]:u64
0001363f: #5278 := 1 + ~R2 + R5
00013643: NF := 63:63[#5278]
00013646: VF := 63:63[R5] & 63:63[~R2] & ~63:63[#5278] | ~63:63[R5] &
          ~63:63[~R2] & 63:63[#5278]
00013649: ZF := #5278 = 0
0001364c: CF := 63:63[R5] & 63:63[~R2] | 63:63[~R2] & ~63:63[#5278] |
          63:63[R5] & ~63:63[#5278]
00013656: #5283 := R0
0001365c: V1 := mem[R23 + #5283, el]:u64.mem[R23 + #5283 + 8, el]:u64
00013664: V0 := V0 ^ V1
0001366d: mem := mem with [R3, el]:u128 <- V0
00013670: R3 := R3 + 0x10
0001367c: #5286 := (CF & ~ZF) <> 0
00013676: when #5286 goto %00013622
0003af33: goto %0001367f

0001367f:
00013684: R5 := R5 << 4
0001368c: #5292 := 1 + ~R26 + R5
00013690: NF := 63:63[#5292]
00013693: VF := 63:63[R5] & 63:63[~R26] & ~63:63[#5292] | ~63:63[R5] &
          ~63:63[~R26] & 63:63[#5292]
00013696: ZF := #5292 = 0
00013699: CF := 63:63[R5] & 63:63[~R26] | 63:63[~R26] & ~63:63[#5292] |
          63:63[R5] & ~63:63[#5292]
000136a3: R23 := R23 + R5
000136ab: R26 := R26 - R5
000136b3: R1 := R27 + R5
000136bf: #5306 := ZF
000136b9: when #5306 goto %000136b7
0003af34: goto %0001868b

0001868b:
00018692: R0 := pad:32[mem[R23]]
00018699: #8006 := 0xFFFFFFFFFFFFFFFF + R26
0001869d: NF := 63:63[#8006]
000186a0: VF := 63:63[R26] & ~63:63[#8006]
000186a3: ZF := #8006 = 0
000186a6: CF := 63:63[R26] | ~63:63[#8006] | 63:63[R26] & ~63:63[#8006]
000186b1: R2 := pad:32[mem[R1]]
000186ba: R0 := 31:0[R0] ^ 31:0[R2]
000186c2: mem := mem with [R1] <- low:8[31:0[R0]]
000186cd: #8011 := ZF
000186c7: when #8011 goto %000136b7
0003af35: goto %000186d0

000186d0:
000186d7: R0 := pad:32[mem[R23 + 1]]
000186de: #8012 := 0xFFFFFFFFFFFFFFFE + R26
000186e2: NF := 63:63[#8012]
000186e5: VF := 63:63[R26] & ~63:63[#8012]
000186e8: ZF := #8012 = 0
000186eb: CF := 63:63[R26] | ~63:63[#8012] | 63:63[R26] & ~63:63[#8012]
000186f6: R2 := pad:32[mem[R1 + 1]]
000186ff: R0 := 31:0[R0] ^ 31:0[R2]
00018707: mem := mem with [R1 + 1] <- low:8[31:0[R0]]
00018712: #8017 := ZF
0001870c: when #8017 goto %000136b7
0003af36: goto %00018715

00018715:
0001871c: R0 := pad:32[mem[R23 + 2]]
00018723: #8018 := 0xFFFFFFFFFFFFFFFD + R26
00018727: NF := 63:63[#8018]
0001872a: VF := 63:63[R26] & ~63:63[#8018]
0001872d: ZF := #8018 = 0
00018730: CF := 63:63[R26] | ~63:63[#8018] | 63:63[R26] & ~63:63[#8018]
0001873b: R2 := pad:32[mem[R1 + 2]]
00018744: R0 := 31:0[R0] ^ 31:0[R2]
0001874c: mem := mem with [R1 + 2] <- low:8[31:0[R0]]
00018757: #8023 := ZF
00018751: when #8023 goto %000136b7
0003af37: goto %0001875a

0001875a:
00018761: R0 := pad:32[mem[R23 + 3]]
00018768: #8024 := 0xFFFFFFFFFFFFFFFC + R26
0001876c: NF := 63:63[#8024]
0001876f: VF := 63:63[R26] & ~63:63[#8024]
00018772: ZF := #8024 = 0
00018775: CF := 63:63[R26] | ~63:63[#8024] | 63:63[R26] & ~63:63[#8024]
00018780: R2 := pad:32[mem[R1 + 3]]
00018789: R0 := 31:0[R0] ^ 31:0[R2]
00018791: mem := mem with [R1 + 3] <- low:8[31:0[R0]]
0001879c: #8029 := ZF
00018796: when #8029 goto %000136b7
0003af38: goto %0001879f

0001879f:
000187a6: R0 := pad:32[mem[R23 + 4]]
000187ad: #8030 := 0xFFFFFFFFFFFFFFFB + R26
000187b1: NF := 63:63[#8030]
000187b4: VF := 63:63[R26] & ~63:63[#8030]
000187b7: ZF := #8030 = 0
000187ba: CF := 63:63[R26] | ~63:63[#8030] | 63:63[R26] & ~63:63[#8030]
000187c5: R2 := pad:32[mem[R1 + 4]]
000187ce: R0 := 31:0[R0] ^ 31:0[R2]
000187d6: mem := mem with [R1 + 4] <- low:8[31:0[R0]]
000187e1: #8035 := ZF
000187db: when #8035 goto %000136b7
0003af39: goto %000187e4

000187e4:
000187eb: R0 := pad:32[mem[R23 + 5]]
000187f2: #8036 := 0xFFFFFFFFFFFFFFFA + R26
000187f6: NF := 63:63[#8036]
000187f9: VF := 63:63[R26] & ~63:63[#8036]
000187fc: ZF := #8036 = 0
000187ff: CF := 63:63[R26] | ~63:63[#8036] | 63:63[R26] & ~63:63[#8036]
0001880a: R2 := pad:32[mem[R1 + 5]]
00018813: R0 := 31:0[R0] ^ 31:0[R2]
0001881b: mem := mem with [R1 + 5] <- low:8[31:0[R0]]
00018826: #8041 := ZF
00018820: when #8041 goto %000136b7
0003af3a: goto %00018829

00018829:
00018830: R0 := pad:32[mem[R23 + 6]]
00018837: #8042 := 0xFFFFFFFFFFFFFFF9 + R26
0001883b: NF := 63:63[#8042]
0001883e: VF := 63:63[R26] & ~63:63[#8042]
00018841: ZF := #8042 = 0
00018844: CF := 63:63[R26] | ~63:63[#8042] | 63:63[R26] & ~63:63[#8042]
0001884f: R2 := pad:32[mem[R1 + 6]]
00018858: R0 := 31:0[R0] ^ 31:0[R2]
00018860: mem := mem with [R1 + 6] <- low:8[31:0[R0]]
0001886b: #8047 := ZF
00018865: when #8047 goto %000136b7
0003af3b: goto %0001886e

0001886e:
00018875: R0 := pad:32[mem[R23 + 7]]
0001887c: #8048 := 0xFFFFFFFFFFFFFFF8 + R26
00018880: NF := 63:63[#8048]
00018883: VF := 63:63[R26] & ~63:63[#8048]
00018886: ZF := #8048 = 0
00018889: CF := 63:63[R26] | ~63:63[#8048] | 63:63[R26] & ~63:63[#8048]
00018894: R2 := pad:32[mem[R1 + 7]]
0001889d: R0 := 31:0[R0] ^ 31:0[R2]
000188a5: mem := mem with [R1 + 7] <- low:8[31:0[R0]]
000188b0: #8053 := ZF
000188aa: when #8053 goto %000136b7
0003af3c: goto %000188b3

000188b3:
000188ba: R0 := pad:32[mem[R23 + 8]]
000188c1: #8054 := 0xFFFFFFFFFFFFFFF7 + R26
000188c5: NF := 63:63[#8054]
000188c8: VF := 63:63[R26] & ~63:63[#8054]
000188cb: ZF := #8054 = 0
000188ce: CF := 63:63[R26] | ~63:63[#8054] | 63:63[R26] & ~63:63[#8054]
000188d9: R2 := pad:32[mem[R1 + 8]]
000188e2: R0 := 31:0[R0] ^ 31:0[R2]
000188ea: mem := mem with [R1 + 8] <- low:8[31:0[R0]]
000188f5: #8059 := ZF
000188ef: when #8059 goto %000136b7
0003af3d: goto %000188f8

000188f8:
000188ff: R0 := pad:32[mem[R23 + 9]]
00018906: #8060 := 0xFFFFFFFFFFFFFFF6 + R26
0001890a: NF := 63:63[#8060]
0001890d: VF := 63:63[R26] & ~63:63[#8060]
00018910: ZF := #8060 = 0
00018913: CF := 63:63[R26] | ~63:63[#8060] | 63:63[R26] & ~63:63[#8060]
0001891e: R2 := pad:32[mem[R1 + 9]]
00018927: R0 := 31:0[R0] ^ 31:0[R2]
0001892f: mem := mem with [R1 + 9] <- low:8[31:0[R0]]
0001893a: #8065 := ZF
00018934: when #8065 goto %000136b7
0003af3e: goto %0001893d

0001893d:
00018944: R0 := pad:32[mem[R23 + 0xA]]
0001894b: #8066 := 0xFFFFFFFFFFFFFFF5 + R26
0001894f: NF := 63:63[#8066]
00018952: VF := 63:63[R26] & ~63:63[#8066]
00018955: ZF := #8066 = 0
00018958: CF := 63:63[R26] | ~63:63[#8066] | 63:63[R26] & ~63:63[#8066]
00018963: R2 := pad:32[mem[R1 + 0xA]]
0001896c: R0 := 31:0[R0] ^ 31:0[R2]
00018974: mem := mem with [R1 + 0xA] <- low:8[31:0[R0]]
0001897f: #8071 := ZF
00018979: when #8071 goto %000136b7
0003af3f: goto %00018982

00018982:
00018989: R0 := pad:32[mem[R23 + 0xB]]
00018990: #8072 := 0xFFFFFFFFFFFFFFF4 + R26
00018994: NF := 63:63[#8072]
00018997: VF := 63:63[R26] & ~63:63[#8072]
0001899a: ZF := #8072 = 0
0001899d: CF := 63:63[R26] | ~63:63[#8072] | 63:63[R26] & ~63:63[#8072]
000189a8: R2 := pad:32[mem[R1 + 0xB]]
000189b1: R0 := 31:0[R0] ^ 31:0[R2]
000189b9: mem := mem with [R1 + 0xB] <- low:8[31:0[R0]]
000189c4: #8077 := ZF
000189be: when #8077 goto %000136b7
0003af40: goto %000189c7

000189c7:
000189ce: R0 := pad:32[mem[R23 + 0xC]]
000189d5: #8078 := 0xFFFFFFFFFFFFFFF3 + R26
000189d9: NF := 63:63[#8078]
000189dc: VF := 63:63[R26] & ~63:63[#8078]
000189df: ZF := #8078 = 0
000189e2: CF := 63:63[R26] | ~63:63[#8078] | 63:63[R26] & ~63:63[#8078]
000189ed: R2 := pad:32[mem[R1 + 0xC]]
000189f6: R0 := 31:0[R0] ^ 31:0[R2]
000189fe: mem := mem with [R1 + 0xC] <- low:8[31:0[R0]]
00018a09: #8083 := ZF
00018a03: when #8083 goto %000136b7
0003af41: goto %00018a0c

00018a0c:
00018a13: R0 := pad:32[mem[R23 + 0xD]]
00018a1a: #8084 := 0xFFFFFFFFFFFFFFF2 + R26
00018a1e: NF := 63:63[#8084]
00018a21: VF := 63:63[R26] & ~63:63[#8084]
00018a24: ZF := #8084 = 0
00018a27: CF := 63:63[R26] | ~63:63[#8084] | 63:63[R26] & ~63:63[#8084]
00018a32: R2 := pad:32[mem[R1 + 0xD]]
00018a3b: R0 := 31:0[R0] ^ 31:0[R2]
00018a43: mem := mem with [R1 + 0xD] <- low:8[31:0[R0]]
00018a4e: #8089 := ZF
00018a48: when #8089 goto %000136b7
0003af42: goto %00018a51

00018a51:
00018a58: R2 := pad:32[mem[R23 + 0xE]]
00018a61: R0 := pad:32[mem[R1 + 0xE]]
00018a6a: R0 := 31:0[R0] ^ 31:0[R2]
00018a72: mem := mem with [R1 + 0xE] <- low:8[31:0[R0]]
0003af43: goto %000136b7

000136b7:
000136c7: R2 := R28
000136cf: R0 := R27
000136d5: R1 := 0x40
000136da: R30 := 0x9D90
000136dc: call @md5_process_block with return %000136de

000136de:
000136e4: R0 := R22
000136ea: R1 := 0x10
000136ef: R30 := 0x9D9C
000136f1: call @md5_process_bytes with return %000136f3

000136f3:
000136f9: R1 := R21
00013701: R0 := R28
00013706: R30 := 0x9DA8
00013708: call @md5_finish_ctx with return %0001370a

0001370a:
00013710: R20 := mem[R20 + 0xFB8, el]:u64
00013718: R0 := mem[R31 + 0x208, el]:u64
00013720: R1 := mem[R20, el]:u64
00013728: #5328 := 1 + ~R1 + R0
0001372c: NF := 63:63[#5328]
0001372f: VF := 63:63[R0] & 63:63[~R1] & ~63:63[#5328] | ~63:63[R0] &
          ~63:63[~R1] & 63:63[#5328]
00013732: ZF := #5328 = 0
00013735: CF := 63:63[R0] & 63:63[~R1] | 63:63[~R1] & ~63:63[#5328] |
          63:63[R0] & ~63:63[#5328]
00013739: R0 := #5328
0001373f: R1 := 0
0001374b: #5333 := ~ZF <> 0
00013745: when #5333 goto %00013743
0003af44: goto %0001862a

00013743:
00013750: R30 := 0x9F20
00013752: call @__stack_chk_fail with return %0003af45

0003af45:
0003af46: call @md5_stream with noreturn

0001862a:
0001862f: R0 := 0
00018638: R29 := mem[R31, el]:u64
0001863c: R30 := mem[R31 + 8, el]:u64
00018645: R19 := mem[R31 + 0x10, el]:u64
00018649: R20 := mem[R31 + 0x18, el]:u64
00018652: R21 := mem[R31 + 0x20, el]:u64
00018656: R22 := mem[R31 + 0x28, el]:u64
0001865f: R23 := mem[R31 + 0x30, el]:u64
00018663: R24 := mem[R31 + 0x38, el]:u64
0001866c: R25 := mem[R31 + 0x40, el]:u64
00018670: R26 := mem[R31 + 0x48, el]:u64
00018679: R27 := mem[R31 + 0x50, el]:u64
0001867d: R28 := mem[R31 + 0x58, el]:u64
00018684: R31 := R31 + 0x210
00018689: call R30 with noreturn

0003af47: sub host_connect(host_connect_result)
0003b3e8: host_connect_result :: out u32 = low:32[R0]

000220e1:
000220e8: #14480 := R31 - 0x40
000220ed: mem := mem with [#14480, el]:u64 <- R29
000220f2: mem := mem with [#14480 + 8, el]:u64 <- R30
000220f6: R31 := #14480
000220fd: R29 := R31
00022105: #14485 := R31 + 0x10
0002210a: mem := mem with [#14485, el]:u64 <- R19
0002210f: mem := mem with [#14485 + 8, el]:u64 <- R20
00022115: R19 := 0x27000
0002211d: R20 := R0
00022125: R0 := mem[R19 + 0xFB8, el]:u64
0002212d: mem := mem with [R31 + 0x20, el]:u64 <- R21
00022136: R21 := 31:0[R1]
0002213e: R1 := mem[R0, el]:u64
00022146: mem := mem with [R31 + 0x38, el]:u64 <- R1
0002214c: R1 := 0
00022151: R30 := 0xE8F8
00022153: call @__errno_location with return %00022155

00022155:
0002215b: R2 := R0
00022163: R1 := R20
0002216a: R0 := R31 + 0x30
00022172: mem := mem with [R2, el]:u32 <- 0
00022177: R30 := 0xE90C
00022179: call @so_resolv with return %0002217b

0002217b:
00022185: #14501 := 31:0[R0] = 0
0002217f: when #14501 goto %0002217d
0003af48: goto %00028b92

0002217d:
0002218c: R0 := 0xFFFFFFFFFFFFFFFF
00022191: goto %0002218f

00028b92:
00028b99: R0 := mem[R31 + 0x30, el]:u32
00028ba2: R1 := 31:0[R21]
00028ba7: R30 := 0xE91C
00028ba9: call @so_connect with return %0002218f

0002218f:
00022198: R19 := mem[R19 + 0xFB8, el]:u64
000221a0: R1 := mem[R31 + 0x38, el]:u64
000221a8: R2 := mem[R19, el]:u64
000221b0: #14508 := 1 + ~R2 + R1
000221b4: NF := 63:63[#14508]
000221b7: VF := 63:63[R1] & 63:63[~R2] & ~63:63[#14508] | ~63:63[R1] &
          ~63:63[~R2] & 63:63[#14508]
000221ba: ZF := #14508 = 0
000221bd: CF := 63:63[R1] & 63:63[~R2] | 63:63[~R2] & ~63:63[#14508] |
          63:63[R1] & ~63:63[#14508]
000221c1: R1 := #14508
000221c7: R2 := 0
000221d3: #14513 := ~ZF <> 0
000221cd: when #14513 goto %000221cb
0003af49: goto %00028b67

000221cb:
000221d8: R30 := 0xE950
000221da: call @__stack_chk_fail with return %0003af4a

0003af4a:
0003af4b: call @www_authenticate with noreturn

00028b67:
00028b6e: R19 := mem[R31 + 0x10, el]:u64
00028b72: R20 := mem[R31 + 0x18, el]:u64
00028b7a: R21 := mem[R31 + 0x20, el]:u64
00028b84: R29 := mem[R31, el]:u64
00028b88: R30 := mem[R31 + 8, el]:u64
00028b8b: R31 := R31 + 0x40
00028b90: call R30 with noreturn

0003af4c: sub http_body_drop(http_body_drop_result)
0003b3e9: http_body_drop_result :: out u32 = low:32[R0]

0002048b:
00020492: #13596 := R31 - 0x40
00020497: mem := mem with [#13596, el]:u64 <- R29
0002049c: mem := mem with [#13596 + 8, el]:u64 <- R30
000204a0: R31 := #13596
000204a7: R29 := R31
000204af: #13601 := R31 + 0x10
000204b4: mem := mem with [#13601, el]:u64 <- R19
000204b9: mem := mem with [#13601 + 8, el]:u64 <- R20
000204c1: R19 := R1
000204c9: #13609 := R31 + 0x20
000204ce: mem := mem with [#13609, el]:u64 <- R21
000204d3: mem := mem with [#13609 + 8, el]:u64 <- R22
000204dc: R21 := 31:0[R0]
000204e8: #13614 := R1 = 0
000204e2: when #13614 goto %000204e0
0003af4d: goto %0002b4c3

000204e0:
000204ee: R20 := 0
000204f3: goto %000204f1

0002b4c3:
0002b4ca: R0 := mem[R1 + 0x1C, el]:u32
0002b4d5: #19039 := ~31:0[R0] = 0
0002b4cf: when #19039 goto %00020753
0003af4e: goto %0002b4d8

00020753:
00020757: R0 := 0
0002075f: R0 := mem[R0 + 8, el]:u64
00020767: mem := mem with [R31 + 0x30, el]:u64 <- R23
0002076c: intrinsic:x0 := 0x3E8
0002076e: call @intrinsic:software-breakpoint with return %00020770

00020770:
0003af4f: call @http_parse_basic with noreturn

0002b4d8:
0002b4de: R20 := R1
0003af50: goto %000204f1

000204f1:
000204fb: R0 := mem[R19 + 0x10, el]:u32
00020502: R3 := 0xCC
00020509: R1 := 0x63
00020510: #13616 := 0xFFFFFFFFFFFFFED0 + extend:64[31:0[R0]]
00020514: NF := 63:63[#13616]
00020517: VF := 31:31[R0] & ~63:63[#13616]
0002051a: ZF := #13616 = 0
0002051d: CF := 31:31[R0] | 31:31[R0] & ~63:63[#13616] | ~63:63[#13616]
00020528: R2 := low:32[extend:64[31:0[R0]] - 0x64]
00020554: #13618 := ~ZF <> 0
00020555: goto %0002054c

0002054c:
0002054e: when #13618 goto %0002052f
0002054f: goto %00020540

00020540:
00020541: NF := 0
00020544: ZF := 1
00020547: CF := 0
0002054a: VF := 0
00020551: goto %0002054d

0002052f:
00020530: #13619 := ~31:0[R3]
00020535: NF := 63:63[extend:64[31:0[R0]] + extend:64[#13619] + 1]
00020538: VF := 31:31[R0] & 31:31[#13619] & ~63:63[extend:64[31:0[R0]] +
          extend:64[#13619] + 1] | ~31:31[R0] & ~31:31[#13619] &
          63:63[extend:64[31:0[R0]] + extend:64[#13619] + 1]
0002053b: ZF := extend:64[31:0[R0]] + extend:64[#13619] + 1 = 0
0002053e: CF := 31:31[R0] & 31:31[#13619] | 31:31[#13619] &
          ~63:63[extend:64[31:0[R0]] + extend:64[#13619] + 1] | 31:31[R0] &
          ~63:63[extend:64[31:0[R0]] + extend:64[#13619] + 1]
00020550: goto %0002054d

0002054d:
00020582: #13621 := ~ZF <> 0
00020583: goto %0002057a

0002057a:
0002057c: when #13621 goto %0002055d
0002057d: goto %0002056e

0002056e:
0002056f: NF := 0
00020572: ZF := 0
00020575: CF := 0
00020578: VF := 0
0002057f: goto %0002057b

0002055d:
0002055e: #13622 := ~31:0[R1]
00020563: NF := 63:63[extend:64[31:0[R2]] + extend:64[#13622] + 1]
00020566: VF := 31:31[R2] & 31:31[#13622] & ~63:63[extend:64[31:0[R2]] +
          extend:64[#13622] + 1] | ~31:31[R2] & ~31:31[#13622] &
          63:63[extend:64[31:0[R2]] + extend:64[#13622] + 1]
00020569: ZF := extend:64[31:0[R2]] + extend:64[#13622] + 1 = 0
0002056c: CF := 31:31[R2] & 31:31[#13622] | 31:31[#13622] &
          ~63:63[extend:64[31:0[R2]] + extend:64[#13622] + 1] | 31:31[R2] &
          ~63:63[extend:64[31:0[R2]] + extend:64[#13622] + 1]
0002057e: goto %0002057b

0002057b:
0002058c: R0 := mem[R20 + 8, el]:u64
00020599: #13625 := (CF & ~ZF) <> 0
00020593: when #13625 goto %00020591
0003af51: goto %0002b4af

00020591:
0002059f: R1 := 0x12000
000205a6: R1 := R1 + 0x918
000205ae: mem := mem with [R31 + 0x30, el]:u64 <- R23
000205b3: R30 := 0xC9AC
000205b5: call @hlist_get with return %000205b7

000205b7:
000205c1: #13626 := R0 = 0
000205bb: when #13626 goto %000205b9
0003af52: goto %0002b47b

000205b9:
000205c9: R0 := mem[R20 + 8, el]:u64
000205cf: R1 := 0x12000
000205d5: R22 := 0x12000
000205dc: R1 := R1 + 0x928
000205e1: R30 := 0xCA20
000205e3: call @hlist_in with return %000205e5

000205e5:
000205ef: #13628 := ~31:0[R0] = 0
000205e9: when #13628 goto %000205e7
0003af53: goto %0002b453

0002b453:
0002b459: R0 := mem[R20 + 8, el]:u64
0002b45f: R22 := 0x12000
0002b466: R1 := R22 + 0x938
0002b46b: R30 := 0xCA34
0002b46d: call @hlist_in with return %0002b46f

0002b46f:
0002b478: #19033 := 31:0[R0] = 0
0002b472: when #19033 goto %0002b376
0003af54: goto %000205e7

0002b376:
0002b37c: R0 := mem[R20 + 8, el]:u64
0002b382: R2 := 0x12000
0002b388: R1 := 0x12000
0002b38f: R2 := R2 + 0x950
0002b396: R1 := R1 + 0x958
0002b39b: R30 := 0xCAD4
0002b39d: call @hlist_subcmp with return %0002b39f

0002b39f:
0002b3a8: #19020 := ~31:0[R0] = 0
0002b3a2: when #19020 goto %000205e7
0003af55: goto %0002b3ab

000205e7:
000205f7: R0 := mem[R20 + 8, el]:u64
000205fe: R23 := R22 + 0x938
00020606: R1 := R23
0002060b: R30 := 0xCA48
0002060d: call @hlist_in with return %0002060f

0002060f:
00020619: #13633 := 31:0[R0] = 0
00020613: when #13633 goto %00020611
0003af56: goto %0002b3ee

00020611:
0002061f: R23 := 0x12000
00020625: R20 := 0xFFFFFFFFFFFFFFFF
0002062a: goto %00020628

0002b3ee:
0002b3f4: R0 := mem[R20 + 8, el]:u64
0002b3fc: R1 := R23
0002b402: R20 := 1
0002b408: R23 := 0x12000
0002b40f: R2 := R23 + 0x968
0002b414: R30 := 0xCA64
0002b416: call @hlist_subcmp with return %0002b418

0002b418:
0002b422: #19029 := ~31:0[R0] = 0
0002b41c: when #19029 goto %0002b41a
0003af57: goto %0002b44d

0002b44d:
0002b451: R20 := 0xFFFFFFFFFFFFFFFF
0003af58: goto %00020628

00020628:
00020631: R0 := mem[R19 + 8, el]:u64
00020638: R2 := R23 + 0x968
0002063f: R1 := R22 + 0x938
00020644: R30 := 0xCA7C
00020646: call @hlist_subcmp with return %00020648

00020648:
00020652: #13635 := ~31:0[R0] = 0
0002064c: when #13635 goto %0002064a
0003af59: goto %0002b353

0002b47b:
0002b480: R2 := 0xA
0002b486: R1 := 0
0002b48c: R22 := 0x12000
0002b491: R30 := 0xC9C0
0002b493: call @strtoll with return %0002b495

0002b495:
0002b499: R23 := 0x12000
0002b4a1: R20 := R0
0002b4ac: #19037 := R0 = 0
0002b4a6: when #19037 goto %0002b3ab
0003af5a: goto %0002b41a

0002b3ab:
0002b3b1: R23 := mem[R31 + 0x30, el]:u64
0002b3b6: goto %0002b3b4

0002b41a:
0002b42a: R0 := mem[R19 + 8, el]:u64
0002b431: R2 := R23 + 0x968
0002b438: R1 := R22 + 0x938
0002b43d: R30 := 0xC9DC
0002b43f: call @hlist_subcmp with return %0002b441

0002b441:
0002b44a: #19031 := 31:0[R0] = 0
0002b444: when #19031 goto %0002b353
0003af5b: goto %0002064a

0002b353:
0002b357: R0 := 0x27000
0002b35f: R0 := mem[R0 + 0xF78, el]:u64
0002b368: R0 := mem[R0, el]:u32
0002b373: #19018 := ~31:0[R0] = 0
0002b36d: when #19018 goto %000206dd
0003af5c: goto %00020701

000206dd:
000206e3: R2 := R20
000206e9: R1 := 0x12000
000206f0: R0 := 1
000206f7: R1 := R1 + 0xA48
000206fc: R30 := 0xCB08
000206fe: call @__printf_chk with return %00020700

00020700:
00020703: goto %00020701

00020701:
0002070a: R2 := R20
00020713: R1 := 31:0[R21]
0002071c: R19 := mem[R31 + 0x10, el]:u64
00020720: R20 := mem[R31 + 0x18, el]:u64
00020727: R0 := 0xFFFFFFFFFFFFFFFF
00020730: R21 := mem[R31 + 0x20, el]:u64
00020734: R22 := mem[R31 + 0x28, el]:u64
0002073c: R23 := mem[R31 + 0x30, el]:u64
00020746: R29 := mem[R31, el]:u64
0002074a: R30 := mem[R31 + 8, el]:u64
0002074d: R31 := R31 + 0x40
00020751: call @sub_b518 with noreturn

0002064a:
00020658: R0 := 0x27000
00020660: R0 := mem[R0 + 0xF78, el]:u64
00020669: R0 := mem[R0, el]:u32
00020675: #13638 := ~31:0[R0] = 0
0002066f: when #13638 goto %0002066d
0003af5d: goto %00020693

0002066d:
0002067b: R1 := 0x12000
00020682: R0 := 1
00020689: R1 := R1 + 0xA28
0002068e: R30 := 0xCAF0
00020690: call @__printf_chk with return %00020692

00020692:
00020695: goto %00020693

00020693:
0002069d: R1 := 31:0[R21]
000206a4: R0 := 0xFFFFFFFFFFFFFFFF
000206ad: R19 := mem[R31 + 0x10, el]:u64
000206b1: R20 := mem[R31 + 0x18, el]:u64
000206ba: R21 := mem[R31 + 0x20, el]:u64
000206be: R22 := mem[R31 + 0x28, el]:u64
000206c6: R23 := mem[R31 + 0x30, el]:u64
000206d0: R29 := mem[R31, el]:u64
000206d4: R30 := mem[R31 + 8, el]:u64
000206d7: R31 := R31 + 0x40
000206db: call @chunked_data_send with noreturn

0002b4af:
0002b4b3: R1 := 0x12000
0002b4ba: R1 := R1 + 0x918
0002b4bf: R30 := 0xC980
0002b4c1: call @hlist_get with return %0002b3b4

0002b3b4:
0002b3bc: R0 := 1
0002b3c5: R19 := mem[R31 + 0x10, el]:u64
0002b3c9: R20 := mem[R31 + 0x18, el]:u64
0002b3d2: R21 := mem[R31 + 0x20, el]:u64
0002b3d6: R22 := mem[R31 + 0x28, el]:u64
0002b3e0: R29 := mem[R31, el]:u64
0002b3e4: R30 := mem[R31 + 8, el]:u64
0002b3e7: R31 := R31 + 0x40
0002b3ec: call R30 with noreturn

0003af5e: sub http_body_send(http_body_send_result)
0003b3ea: http_body_send_result :: out u32 = low:32[R0]

00020169:
00020170: #13505 := R31 - 0x30
00020175: mem := mem with [#13505, el]:u64 <- R29
0002017a: mem := mem with [#13505 + 8, el]:u64 <- R30
0002017e: R31 := #13505
00020185: R29 := R31
0002018e: R4 := mem[R3 + 0x1C, el]:u32
00020196: #13511 := R31 + 0x10
0002019b: mem := mem with [#13511, el]:u64 <- R19
000201a0: mem := mem with [#13511 + 8, el]:u64 <- R20
000201a7: #13513 := extend:64[31:0[R4]]
000201ab: NF := 63:63[#13513]
000201ae: VF := 31:31[R4] & ~63:63[#13513]
000201b1: ZF := #13513 = 0
000201b4: CF := 31:31[R4] | 31:31[R4] & ~63:63[#13513] | ~63:63[#13513]
000201cd: #13515 := ~ZF <> 0
000201ce: goto %000201c5

000201c5:
000201c7: when #13515 goto %000201bf
000201c8: goto %000201c2

000201c2:
000201c3: R19 := R3
000201ca: goto %000201c6

000201bf:
000201c0: R19 := R2
000201c9: goto %000201c6

000201c6:
000201d7: #13519 := R31 + 0x20
000201dc: mem := mem with [#13519, el]:u64 <- R21
000201e1: mem := mem with [#13519 + 8, el]:u64 <- R22
000201ea: R22 := 31:0[R0]
000201f3: R21 := 31:0[R1]
000201fb: R0 := R2
00020203: R1 := R3
00020208: R30 := 0xC7E8
0002020a: call @http_has_body with return %0002020c

0002020c:
00020216: #13533 := ~R0 = 0
00020210: when #13533 goto %0002020e
0003af5f: goto %0002b4fd

0002020e:
0002021e: R20 := R0
00020224: R2 := 0x12000
0002022c: R0 := mem[R19 + 8, el]:u64
00020233: R2 := R2 + 0x968
00020239: R1 := 0x12000
0002023f: R19 := 0x27000
00020246: R1 := R1 + 0x938
0002024b: R30 := 0xC858
0002024d: call @hlist_subcmp with return %0002024f

0002024f:
00020259: #13538 := 31:0[R0] = 0
00020253: when #13538 goto %00020251
0003af60: goto %0002b4e0

00020251:
00020261: R0 := mem[R19 + 0xF78, el]:u64
0002026a: R0 := mem[R0, el]:u32
00020276: #13541 := ~31:0[R0] = 0
00020270: when #13541 goto %0002026e
0003af61: goto %0002029c

0002026e:
0002027e: R2 := R20
00020284: R1 := 0x12000
0002028b: R0 := 1
00020292: R1 := R1 + 0x9F8
00020297: R30 := 0xC90C
00020299: call @__printf_chk with return %0002029b

0002029b:
0002029e: goto %0002029c

0002029c:
000202a6: R1 := 31:0[R21]
000202ae: R2 := R20
000202b7: R0 := 31:0[R22]
000202bc: R30 := 0xC8C4
000202be: call @sub_b518 with return %000202c0

000202c0:
000202c6: R1 := mem[R19 + 0xF78, el]:u64
000202cf: R19 := 31:0[R0]
000202d8: R0 := mem[R1, el]:u32
000202e4: #13559 := 31:0[R0] = 0
000202de: when #13559 goto %000202dc
0003af62: goto %00020375

00020375:
0002037a: #13575 := extend:64[31:0[R19]]
0002037e: NF := 63:63[#13575]
00020381: VF := 31:31[R19] & ~63:63[#13575]
00020384: ZF := #13575 = 0
00020387: CF := 31:31[R19] | 31:31[R19] & ~63:63[#13575] | ~63:63[#13575]
00020390: R2 := 0x12000
00020397: R2 := R2 + 0x9B0
0002039d: R1 := 0x12000
000203a4: R1 := R1 + 0x9C0
000203ab: R0 := 1
000203c1: #13577 := ~ZF <> 0
000203c2: goto %000203b9

000203b9:
000203bb: when #13577 goto %000203b3
000203bc: goto %000203b6

000203b6:
000203b7: R1 := R1
000203be: goto %000203ba

000203b3:
000203b4: R1 := R2
000203bd: goto %000203ba

000203ba:
000203c8: R30 := 0xC8F4
000203ca: call @__printf_chk with return %000203cc

000203cc:
000203ce: goto %000202dc

0002b4e0:
0002b4e6: R0 := mem[R19 + 0xF78, el]:u64
0002b4ef: R0 := mem[R0, el]:u32
0002b4fa: #19045 := ~31:0[R0] = 0
0002b4f4: when #19045 goto %000203d0
0003af63: goto %000203ec

000203d0:
000203d4: R1 := 0x12000
000203db: R0 := 1
000203e2: R1 := R1 + 0x9E0
000203e7: R30 := 0xC920
000203e9: call @__printf_chk with return %000203eb

000203eb:
000203ee: goto %000203ec

000203ec:
000203f6: R1 := 31:0[R21]
000203ff: R0 := 31:0[R22]
00020404: R30 := 0xC874
00020406: call @chunked_data_send with return %00020408

00020408:
0002040e: R1 := mem[R19 + 0xF78, el]:u64
00020417: R19 := 31:0[R0]
00020420: R0 := mem[R1, el]:u32
0002042b: #13589 := 31:0[R0] = 0
00020425: when #13589 goto %000202dc
0003af64: goto %0002042e

0002042e:
00020433: #13590 := extend:64[31:0[R19]]
00020437: NF := 63:63[#13590]
0002043a: VF := 31:31[R19] & ~63:63[#13590]
0002043d: ZF := #13590 = 0
00020440: CF := 31:31[R19] | 31:31[R19] & ~63:63[#13590] | ~63:63[#13590]
00020449: R2 := 0x12000
00020450: R2 := R2 + 0x970
00020456: R1 := 0x12000
0002045d: R1 := R1 + 0x988
00020464: R0 := 1
0002047a: #13592 := ~ZF <> 0
0002047b: goto %00020472

00020472:
00020474: when #13592 goto %0002046c
00020475: goto %0002046f

0002046f:
00020470: R1 := R1
00020477: goto %00020473

0002046c:
0002046d: R1 := R2
00020476: goto %00020473

00020473:
00020481: R30 := 0xC8A4
00020483: call @__printf_chk with return %00020485

00020485:
00020487: goto %000202dc

0002b4fd:
0002b501: R0 := 0x27000
0002b508: R19 := 1
0002b510: R0 := mem[R0 + 0xF78, el]:u64
0002b519: R0 := mem[R0, el]:u32
0002b524: #19048 := ~31:0[R0] = 0
0002b51e: when #19048 goto %0002031f
0003af65: goto %000202dc

0002031f:
00020326: R0 := 31:0[R19]
0002032c: R1 := 0x12000
00020333: R1 := R1 + 0xA18
00020338: R30 := 0xC824
0002033a: call @__printf_chk with return %0002033c

0002033c:
00020343: R0 := 31:0[R19]
0002034c: R19 := mem[R31 + 0x10, el]:u64
00020350: R20 := mem[R31 + 0x18, el]:u64
00020359: R21 := mem[R31 + 0x20, el]:u64
0002035d: R22 := mem[R31 + 0x28, el]:u64
00020367: R29 := mem[R31, el]:u64
0002036b: R30 := mem[R31 + 8, el]:u64
0002036e: R31 := R31 + 0x30
00020373: call R30 with noreturn

000202dc:
000202ed: R0 := 31:0[R19]
000202f6: R19 := mem[R31 + 0x10, el]:u64
000202fa: R20 := mem[R31 + 0x18, el]:u64
00020303: R21 := mem[R31 + 0x20, el]:u64
00020307: R22 := mem[R31 + 0x28, el]:u64
00020311: R29 := mem[R31, el]:u64
00020315: R30 := mem[R31 + 8, el]:u64
00020318: R31 := R31 + 0x30
0002031d: call R30 with noreturn

0003af66: sub http_has_body(http_has_body_result)
0003b3eb: http_has_body_result :: out u32 = low:32[R0]

0001fe2c:
0001fe33: #13429 := R31 - 0x30
0001fe38: mem := mem with [#13429, el]:u64 <- R29
0001fe3d: mem := mem with [#13429 + 8, el]:u64 <- R30
0001fe41: R31 := #13429
0001fe48: R29 := R31
0001fe50: #13434 := R31 + 0x10
0001fe55: mem := mem with [#13434, el]:u64 <- R19
0001fe5a: mem := mem with [#13434 + 8, el]:u64 <- R20
0001fe62: R19 := R0
0001fe6a: R20 := R1
0001fe72: mem := mem with [R31 + 0x20, el]:u64 <- R21
0001fe7e: #13442 := R1 = 0
0001fe78: when #13442 goto %0001fe76
0003af67: goto %0002b6a9

0002b6a9:
0002b6b0: R0 := mem[R1 + 0x1C, el]:u32
0002b6bb: #19082 := 31:0[R0] = 0
0002b6b5: when #19082 goto %0001fe99
0003af68: goto %0001fe76

0001fe76:
0001fe86: #13446 := 1 + ~R19 + R20
0001fe8a: NF := 63:63[#13446]
0001fe8d: VF := 63:63[R20] & 63:63[~R19] & ~63:63[#13446] | ~63:63[R20] &
          ~63:63[~R19] & 63:63[#13446]
0001fe90: ZF := #13446 = 0
0001fe93: CF := 63:63[R20] & 63:63[~R19] | 63:63[~R19] & ~63:63[#13446] |
          63:63[R20] & ~63:63[#13446]
0001fea1: #13451 := ZF
0001fe9b: when #13451 goto %0001fe99
0003af69: goto %0002b680

0001fe99:
0001fea9: R21 := R20
0001feb5: #13455 := R19 = 0
0001feaf: when #13455 goto %0001fead
0003af6a: goto %0002b643

0002b643:
0002b64a: R0 := mem[R19, el]:u32
0002b655: #19072 := 31:0[R0] = 0
0002b64f: when #19072 goto %0001fead
0003af6b: goto %0002b658

0002b658:
0002b65e: R1 := mem[R19 + 0x28, el]:u64
0002b664: R0 := 0x12000
0002b66b: R0 := R0 + 0x908
0002b670: R30 := 0xC6A4
0002b672: call @strcasecmp with return %0002b674

0002b674:
0002b67d: #19074 := ~31:0[R0] = 0
0002b677: when #19074 goto %0001fead
0003af6c: goto %0002b54d

0001fead:
0001febe: R0 := mem[R20 + 0x10, el]:u32
0001fec5: R3 := 0xCC
0001fecc: R1 := 0x63
0001fed3: #13457 := 0xFFFFFFFFFFFFFED0 + extend:64[31:0[R0]]
0001fed7: NF := 63:63[#13457]
0001feda: VF := 31:31[R0] & ~63:63[#13457]
0001fedd: ZF := #13457 = 0
0001fee0: CF := 31:31[R0] | 31:31[R0] & ~63:63[#13457] | ~63:63[#13457]
0001feeb: R2 := low:32[extend:64[31:0[R0]] - 0x64]
0001ff17: #13459 := ~ZF <> 0
0001ff18: goto %0001ff0f

0001ff0f:
0001ff11: when #13459 goto %0001fef2
0001ff12: goto %0001ff03

0001ff03:
0001ff04: NF := 0
0001ff07: ZF := 1
0001ff0a: CF := 0
0001ff0d: VF := 0
0001ff14: goto %0001ff10

0001fef2:
0001fef3: #13460 := ~31:0[R3]
0001fef8: NF := 63:63[extend:64[31:0[R0]] + extend:64[#13460] + 1]
0001fefb: VF := 31:31[R0] & 31:31[#13460] & ~63:63[extend:64[31:0[R0]] +
          extend:64[#13460] + 1] | ~31:31[R0] & ~31:31[#13460] &
          63:63[extend:64[31:0[R0]] + extend:64[#13460] + 1]
0001fefe: ZF := extend:64[31:0[R0]] + extend:64[#13460] + 1 = 0
0001ff01: CF := 31:31[R0] & 31:31[#13460] | 31:31[#13460] &
          ~63:63[extend:64[31:0[R0]] + extend:64[#13460] + 1] | 31:31[R0] &
          ~63:63[extend:64[31:0[R0]] + extend:64[#13460] + 1]
0001ff13: goto %0001ff10

0001ff10:
0001ff45: #13462 := ~ZF <> 0
0001ff46: goto %0001ff3d

0001ff3d:
0001ff3f: when #13462 goto %0001ff20
0001ff40: goto %0001ff31

0001ff31:
0001ff32: NF := 0
0001ff35: ZF := 0
0001ff38: CF := 0
0001ff3b: VF := 0
0001ff42: goto %0001ff3e

0001ff20:
0001ff21: #13463 := ~31:0[R1]
0001ff26: NF := 63:63[extend:64[31:0[R2]] + extend:64[#13463] + 1]
0001ff29: VF := 31:31[R2] & 31:31[#13463] & ~63:63[extend:64[31:0[R2]] +
          extend:64[#13463] + 1] | ~31:31[R2] & ~31:31[#13463] &
          63:63[extend:64[31:0[R2]] + extend:64[#13463] + 1]
0001ff2c: ZF := extend:64[31:0[R2]] + extend:64[#13463] + 1 = 0
0001ff2f: CF := 31:31[R2] & 31:31[#13463] | 31:31[#13463] &
          ~63:63[extend:64[31:0[R2]] + extend:64[#13463] + 1] | 31:31[R2] &
          ~63:63[extend:64[31:0[R2]] + extend:64[#13463] + 1]
0001ff41: goto %0001ff3e

0001ff3e:
0001ff54: #13465 := (CF & ~ZF) <> 0
0001ff4e: when #13465 goto %0001ff4c
0003af6d: goto %0002b623

0002b623:
0002b629: R0 := mem[R21 + 8, el]:u64
0002b62f: R1 := 0x12000
0002b636: R1 := R1 + 0x918
0002b63b: R30 := 0xC71C
0002b63d: call @hlist_get with return %0002b63f

0002b63f:
0002b641: goto %0002000a

0002b680:
0002b689: #19075 := R19 = 0
0002b683: when #19075 goto %00020157
0003af6e: goto %0002b68c

00020157:
0002015d: R0 := mem[R19 + 8, el]:u64
00020162: intrinsic:x0 := 0x3E8
00020165: call @intrinsic:software-breakpoint with return %00020167

00020167:
0003af6f: call @http_body_send with noreturn

0002b68c:
0002b693: R0 := mem[R19, el]:u32
0002b69e: #19077 := ~31:0[R0] = 0
0002b698: when #19077 goto %0002b577
0003af70: goto %0002b6a1

0002b577:
0002b57d: R20 := mem[R19 + 0x28, el]:u64
0002b583: R0 := 0x12000
0002b58a: R0 := R0 + 0x910
0002b592: R1 := R20
0002b597: R30 := 0xC6D0
0002b599: call @strcasecmp with return %0002b59b

0002b59b:
0002b5a4: #19061 := ~31:0[R0] = 0
0002b59e: when #19061 goto %0002b527
0003af71: goto %0002b5a7

0002b527:
0002b52d: R1 := R20
0002b533: R0 := 0x12000
0002b53b: R21 := R19
0002b542: R0 := R0 + 0x908
0002b547: R30 := 0xC760
0002b549: call @strcasecmp with return %0002b54b

0002b54b:
0002b555: #19055 := 31:0[R0] = 0
0002b54f: when #19055 goto %0002b54d
0003af72: goto %0002b5cf

0002b5cf:
0002b5d1: goto %0001ff4c

0002b54d:
0002b55d: R0 := mem[R21 + 8, el]:u64
0002b563: R1 := 0x12000
0002b56a: R1 := R1 + 0x918
0002b56f: R30 := 0xC6B8
0002b571: call @hlist_get with return %0002b573

0002b573:
0002b575: goto %0002000a

0002b5a7:
0002b5ad: R21 := R19
0002b5b3: R1 := 0x12000
0002b5ba: R1 := R1 + 0x918
0002b5c2: R0 := mem[R21 + 8, el]:u64
0002b5c7: R30 := 0xC6E8
0002b5c9: call @hlist_get with return %0002b5cb

0002b5cb:
0002b5cd: goto %0002000a

0002b6a1:
0002b6a7: R21 := R19
0003af73: goto %0001ff4c

0001ff4c:
0001ff5c: R0 := mem[R21 + 8, el]:u64
0001ff62: R1 := 0x12000
0001ff69: R1 := R1 + 0x918
0001ff6e: R30 := 0xC61C
0001ff70: call @hlist_get with return %0001ff72

0001ff72:
0001ff7c: #13467 := ~R0 = 0
0001ff76: when #13467 goto %0001ff74
0003af74: goto %0002b5d3

0001ff74:
0001ff82: R1 := 0
0001ff89: R2 := 0xA
0001ff8e: R30 := 0xC72C
0001ff91: call @strtoll with return %0001ff93

0001ff93:
0001ff98: #13468 := 1 + R0
0001ff9c: NF := 63:63[#13468]
0001ff9f: VF := ~63:63[R0] & 63:63[#13468]
0001ffa2: ZF := #13468 = 0
0001ffa5: CF := 63:63[R0] & ~63:63[#13468]
0001ffbf: #13470 := ~ZF <> 0
0001ffc0: goto %0001ffb7

0001ffb7:
0001ffb9: when #13470 goto %0001ffb0
0001ffba: goto %0001ffb4

0001ffb4:
0001ffb5: R1 := 1
0001ffbc: goto %0001ffb8

0001ffb0:
0001ffb1: R1 := 0
0001ffbb: goto %0001ffb8

0001ffb8:
0001ffc8: #13471 := extend:64[31:0[R1]]
0001ffcc: NF := 63:63[#13471]
0001ffcf: VF := 31:31[R1] & ~63:63[#13471]
0001ffd2: ZF := #13471 = 0
0001ffd5: CF := 31:31[R1] | 31:31[R1] & ~63:63[#13471] | ~63:63[#13471]
00020004: #13473 := ~ZF <> 0
00020005: goto %0001fffc

0001fffc:
0001fffe: when #13473 goto %0001ffdf
0001ffff: goto %0001fff0

0001fff0:
0001fff1: NF := 0
0001fff4: ZF := 0
0001fff7: CF := 0
0001fffa: VF := 0
00020001: goto %0001fffd

0001ffdf:
0001ffe0: #13474 := ~R21
0001ffe5: NF := 63:63[R19 + #13474 + 1]
0001ffe8: VF := 63:63[R19] & 63:63[#13474] & ~63:63[R19 + #13474 + 1] |
          ~63:63[R19] & ~63:63[#13474] & 63:63[R19 + #13474 + 1]
0001ffeb: ZF := R19 + #13474 + 1 = 0
0001ffee: CF := 63:63[R19] & 63:63[#13474] | 63:63[#13474] & ~63:63[R19 +
          #13474 + 1] | 63:63[R19] & ~63:63[R19 + #13474 + 1]
00020000: goto %0001fffd

0001fffd:
00020012: #13476 := ZF
0002000c: when #13476 goto %0002000a
0003af75: goto %00020045

00020045:
00020047: goto %0002001a

0002b5d3:
0002b5d9: R0 := mem[R21 + 8, el]:u64
0002b5df: R1 := 0x12000
0002b5e6: R1 := R1 + 0x928
0002b5eb: R30 := 0xC630
0002b5ed: call @hlist_in with return %0002b5ef

0002b5ef:
0002b5f8: #19067 := ~31:0[R0] = 0
0002b5f2: when #19067 goto %00020049
0003af76: goto %0002b5fb

00020049:
0002004d: R20 := 0x12000
00020052: goto %00020050

0002b5fb:
0002b601: R0 := mem[R21 + 8, el]:u64
0002b607: R20 := 0x12000
0002b60e: R1 := R20 + 0x938
0002b613: R30 := 0xC644
0002b615: call @hlist_in with return %0002b617

0002b617:
0002b620: #19069 := 31:0[R0] = 0
0002b61a: when #19069 goto %0002011e
0003af77: goto %00020050

0002011e:
00020124: R0 := mem[R21 + 8, el]:u64
0002012a: R2 := 0x12000
00020130: R1 := 0x12000
00020137: R2 := R2 + 0x950
0002013e: R1 := R1 + 0x958
00020143: R30 := 0xC7A4
00020145: call @hlist_subcmp with return %00020147

00020147:
00020150: #13500 := ~31:0[R0] = 0
0002014a: when #13500 goto %00020050
0003af78: goto %00020153

00020153:
00020155: goto %0002000a

00020050:
00020059: R0 := mem[R21 + 8, el]:u64
00020060: R20 := R20 + 0x938
00020068: R1 := R20
0002006d: R30 := 0xC658
0002006f: call @hlist_in with return %00020071

00020071:
0002007b: #13484 := ~31:0[R0] = 0
00020075: when #13484 goto %00020073
0003af79: goto %000200bd

00020073:
00020083: R0 := mem[R21 + 8, el]:u64
0002008b: R1 := R20
00020091: R2 := 0x12000
00020098: R2 := R2 + 0x968
0002009d: R30 := 0xC77C
0002009f: call @hlist_subcmp with return %000200a1

000200a1:
000200a8: R1 := 31:0[R0]
000200ae: R0 := 1
000200b9: #13492 := ~31:0[R1] = 0
000200b3: when #13492 goto %0002001a
0003af7a: goto %000200bc

000200bc:
000200bf: goto %000200bd

000200bd:
000200c5: R1 := 1
000200cc: #13493 := extend:64[31:0[R1]]
000200d0: NF := 63:63[#13493]
000200d3: VF := 31:31[R1] & ~63:63[#13493]
000200d6: ZF := #13493 = 0
000200d9: CF := 31:31[R1] | 31:31[R1] & ~63:63[#13493] | ~63:63[#13493]
00020108: #13495 := ~ZF <> 0
00020109: goto %00020100

00020100:
00020102: when #13495 goto %000200e3
00020103: goto %000200f4

000200f4:
000200f5: NF := 0
000200f8: ZF := 0
000200fb: CF := 0
000200fe: VF := 0
00020105: goto %00020101

000200e3:
000200e4: #13496 := ~R21
000200e9: NF := 63:63[R19 + #13496 + 1]
000200ec: VF := 63:63[R19] & 63:63[#13496] & ~63:63[R19 + #13496 + 1] |
          ~63:63[R19] & ~63:63[#13496] & 63:63[R19 + #13496 + 1]
000200ef: ZF := R19 + #13496 + 1 = 0
000200f2: CF := 63:63[R19] & 63:63[#13496] | 63:63[#13496] & ~63:63[R19 +
          #13496 + 1] | 63:63[R19] & ~63:63[R19 + #13496 + 1]
00020104: goto %00020101

00020101:
00020110: R0 := 0xFFFFFFFFFFFFFFFF
0002011b: #13498 := ~ZF <> 0
00020115: when #13498 goto %0002001a
0003af7b: goto %0002000a

0002000a:
00020018: R0 := 0
0003af7c: goto %0002001a

0002001a:
00020021: R19 := mem[R31 + 0x10, el]:u64
00020025: R20 := mem[R31 + 0x18, el]:u64
0002002d: R21 := mem[R31 + 0x20, el]:u64
00020037: R29 := mem[R31, el]:u64
0002003b: R30 := mem[R31 + 8, el]:u64
0002003e: R31 := R31 + 0x30
00020043: call R30 with noreturn

0003af7d: sub http_parse_basic(http_parse_basic_result)
0003b3ec: http_parse_basic_result :: out u32 = low:32[R0]

00020772:
00020779: #13663 := R31 - 0x30
0002077e: mem := mem with [#13663, el]:u64 <- R29
00020783: mem := mem with [#13663 + 8, el]:u64 <- R30
00020787: R31 := #13663
0002078e: R29 := R31
00020796: #13668 := R31 + 0x10
0002079b: mem := mem with [#13668, el]:u64 <- R19
000207a0: mem := mem with [#13668 + 8, el]:u64 <- R20
000207a8: R20 := R2
000207b0: R19 := R0
000207b6: R2 := 0x12000
000207bd: R2 := R2 + 0xA60
000207c5: #13679 := R31 + 0x20
000207ca: mem := mem with [#13679, el]:u64 <- R21
000207cf: mem := mem with [#13679 + 8, el]:u64 <- R22
000207d7: R21 := R1
000207dc: R30 := 0xCB48
000207de: call @hlist_subcmp with return %000207e0

000207e0:
000207ea: #13684 := ~31:0[R0] = 0
000207e4: when #13684 goto %000207e2
0003af7e: goto %000208fc

000207e2:
000207f2: R1 := R21
000207fa: R0 := R19
000207ff: R30 := 0xCB68
00020801: call @hlist_get with return %00020803

00020803:
00020809: R19 := R0
0002080e: R30 := 0xCB70
00020810: call @strlen with return %00020812

00020812:
00020817: R0 := R0 + 1
0002081c: R30 := 0xCB78
0002081e: call @new with return %00020820

00020820:
00020826: R21 := R0
0002082e: R0 := R19
00020833: R30 := 0xCB84
00020835: call @strlen with return %00020837

00020837:
0002083c: R2 := R19 + 1
00020842: R3 := 5
00020847: goto %00020845

00020845:
0002084e: R1 := R2 + R3
00020856: #13706 := 1 + ~R3 + R0
0002085a: NF := 63:63[#13706]
0002085d: VF := 63:63[R0] & 63:63[~R3] & ~63:63[#13706] | ~63:63[R0] &
          ~63:63[~R3] & 63:63[#13706]
00020860: ZF := #13706 = 0
00020863: CF := 63:63[R0] & 63:63[~R3] | 63:63[~R3] & ~63:63[#13706] |
          63:63[R0] & ~63:63[#13706]
00020872: #13711 := (CF & ~ZF) <> 0
0002086c: when #13711 goto %0002086a
0003af7f: goto %0002b34b

0002b34b:
0002b351: R1 := R19 + R3
0003af80: goto %000208a2

0002086a:
00020879: R3 := R3 + 1
00020881: #13712 := R3
00020887: R4 := pad:32[mem[R19 + #13712]]
0002088e: #13713 := 0xFFFFFFFFFFFFFFE0 + extend:64[31:0[R4]]
00020892: NF := 63:63[#13713]
00020895: VF := 31:31[R4] & ~63:63[#13713]
00020898: ZF := #13713 = 0
0002089b: CF := 31:31[R4] | 31:31[R4] & ~63:63[#13713] | ~63:63[#13713]
000208aa: #13715 := ~ZF <> 0
000208a4: when #13715 goto %000208a2
0003af81: goto %00020845

000208a2:
000208b2: R0 := R21
000208b7: R30 := 0xCBB8
000208b9: call @from_base64 with return %000208bb

000208bb:
000208c1: R0 := R21
000208c8: R1 := 0x3A
000208cd: R30 := 0xCBC4
000208cf: call @strchr with return %000208d1

000208d1:
000208d7: R19 := R0
000208e3: #13725 := R0 = 0
000208dd: when #13725 goto %000208db
0003af82: goto %0002b0ce

000208db:
000208eb: R0 := R21
000208f0: R30 := 0xCCF4
000208f2: call @free with return %000208f4

000208f4:
000208f9: R0 := 0xFFFFFFFFFFFFFFFF
000208fe: goto %000208fc

0002b0ce:
0002b0d4: mem := mem with [R0] <- 0
0002b0db: R1 := 0x5C
0002b0e3: R0 := R21
0002b0e8: R30 := 0xCBDC
0002b0ea: call @strchr with return %0002b0ec

0002b0ec:
0002b0f2: R22 := R0
0002b0fe: #18955 := R0 = 0
0002b0f8: when #18955 goto %0002b0f6
0003af83: goto %0002b2fe

0002b0f6:
0002b10a: #18956 := R20 = 0
0002b104: when #18956 goto %0002b102
0003af84: goto %0002b2dd

0002b2dd:
0002b2e3: R1 := R21
0002b2eb: R0 := R20
0002b2f1: R2 := 0x32
0002b2f6: R30 := 0xCCA0
0002b2f8: call @strlcpy with return %0002b2fa

0002b2fa:
0002b2fc: goto %0002b102

0002b2fe:
0002b304: mem := mem with [R0] <- 0
0002b30f: #19003 := R20 = 0
0002b309: when #19003 goto %0002b102
0003af85: goto %0002b312

0002b312:
0002b316: R2 := 0x32
0002b31e: R1 := R21
0002b326: R0 := R20 + R2
0002b32b: R30 := 0xCBFC
0002b32d: call @strlcpy with return %0002b32f

0002b32f:
0002b334: R1 := R22 + 1
0002b33c: R0 := R20
0002b342: R2 := 0x32
0002b347: R30 := 0xCC0C
0002b349: call @strlcpy with return %0002b102

0002b102:
0002b113: R0 := mem[R20 + 0x12C, el]:u32
0002b11f: #18958 := ~31:0[R0] = 0
0002b119: when #18958 goto %0002b117
0003af86: goto %0002b2c8

0002b117:
0002b126: R2 := R19 + 1
0002b12d: R1 := R20 + 0x32
0002b135: R0 := R20
0002b13a: R30 := 0xCC50
0002b13c: call @ntlm2_hash_password with return %0002b13e

0002b13e:
0002b148: #18962 := ~R0 = 0
0002b142: when #18962 goto %0002b140
0003af87: goto %0002b2c1

0002b140:
0002b151: R2 := mem[R0, el]:u64
0002b155: R3 := mem[R0 + 8, el]:u64
0002b15c: R1 := R20 + 0xFA
0002b164: #18967 := R1
0002b169: mem := mem with [#18967, el]:u64 <- R2
0002b16e: mem := mem with [#18967 + 8, el]:u64 <- R3
0002b173: R30 := 0xCCE8
0002b175: call @free with return %0002b177

0002b177:
0002b17a: goto %0002b178

0002b2c1:
0002b2c4: R30 := 0xCC58
0002b2c6: call @free with return %0002b178

0002b178:
0002b182: R0 := mem[R20 + 0x130, el]:u32
0002b18e: #18970 := 31:0[R0] = 0
0002b188: when #18970 goto %0002b186
0003af88: goto %0002b251

0002b2c8:
0002b2cf: R0 := mem[R20 + 0x130, el]:u32
0002b2da: #18996 := ~31:0[R0] = 0
0002b2d4: when #18996 goto %0002b251
0003af89: goto %0002b186

0002b251:
0002b256: R0 := R19 + 1
0002b25b: R30 := 0xCC68
0002b25d: call @ntlm_hash_nt_password with return %0002b25f

0002b25f:
0002b269: #18986 := ~R0 = 0
0002b263: when #18986 goto %0002b261
0003af8a: goto %0002b2ba

0002b261:
0002b272: R2 := mem[R0, el]:u64
0002b276: R3 := mem[R0 + 8, el]:u64
0002b27e: #18991 := R20 + 0xC8
0002b283: mem := mem with [#18991, el]:u64 <- R2
0002b288: mem := mem with [#18991 + 8, el]:u64 <- R3
0002b290: R1 := mem[R0 + 0xD, el]:u64
0002b298: mem := mem with [R20 + 0xD5, el]:u64 <- R1
0002b29d: R30 := 0xCCB8
0002b29f: call @free with return %0002b2a1

0002b2a1:
0002b2a4: goto %0002b2a2

0002b2ba:
0002b2bd: R30 := 0xCC70
0002b2bf: call @free with return %0002b2a2

0002b2a2:
0002b2ac: R0 := mem[R20 + 0x134, el]:u32
0002b2b7: #18994 := 31:0[R0] = 0
0002b2b1: when #18994 goto %0002b1fd
0003af8b: goto %0002b19b

0002b186:
0002b197: R0 := mem[R20 + 0x134, el]:u32
0002b1a3: #18972 := ~31:0[R0] = 0
0002b19d: when #18972 goto %0002b19b
0003af8c: goto %0002b1fd

0002b19b:
0002b1aa: R0 := R19 + 1
0002b1af: R30 := 0xCC80
0002b1b1: call @ntlm_hash_lm_password with return %0002b1b3

0002b1b3:
0002b1bd: #18973 := ~R0 = 0
0002b1b7: when #18973 goto %0002b1b5
0003af8d: goto %0002b246

0002b1b5:
0002b1c4: R1 := R20 + 0x96
0002b1cd: R2 := mem[R0, el]:u64
0002b1d1: R3 := mem[R0 + 8, el]:u64
0002b1d9: #18978 := R1
0002b1de: mem := mem with [#18978, el]:u64 <- R2
0002b1e3: mem := mem with [#18978 + 8, el]:u64 <- R3
0002b1eb: R1 := mem[R0 + 0xD, el]:u64
0002b1f3: mem := mem with [R20 + 0xA3, el]:u64 <- R1
0002b1f8: R30 := 0xCCD4
0002b1fa: call @free with return %0002b1fc

0002b1fc:
0002b1ff: goto %0002b1fd

0002b246:
0002b249: R30 := 0xCC88
0002b24b: call @free with return %0002b24d

0002b24d:
0002b24f: goto %0002b1fd

0002b1fd:
0002b206: R0 := R21
0002b20b: R30 := 0xCC2C
0002b20d: call @free with return %0002b20f

0002b20f:
0002b214: R0 := 1
0002b21d: R19 := mem[R31 + 0x10, el]:u64
0002b221: R20 := mem[R31 + 0x18, el]:u64
0002b22a: R21 := mem[R31 + 0x20, el]:u64
0002b22e: R22 := mem[R31 + 0x28, el]:u64
0002b238: R29 := mem[R31, el]:u64
0002b23c: R30 := mem[R31 + 8, el]:u64
0002b23f: R31 := R31 + 0x30
0002b244: call R30 with noreturn

000208fc:
00020906: R19 := mem[R31 + 0x10, el]:u64
0002090a: R20 := mem[R31 + 0x18, el]:u64
00020913: R21 := mem[R31 + 0x20, el]:u64
00020917: R22 := mem[R31 + 0x28, el]:u64
00020921: R29 := mem[R31, el]:u64
00020925: R30 := mem[R31 + 8, el]:u64
00020928: R31 := R31 + 0x30
0002092d: call R30 with noreturn

0003af8e: sub inet_ntoa(inet_ntoa_result)
0003b3ed: inet_ntoa_result :: out u32 = low:32[R0]

0001610d:
00032a17: R16 := 0x27000
00032a1f: R17 := mem[R16 + 0xCC0, el]:u64
00032a26: R16 := R16 + 0xCC0
00032a2b: call R17 with noreturn

0003af8f: sub is_http_header(is_http_header_result)
0003b3ee: is_http_header_result :: out u32 = low:32[R0]

0001eaa9:
0001eab0: #12701 := R31 - 0x20
0001eab5: mem := mem with [#12701, el]:u64 <- R29
0001eaba: mem := mem with [#12701 + 8, el]:u64 <- R30
0001eabe: R31 := #12701
0001eac4: R1 := 0x12000
0001eacb: R1 := R1 + 0x728
0001ead2: R29 := R31
0001eada: #12706 := R31 + 0x10
0001eadf: mem := mem with [#12706, el]:u64 <- R19
0001eae4: mem := mem with [#12706 + 8, el]:u64 <- R20
0001eaec: R20 := R0
0001eaf1: R30 := 0xB7B4
0001eaf3: call @strcspn with return %0001eaf5

0001eaf5:
0001eafb: R19 := R0
0001eb03: R0 := R20
0001eb08: R30 := 0xB7C0
0001eb0a: call @strlen with return %0001eb0c

0001eb0c:
0001eb12: #12720 := 1 + ~R0 + R19
0001eb16: NF := 63:63[#12720]
0001eb19: VF := 63:63[R19] & 63:63[~R0] & ~63:63[#12720] | ~63:63[R19] &
          ~63:63[~R0] & 63:63[#12720]
0001eb1c: ZF := #12720 = 0
0001eb1f: CF := 63:63[R19] & 63:63[~R0] | 63:63[~R0] & ~63:63[#12720] |
          63:63[R19] & ~63:63[#12720]
0001eb39: #12725 := ZF
0001eb3a: goto %0001eb31

0001eb31:
0001eb33: when #12725 goto %0001eb2a
0001eb34: goto %0001eb2e

0001eb2e:
0001eb2f: R0 := 1
0001eb36: goto %0001eb32

0001eb2a:
0001eb2b: R0 := 0
0001eb35: goto %0001eb32

0001eb32:
0001eb44: R19 := mem[R31 + 0x10, el]:u64
0001eb48: R20 := mem[R31 + 0x18, el]:u64
0001eb52: R29 := mem[R31, el]:u64
0001eb56: R30 := mem[R31 + 8, el]:u64
0001eb59: R31 := R31 + 0x20
0001eb5e: call R30 with noreturn

0003af90: sub listen(listen_fd, listen_n, listen_result)
0003b3ef: listen_fd :: in u32 = low:32[R0]
0003b3f0: listen_n :: in u32 = low:32[R1]
0003b3f1: listen_result :: out u32 = low:32[R0]

0001764e:
00032968: R16 := 0x27000
00032970: R17 := mem[R16 + 0xC88, el]:u64
00032977: R16 := R16 + 0xC88
0003297c: call R17 with noreturn

0003af91: sub listen_add(listen_add_result)
0003b3f2: listen_add_result :: out u32 = low:32[R0]

00022bf4:
00022bfb: #14833 := R31 - 0x60
00022c00: mem := mem with [#14833, el]:u64 <- R29
00022c05: mem := mem with [#14833 + 8, el]:u64 <- R30
00022c09: R31 := #14833
00022c10: R29 := R31
00022c18: #14838 := R31 + 0x20
00022c1d: mem := mem with [#14838, el]:u64 <- R21
00022c22: mem := mem with [#14838 + 8, el]:u64 <- R22
00022c28: R22 := 0x27000
00022c30: #14843 := R31 + 0x10
00022c35: mem := mem with [#14843, el]:u64 <- R19
00022c3a: mem := mem with [#14843 + 8, el]:u64 <- R20
00022c42: R19 := R2
00022c4a: R2 := mem[R22 + 0xFB8, el]:u64
00022c52: #14852 := R31 + 0x30
00022c57: mem := mem with [#14852, el]:u64 <- R23
00022c5c: mem := mem with [#14852 + 8, el]:u64 <- R24
00022c64: R23 := R1
00022c6c: R1 := mem[R2, el]:u64
00022c74: mem := mem with [R31 + 0x58, el]:u64 <- R1
00022c7a: R1 := 0
00022c82: R24 := R0
00022c8a: R0 := R19
00022c92: mem := mem with [R31 + 0x40, el]:u64 <- R25
00022c9b: R25 := 31:0[R3]
00022ca0: R30 := 0x106A4
00022ca2: call @strlen with return %00022ca4

00022ca4:
00022caa: R20 := R0
00022cb2: R20 := low:32[extend:64[31:0[R20]] - 1]
00022cba: R0 := R19
00022cc0: R1 := 0x12000
00022cc7: R1 := R1 + 0x728
00022ccc: R30 := 0x106BC
00022cce: call @strcspn with return %00022cd0

00022cd0:
00022cd6: #14876 := 1 + extend:64[~31:0[R0]] + extend:64[31:0[R20]]
00022cda: NF := 63:63[#14876]
00022cdd: VF := 31:31[~31:0[R0]] & 31:31[R20] & ~63:63[#14876] |
          ~31:31[~31:0[R0]] & ~31:31[R20] & 63:63[#14876]
00022ce0: ZF := #14876 = 0
00022ce3: CF := 31:31[~31:0[R0]] & 31:31[R20] | 31:31[R20] & ~63:63[#14876] |
          31:31[~31:0[R0]] & ~63:63[#14876]
00022cf4: #14878 := (NF = VF & ~ZF) <> 0
00022cee: when #14878 goto %00022cec
0003af92: goto %00027055

00022cec:
00022cfd: R2 := 31:0[R0]
00022d04: R1 := 0
00022d0c: R21 := R0
00022d14: R0 := R19
00022d19: R30 := 0x107AC
00022d1b: call @substr with return %00022d1d

00022d1d:
00022d23: R20 := R0
00022d2b: R1 := R20
00022d32: R0 := R31 + 0x50
00022d37: R30 := 0x107BC
00022d39: call @so_resolv with return %00022d3b

00022d3b:
00022d45: #14894 := 31:0[R0] = 0
00022d3f: when #14894 goto %00022d3d
0003af93: goto %00022d80

00022d3d:
00022d4d: R3 := R20
00022d53: R2 := 0x13000
00022d5a: R2 := R2 + 0xEB0
00022d61: R1 := 1
00022d68: R0 := 3
00022d6d: R30 := 0x10804
00022d6f: call @__syslog_chk with return %00022d71

00022d71:
00022d76: R0 := 1
00022d7b: R30 := 0x1080C
00022d7d: call @myexit with return %00022d7f

00022d7f:
00022d82: goto %00022d80

00022d80:
00022d88: R21 := extend:64[31:0[R21]]
00022d90: R0 := R20
00022d97: R21 := R21 + 1
00022d9c: R30 := 0x107D0
00022d9e: call @free with return %00022da0

00022da0:
00022da6: R19 := R19 + R21
00022dad: R2 := 0xA
00022db5: R0 := R19
00022dbb: R1 := 0
00022dc0: R30 := 0x107E4
00022dc2: call @strtol with return %00022dc4

00022dc4:
00022dcb: R20 := 31:0[R0]
00022dd0: goto %00022dce

00027055:
0002705a: #17157 := extend:64[31:0[R25]]
0002705e: NF := 63:63[#17157]
00027061: VF := 31:31[R25] & ~63:63[#17157]
00027064: ZF := #17157 = 0
00027067: CF := 31:31[R25] | 31:31[R25] & ~63:63[#17157] | ~63:63[#17157]
00027071: R3 := 0x7F
00027078: R3 := high:32[R3].extend:64[31:0[R3]] & 0xFFFFFFFF0000FFFF |
          0x1000000
00027090: #17160 := ~ZF <> 0
00027091: goto %00027088

00027088:
0002708a: when #17160 goto %00027081
0002708b: goto %00027085

00027085:
00027086: R3 := 31:0[R3]
0002708d: goto %00027089

00027081:
00027082: R3 := 0
0002708c: goto %00027089

00027089:
0002709a: R0 := R19
000270a1: R2 := 0xA
000270a7: R1 := 0
000270af: mem := mem with [R31 + 0x50, el]:u32 <- 31:0[R3]
000270b4: R30 := 0x106E8
000270b6: call @strtol with return %000270b8

000270b8:
000270bf: R20 := 31:0[R0]
0003af94: goto %00022dce

00022dce:
00022ddb: #14911 := 31:0[R20] = 0
00022dd5: when #14911 goto %00022dd3
0003af95: goto %00022e16

00022dd3:
00022de3: R3 := R19
00022de9: R2 := 0x13000
00022df0: R2 := R2 + 0xED8
00022df7: R1 := 1
00022dfe: R0 := 3
00022e03: R30 := 0x1078C
00022e05: call @__syslog_chk with return %00022e07

00022e07:
00022e0c: R0 := 1
00022e11: R30 := 0x10794
00022e13: call @myexit with return %00022e15

00022e15:
00022e18: goto %00022e16

00022e16:
00022e20: R1 := mem[R31 + 0x50, el]:u32
00022e29: R0 := 31:0[R20]
00022e2e: R30 := 0x106FC
00022e30: call @so_listen with return %00022e32

00022e32:
00022e37: R1 := extend:64[31:0[R0]]
00022e3e: #14920 := extend:64[31:0[R1]]
00022e42: NF := 63:63[#14920]
00022e45: VF := 31:31[R1] & ~63:63[#14920]
00022e48: ZF := #14920 = 0
00022e4b: CF := 31:31[R1] | 31:31[R1] & ~63:63[#14920] | ~63:63[#14920]
00022e5c: #14922 := (NF <> VF | ZF) <> 0
00022e56: when #14922 goto %00022e54
0003af96: goto %00026fe5

00026fe5:
00026feb: R0 := mem[R23, el]:u64
00026ff1: R2 := 0
00026ff6: R30 := 0x10714
00026ff8: call @plist_add with return %00026ffa

00026ffa:
00027000: R1 := R0
00027009: R0 := mem[R31 + 0x50, el]:u32
00027011: mem := mem with [R23, el]:u64 <- R1
00027016: R30 := 0x10724
00027018: call @inet_ntoa with return %0002701a

0002701a:
00027020: R4 := R0
00027026: R2 := 0x13000
0002702f: R5 := 31:0[R20]
00027037: R3 := R24
0002703e: R2 := R2 + 0xEF8
00027045: R1 := 1
0002704c: R0 := 6
00027051: R30 := 0x10744
00027053: call @__syslog_chk with return %00022e54

00022e54:
00022e64: R22 := mem[R22 + 0xFB8, el]:u64
00022e6c: R0 := mem[R31 + 0x58, el]:u64
00022e74: R1 := mem[R22, el]:u64
00022e7c: #14929 := 1 + ~R1 + R0
00022e80: NF := 63:63[#14929]
00022e83: VF := 63:63[R0] & 63:63[~R1] & ~63:63[#14929] | ~63:63[R0] &
          ~63:63[~R1] & 63:63[#14929]
00022e86: ZF := #14929 = 0
00022e89: CF := 63:63[R0] & 63:63[~R1] | 63:63[~R1] & ~63:63[#14929] |
          63:63[R0] & ~63:63[#14929]
00022e8d: R0 := #14929
00022e93: R1 := 0
00022e9f: #14934 := ~ZF <> 0
00022e99: when #14934 goto %00022e97
0003af97: goto %00026fa0

00022e97:
00022ea4: R30 := 0x10814
00022ea6: call @__stack_chk_fail with return %00022ea8

00022ea8:
0003af98: call @tunnel_add with noreturn

00026fa0:
00026fa7: R19 := mem[R31 + 0x10, el]:u64
00026fab: R20 := mem[R31 + 0x18, el]:u64
00026fb4: R21 := mem[R31 + 0x20, el]:u64
00026fb8: R22 := mem[R31 + 0x28, el]:u64
00026fc1: R23 := mem[R31 + 0x30, el]:u64
00026fc5: R24 := mem[R31 + 0x38, el]:u64
00026fcd: R25 := mem[R31 + 0x40, el]:u64
00026fd7: R29 := mem[R31, el]:u64
00026fdb: R30 := mem[R31 + 8, el]:u64
00026fde: R31 := R31 + 0x60
00026fe3: call R30 with noreturn

0003af99: sub lowercase(lowercase_result)
0003b3f3: lowercase_result :: out u32 = low:32[R0]

0000f5ad:
0000f5b4: #127 := R31 - 0x20
0000f5b9: mem := mem with [#127, el]:u64 <- R29
0000f5be: mem := mem with [#127 + 8, el]:u64 <- R30
0000f5c2: R31 := #127
0000f5c9: R29 := R31
0000f5d1: #132 := R31 + 0x10
0000f5d6: mem := mem with [#132, el]:u64 <- R19
0000f5db: mem := mem with [#132 + 8, el]:u64 <- R20
0000f5e3: R20 := R0
0000f5e9: R19 := 0
0000f5ee: goto %0000f5ec

0000f5ec:
0000f5f5: R0 := R20
0000f5fa: R30 := 0x58C0
0000f5fc: call @strlen with return %0000f5fe

0000f5fe:
0000f604: #143 := 1 + ~R19 + R0
0000f608: NF := 63:63[#143]
0000f60b: VF := 63:63[R0] & 63:63[~R19] & ~63:63[#143] | ~63:63[R0] &
          ~63:63[~R19] & 63:63[#143]
0000f60e: ZF := #143 = 0
0000f611: CF := 63:63[R0] & 63:63[~R19] | 63:63[~R19] & ~63:63[#143] |
          63:63[R0] & ~63:63[#143]
0000f620: #148 := (CF & ~ZF) <> 0
0000f61a: when #148 goto %0000f618
0003af9a: goto %0000f662

0000f662:
0000f668: R0 := R20
0000f671: R19 := mem[R31 + 0x10, el]:u64
0000f675: R20 := mem[R31 + 0x18, el]:u64
0000f67f: R29 := mem[R31, el]:u64
0000f683: R30 := mem[R31 + 8, el]:u64
0000f686: R31 := R31 + 0x20
0000f68b: call R30 with noreturn

0000f618:
0000f625: R30 := 0x58A4
0000f628: call @__ctype_tolower_loc with return %0000f62a

0000f62a:
0000f630: #149 := R19
0000f636: R1 := pad:32[mem[R20 + #149]]
0000f63e: R0 := mem[R0, el]:u64
0000f646: #152 := R1 << 2
0000f64c: R0 := mem[R0 + #152, el]:u32
0000f654: #153 := R19
0000f659: mem := mem with [R20 + #153] <- low:8[31:0[R0]]
0000f660: R19 := R19 + 1
0003af9b: goto %0000f5ec

0003af9c: sub magic_auth_detect(magic_auth_detect_result)
0003b3f4: magic_auth_detect_result :: out u32 = low:32[R0]

00021e48:
00021e4f: #14376 := R31 - 0x120
00021e54: mem := mem with [#14376, el]:u64 <- R29
00021e59: mem := mem with [#14376 + 8, el]:u64 <- R30
00021e5d: R31 := #14376
00021e63: R3 := 0x27000
00021e69: R2 := 0x28000
00021e70: R29 := R31
00021e77: R2 := R2 + 0x470
00021e7f: R3 := mem[R3 + 0xFB8, el]:u64
00021e85: R1 := 0x13000
00021e8c: R1 := R1 + 0x3C0
00021e94: #14382 := R31 + 0x40
00021e99: mem := mem with [#14382, el]:u64 <- R25
00021e9e: mem := mem with [#14382 + 8, el]:u64 <- R26
00021ea6: R26 := R0
00021eae: R0 := mem[R3, el]:u64
00021eb6: mem := mem with [R31 + 0x118, el]:u64 <- R0
00021ebc: R0 := 0
00021ec4: #14391 := R31 + 0x20
00021ec9: mem := mem with [#14391, el]:u64 <- R21
00021ece: mem := mem with [#14391 + 8, el]:u64 <- R22
00021ed7: R6 := mem[R2, el]:u64
00021edb: R7 := mem[R2 + 8, el]:u64
00021ee3: #14397 := R31 + 0xA0
00021ee8: mem := mem with [#14397, el]:u64 <- R6
00021eed: mem := mem with [#14397 + 8, el]:u64 <- R7
00021ef6: R4 := mem[R1, el]:u64
00021efa: R5 := mem[R1 + 8, el]:u64
00021f02: #14403 := R31 + 0xC8
00021f07: mem := mem with [#14403, el]:u64 <- R4
00021f0c: mem := mem with [#14403 + 8, el]:u64 <- R5
00021f15: R6 := mem[R2 + 0x10, el]:u64
00021f19: R7 := mem[R2 + 0x18, el]:u64
00021f21: #14409 := R31 + 0xB0
00021f26: mem := mem with [#14409, el]:u64 <- R6
00021f2b: mem := mem with [#14409 + 8, el]:u64 <- R7
00021f33: R0 := mem[R2 + 0x20, el]:u64
00021f3b: mem := mem with [R31 + 0xC0, el]:u64 <- R0
00021f44: R6 := mem[R1 + 0x10, el]:u64
00021f48: R7 := mem[R1 + 0x18, el]:u64
00021f50: #14416 := R31 + 0xD8
00021f55: mem := mem with [#14416, el]:u64 <- R6
00021f5a: mem := mem with [#14416 + 8, el]:u64 <- R7
00021f63: R4 := mem[R1 + 0x20, el]:u64
00021f67: R5 := mem[R1 + 0x28, el]:u64
00021f6f: #14422 := R31 + 0xE8
00021f74: mem := mem with [#14422, el]:u64 <- R4
00021f79: mem := mem with [#14422 + 8, el]:u64 <- R5
00021f82: R2 := mem[R1 + 0x30, el]:u64
00021f86: R3 := mem[R1 + 0x38, el]:u64
00021f8e: #14428 := R31 + 0xF8
00021f93: mem := mem with [#14428, el]:u64 <- R2
00021f98: mem := mem with [#14428 + 8, el]:u64 <- R3
00021fa1: R0 := mem[R1 + 0x40, el]:u64
00021fa5: R1 := mem[R1 + 0x48, el]:u64
00021fac: R2 := R31 + 0x200
00021fb4: #14434 := R2 - 0xF8
00021fb9: mem := mem with [#14434, el]:u64 <- R0
00021fbe: mem := mem with [#14434 + 8, el]:u64 <- R1
00021fc3: R30 := 0xE3F8
00021fc5: call @new_auth with return %00021fc7

00021fc7:
00021fcd: R22 := R0
00021fd3: R1 := 0x27000
00021fda: R2 := 1
00021fe2: R1 := mem[R1 + 0xF80, el]:u64
00021fea: R1 := mem[R1, el]:u64
00021fef: R30 := 0xE410
00021ff1: call @copy_auth with return %00021ff3

00021ff3:
00021ff7: R1 := 0x12000
00021fff: R0 := R26
00022006: R1 := R1 + 0x750
0002200b: R30 := 0xE420
0002200d: call @strstr with return %0002200f

0002200f:
00022019: #14444 := R0 = 0
00022013: when #14444 goto %00022011
0003af9d: goto %000293dc

00022011:
0002201f: R0 := 0x27000
00022027: R3 := R26
0002202d: R2 := 0x13000
00022034: R1 := 1
0002203c: R0 := mem[R0 + 0xF68, el]:u64
00022043: R2 := R2 + 0x148
0002204b: R0 := mem[R0, el]:u64
00022050: R30 := 0xE8B0
00022053: call @__fprintf_chk with return %00022055

00022055:
00022058: goto %00022056

000293dc:
000293e2: #18165 := R31 + 0x10
000293e7: mem := mem with [#18165, el]:u64 <- R19
000293ec: mem := mem with [#18165 + 8, el]:u64 <- R20
000293f3: R20 := R0 + 3
000293fb: R19 := R0
00029402: R1 := 0x2F
0002940a: R0 := R20
00029412: #18176 := R31 + 0x30
00029417: mem := mem with [#18176, el]:u64 <- R23
0002941c: mem := mem with [#18176 + 8, el]:u64 <- R24
00029423: R21 := R31 + 0xC8
0002942a: R25 := 0
00029432: #18181 := R31 + 0x50
00029437: mem := mem with [#18181, el]:u64 <- R27
0002943c: mem := mem with [#18181 + 8, el]:u64 <- R28
00029441: R30 := 0xE44C
00029443: call @strchr with return %00029445

00029445:
0002944b: R2 := R0
00029452: #18186 := R2
00029456: NF := 63:63[#18186]
00029459: VF := 63:63[R2] & ~63:63[#18186]
0002945c: ZF := #18186 = 0
0002945f: CF := 63:63[R2] | ~63:63[#18186] | 63:63[R2] & ~63:63[#18186]
00029469: R2 := R2 - R19
00029471: R2 := low:32[extend:64[31:0[R2]] - 3]
00029478: R1 := 0
00029480: R0 := R20
00029498: #18194 := ~ZF <> 0
00029499: goto %00029490

00029490:
00029492: when #18194 goto %00029489
00029493: goto %0002948d

0002948d:
0002948e: R2 := 0
00029495: goto %00029491

00029489:
0002948a: R2 := 31:0[R2]
00029494: goto %00029491

00029491:
000294a2: mem := mem with [R31 + 0x84, el]:u32 <- 0
000294a7: R30 := 0xE470
000294a9: call @substr with return %000294ab

000294ab:
000294b1: R24 := R0
000294b7: R0 := 0x12000
000294be: R0 := R0 + 0x780
000294c4: R1 := 0x12000
000294cb: R1 := R1 + 0x910
000294d3: mem := mem with [R31 + 0x68, el]:u64 <- R1
000294db: mem := mem with [R31 + 0x88, el]:u64 <- R0
000294e2: R0 := R31 + 0x9C
000294ea: mem := mem with [R31 + 0x70, el]:u64 <- R0
0003af9e: goto %00028fd8

00028fd8:
00028fde: R30 := 0xE498
00028fe0: call @new_rr_data with return %00028fe2

00028fe2:
00028fe8: R20 := R0
00028fed: R30 := 0xE4A0
00028fef: call @new_rr_data with return %00028ff1

00028ff1:
00028ff7: R19 := R0
00028fff: R0 := mem[R31 + 0x68, el]:u64
00029006: R1 := 1
0002900e: mem := mem with [R19, el]:u32 <- 31:0[R1]
00029013: R30 := 0xE4B4
00029015: call @strdup with return %00029017

00029017:
0002901d: mem := mem with [R19 + 0x28, el]:u64 <- R0
00029025: R0 := R26
0002902a: R30 := 0xE4C0
0002902c: call @strdup with return %0002902e

0002902e:
00029034: mem := mem with [R19 + 0x30, el]:u64 <- R0
0002903a: R0 := 0x12000
00029041: R0 := R0 + 0xFF8
00029046: R30 := 0xE4D0
00029048: call @strdup with return %0002904a

0002904a:
00029050: R1 := R0
00029058: R0 := mem[R19 + 8, el]:u64
00029060: mem := mem with [R19 + 0x48, el]:u64 <- R1
00029066: R1 := 0x12000
0002906d: R4 := 1
00029074: R2 := R1 + 0xE30
0002907d: R3 := 31:0[R4]
00029083: R1 := 0x12000
0002908a: R1 := R1 + 0xE40
0002908f: R30 := 0xE4F8
00029091: call @hlist_add with return %00029093

00029093:
00029099: mem := mem with [R19 + 8, el]:u64 <- R0
000290a5: #18075 := R24 = 0
0002909f: when #18075 goto %0002909d
0003af9f: goto %0002938e

0002938e:
00029394: R1 := mem[R31 + 0x88, el]:u64
0002939b: R4 := 1
000293a3: R2 := R24
000293ac: R3 := 31:0[R4]
000293b1: R30 := 0xE514
000293b3: call @hlist_add with return %000293b5

000293b5:
000293bb: mem := mem with [R19 + 8, el]:u64 <- R0
0003afa0: goto %0002909d

0002909d:
000290ac: R5 := R22 + 0x134
000290b4: R23 := extend:64[31:0[R25]] + 1
000290be: R28 := mem[R21, el]:u32
000290c3: R4 := mem[R21 + 4, el]:u32
000290cc: R2 := 31:0[R23]
000290d6: R0 := mem[R21 + 8, el]:u32
000290db: R27 := mem[R21 + 0xC, el]:u32
000290e1: R1 := 0x13000
000290e8: R1 := R1 + 0x160
000290f0: #18084 := R5 - 8
000290f5: mem := mem with [#18084, el]:u32 <- 31:0[R0]
000290fa: mem := mem with [#18084 + 4, el]:u32 <- 31:0[R28]
00029102: #18089 := R5
00029107: mem := mem with [#18089, el]:u32 <- 31:0[R4]
0002910c: mem := mem with [#18089 + 4, el]:u32 <- 31:0[R27]
00029113: R3 := 4
0002911b: #18094 := R31 + 0x7C
00029120: mem := mem with [#18094, el]:u32 <- 31:0[R4]
00029125: mem := mem with [#18094 + 4, el]:u32 <- 31:0[R0]
0002912c: R0 := 1
00029131: R30 := 0xE54C
00029133: call @__printf_chk with return %00029135

00029135:
00029139: R0 := 0
0002913e: R30 := 0xE554
00029140: call @proxy_connect with return %00029142

00029142:
00029148: mem := mem with [R31 + 0x9C, el]:u32 <- 31:0[R0]
0002914f: #18096 := extend:64[31:0[R0]]
00029153: NF := 63:63[#18096]
00029156: VF := 31:31[R0] & ~63:63[#18096]
00029159: ZF := #18096 = 0
0002915c: CF := 31:31[R0] | 31:31[R0] & ~63:63[#18096] | ~63:63[#18096]
0002916d: #18098 := (NF <> VF | ZF) <> 0
00029167: when #18098 goto %00029165
0003afa1: goto %000291c4

00029165:
00029173: R1 := 0x13000
0002917a: R1 := R1 + 0x180
00029181: R0 := 1
00029186: R30 := 0xE704
00029188: call @__printf_chk with return %0002918a

0002918a:
00029190: R0 := R20
00029195: R30 := 0xE70C
00029197: call @free_rr_data with return %00029199

00029199:
0002919f: R0 := R19
000291a4: R30 := 0xE714
000291a6: call @free_rr_data with return %000291a8

000291a8:
000291af: R0 := mem[R31 + 0x9C, el]:u32
000291b4: R30 := 0xE71C
000291b6: call @close with return %000291b8

000291b8:
000291c1: #18106 := ~R24 = 0
000291bb: when #18106 goto %00028f7d
0003afa2: goto %00028ccb

000291c4:
000291ca: R0 := mem[R31 + 0x70, el]:u64
000291d2: R3 := R22
000291da: R2 := R20
000291e2: R1 := R19
000291e7: R30 := 0xE574
000291e9: call @proxy_authenticate with return %000291eb

000291eb:
000291f5: #18117 := 31:0[R0] = 0
000291ef: when #18117 goto %000291ed
0003afa3: goto %00029362

00029362:
00029369: R2 := mem[R20 + 0x10, el]:u32
00029370: #18152 := 0xFFFFFFFFFFFFFE69 + extend:64[31:0[R2]]
00029374: NF := 63:63[#18152]
00029377: VF := 31:31[R2] & ~63:63[#18152]
0002937a: ZF := #18152 = 0
0002937d: CF := 31:31[R2] | 31:31[R2] & ~63:63[#18152] | ~63:63[#18152]
0002938b: #18154 := ~ZF <> 0
00029385: when #18154 goto %00029249
0003afa4: goto %000291ed

00029249:
0002924d: R1 := 0x13000
00029254: R0 := 1
0002925b: R1 := R1 + 0x1B0
00029260: R30 := 0xE638
00029262: call @__printf_chk with return %00029264

00029264:
0002926b: R1 := mem[R31 + 0x84, el]:u32
00029273: R0 := R20
0002927a: R21 := R21 + 0x14
00029282: R1 := extend:64[31:0[R1]] + 1
0002928a: mem := mem with [R31 + 0x84, el]:u32 <- 31:0[R1]
0002928f: R30 := 0xE650
00029291: call @free_rr_data with return %00029293

00029293:
00029299: R0 := R19
0002929e: R30 := 0xE658
000292a0: call @free_rr_data with return %000292a2

000292a2:
000292a9: R0 := mem[R31 + 0x9C, el]:u32
000292ae: R30 := 0xE660
000292b0: call @close with return %000292b2

000292b2:
000292b7: #18134 := 0xFFFFFFFFFFFFFFFC + extend:64[31:0[R23]]
000292bb: NF := 63:63[#18134]
000292be: VF := 31:31[R23] & ~63:63[#18134]
000292c1: ZF := #18134 = 0
000292c4: CF := 31:31[R23] | 31:31[R23] & ~63:63[#18134] | ~63:63[#18134]
000292d2: #18136 := ~ZF <> 0
000292cc: when #18136 goto %00028fce
0003afa5: goto %00028c74

000291ed:
000291fd: R0 := R20
00029202: R30 := 0xE58C
00029204: call @reset_rr_data with return %00029206

00029206:
0002920d: R0 := mem[R31 + 0x9C, el]:u32
00029215: R1 := R19
0002921a: R30 := 0xE598
0002921c: call @headers_send with return %0002921e

0002921e:
00029228: #18125 := 31:0[R0] = 0
00029222: when #18125 goto %00029220
0003afa6: goto %000292d5

000292d5:
000292dc: R0 := mem[R31 + 0x9C, el]:u32
000292e4: R1 := R20
000292e9: R30 := 0xE5A8
000292eb: call @headers_recv with return %000292ed

000292ed:
000292f6: #18141 := 31:0[R0] = 0
000292f0: when #18141 goto %00029220
0003afa7: goto %000292f9

00029220:
0002922e: R1 := 0x13000
00029235: R0 := 1
0002923c: R1 := R1 + 0x1D8
00029241: R30 := 0xE624
00029243: call @__printf_chk with return %00029245

00029245:
00029247: goto %00028c26

000292f9:
00029300: R2 := mem[R20 + 0x10, el]:u32
00029307: #18143 := 0xFFFFFFFFFFFFFE69 + extend:64[31:0[R2]]
0002930b: NF := 63:63[#18143]
0002930e: VF := 31:31[R2] & ~63:63[#18143]
00029311: ZF := #18143 = 0
00029314: CF := 31:31[R2] | 31:31[R2] & ~63:63[#18143] | ~63:63[#18143]
00029322: #18145 := ~ZF <> 0
0002931c: when #18145 goto %00028d00
0003afa8: goto %00029325

00028d00:
00028d04: R1 := 0x13000
00028d0b: R1 := R1 + 0x238
00028d12: R0 := 1
00028d17: R30 := 0xE740
00028d19: call @__printf_chk with return %00028d1b

00028d1b:
00028d21: R0 := R20
00028d26: R30 := 0xE748
00028d28: call @free_rr_data with return %00028d2a

00028d2a:
00028d30: R0 := R19
00028d35: R30 := 0xE750
00028d37: call @free_rr_data with return %00028d39

00028d39:
00028d40: R0 := mem[R31 + 0x9C, el]:u32
00028d45: R30 := 0xE758
00028d47: call @close with return %00028d49

00028d49:
00028d50: R2 := 31:0[R25]
00028d56: R1 := 0x13000
00028d5d: R0 := 1
00028d64: R1 := R1 + 0x250
00028d69: R30 := 0xE76C
00028d6b: call @__printf_chk with return %00028d6d

00028d6d:
00028d72: R0 := extend:64[31:0[R25]] << 2
00028d79: R3 := R31 + 0xD8
00028d81: R25 := R0 + extend:64[31:0[R25]]
00028d88: R2 := R31 + 0xA0
00028d8e: R1 := 0x13000
00028d95: R0 := 1
00028d9c: R1 := R1 + 0x288
00028da4: #18005 := R25 << 2
00028da9: R3 := mem[R3 + #18005, el]:u32
00028db1: #18007 := R3 << 3
00028db6: R2 := mem[R2 + #18007, el]:u64
00028dbb: R30 := 0xE794
00028dbd: call @__printf_chk with return %00028dbf

00028dbf:
00028dc9: #18008 := ~31:0[R27] = 0
00028dc3: when #18008 goto %00028dc1
0003afa9: goto %00028f71

00028dc1:
00028dcf: R1 := 0x13000
00028dd8: R2 := 31:0[R27]
00028ddf: R1 := R1 + 0x2A0
00028de6: R0 := 1
00028deb: R30 := 0xE7D4
00028ded: call @__printf_chk with return %00028def

00028def:
00028df9: #18012 := 31:0[R28] = 0
00028df3: when #18012 goto %00028df1
0003afaa: goto %00028f07

00028f71:
00028f7a: #18048 := ~31:0[R28] = 0
00028f74: when #18048 goto %00028f07
0003afab: goto %00028df1

00028f07:
00028f0c: R2 := 8
00028f12: R1 := 0x10
00028f19: R0 := R22 + 0xC8
00028f1e: R30 := 0xE7E8
00028f20: call @printmem with return %00028f22

00028f22:
00028f26: R1 := 0x13000
00028f2e: R2 := R0
00028f35: R1 := R1 + 0x2B8
00028f3d: R19 := R0
00028f44: R0 := 1
00028f49: R30 := 0xE800
00028f4b: call @__printf_chk with return %00028f4d

00028f4d:
00028f53: R0 := R19
00028f58: R30 := 0xE808
00028f5a: call @free with return %00028f5c

00028f5c:
00028f63: R0 := mem[R31 + 0x7C, el]:u32
00028f6e: #18047 := 31:0[R0] = 0
00028f68: when #18047 goto %00028ef2
0003afac: goto %00028e06

00028df1:
00028e02: R0 := mem[R31 + 0x7C, el]:u32
00028e0e: #18014 := ~31:0[R0] = 0
00028e08: when #18014 goto %00028e06
0003afad: goto %00028ef2

00028e06:
00028e15: R2 := 8
00028e1b: R1 := 0x10
00028e22: R0 := R22 + 0x96
00028e27: R30 := 0xE820
00028e29: call @printmem with return %00028e2b

00028e2b:
00028e2f: R1 := 0x13000
00028e37: R2 := R0
00028e3e: R1 := R1 + 0x2D0
00028e46: R19 := R0
00028e4d: R0 := 1
00028e52: R30 := 0xE838
00028e54: call @__printf_chk with return %00028e56

00028e56:
00028e5c: R0 := R19
00028e61: R30 := 0xE840
00028e63: call @free with return %00028e65

00028e65:
00028e6c: R0 := mem[R31 + 0x80, el]:u32
00028e78: #18025 := 31:0[R0] = 0
00028e72: when #18025 goto %00028e70
0003afae: goto %00028e99

00028ef2:
00028ef9: R0 := mem[R31 + 0x80, el]:u32
00028f04: #18036 := ~31:0[R0] = 0
00028efe: when #18036 goto %00028e99
0003afaf: goto %00028e70

00028e99:
00028e9e: R0 := R22 + 0xFA
00028ea5: R2 := 8
00028eab: R1 := 0x10
00028eb0: R30 := 0xE858
00028eb2: call @printmem with return %00028eb4

00028eb4:
00028eb8: R1 := 0x13000
00028ec0: R2 := R0
00028ec7: R1 := R1 + 0x2E8
00028ecf: R19 := R0
00028ed6: R0 := 1
00028edb: R30 := 0xE870
00028edd: call @__printf_chk with return %00028edf

00028edf:
00028ee5: R0 := R19
00028eea: R30 := 0xE878
00028eec: call @free with return %00028eee

00028eee:
00028ef0: goto %00028e70

00028e70:
00028e7e: R1 := 0x13000
00028e85: R0 := 1
00028e8c: R1 := R1 + 0x300
00028e91: R30 := 0xE7BC
00028e93: call @__printf_chk with return %00028e95

00028e95:
00028e97: goto %00028cc6

00029325:
0002932b: R0 := mem[R20 + 8, el]:u64
00029331: R25 := 0x12000
00029338: R25 := R25 + 0xBC0
0002933e: R2 := 0x12000
00029346: R1 := R25
0002934d: R2 := R2 + 0xA80
00029352: R30 := 0xE5D4
00029354: call @hlist_subcmp_all with return %00029356

00029356:
0002935f: #18150 := 31:0[R0] = 0
00029359: when #18150 goto %00028bdb
0003afb0: goto %00028c01

00028bdb:
00028be1: R0 := mem[R20 + 8, el]:u64
00028be7: R2 := 0x13000
00028bef: R1 := R25
00028bf6: R2 := R2 + 0x208
00028bfb: R30 := 0xE6DC
00028bfd: call @hlist_subcmp_all with return %00028bff

00028bff:
00028c09: #17970 := ~31:0[R0] = 0
00028c03: when #17970 goto %00028c01
0003afb1: goto %000293bd

000293bd:
000293c1: R1 := 0x13000
000293c8: R0 := 1
000293cf: R1 := R1 + 0x210
000293d4: R30 := 0xE6F0
000293d6: call @__printf_chk with return %000293d8

000293d8:
000293da: goto %00028c74

00028c01:
00028c0f: R1 := 0x13000
00028c16: R0 := 1
00028c1d: R1 := R1 + 0x1F0
00028c22: R30 := 0xE5E8
00028c24: call @__printf_chk with return %00028c26

00028c26:
00028c2c: R0 := R20
00028c31: R30 := 0xE5F0
00028c33: call @free_rr_data with return %00028c35

00028c35:
00028c3b: R0 := R19
00028c40: R30 := 0xE5F8
00028c42: call @free_rr_data with return %00028c44

00028c44:
00028c4b: R0 := mem[R31 + 0x9C, el]:u32
00028c52: R21 := R21 + 0x14
00028c57: R30 := 0xE604
00028c59: call @close with return %00028c5b

00028c5b:
00028c60: #17978 := 0xFFFFFFFFFFFFFFFC + extend:64[31:0[R23]]
00028c64: NF := 63:63[#17978]
00028c67: VF := 31:31[R23] & ~63:63[#17978]
00028c6a: ZF := #17978 = 0
00028c6d: CF := 31:31[R23] | 31:31[R23] & ~63:63[#17978] | ~63:63[#17978]
00028c7c: #17980 := ZF
00028c76: when #17980 goto %00028c74
0003afb2: goto %00028fce

00028c74:
00028c85: R0 := mem[R31 + 0x84, el]:u32
00028c8c: #17982 := 0xFFFFFFFFFFFFFFFC + extend:64[31:0[R0]]
00028c90: NF := 63:63[#17982]
00028c93: VF := 31:31[R0] & ~63:63[#17982]
00028c96: ZF := #17982 = 0
00028c99: CF := 31:31[R0] | 31:31[R0] & ~63:63[#17982] | ~63:63[#17982]
00028ca8: #17984 := ZF
00028ca2: when #17984 goto %00028ca0
0003afb3: goto %00028fb3

00028ca0:
00028cae: R1 := 0x13000
00028cb5: R0 := 1
00028cbc: R1 := R1 + 0x338
00028cc1: R30 := 0xE88C
00028cc3: call @__printf_chk with return %00028cc5

00028cc5:
00028cc8: goto %00028cc6

00028fb3:
00028fb7: R1 := 0x13000
00028fbe: R0 := 1
00028fc5: R1 := R1 + 0x370
00028fca: R30 := 0xE684
00028fcc: call @__printf_chk with return %00028cc6

00028cc6:
00028cd3: #17985 := R24 = 0
00028ccd: when #17985 goto %00028ccb
0003afb4: goto %00028f7d

00028ccb:
00028cdc: R19 := mem[R31 + 0x10, el]:u64
00028ce0: R20 := mem[R31 + 0x18, el]:u64
00028ce9: R23 := mem[R31 + 0x30, el]:u64
00028ced: R24 := mem[R31 + 0x38, el]:u64
00028cf6: R27 := mem[R31 + 0x50, el]:u64
00028cfa: R28 := mem[R31 + 0x58, el]:u64
00028cfe: goto %00022056

00028f7d:
00028f83: R0 := R24
00028f88: R30 := 0xE690
00028f8a: call @free with return %00028f8c

00028f8c:
00028f93: R19 := mem[R31 + 0x10, el]:u64
00028f97: R20 := mem[R31 + 0x18, el]:u64
00028fa0: R23 := mem[R31 + 0x30, el]:u64
00028fa4: R24 := mem[R31 + 0x38, el]:u64
00028fad: R27 := mem[R31 + 0x50, el]:u64
00028fb1: R28 := mem[R31 + 0x58, el]:u64
0003afb5: goto %00022056

00022056:
0002205d: R0 := 0x27000
00022065: R0 := mem[R0 + 0xFB8, el]:u64
0002206d: R1 := mem[R31 + 0x118, el]:u64
00022075: R2 := mem[R0, el]:u64
0002207d: #14456 := 1 + ~R2 + R1
00022081: NF := 63:63[#14456]
00022084: VF := 63:63[R1] & 63:63[~R2] & ~63:63[#14456] | ~63:63[R1] &
          ~63:63[~R2] & 63:63[#14456]
00022087: ZF := #14456 = 0
0002208a: CF := 63:63[R1] & 63:63[~R2] | 63:63[~R2] & ~63:63[#14456] |
          63:63[R1] & ~63:63[#14456]
0002208e: R1 := #14456
00022094: R2 := 0
000220a0: #14461 := ~ZF <> 0
0002209a: when #14461 goto %00022098
0003afb6: goto %00028bab

00022098:
000220a8: #14465 := R31 + 0x10
000220ad: mem := mem with [#14465, el]:u64 <- R19
000220b2: mem := mem with [#14465 + 8, el]:u64 <- R20
000220ba: #14470 := R31 + 0x30
000220bf: mem := mem with [#14470, el]:u64 <- R23
000220c4: mem := mem with [#14470 + 8, el]:u64 <- R24
000220cc: #14475 := R31 + 0x50
000220d1: mem := mem with [#14475, el]:u64 <- R27
000220d6: mem := mem with [#14475 + 8, el]:u64 <- R28
000220db: R30 := 0xE8C4
000220dd: call @__stack_chk_fail with return %000220df

000220df:
0003afb7: call @host_connect with noreturn

00028bab:
00028bb2: R21 := mem[R31 + 0x20, el]:u64
00028bb6: R22 := mem[R31 + 0x28, el]:u64
00028bbf: R25 := mem[R31 + 0x40, el]:u64
00028bc3: R26 := mem[R31 + 0x48, el]:u64
00028bcd: R29 := mem[R31, el]:u64
00028bd1: R30 := mem[R31 + 8, el]:u64
00028bd4: R31 := R31 + 0x120
00028bd9: call R30 with noreturn

00028fce:
00028fd5: R25 := 31:0[R23]
00028fda: goto %00028fd8

0003afb8: sub main(main_argc, main_argv, main_result)
0003b3f5: main_argc :: in u32 = low:32[R0]
0003b3f6: main_argv :: in out u64 = R1
0003b3f7: main_result :: out u32 = low:32[R0]

0000f2ae:
0000f2b3: R31 := R31 - 0x2A0
0000f2b9: R2 := 0x27000
0000f2c1: #9 := R31
0000f2c6: mem := mem with [#9, el]:u64 <- R29
0000f2cb: mem := mem with [#9 + 8, el]:u64 <- R30
0000f2d2: R29 := R31
0000f2da: R2 := mem[R2 + 0xFB8, el]:u64
0000f2e2: #15 := R31 + 0x30
0000f2e7: mem := mem with [#15, el]:u64 <- R23
0000f2ec: mem := mem with [#15 + 8, el]:u64 <- R24
0000f2f5: R23 := 31:0[R0]
0000f2fd: R0 := mem[R2, el]:u64
0000f305: mem := mem with [R31 + 0x298, el]:u64 <- R0
0000f30b: R0 := 0
0000f313: R24 := R1
0000f31b: #27 := R31 + 0x10
0000f320: mem := mem with [#27, el]:u64 <- R19
0000f325: mem := mem with [#27 + 8, el]:u64 <- R20
0000f32b: R20 := 0x28000
0000f333: #32 := R31 + 0x20
0000f338: mem := mem with [#32, el]:u64 <- R21
0000f33d: mem := mem with [#32 + 8, el]:u64 <- R22
0000f343: R21 := 0
0000f34a: R22 := 0
0000f352: #37 := R31 + 0x40
0000f357: mem := mem with [#37, el]:u64 <- R25
0000f35c: mem := mem with [#37 + 8, el]:u64 <- R26
0000f362: R25 := 0x14000
0000f36a: #42 := R31 + 0x50
0000f36f: mem := mem with [#42, el]:u64 <- R27
0000f374: mem := mem with [#42 + 8, el]:u64 <- R28
0000f37b: R28 := 0
0000f383: #47 := R31 + 0x110
0000f388: mem := mem with [#47, el]:u64 <- 0
0000f38d: mem := mem with [#47 + 8, el]:u64 <- 0
0000f395: #52 := R31 + 0x120
0000f39a: mem := mem with [#52, el]:u64 <- 0
0000f39f: mem := mem with [#52 + 8, el]:u64 <- 0
0000f3a4: R30 := 0x245C
0000f3a7: call @new_auth with return %0002d984

0002d984:
0002d989: R1 := R20 + 0x4D8
0002d991: R2 := R0
0002d997: R0 := 0x32
0002d99f: mem := mem with [R31 + 0x70, el]:u64 <- 0
0002d9a7: mem := mem with [R1 + 0x68, el]:u64 <- R2
0002d9ac: R30 := 0x2474
0002d9ae: call @new with return %0002d9b0

0002d9b0:
0002d9b6: R1 := R0
0002d9bc: R0 := 0x32
0002d9c4: mem := mem with [R31 + 0x90, el]:u64 <- R1
0002d9c9: R30 := 0x2484
0002d9cb: call @new with return %0002d9cd

0002d9cd:
0002d9d3: R1 := R0
0002d9d9: R0 := 0x32
0002d9e1: mem := mem with [R31 + 0x80, el]:u64 <- R1
0002d9e6: R30 := 0x2494
0002d9e8: call @new with return %0002d9ea

0002d9ea:
0002d9f0: R1 := R0
0002d9f6: R0 := 0x32
0002d9fe: mem := mem with [R31 + 0x68, el]:u64 <- R1
0002da03: R30 := 0x24A4
0002da05: call @new with return %0002da07

0002da07:
0002da0d: R1 := R0
0002da13: R0 := 0x32
0002da1b: mem := mem with [R31 + 0xB0, el]:u64 <- R1
0002da20: R30 := 0x24B4
0002da22: call @new with return %0002da24

0002da24:
0002da2a: R1 := R0
0002da30: R0 := 0x32
0002da38: mem := mem with [R31 + 0xB8, el]:u64 <- R1
0002da3d: R30 := 0x24C4
0002da3f: call @new with return %0002da41

0002da41:
0002da47: R1 := R0
0002da4d: R0 := 0x32
0002da55: mem := mem with [R31 + 0xC0, el]:u64 <- R1
0002da5a: R30 := 0x24D4
0002da5c: call @new with return %0002da5e

0002da5e:
0002da64: R1 := R0
0002da6a: R0 := 0x32
0002da72: mem := mem with [R31 + 0x78, el]:u64 <- R1
0002da77: R30 := 0x24E4
0002da79: call @new with return %0002da7b

0002da7b:
0002da81: R1 := R0
0002da87: R0 := 0x32
0002da8f: mem := mem with [R31 + 0x98, el]:u64 <- R1
0002da94: R30 := 0x24F4
0002da96: call @new with return %0002da98

0002da98:
0002da9e: R1 := R0
0002daa4: R0 := 0x32
0002daac: mem := mem with [R31 + 0xA8, el]:u64 <- R1
0002dab1: R30 := 0x2504
0002dab3: call @new with return %0002dab5

0002dab5:
0002dabb: mem := mem with [R31 + 0x88, el]:u64 <- R0
0002dac2: R2 := 0x18
0002dac9: R1 := 2
0002dacf: R0 := 0x14000
0002dad6: R0 := R0 + 0x88
0002dadb: R30 := 0x251C
0002dade: call @openlog with return %0002dae0

0002dae0:
0002dae5: R1 := 1
0002daec: R0 := 6
0002daf5: R19 := 31:0[R1]
0002dafb: R2 := 0x14000
0002db02: R2 := R2 + 0x90
0002db07: R30 := 0x2534
0002db09: call @__syslog_chk with return %0002db0b

0002db0b:
0002db0f: R0 := 0x27000
0002db15: R7 := 0x15000
0002db1c: R26 := R7 + 0x360
0002db24: mem := mem with [R31 + 0xA0, el]:u32 <- 0
0002db2c: R0 := mem[R0 + 0xF70, el]:u64
0002db34: #20352 := R31 + 0xC8
0002db39: mem := mem with [#20352, el]:u32 <- 0
0002db3e: mem := mem with [#20352 + 4, el]:u32 <- 0
0002db46: mem := mem with [R31 + 0xD0, el]:u64 <- R0
0002db4d: R0 := R31 + 0x120
0002db55: mem := mem with [R31 + 0xD8, el]:u64 <- R0
0003afb9: goto %0002db57

0002db57:
0002db5c: R2 := R25 + 0x1D8
0002db64: R1 := R24
0002db6d: R0 := 31:0[R23]
0002db72: R30 := 0x2568
0002db75: call @__posix_getopt with return %0002db77

0002db77:
0002db7d: mem := mem with [R31 + 0xF8, el]:u32 <- 31:0[R0]
0002db84: #20360 := 1 + extend:64[31:0[R0]]
0002db88: NF := 63:63[#20360]
0002db8b: VF := ~31:31[R0] & 63:63[#20360]
0002db8e: ZF := #20360 = 0
0002db91: CF := 31:31[R0] & ~63:63[#20360]
0002dba0: #20362 := ZF
0002db9a: when #20362 goto %0002db98
0003afba: goto %00032197

0002db98:
0002dbac: #20363 := ~31:0[R22] = 0
0002dba6: when #20363 goto %0002dba4
0003afbb: goto %00032151

0002dba4:
0002dbb2: R19 := 0x27000
0002dbb8: R1 := 0x14000
0002dbbf: R0 := 1
0002dbc6: R1 := R1 + 0x210
0002dbcb: R30 := 0x37C0
0002dbcd: call @__printf_chk with return %0002dbcf

0002dbcf:
0002dbd4: R0 := 1
0002dbda: R1 := 0x14000
0002dbe1: R1 := R1 + 0x250
0002dbe6: R30 := 0x37D0
0002dbe8: call @__printf_chk with return %0002dbea

0002dbea:
0002dbf0: R19 := mem[R19 + 0xF68, el]:u64
0002dbf7: R1 := 1
0002dbff: R3 := mem[R24, el]:u64
0002dc05: R2 := 0x14000
0002dc0d: R0 := mem[R19, el]:u64
0002dc14: R2 := R2 + 0x398
0002dc19: R30 := 0x37EC
0002dc1b: call @__fprintf_chk with return %0002dc1d

0002dc1d:
0002dc23: R0 := mem[R19, el]:u64
0002dc2a: R1 := 1
0002dc30: R2 := 0x14000
0002dc37: R2 := R2 + 0x3E0
0002dc3c: R30 := 0x3800
0002dc3e: call @__fprintf_chk with return %0002dc40

0002dc40:
0002dc46: R0 := mem[R19, el]:u64
0002dc4d: R1 := 1
0002dc53: R2 := 0x14000
0002dc5a: R2 := R2 + 0x448
0002dc5f: R30 := 0x3814
0002dc61: call @__fprintf_chk with return %0002dc63

0002dc63:
0002dc69: R0 := mem[R19, el]:u64
0002dc70: R1 := 1
0002dc76: R2 := 0x14000
0002dc7d: R2 := R2 + 0x4F0
0002dc82: R30 := 0x3828
0002dc84: call @__fprintf_chk with return %0002dc86

0002dc86:
0002dc8c: R0 := mem[R19, el]:u64
0002dc93: R1 := 1
0002dc99: R2 := 0x14000
0002dca0: R2 := R2 + 0x520
0002dca5: R30 := 0x383C
0002dca7: call @__fprintf_chk with return %0002dca9

0002dca9:
0002dcaf: R0 := mem[R19, el]:u64
0002dcb6: R1 := 1
0002dcbc: R2 := 0x14000
0002dcc3: R2 := R2 + 0x598
0002dcc8: R30 := 0x3850
0002dcca: call @__fprintf_chk with return %0002dccc

0002dccc:
0002dcd2: R0 := mem[R19, el]:u64
0002dcd9: R1 := 1
0002dcdf: R2 := 0x14000
0002dce6: R2 := R2 + 0x5D8
0002dceb: R30 := 0x3864
0002dced: call @__fprintf_chk with return %0002dcef

0002dcef:
0002dcf5: R0 := mem[R19, el]:u64
0002dcfc: R1 := 1
0002dd02: R2 := 0x14000
0002dd09: R2 := R2 + 0x618
0002dd0e: R30 := 0x3878
0002dd10: call @__fprintf_chk with return %0002dd12

0002dd12:
0002dd18: R0 := mem[R19, el]:u64
0002dd1f: R1 := 1
0002dd25: R2 := 0x14000
0002dd2c: R2 := R2 + 0x650
0002dd31: R30 := 0x388C
0002dd33: call @__fprintf_chk with return %0002dd35

0002dd35:
0002dd3b: R0 := mem[R19, el]:u64
0002dd42: R1 := 1
0002dd48: R2 := 0x14000
0002dd4f: R2 := R2 + 0x680
0002dd54: R30 := 0x38A0
0002dd56: call @__fprintf_chk with return %0002dd58

0002dd58:
0002dd5e: R0 := mem[R19, el]:u64
0002dd65: R1 := 1
0002dd6b: R2 := 0x14000
0002dd72: R2 := R2 + 0x6C8
0002dd77: R30 := 0x38B4
0002dd79: call @__fprintf_chk with return %0002dd7b

0002dd7b:
0002dd81: R0 := mem[R19, el]:u64
0002dd88: R1 := 1
0002dd8e: R2 := 0x14000
0002dd95: R2 := R2 + 0x710
0002dd9a: R30 := 0x38C8
0002dd9c: call @__fprintf_chk with return %0002dd9e

0002dd9e:
0002dda4: R0 := mem[R19, el]:u64
0002ddab: R1 := 1
0002ddb1: R2 := 0x14000
0002ddb8: R2 := R2 + 0x760
0002ddbd: R30 := 0x38DC
0002ddbf: call @__fprintf_chk with return %0002ddc1

0002ddc1:
0002ddc7: R0 := mem[R19, el]:u64
0002ddce: R1 := 1
0002ddd4: R2 := 0x14000
0002dddb: R2 := R2 + 0x798
0002dde0: R30 := 0x38F0
0002dde2: call @__fprintf_chk with return %0002dde4

0002dde4:
0002ddea: R0 := mem[R19, el]:u64
0002ddf1: R1 := 1
0002ddf7: R2 := 0x14000
0002ddfe: R2 := R2 + 0x7C8
0002de03: R30 := 0x3904
0002de05: call @__fprintf_chk with return %0002de07

0002de07:
0002de0d: R0 := mem[R19, el]:u64
0002de14: R1 := 1
0002de1a: R2 := 0x14000
0002de21: R2 := R2 + 0x8B8
0002de26: R30 := 0x3918
0002de28: call @__fprintf_chk with return %0002de2a

0002de2a:
0002de30: R0 := mem[R19, el]:u64
0002de37: R1 := 1
0002de3d: R2 := 0x14000
0002de44: R2 := R2 + 0x900
0002de49: R30 := 0x392C
0002de4b: call @__fprintf_chk with return %0002de4d

0002de4d:
0002de53: R0 := mem[R19, el]:u64
0002de5a: R1 := 1
0002de60: R2 := 0x14000
0002de67: R2 := R2 + 0x948
0002de6c: R30 := 0x3940
0002de6e: call @__fprintf_chk with return %0002de70

0002de70:
0002de76: R0 := mem[R19, el]:u64
0002de7d: R1 := 1
0002de83: R2 := 0x14000
0002de8a: R2 := R2 + 0x9C8
0002de8f: R30 := 0x3954
0002de91: call @__fprintf_chk with return %0002de93

0002de93:
0002de99: R0 := mem[R19, el]:u64
0002dea0: R1 := 1
0002dea6: R2 := 0x14000
0002dead: R2 := R2 + 0xA28
0002deb2: R30 := 0x3968
0002deb4: call @__fprintf_chk with return %0002deb6

0002deb6:
0002debc: R0 := mem[R19, el]:u64
0002dec3: R1 := 1
0002dec9: R2 := 0x14000
0002ded0: R2 := R2 + 0xA68
0002ded5: R30 := 0x397C
0002ded7: call @__fprintf_chk with return %0002ded9

0002ded9:
0002dedf: R0 := mem[R19, el]:u64
0002dee6: R1 := 1
0002deec: R2 := 0x14000
0002def3: R2 := R2 + 0xAC0
0002def8: R30 := 0x3990
0002defa: call @__fprintf_chk with return %0002defc

0002defc:
0002df02: R0 := mem[R19, el]:u64
0002df09: R1 := 1
0002df0f: R2 := 0x14000
0002df16: R2 := R2 + 0xB48
0002df1b: R30 := 0x39A4
0002df1d: call @__fprintf_chk with return %0002df1f

0002df1f:
0002df25: R0 := mem[R19, el]:u64
0002df2c: R1 := 1
0002df32: R2 := 0x14000
0002df39: R2 := R2 + 0xBA8
0002df3e: R30 := 0x39B8
0002df40: call @__fprintf_chk with return %0002df42

0002df42:
0002df48: R0 := mem[R19, el]:u64
0002df4f: R1 := 1
0002df55: R2 := 0x14000
0002df5c: R2 := R2 + 0xBF0
0002df61: R30 := 0x39CC
0002df63: call @__fprintf_chk with return %0002df65

0002df65:
0002df6b: R0 := mem[R19, el]:u64
0002df72: R1 := 1
0002df78: R2 := 0x14000
0002df7f: R2 := R2 + 0xC48
0002df84: R30 := 0x39E0
0002df86: call @__fprintf_chk with return %0002df88

0002df88:
0002df8e: R0 := mem[R19, el]:u64
0002df95: R1 := 1
0002df9b: R2 := 0x14000
0002dfa2: R2 := R2 + 0xC90
0002dfa7: R30 := 0x39F4
0002dfa9: call @__fprintf_chk with return %0002dfab

0002dfab:
0002dfb1: R0 := mem[R19, el]:u64
0002dfb7: R2 := 0x14000
0002dfbe: R2 := R2 + 0xCB8
0002dfc5: R1 := 1
0002dfca: R30 := 0x3A08
0002dfcc: call @__fprintf_chk with return %0002dfce

0002dfce:
0002dfd3: R0 := 1
0002dfd8: R30 := 0x3A10
0002dfda: call @exit with return %0002dfdc

00032151:
00032155: R0 := 0x27000
0003215d: R0 := mem[R0 + 0xF88, el]:u64
00032166: R26 := mem[R0, el]:u32
0003216e: mem := mem with [R31 + 0xF8, el]:u32 <- 31:0[R26]
00032176: #22082 := 1 + extend:64[~31:0[R23]] + extend:64[31:0[R26]]
0003217a: NF := 63:63[#22082]
0003217d: VF := 31:31[~31:0[R23]] & 31:31[R26] & ~63:63[#22082] |
          ~31:31[~31:0[R23]] & ~31:31[R26] & 63:63[#22082]
00032180: ZF := #22082 = 0
00032183: CF := 31:31[~31:0[R23]] & 31:31[R26] | 31:31[R26] & ~63:63[#22082]
          | 31:31[~31:0[R23]] & ~63:63[#22082]
00032192: #22084 := NF = VF
0003218c: when #22084 goto %00030575
0003afbc: goto %00032195

00032195:
0003afbd: goto %00030689

00030689:
00030699: #21501 := extend:64[31:0[R26] << 3]
0003069e: R27 := mem[R24 + #21501, el]:u64
000306a5: R1 := 0x3A
000306ac: R25 := extend:64[31:0[R26]] << 3
000306b4: R0 := R27
000306b9: R30 := 0x25E4
000306bb: call @strchr with return %000306bd

000306bd:
000306c3: mem := mem with [R31 + 0x100, el]:u64 <- R0
000306ca: R1 := 0
000306d6: #21507 := R0 = 0
000306d0: when #21507 goto %000306ce
0003afbe: goto %00030628

00030628:
00030638: R0 := R27
0003063d: R30 := 0x25F8
0003063f: call @parent_add with return %00030641

00030641:
00030647: R0 := mem[R31 + 0x100, el]:u64
00030650: R26 := mem[R31 + 0xF8, el]:u32
0003065b: #21493 := R0 = 0
00030655: when #21493 goto %00030549
0003afbf: goto %0003065e

00030549:
0003054f: R26 := extend:64[31:0[R26]] + 2
00030557: mem := mem with [R31 + 0xF8, el]:u32 <- 31:0[R26]
0003055f: #21467 := 1 + extend:64[~31:0[R26]] + extend:64[31:0[R23]]
00030563: NF := 63:63[#21467]
00030566: VF := 31:31[~31:0[R26]] & 31:31[R23] & ~63:63[#21467] |
          ~31:31[~31:0[R26]] & ~31:31[R23] & 63:63[#21467]
00030569: ZF := #21467 = 0
0003056c: CF := 31:31[~31:0[R26]] & 31:31[R23] | 31:31[R23] & ~63:63[#21467]
          | 31:31[~31:0[R26]] & ~63:63[#21467]
0003057d: #21469 := (NF <> VF | ZF) <> 0
00030577: when #21469 goto %00030575
0003afc0: goto %000305ed

000305ed:
000305f3: #21481 := extend:64[31:0[R26] << 3]
000305f8: R27 := mem[R24 + #21481, el]:u64
000305ff: R1 := 0x3A
00030606: R25 := extend:64[31:0[R26]] << 3
0003060e: R0 := R27
00030613: R30 := 0x2840
00030615: call @strchr with return %00030617

00030617:
0003061d: mem := mem with [R31 + 0x100, el]:u64 <- R0
00030624: R1 := 0
00030630: #21487 := ~R0 = 0
0003062a: when #21487 goto %00030628
0003afc1: goto %000306ce

000306ce:
000306de: R26 := extend:64[31:0[R26]] + 1
000306e6: #21511 := 1 + extend:64[~31:0[R23]] + extend:64[31:0[R26]]
000306ea: NF := 63:63[#21511]
000306ed: VF := 31:31[~31:0[R23]] & 31:31[R26] & ~63:63[#21511] |
          ~31:31[~31:0[R23]] & ~31:31[R26] & 63:63[#21511]
000306f0: ZF := #21511 = 0
000306f3: CF := 31:31[~31:0[R23]] & 31:31[R26] | 31:31[R26] & ~63:63[#21511]
          | 31:31[~31:0[R23]] & ~63:63[#21511]
00030702: #21513 := NF = VF
000306fc: when #21513 goto %00030628
0003afc2: goto %00030705

00030705:
0003070b: R25 := R24 + R25
00030711: R1 := 0
00030718: R2 := 0xA
00030720: R0 := mem[R25 + 8, el]:u64
00030725: R30 := 0x286C
00030727: call @strtol with return %00030729

00030729:
00030730: R1 := 31:0[R0]
00030734: goto %00030628

0003065e:
00030664: R26 := extend:64[31:0[R26]] + 1
0003066c: mem := mem with [R31 + 0xF8, el]:u32 <- 31:0[R26]
00030674: #21497 := 1 + extend:64[~31:0[R23]] + extend:64[31:0[R26]]
00030678: NF := 63:63[#21497]
0003067b: VF := 31:31[~31:0[R23]] & 31:31[R26] & ~63:63[#21497] |
          ~31:31[~31:0[R23]] & ~31:31[R26] & 63:63[#21497]
0003067e: ZF := #21497 = 0
00030681: CF := 31:31[~31:0[R23]] & 31:31[R26] | 31:31[R26] & ~63:63[#21497]
          | 31:31[~31:0[R23]] & ~63:63[#21497]
00030691: #21499 := NF <> VF
0003068b: when #21499 goto %00030689
0003afc3: goto %00030575

00030575:
00030588: #21470 := R21 = 0
00030582: when #21470 goto %0002f285
0003afc4: goto %0003058b

0002f285:
0002f289: R0 := 0x14000
0002f290: R0 := R0 + 0xD08
0002f295: R30 := 0x4054
0002f297: call @config_open with return %0002f299

0002f299:
0002f29f: R21 := R0
0002f2a6: R1 := R20 + 0x4D8
0002f2af: R0 := mem[R1 + 4, el]:u32
0002f2bb: #20886 := 31:0[R0] = 0
0002f2b5: when #20886 goto %0002f2b3
0003afc5: goto %00031b9b

0002f2b3:
0002f2c7: #20887 := R21 = 0
0002f2c1: when #20887 goto %0002f2bf
0003afc6: goto %00031b97

00031b97:
00031b99: goto %0003058b

00031b9b:
00031ba5: #21940 := R21 = 0
00031b9f: when #21940 goto %00031b9d
0003afc7: goto %00031bcd

00031b9d:
00031bab: R2 := 0x14000
00031bb2: R1 := 1
00031bb9: R2 := R2 + 0xD48
00031bc0: R0 := 3
00031bc5: R30 := 0x45D8
00031bc7: call @__syslog_chk with return %00031bc9

00031bc9:
00031bcb: goto %0002f2bf

00031bcd:
00031bd1: R1 := 0x14000
00031bd8: R0 := 1
00031bdf: R1 := R1 + 0xD18
00031be4: R30 := 0x4078
00031be6: call @__printf_chk with return %00031be8

00031be8:
00031bea: goto %0003058b

0003058b:
0003058f: R0 := 0x32
00030594: R30 := 0x2620
00030596: call @new with return %00030598

00030598:
0003059c: R1 := 0x14000
000305a3: R1 := R1 + 0xD70
000305ab: mem := mem with [R31 + 0x100, el]:u64 <- R0
000305b3: R0 := R21
000305b8: R30 := 0x2634
000305ba: call @config_pop with return %000305bc

000305bc:
000305c2: R23 := R0
000305cd: #21477 := R0 = 0
000305c7: when #21477 goto %0002fff3
0003afc8: goto %000305d0

000305d0:
000305d6: R0 := mem[R31 + 0x100, el]:u64
000305df: R1 := pad:32[mem[R0]]
000305ea: #21479 := 31:0[R1] = 0
000305e4: when #21479 goto %0002ffcb
0003afc9: goto %0002ffe1

0002ffcb:
0002ffd1: R1 := R23
0002ffd7: R2 := 0x32
0002ffdc: R30 := 0x3D28
0002ffde: call @strlcpy with return %0002ffe0

0002ffe0:
0002ffe3: goto %0002ffe1

0002ffe1:
0002ffea: R0 := R23
0002ffef: R30 := 0x2650
0002fff1: call @free with return %0002fff3

0002fff3:
0002fff9: R24 := mem[R31 + 0x100, el]:u64
0002ffff: R23 := 0x14000
00030006: R0 := R23 + 0xD78
0003000e: R1 := R24
00030013: R30 := 0x2664
00030015: call @strcasecmp with return %00030017

00030017:
0003001e: R1 := 31:0[R0]
00030026: R0 := R24
0003002d: #21331 := extend:64[31:0[R1]]
00030031: NF := 63:63[#21331]
00030034: VF := 31:31[R1] & ~63:63[#21331]
00030037: ZF := #21331 = 0
0003003a: CF := 31:31[R1] | 31:31[R1] & ~63:63[#21331] | ~63:63[#21331]
00030055: #21333 := ~ZF <> 0
00030056: goto %0003004d

0003004d:
0003004f: when #21333 goto %00030046
00030050: goto %0003004a

0003004a:
0003004b: R28 := 1
00030052: goto %0003004e

00030046:
00030047: R28 := 31:0[R28]
00030051: goto %0003004e

0003004e:
0003005c: R30 := 0x2678
0003005e: call @free with return %00030060

00030060:
00030064: R0 := 0x32
00030069: R30 := 0x2680
0003006b: call @new with return %0003006d

0003006d:
00030073: R2 := R0
00030079: R1 := 0x14000
00030081: R0 := R21
00030088: R1 := R1 + 0xD80
00030090: mem := mem with [R31 + 0x100, el]:u64 <- R2
00030095: R30 := 0x2698
00030097: call @config_pop with return %00030099

00030099:
0003009f: R24 := R0
000300ab: #21343 := R0 = 0
000300a5: when #21343 goto %000300a3
0003afca: goto %000300d7

000300d7:
000300dd: R0 := mem[R31 + 0x100, el]:u64
000300e6: R1 := pad:32[mem[R0]]
000300f2: #21350 := 31:0[R1] = 0
000300ec: when #21350 goto %000300ea
0003afcb: goto %0003010a

000300ea:
000300fa: R1 := R24
00030100: R2 := 0x32
00030105: R30 := 0x3C8C
00030107: call @strlcpy with return %00030109

00030109:
0003010c: goto %0003010a

0003010a:
00030113: R0 := R24
00030118: R30 := 0x26B4
0003011a: call @free with return %000300a3

000300a3:
000300b3: R24 := mem[R31 + 0x100, el]:u64
000300ba: R0 := R23 + 0xD78
000300c2: R1 := R24
000300c7: R30 := 0x26C4
000300c9: call @strcasecmp with return %000300cb

000300cb:
000300d4: #21348 := 31:0[R0] = 0
000300ce: when #21348 goto %0002f8c6
0003afcc: goto %0002f8dd

0002f8c6:
0002f8cb: R0 := R20 + 0x4D8
0002f8d2: R1 := 1
0002f8da: mem := mem with [R0 + 0x70, el]:u32 <- 31:0[R1]
0002f8df: goto %0002f8dd

0002f8dd:
0002f8e6: R0 := R24
0002f8ec: R23 := 0x14000
0002f8f3: R24 := R31 + 0x110
0002f8fa: R23 := R23 + 0xD90
0002f8ff: R30 := 0x26DC
0002f901: call @free with return %0002f903

0002f903:
0002f906: goto %0002f904

0002f904:
0002f90d: R1 := R23
0002f915: R0 := R21
0002f91a: R30 := 0x2700
0002f91c: call @config_pop with return %0002f91e

0002f91e:
0002f924: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002f92c: R1 := R0
0002f938: #21098 := ~R0 = 0
0002f932: when #21098 goto %0002f930
0003afcd: goto %0002f961

0002f961:
0002f965: R23 := 0x14000
0002f96b: R24 := 0x14000
0002f972: R26 := R23 + 0x100
0002f979: R24 := R24 + 0xD98
0002f980: R25 := R31 + 0x118
0002f985: goto %0002f983

0002f983:
0002f98c: R1 := R24
0002f994: R0 := R21
0002f999: R30 := 0x2748
0002f99b: call @config_pop with return %0002f99d

0002f99d:
0002f9a3: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002f9ab: R2 := R0
0002f9b7: #21115 := ~R0 = 0
0002f9b1: when #21115 goto %0002f9af
0003afce: goto %0002f9e8

0002f9e8:
0002f9ec: R24 := 0x14000
0002f9f2: R25 := 0x14000
0002f9f9: R24 := R24 + 0xDA0
0002fa00: R25 := R25 + 0x108
0002fa07: R26 := R31 + 0x120
0002fa0c: goto %0002fa0a

0002fa0a:
0002fa13: R1 := R24
0002fa1b: R0 := R21
0002fa20: R30 := 0x2790
0002fa22: call @config_pop with return %0002fa24

0002fa24:
0002fa2a: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002fa32: R2 := R0
0002fa3e: #21135 := ~R0 = 0
0002fa38: when #21135 goto %0002fa36
0003afcf: goto %0002fa6f

0002fa6f:
0002fa73: R24 := 0x14000
0002fa79: R26 := 0x14000
0002fa80: R24 := R24 + 0xDD0
0002fa87: R26 := R26 + 0xDB0
0002fa8c: goto %0002fa8a

0002fa8a:
0002fa93: R1 := R24
0002fa9b: R0 := R21
0002faa0: R30 := 0x27EC
0002faa2: call @config_pop with return %0002faa4

0002faa4:
0002faaa: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002fab6: #21152 := R0 = 0
0002fab0: when #21152 goto %0002faae
0003afd0: goto %00030453

0002faae:
0002fabd: R23 := R23 + 0x100
0002fac2: goto %0002fac0

0002fac0:
0002fac9: R1 := R23
0002fad1: R0 := R21
0002fad6: R30 := 0x2DF0
0002fad8: call @config_pop with return %0002fada

0002fada:
0002fae0: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002faec: #21159 := ~R0 = 0
0002fae6: when #21159 goto %0002fae4
0003afd1: goto %0002fb0b

0002fb0b:
0002fb11: R0 := mem[R31 + 0x128, el]:u64
0002fb1d: #21162 := R0 = 0
0002fb17: when #21162 goto %0002fb15
0003afd2: goto %0002fbda

0002fb15:
0002fb25: R23 := mem[R21, el]:u64
0002fb2b: R0 := 0x14000
0002fb33: mem := mem with [R31 + 0xD0, el]:u64 <- R0
0002fb3f: #21164 := R23 = 0
0002fb39: when #21164 goto %0002fb37
0003afd3: goto %00030353

0002fb37:
0002fb45: R0 := 0x14000
0002fb4d: mem := mem with [R31 + 0xD8, el]:u64 <- R0
0003afd4: goto %0002fb4f

00030353:
00030357: R1 := 0x14000
0003035e: R26 := R0 + 0xDE0
00030365: R28 := R1 + 0xDE8
0003036c: R27 := R31 + 0x128
00030374: mem := mem with [R31 + 0xD8, el]:u64 <- R1
00030379: goto %00030377

00030377:
00030380: R25 := mem[R23, el]:u64
00030388: R0 := R26
00030390: R1 := R25
00030395: R30 := 0x41CC
00030397: call @strcasecmp with return %00030399

00030399:
0003039f: mem := mem with [R31 + 0xF8, el]:u32 <- 31:0[R0]
000303a8: R24 := 31:0[R0]
000303b4: #21417 := 31:0[R0] = 0
000303ae: when #21417 goto %000303ac
0003afd5: goto %00030430

00030430:
00030436: R1 := R25
0003043e: R0 := R28
00030443: R30 := 0x41E4
00030445: call @strcasecmp with return %00030447

00030447:
00030450: #21434 := ~31:0[R0] = 0
0003044a: when #21434 goto %00030400
0003afd6: goto %000303ac

000303ac:
000303bc: R1 := mem[R23 + 8, el]:u64
000303c3: #21419 := extend:64[31:0[R24]]
000303c7: NF := 63:63[#21419]
000303ca: VF := 31:31[R24] & ~63:63[#21419]
000303cd: ZF := #21419 = 0
000303d0: CF := 31:31[R24] | 31:31[R24] & ~63:63[#21419] | ~63:63[#21419]
000303eb: #21421 := ZF
000303ec: goto %000303e3

000303e3:
000303e5: when #21421 goto %000303dc
000303e6: goto %000303e0

000303e0:
000303e1: R2 := 1
000303e8: goto %000303e4

000303dc:
000303dd: R2 := 0
000303e7: goto %000303e4

000303e4:
000303f5: R0 := R27
000303fa: R30 := 0x41FC
000303fc: call @acl_add with return %000303fe

000303fe:
00030408: #21425 := ~31:0[R0] = 0
00030402: when #21425 goto %00030400
0003afd7: goto %0003041e

0003041e:
00030423: R0 := 1
00030428: R30 := 0x4208
0003042a: call @myexit with return %0003042c

0003042c:
0003042e: goto %00030400

00030400:
00030410: R23 := mem[R23 + 0x18, el]:u64
0003041b: #21427 := R23 = 0
00030415: when #21427 goto %0002fb4f
0003afd8: goto %00030377

0002fb4f:
0002fb55: R0 := mem[R31 + 0xD0, el]:u64
0002fb5c: R25 := R0 + 0xDE0
0002fb61: goto %0002fb5f

0002fb5f:
0002fb68: R1 := R25
0002fb70: R0 := R21
0002fb75: R30 := 0x4230
0002fb77: call @config_pop with return %0002fb79

0002fb79:
0002fb7f: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002fb8b: #21172 := ~R0 = 0
0002fb85: when #21172 goto %0002fb83
0003afd9: goto %0002fb94

0002fb94:
0002fb9a: R0 := mem[R31 + 0xD8, el]:u64
0002fba1: R24 := R0 + 0xDE8
0002fba6: goto %0002fba4

0002fba4:
0002fbad: R1 := R24
0002fbb5: R0 := R21
0002fbba: R30 := 0x4254
0002fbbc: call @config_pop with return %0002fbbe

0002fbbe:
0002fbc4: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002fbd0: #21180 := ~R0 = 0
0002fbca: when #21180 goto %0002fbc8
0003afda: goto %0002fbd9

0002fbd9:
0002fbdc: goto %0002fbda

0002fbc8:
0002fbd5: R30 := 0x4248
0002fbd7: call @free with return %0002fba4

0002fb83:
0002fb90: R30 := 0x4224
0002fb92: call @free with return %0002fb5f

0002fbda:
0002fbe3: R0 := R21
0002fbe9: R1 := 0x14000
0002fbf0: R1 := R1 + 0xDD8
0002fbf5: R30 := 0x2E10
0002fbf7: call @config_pop with return %0002fbf9

0002fbf9:
0002fbff: R23 := R0
0002fc0b: #21187 := R0 = 0
0002fc05: when #21187 goto %0002fc03
0003afdb: goto %00030306

00030306:
0003030c: R0 := mem[R31 + 0x88, el]:u64
00030315: R0 := pad:32[mem[R0]]
00030321: #21399 := 31:0[R0] = 0
0003031b: when #21399 goto %00030319
0003afdc: goto %00030341

00030319:
00030329: R0 := mem[R31 + 0x88, el]:u64
00030331: R1 := R23
00030337: R2 := 0x32
0003033c: R30 := 0x3C7C
0003033e: call @strlcpy with return %00030340

00030340:
00030343: goto %00030341

00030341:
0003034a: R0 := R23
0003034f: R30 := 0x2E2C
00030351: call @free with return %0002fc03

0002fc03:
0002fc13: R0 := R21
0002fc19: R1 := 0x14000
0002fc20: R1 := R1 + 0xDF0
0002fc25: R30 := 0x2E3C
0002fc27: call @config_pop with return %0002fc29

0002fc29:
0002fc2f: R23 := R0
0002fc3b: #21194 := R0 = 0
0002fc35: when #21194 goto %0002fc33
0003afdd: goto %000302e9

000302e9:
000302ef: R0 := mem[R31 + 0x80, el]:u64
000302f8: R0 := pad:32[mem[R0]]
00030303: #21397 := 31:0[R0] = 0
000302fd: when #21397 goto %0002fe5c
0003afde: goto %0002fe7a

0002fe5c:
0002fe62: R0 := mem[R31 + 0x80, el]:u64
0002fe6a: R1 := R23
0002fe70: R2 := 0x32
0002fe75: R30 := 0x3D74
0002fe77: call @strlcpy with return %0002fe79

0002fe79:
0002fe7c: goto %0002fe7a

0002fe7a:
0002fe83: R0 := R23
0002fe88: R30 := 0x2E58
0002fe8a: call @free with return %0002fc33

0002fc33:
0002fc43: R0 := R21
0002fc49: R1 := 0x14000
0002fc50: R1 := R1 + 0xDF8
0002fc55: R30 := 0x2E68
0002fc57: call @config_pop with return %0002fc59

0002fc59:
0002fc5f: R23 := R0
0002fc6b: #21201 := R0 = 0
0002fc65: when #21201 goto %0002fc63
0003afdf: goto %000302cc

000302cc:
000302d2: R0 := mem[R31 + 0x68, el]:u64
000302db: R0 := pad:32[mem[R0]]
000302e6: #21395 := 31:0[R0] = 0
000302e0: when #21395 goto %0002ff9b
0003afe0: goto %0002ffb9

0002ff9b:
0002ffa1: R0 := mem[R31 + 0x68, el]:u64
0002ffa9: R1 := R23
0002ffaf: R2 := 0x32
0002ffb4: R30 := 0x3D18
0002ffb6: call @strlcpy with return %0002ffb8

0002ffb8:
0002ffbb: goto %0002ffb9

0002ffb9:
0002ffc2: R0 := R23
0002ffc7: R30 := 0x2E84
0002ffc9: call @free with return %0002fc63

0002fc63:
0002fc73: R0 := R21
0002fc79: R1 := 0x14000
0002fc80: R1 := R1 + 0xE08
0002fc85: R30 := 0x2E94
0002fc87: call @config_pop with return %0002fc89

0002fc89:
0002fc8f: R23 := R0
0002fc9b: #21208 := R0 = 0
0002fc95: when #21208 goto %0002fc93
0003afe1: goto %000302af

000302af:
000302b5: R0 := mem[R31 + 0xB0, el]:u64
000302be: R0 := pad:32[mem[R0]]
000302c9: #21393 := 31:0[R0] = 0
000302c3: when #21393 goto %0002ff6b
0003afe2: goto %0002ff89

0002ff6b:
0002ff71: R0 := mem[R31 + 0xB0, el]:u64
0002ff79: R1 := R23
0002ff7f: R2 := 0x32
0002ff84: R30 := 0x3D04
0002ff86: call @strlcpy with return %0002ff88

0002ff88:
0002ff8b: goto %0002ff89

0002ff89:
0002ff92: R0 := R23
0002ff97: R30 := 0x2EB0
0002ff99: call @free with return %0002fc93

0002fc93:
0002fca3: R0 := R21
0002fca9: R1 := 0x14000
0002fcb0: R1 := R1 + 0xE18
0002fcb5: R30 := 0x2EC0
0002fcb7: call @config_pop with return %0002fcb9

0002fcb9:
0002fcbf: R23 := R0
0002fccb: #21215 := R0 = 0
0002fcc5: when #21215 goto %0002fcc3
0003afe3: goto %00030292

00030292:
00030298: R0 := mem[R31 + 0xB8, el]:u64
000302a1: R0 := pad:32[mem[R0]]
000302ac: #21391 := 31:0[R0] = 0
000302a6: when #21391 goto %0002ff3b
0003afe4: goto %0002ff59

0002ff3b:
0002ff41: R0 := mem[R31 + 0xB8, el]:u64
0002ff49: R1 := R23
0002ff4f: R2 := 0x32
0002ff54: R30 := 0x3CF0
0002ff56: call @strlcpy with return %0002ff58

0002ff58:
0002ff5b: goto %0002ff59

0002ff59:
0002ff62: R0 := R23
0002ff67: R30 := 0x2EDC
0002ff69: call @free with return %0002fcc3

0002fcc3:
0002fcd3: R0 := R21
0002fcd9: R1 := 0x14000
0002fce0: R1 := R1 + 0xE20
0002fce5: R30 := 0x2EEC
0002fce7: call @config_pop with return %0002fce9

0002fce9:
0002fcef: R23 := R0
0002fcfb: #21222 := R0 = 0
0002fcf5: when #21222 goto %0002fcf3
0003afe5: goto %0002feee

0002feee:
0002fef4: R0 := mem[R31 + 0xC0, el]:u64
0002fefd: R0 := pad:32[mem[R0]]
0002ff09: #21286 := 31:0[R0] = 0
0002ff03: when #21286 goto %0002ff01
0003afe6: goto %0002ff29

0002ff01:
0002ff11: R0 := mem[R31 + 0xC0, el]:u64
0002ff19: R1 := R23
0002ff1f: R2 := 0x32
0002ff24: R30 := 0x3CDC
0002ff26: call @strlcpy with return %0002ff28

0002ff28:
0002ff2b: goto %0002ff29

0002ff29:
0002ff32: R0 := R23
0002ff37: R30 := 0x2F08
0002ff39: call @free with return %0002fcf3

0002fcf3:
0002fd03: R0 := R21
0002fd09: R1 := 0x14000
0002fd10: R1 := R1 + 0xE28
0002fd15: R30 := 0x2F18
0002fd17: call @config_pop with return %0002fd19

0002fd19:
0002fd1f: R23 := R0
0002fd2b: #21229 := R0 = 0
0002fd25: when #21229 goto %0002fd23
0003afe7: goto %0002fed1

0002fed1:
0002fed7: R0 := mem[R31 + 0x90, el]:u64
0002fee0: R0 := pad:32[mem[R0]]
0002feeb: #21284 := 31:0[R0] = 0
0002fee5: when #21284 goto %0002fe2c
0003afe8: goto %0002fe4a

0002fe2c:
0002fe32: R0 := mem[R31 + 0x90, el]:u64
0002fe3a: R1 := R23
0002fe40: R2 := 0x32
0002fe45: R30 := 0x3D60
0002fe47: call @strlcpy with return %0002fe49

0002fe49:
0002fe4c: goto %0002fe4a

0002fe4a:
0002fe53: R0 := R23
0002fe58: R30 := 0x2F34
0002fe5a: call @free with return %0002fd23

0002fd23:
0002fd33: R0 := R21
0002fd39: R1 := 0x14000
0002fd40: R1 := R1 + 0xE38
0002fd45: R30 := 0x2F44
0002fd47: call @config_pop with return %0002fd49

0002fd49:
0002fd4f: R23 := R0
0002fd5b: #21236 := R0 = 0
0002fd55: when #21236 goto %0002fd53
0003afe9: goto %0002feb4

0002feb4:
0002feba: R0 := mem[R31 + 0x78, el]:u64
0002fec3: R0 := pad:32[mem[R0]]
0002fece: #21282 := 31:0[R0] = 0
0002fec8: when #21282 goto %0002fdfc
0003afea: goto %0002fe1a

0002fdfc:
0002fe02: R0 := mem[R31 + 0x78, el]:u64
0002fe0a: R1 := R23
0002fe10: R2 := 0x32
0002fe15: R30 := 0x3D4C
0002fe17: call @strlcpy with return %0002fe19

0002fe19:
0002fe1c: goto %0002fe1a

0002fe1a:
0002fe23: R0 := R23
0002fe28: R30 := 0x2F60
0002fe2a: call @free with return %0002fd53

0002fd53:
0002fd61: R0 := 0x32
0002fd66: R30 := 0x2F68
0002fd68: call @new with return %0002fd6a

0002fd6a:
0002fd6e: R1 := 0x14000
0002fd75: R1 := R1 + 0xE48
0002fd7d: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002fd85: R0 := R21
0002fd8a: R30 := 0x2F7C
0002fd8c: call @config_pop with return %0002fd8e

0002fd8e:
0002fd94: R23 := R0
0002fda0: #21243 := R0 = 0
0002fd9a: when #21243 goto %0002fd98
0003afeb: goto %0002fdb7

0002fdb7:
0002fdbd: R0 := mem[R31 + 0x100, el]:u64
0002fdc6: R1 := pad:32[mem[R0]]
0002fdd2: #21247 := 31:0[R1] = 0
0002fdcc: when #21247 goto %0002fdca
0003afec: goto %0002fdea

0002fdca:
0002fdda: R1 := R23
0002fde0: R2 := 0x32
0002fde5: R30 := 0x3D38
0002fde7: call @strlcpy with return %0002fde9

0002fde9:
0002fdec: goto %0002fdea

0002fdea:
0002fdf3: R0 := R23
0002fdf8: R30 := 0x2F98
0002fdfa: call @free with return %0002fd98

0002fd98:
0002fda9: R0 := mem[R31 + 0xA0, el]:u32
0002fdb4: #21245 := 31:0[R0] = 0
0002fdae: when #21245 goto %0002f3ec
0003afed: goto %0002f4b1

0002f3ec:
0002f3f2: R0 := mem[R31 + 0x100, el]:u64
0002f3f9: R2 := 0
0002f3ff: R1 := 0
0002f404: R30 := 0x40C0
0002f407: call @strtoul with return %0002f409

0002f409:
0002f40f: R24 := R0
0002f417: R0 := mem[R31 + 0x100, el]:u64
0002f41e: R2 := 0
0002f424: R1 := 0
0002f429: R30 := 0x40D4
0002f42b: call @strtoul with return %0002f42d

0002f42d:
0002f433: R23 := 31:0[R0] << 0x28
0002f43b: R0 := mem[R31 + 0x100, el]:u64
0002f442: R2 := 0
0002f448: R1 := 0
0002f450: R23 := 31:0[R23] & 0xFF0000
0002f455: R30 := 0x40EC
0002f457: call @strtoul with return %0002f459

0002f459:
0002f45f: R1 := pad:64[31:8[R0]]
0002f467: R0 := mem[R31 + 0x100, el]:u64
0002f46f: R1 := 31:0[R1] & 0xFF00
0002f478: R23 := 31:0[R23] | 31:0[R1]
0002f47f: R2 := 0
0002f485: R1 := 0
0002f48a: R30 := 0x4108
0002f48c: call @strtoul with return %0002f48e

0002f48e:
0002f494: R0 := pad:64[31:24[R0]]
0002f49d: R24 := 31:0[R0] | 31:0[R24] << 0x18
0002f4a6: R0 := 31:0[R24] | 31:0[R23]
0002f4ae: mem := mem with [R31 + 0xA0, el]:u32 <- 31:0[R0]
0002f4b3: goto %0002f4b1

0002f4b1:
0002f4ba: R0 := mem[R31 + 0x100, el]:u64
0002f4bf: R30 := 0x2FA8
0002f4c1: call @free with return %0002f4c3

0002f4c3:
0002f4c7: R0 := 0x32
0002f4cc: R30 := 0x2FB0
0002f4ce: call @new with return %0002f4d0

0002f4d0:
0002f4d4: R1 := 0x14000
0002f4db: R1 := R1 + 0xE50
0002f4e3: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002f4eb: R0 := R21
0002f4f0: R30 := 0x2FC4
0002f4f2: call @config_pop with return %0002f4f4

0002f4f4:
0002f4fa: R23 := R0
0002f506: #20986 := R0 = 0
0002f500: when #20986 goto %0002f4fe
0003afee: goto %000317bd

000317bd:
000317c3: R0 := mem[R31 + 0x100, el]:u64
000317cc: R1 := pad:32[mem[R0]]
000317d7: #21885 := 31:0[R1] = 0
000317d1: when #21885 goto %0002fe8c
0003afef: goto %0002fea2

0002fe8c:
0002fe92: R1 := R23
0002fe98: R2 := 0x32
0002fe9d: R30 := 0x3D84
0002fe9f: call @strlcpy with return %0002fea1

0002fea1:
0002fea4: goto %0002fea2

0002fea2:
0002feab: R0 := R23
0002feb0: R30 := 0x2FE0
0002feb2: call @free with return %0002f4fe

0002f4fe:
0002f50d: R23 := R20 + 0x4D8
0002f515: R0 := mem[R23 + 0x78, el]:u64
0002f521: #20988 := R0 = 0
0002f51b: when #20988 goto %0002f519
0003aff0: goto %0002f536

0002f519:
0002f529: R0 := mem[R31 + 0x100, el]:u64
0002f532: R1 := pad:32[mem[R0]]
0002f53e: #20990 := 31:0[R1] = 0
0002f538: when #20990 goto %0002f536
0003aff1: goto %0002f890

0002f890:
0002f895: R1 := 1
0002f89c: R2 := 0xA
0002f8a4: mem := mem with [R23 + 0x74, el]:u32 <- 31:0[R1]
0002f8aa: R1 := 0
0002f8af: R30 := 0x3B1C
0002f8b1: call @strtol with return %0002f8b3

0002f8b3:
0002f8b8: R0 := extend:64[31:0[R0]]
0002f8c0: mem := mem with [R23 + 0x78, el]:u64 <- R0
0002f8c4: goto %0002f536

0002f536:
0002f546: R0 := mem[R31 + 0x100, el]:u64
0002f54d: R24 := R20 + 0x4D8
0002f553: R23 := 0x14000
0002f55a: R23 := R23 + 0xE60
0002f55f: R30 := 0x3000
0002f561: call @free with return %0002f563

0002f563:
0002f566: goto %0002f564

0002f564:
0002f56d: R1 := R23
0002f575: R0 := R21
0002f57a: R30 := 0x3018
0002f57c: call @config_pop with return %0002f57e

0002f57e:
0002f584: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002f58c: R1 := R0
0002f598: #21001 := R0 = 0
0002f592: when #21001 goto %0002f590
0003aff2: goto %0002f849

0002f590:
0002f59e: R24 := 0x14000
0002f5a4: R25 := 0x14000
0002f5ab: R24 := R24 + 0xEA0
0002f5b2: R25 := R25 + 0xE68
0002f5b9: R23 := R20 + 0x4D8
0003aff3: goto %0002f5bb

0002f5bb:
0002f5c1: R1 := R24
0002f5c9: R0 := R21
0002f5ce: R30 := 0x3060
0002f5d0: call @config_pop with return %0002f5d2

0002f5d2:
0002f5d8: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002f5e0: R26 := R0
0002f5ec: #21011 := R0 = 0
0002f5e6: when #21011 goto %0002f5e4
0003aff4: goto %0002f7b9

0002f7b9:
0002f7be: R1 := 0x3A
0002f7c3: R30 := 0x3074
0002f7c5: call @strchr with return %0002f7c7

0002f7c7:
0002f7cd: R2 := R0
0002f7d8: #21063 := R0 = 0
0002f7d2: when #21063 goto %0002f782
0003aff5: goto %0002f7db

0002f782:
0002f788: R3 := R26
0002f790: R2 := R25
0002f797: R1 := 1
0002f79e: R0 := 3
0002f7a3: R30 := 0x3170
0002f7a5: call @__syslog_chk with return %0002f7a7

0002f7a7:
0002f7a9: goto %0002f5bb

0002f7db:
0002f7e2: mem := mem with [R2] <- 0
0002f7e5: R2 := R2 + 1
0002f7ec: R4 := 1
0002f7f5: R3 := 31:0[R4]
0002f7fd: R0 := mem[R23 + 0x60, el]:u64
0002f805: R1 := mem[R31 + 0x100, el]:u64
0002f80a: R30 := 0x3094
0002f80c: call @hlist_add with return %0002f80e

0002f80e:
0002f814: mem := mem with [R23 + 0x60, el]:u64 <- R0
0002f81c: R1 := R24
0002f824: R0 := R21
0002f829: R30 := 0x30A4
0002f82b: call @config_pop with return %0002f82d

0002f82d:
0002f833: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002f83b: R26 := R0
0002f846: #21078 := ~R0 = 0
0002f840: when #21078 goto %0002f7b9
0003aff6: goto %0002f5e4

0002f5e4:
0002f5f2: R24 := 0x14000
0002f5f8: R26 := 0x14000
0002f5ff: R24 := R24 + 0xEB0
0002f606: R26 := R26 + 0xF8
0002f60d: R23 := R20 + 0x4D8
0002f614: R25 := 1
0002f619: goto %0002f617

0002f617:
0002f620: R1 := R24
0002f628: R0 := R21
0002f62d: R30 := 0x30E0
0002f62f: call @config_pop with return %0002f631

0002f631:
0002f637: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002f63f: R27 := R0
0002f64b: #21021 := R0 = 0
0002f645: when #21021 goto %0002f643
0003aff7: goto %0002f6a9

0002f643:
0002f653: R23 := mem[R21, el]:u64
0002f65e: #21023 := R23 = 0
0002f658: when #21023 goto %0002f2bf
0003aff8: goto %0002f661

0002f661:
0002f665: R24 := 0x14000
0002f66c: R24 := R24 + 0xEC0
0003aff9: goto %0002f670

0002f670:
0002f676: R3 := mem[R23, el]:u64
0002f67e: R2 := R24
0002f685: R1 := 1
0002f68c: R0 := 6
0002f691: R30 := 0x319C
0002f693: call @__syslog_chk with return %0002f695

0002f695:
0002f69b: R23 := mem[R23 + 0x18, el]:u64
0002f6a6: #21029 := ~R23 = 0
0002f6a0: when #21029 goto %0002f670
0003affa: goto %0002f2bf

0002f2bf:
0002f2cf: R0 := R21
0002f2d4: R30 := 0x31AC
0002f2d6: call @config_close with return %0002f2d8

0002f2d8:
0002f2de: R0 := mem[R31 + 0x70, el]:u64
0002f2e5: #20892 := R0
0002f2e9: NF := 63:63[#20892]
0002f2ec: VF := 63:63[R0] & ~63:63[#20892]
0002f2ef: ZF := #20892 = 0
0002f2f2: CF := 63:63[R0] | ~63:63[#20892] | 63:63[R0] & ~63:63[#20892]
0002f2fd: R0 := mem[R31 + 0xC8, el]:u32
0002f315: #20895 := ZF
0002f316: goto %0002f30d

0002f30d:
0002f30f: when #20895 goto %0002f306
0002f310: goto %0002f30a

0002f30a:
0002f30b: R21 := 1
0002f312: goto %0002f30e

0002f306:
0002f307: R21 := 0
0002f311: goto %0002f30e

0002f30e:
0002f323: #20896 := ~31:0[R0] = 0
0002f31d: when #20896 goto %0002f31b
0003affb: goto %00031a18

00031a18:
00031a1d: R0 := R20 + 0x4D8
00031a25: R0 := mem[R0 + 8, el]:u64
00031a31: #21925 := R0 = 0
00031a2b: when #21925 goto %00031a29
0003affc: goto %00031a5a

00031a29:
00031a3a: R1 := mem[R31 + 0xCC, el]:u32
00031a40: R0 := 0x14000
00031a47: R0 := R0 + 0xEE8
00031a50: R1 := 31:0[R21] | 31:0[R1]
00031a55: R30 := 0x454C
00031a57: call @croak with return %00031a59

00031a59:
00031a5c: goto %00031a5a

00031a5a:
00031a63: R0 := mem[R31 + 0x70, el]:u64
00031a6e: #21931 := ~R0 = 0
00031a68: when #21931 goto %0002f31b
0003affd: goto %00031a71

00031a71:
00031a77: R0 := mem[R31 + 0x118, el]:u64
00031a83: #21933 := R0 = 0
00031a7d: when #21933 goto %00031a7b
0003affe: goto %0002f31b

00031a7b:
00031a8c: R1 := mem[R31 + 0xCC, el]:u32
00031a92: R0 := 0x14000
00031a99: R0 := R0 + 0xF08
00031a9e: R30 := 0x4534
00031aa0: call @croak with return %00031aa2

00031aa2:
00031aa4: goto %0002f31b

0002f31b:
0002f32b: R23 := mem[R31 + 0x78, el]:u64
0002f334: R0 := pad:32[mem[R23]]
0002f340: #20898 := ~31:0[R0] = 0
0002f33a: when #20898 goto %0002f338
0003afff: goto %000319ed

000319ed:
000319f3: R0 := R23
000319f9: R1 := 0x32
000319fe: R30 := 0x31F4
00031a01: call @gethostname with return %00031a03

00031a03:
00031a0a: R0 := pad:32[mem[R23]]
00031a15: #21923 := 31:0[R0] = 0
00031a0f: when #21923 goto %000318e0
0003b000: goto %00031903

000318e0:
000318e4: R0 := 0x14000
000318eb: R1 := R0 + 0x88
000318f3: R0 := mem[R31 + 0x78, el]:u64
000318f9: R2 := 0x32
000318fe: R30 := 0x4164
00031900: call @strlcpy with return %00031902

00031902:
00031905: goto %00031903

00031903:
0003190c: R3 := mem[R31 + 0x78, el]:u64
00031912: R2 := 0x14000
00031919: R1 := 1
00031920: R2 := R2 + 0xF40
00031927: R0 := 6
0003192c: R30 := 0x3214
0003192e: call @__syslog_chk with return %0002f338

0002f338:
0002f348: R1 := mem[R31 + 0x88, el]:u64
0002f351: R0 := pad:32[mem[R1]]
0002f35d: #20900 := 31:0[R0] = 0
0002f357: when #20900 goto %0002f355
0003b001: goto %00031971

00031971:
00031975: R0 := 0x14000
0003197c: R0 := R0 + 0xF60
00031981: R30 := 0x322C
00031983: call @strcasecmp with return %00031985

00031985:
0003198e: #21914 := 31:0[R0] = 0
00031988: when #21914 goto %000316c0
0003b002: goto %00031991

000316c0:
000316c5: R0 := R20 + 0x4D8
000316cb: R1 := 0x15000
000316d2: R2 := 1
000316da: V0 := high:64[V0].mem[R1 + 0x3D0, el]:u64
000316e2: R0 := mem[R0 + 0x68, el]:u64
000316e9: R1 := R0 + 0x200
000316f1: mem := mem with [R0 + 0x134, el]:u32 <- 31:0[R2]
000316f9: mem := mem with [R1 - 0xD4, el]:u64 <- 63:0[V0]
000316fd: goto %0002f355

00031991:
00031997: R1 := mem[R31 + 0x88, el]:u64
0003199d: R0 := 0x13000
000319a4: R0 := R0 + 0x6F0
000319a9: R30 := 0x3240
000319ab: call @strcasecmp with return %000319ad

000319ad:
000319b6: #21916 := ~31:0[R0] = 0
000319b0: when #21916 goto %00030e80
0003b003: goto %000319b9

00030e80:
00030e86: R1 := mem[R31 + 0x88, el]:u64
00030e8c: R0 := 0x14000
00030e93: R0 := R0 + 0xF68
00030e98: R30 := 0x4408
00030e9a: call @strcasecmp with return %00030e9c

00030e9c:
00030ea6: #21672 := 31:0[R0] = 0
00030ea0: when #21672 goto %00030e9e
0003b004: goto %00030ed9

00030e9e:
00030ead: R0 := R20 + 0x4D8
00030eb4: R2 := 1
00030ebc: R0 := mem[R0 + 0x68, el]:u64
00030ec3: R1 := R0 + 0x200
00030ecb: mem := mem with [R0 + 0x134, el]:u32 <- 31:0[R2]
00030ed3: mem := mem with [R1 - 0xD4, el]:u64 <- 0
00030ed7: goto %0002f355

00030ed9:
00030edf: R1 := mem[R31 + 0x88, el]:u64
00030ee5: R0 := 0x14000
00030eec: R0 := R0 + 0xF70
00030ef1: R30 := 0x441C
00030ef3: call @strcasecmp with return %00030ef5

00030ef5:
00030eff: #21675 := ~31:0[R0] = 0
00030ef9: when #21675 goto %00030ef7
0003b005: goto %00031231

00030ef7:
00030f07: R1 := mem[R31 + 0x88, el]:u64
00030f0d: R0 := 0x14000
00030f14: R0 := R0 + 0xF78
00030f19: R30 := 0x468C
00030f1b: call @strcasecmp with return %00030f1d

00030f1d:
00030f27: #21677 := ~31:0[R0] = 0
00030f21: when #21677 goto %00030f1f
0003b006: goto %00031180

00030f1f:
00030f2d: R2 := 0x14000
00030f34: R2 := R2 + 0xF80
00030f3b: R1 := 1
00030f42: R0 := 3
00030f47: R30 := 0x46F0
00030f49: call @__syslog_chk with return %00030f4b

00030f4b:
00030f50: R0 := 1
00030f55: R30 := 0x46F8
00030f57: call @myexit with return %00030f59

00030f59:
00030f5b: goto %0002f355

00031180:
00031185: R0 := R20 + 0x4D8
0003118b: R1 := 0x15000
00031193: V0 := high:64[V0].mem[R1 + 0x3D8, el]:u64
0003119b: R0 := mem[R0 + 0x68, el]:u64
000311a2: R1 := R0 + 0x200
000311aa: mem := mem with [R0 + 0x134, el]:u32 <- 0
000311b2: mem := mem with [R1 - 0xD4, el]:u64 <- 63:0[V0]
000311b6: goto %0002f355

00031231:
00031236: R0 := R20 + 0x4D8
0003123c: R1 := 0x12000
00031244: V0 := high:64[V0].mem[R1 + 0x688, el]:u64
0003124c: R0 := mem[R0 + 0x68, el]:u64
00031253: R1 := R0 + 0x200
0003125b: mem := mem with [R0 + 0x134, el]:u32 <- 0
00031263: mem := mem with [R1 - 0xD4, el]:u64 <- 63:0[V0]
00031267: goto %0002f355

000319b9:
000319be: R0 := R20 + 0x4D8
000319c4: R1 := 0x15000
000319cc: V0 := high:64[V0].mem[R1 + 0x3D0, el]:u64
000319d4: R0 := mem[R0 + 0x68, el]:u64
000319db: R1 := R0 + 0x200
000319e3: mem := mem with [R0 + 0x134, el]:u32 <- 0
000319eb: mem := mem with [R1 - 0xD4, el]:u64 <- 63:0[V0]
0003b007: goto %0002f355

0002f355:
0002f365: R0 := mem[R31 + 0x120, el]:u64
0002f371: #20902 := R0 = 0
0002f36b: when #20902 goto %0002f369
0003b008: goto %00031956

00031956:
0003195b: R0 := R20 + 0x4D8
00031963: R0 := mem[R0 + 0x60, el]:u64
0003196e: #21913 := R0 = 0
00031968: when #21913 goto %00030e5a
0003b009: goto %0002f369

00030e5a:
00030e5e: R2 := 0x14000
00030e65: R1 := 1
00030e6c: R2 := R2 + 0xFA0
00030e73: R0 := 4
00030e78: R30 := 0x43F4
00030e7a: call @__syslog_chk with return %00030e7c

00030e7c:
00030e7e: goto %0002f369

0002f369:
0002f379: R0 := mem[R31 + 0x70, el]:u64
0002f385: #20904 := R0 = 0
0002f37f: when #20904 goto %0002f37d
0003b00a: goto %0002f3d4

0002f37d:
0002f38c: R3 := R20 + 0x4D8
0002f392: R2 := 0x14000
0002f399: R1 := 1
0002f3a0: R2 := R2 + 0xFD8
0002f3a7: R0 := 6
0002f3af: R5 := mem[R3 + 0x68, el]:u64
0002f3b8: R3 := mem[R5 + 0x12C, el]:u32
0002f3c1: R4 := mem[R5 + 0x130, el]:u32
0002f3ca: R5 := mem[R5 + 0x134, el]:u32
0002f3cf: R30 := 0x40AC
0002f3d1: call @__syslog_chk with return %0002f3d3

0002f3d3:
0002f3d6: goto %0002f3d4

0002f3d4:
0002f3de: R0 := mem[R31 + 0xA0, el]:u32
0002f3e9: #20910 := ~31:0[R0] = 0
0002f3e3: when #20910 goto %0002e143
0003b00b: goto %0002e18d

0002e18d:
0002e197: R0 := mem[R31 + 0xC8, el]:u32
0002e1a0: R21 := 31:0[R21] | 31:0[R0]
0002e1ac: #20427 := ~31:0[R21] = 0
0002e1a6: when #20427 goto %0002e1a4
0003b00c: goto %00032120

00032120:
00032127: R0 := mem[R31 + 0xCC, el]:u32
00032132: #22074 := 31:0[R0] = 0
0003212c: when #22074 goto %0002e3cc
0003b00d: goto %00032135

00032135:
0003213a: R0 := R20 + 0x4D8
00032143: R0 := mem[R0 + 0x70, el]:u32
0003214e: #22076 := 31:0[R0] = 0
00032148: when #22076 goto %0002e1a4
0003b00e: goto %0002e3cc

0002e1a4:
0002e1b3: R23 := R31 + 0x150
0002e1b9: R1 := 0x15000
0002e1c0: R0 := 1
0002e1c7: R1 := R1 + 0x30
0002e1cc: R30 := 0x3618
0002e1ce: call @__printf_chk with return %0002e1d0

0002e1d0:
0002e1d6: R1 := R23
0002e1dd: R0 := 0
0002e1e2: R30 := 0x3624
0002e1e5: call @tcgetattr with return %0002e1e7

0002e1e7:
0002e1ee: R2 := mem[R31 + 0x150, el]:u64
0002e1f2: R3 := mem[R31 + 0x158, el]:u64
0002e1fa: #20435 := R31 + 0x190
0002e1ff: mem := mem with [#20435, el]:u64 <- R2
0002e204: mem := mem with [#20435 + 8, el]:u64 <- R3
0002e20d: R1 := mem[R31 + 0x188, el]:u32
0002e216: R4 := mem[R31 + 0x160, el]:u64
0002e21a: R5 := mem[R31 + 0x168, el]:u64
0002e222: #20442 := R31 + 0x1A0
0002e227: mem := mem with [#20442, el]:u64 <- R4
0002e22c: mem := mem with [#20442 + 8, el]:u64 <- R5
0002e235: R0 := mem[R31 + 0x19C, el]:u32
0002e23e: R4 := mem[R31 + 0x170, el]:u64
0002e242: R5 := mem[R31 + 0x178, el]:u64
0002e249: R3 := 0xFFFFFFFFFFFFFFF6
0002e252: R0 := 31:0[R0] & 31:0[R3]
0002e259: R2 := R31 + 0x190
0002e261: R3 := mem[R31 + 0x180, el]:u64
0002e269: mem := mem with [R31 + 0x19C, el]:u32 <- 31:0[R0]
0002e270: R0 := 0
0002e278: #20453 := R31 + 0x1B0
0002e27d: mem := mem with [#20453, el]:u64 <- R4
0002e282: mem := mem with [#20453 + 8, el]:u64 <- R5
0002e28a: mem := mem with [R31 + 0x1C0, el]:u64 <- R3
0002e292: mem := mem with [R31 + 0x1C8, el]:u32 <- 31:0[R1]
0002e299: R1 := 1
0002e29e: R30 := 0x366C
0002e2a1: call @tcsetattr with return %0002e2a3

0002e2a3:
0002e2a7: R2 := 0x27000
0002e2ae: R1 := 0x32
0002e2b6: R24 := mem[R31 + 0x68, el]:u64
0002e2be: R2 := mem[R2 + 0xFA8, el]:u64
0002e2c6: R0 := R24
0002e2ce: R2 := mem[R2, el]:u64
0002e2d3: R30 := 0x3688
0002e2d5: call @fgets with return %0002e2d7

0002e2d7:
0002e2dd: R3 := R0
0002e2e5: R2 := R23
0002e2ec: R1 := 1
0002e2f3: R0 := 0
0002e2fb: mem := mem with [R31 + 0x100, el]:u64 <- R3
0002e300: R30 := 0x36A0
0002e302: call @tcsetattr with return %0002e304

0002e304:
0002e30a: R0 := R24
0002e30f: R30 := 0x36A8
0002e311: call @strlen with return %0002e313

0002e313:
0002e319: R0 := low:32[extend:64[31:0[R0]] - 1]
0002e321: mem := mem with [R31 + 0xF8, el]:u32 <- 31:0[R0]
0002e328: R1 := extend:64[31:0[R0]]
0002e330: #20471 := extend:64[31:0[R0]]
0002e336: R0 := pad:32[mem[R24 + #20471]]
0002e33d: #20472 := 0xFFFFFFFFFFFFFFF6 + extend:64[31:0[R0]]
0002e341: NF := 63:63[#20472]
0002e344: VF := 31:31[R0] & ~63:63[#20472]
0002e347: ZF := #20472 = 0
0002e34a: CF := 31:31[R0] | 31:31[R0] & ~63:63[#20472] | ~63:63[#20472]
0002e359: #20474 := ZF
0002e353: when #20474 goto %0002e351
0003b00f: goto %0002e3a6

0002e351:
0002e361: R2 := mem[R31 + 0x68, el]:u64
0002e369: #20476 := R1
0002e36e: mem := mem with [R2 + #20476] <- 0
0002e376: R0 := extend:64[mem[R31 + 0xF8, el]:u32]
0002e37d: R0 := R0 - 1
0002e385: #20477 := R0
0002e38b: R1 := pad:32[mem[R2 + #20477]]
0002e392: #20478 := 0xFFFFFFFFFFFFFFF3 + extend:64[31:0[R1]]
0002e396: NF := 63:63[#20478]
0002e399: VF := 31:31[R1] & ~63:63[#20478]
0002e39c: ZF := #20478 = 0
0002e39f: CF := 31:31[R1] | 31:31[R1] & ~63:63[#20478] | ~63:63[#20478]
0002e3ae: #20480 := ~ZF <> 0
0002e3a8: when #20480 goto %0002e3a6
0003b010: goto %0003210f

0003210f:
00032115: #22072 := R0
0003211a: mem := mem with [R2 + #22072] <- 0
0003211e: goto %0002e3a6

0002e3a6:
0002e3b4: R1 := 0x13000
0002e3bb: R0 := 1
0002e3c2: R1 := R1 + 0x8F0
0002e3c7: R30 := 0x36D0
0002e3c9: call @__printf_chk with return %0002e3cb

0002e3cb:
0002e3ce: goto %0002e3cc

0002e3cc:
0002e3d5: R0 := mem[R31 + 0x68, el]:u64
0002e3de: R0 := pad:32[mem[R0]]
0002e3ea: #20482 := ~31:0[R0] = 0
0002e3e4: when #20482 goto %0002e3e2
0003b011: goto %000320f2

0002e3e2:
0002e3f1: R23 := R20 + 0x4D8
0002e3f9: R0 := mem[R23 + 0x68, el]:u64
0002e402: R1 := mem[R0 + 0x130, el]:u32
0002e409: #20485 := extend:64[31:0[R1]]
0002e40d: NF := 63:63[#20485]
0002e410: VF := 31:31[R1] & ~63:63[#20485]
0002e413: ZF := #20485 = 0
0002e416: CF := 31:31[R1] | 31:31[R1] & ~63:63[#20485] | ~63:63[#20485]
0002e43f: #20487 := ZF
0002e440: goto %0002e437

0002e437:
0002e439: when #20487 goto %0002e41f
0002e43a: goto %0002e42b

0002e42b:
0002e42c: NF := 0
0002e42f: ZF := 0
0002e432: CF := 0
0002e435: VF := 0
0002e43c: goto %0002e438

0002e41f:
0002e420: NF := 63:63[extend:64[31:0[R21]] + 0]
0002e423: VF := 31:31[R21] & ~63:63[extend:64[31:0[R21]] + 0]
0002e426: ZF := extend:64[31:0[R21]] + 0 = 0
0002e429: CF := 31:31[R21] | ~63:63[extend:64[31:0[R21]] + 0] | 31:31[R21] &
          ~63:63[extend:64[31:0[R21]] + 0]
0002e43b: goto %0002e438

0002e438:
0002e44d: #20490 := ZF
0002e447: when #20490 goto %0002e445
0003b012: goto %00032089

0002e445:
0002e456: R0 := mem[R0 + 0x134, el]:u32
0002e462: #20492 := ~31:0[R0] = 0
0002e45c: when #20492 goto %0002e45a
0003b013: goto %000301af

00032089:
0003208f: R0 := mem[R31 + 0x68, el]:u64
00032094: R30 := 0x36F4
00032096: call @ntlm_hash_nt_password with return %00032098

00032098:
0003209e: mem := mem with [R31 + 0x100, el]:u64 <- R0
000320a6: R1 := mem[R23 + 0x68, el]:u64
000320ad: #22064 := R1
000320b1: NF := 63:63[#22064]
000320b4: VF := 63:63[R1] & ~63:63[#22064]
000320b7: ZF := #22064 = 0
000320ba: CF := 63:63[R1] | ~63:63[#22064] | 63:63[R1] & ~63:63[#22064]
000320e2: #22066 := ~ZF <> 0
000320e3: goto %000320da

000320da:
000320dc: when #22066 goto %000320c2
000320dd: goto %000320ce

000320ce:
000320cf: NF := 0
000320d2: ZF := 1
000320d5: CF := 0
000320d8: VF := 0
000320df: goto %000320db

000320c2:
000320c3: NF := 63:63[R0 + 0]
000320c6: VF := 63:63[R0] & ~63:63[R0 + 0]
000320c9: ZF := R0 + 0 = 0
000320cc: CF := 63:63[R0] | ~63:63[R0 + 0] | 63:63[R0] & ~63:63[R0 + 0]
000320de: goto %000320db

000320db:
000320ef: #22069 := ~ZF <> 0
000320e9: when #22069 goto %0003011c
0003b014: goto %0003014c

0003011c:
00030123: R2 := mem[R0, el]:u64
00030127: R3 := mem[R0 + 8, el]:u64
0003012f: #21361 := R1 + 0xC8
00030134: mem := mem with [#21361, el]:u64 <- R2
00030139: mem := mem with [#21361 + 8, el]:u64 <- R3
00030141: R2 := mem[R0 + 0xD, el]:u64
00030149: mem := mem with [R1 + 0xD5, el]:u64 <- R2
0003014e: goto %0003014c

0003014c:
00030152: R30 := 0x370C
00030154: call @free with return %00030156

00030156:
0003015b: R0 := R20 + 0x4D8
00030163: R0 := mem[R0 + 0x68, el]:u64
0003016c: R0 := mem[R0 + 0x134, el]:u32
00030173: #21365 := extend:64[31:0[R0]]
00030177: NF := 63:63[#21365]
0003017a: VF := 31:31[R0] & ~63:63[#21365]
0003017d: ZF := #21365 = 0
00030180: CF := 31:31[R0] | 31:31[R0] & ~63:63[#21365] | ~63:63[#21365]
000301a9: #21367 := ZF
000301aa: goto %000301a1

000301a1:
000301a3: when #21367 goto %00030189
000301a4: goto %00030195

00030195:
00030196: NF := 0
00030199: ZF := 0
0003019c: CF := 0
0003019f: VF := 0
000301a6: goto %000301a2

00030189:
0003018a: NF := 63:63[extend:64[31:0[R21]] + 0]
0003018d: VF := 31:31[R21] & ~63:63[extend:64[31:0[R21]] + 0]
00030190: ZF := extend:64[31:0[R21]] + 0 = 0
00030193: CF := 31:31[R21] | ~63:63[extend:64[31:0[R21]] + 0] | 31:31[R21] &
          ~63:63[extend:64[31:0[R21]] + 0]
000301a5: goto %000301a2

000301a2:
000301b7: #21370 := ZF
000301b1: when #21370 goto %000301af
0003b015: goto %0002e45a

000301af:
000301be: R0 := R20 + 0x4D8
000301c6: R0 := mem[R0 + 0x68, el]:u64
000301cf: R0 := mem[R0 + 0x12C, el]:u32
000301da: #21373 := 31:0[R0] = 0
000301d4: when #21373 goto %0002e56e
0003b016: goto %000301dd

000301dd:
000301e0: goto %000301de

0002e45a:
0002e46a: R0 := mem[R31 + 0x68, el]:u64
0002e46f: R30 := 0x372C
0002e471: call @ntlm_hash_lm_password with return %0002e473

0002e473:
0002e479: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002e480: R1 := R20 + 0x4D8
0002e487: #20494 := R0
0002e48b: NF := 63:63[#20494]
0002e48e: VF := 63:63[R0] & ~63:63[#20494]
0002e491: ZF := #20494 = 0
0002e494: CF := 63:63[R0] | ~63:63[#20494] | 63:63[R0] & ~63:63[#20494]
0002e49e: R1 := mem[R1 + 0x68, el]:u64
0002e4c4: #20497 := ~ZF <> 0
0002e4c5: goto %0002e4bc

0002e4bc:
0002e4be: when #20497 goto %0002e4a4
0002e4bf: goto %0002e4b0

0002e4b0:
0002e4b1: NF := 0
0002e4b4: ZF := 1
0002e4b7: CF := 0
0002e4ba: VF := 0
0002e4c1: goto %0002e4bd

0002e4a4:
0002e4a5: NF := 63:63[R1 + 0]
0002e4a8: VF := 63:63[R1] & ~63:63[R1 + 0]
0002e4ab: ZF := R1 + 0 = 0
0002e4ae: CF := 63:63[R1] | ~63:63[R1 + 0] | 63:63[R1] & ~63:63[R1 + 0]
0002e4c0: goto %0002e4bd

0002e4bd:
0002e4d2: #20500 := ~ZF <> 0
0002e4cc: when #20500 goto %0002e4ca
0003b017: goto %0002e50b

0002e4ca:
0002e4d9: R2 := R1 + 0x96
0002e4e2: R4 := mem[R0, el]:u64
0002e4e6: R5 := mem[R0 + 8, el]:u64
0002e4ee: #20505 := R2
0002e4f3: mem := mem with [#20505, el]:u64 <- R4
0002e4f8: mem := mem with [#20505 + 8, el]:u64 <- R5
0002e500: R2 := mem[R0 + 0xD, el]:u64
0002e508: mem := mem with [R1 + 0xA3, el]:u64 <- R2
0002e50d: goto %0002e50b

0002e50b:
0002e511: R30 := 0x3748
0002e513: call @free with return %0002e515

0002e515:
0002e51a: R0 := R20 + 0x4D8
0002e522: R0 := mem[R0 + 0x68, el]:u64
0002e52b: R0 := mem[R0 + 0x12C, el]:u32
0002e532: #20509 := extend:64[31:0[R0]]
0002e536: NF := 63:63[#20509]
0002e539: VF := 31:31[R0] & ~63:63[#20509]
0002e53c: ZF := #20509 = 0
0002e53f: CF := 31:31[R0] | 31:31[R0] & ~63:63[#20509] | ~63:63[#20509]
0002e568: #20511 := ZF
0002e569: goto %0002e560

0002e560:
0002e562: when #20511 goto %0002e548
0002e563: goto %0002e554

0002e554:
0002e555: NF := 0
0002e558: ZF := 0
0002e55b: CF := 0
0002e55e: VF := 0
0002e565: goto %0002e561

0002e548:
0002e549: NF := 63:63[extend:64[31:0[R21]] + 0]
0002e54c: VF := 31:31[R21] & ~63:63[extend:64[31:0[R21]] + 0]
0002e54f: ZF := extend:64[31:0[R21]] + 0 = 0
0002e552: CF := 31:31[R21] | ~63:63[extend:64[31:0[R21]] + 0] | 31:31[R21] &
          ~63:63[extend:64[31:0[R21]] + 0]
0002e564: goto %0002e561

0002e561:
0002e576: #20514 := ZF
0002e570: when #20514 goto %0002e56e
0003b018: goto %000301de

000301de:
000301e7: R2 := mem[R31 + 0x68, el]:u64
000301ef: R1 := mem[R31 + 0x80, el]:u64
000301f7: R0 := mem[R31 + 0x90, el]:u64
000301fc: R30 := 0x3770
000301fe: call @ntlm2_hash_password with return %00030200

00030200:
00030206: mem := mem with [R31 + 0x100, el]:u64 <- R0
0003020d: R1 := R20 + 0x4D8
00030214: #21377 := R0
00030218: NF := 63:63[#21377]
0003021b: VF := 63:63[R0] & ~63:63[#21377]
0003021e: ZF := #21377 = 0
00030221: CF := 63:63[R0] | ~63:63[#21377] | 63:63[R0] & ~63:63[#21377]
0003022b: R1 := mem[R1 + 0x68, el]:u64
00030251: #21380 := ~ZF <> 0
00030252: goto %00030249

00030249:
0003024b: when #21380 goto %00030231
0003024c: goto %0003023d

0003023d:
0003023e: NF := 0
00030241: ZF := 1
00030244: CF := 0
00030247: VF := 0
0003024e: goto %0003024a

00030231:
00030232: NF := 63:63[R1 + 0]
00030235: VF := 63:63[R1] & ~63:63[R1 + 0]
00030238: ZF := R1 + 0 = 0
0003023b: CF := 63:63[R1] | ~63:63[R1 + 0] | 63:63[R1] & ~63:63[R1 + 0]
0003024d: goto %0003024a

0003024a:
0003025f: #21383 := ~ZF <> 0
00030259: when #21383 goto %00030257
0003b019: goto %00030288

00030257:
00030266: R1 := R1 + 0xFA
0003026f: R2 := mem[R0, el]:u64
00030273: R3 := mem[R0 + 8, el]:u64
0003027b: #21388 := R1
00030280: mem := mem with [#21388, el]:u64 <- R2
00030285: mem := mem with [#21388 + 8, el]:u64 <- R3
0003028a: goto %00030288

00030288:
0003028e: R30 := 0x378C
00030290: call @free with return %0002e56e

0002e56e:
0002e57e: R21 := mem[R31 + 0x68, el]:u64
0002e586: R0 := R21
0002e58b: R30 := 0x3798
0002e58d: call @strlen with return %0002e58f

0002e58f:
0002e594: R1 := 0
0002e59c: R2 := R0
0002e5a4: R0 := R21
0002e5a9: R30 := 0x37A8
0002e5ab: call @memset with return %0002e5ad

0002e5ad:
0002e5b0: goto %0002e5ae

000320f2:
000320f8: R0 := mem[R31 + 0xB0, el]:u64
00032101: R0 := pad:32[mem[R0]]
0003210c: #22071 := ~31:0[R0] = 0
00032106: when #22071 goto %000317da
0003b01a: goto %00031834

000317da:
000317e0: R0 := mem[R31 + 0xB0, el]:u64
000317e7: R1 := 8
000317ec: R30 := 0x4128
000317ee: call @scanmem with return %000317f0

000317f0:
000317f6: mem := mem with [R31 + 0x100, el]:u64 <- R0
00031802: #21887 := R0 = 0
000317fc: when #21887 goto %000317fa
0003b01b: goto %00031811

000317fa:
00031808: R2 := 0x15000
0003180f: R2 := R2 + 0x40
0003b01c: goto %000311c6

00031811:
00031816: R1 := R20 + 0x4D8
0003181e: R1 := mem[R1 + 0x68, el]:u64
0003182a: #21889 := R1 = 0
00031824: when #21889 goto %00031822
0003b01d: goto %00031930

00031930:
00031935: R1 := R1 + 0xFA
0003193e: R2 := mem[R0, el]:u64
00031942: R3 := mem[R0 + 8, el]:u64
0003194a: #21910 := R1
0003194f: mem := mem with [#21910, el]:u64 <- R2
00031954: mem := mem with [#21910 + 8, el]:u64 <- R3
0003b01e: goto %00031822

00031822:
0003182f: R30 := 0x414C
00031831: call @free with return %00031833

00031833:
00031836: goto %00031834

00031834:
0003183d: R0 := mem[R31 + 0xB8, el]:u64
00031846: R0 := pad:32[mem[R0]]
00031852: #21891 := ~31:0[R0] = 0
0003184c: when #21891 goto %0003184a
0003b01f: goto %000318a1

0003184a:
0003185a: R0 := mem[R31 + 0xB8, el]:u64
00031861: R1 := 8
00031866: R30 := 0x42F0
00031868: call @scanmem with return %0003186a

0003186a:
00031870: mem := mem with [R31 + 0x100, el]:u64 <- R0
0003187b: #21893 := R0 = 0
00031875: when #21893 goto %000311b8
0003b020: goto %0003187e

000311b8:
000311bc: R2 := 0x15000
000311c3: R2 := R2 + 0x68
000311c8: goto %000311c6

0003187e:
00031883: R1 := R20 + 0x4D8
0003188b: R1 := mem[R1 + 0x68, el]:u64
00031897: #21895 := R1 = 0
00031891: when #21895 goto %0003188f
0003b021: goto %000318c1

000318c1:
000318c8: R2 := mem[R0, el]:u64
000318cc: R3 := mem[R0 + 8, el]:u64
000318d4: #21902 := R1 + 0xC8
000318d9: mem := mem with [#21902, el]:u64 <- R2
000318de: mem := mem with [#21902 + 8, el]:u64 <- R3
0003b022: goto %0003188f

0003188f:
0003189c: R30 := 0x4310
0003189e: call @free with return %000318a0

000318a0:
000318a3: goto %000318a1

000318a1:
000318aa: R0 := mem[R31 + 0xC0, el]:u64
000318b3: R0 := pad:32[mem[R0]]
000318be: #21897 := ~31:0[R0] = 0
000318b8: when #21897 goto %00031747
0003b023: goto %0002e5ae

00031747:
0003174d: R0 := mem[R31 + 0xC0, el]:u64
00031754: R1 := 8
00031759: R30 := 0x3B94
0003175b: call @scanmem with return %0003175d

0003175d:
00031763: mem := mem with [R31 + 0x100, el]:u64 <- R0
0003176e: #21875 := R0 = 0
00031768: when #21875 goto %000311ec
0003b024: goto %00031771

000311ec:
000311f0: R2 := 0x15000
000311f7: R2 := R2 + 0x90
000311fb: goto %000311c6

000311c6:
000311ce: R1 := 1
000311d5: R0 := 3
000311da: R30 := 0x4668
000311dc: call @__syslog_chk with return %000311de

000311de:
000311e3: R0 := 1
000311e8: R30 := 0x4670
000311ea: call @exit with return %000311ec

00031771:
00031776: R1 := R20 + 0x4D8
0003177e: R1 := mem[R1 + 0x68, el]:u64
0003178a: #21877 := R1 = 0
00031784: when #21877 goto %00031782
0003b025: goto %00031797

00031797:
0003179c: R1 := R1 + 0x96
000317a5: R2 := mem[R0, el]:u64
000317a9: R3 := mem[R0 + 8, el]:u64
000317b1: #21882 := R1
000317b6: mem := mem with [#21882, el]:u64 <- R2
000317bb: mem := mem with [#21882 + 8, el]:u64 <- R3
0003b026: goto %00031782

00031782:
0003178f: R30 := 0x3BB8
00031791: call @free with return %00031793

00031793:
00031795: goto %0002e5ae

0002e5ae:
0002e5b6: R0 := R20 + 0x4D8
0002e5be: R1 := mem[R31 + 0x90, el]:u64
0002e5c6: R0 := mem[R0 + 0x68, el]:u64
0002e5cd: #20527 := R1
0002e5d1: NF := 63:63[#20527]
0002e5d4: VF := 63:63[R1] & ~63:63[#20527]
0002e5d7: ZF := #20527 = 0
0002e5da: CF := 63:63[R1] | ~63:63[#20527] | 63:63[R1] & ~63:63[#20527]
0002e602: #20529 := ~ZF <> 0
0002e603: goto %0002e5fa

0002e5fa:
0002e5fc: when #20529 goto %0002e5e2
0002e5fd: goto %0002e5ee

0002e5ee:
0002e5ef: NF := 0
0002e5f2: ZF := 1
0002e5f5: CF := 0
0002e5f8: VF := 0
0002e5ff: goto %0002e5fb

0002e5e2:
0002e5e3: NF := 63:63[R0 + 0]
0002e5e6: VF := 63:63[R0] & ~63:63[R0 + 0]
0002e5e9: ZF := R0 + 0 = 0
0002e5ec: CF := 63:63[R0] | ~63:63[R0 + 0] | 63:63[R0] & ~63:63[R0 + 0]
0002e5fe: goto %0002e5fb

0002e5fb:
0002e610: #20532 := ZF
0002e60a: when #20532 goto %0002e608
0003b027: goto %0003207c

0003207c:
00032080: R2 := 0x32
00032085: R30 := 0x32F4
00032087: call @strlcpy with return %0002e608

0002e608:
0002e617: R0 := R20 + 0x4D8
0002e61f: R1 := mem[R31 + 0x80, el]:u64
0002e627: R0 := mem[R0 + 0x68, el]:u64
0002e62e: #20535 := R0
0002e632: NF := 63:63[#20535]
0002e635: VF := 63:63[R0] & ~63:63[#20535]
0002e638: ZF := #20535 = 0
0002e63b: CF := 63:63[R0] | ~63:63[#20535] | 63:63[R0] & ~63:63[#20535]
0002e663: #20537 := ~ZF <> 0
0002e664: goto %0002e65b

0002e65b:
0002e65d: when #20537 goto %0002e643
0002e65e: goto %0002e64f

0002e64f:
0002e650: NF := 0
0002e653: ZF := 1
0002e656: CF := 0
0002e659: VF := 0
0002e660: goto %0002e65c

0002e643:
0002e644: NF := 63:63[R1 + 0]
0002e647: VF := 63:63[R1] & ~63:63[R1 + 0]
0002e64a: ZF := R1 + 0 = 0
0002e64d: CF := 63:63[R1] | ~63:63[R1 + 0] | 63:63[R1] & ~63:63[R1 + 0]
0002e65f: goto %0002e65c

0002e65c:
0002e671: #20540 := ZF
0002e66b: when #20540 goto %0002e669
0003b028: goto %00032068

00032068:
0003206d: R0 := R0 + 0x32
00032073: R2 := 0x32
00032078: R30 := 0x3318
0003207a: call @strlcpy with return %0002e669

0002e669:
0002e678: R0 := R20 + 0x4D8
0002e680: R0 := mem[R0 + 0x68, el]:u64
0002e68c: #20542 := R0 = 0
0002e686: when #20542 goto %0002e684
0003b029: goto %0003204c

0003204c:
00032052: R1 := mem[R31 + 0x78, el]:u64
00032059: R0 := R0 + 0x64
0003205f: R2 := 0x32
00032064: R30 := 0x3334
00032066: call @strlcpy with return %0002e684

0002e684:
0002e694: R0 := mem[R31 + 0x90, el]:u64
0002e699: R30 := 0x333C
0002e69b: call @free with return %0002e69d

0002e69d:
0002e6a3: R0 := mem[R31 + 0x80, el]:u64
0002e6a8: R30 := 0x3344
0002e6aa: call @free with return %0002e6ac

0002e6ac:
0002e6b2: R0 := mem[R31 + 0x78, el]:u64
0002e6b7: R30 := 0x334C
0002e6b9: call @free with return %0002e6bb

0002e6bb:
0002e6c1: R0 := mem[R31 + 0x68, el]:u64
0002e6c6: R30 := 0x3354
0002e6c8: call @free with return %0002e6ca

0002e6ca:
0002e6d0: R0 := mem[R31 + 0xB0, el]:u64
0002e6d5: R30 := 0x335C
0002e6d7: call @free with return %0002e6d9

0002e6d9:
0002e6df: R0 := mem[R31 + 0xB8, el]:u64
0002e6e4: R30 := 0x3364
0002e6e6: call @free with return %0002e6e8

0002e6e8:
0002e6ee: R0 := mem[R31 + 0xC0, el]:u64
0002e6f3: R30 := 0x336C
0002e6f5: call @free with return %0002e6f7

0002e6f7:
0002e6fd: R0 := mem[R31 + 0x88, el]:u64
0002e702: R30 := 0x3374
0002e704: call @free with return %0002e706

0002e706:
0002e70c: R0 := mem[R31 + 0x70, el]:u64
0002e717: #20552 := ~R0 = 0
0002e711: when #20552 goto %0002dfdc
0003b02a: goto %0002e71a

0002dfdc:
0002dfe1: R23 := 0
0002dfe6: R30 := 0x3A18
0002dfe8: call @magic_auth_detect with return %0002dfea

0002e71a:
0002e721: R0 := mem[R31 + 0xC8, el]:u32
0002e72d: #20554 := ~31:0[R0] = 0
0002e727: when #20554 goto %0002e725
0003b02b: goto %00032024

0002e725:
0002e734: R19 := R20 + 0x4D8
0002e73b: R2 := 8
0002e741: R1 := 0x10
0002e748: R23 := 0
0002e750: R0 := mem[R19 + 0x68, el]:u64
0002e757: R0 := R0 + 0x96
0002e75c: R30 := 0x445C
0002e75e: call @printmem with return %0002e760

0002e760:
0002e764: R1 := 0x13000
0002e76c: R2 := R0
0002e773: R1 := R1 + 0x2D0
0002e77a: R0 := 1
0002e782: mem := mem with [R31 + 0x100, el]:u64 <- R2
0002e787: R30 := 0x4474
0002e789: call @__printf_chk with return %0002e78b

0002e78b:
0002e791: R0 := mem[R31 + 0x100, el]:u64
0002e796: R30 := 0x447C
0002e798: call @free with return %0002e79a

0002e79a:
0002e7a0: R0 := mem[R19 + 0x68, el]:u64
0002e7a7: R2 := 8
0002e7ad: R1 := 0x10
0002e7b4: R0 := R0 + 0xC8
0002e7b9: R30 := 0x4490
0002e7bb: call @printmem with return %0002e7bd

0002e7bd:
0002e7c1: R1 := 0x13000
0002e7c9: R2 := R0
0002e7d0: R1 := R1 + 0x2B8
0002e7d7: R0 := 1
0002e7df: mem := mem with [R31 + 0x100, el]:u64 <- R2
0002e7e4: R30 := 0x44A8
0002e7e6: call @__printf_chk with return %0002e7e8

0002e7e8:
0002e7ee: R0 := mem[R31 + 0x100, el]:u64
0002e7f3: R30 := 0x44B0
0002e7f5: call @free with return %0002e7f7

0002e7f7:
0002e7fd: R0 := mem[R19 + 0x68, el]:u64
0002e804: R2 := 8
0002e80a: R1 := 0x10
0002e811: R0 := R0 + 0xFA
0002e816: R30 := 0x44C4
0002e818: call @printmem with return %0002e81a

0002e81a:
0002e820: R3 := mem[R19 + 0x68, el]:u64
0002e828: R2 := R0
0002e82e: R1 := 0x15000
0002e835: R0 := 1
0002e83c: R1 := R1 + 0xB8
0002e843: R4 := R3 + 0x32
0002e84b: mem := mem with [R31 + 0x100, el]:u64 <- R2
0002e850: R30 := 0x44E4
0002e852: call @__printf_chk with return %0002e854

0002e854:
0002e85a: R0 := mem[R31 + 0x100, el]:u64
0002e85f: R30 := 0x44EC
0002e861: call @free with return %0002e863

0002e863:
0002e865: goto %0002dfea

00032024:
0003202d: #22058 := 31:0[R19] = 0
00032027: when #22058 goto %000316ff
0003b02c: goto %00032030

000316ff:
00031704: R2 := 0x18
0003170b: R1 := 0x23
00031711: R0 := 0x14000
00031718: R0 := R0 + 0x88
0003171d: R30 := 0x3B70
0003171f: call @openlog with return %00031721

00031721:
00031726: R1 := 1
0003172c: R2 := 0x15000
00031733: R0 := 6
0003173a: R2 := R2 + 0x328
0003173f: R30 := 0x3B84
00031741: call @__syslog_chk with return %00031743

00031743:
00031745: goto %0002e916

00032030:
00032035: R0 := R20 + 0x4D8
0003203e: R0 := mem[R0 + 4, el]:u32
00032049: #22060 := ~31:0[R0] = 0
00032043: when #22060 goto %00031aa6
0003b02d: goto %00031ac2

00031aa6:
00031aaa: R1 := 0x15000
00031ab1: R0 := 1
00031ab8: R1 := R1 + 0xF8
00031abd: R30 := 0x4560
00031abf: call @__printf_chk with return %00031ac1

00031ac1:
00031ac4: goto %00031ac2

00031ac2:
00031ac8: R30 := 0x3398
00031acb: call @fork with return %00031acd

00031acd:
00031ad3: mem := mem with [R31 + 0xF8, el]:u32 <- 31:0[R0]
00031ada: #21935 := 1 + extend:64[31:0[R0]]
00031ade: NF := 63:63[#21935]
00031ae1: VF := ~31:31[R0] & 63:63[#21935]
00031ae4: ZF := #21935 = 0
00031ae7: CF := 31:31[R0] & ~63:63[#21935]
00031af6: #21937 := ZF
00031af0: when #21937 goto %00031aee
0003b02e: goto %00031b79

00031aee:
00031afc: R0 := 0x15000
00031b03: R0 := R0 + 0x120
00031b08: R30 := 0x4648
00031b0b: call @perror with return %00031b0d

00031b0d:
00031b12: R0 := 1
00031b17: R30 := 0x4650
00031b19: call @myexit with return %00031b1b

00031b1b:
00031b1e: goto %00031b1c

00031b79:
00031b83: #21939 := ~31:0[R0] = 0
00031b7d: when #21939 goto %00031b7b
0003b02f: goto %00031b1c

00031b7b:
00031b8a: R0 := 0
00031b8f: R30 := 0x45E4
00031b91: call @myexit with return %00031b93

00031b93:
00031b95: goto %00031b1c

00031b1c:
00031b22: R30 := 0x33AC
00031b25: call @setsid with return %00031b27

00031b27:
00031b2c: R0 := 0
00031b31: R30 := 0x33B4
00031b33: call @umask with return %00031b35

00031b35:
00031b39: R0 := 0x12000
00031b40: R0 := R0 + 0x508
00031b45: R30 := 0x33C0
00031b48: call @chdir with return %00031b4a

00031b4a:
00031b4e: R0 := 0x15000
00031b55: R1 := 2
00031b5c: R0 := R0 + 0x140
00031b61: R30 := 0x33D0
00031b63: call @open with return %00031b65

00031b65:
00031b6b: mem := mem with [R31 + 0xF8, el]:u32 <- 31:0[R0]
00031b76: #21938 := ~31:31[R0]
00031b70: when #21938 goto %0002e867
0003b030: goto %0002e8c8

0002e867:
0002e86c: R1 := 0
0002e871: R30 := 0x44F8
0002e874: call @dup2 with return %0002e876

0002e876:
0002e87d: R0 := mem[R31 + 0xF8, el]:u32
0002e884: R1 := 1
0002e889: R30 := 0x4504
0002e88b: call @dup2 with return %0002e88d

0002e88d:
0002e894: R0 := mem[R31 + 0xF8, el]:u32
0002e89b: R1 := 2
0002e8a0: R30 := 0x4510
0002e8a2: call @dup2 with return %0002e8a4

0002e8a4:
0002e8ab: R0 := mem[R31 + 0xF8, el]:u32
0002e8b2: #20574 := 0xFFFFFFFFFFFFFFFE + extend:64[31:0[R0]]
0002e8b6: NF := 63:63[#20574]
0002e8b9: VF := 31:31[R0] & ~63:63[#20574]
0002e8bc: ZF := #20574 = 0
0002e8bf: CF := 31:31[R0] | 31:31[R0] & ~63:63[#20574] | ~63:63[#20574]
0002e8d0: #20576 := (NF <> VF | ZF) <> 0
0002e8ca: when #20576 goto %0002e8c8
0003b031: goto %00032019

00032019:
0003201c: R30 := 0x4520
0003201e: call @close with return %00032020

00032020:
00032022: goto %0002e8c8

0002e8c8:
0002e8d7: R2 := 0x18
0002e8de: R1 := 3
0002e8e4: R0 := 0x14000
0002e8eb: R0 := R0 + 0x88
0002e8f0: R30 := 0x33EC
0002e8f2: call @openlog with return %0002e8f4

0002e8f4:
0002e8f8: R2 := 0x15000
0002e8ff: R1 := 1
0002e906: R2 := R2 + 0x350
0002e90d: R0 := 6
0002e912: R30 := 0x3400
0002e914: call @__syslog_chk with return %0002e916

0002e916:
0002e91c: R0 := mem[R31 + 0xA8, el]:u64
0002e925: R0 := pad:32[mem[R0]]
0002e931: #20578 := ~31:0[R0] = 0
0002e92b: when #20578 goto %0002e929
0003b032: goto %0002ea8f

0002e929:
0002e936: R30 := 0x4318
0002e939: call @getuid with return %0002e93b

0002e93b:
0002e945: #20579 := ~31:0[R0] = 0
0002e93f: when #20579 goto %0002e93d
0003b033: goto %0002e951

0002e93d:
0002e94a: R30 := 0x45EC
0002e94d: call @geteuid with return %0002e94f

0002e94f:
0002e959: #20580 := 31:0[R0] = 0
0002e953: when #20580 goto %0002e951
0003b034: goto %00031fc9

00031fc9:
00031fcc: R30 := 0x45F4
00031fce: call @getuid with return %00031fd0

00031fd0:
00031fd7: R19 := 31:0[R0]
00031fdc: R30 := 0x45FC
00031fdf: call @getgid with return %00031fe1

00031fe1:
00031fe8: R4 := 31:0[R0]
00031ff1: R3 := 31:0[R19]
00031ff7: R2 := 0x15000
00031ffe: R1 := 1
00032005: R2 := R2 + 0x150
0003200c: R0 := 4
00032011: R30 := 0x4618
00032013: call @__syslog_chk with return %00032015

00032015:
00032017: goto %0002ea8f

0002e951:
0002e95e: R30 := 0x4320
0002e960: call @__ctype_b_loc with return %0002e962

0002e962:
0002e968: R3 := mem[R31 + 0xA8, el]:u64
0002e970: R0 := mem[R0, el]:u64
0002e979: R1 := pad:32[mem[R3]]
0002e981: #20583 := R1 << 1
0002e987: R0 := mem[R0 + #20583, el]:u16
0002e993: #20584 := ~11:11[R0]
0002e98d: when #20584 goto %0002e98b
0003b035: goto %00031f77

0002e98b:
0002e99b: R0 := mem[R31 + 0xA8, el]:u64
0002e9a0: R30 := 0x4588
0002e9a3: call @getpwnam with return %0002e9a5

0002e9a5:
0002e9ab: R19 := R0
0002e9b7: #20589 := R0 = 0
0002e9b1: when #20589 goto %0002e9af
0003b036: goto %00031f62

00031f62:
00031f69: R21 := mem[R0 + 0x10, el]:u32
00031f74: #22036 := ~31:0[R21] = 0
00031f6e: when #22036 goto %0002e9fa
0003b037: goto %0002e9af

0002e9af:
0002e9bf: R3 := mem[R31 + 0xA8, el]:u64
0002e9c5: R2 := 0x15000
0002e9cc: R2 := R2 + 0x1A8
0002e9d3: R1 := 1
0002e9da: R0 := 3
0002e9df: R30 := 0x45B0
0002e9e1: call @__syslog_chk with return %0002e9e3

0002e9e3:
0002e9e8: R0 := 1
0002e9ed: R30 := 0x45B8
0002e9ef: call @myexit with return %0002e9f1

0002e9f1:
0002e9f8: R21 := mem[R19 + 0x10, el]:u32
0003b038: goto %0002e9fa

0002e9fa:
0002ea01: R19 := mem[R19 + 0x14, el]:u32
0002ea06: goto %0002ea04

00031f77:
00031f7d: R0 := R3
00031f84: R2 := 0xA
00031f8a: R1 := 0
00031f8f: R30 := 0x4344
00031f91: call @strtol with return %00031f93

00031f93:
00031f99: R19 := R0
00031fa0: #22043 := extend:64[31:0[R0]]
00031fa4: NF := 63:63[#22043]
00031fa7: VF := 31:31[R0] & ~63:63[#22043]
00031faa: ZF := #22043 = 0
00031fad: CF := 31:31[R0] | 31:31[R0] & ~63:63[#22043] | ~63:63[#22043]
00031fb9: R21 := 31:0[R0]
00031fc6: #22048 := (NF <> VF | ZF) <> 0
00031fc0: when #22048 goto %000311fd
0003b039: goto %0002ea04

000311fd:
00031201: R2 := 0x15000
00031208: R2 := R2 + 0x180
0003120f: R1 := 1
00031216: R0 := 3
0003121b: R30 := 0x46D0
0003121d: call @__syslog_chk with return %0003121f

0003121f:
00031224: R0 := 1
00031229: R30 := 0x46D8
0003122b: call @myexit with return %0003122d

0003122d:
0003122f: goto %0002ea04

0002ea04:
0002ea0e: R0 := 31:0[R19]
0002ea13: R30 := 0x435C
0002ea16: call @setgid with return %0002ea18

0002ea18:
0002ea1f: R0 := 31:0[R21]
0002ea24: R30 := 0x4364
0002ea27: call @setuid with return %0002ea29

0002ea29:
0002ea2f: mem := mem with [R31 + 0xF8, el]:u32 <- 31:0[R0]
0002ea34: R30 := 0x436C
0002ea36: call @__errno_location with return %0002ea38

0002ea38:
0002ea3f: R0 := mem[R0, el]:u32
0002ea44: R30 := 0x4374
0002ea46: call @strerror with return %0002ea48

0002ea48:
0002ea4e: R5 := R0
0002ea57: R4 := 31:0[R19]
0002ea5e: R0 := 6
0002ea67: R3 := 31:0[R21]
0002ea6d: R2 := 0x15000
0002ea74: R1 := 1
0002ea7b: R2 := R2 + 0x1C8
0002ea80: R30 := 0x4394
0002ea82: call @__syslog_chk with return %0002ea84

0002ea84:
0002ea8b: R0 := mem[R31 + 0xF8, el]:u32
0002ea97: #20610 := 31:0[R0] = 0
0002ea91: when #20610 goto %0002ea8f
0003b03a: goto %00031f2e

00031f2e:
00031f32: R2 := 0x15000
00031f39: R2 := R2 + 0x1E8
00031f40: R1 := 1
00031f47: R0 := 3
00031f4c: R30 := 0x43B0
00031f4e: call @__syslog_chk with return %00031f50

00031f50:
00031f55: R0 := 1
00031f5a: R30 := 0x43B8
00031f5c: call @myexit with return %00031f5e

00031f5e:
00031f60: goto %0002ea8f

0002ea8f:
0002ea9f: R0 := mem[R31 + 0x98, el]:u64
0002eaa8: R0 := pad:32[mem[R0]]
0002eab4: #20612 := ~31:0[R0] = 0
0002eaae: when #20612 goto %0002eaac
0003b03b: goto %0002ebe0

0002eaac:
0002eabb: R0 := 0
0002eac0: R30 := 0x4268
0002eac3: call @umask with return %0002eac5

0002eac5:
0002eacb: R0 := mem[R31 + 0x98, el]:u64
0002ead2: R2 := 0x1A4
0002ead9: R1 := 0x241
0002eade: R30 := 0x4278
0002eae1: call @open with return %0002eae3

0002eae3:
0002eaea: R21 := 31:0[R0]
0002eaf6: #20617 := ~~31:31[R0]
0002eaf0: when #20617 goto %0002eaee
0003b03c: goto %0002eb29

0002eaee:
0002eafc: R2 := 0x15000
0002eb03: R2 := R2 + 0x1F8
0002eb0a: R1 := 1
0002eb11: R0 := 3
0002eb16: R30 := 0x4630
0002eb18: call @__syslog_chk with return %0002eb1a

0002eb1a:
0002eb1f: R0 := 1
0002eb24: R30 := 0x4638
0002eb26: call @myexit with return %0002eb28

0002eb28:
0002eb2b: goto %0002eb29

0002eb29:
0002eb30: R0 := 0x32
0002eb35: R30 := 0x4288
0002eb37: call @new with return %0002eb39

0002eb39:
0002eb3f: R19 := R0
0002eb47: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002eb4c: R30 := 0x4294
0002eb4f: call @getpid with return %0002eb51

0002eb51:
0002eb58: R5 := 31:0[R0]
0002eb5e: R3 := 0xFFFFFFFFFFFFFFFF
0002eb65: R2 := 1
0002eb6b: R1 := 0x32
0002eb73: R0 := R19
0002eb79: R4 := 0x15000
0002eb80: R4 := R4 + 0x2D0
0002eb85: R30 := 0x42B4
0002eb87: call @__snprintf_chk with return %0002eb89

0002eb89:
0002eb8f: R19 := mem[R31 + 0x100, el]:u64
0002eb97: R0 := R19
0002eb9c: R30 := 0x42C0
0002eb9e: call @strlen with return %0002eba0

0002eba0:
0002eba6: R1 := R19
0002ebae: R2 := R0
0002ebb7: R0 := 31:0[R21]
0002ebbc: R30 := 0x42D0
0002ebbe: call @write with return %0002ebc0

0002ebc0:
0002ebc6: R0 := mem[R31 + 0x100, el]:u64
0002ebcb: R30 := 0x42D8
0002ebcd: call @free with return %0002ebcf

0002ebcf:
0002ebd6: R0 := 31:0[R21]
0002ebdb: R30 := 0x42E0
0002ebdd: call @close with return %0002ebdf

0002ebdf:
0002ebe2: goto %0002ebe0

0002ebe0:
0002ebe7: R1 := 1
0002ebee: R0 := 0xD
0002ebf4: R19 := 0x10000
0002ebf9: R30 := 0x3428
0002ebfc: call @signal with return %0002ebfe

0002ebfe:
0002ec03: R19 := R19 + 0x498
0002ec0a: R0 := 2
0002ec12: R1 := R19
0002ec17: R30 := 0x3438
0002ec19: call @signal with return %0002ec1b

0002ec1b:
0002ec21: R1 := R19
0002ec28: R0 := 0xF
0002ec2d: R30 := 0x3444
0002ec2f: call @signal with return %0002ec31

0002ec31:
0002ec36: R27 := R31 + 0xFC
0002ec3e: R1 := R19
0002ec45: R26 := R31 + 0x140
0002ec4c: R19 := R31 + 0x210
0002ec53: R23 := 0
0002ec5a: R22 := 0
0002ec61: R0 := 1
0002ec66: R30 := 0x3464
0002ec68: call @signal with return %0002ec6a

0002ec6a:
0002ec6e: R0 := 0
0002ec73: R30 := 0x346C
0002ec75: call @time with return %0002ec77

0002ec77:
0002ec7a: R30 := 0x3470
0002ec7d: call @srandom with return %0002ec7f

0002ec7f:
0002ec86: R0 := mem[R20 + 0x4D8, el]:u32
0002ec92: #20654 := 31:0[R0] = 0
0002ec8c: when #20654 goto %0002ec8a
0003b03d: goto %00031edb

00031edb:
00031ee0: #22029 := 0xFFFFFFFFFFFFFFFF + extend:64[31:0[R0]]
00031ee4: NF := 63:63[#22029]
00031ee7: VF := 31:31[R0] & ~63:63[#22029]
00031eea: ZF := #22029 = 0
00031eed: CF := 31:31[R0] | 31:31[R0] & ~63:63[#22029] | ~63:63[#22029]
00031f1e: #22031 := (NF <> VF | ZF) <> 0
00031f1f: goto %00031f16

00031f16:
00031f18: when #22031 goto %00031ef9
00031f19: goto %00031f0a

00031f0a:
00031f0b: NF := 0
00031f0e: ZF := 1
00031f11: CF := 0
00031f14: VF := 0
00031f1b: goto %00031f17

00031ef9:
00031efa: #22032 := ~31:0[R23]
00031eff: NF := 63:63[extend:64[31:0[R22]] + extend:64[#22032] + 1]
00031f02: VF := 31:31[R22] & 31:31[#22032] & ~63:63[extend:64[31:0[R22]] +
          extend:64[#22032] + 1] | ~31:31[R22] & ~31:31[#22032] &
          63:63[extend:64[31:0[R22]] + extend:64[#22032] + 1]
00031f05: ZF := extend:64[31:0[R22]] + extend:64[#22032] + 1 = 0
00031f08: CF := 31:31[R22] & 31:31[#22032] | 31:31[#22032] &
          ~63:63[extend:64[31:0[R22]] + extend:64[#22032] + 1] | 31:31[R22] &
          ~63:63[extend:64[31:0[R22]] + extend:64[#22032] + 1]
00031f1a: goto %00031f17

00031f17:
00031f2b: #22034 := ZF
00031f25: when #22034 goto %0002dfea
0003b03e: goto %0002ec8a

0002dfea:
0002dff0: R0 := mem[R31 + 0x98, el]:u64
0002dff9: R0 := pad:32[mem[R0]]
0002e005: #20395 := ~31:0[R0] = 0
0002dfff: when #20395 goto %0002dffd
0003b03f: goto %0002e018

0002dffd:
0002e00d: R0 := mem[R31 + 0x98, el]:u64
0002e012: R30 := 0x3AF8
0002e015: call @unlink with return %0002e017

0002e017:
0002e01a: goto %0002e018

0002e018:
0002e022: R3 := 31:0[R22] - 31:0[R23]
0002e028: R2 := 0x15000
0002e02f: R2 := R2 + 0x300
0002e036: R1 := 1
0002e03d: R20 := R20 + 0x4D8
0002e044: R0 := 6
0002e04b: R19 := R20 + 0x90
0002e050: R30 := 0x3A44
0002e052: call @__syslog_chk with return %0002e054

0002e054:
0002e05a: R0 := R19
0002e05f: R30 := 0x3A4C
0002e061: call @pthread_mutex_lock with return %0002e063

0002e063:
0002e069: R0 := mem[R20 + 0xC0, el]:u64
0002e06e: R30 := 0x3A54
0002e070: call @plist_free with return %0002e072

0002e072:
0002e078: R0 := R19
0002e07d: R30 := 0x3A5C
0002e07f: call @pthread_mutex_unlock with return %0002e081

0002e081:
0002e087: R0 := mem[R20 + 0x88, el]:u64
0002e08c: R30 := 0x3A64
0002e08e: call @hlist_free with return %0002e090

0002e090:
0002e096: R0 := mem[R20 + 0x80, el]:u64
0002e09b: R30 := 0x3A6C
0002e09d: call @plist_free with return %0002e09f

0002e09f:
0002e0a5: R0 := mem[R20 + 0x18, el]:u64
0002e0aa: R30 := 0x3A74
0002e0ac: call @plist_free with return %0002e0ae

0002e0ae:
0002e0b4: R0 := mem[R31 + 0x110, el]:u64
0002e0b9: R30 := 0x3A7C
0002e0bb: call @plist_free with return %0002e0bd

0002e0bd:
0002e0c3: R0 := mem[R31 + 0x118, el]:u64
0002e0c8: R30 := 0x3A84
0002e0ca: call @plist_free with return %0002e0cc

0002e0cc:
0002e0d2: R0 := mem[R31 + 0x120, el]:u64
0002e0d7: R30 := 0x3A8C
0002e0d9: call @plist_free with return %0002e0db

0002e0db:
0002e0e1: R0 := mem[R31 + 0x128, el]:u64
0002e0e6: R30 := 0x3A94
0002e0e8: call @plist_free with return %0002e0ea

0002e0ea:
0002e0f0: R0 := mem[R31 + 0xA8, el]:u64
0002e0f5: R30 := 0x3A9C
0002e0f7: call @free with return %0002e0f9

0002e0f9:
0002e0ff: R0 := mem[R31 + 0x98, el]:u64
0002e104: R30 := 0x3AA4
0002e106: call @free with return %0002e108

0002e108:
0002e10e: R0 := mem[R31 + 0x70, el]:u64
0002e113: R30 := 0x3AAC
0002e115: call @free with return %0002e117

0002e117:
0002e11d: R0 := mem[R20 + 0x68, el]:u64
0002e122: R30 := 0x3AB4
0002e124: call @free with return %0002e126

0002e126:
0002e12c: R0 := mem[R20 + 8, el]:u64
0002e131: R30 := 0x3ABC
0002e133: call @plist_free with return %0002e135

0002e135:
0002e13a: R0 := 0
0002e13f: R30 := 0x3AC4
0002e141: call @exit with return %0002e143

0002e143:
0002e149: R23 := R0
0002e151: R3 := 7:0[R0].15:8[R0].23:16[R0].31:24[R0]
0002e157: R2 := 0x15000
0002e15e: R0 := 6
0002e165: R2 := R2 + 0x10
0002e16c: R1 := 1
0002e171: R30 := 0x3AE0
0002e173: call @__syslog_chk with return %0002e175

0002e175:
0002e17a: R0 := R20 + 0x4D8
0002e182: R0 := mem[R0 + 0x68, el]:u64
0002e18a: mem := mem with [R0 + 0x138, el]:u32 <- 31:0[R23]
0002e18f: goto %0002e18d

0002ec8a:
0002ec98: V0 := 0
0002ec9e: R21 := 1
0002eca6: R24 := mem[R31 + 0x118, el]:u64
0002ecae: #20663 := R31 + 0x210
0002ecb3: mem := mem with [#20663, el]:u128 <- V0
0002ecb8: mem := mem with [#20663 + 0x10, el]:u128 <- V0
0002ecc0: #20668 := R31 + 0x230
0002ecc5: mem := mem with [#20668, el]:u128 <- V0
0002ecca: mem := mem with [#20668 + 0x10, el]:u128 <- V0
0002ecd2: #20673 := R31 + 0x250
0002ecd7: mem := mem with [#20673, el]:u128 <- V0
0002ecdc: mem := mem with [#20673 + 0x10, el]:u128 <- V0
0002ece4: #20678 := R31 + 0x270
0002ece9: mem := mem with [#20678, el]:u128 <- V0
0002ecee: mem := mem with [#20678 + 0x10, el]:u128 <- V0
0002ecfa: #20680 := R24 = 0
0002ecf4: when #20680 goto %0002ecf2
0003b040: goto %00031e88

00031e88:
0003b041: goto %00031e8a

00031e8a:
00031e90: R0 := mem[R24, el]:u64
00031e95: R30 := 0x34B0
00031e97: call @__fdelt_chk with return %00031e99

00031e99:
00031e9f: R1 := mem[R24, el]:u64
00031ea7: #22023 := R0 << 3
00031eac: R2 := mem[R19 + #22023, el]:u64
00031eb4: R24 := mem[R24 + 0x10, el]:u64
00031ebc: R1 := R21 << R1 % 0x40
00031ec4: R1 := R1 | R2
00031ecd: mem := mem with [R19 + (R0 << 3), el]:u64 <- R1
00031ed8: #22028 := ~R24 = 0
00031ed2: when #22028 goto %00031e8a
0003b042: goto %0002ecf2

0002ecf2:
0002ed02: R24 := mem[R31 + 0x120, el]:u64
0002ed08: R21 := 1
0002ed14: #20682 := R24 = 0
0002ed0e: when #20682 goto %0002ed0c
0003b043: goto %00031e37

00031e37:
00031e3d: R0 := mem[R24, el]:u64
00031e42: R30 := 0x34E0
00031e44: call @__fdelt_chk with return %00031e46

00031e46:
00031e4c: R1 := mem[R24, el]:u64
00031e54: #22014 := R0 << 3
00031e59: R2 := mem[R19 + #22014, el]:u64
00031e61: R24 := mem[R24 + 0x10, el]:u64
00031e69: R1 := R21 << R1 % 0x40
00031e71: R1 := R1 | R2
00031e7a: mem := mem with [R19 + (R0 << 3), el]:u64 <- R1
00031e85: #22019 := ~R24 = 0
00031e7f: when #22019 goto %00031e37
0003b044: goto %0002ed0c

0002ed0c:
0002ed1c: R24 := mem[R31 + 0x110, el]:u64
0002ed22: R21 := 1
0002ed2e: #20684 := R24 = 0
0002ed28: when #20684 goto %0002ed26
0003b045: goto %00031de6

00031de6:
00031dec: R0 := mem[R24, el]:u64
00031df1: R30 := 0x3510
00031df3: call @__fdelt_chk with return %00031df5

00031df5:
00031dfb: R1 := mem[R24, el]:u64
00031e03: #22005 := R0 << 3
00031e08: R2 := mem[R19 + #22005, el]:u64
00031e10: R24 := mem[R24 + 0x10, el]:u64
00031e18: R1 := R21 << R1 % 0x40
00031e20: R1 := R1 | R2
00031e29: mem := mem with [R19 + (R0 << 3), el]:u64 <- R1
00031e34: #22010 := ~R24 = 0
00031e2e: when #22010 goto %00031de6
0003b046: goto %0002ed26

0002ed26:
0002ed34: R0 := 0x15000
0002ed3b: R4 := R31 + 0x130
0002ed43: R1 := R19
0002ed49: R3 := 0
0002ed52: V0 := mem[R0 + 0x3E0, el]:u64.mem[R0 + 0x3E8, el]:u64
0002ed58: R2 := 0
0002ed5f: R0 := 0x400
0002ed67: mem := mem with [R31 + 0x130, el]:u128 <- V0
0002ed6c: R30 := 0x3550
0002ed6e: call @select with return %0002ed70

0002ed70:
0002ed75: #20690 := extend:64[31:0[R0]]
0002ed79: NF := 63:63[#20690]
0002ed7c: VF := 31:31[R0] & ~63:63[#20690]
0002ed7f: ZF := #20690 = 0
0002ed82: CF := 31:31[R0] | 31:31[R0] & ~63:63[#20690] | ~63:63[#20690]
0002ed93: #20692 := (NF = VF & ~ZF) <> 0
0002ed8d: when #20692 goto %0002ed8b
0003b047: goto %00031dc5

0002ed8b:
0002ed99: R25 := 0x15000
0002eda0: R0 := R25 + 0x260
0002eda7: R21 := R31 + 0x1D0
0002edae: R24 := 0
0002edb6: mem := mem with [R31 + 0x78, el]:u64 <- R0
0002edbd: R0 := 0
0002edc5: mem := mem with [R31 + 0xF8, el]:u32 <- 0
0002edca: goto %0002edc8

0002edc8:
0002edd0: R0 := extend:64[31:0[R0]]
0002edd5: R30 := 0x3E88
0002edd7: call @__fdelt_chk with return %0002edd9

0002edd9:
0002ede0: R1 := mem[R31 + 0xF8, el]:u32
0002ede6: R25 := 1
0002edee: #20696 := R0 << 3
0002edf3: R0 := mem[R19 + #20696, el]:u64
0002edfb: #20700 := extend:64[~31:0[R1]] + 1
0002edff: NF := 63:63[#20700]
0002ee02: VF := ~31:31[~31:0[R1]] & 63:63[#20700]
0002ee05: ZF := #20700 = 0
0002ee08: CF := 31:31[~31:0[R1]] & ~63:63[#20700]
0002ee0d: R2 := #20700
0002ee15: R3 := 31:0[R1] & 0x3F
0002ee1d: R2 := 31:0[R2] & 0x3F
0002ee35: #20746 := NF
0002ee36: goto %0002ee2d

0002ee2d:
0002ee2f: when #20746 goto %0002ee26
0002ee30: goto %0002ee2a

0002ee2a:
0002ee2b: R2 := -31:0[R2]
0002ee32: goto %0002ee2e

0002ee26:
0002ee27: R2 := 31:0[R3]
0002ee31: goto %0002ee2e

0002ee2e:
0002ee3f: R2 := R25 << R2 % 0x40
0002ee47: #20750 := R0
0002ee4b: #20751 := R2 & #20750
0002ee4f: NF := 63:63[#20751]
0002ee52: ZF := #20751 = 0
0002ee55: CF := 0
0002ee58: VF := 0
0002ee66: #20753 := ZF
0002ee60: when #20753 goto %0002ee5e
0003b048: goto %0002f007

0002f007:
0002f00c: R3 := 0x10
0002f015: R0 := 31:0[R1]
0002f01d: R2 := R27
0002f025: R1 := R26
0002f02d: mem := mem with [R31 + 0xFC, el]:u32 <- 31:0[R3]
0002f032: R30 := 0x3EC8
0002f035: call @accept with return %0002f037

0002f037:
0002f03e: R28 := 31:0[R0]
0002f04a: #20801 := ~31:31[R0]
0002f044: when #20801 goto %0002f042
0003b049: goto %00031d75

00031d75:
00031d78: R30 := 0x3ED4
00031d7a: call @__errno_location with return %00031d7c

00031d7c:
00031d83: R0 := mem[R0, el]:u32
00031d88: R30 := 0x3EDC
00031d8a: call @strerror with return %00031d8c

00031d8c:
00031d92: R3 := R0
00031d9b: R1 := 31:0[R25]
00031da1: R2 := 0x15000
00031da8: R0 := 3
00031daf: R2 := R2 + 0x218
00031db4: R30 := 0x3EF4
00031db6: call @__syslog_chk with return %00031db8

00031db8:
00031dbf: R1 := mem[R31 + 0xF8, el]:u32
00031dc3: goto %0002ee5e

0002f042:
0002f053: R1 := mem[R31 + 0x144, el]:u32
0002f05b: R0 := mem[R31 + 0x128, el]:u64
0002f060: R30 := 0x3DE8
0002f062: call @acl_check with return %0002f064

0002f064:
0002f06e: #20804 := ~31:0[R0] = 0
0002f068: when #20804 goto %0002f066
0003b04a: goto %00031bec

0002f066:
0002f077: R0 := mem[R31 + 0x144, el]:u32
0002f07c: R30 := 0x3F6C
0002f07e: call @inet_ntoa with return %0002f080

0002f080:
0002f086: R3 := R0
0002f08f: R5 := mem[R31 + 0x142, el]:u16
0002f098: R1 := 31:0[R25]
0002f09f: R0 := 4
0002f0a5: R2 := 0x15000
0002f0ac: R4 := high:32[R4].23:16[R5].31:24[R5].7:0[R5].15:8[R5]
0002f0b3: R2 := R2 + 0x240
0002f0bb: R4 := 31:0[R4] & 0xFFFF
0002f0c0: R30 := 0x3F90
0002f0c2: call @__syslog_chk with return %0002f0c4

0002f0c4:
0002f0cb: R0 := mem[R31 + 0x144, el]:u32
0002f0d0: R30 := 0x3F98
0002f0d2: call @inet_ntoa with return %0002f0d4

0002f0d4:
0002f0d7: R30 := 0x3F9C
0002f0d9: call @gen_denied_page with return %0002f0db

0002f0db:
0002f0e1: mem := mem with [R31 + 0x68, el]:u64 <- R0
0002f0e9: mem := mem with [R31 + 0x100, el]:u64 <- R0
0002f0ee: R30 := 0x3FA8
0002f0f0: call @strlen with return %0002f0f2

0002f0f2:
0002f0f8: R1 := mem[R31 + 0x68, el]:u64
0002f100: R2 := R0
0002f109: R0 := 31:0[R28]
0002f10e: R30 := 0x3FB8
0002f110: call @write with return %0002f112

0002f112:
0002f118: R0 := mem[R31 + 0x100, el]:u64
0002f11d: R30 := 0x3FC0
0002f11f: call @free with return %0002f121

0002f121:
0002f128: R0 := 31:0[R28]
0002f12d: R30 := 0x3FC8
0002f12f: call @close with return %0002f131

0002f131:
0002f138: R1 := mem[R31 + 0xF8, el]:u32
0002f13c: goto %0002ee5e

00031bec:
00031bf2: R0 := R21
00031bf7: R30 := 0x3DF4
00031bfa: call @pthread_attr_init with return %00031bfc

00031bfc:
00031c00: R1 := 0x10000
00031c08: R0 := R21
00031c0d: R30 := 0x3E00
00031c10: call @pthread_attr_setstacksize with return %00031c12

00031c12:
00031c16: R1 := 0x100
00031c1e: R0 := R21
00031c23: R30 := 0x3E0C
00031c26: call @pthread_attr_setguardsize with return %00031c28

00031c28:
00031c2e: R1 := extend:64[mem[R31 + 0xF8, el]:u32]
00031c36: R0 := mem[R31 + 0x118, el]:u64
00031c3b: R30 := 0x3E18
00031c3d: call @plist_in with return %00031c3f

00031c3f:
00031c49: #21951 := 31:0[R0] = 0
00031c43: when #21951 goto %00031c41
0003b04b: goto %00031cf1

00031c41:
00031c51: R1 := extend:64[mem[R31 + 0xF8, el]:u32]
00031c59: R0 := mem[R31 + 0x120, el]:u64
00031c5e: R30 := 0x3F08
00031c60: call @plist_in with return %00031c62

00031c62:
00031c6b: #21953 := 31:0[R0] = 0
00031c65: when #21953 goto %0002f1ab
0003b04c: goto %00031c6e

0002f1ab:
0002f1af: R0 := 0x20
0002f1b4: R30 := 0x3FE0
0002f1b6: call @new with return %0002f1b8

0002f1b8:
0002f1bf: R2 := mem[R31 + 0x140, el]:u64
0002f1c3: R3 := mem[R31 + 0x148, el]:u64
0002f1cb: R24 := R0
0002f1d4: R1 := mem[R31 + 0xF8, el]:u32
0002f1dc: #20866 := R0 + 0x10
0002f1e1: mem := mem with [#20866, el]:u64 <- R2
0002f1e6: mem := mem with [#20866 + 8, el]:u64 <- R3
0002f1ee: R0 := mem[R31 + 0x110, el]:u64
0002f1f6: mem := mem with [R24, el]:u32 <- 31:0[R28]
0002f1fb: R30 := 0x3FFC
0002f1fd: call @plist_get with return %0002f1ff

0002f1ff:
0002f205: mem := mem with [R24 + 8, el]:u64 <- R0
0002f20d: R3 := R24
0002f215: R1 := R21
0002f21c: R0 := R31 + 0x108
0002f222: R2 := 0x10000
0002f229: R2 := R2 + 0xF00
0002f22e: R30 := 0x4018
0002f231: call @pthread_create with return %0002f233

0002f233:
0002f23a: R24 := 31:0[R0]
0002f23e: goto %0002f146

00031c6e:
00031c72: R0 := 0x20
00031c77: R30 := 0x3F14
00031c79: call @new with return %00031c7b

00031c7b:
00031c82: R4 := mem[R31 + 0x140, el]:u64
00031c86: R5 := mem[R31 + 0x148, el]:u64
00031c8e: R3 := R0
00031c96: #21961 := R0 + 0x10
00031c9b: mem := mem with [#21961, el]:u64 <- R4
00031ca0: mem := mem with [#21961 + 8, el]:u64 <- R5
00031ca8: R1 := R21
00031cae: R2 := 0x10000
00031cb5: R2 := R2 + 0xFA8
00031cbd: mem := mem with [R3, el]:u32 <- 31:0[R28]
00031cc4: R0 := R31 + 0x108
00031cc9: R30 := 0x3F38
00031ccb: call @pthread_create with return %00031ccd

00031ccd:
00031cd4: R24 := 31:0[R0]
00031cdc: R0 := R21
00031ce1: R30 := 0x3F44
00031ce3: call @pthread_attr_destroy with return %00031ce5

00031ce5:
00031cee: #21972 := 31:0[R24] = 0
00031ce8: when #21972 goto %0002f198
0003b04d: goto %0002f15b

00031cf1:
00031cf5: R0 := 0x20
00031cfa: R30 := 0x3E24
00031cfc: call @new with return %00031cfe

00031cfe:
00031d03: R1 := R20 + 0x4D8
00031d0b: R3 := R0
00031d14: R4 := mem[R31 + 0x140, el]:u64
00031d18: R5 := mem[R31 + 0x148, el]:u64
00031d20: #21980 := R0 + 0x10
00031d25: mem := mem with [#21980, el]:u64 <- R4
00031d2a: mem := mem with [#21980 + 8, el]:u64 <- R5
00031d33: R1 := mem[R1 + 0x20, el]:u32
00031d3b: mem := mem with [R0, el]:u32 <- 31:0[R28]
00031d46: #21983 := ~31:0[R1] = 0
00031d40: when #21983 goto %0002f13e
0003b04e: goto %00031d49

0002f13e:
0002f141: R30 := 0x3FD4
0002f143: call @proxy_thread with return %0002f145

0002f145:
0002f148: goto %0002f146

00031d49:
00031d4f: R1 := R21
00031d56: R0 := R31 + 0x108
00031d5c: R2 := 0x10000
00031d63: R2 := R2 + 0xD28
00031d68: R30 := 0x3E54
00031d6a: call @pthread_create with return %00031d6c

00031d6c:
00031d73: R24 := 31:0[R0]
0003b04f: goto %0002f146

0002f146:
0002f14f: R0 := R21
0002f154: R30 := 0x3E60
0002f157: call @pthread_attr_destroy with return %0002f159

0002f159:
0002f163: #20851 := ~31:0[R24] = 0
0002f15d: when #20851 goto %0002f15b
0003b050: goto %0002f198

0002f15b:
0002f16b: R2 := mem[R31 + 0x78, el]:u64
0002f172: R1 := 1
0002f17b: R3 := 31:0[R24]
0002f182: R0 := 3
0002f187: R30 := 0x3F5C
0002f189: call @__syslog_chk with return %0002f18b

0002f18b:
0002f192: R1 := mem[R31 + 0xF8, el]:u32
0002f196: goto %0002ee5e

0002f198:
0002f19f: R1 := mem[R31 + 0xF8, el]:u32
0002f1a7: R22 := extend:64[31:0[R22]] + 1
0003b051: goto %0002ee5e

0002ee5e:
0002ee6e: R0 := extend:64[31:0[R1]] + 1
0002ee76: mem := mem with [R31 + 0xF8, el]:u32 <- 31:0[R0]
0002ee7d: #20754 := 0xFFFFFFFFFFFFFC01 + extend:64[31:0[R0]]
0002ee81: NF := 63:63[#20754]
0002ee84: VF := 31:31[R0] & ~63:63[#20754]
0002ee87: ZF := #20754 = 0
0002ee8a: CF := 31:31[R0] | 31:31[R0] & ~63:63[#20754] | ~63:63[#20754]
0002ee9b: #20756 := (NF = VF & ~ZF) <> 0
0002ee95: when #20756 goto %0002ee93
0003b052: goto %0002edc8

00031dc5:
00031dce: #21999 := ZF
00031dc8: when #21999 goto %0002ee93
0003b053: goto %00031dd1

00031dd1:
00031dd8: R0 := mem[R20 + 0x4D8, el]:u32
00031de3: #22001 := 31:0[R0] = 0
00031ddd: when #22001 goto %0002f240
0003b054: goto %0002ee93

0002f240:
0002f243: R30 := 0x4024
0002f245: call @__errno_location with return %0002f247

0002f247:
0002f24e: R0 := mem[R0, el]:u32
0002f253: R30 := 0x402C
0002f255: call @strerror with return %0002f257

0002f257:
0002f25d: R3 := R0
0002f263: R2 := 0x15000
0002f26a: R1 := 1
0002f271: R2 := R2 + 0x290
0002f278: R0 := 3
0002f27d: R30 := 0x4044
0002f27f: call @__syslog_chk with return %0002f281

0002f281:
0002f283: goto %0002ee93

0002ee93:
0002eea2: R21 := R20 + 0x4D8
0002eeaa: R0 := mem[R21 + 0x58, el]:u64
0002eeb5: #20758 := R0 = 0
0002eeaf: when #20758 goto %0002ec7f
0003b055: goto %0002eeb8

0002eeb8:
0002eebd: R0 := R21 + 0x28
0002eec2: R30 := 0x3578
0002eec4: call @pthread_mutex_lock with return %0002eec6

0002eec6:
0002eecc: R21 := mem[R21 + 0x58, el]:u64
0002eed8: #20760 := R21 = 0
0002eed2: when #20760 goto %0002eed0
0003b056: goto %0002eefb

0002eefb:
0002eeff: R25 := 0x15000
0002ef05: R28 := 0x15000
0002ef0c: R25 := R25 + 0x2D8
0002ef13: R0 := R28 + 0x2B8
0002ef1a: R24 := R31 + 0xF8
0002ef22: mem := mem with [R31 + 0x68, el]:u64 <- R0
0002ef27: goto %0002ef25

0002ef25:
0002ef2e: R28 := R21
0002ef36: R1 := R24
0002ef3e: R21 := mem[R21 + 0x10, el]:u64
0002ef46: R0 := mem[R28, el]:u64
0002ef4b: R30 := 0x35CC
0002ef4e: call @pthread_join with return %0002ef50

0002ef50:
0002ef5a: #20769 := 31:0[R0] = 0
0002ef54: when #20769 goto %0002ef52
0003b057: goto %0002efc6

0002efc6:
0002efcd: R3 := 31:0[R0]
0002efd5: R2 := R25
0002efdc: R1 := 1
0002efe3: R0 := 3
0002efe8: R30 := 0x35E4
0002efea: call @__syslog_chk with return %0002efec

0002efec:
0002eff2: R0 := R28
0002eff7: R30 := 0x35EC
0002eff9: call @free with return %0002effb

0002effb:
0002f004: #20788 := ~R21 = 0
0002effe: when #20788 goto %0002ef25
0003b058: goto %0002eed0

0002ef52:
0002ef61: R0 := R20 + 0x4D8
0002ef69: R23 := extend:64[31:0[R23]] + 1
0002ef72: R0 := mem[R0 + 4, el]:u32
0002ef7e: #20771 := ~31:0[R0] = 0
0002ef78: when #20771 goto %0002ef76
0003b059: goto %0002efa8

0002ef76:
0002ef87: R3 := mem[R31 + 0xF8, el]:u32
0002ef8e: R0 := 1
0002ef96: R2 := mem[R28, el]:u64
0002ef9e: R1 := mem[R31 + 0x68, el]:u64
0002efa3: R30 := 0x3DB8
0002efa5: call @__printf_chk with return %0002efa7

0002efa7:
0002efaa: goto %0002efa8

0002efa8:
0002efb1: R0 := R28
0002efb6: R30 := 0x35B4
0002efb8: call @free with return %0002efba

0002efba:
0002efc3: #20778 := R21 = 0
0002efbd: when #20778 goto %0002eed0
0003b05a: goto %0002ef25

0002eed0:
0002eedf: R1 := R20 + 0x4D8
0002eee6: R0 := R1 + 0x28
0002eeee: mem := mem with [R1 + 0x58, el]:u64 <- 0
0002eef3: R30 := 0x3600
0002eef5: call @pthread_mutex_unlock with return %0002eef7

0002eef7:
0002eef9: goto %0002ec7f

0002f6a9:
0002f6af: R0 := mem[R23 + 0x78, el]:u64
0002f6b7: mem := mem with [R23 + 0x74, el]:u32 <- 31:0[R25]
0002f6c3: #21031 := ~R0 = 0
0002f6bd: when #21031 goto %0002f6bb
0003b05b: goto %0002f7ab

0002f7ab:
0002f7af: R0 := 1
0002f7b7: mem := mem with [R23 + 0x78, el]:u64 <- R0
0003b05c: goto %0002f6bb

0002f6bb:
0002f6cb: R0 := R27
0002f6d0: R30 := 0x3108
0002f6d2: call @strlen with return %0002f6d4

0002f6d4:
0002f6da: mem := mem with [R31 + 0xF8, el]:u32 <- 31:0[R0]
0002f6e6: #21035 := 31:0[R0] = 0
0002f6e0: when #21035 goto %0002f6de
0003b05d: goto %0002f6f7

0002f6f7:
0002f6fd: R0 := extend:64[31:0[R0]] + 3
0002f704: R0 := extend:64[31:0[R0]]
0002f709: R30 := 0x311C
0002f70b: call @new with return %0002f70d

0002f70d:
0002f714: R1 := mem[R31 + 0xF8, el]:u32
0002f71c: R27 := R0
0002f724: R5 := mem[R31 + 0x100, el]:u64
0002f72c: R1 := extend:64[31:0[R1]] + 3
0002f734: R4 := R26
0002f73a: R3 := 0xFFFFFFFFFFFFFFFF
0002f741: R1 := extend:64[31:0[R1]]
0002f748: R2 := 1
0002f74d: R30 := 0x3140
0002f74f: call @__snprintf_chk with return %0002f751

0002f751:
0002f757: R0 := mem[R23 + 0x80, el]:u64
0002f75f: R2 := R27
0002f765: R1 := 0
0002f76a: R30 := 0x3150
0002f76c: call @plist_add with return %0002f76e

0002f76e:
0002f774: mem := mem with [R23 + 0x80, el]:u64 <- R0
0002f77c: R27 := mem[R31 + 0x100, el]:u64
0002f780: goto %0002f6de

0002f6de:
0002f6ee: R0 := R27
0002f6f3: R30 := 0x30D4
0002f6f5: call @free with return %0002f617

0002f849:
0002f850: R0 := pad:32[mem[R1]]
0002f85c: #21079 := 31:0[R0] = 0
0002f856: when #21079 goto %0002f854
0003b05e: goto %0002f86d

0002f86d:
0002f873: R0 := mem[R24 + 0x18, el]:u64
0002f878: R30 := 0x3034
0002f87a: call @noproxy_add with return %0002f87c

0002f87c:
0002f882: mem := mem with [R24 + 0x18, el]:u64 <- R0
0002f88a: R1 := mem[R31 + 0x100, el]:u64
0002f88e: goto %0002f854

0002f854:
0002f864: R0 := R1
0002f869: R30 := 0x300C
0002f86b: call @free with return %0002f564

0002fae4:
0002faf3: R1 := 0
0002faf8: R30 := 0x2DDC
0002fafa: call @parent_add with return %0002fafc

0002fafc:
0002fb02: R0 := mem[R31 + 0x100, el]:u64
0002fb07: R30 := 0x2DE4
0002fb09: call @free with return %0002fac0

00030453:
00030456: R30 := 0x27F8
00030458: call @is_http_header with return %0003045a

0003045a:
00030464: #21435 := ~31:0[R0] = 0
0003045e: when #21435 goto %0003045c
0003b05f: goto %00030515

00030515:
0003051b: R3 := mem[R31 + 0x100, el]:u64
00030523: R2 := R26
0003052a: R1 := 1
00030531: R0 := 3
00030536: R30 := 0x2810
00030538: call @__syslog_chk with return %0003053a

0003053a:
0003053c: goto %00030506

0003045c:
0003046c: R0 := mem[R31 + 0x100, el]:u64
00030473: R27 := R20 + 0x4D8
00030478: R30 := 0x27BC
0003047a: call @get_http_header_name with return %0003047c

0003047c:
00030482: R25 := R0
0003048a: R1 := R0
00030492: R0 := mem[R27 + 0x88, el]:u64
00030497: R30 := 0x27CC
00030499: call @hlist_in with return %0003049b

0003049b:
000304a5: #21444 := 31:0[R0] = 0
0003049f: when #21444 goto %0003049d
0003b060: goto %000304f4

0003049d:
000304ad: R0 := mem[R31 + 0x100, el]:u64
000304b5: R28 := mem[R27 + 0x88, el]:u64
000304ba: R30 := 0x2DAC
000304bc: call @get_http_header_value with return %000304be

000304be:
000304c4: R2 := R0
000304cc: R1 := R25
000304d4: R0 := R28
000304db: R4 := 0
000304e2: R3 := 1
000304e7: R30 := 0x2DC4
000304e9: call @hlist_add with return %000304eb

000304eb:
000304f1: mem := mem with [R27 + 0x88, el]:u64 <- R0
000304f6: goto %000304f4

000304f4:
000304fd: R0 := R25
00030502: R30 := 0x27D8
00030504: call @free with return %00030506

00030506:
0003050c: R0 := mem[R31 + 0x100, el]:u64
00030511: R30 := 0x27E0
00030513: call @free with return %0002fa8a

0002fa36:
0002fa46: R0 := R25
0002fa4f: R3 := 31:0[R28]
0002fa57: R1 := R26
0002fa5c: R30 := 0x277C
0002fa5e: call @listen_add with return %0002fa60

0002fa60:
0002fa66: R0 := mem[R31 + 0x100, el]:u64
0002fa6b: R30 := 0x2784
0002fa6d: call @free with return %0002fa0a

0002f9af:
0002f9bf: R0 := R26
0002f9c8: R3 := 31:0[R28]
0002f9d0: R1 := R25
0002f9d5: R30 := 0x2734
0002f9d7: call @listen_add with return %0002f9d9

0002f9d9:
0002f9df: R0 := mem[R31 + 0x100, el]:u64
0002f9e4: R30 := 0x273C
0002f9e6: call @free with return %0002f983

0002f930:
0002f940: R0 := R24
0002f949: R2 := 31:0[R28]
0002f94e: R30 := 0x26EC
0002f950: call @tunnel_add with return %0002f952

0002f952:
0002f958: R0 := mem[R31 + 0x100, el]:u64
0002f95d: R30 := 0x26F4
0002f95f: call @free with return %0002f904

00032197:
0003219d: R1 := low:32[extend:64[31:0[R0]] - 0x41]
000321a4: #22085 := 0xFFFFFFFFFFFFFFCA + extend:64[31:0[R1]]
000321a8: NF := 63:63[#22085]
000321ab: VF := 31:31[R1] & ~63:63[#22085]
000321ae: ZF := #22085 = 0
000321b1: CF := 31:31[R1] | 31:31[R1] & ~63:63[#22085] | ~63:63[#22085]
000321c0: #22087 := (CF & ~ZF) <> 0
000321ba: when #22087 goto %000316a7
0003b061: goto %000321c3

000316a7:
000316ac: R22 := 1
000316b0: goto %0002db57

000321c3:
000321c9: #22088 := pad:64[31:0[R1] << 1]
000321cf: R1 := mem[R26 + #22088, el]:u16
000321d6: mem := mem with [R2, el]:u64 <- 0x2590
000321de: R1 := R2 + (extend:64[low:16[31:0[R1]]] << 2)
000321e3: call R1 with noreturn

0003b062: sub malloc(malloc_size, malloc_result)
0003b3f8: malloc_size :: in u64 = R0
0003b3f9: malloc_result :: out u64 = R0

0000f3d0:
00032b2a: R16 := 0x27000
00032b32: R17 := mem[R16 + 0xD18, el]:u64
00032b39: R16 := R16 + 0xD18
00032b3e: call R17 with noreturn

0003b063: sub md4_buffer(md4_buffer_result)
0003b3fa: md4_buffer_result :: out u32 = low:32[R0]

00012939:
00012940: #4589 := R31 - 0xF0
00012945: mem := mem with [#4589, el]:u64 <- R29
0001294a: mem := mem with [#4589 + 8, el]:u64 <- R30
0001294e: R31 := #4589
00012954: R3 := 0x11000
0001295b: R29 := R31
00012963: #4594 := R31 + 0x20
00012968: mem := mem with [#4594, el]:u64 <- R21
0001296d: mem := mem with [#4594 + 8, el]:u64 <- R22
00012973: R21 := 0x27000
0001297b: R22 := R2
00012984: V0 := mem[R3 + 0x8D0, el]:u64.mem[R3 + 0x8D8, el]:u64
0001298c: #4604 := R31 + 0x30
00012991: mem := mem with [#4604, el]:u64 <- R23
00012996: mem := mem with [#4604 + 8, el]:u64 <- R24
0001299d: R23 := R31 + 0x40
000129a5: R3 := mem[R21 + 0xFB8, el]:u64
000129ad: R2 := R23
000129b5: #4613 := R31 + 0x10
000129ba: mem := mem with [#4613, el]:u64 <- R19
000129bf: mem := mem with [#4613 + 8, el]:u64 <- R20
000129c7: R4 := mem[R3, el]:u64
000129cf: mem := mem with [R31 + 0xE8, el]:u64 <- R4
000129d5: R4 := 0
000129dd: mem := mem with [R31 + 0x40, el]:u128 <- V0
000129e5: mem := mem with [R31 + 0x50, el]:u64 <- 0
000129ed: mem := mem with [R31 + 0x58, el]:u32 <- 0
000129f2: R30 := 0x8934
000129f4: call @md4_process_bytes with return %000129f6

000129f6:
000129fd: R0 := mem[R31 + 0x50, el]:u32
00012a06: R1 := mem[R31 + 0x58, el]:u32
00012a0e: #4621 := extend:64[31:0[R0]] + extend:64[31:0[R1]]
00012a12: NF := 63:63[#4621]
00012a15: VF := 31:31[R1] & 31:31[R0] & ~63:63[#4621] | ~31:31[R1] &
          ~31:31[R0] & 63:63[#4621]
00012a18: ZF := #4621 = 0
00012a1b: CF := 31:31[R1] & 31:31[R0] | 31:31[R0] & ~63:63[#4621] | 31:31[R1]
          & ~63:63[#4621]
00012a1f: R0 := high:32[R0].#4621
00012a27: mem := mem with [R31 + 0x50, el]:u32 <- 31:0[R0]
00012a33: #4626 := ~CF <> 0
00012a2d: when #4626 goto %00012a2b
0003b064: goto %0001ad23

0001ad23:
0001ad2a: R0 := mem[R31 + 0x54, el]:u32
0001ad32: R0 := extend:64[31:0[R0]] + 1
0001ad3a: mem := mem with [R31 + 0x54, el]:u32 <- 31:0[R0]
0003b065: goto %00012a2b

00012a2b:
00012a3a: #4627 := 0xFFFFFFFFFFFFFFC8 + extend:64[31:0[R1]]
00012a3e: NF := 63:63[#4627]
00012a41: VF := 31:31[R1] & ~63:63[#4627]
00012a44: ZF := #4627 = 0
00012a47: CF := 31:31[R1] | 31:31[R1] & ~63:63[#4627] | ~63:63[#4627]
00012a51: R2 := 0x78
00012a58: R20 := 0x38
00012a61: R2 := 31:0[R2] - 31:0[R1]
00012a6a: R20 := 31:0[R20] - 31:0[R1]
00012a73: R19 := 31:0[R1]
00012a89: #4638 := ~CF <> 0
00012a8a: goto %00012a81

00012a81:
00012a83: when #4638 goto %00012a7b
00012a84: goto %00012a7e

00012a7e:
00012a7f: R20 := R2
00012a86: goto %00012a82

00012a7b:
00012a7c: R20 := R20
00012a85: goto %00012a82

00012a82:
00012a92: R24 := R23 + 0x1C
00012a98: R1 := 0x11000
00012a9f: R1 := R1 + 0x8E0
00012aa7: R2 := R20
00012aae: R1 := R1 + 0xA90
00012ab6: R0 := R24 + R19
00012abb: R30 := 0x898C
00012abd: call @memcpy with return %00012abf

00012abf:
00012ac7: R6 := mem[R31 + 0x50, el]:u32
00012acc: R5 := mem[R31 + 0x54, el]:u32
00012ad4: R1 := R19 + R20
00012adb: R3 := R31 + 0x4C
00012ae3: R0 := R24
00012aea: R2 := R1 >> 2
00012af1: R1 := R1 + 8
00012af8: R7 := R2 + 4
00012aff: R4 := R2 + 5
00012b07: R8 := 31:0[R6] << 0x23
00012b10: R5 := 60:29[31:0[R5].31:0[R6]]
00012b18: R2 := R23
00012b21: mem := mem with [R3 + (R7 << 2), el]:u32 <- 31:0[R8]
00012b2a: mem := mem with [R3 + (R4 << 2), el]:u32 <- 31:0[R5]
00012b2f: R30 := 0x89C4
00012b31: call @md4_process_block with return %00012b33

00012b33:
00012b3a: V0 := mem[R31 + 0x40, el]:u64.mem[R31 + 0x48, el]:u64
00012b42: R21 := mem[R21 + 0xFB8, el]:u64
00012b4a: R0 := mem[R31 + 0xE8, el]:u64
00012b52: R1 := mem[R21, el]:u64
00012b5a: #4666 := 1 + ~R1 + R0
00012b5e: NF := 63:63[#4666]
00012b61: VF := 63:63[R0] & 63:63[~R1] & ~63:63[#4666] | ~63:63[R0] &
          ~63:63[~R1] & 63:63[#4666]
00012b64: ZF := #4666 = 0
00012b67: CF := 63:63[R0] & 63:63[~R1] | 63:63[~R1] & ~63:63[#4666] |
          63:63[R0] & ~63:63[#4666]
00012b6b: R0 := #4666
00012b71: R1 := 0
00012b79: mem := mem with [R22, el]:u128 <- V0
00012b85: #4671 := ~ZF <> 0
00012b7f: when #4671 goto %00012b7d
0003b066: goto %0001acde

00012b7d:
00012b8a: R30 := 0x8A00
00012b8c: call @__stack_chk_fail with return %0003b067

0003b067:
0003b068: call @memxor with noreturn

0001acde:
0001ace4: R0 := R22
0001aced: R19 := mem[R31 + 0x10, el]:u64
0001acf1: R20 := mem[R31 + 0x18, el]:u64
0001acfa: R21 := mem[R31 + 0x20, el]:u64
0001acfe: R22 := mem[R31 + 0x28, el]:u64
0001ad07: R23 := mem[R31 + 0x30, el]:u64
0001ad0b: R24 := mem[R31 + 0x38, el]:u64
0001ad15: R29 := mem[R31, el]:u64
0001ad19: R30 := mem[R31 + 8, el]:u64
0001ad1c: R31 := R31 + 0xF0
0001ad21: call R30 with noreturn

0003b069: sub md4_finish_ctx(md4_finish_ctx_result)
0003b3fb: md4_finish_ctx_result :: out u32 = low:32[R0]

00012263:
0001226a: #4144 := R31 - 0x40
0001226f: mem := mem with [#4144, el]:u64 <- R29
00012274: mem := mem with [#4144 + 8, el]:u64 <- R30
00012278: R31 := #4144
0001227f: R29 := R31
00012287: #4149 := R31 + 0x10
0001228c: mem := mem with [#4149, el]:u64 <- R19
00012291: mem := mem with [#4149 + 8, el]:u64 <- R20
00012299: R19 := R0
000122a1: #4157 := R31 + 0x20
000122a6: mem := mem with [#4157, el]:u64 <- R21
000122ab: mem := mem with [#4157 + 8, el]:u64 <- R22
000122b3: R21 := R1
000122bc: R1 := mem[R0 + 0x10, el]:u32
000122c5: R0 := mem[R0 + 0x18, el]:u32
000122cd: mem := mem with [R31 + 0x30, el]:u64 <- R23
000122d5: #4167 := extend:64[31:0[R0]] + extend:64[31:0[R1]]
000122d9: NF := 63:63[#4167]
000122dc: VF := 31:31[R1] & 31:31[R0] & ~63:63[#4167] | ~31:31[R1] &
          ~31:31[R0] & 63:63[#4167]
000122df: ZF := #4167 = 0
000122e2: CF := 31:31[R1] & 31:31[R0] | 31:31[R0] & ~63:63[#4167] | 31:31[R1]
          & ~63:63[#4167]
000122e6: R1 := high:32[R1].#4167
000122ee: mem := mem with [R19 + 0x10, el]:u32 <- 31:0[R1]
000122fa: #4172 := ~CF <> 0
000122f4: when #4172 goto %000122f2
0003b06a: goto %0001afa8

0001afa8:
0001afaf: R1 := mem[R19 + 0x14, el]:u32
0001afb7: R1 := extend:64[31:0[R1]] + 1
0001afbf: mem := mem with [R19 + 0x14, el]:u32 <- 31:0[R1]
0003b06b: goto %000122f2

000122f2:
00012301: #4173 := 0xFFFFFFFFFFFFFFC8 + extend:64[31:0[R0]]
00012305: NF := 63:63[#4173]
00012308: VF := 31:31[R0] & ~63:63[#4173]
0001230b: ZF := #4173 = 0
0001230e: CF := 31:31[R0] | 31:31[R0] & ~63:63[#4173] | ~63:63[#4173]
00012318: R1 := 0x78
0001231f: R22 := 0x38
00012328: R1 := 31:0[R1] - 31:0[R0]
00012331: R22 := 31:0[R22] - 31:0[R0]
00012338: R23 := R19 + 0x1C
0001234e: #4181 := ~CF <> 0
0001234f: goto %00012346

00012346:
00012348: when #4181 goto %00012340
00012349: goto %00012343

00012343:
00012344: R22 := R1
0001234b: goto %00012347

00012340:
00012341: R22 := R22
0001234a: goto %00012347

00012347:
00012359: R20 := 31:0[R0]
0001235f: R1 := 0x11000
00012366: R1 := R1 + 0x8E0
0001236e: R2 := R22
00012376: R0 := R23 + R20
0001237d: R1 := R1 + 0xA90
00012385: R20 := R20 + R22
0001238a: R30 := 0x8590
0001238d: call @memcpy with return %0001238f

0001238f:
00012394: R3 := R20 & 0x1FFFFFFFC
0001239d: R5 := mem[R19 + 0x10, el]:u32
000123a5: R3 := R19 + R3
000123ad: R0 := R23
000123b4: R1 := R20 + 8
000123bc: R2 := R19
000123c4: R4 := 31:0[R5] << 0x23
000123cc: mem := mem with [R3 + 0x1C, el]:u32 <- 31:0[R4]
000123d5: R4 := mem[R19 + 0x14, el]:u32
000123de: R4 := 60:29[31:0[R4].31:0[R5]]
000123e6: mem := mem with [R3 + 0x20, el]:u32 <- 31:0[R4]
000123eb: R30 := 0x85C0
000123ed: call @md4_process_block with return %000123ef

000123ef:
000123f6: R0 := mem[R19, el]:u32
000123fe: R23 := mem[R31 + 0x30, el]:u64
00012406: mem := mem with [R21, el]:u32 <- 31:0[R0]
0001240e: R0 := R21
00012417: R1 := mem[R19 + 4, el]:u32
0001241f: mem := mem with [R21 + 4, el]:u32 <- 31:0[R1]
00012428: R1 := mem[R19 + 8, el]:u32
00012430: mem := mem with [R21 + 8, el]:u32 <- 31:0[R1]
00012439: R1 := mem[R19 + 0xC, el]:u32
00012442: R19 := mem[R31 + 0x10, el]:u64
00012446: R20 := mem[R31 + 0x18, el]:u64
0001244e: mem := mem with [R21 + 0xC, el]:u32 <- 31:0[R1]
00012457: R21 := mem[R31 + 0x20, el]:u64
0001245b: R22 := mem[R31 + 0x28, el]:u64
00012465: R29 := mem[R31, el]:u64
00012469: R30 := mem[R31 + 8, el]:u64
0001246c: R31 := R31 + 0x40
00012471: call R30 with noreturn

0003b06c: sub md4_init_ctx(md4_init_ctx_result)
0003b3fc: md4_init_ctx_result :: out u32 = low:32[R0]

000121dc:
000121e0: R1 := 0x11000
000121e8: mem := mem with [R0 + 0x10, el]:u64 <- 0
000121f0: mem := mem with [R0 + 0x18, el]:u32 <- 0
000121f9: V0 := mem[R1 + 0x8D0, el]:u64.mem[R1 + 0x8D8, el]:u64
00012201: mem := mem with [R0, el]:u128 <- V0
00012206: call R30 with noreturn

0003b06d: sub md4_process_block(md4_process_block_result)
0003b3fd: md4_process_block_result :: out u32 = low:32[R0]

000120f7:
000120fe: #4067 := R31 - 0x70
00012103: mem := mem with [#4067, el]:u64 <- R29
00012108: mem := mem with [#4067 + 8, el]:u64 <- R30
0001210c: R31 := #4067
00012114: R4 := R2
0001211c: R5 := R2
00012123: R29 := R31
0001212c: R2 := mem[R2 + 0x10, el]:u32
00012133: R3 := R1 & 0xFFFFFFFFFFFFFFFC
0001213d: R8 := mem[R4 + 4, el]:u32
00012142: R9 := mem[R4 + 8, el]:u32
0001214b: R2 := 31:0[R2] + 31:0[R1]
00012154: R10 := mem[R4 + 0xC, el]:u32
0001215c: R3 := R0 + R3
00012165: R4 := mem[R4, el]:u32
0001216d: #4112 := 1 + extend:64[~(31:0[R2] << 0x10)] + R1
00012171: NF := 63:63[#4112]
00012174: VF := 63:63[R1] & 31:31[~(31:0[R2] << 0x10)] & ~63:63[#4112] |
          ~63:63[R1] & ~31:31[~(31:0[R2] << 0x10)] & 63:63[#4112]
00012177: ZF := #4112 = 0
0001217a: CF := 63:63[R1] & 31:31[~(31:0[R2] << 0x10)] |
          31:31[~(31:0[R2] << 0x10)] & ~63:63[#4112] | 63:63[R1] &
          ~63:63[#4112]
00012184: mem := mem with [R5 + 0x10, el]:u32 <- 31:0[R2]
0001218c: mem := mem with [R31 + 0x68, el]:u64 <- R3
00012199: #4117 := (~CF | ZF) <> 0
00012193: when #4117 goto %00012191
0003b06e: goto %0001bcf2

0001bcf2:
0001bcf9: R1 := mem[R5 + 0x14, el]:u32
0001bd01: R1 := extend:64[31:0[R1]] + 1
0001bd09: mem := mem with [R5 + 0x14, el]:u32 <- 31:0[R1]
0003b06f: goto %00012191

00012191:
000121a1: R1 := mem[R31 + 0x68, el]:u64
000121a9: #4122 := 1 + ~R1 + R0
000121ad: NF := 63:63[#4122]
000121b0: VF := 63:63[R0] & 63:63[~R1] & ~63:63[#4122] | ~63:63[R0] &
          ~63:63[~R1] & 63:63[#4122]
000121b3: ZF := #4122 = 0
000121b6: CF := 63:63[R0] & 63:63[~R1] | 63:63[~R1] & ~63:63[#4122] |
          63:63[R0] & ~63:63[#4122]
000121c4: #4127 := CF
000121be: when #4127 goto %000121bc
0003b070: goto %0001afc1

0001afc1:
0001afc6: R3 := 0x7999
0001afcd: R2 := 0xEBA1
0001afd5: #9984 := R31 + 0x40
0001afda: mem := mem with [#9984, el]:u64 <- R25
0001afdf: mem := mem with [#9984 + 8, el]:u64 <- R26
0001afe7: R26 := R5
0001afee: R3 := high:32[R3].extend:64[31:0[R3]] & 0xFFFFFFFF0000FFFF |
          0x5A820000
0001aff5: R2 := high:32[R2].extend:64[31:0[R2]] & 0xFFFFFFFF0000FFFF |
          0x6ED90000
0001affd: #9994 := R31 + 0x10
0001b002: mem := mem with [#9994, el]:u64 <- R19
0001b007: mem := mem with [#9994 + 8, el]:u64 <- R20
0001b00f: #9999 := R31 + 0x20
0001b014: mem := mem with [#9999, el]:u64 <- R21
0001b019: mem := mem with [#9999 + 8, el]:u64 <- R22
0001b021: #10004 := R31 + 0x30
0001b026: mem := mem with [#10004, el]:u64 <- R23
0001b02b: mem := mem with [#10004 + 8, el]:u64 <- R24
0001b033: #10009 := R31 + 0x50
0001b038: mem := mem with [#10009, el]:u64 <- R27
0001b03d: mem := mem with [#10009 + 8, el]:u64 <- R28
0001b045: mem := mem with [R31 + 0x60, el]:u32 <- 31:0[R4]
0003b071: goto %0001b047

0001b047:
0001b04f: R6 := mem[R0, el]:u32
0001b054: R18 := mem[R0 + 4, el]:u32
0001b05d: R1 := 31:0[R9] ^ 31:0[R10]
0001b066: R1 := 31:0[R1] & 31:0[R8]
0001b06f: R5 := mem[R31 + 0x60, el]:u32
0001b078: R1 := 31:0[R1] ^ 31:0[R10]
0001b081: R4 := 31:0[R8] ^ 31:0[R9]
0001b08a: R1 := 31:0[R1] + 31:0[R6]
0001b093: R28 := 31:0[R6] + 31:0[R3]
0001b09c: R1 := 31:0[R1] + 31:0[R5]
0001b0a5: R5 := 31:0[R18] + 31:0[R10]
0001b0af: R22 := mem[R0 + 8, el]:u32
0001b0b4: R14 := mem[R0 + 0xC, el]:u32
0001b0bd: R1 := 60:29[31:0[R1].31:0[R1]]
0001b0c6: R4 := 31:0[R4] & 31:0[R1]
0001b0cf: R13 := 31:0[R1] ^ 31:0[R8]
0001b0d8: R4 := 31:0[R4] ^ 31:0[R9]
0001b0e1: R12 := 31:0[R22] + 31:0[R9]
0001b0ea: R4 := 31:0[R4] + 31:0[R5]
0001b0f3: R7 := 31:0[R14] + 31:0[R8]
0001b0fd: R16 := mem[R0 + 0x14, el]:u32
0001b102: R20 := mem[R0 + 0x18, el]:u32
0001b10b: R4 := 56:25[31:0[R4].31:0[R4]]
0001b114: R13 := 31:0[R13] & 31:0[R4]
0001b11d: R11 := 31:0[R1] ^ 31:0[R4]
0001b126: R13 := 31:0[R13] ^ 31:0[R8]
0001b12f: R6 := 31:0[R6] + 31:0[R2]
0001b138: R13 := 31:0[R13] + 31:0[R12]
0001b141: R5 := mem[R0 + 0x10, el]:u32
0001b149: mem := mem with [R31 + 0x64, el]:u32 <- 31:0[R6]
0001b152: R19 := 31:0[R4] + 31:0[R16]
0001b15b: R17 := 31:0[R1] + 31:0[R5]
0001b164: R13 := 52:21[31:0[R13].31:0[R13]]
0001b16d: R11 := 31:0[R11] & 31:0[R13]
0001b176: R6 := 31:0[R4] ^ 31:0[R13]
0001b17f: R11 := 31:0[R11] ^ 31:0[R1]
0001b188: R15 := 31:0[R13] + 31:0[R20]
0001b191: R11 := 31:0[R11] + 31:0[R7]
0001b19a: R24 := mem[R0 + 0x20, el]:u32
0001b1a3: R12 := mem[R0 + 0x1C, el]:u32
0001b1ac: R21 := mem[R0 + 0x28, el]:u32
0001b1b5: R11 := 44:13[31:0[R11].31:0[R11]]
0001b1be: R6 := 31:0[R6] & 31:0[R11]
0001b1c7: R1 := 31:0[R13] ^ 31:0[R11]
0001b1d0: R4 := 31:0[R6] ^ 31:0[R4]
0001b1d9: R6 := 31:0[R11] + 31:0[R12]
0001b1e2: R4 := 31:0[R4] + 31:0[R17]
0001b1eb: R17 := mem[R0 + 0x24, el]:u32
0001b1f4: R23 := mem[R0 + 0x30, el]:u32
0001b1fd: R4 := 60:29[31:0[R4].31:0[R4]]
0001b206: R1 := 31:0[R1] & 31:0[R4]
0001b20f: R7 := 31:0[R11] ^ 31:0[R4]
0001b218: R1 := 31:0[R1] ^ 31:0[R13]
0001b221: R27 := 31:0[R4] + 31:0[R24]
0001b22a: R1 := 31:0[R1] + 31:0[R19]
0001b233: R13 := mem[R0 + 0x2C, el]:u32
0001b23b: R25 := mem[R31 + 0x68, el]:u64
0001b244: R1 := 56:25[31:0[R1].31:0[R1]]
0001b24d: R7 := 31:0[R7] & 31:0[R1]
0001b256: R30 := 31:0[R4] ^ 31:0[R1]
0001b25f: R7 := 31:0[R7] ^ 31:0[R11]
0001b268: R11 := 31:0[R1] + 31:0[R17]
0001b271: R7 := 31:0[R7] + 31:0[R15]
0001b27b: R15 := mem[R0 + 0x34, el]:u32
0001b280: R19 := mem[R0 + 0x38, el]:u32
0001b289: R7 := 52:21[31:0[R7].31:0[R7]]
0001b292: R30 := 31:0[R30] & 31:0[R7]
0001b299: R0 := R0 + 0x40
0001b2a2: R4 := 31:0[R30] ^ 31:0[R4]
0001b2ab: R30 := 31:0[R1] ^ 31:0[R7]
0001b2b4: R4 := 31:0[R4] + 31:0[R6]
0001b2bd: R6 := 31:0[R7] + 31:0[R21]
0001b2c6: R4 := 44:13[31:0[R4].31:0[R4]]
0001b2cf: R30 := 31:0[R30] & 31:0[R4]
0001b2d8: R1 := 31:0[R30] ^ 31:0[R1]
0001b2e1: R30 := 31:0[R7] ^ 31:0[R4]
0001b2ea: R1 := 31:0[R1] + 31:0[R27]
0001b2f3: R27 := 31:0[R4] + 31:0[R13]
0001b2fc: R1 := 60:29[31:0[R1].31:0[R1]]
0001b305: R30 := 31:0[R30] & 31:0[R1]
0001b30e: R7 := 31:0[R30] ^ 31:0[R7]
0001b317: R30 := 31:0[R4] ^ 31:0[R1]
0001b320: R7 := 31:0[R7] + 31:0[R11]
0001b329: R11 := 31:0[R1] + 31:0[R23]
0001b332: R7 := 56:25[31:0[R7].31:0[R7]]
0001b33b: R30 := 31:0[R30] & 31:0[R7]
0001b344: R4 := 31:0[R30] ^ 31:0[R4]
0001b34d: R30 := 31:0[R1] ^ 31:0[R7]
0001b356: R4 := 31:0[R4] + 31:0[R6]
0001b35f: R6 := 31:0[R7] + 31:0[R15]
0001b368: R4 := 52:21[31:0[R4].31:0[R4]]
0001b371: R30 := 31:0[R30] & 31:0[R4]
0001b37a: R1 := 31:0[R30] ^ 31:0[R1]
0001b383: R30 := 31:0[R7] ^ 31:0[R4]
0001b38c: R1 := 31:0[R1] + 31:0[R27]
0001b395: R27 := 31:0[R4] + 31:0[R19]
0001b39e: R1 := 44:13[31:0[R1].31:0[R1]]
0001b3a7: R30 := 31:0[R30] & 31:0[R1]
0001b3b0: R7 := 31:0[R30] ^ 31:0[R7]
0001b3b9: R30 := 31:0[R4] ^ 31:0[R1]
0001b3c2: R7 := 31:0[R7] + 31:0[R11]
0001b3cb: R11 := mem[R0 - 4, el]:u32
0001b3d3: #10237 := 1 + ~R0 + R25
0001b3d7: NF := 63:63[#10237]
0001b3da: VF := 63:63[R25] & 63:63[~R0] & ~63:63[#10237] | ~63:63[R25] &
          ~63:63[~R0] & 63:63[#10237]
0001b3dd: ZF := #10237 = 0
0001b3e0: CF := 63:63[R25] & 63:63[~R0] | 63:63[~R0] & ~63:63[#10237] |
          63:63[R25] & ~63:63[#10237]
0001b3eb: R25 := 31:0[R5] + 31:0[R2]
0001b3f4: R7 := 60:29[31:0[R7].31:0[R7]]
0001b3fd: R30 := 31:0[R30] & 31:0[R7]
0001b406: R4 := 31:0[R30] ^ 31:0[R4]
0001b40f: R30 := 31:0[R1] ^ 31:0[R7]
0001b418: R6 := 31:0[R4] + 31:0[R6]
0001b421: R4 := 31:0[R1] + 31:0[R11]
0001b42a: R6 := 56:25[31:0[R6].31:0[R6]]
0001b433: R30 := 31:0[R30] & 31:0[R6]
0001b43c: R1 := 31:0[R30] ^ 31:0[R1]
0001b445: R30 := 31:0[R7] ^ 31:0[R6]
0001b44e: R1 := 31:0[R1] + 31:0[R27]
0001b457: R27 := 31:0[R5] + 31:0[R3]
0001b460: R5 := 52:21[31:0[R1].31:0[R1]]
0001b469: R30 := 31:0[R30] & 31:0[R5]
0001b472: R1 := 31:0[R6] | 31:0[R5]
0001b47b: R30 := 31:0[R30] ^ 31:0[R7]
0001b484: R4 := 31:0[R30] + 31:0[R4]
0001b48d: R30 := 31:0[R6] & 31:0[R5]
0001b496: R4 := 44:13[31:0[R4].31:0[R4]]
0001b49f: R1 := 31:0[R1] & 31:0[R4]
0001b4a8: R1 := 31:0[R1] | 31:0[R30]
0001b4b1: R30 := 31:0[R5] & 31:0[R4]
0001b4ba: R7 := 31:0[R1] + 31:0[R7]
0001b4c3: R1 := 31:0[R5] | 31:0[R4]
0001b4cc: R28 := 31:0[R7] + 31:0[R28]
0001b4d5: R28 := 60:29[31:0[R28].31:0[R28]]
0001b4de: R7 := 31:0[R1] & 31:0[R28]
0001b4e7: R1 := 31:0[R4] | 31:0[R28]
0001b4f0: R7 := 31:0[R7] | 31:0[R30]
0001b4f9: R30 := 31:0[R24] + 31:0[R3]
0001b502: R6 := 31:0[R7] + 31:0[R6]
0001b50b: R7 := 31:0[R4] & 31:0[R28]
0001b514: R27 := 31:0[R6] + 31:0[R27]
0001b51d: R24 := 31:0[R24] + 31:0[R2]
0001b526: R27 := 58:27[31:0[R27].31:0[R27]]
0001b52f: R1 := 31:0[R1] & 31:0[R27]
0001b538: R6 := 31:0[R28] | 31:0[R27]
0001b541: R7 := 31:0[R1] | 31:0[R7]
0001b54a: R1 := 31:0[R28] & 31:0[R27]
0001b553: R5 := 31:0[R7] + 31:0[R5]
0001b55c: R7 := 31:0[R23] + 31:0[R3]
0001b565: R30 := 31:0[R5] + 31:0[R30]
0001b56e: R23 := 31:0[R23] + 31:0[R2]
0001b577: R30 := 54:23[31:0[R30].31:0[R30]]
0001b580: R6 := 31:0[R6] & 31:0[R30]
0001b589: R5 := 31:0[R27] | 31:0[R30]
0001b592: R1 := 31:0[R6] | 31:0[R1]
0001b59b: R6 := 31:0[R27] & 31:0[R30]
0001b5a4: R4 := 31:0[R1] + 31:0[R4]
0001b5ad: R1 := 31:0[R18] + 31:0[R3]
0001b5b6: R7 := 31:0[R4] + 31:0[R7]
0001b5bf: R18 := 31:0[R18] + 31:0[R2]
0001b5c8: R7 := 50:19[31:0[R7].31:0[R7]]
0001b5d1: R5 := 31:0[R5] & 31:0[R7]
0001b5da: R4 := 31:0[R30] | 31:0[R7]
0001b5e3: R6 := 31:0[R5] | 31:0[R6]
0001b5ec: R5 := 31:0[R30] & 31:0[R7]
0001b5f5: R28 := 31:0[R6] + 31:0[R28]
0001b5fe: R6 := 31:0[R16] + 31:0[R3]
0001b607: R1 := 31:0[R28] + 31:0[R1]
0001b610: R16 := 31:0[R16] + 31:0[R2]
0001b619: R1 := 60:29[31:0[R1].31:0[R1]]
0001b622: R4 := 31:0[R4] & 31:0[R1]
0001b62b: R28 := 31:0[R7] | 31:0[R1]
0001b634: R5 := 31:0[R4] | 31:0[R5]
0001b63d: R4 := 31:0[R7] & 31:0[R1]
0001b646: R27 := 31:0[R5] + 31:0[R27]
0001b64f: R5 := 31:0[R17] + 31:0[R3]
0001b658: R6 := 31:0[R27] + 31:0[R6]
0001b661: R17 := 31:0[R17] + 31:0[R2]
0001b66a: R6 := 58:27[31:0[R6].31:0[R6]]
0001b673: R28 := 31:0[R28] & 31:0[R6]
0001b67c: R27 := 31:0[R1] | 31:0[R6]
0001b685: R4 := 31:0[R28] | 31:0[R4]
0001b68e: R28 := 31:0[R1] & 31:0[R6]
0001b697: R30 := 31:0[R4] + 31:0[R30]
0001b6a0: R4 := 31:0[R15] + 31:0[R3]
0001b6a9: R5 := 31:0[R30] + 31:0[R5]
0001b6b2: R15 := 31:0[R15] + 31:0[R2]
0001b6bb: R5 := 54:23[31:0[R5].31:0[R5]]
0001b6c4: R27 := 31:0[R27] & 31:0[R5]
0001b6cd: R30 := 31:0[R6] | 31:0[R5]
0001b6d6: R28 := 31:0[R27] | 31:0[R28]
0001b6df: R27 := 31:0[R6] & 31:0[R5]
0001b6e8: R7 := 31:0[R28] + 31:0[R7]
0001b6f1: R28 := 31:0[R22] + 31:0[R3]
0001b6fa: R4 := 31:0[R7] + 31:0[R4]
0001b703: R22 := 31:0[R22] + 31:0[R2]
0001b70c: R4 := 50:19[31:0[R4].31:0[R4]]
0001b715: R30 := 31:0[R30] & 31:0[R4]
0001b71e: R7 := 31:0[R5] | 31:0[R4]
0001b727: R27 := 31:0[R30] | 31:0[R27]
0001b730: R30 := 31:0[R5] & 31:0[R4]
0001b739: R1 := 31:0[R27] + 31:0[R1]
0001b742: R27 := 31:0[R20] + 31:0[R3]
0001b74b: R28 := 31:0[R1] + 31:0[R28]
0001b754: R20 := 31:0[R20] + 31:0[R2]
0001b75d: R28 := 60:29[31:0[R28].31:0[R28]]
0001b766: R7 := 31:0[R7] & 31:0[R28]
0001b76f: R1 := 31:0[R4] | 31:0[R28]
0001b778: R30 := 31:0[R7] | 31:0[R30]
0001b781: R7 := 31:0[R4] & 31:0[R28]
0001b78a: R6 := 31:0[R30] + 31:0[R6]
0001b793: R30 := 31:0[R21] + 31:0[R3]
0001b79c: R27 := 31:0[R6] + 31:0[R27]
0001b7a5: R21 := 31:0[R21] + 31:0[R2]
0001b7ae: R27 := 58:27[31:0[R27].31:0[R27]]
0001b7b7: R1 := 31:0[R1] & 31:0[R27]
0001b7c0: R6 := 31:0[R28] | 31:0[R27]
0001b7c9: R7 := 31:0[R1] | 31:0[R7]
0001b7d2: R1 := 31:0[R28] & 31:0[R27]
0001b7db: R5 := 31:0[R7] + 31:0[R5]
0001b7e4: R7 := 31:0[R19] + 31:0[R3]
0001b7ed: R30 := 31:0[R5] + 31:0[R30]
0001b7f6: R19 := 31:0[R19] + 31:0[R2]
0001b7ff: R30 := 54:23[31:0[R30].31:0[R30]]
0001b808: R6 := 31:0[R6] & 31:0[R30]
0001b811: R5 := 31:0[R27] | 31:0[R30]
0001b81a: R1 := 31:0[R6] | 31:0[R1]
0001b823: R6 := 31:0[R27] & 31:0[R30]
0001b82c: R4 := 31:0[R1] + 31:0[R4]
0001b835: R1 := 31:0[R14] + 31:0[R3]
0001b83e: R7 := 31:0[R4] + 31:0[R7]
0001b847: R14 := 31:0[R14] + 31:0[R2]
0001b850: R7 := 50:19[31:0[R7].31:0[R7]]
0001b859: R5 := 31:0[R5] & 31:0[R7]
0001b862: R4 := 31:0[R30] | 31:0[R7]
0001b86b: R6 := 31:0[R5] | 31:0[R6]
0001b874: R5 := 31:0[R30] & 31:0[R7]
0001b87d: R28 := 31:0[R6] + 31:0[R28]
0001b886: R6 := 31:0[R12] + 31:0[R3]
0001b88f: R1 := 31:0[R28] + 31:0[R1]
0001b898: R12 := 31:0[R12] + 31:0[R2]
0001b8a1: R1 := 60:29[31:0[R1].31:0[R1]]
0001b8aa: R4 := 31:0[R4] & 31:0[R1]
0001b8b3: R28 := 31:0[R7] | 31:0[R1]
0001b8bc: R5 := 31:0[R4] | 31:0[R5]
0001b8c5: R4 := 31:0[R7] & 31:0[R1]
0001b8ce: R27 := 31:0[R5] + 31:0[R27]
0001b8d7: R5 := 31:0[R13] + 31:0[R3]
0001b8e0: R6 := 31:0[R27] + 31:0[R6]
0001b8e9: R13 := 31:0[R13] + 31:0[R2]
0001b8f2: R6 := 58:27[31:0[R6].31:0[R6]]
0001b8fb: R28 := 31:0[R28] & 31:0[R6]
0001b904: R27 := 31:0[R1] | 31:0[R6]
0001b90d: R4 := 31:0[R28] | 31:0[R4]
0001b916: R28 := 31:0[R1] & 31:0[R6]
0001b91f: R30 := 31:0[R4] + 31:0[R30]
0001b928: R4 := 31:0[R11] + 31:0[R3]
0001b931: R5 := 31:0[R30] + 31:0[R5]
0001b93a: R11 := 31:0[R11] + 31:0[R2]
0001b943: R5 := 54:23[31:0[R5].31:0[R5]]
0001b94c: R27 := 31:0[R27] & 31:0[R5]
0001b955: R30 := 31:0[R6] ^ 31:0[R5]
0001b95e: R28 := 31:0[R27] | 31:0[R28]
0001b967: R27 := mem[R31 + 0x64, el]:u32
0001b970: R7 := 31:0[R28] + 31:0[R7]
0001b979: R4 := 31:0[R7] + 31:0[R4]
0001b982: R4 := 50:19[31:0[R4].31:0[R4]]
0001b98b: R30 := 31:0[R30] ^ 31:0[R4]
0001b994: R7 := 31:0[R5] ^ 31:0[R4]
0001b99d: R1 := 31:0[R30] + 31:0[R1]
0001b9a6: R1 := 31:0[R1] + 31:0[R27]
0001b9af: R1 := 60:29[31:0[R1].31:0[R1]]
0001b9b8: R7 := 31:0[R7] ^ 31:0[R1]
0001b9c1: R27 := 31:0[R4] ^ 31:0[R1]
0001b9ca: R6 := 31:0[R7] + 31:0[R6]
0001b9d3: R24 := 31:0[R6] + 31:0[R24]
0001b9dc: R24 := 54:23[31:0[R24].31:0[R24]]
0001b9e5: R6 := 31:0[R27] ^ 31:0[R24]
0001b9ee: R7 := 31:0[R1] ^ 31:0[R24]
0001b9f7: R5 := 31:0[R6] + 31:0[R5]
0001ba00: R5 := 31:0[R5] + 31:0[R25]
0001ba09: R5 := 52:21[31:0[R5].31:0[R5]]
0001ba12: R7 := 31:0[R7] ^ 31:0[R5]
0001ba1b: R6 := 31:0[R24] ^ 31:0[R5]
0001ba24: R4 := 31:0[R7] + 31:0[R4]
0001ba2d: R23 := 31:0[R4] + 31:0[R23]
0001ba36: R23 := 48:17[31:0[R23].31:0[R23]]
0001ba3f: R6 := 31:0[R6] ^ 31:0[R23]
0001ba48: R4 := 31:0[R5] ^ 31:0[R23]
0001ba51: R1 := 31:0[R6] + 31:0[R1]
0001ba5a: R22 := 31:0[R1] + 31:0[R22]
0001ba63: R22 := 60:29[31:0[R22].31:0[R22]]
0001ba6c: R1 := 31:0[R4] ^ 31:0[R22]
0001ba75: R4 := 31:0[R23] ^ 31:0[R22]
0001ba7e: R24 := 31:0[R1] + 31:0[R24]
0001ba87: R21 := 31:0[R24] + 31:0[R21]
0001ba90: R21 := 54:23[31:0[R21].31:0[R21]]
0001ba99: R4 := 31:0[R4] ^ 31:0[R21]
0001baa2: R1 := 31:0[R22] ^ 31:0[R21]
0001baab: R5 := 31:0[R4] + 31:0[R5]
0001bab4: R20 := 31:0[R5] + 31:0[R20]
0001babd: R5 := mem[R31 + 0x60, el]:u32
0001bac6: R20 := 52:21[31:0[R20].31:0[R20]]
0001bacf: R1 := 31:0[R1] ^ 31:0[R20]
0001bad8: R4 := 31:0[R21] ^ 31:0[R20]
0001bae1: R23 := 31:0[R1] + 31:0[R23]
0001baea: R19 := 31:0[R23] + 31:0[R19]
0001baf3: R19 := 48:17[31:0[R19].31:0[R19]]
0001bafc: R4 := 31:0[R4] ^ 31:0[R19]
0001bb05: R1 := 31:0[R20] ^ 31:0[R19]
0001bb0e: R22 := 31:0[R4] + 31:0[R22]
0001bb17: R18 := 31:0[R22] + 31:0[R18]
0001bb20: R18 := 60:29[31:0[R18].31:0[R18]]
0001bb29: R1 := 31:0[R1] ^ 31:0[R18]
0001bb32: R4 := 31:0[R19] ^ 31:0[R18]
0001bb3b: R21 := 31:0[R1] + 31:0[R21]
0001bb44: R17 := 31:0[R21] + 31:0[R17]
0001bb4d: R17 := 54:23[31:0[R17].31:0[R17]]
0001bb56: R4 := 31:0[R4] ^ 31:0[R17]
0001bb5f: R1 := 31:0[R18] ^ 31:0[R17]
0001bb68: R20 := 31:0[R4] + 31:0[R20]
0001bb71: R16 := 31:0[R20] + 31:0[R16]
0001bb7a: R16 := 52:21[31:0[R16].31:0[R16]]
0001bb83: R1 := 31:0[R1] ^ 31:0[R16]
0001bb8c: R4 := 31:0[R17] ^ 31:0[R16]
0001bb95: R19 := 31:0[R1] + 31:0[R19]
0001bb9e: R15 := 31:0[R19] + 31:0[R15]
0001bba7: R15 := 48:17[31:0[R15].31:0[R15]]
0001bbb0: R4 := 31:0[R4] ^ 31:0[R15]
0001bbb9: R1 := 31:0[R16] ^ 31:0[R15]
0001bbc2: R4 := 31:0[R4] + 31:0[R18]
0001bbcb: R14 := 31:0[R4] + 31:0[R14]
0001bbd4: R14 := 60:29[31:0[R14].31:0[R14]]
0001bbdd: R1 := 31:0[R1] ^ 31:0[R14]
0001bbe6: R4 := 31:0[R15] ^ 31:0[R14]
0001bbef: R1 := 31:0[R1] + 31:0[R17]
0001bbf8: R5 := 31:0[R14] + 31:0[R5]
0001bc01: R13 := 31:0[R1] + 31:0[R13]
0001bc09: mem := mem with [R31 + 0x60, el]:u32 <- 31:0[R5]
0001bc12: R13 := 54:23[31:0[R13].31:0[R13]]
0001bc1b: R4 := 31:0[R4] ^ 31:0[R13]
0001bc24: R1 := 31:0[R14] ^ 31:0[R13]
0001bc2d: R4 := 31:0[R4] + 31:0[R16]
0001bc36: R10 := 31:0[R13] + 31:0[R10]
0001bc3f: R12 := 31:0[R4] + 31:0[R12]
0001bc48: R12 := 52:21[31:0[R12].31:0[R12]]
0001bc51: R1 := 31:0[R1] ^ 31:0[R12]
0001bc5a: R9 := 31:0[R12] + 31:0[R9]
0001bc63: R1 := 31:0[R1] + 31:0[R15]
0001bc6b: #10858 := R26 + 8
0001bc70: mem := mem with [#10858, el]:u32 <- 31:0[R9]
0001bc75: mem := mem with [#10858 + 4, el]:u32 <- 31:0[R10]
0001bc7e: R11 := 31:0[R1] + 31:0[R11]
0001bc87: R11 := 48:17[31:0[R11].31:0[R11]]
0001bc90: R8 := 31:0[R11] + 31:0[R8]
0001bc98: #10869 := R26
0001bc9d: mem := mem with [#10869, el]:u32 <- 31:0[R5]
0001bca2: mem := mem with [#10869 + 4, el]:u32 <- 31:0[R8]
0001bcae: #10872 := (CF & ~ZF) <> 0
0001bca8: when #10872 goto %0001b047
0003b072: goto %0001bcb1

0001bcb1:
0001bcb8: R19 := mem[R31 + 0x10, el]:u64
0001bcbc: R20 := mem[R31 + 0x18, el]:u64
0001bcc5: R21 := mem[R31 + 0x20, el]:u64
0001bcc9: R22 := mem[R31 + 0x28, el]:u64
0001bcd2: R23 := mem[R31 + 0x30, el]:u64
0001bcd6: R24 := mem[R31 + 0x38, el]:u64
0001bcdf: R25 := mem[R31 + 0x40, el]:u64
0001bce3: R26 := mem[R31 + 0x48, el]:u64
0001bcec: R27 := mem[R31 + 0x50, el]:u64
0001bcf0: R28 := mem[R31 + 0x58, el]:u64
0003b073: goto %000121bc

000121bc:
000121ce: R29 := mem[R31, el]:u64
000121d2: R30 := mem[R31 + 8, el]:u64
000121d5: R31 := R31 + 0x70
000121da: call R30 with noreturn

0003b074: sub md4_process_bytes(md4_process_bytes_result)
0003b3fe: md4_process_bytes_result :: out u32 = low:32[R0]

00012473:
0001247a: #4245 := R31 - 0x40
0001247f: mem := mem with [#4245, el]:u64 <- R29
00012484: mem := mem with [#4245 + 8, el]:u64 <- R30
00012488: R31 := #4245
0001248f: R29 := R31
00012497: #4250 := R31 + 0x10
0001249c: mem := mem with [#4250, el]:u64 <- R19
000124a1: mem := mem with [#4250 + 8, el]:u64 <- R20
000124a9: R19 := R0
000124b2: R0 := mem[R2 + 0x18, el]:u32
000124ba: #4259 := R31 + 0x20
000124bf: mem := mem with [#4259, el]:u64 <- R21
000124c4: mem := mem with [#4259 + 8, el]:u64 <- R22
000124cc: R21 := R2
000124d4: R22 := R1
000124e0: #4267 := ~31:0[R0] = 0
000124da: when #4267 goto %000124d8
0003b075: goto %00012625

000124d8:
000124e9: R20 := 31:0[R0]
000124f1: #4274 := R31 + 0x30
000124f6: mem := mem with [#4274, el]:u64 <- R23
000124fb: mem := mem with [#4274 + 8, el]:u64 <- R24
00012501: R23 := 0x80
00012509: R23 := R23 - R20
00012510: R24 := R2 + 0x1C
00012518: #4282 := 1 + ~R1 + R23
0001251c: NF := 63:63[#4282]
0001251f: VF := 63:63[R23] & 63:63[~R1] & ~63:63[#4282] | ~63:63[R23] &
          ~63:63[~R1] & 63:63[#4282]
00012522: ZF := #4282 = 0
00012525: CF := 63:63[R23] & 63:63[~R1] | 63:63[~R1] & ~63:63[#4282] |
          63:63[R23] & ~63:63[#4282]
0001252f: R0 := R24 + R20
00012546: #4290 := (~CF | ZF) <> 0
00012547: goto %0001253e

0001253e:
00012540: when #4290 goto %00012538
00012541: goto %0001253b

0001253b:
0001253c: R23 := R1
00012543: goto %0001253f

00012538:
00012539: R23 := R23
00012542: goto %0001253f

0001253f:
00012550: R1 := R19
00012558: R2 := R23
0001255d: R30 := 0x8724
0001255f: call @memcpy with return %00012561

00012561:
00012568: R1 := mem[R21 + 0x18, el]:u32
00012571: R1 := 31:0[R1] + 31:0[R23]
00012579: mem := mem with [R21 + 0x18, el]:u32 <- 31:0[R1]
00012580: #4301 := 0xFFFFFFFFFFFFFFC0 + extend:64[31:0[R1]]
00012584: NF := 63:63[#4301]
00012587: VF := 31:31[R1] & ~63:63[#4301]
0001258a: ZF := #4301 = 0
0001258d: CF := 31:31[R1] | 31:31[R1] & ~63:63[#4301] | ~63:63[#4301]
0001259d: #4303 := (CF & ~ZF) <> 0
00012597: when #4303 goto %00012595
0003b076: goto %00012604

00012595:
000125a5: R2 := R21
000125ad: R0 := R24
000125b4: R1 := R1 & 0xFFFFFFC0
000125b9: R30 := 0x8780
000125bb: call @md4_process_block with return %000125bd

000125bd:
000125c4: R2 := mem[R21 + 0x18, el]:u32
000125cc: R0 := R20 + R23
000125d3: R1 := R0 & 0xFFFFFFFFFFFFFFC0
000125db: R0 := R24
000125e3: R2 := 31:0[R2] & 0x3F
000125eb: mem := mem with [R21 + 0x18, el]:u32 <- 31:0[R2]
000125f3: R1 := R24 + R1
000125fa: R2 := R2 & 0x3F
000125ff: R30 := 0x87A4
00012601: call @memcpy with return %00012603

00012603:
00012606: goto %00012604

00012604:
0001260d: R19 := R19 + R23
00012615: R22 := R22 - R23
0001261e: R23 := mem[R31 + 0x30, el]:u64
00012622: R24 := mem[R31 + 0x38, el]:u64
00012627: goto %00012625

00012625:
0001262d: #4419 := 0xFFFFFFFFFFFFFFC1 + R22
00012631: NF := 63:63[#4419]
00012634: VF := 63:63[R22] & ~63:63[#4419]
00012637: ZF := #4419 = 0
0001263a: CF := 63:63[R22] | ~63:63[#4419] | 63:63[R22] & ~63:63[#4419]
00012649: #4421 := (~CF | ZF) <> 0
00012643: when #4421 goto %00012641
0003b077: goto %0001ae4d

0001ae4d:
0001ae52: #9917 := R19 & 3
0001ae56: NF := 63:63[#9917]
0001ae59: ZF := #9917 = 0
0001ae5c: CF := 0
0001ae5f: VF := 0
0001ae6c: #9919 := ZF
0001ae66: when #9919 goto %0001275a
0003b078: goto %0001ae6f

0001275a:
0001275f: R1 := R22 & 0xFFFFFFFFFFFFFFC0
00012767: R0 := R19
0001276e: R22 := R22 & 0x3F
00012776: R19 := R19 + R1
0001277e: R2 := R21
00012783: R30 := 0x86E4
00012785: call @md4_process_block with return %00012641

00012641:
00012655: #4422 := ~R22 = 0
0001264f: when #4422 goto %0001264d
0003b079: goto %0001ae1d

0001264d:
0001265c: R20 := R21 + 0x1C
00012664: #4426 := R31 + 0x30
00012669: mem := mem with [#4426, el]:u64 <- R23
0001266e: mem := mem with [#4426 + 8, el]:u64 <- R24
00012676: R23 := R19
0001267b: goto %00012679

0001ae1d:
0001ae24: R19 := mem[R31 + 0x10, el]:u64
0001ae28: R20 := mem[R31 + 0x18, el]:u64
0001ae31: R21 := mem[R31 + 0x20, el]:u64
0001ae35: R22 := mem[R31 + 0x28, el]:u64
0001ae3f: R29 := mem[R31, el]:u64
0001ae43: R30 := mem[R31 + 8, el]:u64
0001ae46: R31 := R31 + 0x40
0001ae4b: call R30 with noreturn

0001ae6f:
0001ae75: #9923 := R31 + 0x30
0001ae7a: mem := mem with [#9923, el]:u64 <- R23
0001ae7f: mem := mem with [#9923 + 8, el]:u64 <- R24
0001ae86: #9925 := 0xFFFFFFFFFFFFFFC0 + R22
0001ae8a: NF := 63:63[#9925]
0001ae8d: VF := 63:63[R22] & ~63:63[#9925]
0001ae90: ZF := #9925 = 0
0001ae93: CF := 63:63[R22] | ~63:63[#9925] | 63:63[R22] & ~63:63[#9925]
0001ae9c: R20 := R21 + 0x1C
0001aea8: #9927 := ZF
0001aea2: when #9927 goto %0001aea0
0003b07a: goto %0001aeb6

0001aea0:
0001aeb0: R23 := R19
0001aeb4: goto %00012679

0001aeb6:
0001aebb: R24 := R22 - 0x41
0001aec2: R24 := R24 >> 6
0001aec9: R23 := R24 + 1
0001aed1: R23 := R19 + (R23 << 6)
0003b07b: goto %0001aed5

0001aed5:
0001aedc: R0 := mem[R19, el]:u64
0001aee0: R1 := mem[R19 + 8, el]:u64
0001aee8: #9939 := R20
0001aeed: mem := mem with [#9939, el]:u64 <- R0
0001aef2: mem := mem with [#9939 + 8, el]:u64 <- R1
0001aefa: R2 := R21
0001af03: R0 := mem[R19 + 0x10, el]:u64
0001af07: R1 := mem[R19 + 0x18, el]:u64
0001af0f: #9948 := R20 + 0x10
0001af14: mem := mem with [#9948, el]:u64 <- R0
0001af19: mem := mem with [#9948 + 8, el]:u64 <- R1
0001af22: R4 := mem[R19 + 0x20, el]:u64
0001af26: R5 := mem[R19 + 0x28, el]:u64
0001af2e: #9954 := R20 + 0x20
0001af33: mem := mem with [#9954, el]:u64 <- R4
0001af38: mem := mem with [#9954 + 8, el]:u64 <- R5
0001af3e: R1 := 0x40
0001af47: R4 := mem[R19 + 0x30, el]:u64
0001af4b: R5 := mem[R19 + 0x38, el]:u64
0001af53: #9960 := R20 + 0x30
0001af58: mem := mem with [#9960, el]:u64 <- R4
0001af5d: mem := mem with [#9960 + 8, el]:u64 <- R5
0001af65: R19 := R19 + R1
0001af6d: R0 := R20
0001af72: R30 := 0x8684
0001af74: call @md4_process_block with return %0001af76

0001af76:
0001af7c: #9971 := 1 + ~R23 + R19
0001af80: NF := 63:63[#9971]
0001af83: VF := 63:63[R19] & 63:63[~R23] & ~63:63[#9971] | ~63:63[R19] &
          ~63:63[~R23] & 63:63[#9971]
0001af86: ZF := #9971 = 0
0001af89: CF := 63:63[R19] & 63:63[~R23] | 63:63[~R23] & ~63:63[#9971] |
          63:63[R19] & ~63:63[#9971]
0001af96: #9976 := ~ZF <> 0
0001af90: when #9976 goto %0001aed5
0003b07c: goto %0001af99

0001af99:
0001af9e: R22 := R22 - 0x40
0001afa6: R22 := R22 - (R24 << 6)
0003b07d: goto %00012679

00012679:
00012683: R19 := mem[R21 + 0x18, el]:u32
0001268b: R1 := R23
00012693: R2 := R22
0001269b: R0 := R20 + R19
000126a3: R19 := R19 + R22
000126a8: R30 := 0x86AC
000126aa: call @memcpy with return %000126ac

000126ac:
000126b1: #4444 := 0xFFFFFFFFFFFFFFC1 + R19
000126b5: NF := 63:63[#4444]
000126b8: VF := 63:63[R19] & ~63:63[#4444]
000126bb: ZF := #4444 = 0
000126be: CF := 63:63[R19] | ~63:63[#4444] | 63:63[R19] & ~63:63[#4444]
000126cd: #4446 := (CF & ~ZF) <> 0
000126c7: when #4446 goto %000126c5
0003b07e: goto %00012712

000126c5:
000126d5: R2 := R21
000126dd: R0 := R20
000126e4: R19 := R19 - 0x40
000126ea: R1 := 0x40
000126ef: R30 := 0x875C
000126f1: call @md4_process_block with return %000126f3

000126f3:
000126f9: R0 := R20
00012701: R2 := R19
00012708: R1 := R21 + 0x5C
0001270d: R30 := 0x876C
0001270f: call @memcpy with return %00012711

00012711:
00012714: goto %00012712

00012712:
0001271c: R23 := mem[R31 + 0x30, el]:u64
00012720: R24 := mem[R31 + 0x38, el]:u64
00012728: mem := mem with [R21 + 0x18, el]:u32 <- 31:0[R19]
00012731: R19 := mem[R31 + 0x10, el]:u64
00012735: R20 := mem[R31 + 0x18, el]:u64
0001273e: R21 := mem[R31 + 0x20, el]:u64
00012742: R22 := mem[R31 + 0x28, el]:u64
0001274c: R29 := mem[R31, el]:u64
00012750: R30 := mem[R31 + 8, el]:u64
00012753: R31 := R31 + 0x40
00012758: call R30 with noreturn

0003b07f: sub md4_read_ctx(md4_read_ctx_result)
0003b3ff: md4_read_ctx_result :: out u32 = low:32[R0]

00012208:
0001220e: R2 := R0
00012216: R0 := R1
0001221f: R1 := mem[R2, el]:u32
00012227: mem := mem with [R0, el]:u32 <- 31:0[R1]
00012230: R1 := mem[R2 + 4, el]:u32
00012238: mem := mem with [R0 + 4, el]:u32 <- 31:0[R1]
00012241: R1 := mem[R2 + 8, el]:u32
00012249: mem := mem with [R0 + 8, el]:u32 <- 31:0[R1]
00012252: R1 := mem[R2 + 0xC, el]:u32
0001225a: mem := mem with [R0 + 0xC, el]:u32 <- 31:0[R1]
0001225f: call R30 with noreturn

0003b080: sub md4_stream(md4_stream_result)
0003b400: md4_stream_result :: out u32 = low:32[R0]

00012787:
0001278b: R12 := 0x1140
00012793: R31 := R31 - R12
0001279b: #4524 := R31
000127a0: mem := mem with [#4524, el]:u64 <- R29
000127a5: mem := mem with [#4524 + 8, el]:u64 <- R30
000127ac: R29 := R31
000127b4: #4529 := R31 + 0x30
000127b9: mem := mem with [#4529, el]:u64 <- R23
000127be: mem := mem with [#4529 + 8, el]:u64 <- R24
000127c4: R23 := 0x27000
000127cc: R24 := R1
000127d2: R1 := 0x11000
000127da: #4537 := R31 + 0x10
000127df: mem := mem with [#4537, el]:u64 <- R19
000127e4: mem := mem with [#4537 + 8, el]:u64 <- R20
000127ec: R20 := R0
000127f4: R0 := mem[R23 + 0xFB8, el]:u64
000127fc: #4546 := R31 + 0x20
00012801: mem := mem with [#4546, el]:u64 <- R21
00012806: mem := mem with [#4546 + 8, el]:u64 <- R22
0001280d: R21 := R31 + 0xF0
00012816: V0 := mem[R1 + 0x8D0, el]:u64.mem[R1 + 0x8D8, el]:u64
0001281e: R1 := mem[R0, el]:u64
00012826: mem := mem with [R31 + 0x1138, el]:u64 <- R1
0001282c: R1 := 0
00012834: mem := mem with [R31 + 0x40, el]:u64 <- R25
0001283b: R25 := R31 + 0x50
00012841: R22 := 0x1000
00012849: mem := mem with [R31 + 0x60, el]:u64 <- 0
00012851: mem := mem with [R31 + 0x68, el]:u32 <- 0
00012859: mem := mem with [R31 + 0x50, el]:u128 <- V0
0003b081: goto %0001285b

0001285b:
0001285f: R19 := 0
00012864: goto %00012862

00012862:
0001286b: R2 := R22 - R19
00012873: R0 := R21 + R19
0001287b: R3 := R20
00012881: R1 := 1
00012886: R30 := 0x8848
00012889: call @fread with return %0001288b

0001288b:
00012891: R19 := R19 + R0
00012898: #4563 := 0xFFFFFFFFFFFFF000 + R19
0001289c: NF := 63:63[#4563]
0001289f: VF := 63:63[R19] & ~63:63[#4563]
000128a2: ZF := #4563 = 0
000128a5: CF := 63:63[R19] | ~63:63[#4563] | 63:63[R19] & ~63:63[#4563]
000128b3: #4565 := ~ZF <> 0
000128ad: when #4565 goto %000128ab
0003b082: goto %0001adfa

0001adfa:
0001ae00: R1 := R19
0001ae08: R2 := R25
0001ae10: R0 := R21
0001ae15: R30 := 0x8864
0001ae17: call @md4_process_block with return %0001ae19

0001ae19:
0001ae1b: goto %0001285b

000128ab:
000128bf: #4566 := R0 = 0
000128b9: when #4566 goto %000128b7
0003b083: goto %0001addf

000128b7:
000128c7: R0 := R20
000128cc: R30 := 0x8870
000128cf: call @ferror with return %000128d1

000128d1:
000128d8: R1 := 31:0[R0]
000128df: R0 := 1
000128eb: #4573 := ~31:0[R1] = 0
000128e5: when #4573 goto %000128e3
0003b084: goto %0001adcc

0001addf:
0001ade5: R0 := R20
0001adea: R30 := 0x8830
0001adec: call @feof with return %0001adee

0001adee:
0001adf7: #9881 := ~31:0[R0] = 0
0001adf1: when #9881 goto %0001adcc
0003b085: goto %00012862

0001adcc:
0001add1: R20 := R31 + 0x50
0001addc: #9877 := ~R19 = 0
0001add6: when #9877 goto %0001ad8b
0003b086: goto %0001adab

0001ad8b:
0001ad91: R1 := R19
0001ad99: R0 := R21
0001ada1: R2 := R20
0001ada6: R30 := 0x88DC
0001ada8: call @md4_process_bytes with return %0001adaa

0001adaa:
0001adad: goto %0001adab

0001adab:
0001adb4: R1 := R24
0001adbc: R0 := R20
0001adc1: R30 := 0x8890
0001adc3: call @md4_finish_ctx with return %0001adc5

0001adc5:
0001adca: R0 := 0
0003b087: goto %000128e3

000128e3:
000128f3: R23 := mem[R23 + 0xFB8, el]:u64
000128fb: R1 := mem[R31 + 0x1138, el]:u64
00012903: R2 := mem[R23, el]:u64
0001290b: #4580 := 1 + ~R2 + R1
0001290f: NF := 63:63[#4580]
00012912: VF := 63:63[R1] & 63:63[~R2] & ~63:63[#4580] | ~63:63[R1] &
          ~63:63[~R2] & 63:63[#4580]
00012915: ZF := #4580 = 0
00012918: CF := 63:63[R1] & 63:63[~R2] | 63:63[~R2] & ~63:63[#4580] |
          63:63[R1] & ~63:63[#4580]
0001291c: R1 := #4580
00012922: R2 := 0
0001292e: #4585 := ~ZF <> 0
00012928: when #4585 goto %00012926
0003b088: goto %0001ad3c

00012926:
00012933: R30 := 0x88E4
00012935: call @__stack_chk_fail with return %00012937

00012937:
0003b089: call @md4_buffer with noreturn

0001ad3c:
0001ad40: R12 := 0x1140
0001ad49: R29 := mem[R31, el]:u64
0001ad4d: R30 := mem[R31 + 8, el]:u64
0001ad56: R19 := mem[R31 + 0x10, el]:u64
0001ad5a: R20 := mem[R31 + 0x18, el]:u64
0001ad63: R21 := mem[R31 + 0x20, el]:u64
0001ad67: R22 := mem[R31 + 0x28, el]:u64
0001ad70: R23 := mem[R31 + 0x30, el]:u64
0001ad74: R24 := mem[R31 + 0x38, el]:u64
0001ad7c: R25 := mem[R31 + 0x40, el]:u64
0001ad84: R31 := R31 + R12
0001ad89: call R30 with noreturn

0003b08a: sub md5_buffer(md5_buffer_result)
0003b401: md5_buffer_result :: out u32 = low:32[R0]

00013904:
0001390b: #5405 := R31 - 0xF0
00013910: mem := mem with [#5405, el]:u64 <- R29
00013915: mem := mem with [#5405 + 8, el]:u64 <- R30
00013919: R31 := #5405
0001391f: R3 := 0x11000
00013926: R29 := R31
0001392e: #5410 := R31 + 0x10
00013933: mem := mem with [#5410, el]:u64 <- R19
00013938: mem := mem with [#5410 + 8, el]:u64 <- R20
0001393e: R19 := 0x27000
00013946: R20 := R2
0001394f: V0 := mem[R3 + 0x8D0, el]:u64.mem[R3 + 0x8D8, el]:u64
00013957: #5420 := R31 + 0x20
0001395c: mem := mem with [#5420, el]:u64 <- R21
00013961: mem := mem with [#5420 + 8, el]:u64 <- R22
00013968: R22 := R31 + 0x40
00013970: R3 := mem[R19 + 0xFB8, el]:u64
00013978: R2 := R22
00013980: mem := mem with [R31 + 0x40, el]:u128 <- V0
00013986: R21 := 0x40
0001398e: R4 := mem[R3, el]:u64
00013996: mem := mem with [R31 + 0xE8, el]:u64 <- R4
0001399c: R4 := 0
000139a4: mem := mem with [R31 + 0x30, el]:u64 <- R23
000139ac: mem := mem with [R31 + 0x50, el]:u64 <- 0
000139b4: mem := mem with [R31 + 0x58, el]:u32 <- 0
000139b9: R30 := 0xA098
000139bb: call @md5_process_bytes with return %000139bd

000139bd:
000139c5: R6 := mem[R31 + 0x54, el]:u32
000139ca: R0 := mem[R31 + 0x58, el]:u32
000139d0: R3 := 0x80
000139d6: R1 := 0x78
000139dc: R2 := 0x38
000139e3: #5428 := 0xFFFFFFFFFFFFFFC8 + extend:64[31:0[R0]]
000139e7: NF := 63:63[#5428]
000139ea: VF := 31:31[R0] & ~63:63[#5428]
000139ed: ZF := #5428 = 0
000139f0: CF := 31:31[R0] | 31:31[R0] & ~63:63[#5428] | ~63:63[#5428]
000139f9: R4 := 0xF
00013a0f: #5430 := ~CF <> 0
00013a10: goto %00013a07

00013a07:
00013a09: when #5430 goto %00013a01
00013a0a: goto %00013a04

00013a04:
00013a05: R21 := R3
00013a0c: goto %00013a08

00013a01:
00013a02: R21 := R21
00013a0b: goto %00013a08

00013a08:
00013a1a: R3 := mem[R31 + 0x50, el]:u32
00013a30: #5433 := ~CF <> 0
00013a31: goto %00013a28

00013a28:
00013a2a: when #5433 goto %00013a22
00013a2b: goto %00013a25

00013a25:
00013a26: R2 := R1
00013a2d: goto %00013a29

00013a22:
00013a23: R2 := R2
00013a2c: goto %00013a29

00013a29:
00013a38: R1 := 0x1F
00013a3e: R5 := 0xE
00013a54: #5435 := ~CF <> 0
00013a55: goto %00013a4c

00013a4c:
00013a4e: when #5435 goto %00013a46
00013a4f: goto %00013a49

00013a49:
00013a4a: R4 := R1
00013a51: goto %00013a4d

00013a46:
00013a47: R4 := R4
00013a50: goto %00013a4d

00013a4d:
00013a5c: R1 := 0x1E
00013a72: #5437 := ~CF <> 0
00013a73: goto %00013a6a

00013a6a:
00013a6c: when #5437 goto %00013a64
00013a6d: goto %00013a67

00013a67:
00013a68: R5 := R1
00013a6f: goto %00013a6b

00013a64:
00013a65: R5 := R5
00013a6e: goto %00013a6b

00013a6b:
00013a7c: #5441 := extend:64[31:0[R3]] + extend:64[31:0[R0]]
00013a80: NF := 63:63[#5441]
00013a83: VF := 31:31[R0] & 31:31[R3] & ~63:63[#5441] | ~31:31[R0] &
          ~31:31[R3] & 63:63[#5441]
00013a86: ZF := #5441 = 0
00013a89: CF := 31:31[R0] & 31:31[R3] | 31:31[R3] & ~63:63[#5441] | 31:31[R0]
          & ~63:63[#5441]
00013a8d: R3 := high:32[R3].#5441
00013a95: mem := mem with [R31 + 0x50, el]:u32 <- 31:0[R3]
00013aa1: #5446 := ~CF <> 0
00013a9b: when #5446 goto %00013a99
0003b08b: goto %00018539

00018539:
0001853f: R6 := extend:64[31:0[R6]] + 1
00018547: mem := mem with [R31 + 0x54, el]:u32 <- 31:0[R6]
0003b08c: goto %00013a99

00013a99:
00013aa8: R7 := R31 + 0x4C
00013aaf: R5 := R5 + 4
00013ab7: R8 := 31:0[R3] << 0x23
00013abe: R4 := R4 + 4
00013ac7: R0 := 31:0[R0]
00013ad0: R3 := 60:29[31:0[R6].31:0[R3]]
00013ad7: R23 := R22 + 0x1C
00013add: R1 := 0x11000
00013ae4: R1 := R1 + 0x8E0
00013aed: mem := mem with [R7 + (R5 << 2), el]:u32 <- 31:0[R8]
00013af5: R2 := R2 - R0
00013afc: R1 := R1 + 0xA90
00013b04: R0 := R23 + R0
00013b0d: mem := mem with [R7 + (R4 << 2), el]:u32 <- 31:0[R3]
00013b12: R30 := 0xA120
00013b14: call @memcpy with return %00013b16

00013b16:
00013b1c: R1 := R21
00013b24: R0 := R23
00013b2c: R2 := R22
00013b31: R30 := 0xA130
00013b33: call @md5_process_block with return %00013b35

00013b35:
00013b3c: V0 := mem[R31 + 0x40, el]:u64.mem[R31 + 0x48, el]:u64
00013b44: R19 := mem[R19 + 0xFB8, el]:u64
00013b4c: R0 := mem[R31 + 0xE8, el]:u64
00013b54: R1 := mem[R19, el]:u64
00013b5c: #5475 := 1 + ~R1 + R0
00013b60: NF := 63:63[#5475]
00013b63: VF := 63:63[R0] & 63:63[~R1] & ~63:63[#5475] | ~63:63[R0] &
          ~63:63[~R1] & 63:63[#5475]
00013b66: ZF := #5475 = 0
00013b69: CF := 63:63[R0] & 63:63[~R1] | 63:63[~R1] & ~63:63[#5475] |
          63:63[R0] & ~63:63[#5475]
00013b6d: R0 := #5475
00013b73: R1 := 0
00013b7b: mem := mem with [R20, el]:u128 <- V0
00013b87: #5480 := ~ZF <> 0
00013b81: when #5480 goto %00013b7f
0003b08d: goto %000184f9

00013b7f:
00013b8c: R30 := 0xA16C
00013b8e: call @__stack_chk_fail with return %00013b90

00013b90:
0003b08e: call @config_open with noreturn

000184f9:
000184ff: R0 := R20
00018508: R19 := mem[R31 + 0x10, el]:u64
0001850c: R20 := mem[R31 + 0x18, el]:u64
00018515: R21 := mem[R31 + 0x20, el]:u64
00018519: R22 := mem[R31 + 0x28, el]:u64
00018521: R23 := mem[R31 + 0x30, el]:u64
0001852b: R29 := mem[R31, el]:u64
0001852f: R30 := mem[R31 + 8, el]:u64
00018532: R31 := R31 + 0xF0
00018537: call R30 with noreturn

0003b08f: sub md5_finish_ctx(md5_finish_ctx_result)
0003b402: md5_finish_ctx_result :: out u32 = low:32[R0]

00012db2:
00012db9: #4790 := R31 - 0x30
00012dbe: mem := mem with [#4790, el]:u64 <- R29
00012dc3: mem := mem with [#4790 + 8, el]:u64 <- R30
00012dc7: R31 := #4790
00012dcd: R9 := 0x80
00012dd3: R2 := 0x38
00012dda: R29 := R31
00012de3: R3 := mem[R0 + 0x18, el]:u32
00012de9: R8 := 0x78
00012df1: #4796 := R31 + 0x10
00012df6: mem := mem with [#4796, el]:u64 <- R19
00012dfb: mem := mem with [#4796 + 8, el]:u64 <- R20
00012e03: R19 := R0
00012e0c: R0 := mem[R0 + 0x10, el]:u32
00012e13: #4802 := 0xFFFFFFFFFFFFFFC8 + extend:64[31:0[R3]]
00012e17: NF := 63:63[#4802]
00012e1a: VF := 31:31[R3] & ~63:63[#4802]
00012e1d: ZF := #4802 = 0
00012e20: CF := 31:31[R3] | 31:31[R3] & ~63:63[#4802] | ~63:63[#4802]
00012e2b: #4806 := R31 + 0x20
00012e30: mem := mem with [#4806, el]:u64 <- R21
00012e35: mem := mem with [#4806 + 8, el]:u64 <- R22
00012e4b: #4809 := ~CF <> 0
00012e4c: goto %00012e43

00012e43:
00012e45: when #4809 goto %00012e3d
00012e46: goto %00012e40

00012e40:
00012e41: R2 := R8
00012e48: goto %00012e44

00012e3d:
00012e3e: R2 := R2
00012e47: goto %00012e44

00012e44:
00012e53: R21 := 0x40
00012e59: R4 := 0xF
00012e6f: #4811 := ~CF <> 0
00012e70: goto %00012e67

00012e67:
00012e69: when #4811 goto %00012e61
00012e6a: goto %00012e64

00012e64:
00012e65: R21 := R9
00012e6c: goto %00012e68

00012e61:
00012e62: R21 := R21
00012e6b: goto %00012e68

00012e68:
00012e77: R7 := 0x1F
00012e7d: R5 := 0xE
00012e93: #4813 := ~CF <> 0
00012e94: goto %00012e8b

00012e8b:
00012e8d: when #4813 goto %00012e85
00012e8e: goto %00012e88

00012e88:
00012e89: R4 := R7
00012e90: goto %00012e8c

00012e85:
00012e86: R4 := R4
00012e8f: goto %00012e8c

00012e8c:
00012e9b: R6 := 0x1E
00012eb1: #4815 := ~CF <> 0
00012eb2: goto %00012ea9

00012ea9:
00012eab: when #4815 goto %00012ea3
00012eac: goto %00012ea6

00012ea6:
00012ea7: R5 := R6
00012eae: goto %00012eaa

00012ea3:
00012ea4: R5 := R5
00012ead: goto %00012eaa

00012eaa:
00012ebb: #4819 := extend:64[31:0[R3]] + extend:64[31:0[R0]]
00012ebf: NF := 63:63[#4819]
00012ec2: VF := 31:31[R0] & 31:31[R3] & ~63:63[#4819] | ~31:31[R0] &
          ~31:31[R3] & 63:63[#4819]
00012ec5: ZF := #4819 = 0
00012ec8: CF := 31:31[R0] & 31:31[R3] | 31:31[R3] & ~63:63[#4819] | 31:31[R0]
          & ~63:63[#4819]
00012ecc: R0 := high:32[R0].#4819
00012ed4: mem := mem with [R19 + 0x10, el]:u32 <- 31:0[R0]
00012edc: R20 := R1
00012ee5: R1 := mem[R19 + 0x14, el]:u32
00012ef1: #4828 := ~CF <> 0
00012eeb: when #4828 goto %00012ee9
0003b090: goto %0001921b

0001921b:
00019221: R1 := extend:64[31:0[R1]] + 1
00019229: mem := mem with [R19 + 0x14, el]:u32 <- 31:0[R1]
0003b091: goto %00012ee9

00012ee9:
00012ef9: R5 := R19 + (R5 << 2)
00012f01: R4 := R19 + (R4 << 2)
00012f09: R7 := 31:0[R0] << 0x23
00012f12: R6 := 60:29[31:0[R1].31:0[R0]]
00012f19: R22 := R19 + 0x1C
00012f22: R0 := 31:0[R3]
00012f2a: mem := mem with [R5 + 0x1C, el]:u32 <- 31:0[R7]
00012f30: R1 := 0x11000
00012f38: mem := mem with [R4 + 0x1C, el]:u32 <- 31:0[R6]
00012f3f: R1 := R1 + 0x8E0
00012f47: R2 := R2 - R0
00012f4e: R1 := R1 + 0xA90
00012f56: R0 := R22 + R0
00012f5b: R30 := 0x9734
00012f5d: call @memcpy with return %00012f5f

00012f5f:
00012f65: R2 := R19
00012f6d: R1 := R21
00012f75: R0 := R22
00012f7a: R30 := 0x9744
00012f7c: call @md5_process_block with return %00012f7e

00012f7e:
00012f85: R1 := mem[R19, el]:u32
00012f8d: R0 := R20
00012f96: R21 := mem[R31 + 0x20, el]:u64
00012f9a: R22 := mem[R31 + 0x28, el]:u64
00012fa2: mem := mem with [R20, el]:u32 <- 31:0[R1]
00012fab: R1 := mem[R19 + 4, el]:u32
00012fb3: mem := mem with [R20 + 4, el]:u32 <- 31:0[R1]
00012fbc: R1 := mem[R19 + 8, el]:u32
00012fc4: mem := mem with [R20 + 8, el]:u32 <- 31:0[R1]
00012fcd: R1 := mem[R19 + 0xC, el]:u32
00012fd5: mem := mem with [R20 + 0xC, el]:u32 <- 31:0[R1]
00012fde: R19 := mem[R31 + 0x10, el]:u64
00012fe2: R20 := mem[R31 + 0x18, el]:u64
00012fec: R29 := mem[R31, el]:u64
00012ff0: R30 := mem[R31 + 8, el]:u64
00012ff3: R31 := R31 + 0x30
00012ff8: call R30 with noreturn

0003b092: sub md5_init_ctx(md5_init_ctx_result)
0003b403: md5_init_ctx_result :: out u32 = low:32[R0]

00012c08:
00012c0c: R1 := 0x11000
00012c14: mem := mem with [R0 + 0x10, el]:u64 <- 0
00012c1c: mem := mem with [R0 + 0x18, el]:u32 <- 0
00012c25: V0 := mem[R1 + 0x8D0, el]:u64.mem[R1 + 0x8D8, el]:u64
00012c2d: mem := mem with [R0, el]:u128 <- V0
00012c32: call R30 with noreturn

0003b093: sub md5_process_block(md5_process_block_result)
0003b404: md5_process_block_result :: out u32 = low:32[R0]

00012c8f:
00012c96: #4703 := R31 - 0x60
00012c9b: mem := mem with [#4703, el]:u64 <- R29
00012ca0: mem := mem with [#4703 + 8, el]:u64 <- R30
00012ca4: R31 := #4703
00012cab: R29 := R31
00012cb4: R3 := mem[R2 + 0x10, el]:u32
00012cbc: #4709 := R31 + 0x40
00012cc1: mem := mem with [#4709, el]:u64 <- R25
00012cc6: mem := mem with [#4709 + 8, el]:u64 <- R26
00012ccd: R26 := R1 & 0xFFFFFFFFFFFFFFFC
00012cd6: R3 := 31:0[R3] + 31:0[R1]
00012cde: mem := mem with [R2 + 0x10, el]:u32 <- 31:0[R3]
00012ce6: R26 := R0 + R26
00012cef: R10 := mem[R2 + 4, el]:u32
00012cf7: #4745 := 1 + extend:64[~(31:0[R3] << 0x10)] + R1
00012cfb: NF := 63:63[#4745]
00012cfe: VF := 63:63[R1] & 31:31[~(31:0[R3] << 0x10)] & ~63:63[#4745] |
          ~63:63[R1] & ~31:31[~(31:0[R3] << 0x10)] & 63:63[#4745]
00012d01: ZF := #4745 = 0
00012d04: CF := 63:63[R1] & 31:31[~(31:0[R3] << 0x10)] |
          31:31[~(31:0[R3] << 0x10)] & ~63:63[#4745] | 63:63[R1] &
          ~63:63[#4745]
00012d0f: V0 := high:96[V0].mem[R2 + 8, el]:u32
00012d13: V1 := high:96[V1].mem[R2 + 0xC, el]:u32
00012d1b: V2 := high:96[V2].mem[R2, el]:u32
00012d28: #4756 := (~CF | ZF) <> 0
00012d22: when #4756 goto %00012d20
0003b094: goto %0001a7c4

0001a7c4:
0001a7cb: R1 := mem[R2 + 0x14, el]:u32
0001a7d3: R1 := extend:64[31:0[R1]] + 1
0001a7db: mem := mem with [R2 + 0x14, el]:u32 <- 31:0[R1]
0003b095: goto %00012d20

00012d20:
00012d30: #4760 := 1 + ~R26 + R0
00012d34: NF := 63:63[#4760]
00012d37: VF := 63:63[R0] & 63:63[~R26] & ~63:63[#4760] | ~63:63[R0] &
          ~63:63[~R26] & 63:63[#4760]
00012d3a: ZF := #4760 = 0
00012d3d: CF := 63:63[R0] & 63:63[~R26] | 63:63[~R26] & ~63:63[#4760] |
          63:63[R0] & ~63:63[#4760]
00012d4b: #4765 := CF
00012d45: when #4765 goto %00012d43
0003b096: goto %0001922b

0001922b:
00019231: #8348 := R31 + 0x50
00019236: mem := mem with [#8348, el]:u64 <- R27
0001923b: mem := mem with [#8348 + 8, el]:u64 <- R28
00019242: R28 := 0xA478
00019249: R27 := 0xB756
00019250: R28 := high:32[R28].extend:64[31:0[R28]] & 0xFFFFFFFF0000FFFF |
          0xD76A0000
00019257: R27 := high:32[R27].extend:64[31:0[R27]] & 0xFFFFFFFF0000FFFF |
          0xE8C70000
0001925f: #8355 := R31 + 0x10
00019264: mem := mem with [#8355, el]:u64 <- R19
00019269: mem := mem with [#8355 + 8, el]:u64 <- R20
00019271: #8360 := R31 + 0x20
00019276: mem := mem with [#8360, el]:u64 <- R21
0001927b: mem := mem with [#8360 + 8, el]:u64 <- R22
00019283: #8365 := R31 + 0x30
00019288: mem := mem with [#8365, el]:u64 <- R23
0001928d: mem := mem with [#8365 + 8, el]:u64 <- R24
0003b097: goto %0001928f

0001928f:
00019295: V3 := high:64[V3].63:0[V0] ^ 63:0[V1]
000192a3: R19 := mem[R0, el]:u32
000192a8: R15 := mem[R0 + 4, el]:u32
000192b3: R6 := 0x70DB
000192bc: R1 := 31:0[R1] + 31:0[R28]
000192c3: R6 := high:32[R6].extend:64[31:0[R6]] & 0xFFFFFFFF0000FFFF |
          0x24200000
000192cd: R8 := mem[R0 + 8, el]:u32
000192d2: R16 := mem[R0 + 0xC, el]:u32
000192db: R6 := 31:0[R7] + 31:0[R6]
000192e4: R4 := 31:0[R4] & 31:0[R10]
000192ed: R14 := mem[R0 + 0x20, el]:u32
000192f6: R4 := 31:0[R4] ^ 31:0[R3]
00019301: R4 := 31:0[R4] + 31:0[R19]
0001930a: R4 := 31:0[R4] + 31:0[R1]
00019316: R11 := mem[R0 + 0x10, el]:u32
0001931b: R17 := mem[R0 + 0x14, el]:u32
00019324: R4 := 56:25[31:0[R4].31:0[R4]]
0001932d: R4 := 31:0[R4] + 31:0[R10]
00019336: R3 := 31:0[R10] ^ 31:0[R3]
0001933f: R3 := 31:0[R3] & 31:0[R4]
00019348: R5 := 31:0[R1] + 31:0[R27]
00019351: R3 := 31:0[R3] ^ 31:0[R7]
0001935a: R1 := 31:0[R4] ^ 31:0[R10]
00019363: R3 := 31:0[R3] + 31:0[R15]
0001936a: R7 := 0xCEEE
00019373: R3 := 31:0[R3] + 31:0[R5]
0001937a: R5 := 0xFAF
00019381: R5 := high:32[R5].extend:64[31:0[R5]] & 0xFFFFFFFF0000FFFF |
          0xF57C0000
0001938a: R25 := 31:0[R11] + 31:0[R5]
00019391: R5 := 0xC62A
0001939a: R3 := 51:20[31:0[R3].31:0[R3]]
000193a3: R3 := 31:0[R4] + 31:0[R3]
000193aa: R5 := high:32[R5].extend:64[31:0[R5]] & 0xFFFFFFFF0000FFFF |
          0x47870000
000193b3: R1 := 31:0[R1] & 31:0[R3]
000193bc: R23 := 31:0[R17] + 31:0[R5]
000193c5: R1 := 31:0[R1] ^ 31:0[R10]
000193ce: R5 := 31:0[R4] ^ 31:0[R3]
000193d7: R1 := 31:0[R1] + 31:0[R8]
000193de: R7 := high:32[R7].extend:64[31:0[R7]] & 0xFFFFFFFF0000FFFF |
          0xC1BD0000
000193e7: R1 := 31:0[R1] + 31:0[R6]
000193f0: R9 := 31:0[R10] + 31:0[R7]
000193fa: R13 := mem[R0 + 0x18, el]:u32
000193ff: R18 := mem[R0 + 0x1C, el]:u32
00019408: R1 := 46:15[31:0[R1].31:0[R1]]
00019411: R1 := 31:0[R3] + 31:0[R1]
00019418: R7 := 0x4613
00019421: R5 := 31:0[R5] & 31:0[R1]
0001942a: R21 := 31:0[R3] ^ 31:0[R1]
00019433: R5 := 31:0[R5] ^ 31:0[R4]
0001943a: R7 := high:32[R7].extend:64[31:0[R7]] & 0xFFFFFFFF0000FFFF |
          0xA8300000
00019443: R5 := 31:0[R5] + 31:0[R16]
0001944c: R20 := 31:0[R13] + 31:0[R7]
00019455: R5 := 31:0[R5] + 31:0[R9]
0001945c: R6 := 0x9501
00019463: R6 := high:32[R6].extend:64[31:0[R6]] & 0xFFFFFFFF0000FFFF |
          0xFD460000
0001946c: R22 := 31:0[R18] + 31:0[R6]
00019473: R6 := 0x98D8
0001947c: R5 := 41:10[31:0[R5].31:0[R5]]
00019485: R5 := 31:0[R1] + 31:0[R5]
0001948c: R6 := high:32[R6].extend:64[31:0[R6]] & 0xFFFFFFFF0000FFFF |
          0x69800000
00019495: R21 := 31:0[R21] & 31:0[R5]
0001949e: R30 := 31:0[R1] ^ 31:0[R5]
000194a7: R21 := 31:0[R21] ^ 31:0[R3]
000194b0: R12 := 31:0[R14] + 31:0[R6]
000194b9: R4 := 31:0[R21] + 31:0[R4]
000194c2: R7 := mem[R0 + 0x24, el]:u32
000194cb: R4 := 31:0[R25] + 31:0[R4]
000194d2: R6 := 0xF7AF
000194d9: R6 := high:32[R6].extend:64[31:0[R6]] & 0xFFFFFFFF0000FFFF |
          0x8B440000
000194e2: R24 := 31:0[R7] + 31:0[R6]
000194eb: R6 := mem[R0 + 0x28, el]:u32
000194f4: R4 := 56:25[31:0[R4].31:0[R4]]
000194fd: R4 := 31:0[R5] + 31:0[R4]
00019504: R21 := 0xFFFFFFFFFFFF5BB1
0001950d: R25 := 31:0[R30] & 31:0[R4]
00019516: R21 := 31:0[R6] + 31:0[R21]
0001951f: R25 := 31:0[R25] ^ 31:0[R1]
00019528: R3 := 31:0[R25] + 31:0[R3]
00019531: R25 := 31:0[R5] ^ 31:0[R4]
0001953a: R3 := 31:0[R23] + 31:0[R3]
00019541: R23 := 0xD7BE
00019548: R23 := high:32[R23].extend:64[31:0[R23]] & 0xFFFFFFFF0000FFFF |
          0x895C0000
00019551: R3 := 51:20[31:0[R3].31:0[R3]]
0001955a: R3 := 31:0[R4] + 31:0[R3]
00019563: R25 := 31:0[R25] & 31:0[R3]
0001956c: R25 := 31:0[R25] ^ 31:0[R5]
00019575: R1 := 31:0[R25] + 31:0[R1]
0001957e: R25 := 31:0[R4] ^ 31:0[R3]
00019587: R1 := 31:0[R20] + 31:0[R1]
00019591: R9 := mem[R0 + 0x2C, el]:u32
00019596: R20 := mem[R0 + 0x30, el]:u32
0001959f: R1 := 46:15[31:0[R1].31:0[R1]]
000195a8: R1 := 31:0[R3] + 31:0[R1]
000195b1: R25 := 31:0[R25] & 31:0[R1]
000195ba: R23 := 31:0[R9] + 31:0[R23]
000195c3: R25 := 31:0[R25] ^ 31:0[R4]
000195cc: R5 := 31:0[R25] + 31:0[R5]
000195d5: R25 := 31:0[R3] ^ 31:0[R1]
000195de: R5 := 31:0[R22] + 31:0[R5]
000195e5: R22 := 0x1122
000195ec: R22 := high:32[R22].extend:64[31:0[R22]] & 0xFFFFFFFF0000FFFF |
          0x6B900000
000195f5: R22 := 31:0[R20] + 31:0[R22]
000195fe: R5 := 41:10[31:0[R5].31:0[R5]]
00019607: R5 := 31:0[R1] + 31:0[R5]
00019610: R25 := 31:0[R25] & 31:0[R5]
00019619: R25 := 31:0[R25] ^ 31:0[R3]
00019622: R4 := 31:0[R25] + 31:0[R4]
0001962b: R25 := 31:0[R1] ^ 31:0[R5]
00019634: R4 := 31:0[R12] + 31:0[R4]
0001963d: R12 := mem[R0 + 0x34, el]:u32
00019646: R4 := 56:25[31:0[R4].31:0[R4]]
0001964f: R4 := 31:0[R5] + 31:0[R4]
00019658: R25 := 31:0[R25] & 31:0[R4]
00019661: R30 := 31:0[R5] ^ 31:0[R4]
0001966a: R25 := 31:0[R25] ^ 31:0[R1]
00019673: R3 := 31:0[R25] + 31:0[R3]
0001967c: R24 := 31:0[R24] + 31:0[R3]
00019683: R3 := 0x7193
0001968a: R3 := high:32[R3].extend:64[31:0[R3]] & 0xFFFFFFFF0000FFFF |
          0xFD980000
00019693: R25 := 31:0[R12] + 31:0[R3]
0001969a: R3 := 0x438E
000196a3: R24 := 51:20[31:0[R24].31:0[R24]]
000196ac: R24 := 31:0[R4] + 31:0[R24]
000196b3: R3 := high:32[R3].extend:64[31:0[R3]] & 0xFFFFFFFF0000FFFF |
          0xA6790000
000196bc: R30 := 31:0[R30] & 31:0[R24]
000196c5: R30 := 31:0[R30] ^ 31:0[R5]
000196ce: R30 := 31:0[R30] + 31:0[R1]
000196d7: R1 := 31:0[R4] ^ 31:0[R24]
000196e0: R30 := 31:0[R21] + 31:0[R30]
000196e9: R30 := 46:15[31:0[R30].31:0[R30]]
000196f2: R30 := 31:0[R24] + 31:0[R30]
000196fb: R1 := 31:0[R1] & 31:0[R30]
00019704: R1 := 31:0[R1] ^ 31:0[R4]
0001970d: R5 := 31:0[R1] + 31:0[R5]
00019716: R1 := 31:0[R24] ^ 31:0[R30]
0001971f: R23 := 31:0[R23] + 31:0[R5]
00019728: R23 := 41:10[31:0[R23].31:0[R23]]
00019731: R23 := 31:0[R30] + 31:0[R23]
0001973a: R1 := 31:0[R1] & 31:0[R23]
00019743: R1 := 31:0[R1] ^ 31:0[R24]
0001974c: R1 := 31:0[R1] + 31:0[R4]
00019755: R4 := 31:0[R30] ^ 31:0[R23]
0001975e: R22 := 31:0[R22] + 31:0[R1]
00019768: R21 := mem[R0 + 0x38, el]:u32
0001976d: R1 := mem[R0 + 0x3C, el]:u32
00019776: R22 := 56:25[31:0[R22].31:0[R22]]
0001977f: R22 := 31:0[R23] + 31:0[R22]
00019786: R0 := R0 + 0x40
0001978f: R4 := 31:0[R4] & 31:0[R22]
00019798: R5 := 31:0[R23] ^ 31:0[R22]
000197a1: R4 := 31:0[R4] ^ 31:0[R30]
000197aa: R3 := 31:0[R21] + 31:0[R3]
000197b3: R24 := 31:0[R4] + 31:0[R24]
000197ba: R4 := 0x821
000197c3: R25 := 31:0[R25] + 31:0[R24]
000197ca: R4 := high:32[R4].extend:64[31:0[R4]] & 0xFFFFFFFF0000FFFF |
          0x49B40000
000197d3: R4 := 31:0[R1] + 31:0[R4]
000197db: #8690 := 1 + ~R0 + R26
000197df: NF := 63:63[#8690]
000197e2: VF := 63:63[R26] & 63:63[~R0] & ~63:63[#8690] | ~63:63[R26] &
          ~63:63[~R0] & 63:63[#8690]
000197e5: ZF := #8690 = 0
000197e8: CF := 63:63[R26] & 63:63[~R0] | 63:63[~R0] & ~63:63[#8690] |
          63:63[R26] & ~63:63[#8690]
000197f3: R25 := 51:20[31:0[R25].31:0[R25]]
000197fc: R25 := 31:0[R22] + 31:0[R25]
00019805: R5 := 31:0[R5] & 31:0[R25]
0001980e: R5 := 31:0[R5] ^ 31:0[R23]
00019817: R30 := 31:0[R5] + 31:0[R30]
00019820: R5 := 31:0[R22] ^ 31:0[R25]
00019829: R30 := 31:0[R3] + 31:0[R30]
00019830: R3 := 0x2562
00019837: R3 := high:32[R3].extend:64[31:0[R3]] & 0xFFFFFFFF0000FFFF |
          0xF61E0000
00019840: R24 := 31:0[R15] + 31:0[R3]
00019849: R30 := 46:15[31:0[R30].31:0[R30]]
00019852: R30 := 31:0[R25] + 31:0[R30]
0001985b: R3 := 31:0[R5] & 31:0[R30]
00019864: R3 := 31:0[R3] ^ 31:0[R22]
0001986d: R23 := 31:0[R3] + 31:0[R23]
00019874: R3 := 0xB340
0001987d: R23 := 31:0[R4] + 31:0[R23]
00019884: R3 := high:32[R3].extend:64[31:0[R3]] & 0xFFFFFFFF0000FFFF |
          0xC0400000
0001988d: R5 := 31:0[R13] + 31:0[R3]
00019894: R3 := 0x5A51
0001989b: R3 := high:32[R3].extend:64[31:0[R3]] & 0xFFFFFFFF0000FFFF |
          0x265E0000
000198a4: R23 := 41:10[31:0[R23].31:0[R23]]
000198ad: R23 := 31:0[R30] + 31:0[R23]
000198b6: R4 := 31:0[R9] + 31:0[R3]
000198bf: R3 := 31:0[R30] ^ 31:0[R23]
000198c8: R3 := 31:0[R3] & 31:0[R25]
000198d1: R3 := 31:0[R3] ^ 31:0[R30]
000198da: R22 := 31:0[R3] + 31:0[R22]
000198e1: R3 := 0xC7AA
000198ea: R24 := 31:0[R24] + 31:0[R22]
000198f1: R3 := high:32[R3].extend:64[31:0[R3]] & 0xFFFFFFFF0000FFFF |
          0xE9B60000
000198fa: R22 := 31:0[R19] + 31:0[R3]
00019903: R24 := 58:27[31:0[R24].31:0[R24]]
0001990c: R24 := 31:0[R23] + 31:0[R24]
00019915: R3 := 31:0[R23] ^ 31:0[R24]
0001991e: R3 := 31:0[R3] & 31:0[R30]
00019927: R3 := 31:0[R3] ^ 31:0[R23]
00019930: R25 := 31:0[R3] + 31:0[R25]
00019937: R3 := 0x105D
00019940: R5 := 31:0[R5] + 31:0[R25]
00019947: R3 := high:32[R3].extend:64[31:0[R3]] & 0xFFFFFFFF0000FFFF |
          0xD62F0000
00019950: R3 := 31:0[R17] + 31:0[R3]
00019959: R5 := 54:23[31:0[R5].31:0[R5]]
00019962: R5 := 31:0[R24] + 31:0[R5]
0001996b: R25 := 31:0[R24] ^ 31:0[R5]
00019974: R25 := 31:0[R25] & 31:0[R23]
0001997d: R25 := 31:0[R25] ^ 31:0[R24]
00019986: R30 := 31:0[R25] + 31:0[R30]
0001998f: R30 := 31:0[R4] + 31:0[R30]
00019996: R4 := 0x1453
0001999d: R4 := high:32[R4].extend:64[31:0[R4]] & 0xFFFFFFFF0000FFFF |
          0x2440000
000199a6: R25 := 31:0[R6] + 31:0[R4]
000199af: R30 := 49:18[31:0[R30].31:0[R30]]
000199b8: R30 := 31:0[R5] + 31:0[R30]
000199c1: R4 := 31:0[R5] ^ 31:0[R30]
000199ca: R4 := 31:0[R4] & 31:0[R24]
000199d3: R4 := 31:0[R4] ^ 31:0[R5]
000199dc: R23 := 31:0[R4] + 31:0[R23]
000199e3: R4 := 0xE681
000199ec: R22 := 31:0[R22] + 31:0[R23]
000199f3: R4 := high:32[R4].extend:64[31:0[R4]] & 0xFFFFFFFF0000FFFF |
          0xD8A10000
000199fc: R4 := 31:0[R1] + 31:0[R4]
00019a05: R22 := 43:12[31:0[R22].31:0[R22]]
00019a0e: R22 := 31:0[R30] + 31:0[R22]
00019a17: R23 := 31:0[R30] ^ 31:0[R22]
00019a20: R23 := 31:0[R23] & 31:0[R5]
00019a29: R23 := 31:0[R23] ^ 31:0[R30]
00019a32: R24 := 31:0[R23] + 31:0[R24]
00019a3b: R24 := 31:0[R3] + 31:0[R24]
00019a42: R3 := 0xFBC8
00019a49: R3 := high:32[R3].extend:64[31:0[R3]] & 0xFFFFFFFF0000FFFF |
          0xE7D30000
00019a52: R23 := 31:0[R11] + 31:0[R3]
00019a5b: R24 := 58:27[31:0[R24].31:0[R24]]
00019a64: R24 := 31:0[R22] + 31:0[R24]
00019a6d: R3 := 31:0[R22] ^ 31:0[R24]
00019a76: R3 := 31:0[R3] & 31:0[R30]
00019a7f: R3 := 31:0[R3] ^ 31:0[R22]
00019a88: R5 := 31:0[R3] + 31:0[R5]
00019a8f: R3 := 0xCDE6
00019a98: R25 := 31:0[R25] + 31:0[R5]
00019a9f: R3 := high:32[R3].extend:64[31:0[R3]] & 0xFFFFFFFF0000FFFF |
          0x21E10000
00019aa8: R3 := 31:0[R7] + 31:0[R3]
00019ab1: R25 := 54:23[31:0[R25].31:0[R25]]
00019aba: R25 := 31:0[R24] + 31:0[R25]
00019ac3: R5 := 31:0[R24] ^ 31:0[R25]
00019acc: R5 := 31:0[R5] & 31:0[R22]
00019ad5: R5 := 31:0[R5] ^ 31:0[R24]
00019ade: R30 := 31:0[R5] + 31:0[R30]
00019ae7: R30 := 31:0[R4] + 31:0[R30]
00019aee: R4 := 0x7D6
00019af5: R4 := high:32[R4].extend:64[31:0[R4]] & 0xFFFFFFFF0000FFFF |
          0xC3370000
00019afe: R5 := 31:0[R21] + 31:0[R4]
00019b07: R30 := 49:18[31:0[R30].31:0[R30]]
00019b10: R30 := 31:0[R25] + 31:0[R30]
00019b19: R4 := 31:0[R25] ^ 31:0[R30]
00019b22: R4 := 31:0[R4] & 31:0[R24]
00019b2b: R4 := 31:0[R4] ^ 31:0[R25]
00019b34: R22 := 31:0[R4] + 31:0[R22]
00019b3b: R4 := 0xD87
00019b44: R23 := 31:0[R23] + 31:0[R22]
00019b4b: R4 := high:32[R4].extend:64[31:0[R4]] & 0xFFFFFFFF0000FFFF |
          0xF4D50000
00019b54: R4 := 31:0[R16] + 31:0[R4]
00019b5d: R23 := 43:12[31:0[R23].31:0[R23]]
00019b66: R23 := 31:0[R30] + 31:0[R23]
00019b6f: R22 := 31:0[R30] ^ 31:0[R23]
00019b78: R22 := 31:0[R22] & 31:0[R25]
00019b81: R22 := 31:0[R22] ^ 31:0[R30]
00019b8a: R24 := 31:0[R22] + 31:0[R24]
00019b91: R22 := 0x14ED
00019b9a: R24 := 31:0[R3] + 31:0[R24]
00019ba1: R22 := high:32[R22].extend:64[31:0[R22]] & 0xFFFFFFFF0000FFFF |
          0x455A0000
00019baa: R22 := 31:0[R14] + 31:0[R22]
00019bb3: R24 := 58:27[31:0[R24].31:0[R24]]
00019bbc: R24 := 31:0[R23] + 31:0[R24]
00019bc5: R3 := 31:0[R23] ^ 31:0[R24]
00019bce: R3 := 31:0[R3] & 31:0[R30]
00019bd7: R3 := 31:0[R3] ^ 31:0[R23]
00019be0: R25 := 31:0[R3] + 31:0[R25]
00019be7: R3 := 0xE905
00019bf0: R5 := 31:0[R5] + 31:0[R25]
00019bf7: R3 := high:32[R3].extend:64[31:0[R3]] & 0xFFFFFFFF0000FFFF |
          0xA9E30000
00019c00: R3 := 31:0[R12] + 31:0[R3]
00019c09: R5 := 54:23[31:0[R5].31:0[R5]]
00019c12: R5 := 31:0[R24] + 31:0[R5]
00019c1b: R25 := 31:0[R24] ^ 31:0[R5]
00019c24: R25 := 31:0[R25] & 31:0[R23]
00019c2d: R25 := 31:0[R25] ^ 31:0[R24]
00019c36: R30 := 31:0[R25] + 31:0[R30]
00019c3d: R25 := 0xA3F8
00019c46: R4 := 31:0[R4] + 31:0[R30]
00019c4d: R25 := high:32[R25].extend:64[31:0[R25]] & 0xFFFFFFFF0000FFFF |
          0xFCEF0000
00019c56: R25 := 31:0[R8] + 31:0[R25]
00019c5f: R4 := 49:18[31:0[R4].31:0[R4]]
00019c68: R4 := 31:0[R5] + 31:0[R4]
00019c71: R30 := 31:0[R5] ^ 31:0[R4]
00019c7a: R30 := 31:0[R30] & 31:0[R24]
00019c83: R30 := 31:0[R30] ^ 31:0[R5]
00019c8c: R23 := 31:0[R30] + 31:0[R23]
00019c93: R30 := 0x2D9
00019c9c: R23 := 31:0[R22] + 31:0[R23]
00019ca3: R30 := high:32[R30].extend:64[31:0[R30]] & 0xFFFFFFFF0000FFFF |
          0x676F0000
00019cac: R30 := 31:0[R18] + 31:0[R30]
00019cb5: R23 := 43:12[31:0[R23].31:0[R23]]
00019cbe: R23 := 31:0[R4] + 31:0[R23]
00019cc7: R22 := 31:0[R4] ^ 31:0[R23]
00019cd0: R22 := 31:0[R22] & 31:0[R5]
00019cd9: R22 := 31:0[R22] ^ 31:0[R4]
00019ce2: R24 := 31:0[R22] + 31:0[R24]
00019ce9: R22 := 0x4C8A
00019cf2: R3 := 31:0[R3] + 31:0[R24]
00019cf9: R22 := high:32[R22].extend:64[31:0[R22]] & 0xFFFFFFFF0000FFFF |
          0x8D2A0000
00019d02: R22 := 31:0[R20] + 31:0[R22]
00019d0b: R3 := 58:27[31:0[R3].31:0[R3]]
00019d14: R3 := 31:0[R23] + 31:0[R3]
00019d1d: R24 := 31:0[R23] ^ 31:0[R3]
00019d26: R24 := 31:0[R24] & 31:0[R4]
00019d2f: R24 := 31:0[R24] ^ 31:0[R23]
00019d38: R5 := 31:0[R24] + 31:0[R5]
00019d41: R25 := 31:0[R25] + 31:0[R5]
00019d49: R5 := low:32[extend:64[31:0[R17]] - 0x5C000]
00019d51: R5 := low:32[extend:64[31:0[R5]] - 0x6BE]
00019d5a: R25 := 54:23[31:0[R25].31:0[R25]]
00019d63: R25 := 31:0[R3] + 31:0[R25]
00019d6c: R24 := 31:0[R3] ^ 31:0[R25]
00019d75: R24 := 31:0[R24] & 31:0[R23]
00019d7e: R24 := 31:0[R24] ^ 31:0[R3]
00019d87: R4 := 31:0[R24] + 31:0[R4]
00019d90: R4 := 31:0[R30] + 31:0[R4]
00019d99: R24 := 49:18[31:0[R4].31:0[R4]]
00019da2: R24 := 31:0[R25] + 31:0[R24]
00019dab: R4 := 31:0[R25] ^ 31:0[R24]
00019db4: R30 := 31:0[R4] & 31:0[R3]
00019dbd: R30 := 31:0[R30] ^ 31:0[R25]
00019dc6: R23 := 31:0[R30] + 31:0[R23]
00019dcd: R30 := 0xF681
00019dd6: R22 := 31:0[R22] + 31:0[R23]
00019ddd: R30 := high:32[R30].extend:64[31:0[R30]] & 0xFFFFFFFF0000FFFF |
          0x87710000
00019de6: R30 := 31:0[R14] + 31:0[R30]
00019def: R22 := 43:12[31:0[R22].31:0[R22]]
00019df8: R22 := 31:0[R24] + 31:0[R22]
00019e01: R4 := 31:0[R4] ^ 31:0[R22]
00019e0a: R3 := 31:0[R4] + 31:0[R3]
00019e13: R4 := 31:0[R24] ^ 31:0[R22]
00019e1c: R23 := 31:0[R5] + 31:0[R3]
00019e23: R3 := 0x6122
00019e2a: R3 := high:32[R3].extend:64[31:0[R3]] & 0xFFFFFFFF0000FFFF |
          0x6D9D0000
00019e33: R3 := 31:0[R9] + 31:0[R3]
00019e3a: R5 := 0x380C
00019e43: R23 := 59:28[31:0[R23].31:0[R23]]
00019e4c: R23 := 31:0[R22] + 31:0[R23]
00019e53: R5 := high:32[R5].extend:64[31:0[R5]] & 0xFFFFFFFF0000FFFF |
          0xFDE50000
00019e5c: R4 := 31:0[R4] ^ 31:0[R23]
00019e65: R5 := 31:0[R21] + 31:0[R5]
00019e6e: R25 := 31:0[R4] + 31:0[R25]
00019e77: R4 := 31:0[R22] ^ 31:0[R23]
00019e80: R30 := 31:0[R30] + 31:0[R25]
00019e87: R25 := 0xEA44
00019e8e: R25 := high:32[R25].extend:64[31:0[R25]] & 0xFFFFFFFF0000FFFF |
          0xA4BE0000
00019e97: R25 := 31:0[R15] + 31:0[R25]
00019ea0: R30 := 52:21[31:0[R30].31:0[R30]]
00019ea9: R30 := 31:0[R23] + 31:0[R30]
00019eb2: R4 := 31:0[R4] ^ 31:0[R30]
00019ebb: R4 := 31:0[R4] + 31:0[R24]
00019ec4: R24 := 31:0[R23] ^ 31:0[R30]
00019ecd: R4 := 31:0[R3] + 31:0[R4]
00019ed6: R4 := 47:16[31:0[R4].31:0[R4]]
00019edf: R4 := 31:0[R30] + 31:0[R4]
00019ee8: R3 := 31:0[R24] ^ 31:0[R4]
00019eef: R24 := 0x4B60
00019ef8: R3 := 31:0[R3] + 31:0[R22]
00019f01: R22 := 31:0[R30] ^ 31:0[R4]
00019f0a: R5 := 31:0[R5] + 31:0[R3]
00019f11: R3 := 0xCFA9
00019f18: R3 := high:32[R3].extend:64[31:0[R3]] & 0xFFFFFFFF0000FFFF |
          0x4BDE0000
00019f21: R3 := 31:0[R11] + 31:0[R3]
00019f28: R24 := high:32[R24].extend:64[31:0[R24]] & 0xFFFFFFFF0000FFFF |
          0xF6BB0000
00019f31: R5 := 40:9[31:0[R5].31:0[R5]]
00019f3a: R5 := 31:0[R4] + 31:0[R5]
00019f43: R24 := 31:0[R18] + 31:0[R24]
00019f4c: R22 := 31:0[R22] ^ 31:0[R5]
00019f55: R23 := 31:0[R22] + 31:0[R23]
00019f5e: R22 := 31:0[R4] ^ 31:0[R5]
00019f67: R25 := 31:0[R25] + 31:0[R23]
00019f6e: R23 := 0xBC70
00019f75: R23 := high:32[R23].extend:64[31:0[R23]] & 0xFFFFFFFF0000FFFF |
          0xBEBF0000
00019f7e: R23 := 31:0[R6] + 31:0[R23]
00019f86: R6 := low:32[extend:64[31:0[R6]] - 0x100000]
00019f8f: R25 := 59:28[31:0[R25].31:0[R25]]
00019f98: R25 := 31:0[R5] + 31:0[R25]
00019fa0: R6 := low:32[extend:64[31:0[R6]] - 0xB83]
00019fa9: R22 := 31:0[R22] ^ 31:0[R25]
00019fb2: R30 := 31:0[R22] + 31:0[R30]
00019fbb: R22 := 31:0[R5] ^ 31:0[R25]
00019fc4: R3 := 31:0[R3] + 31:0[R30]
00019fcb: R30 := 0x27FA
00019fd2: R30 := high:32[R30].extend:64[31:0[R30]] & 0xFFFFFFFF0000FFFF |
          0xEAA10000
00019fdb: R30 := 31:0[R19] + 31:0[R30]
00019fe4: R3 := 52:21[31:0[R3].31:0[R3]]
00019fed: R3 := 31:0[R25] + 31:0[R3]
00019ff6: R22 := 31:0[R22] ^ 31:0[R3]
00019fff: R22 := 31:0[R22] + 31:0[R4]
0001a008: R4 := 31:0[R25] ^ 31:0[R3]
0001a011: R24 := 31:0[R24] + 31:0[R22]
0001a018: R22 := 0x7EC6
0001a01f: R22 := high:32[R22].extend:64[31:0[R22]] & 0xFFFFFFFF0000FFFF |
          0x289B0000
0001a028: R22 := 31:0[R12] + 31:0[R22]
0001a031: R24 := 47:16[31:0[R24].31:0[R24]]
0001a03a: R24 := 31:0[R3] + 31:0[R24]
0001a043: R4 := 31:0[R4] ^ 31:0[R24]
0001a04c: R5 := 31:0[R4] + 31:0[R5]
0001a055: R4 := 31:0[R3] ^ 31:0[R24]
0001a05e: R23 := 31:0[R23] + 31:0[R5]
0001a067: R23 := 40:9[31:0[R23].31:0[R23]]
0001a070: R23 := 31:0[R24] + 31:0[R23]
0001a079: R4 := 31:0[R4] ^ 31:0[R23]
0001a082: R5 := 31:0[R24] ^ 31:0[R23]
0001a08b: R25 := 31:0[R4] + 31:0[R25]
0001a092: R4 := 0x3085
0001a09b: R22 := 31:0[R22] + 31:0[R25]
0001a0a2: R4 := high:32[R4].extend:64[31:0[R4]] & 0xFFFFFFFF0000FFFF |
          0xD4EF0000
0001a0ab: R4 := 31:0[R16] + 31:0[R4]
0001a0b2: R25 := 0xD039
0001a0b9: R25 := high:32[R25].extend:64[31:0[R25]] & 0xFFFFFFFF0000FFFF |
          0xD9D40000
0001a0c2: R22 := 59:28[31:0[R22].31:0[R22]]
0001a0cb: R22 := 31:0[R23] + 31:0[R22]
0001a0d4: R25 := 31:0[R7] + 31:0[R25]
0001a0dd: R5 := 31:0[R5] ^ 31:0[R22]
0001a0e6: R5 := 31:0[R5] + 31:0[R3]
0001a0ef: R3 := 31:0[R23] ^ 31:0[R22]
0001a0f8: R5 := 31:0[R30] + 31:0[R5]
0001a0ff: R30 := 0x1D05
0001a106: R30 := high:32[R30].extend:64[31:0[R30]] & 0xFFFFFFFF0000FFFF |
          0x4880000
0001a10f: R30 := 31:0[R13] + 31:0[R30]
0001a118: R5 := 52:21[31:0[R5].31:0[R5]]
0001a121: R5 := 31:0[R22] + 31:0[R5]
0001a12a: R3 := 31:0[R3] ^ 31:0[R5]
0001a133: R24 := 31:0[R3] + 31:0[R24]
0001a13c: R3 := 31:0[R22] ^ 31:0[R5]
0001a145: R4 := 31:0[R4] + 31:0[R24]
0001a14c: R24 := 0x99E5
0001a153: R24 := high:32[R24].extend:64[31:0[R24]] & 0xFFFFFFFF0000FFFF |
          0xE6DB0000
0001a15c: R24 := 31:0[R20] + 31:0[R24]
0001a165: R4 := 47:16[31:0[R4].31:0[R4]]
0001a16e: R4 := 31:0[R5] + 31:0[R4]
0001a177: R3 := 31:0[R3] ^ 31:0[R4]
0001a180: R23 := 31:0[R3] + 31:0[R23]
0001a189: R3 := 31:0[R5] ^ 31:0[R4]
0001a192: R23 := 31:0[R30] + 31:0[R23]
0001a199: R30 := 0xFF97
0001a1a0: R30 := high:32[R30].extend:64[31:0[R30]] & 0xFFFFFFFF0000FFFF |
          0x432A0000
0001a1a9: R18 := 31:0[R18] + 31:0[R30]
0001a1b2: R23 := 40:9[31:0[R23].31:0[R23]]
0001a1bb: R23 := 31:0[R4] + 31:0[R23]
0001a1c4: R3 := 31:0[R3] ^ 31:0[R23]
0001a1cd: R22 := 31:0[R3] + 31:0[R22]
0001a1d6: R3 := 31:0[R4] ^ 31:0[R23]
0001a1df: R22 := 31:0[R25] + 31:0[R22]
0001a1e6: R25 := 0x7CF8
0001a1ed: R25 := high:32[R25].extend:64[31:0[R25]] & 0xFFFFFFFF0000FFFF |
          0x1FA20000
0001a1f6: R25 := 31:0[R1] + 31:0[R25]
0001a1ff: R22 := 59:28[31:0[R22].31:0[R22]]
0001a208: R22 := 31:0[R23] + 31:0[R22]
0001a211: R3 := 31:0[R3] ^ 31:0[R22]
0001a21a: R5 := 31:0[R3] + 31:0[R5]
0001a223: R3 := 31:0[R23] ^ 31:0[R22]
0001a22c: R5 := 31:0[R24] + 31:0[R5]
0001a233: R24 := 0x5665
0001a23a: R24 := high:32[R24].extend:64[31:0[R24]] & 0xFFFFFFFF0000FFFF |
          0xC4AC0000
0001a243: R24 := 31:0[R8] + 31:0[R24]
0001a24c: R5 := 52:21[31:0[R5].31:0[R5]]
0001a255: R5 := 31:0[R22] + 31:0[R5]
0001a25e: R3 := 31:0[R3] ^ 31:0[R5]
0001a267: R3 := 31:0[R3] + 31:0[R4]
0001a270: R4 := 31:0[R22] ^ 31:0[R5]
0001a279: R3 := 31:0[R25] + 31:0[R3]
0001a280: R25 := 0x2244
0001a287: R25 := high:32[R25].extend:64[31:0[R25]] & 0xFFFFFFFF0000FFFF |
          0xF4290000
0001a290: R19 := 31:0[R19] + 31:0[R25]
0001a297: R25 := 0x23A7
0001a2a0: R3 := 47:16[31:0[R3].31:0[R3]]
0001a2a9: R3 := 31:0[R5] + 31:0[R3]
0001a2b0: R25 := high:32[R25].extend:64[31:0[R25]] & 0xFFFFFFFF0000FFFF |
          0xAB940000
0001a2b9: R4 := 31:0[R4] ^ 31:0[R3]
0001a2c2: R21 := 31:0[R21] + 31:0[R25]
0001a2cb: R23 := 31:0[R4] + 31:0[R23]
0001a2d2: R4 := 0xA039
0001a2db: R24 := 31:0[R24] + 31:0[R23]
0001a2e2: R4 := high:32[R4].extend:64[31:0[R4]] & 0xFFFFFFFF0000FFFF |
          0xFC930000
0001a2eb: R17 := 31:0[R17] + 31:0[R4]
0001a2f2: R4 := 0x59C3
0001a2f9: R4 := high:32[R4].extend:64[31:0[R4]] & 0xFFFFFFFF0000FFFF |
          0x655B0000
0001a302: R24 := 40:9[31:0[R24].31:0[R24]]
0001a30b: R24 := 31:0[R3] + 31:0[R24]
0001a314: R20 := 31:0[R20] + 31:0[R4]
0001a31d: R4 := 31:0[R24] | ~31:0[R5]
0001a324: R23 := 0xCC92
0001a32d: R4 := 31:0[R4] ^ 31:0[R3]
0001a334: R23 := high:32[R23].extend:64[31:0[R23]] & 0xFFFFFFFF0000FFFF |
          0x8F0C0000
0001a33d: R22 := 31:0[R4] + 31:0[R22]
0001a344: R4 := 0x5DD1
0001a34d: R19 := 31:0[R19] + 31:0[R22]
0001a354: R4 := high:32[R4].extend:64[31:0[R4]] & 0xFFFFFFFF0000FFFF |
          0x85840000
0001a35d: R15 := 31:0[R15] + 31:0[R4]
0001a364: R4 := 0x7E4F
0001a36b: R4 := high:32[R4].extend:64[31:0[R4]] & 0xFFFFFFFF0000FFFF |
          0x6FA80000
0001a374: R19 := 57:26[31:0[R19].31:0[R19]]
0001a37d: R19 := 31:0[R24] + 31:0[R19]
0001a386: R14 := 31:0[R14] + 31:0[R4]
0001a38f: R22 := 31:0[R19] | ~31:0[R3]
0001a396: R4 := 0xE6E0
0001a39d: R4 := high:32[R4].extend:64[31:0[R4]] & 0xFFFFFFFF0000FFFF |
          0xFE2C0000
0001a3a6: R4 := 31:0[R1] + 31:0[R4]
0001a3af: R1 := 31:0[R22] ^ 31:0[R24]
0001a3b8: R16 := 31:0[R16] + 31:0[R23]
0001a3c1: R5 := 31:0[R1] + 31:0[R5]
0001a3c8: R22 := 0x4314
0001a3d1: R18 := 31:0[R18] + 31:0[R5]
0001a3d8: R22 := high:32[R22].extend:64[31:0[R22]] & 0xFFFFFFFF0000FFFF |
          0xA3010000
0001a3e1: R13 := 31:0[R13] + 31:0[R22]
0001a3e8: R1 := 0x11A1
0001a3ef: R1 := high:32[R1].extend:64[31:0[R1]] & 0xFFFFFFFF0000FFFF |
          0x4E080000
0001a3f8: R18 := 53:22[31:0[R18].31:0[R18]]
0001a401: R18 := 31:0[R19] + 31:0[R18]
0001a40a: R12 := 31:0[R12] + 31:0[R1]
0001a413: R5 := 31:0[R18] | ~31:0[R24]
0001a41a: R1 := 0x7E82
0001a423: R5 := 31:0[R5] ^ 31:0[R19]
0001a42a: R1 := high:32[R1].extend:64[31:0[R1]] & 0xFFFFFFFF0000FFFF |
          0xF7530000
0001a433: R3 := 31:0[R5] + 31:0[R3]
0001a43c: R1 := 31:0[R11] + 31:0[R1]
0001a445: R21 := 31:0[R21] + 31:0[R3]
0001a44c: R3 := 0xD391
0001a453: R3 := high:32[R3].extend:64[31:0[R3]] & 0xFFFFFFFF0000FFFF |
          0xEB860000
0001a45c: R7 := 31:0[R7] + 31:0[R3]
0001a463: R11 := 0xF235
0001a46c: R21 := 48:17[31:0[R21].31:0[R21]]
0001a475: R21 := 31:0[R18] + 31:0[R21]
0001a47c: R11 := high:32[R11].extend:64[31:0[R11]] & 0xFFFFFFFF0000FFFF |
          0xBD3A0000
0001a485: R3 := 31:0[R21] | ~31:0[R19]
0001a48e: R9 := 31:0[R9] + 31:0[R11]
0001a497: R3 := 31:0[R3] ^ 31:0[R18]
0001a49e: R5 := 0xD2BB
0001a4a7: R24 := 31:0[R3] + 31:0[R24]
0001a4ae: R5 := high:32[R5].extend:64[31:0[R5]] & 0xFFFFFFFF0000FFFF |
          0x2AD70000
0001a4b7: R17 := 31:0[R17] + 31:0[R24]
0001a4c0: R8 := 31:0[R8] + 31:0[R5]
0001a4c9: R17 := 42:11[31:0[R17].31:0[R17]]
0001a4d2: R17 := 31:0[R21] + 31:0[R17]
0001a4db: R3 := 31:0[R17] | ~31:0[R18]
0001a4e4: R3 := 31:0[R3] ^ 31:0[R21]
0001a4ed: R19 := 31:0[R3] + 31:0[R19]
0001a4f6: R20 := 31:0[R20] + 31:0[R19]
0001a4ff: R20 := 57:26[31:0[R20].31:0[R20]]
0001a508: R20 := 31:0[R17] + 31:0[R20]
0001a511: R3 := 31:0[R20] | ~31:0[R21]
0001a51a: R3 := 31:0[R3] ^ 31:0[R17]
0001a523: R18 := 31:0[R3] + 31:0[R18]
0001a52c: R16 := 31:0[R16] + 31:0[R18]
0001a535: R16 := 53:22[31:0[R16].31:0[R16]]
0001a53e: R16 := 31:0[R20] + 31:0[R16]
0001a547: R3 := 31:0[R16] | ~31:0[R17]
0001a550: R3 := 31:0[R3] ^ 31:0[R20]
0001a559: R21 := 31:0[R3] + 31:0[R21]
0001a562: R6 := 31:0[R6] + 31:0[R21]
0001a56b: R6 := 48:17[31:0[R6].31:0[R6]]
0001a574: R6 := 31:0[R16] + 31:0[R6]
0001a57d: R3 := 31:0[R6] | ~31:0[R20]
0001a586: R3 := 31:0[R3] ^ 31:0[R16]
0001a58f: R17 := 31:0[R3] + 31:0[R17]
0001a598: R15 := 31:0[R15] + 31:0[R17]
0001a5a1: R15 := 42:11[31:0[R15].31:0[R15]]
0001a5aa: R15 := 31:0[R6] + 31:0[R15]
0001a5b3: R3 := 31:0[R15] | ~31:0[R16]
0001a5bc: R3 := 31:0[R3] ^ 31:0[R6]
0001a5c5: R20 := 31:0[R3] + 31:0[R20]
0001a5ce: R14 := 31:0[R14] + 31:0[R20]
0001a5d7: R14 := 57:26[31:0[R14].31:0[R14]]
0001a5e0: R14 := 31:0[R15] + 31:0[R14]
0001a5e9: R3 := 31:0[R14] | ~31:0[R6]
0001a5f2: R3 := 31:0[R3] ^ 31:0[R15]
0001a5fb: R16 := 31:0[R3] + 31:0[R16]
0001a604: R4 := 31:0[R4] + 31:0[R16]
0001a60d: R4 := 53:22[31:0[R4].31:0[R4]]
0001a616: R4 := 31:0[R14] + 31:0[R4]
0001a61f: R3 := 31:0[R4] | ~31:0[R15]
0001a628: R3 := 31:0[R3] ^ 31:0[R14]
0001a631: R6 := 31:0[R3] + 31:0[R6]
0001a63a: R13 := 31:0[R13] + 31:0[R6]
0001a643: R13 := 48:17[31:0[R13].31:0[R13]]
0001a64c: R13 := 31:0[R4] + 31:0[R13]
0001a655: R3 := 31:0[R13] | ~31:0[R14]
0001a65e: R3 := 31:0[R3] ^ 31:0[R4]
0001a667: R15 := 31:0[R3] + 31:0[R15]
0001a670: R12 := 31:0[R12] + 31:0[R15]
0001a679: R12 := 42:11[31:0[R12].31:0[R12]]
0001a682: R12 := 31:0[R13] + 31:0[R12]
0001a68b: R3 := 31:0[R12] | ~31:0[R4]
0001a694: R3 := 31:0[R3] ^ 31:0[R13]
0001a69d: R14 := 31:0[R3] + 31:0[R14]
0001a6a6: R1 := 31:0[R1] + 31:0[R14]
0001a6af: R1 := 57:26[31:0[R1].31:0[R1]]
0001a6b8: R1 := 31:0[R12] + 31:0[R1]
0001a6c3: R3 := 31:0[R1] | ~31:0[R13]
0001a6cc: R3 := 31:0[R3] ^ 31:0[R12]
0001a6d4: V2 := high:64[V2].63:32[V2] + 63:32[V3].31:0[V2] + 31:0[V3]
0001a6dd: R4 := 31:0[R3] + 31:0[R4]
0001a6e6: R9 := 31:0[R9] + 31:0[R4]
0001a6ef: R9 := 53:22[31:0[R9].31:0[R9]]
0001a6f8: R9 := 31:0[R1] + 31:0[R9]
0001a703: R3 := 31:0[R9] | ~31:0[R12]
0001a70c: R3 := 31:0[R3] ^ 31:0[R1]
0001a714: V1 := high:64[V1].63:32[V1] + 63:32[V3].31:0[V1] + 31:0[V3]
0001a71d: R13 := 31:0[R3] + 31:0[R13]
0001a726: R8 := 31:0[R8] + 31:0[R13]
0001a72f: R8 := 48:17[31:0[R8].31:0[R8]]
0001a738: R8 := 31:0[R9] + 31:0[R8]
0001a743: R1 := 31:0[R8] | ~31:0[R1]
0001a74c: R1 := 31:0[R1] ^ 31:0[R9]
0001a754: V0 := high:64[V0].63:32[V0] + 63:32[V3].31:0[V0] + 31:0[V3]
0001a75d: R1 := 31:0[R1] + 31:0[R12]
0001a766: R7 := 31:0[R7] + 31:0[R1]
0001a76f: R7 := 42:11[31:0[R7].31:0[R7]]
0001a778: R8 := 31:0[R8] + 31:0[R7]
0001a781: R10 := 31:0[R10] + 31:0[R8]
0001a78d: #9641 := (CF & ~ZF) <> 0
0001a787: when #9641 goto %0001928f
0003b098: goto %0001a790

0001a790:
0001a797: R19 := mem[R31 + 0x10, el]:u64
0001a79b: R20 := mem[R31 + 0x18, el]:u64
0001a7a4: R21 := mem[R31 + 0x20, el]:u64
0001a7a8: R22 := mem[R31 + 0x28, el]:u64
0001a7b1: R23 := mem[R31 + 0x30, el]:u64
0001a7b5: R24 := mem[R31 + 0x38, el]:u64
0001a7be: R27 := mem[R31 + 0x50, el]:u64
0001a7c2: R28 := mem[R31 + 0x58, el]:u64
0003b099: goto %00012d43

00012d43:
00012d53: #4769 := V2 & 0xFFFFFFFFFFFFFFFF00000000FFFFFFFF
00012d57: #4770 := #4769 | 0xFFFFFFFF00000000 & pad:128[31:0[R10]] << 0x20
00012d5b: V2 := #4770
00012d64: R25 := mem[R31 + 0x40, el]:u64
00012d68: R26 := mem[R31 + 0x48, el]:u64
00012d72: R29 := mem[R31, el]:u64
00012d76: R30 := mem[R31 + 8, el]:u64
00012d79: R31 := R31 + 0x60
00012d81: #4774 := 31:0[V0]
00012d85: #4778 := V2 & 0xFFFFFFFF00000000FFFFFFFFFFFFFFFF
00012d89: #4779 := #4778 | 0xFFFFFFFF0000000000000000 & pad:128[#4774] <<
          0x40
00012d8d: V2 := #4779
00012d95: #4781 := 31:0[V1]
00012d99: #4785 := V2 & 0xFFFFFFFFFFFFFFFFFFFFFFFF
00012d9d: #4786 := #4785 | 0xFFFFFFFF000000000000000000000000 &
          pad:128[#4781] << 0x60
00012da1: V2 := #4786
00012da9: mem := mem with [R2, el]:u128 <- V2
00012dae: call R30 with noreturn

0003b09a: sub md5_process_bytes(md5_process_bytes_result)
0003b405: md5_process_bytes_result :: out u32 = low:32[R0]

00012ffa:
00013001: #4868 := R31 - 0x40
00013006: mem := mem with [#4868, el]:u64 <- R29
0001300b: mem := mem with [#4868 + 8, el]:u64 <- R30
0001300f: R31 := #4868
00013016: R29 := R31
0001301e: #4873 := R31 + 0x10
00013023: mem := mem with [#4873, el]:u64 <- R19
00013028: mem := mem with [#4873 + 8, el]:u64 <- R20
00013030: R19 := R0
00013039: R0 := mem[R2 + 0x18, el]:u32
00013041: #4882 := R31 + 0x20
00013046: mem := mem with [#4882, el]:u64 <- R21
0001304b: mem := mem with [#4882 + 8, el]:u64 <- R22
00013053: R21 := R2
0001305b: R22 := R1
00013067: #4890 := ~31:0[R0] = 0
00013061: when #4890 goto %0001305f
0003b09b: goto %000131ac

0001305f:
00013070: R20 := 31:0[R0]
00013078: #4897 := R31 + 0x30
0001307d: mem := mem with [#4897, el]:u64 <- R23
00013082: mem := mem with [#4897 + 8, el]:u64 <- R24
00013088: R23 := 0x80
00013090: R23 := R23 - R20
00013097: R24 := R2 + 0x1C
0001309f: #4905 := 1 + ~R1 + R23
000130a3: NF := 63:63[#4905]
000130a6: VF := 63:63[R23] & 63:63[~R1] & ~63:63[#4905] | ~63:63[R23] &
          ~63:63[~R1] & 63:63[#4905]
000130a9: ZF := #4905 = 0
000130ac: CF := 63:63[R23] & 63:63[~R1] | 63:63[~R1] & ~63:63[#4905] |
          63:63[R23] & ~63:63[#4905]
000130b6: R0 := R24 + R20
000130cd: #4913 := (~CF | ZF) <> 0
000130ce: goto %000130c5

000130c5:
000130c7: when #4913 goto %000130bf
000130c8: goto %000130c2

000130c2:
000130c3: R23 := R1
000130ca: goto %000130c6

000130bf:
000130c0: R23 := R23
000130c9: goto %000130c6

000130c6:
000130d7: R1 := R19
000130df: R2 := R23
000130e4: R30 := 0x98A4
000130e6: call @memcpy with return %000130e8

000130e8:
000130ef: R1 := mem[R21 + 0x18, el]:u32
000130f8: R1 := 31:0[R1] + 31:0[R23]
00013100: mem := mem with [R21 + 0x18, el]:u32 <- 31:0[R1]
00013107: #4924 := 0xFFFFFFFFFFFFFFC0 + extend:64[31:0[R1]]
0001310b: NF := 63:63[#4924]
0001310e: VF := 31:31[R1] & ~63:63[#4924]
00013111: ZF := #4924 = 0
00013114: CF := 31:31[R1] | 31:31[R1] & ~63:63[#4924] | ~63:63[#4924]
00013124: #4926 := (CF & ~ZF) <> 0
0001311e: when #4926 goto %0001311c
0003b09c: goto %0001318b

0001311c:
0001312c: R2 := R21
00013134: R0 := R24
0001313b: R1 := R1 & 0xFFFFFFC0
00013140: R30 := 0x9900
00013142: call @md5_process_block with return %00013144

00013144:
0001314b: R2 := mem[R21 + 0x18, el]:u32
00013153: R0 := R20 + R23
0001315a: R1 := R0 & 0xFFFFFFFFFFFFFFC0
00013162: R0 := R24
0001316a: R2 := 31:0[R2] & 0x3F
00013172: mem := mem with [R21 + 0x18, el]:u32 <- 31:0[R2]
0001317a: R1 := R24 + R1
00013181: R2 := R2 & 0x3F
00013186: R30 := 0x9924
00013188: call @memcpy with return %0001318a

0001318a:
0001318d: goto %0001318b

0001318b:
00013194: R19 := R19 + R23
0001319c: R22 := R22 - R23
000131a5: R23 := mem[R31 + 0x30, el]:u64
000131a9: R24 := mem[R31 + 0x38, el]:u64
000131ae: goto %000131ac

000131ac:
000131b4: #5042 := 0xFFFFFFFFFFFFFFC1 + R22
000131b8: NF := 63:63[#5042]
000131bb: VF := 63:63[R22] & ~63:63[#5042]
000131be: ZF := #5042 = 0
000131c1: CF := 63:63[R22] | ~63:63[#5042] | 63:63[R22] & ~63:63[#5042]
000131d0: #5044 := (~CF | ZF) <> 0
000131ca: when #5044 goto %000131c8
0003b09d: goto %000190c0

000190c0:
000190c5: #8282 := R19 & 3
000190c9: NF := 63:63[#8282]
000190cc: ZF := #8282 = 0
000190cf: CF := 0
000190d2: VF := 0
000190df: #8284 := ZF
000190d9: when #8284 goto %000132e1
0003b09e: goto %000190e2

000132e1:
000132e6: R1 := R22 & 0xFFFFFFFFFFFFFFC0
000132ee: R0 := R19
000132f5: R22 := R22 & 0x3F
000132fd: R19 := R19 + R1
00013305: R2 := R21
0001330a: R30 := 0x9864
0001330c: call @md5_process_block with return %000131c8

000131c8:
000131dc: #5045 := ~R22 = 0
000131d6: when #5045 goto %000131d4
0003b09f: goto %00019090

000131d4:
000131e3: R20 := R21 + 0x1C
000131eb: #5049 := R31 + 0x30
000131f0: mem := mem with [#5049, el]:u64 <- R23
000131f5: mem := mem with [#5049 + 8, el]:u64 <- R24
000131fd: R23 := R19
00013202: goto %00013200

00019090:
00019097: R19 := mem[R31 + 0x10, el]:u64
0001909b: R20 := mem[R31 + 0x18, el]:u64
000190a4: R21 := mem[R31 + 0x20, el]:u64
000190a8: R22 := mem[R31 + 0x28, el]:u64
000190b2: R29 := mem[R31, el]:u64
000190b6: R30 := mem[R31 + 8, el]:u64
000190b9: R31 := R31 + 0x40
000190be: call R30 with noreturn

000190e2:
000190e8: #8288 := R31 + 0x30
000190ed: mem := mem with [#8288, el]:u64 <- R23
000190f2: mem := mem with [#8288 + 8, el]:u64 <- R24
000190f9: #8290 := 0xFFFFFFFFFFFFFFC0 + R22
000190fd: NF := 63:63[#8290]
00019100: VF := 63:63[R22] & ~63:63[#8290]
00019103: ZF := #8290 = 0
00019106: CF := 63:63[R22] | ~63:63[#8290] | 63:63[R22] & ~63:63[#8290]
0001910f: R20 := R21 + 0x1C
0001911b: #8292 := ZF
00019115: when #8292 goto %00019113
0003b0a0: goto %00019129

00019113:
00019123: R23 := R19
00019127: goto %00013200

00019129:
0001912e: R24 := R22 - 0x41
00019135: R24 := R24 >> 6
0001913c: R23 := R24 + 1
00019144: R23 := R19 + (R23 << 6)
0003b0a1: goto %00019148

00019148:
0001914f: R0 := mem[R19, el]:u64
00019153: R1 := mem[R19 + 8, el]:u64
0001915b: #8304 := R20
00019160: mem := mem with [#8304, el]:u64 <- R0
00019165: mem := mem with [#8304 + 8, el]:u64 <- R1
0001916d: R2 := R21
00019176: R0 := mem[R19 + 0x10, el]:u64
0001917a: R1 := mem[R19 + 0x18, el]:u64
00019182: #8313 := R20 + 0x10
00019187: mem := mem with [#8313, el]:u64 <- R0
0001918c: mem := mem with [#8313 + 8, el]:u64 <- R1
00019195: R4 := mem[R19 + 0x20, el]:u64
00019199: R5 := mem[R19 + 0x28, el]:u64
000191a1: #8319 := R20 + 0x20
000191a6: mem := mem with [#8319, el]:u64 <- R4
000191ab: mem := mem with [#8319 + 8, el]:u64 <- R5
000191b1: R1 := 0x40
000191ba: R4 := mem[R19 + 0x30, el]:u64
000191be: R5 := mem[R19 + 0x38, el]:u64
000191c6: #8325 := R20 + 0x30
000191cb: mem := mem with [#8325, el]:u64 <- R4
000191d0: mem := mem with [#8325 + 8, el]:u64 <- R5
000191d8: R19 := R19 + R1
000191e0: R0 := R20
000191e5: R30 := 0x9804
000191e7: call @md5_process_block with return %000191e9

000191e9:
000191ef: #8336 := 1 + ~R23 + R19
000191f3: NF := 63:63[#8336]
000191f6: VF := 63:63[R19] & 63:63[~R23] & ~63:63[#8336] | ~63:63[R19] &
          ~63:63[~R23] & 63:63[#8336]
000191f9: ZF := #8336 = 0
000191fc: CF := 63:63[R19] & 63:63[~R23] | 63:63[~R23] & ~63:63[#8336] |
          63:63[R19] & ~63:63[#8336]
00019209: #8341 := ~ZF <> 0
00019203: when #8341 goto %00019148
0003b0a2: goto %0001920c

0001920c:
00019211: R22 := R22 - 0x40
00019219: R22 := R22 - (R24 << 6)
0003b0a3: goto %00013200

00013200:
0001320a: R19 := mem[R21 + 0x18, el]:u32
00013212: R1 := R23
0001321a: R2 := R22
00013222: R0 := R20 + R19
0001322a: R19 := R19 + R22
0001322f: R30 := 0x982C
00013231: call @memcpy with return %00013233

00013233:
00013238: #5067 := 0xFFFFFFFFFFFFFFC1 + R19
0001323c: NF := 63:63[#5067]
0001323f: VF := 63:63[R19] & ~63:63[#5067]
00013242: ZF := #5067 = 0
00013245: CF := 63:63[R19] | ~63:63[#5067] | 63:63[R19] & ~63:63[#5067]
00013254: #5069 := (CF & ~ZF) <> 0
0001324e: when #5069 goto %0001324c
0003b0a4: goto %00013299

0001324c:
0001325c: R2 := R21
00013264: R0 := R20
0001326b: R19 := R19 - 0x40
00013271: R1 := 0x40
00013276: R30 := 0x98DC
00013278: call @md5_process_block with return %0001327a

0001327a:
00013280: R0 := R20
00013288: R2 := R19
0001328f: R1 := R21 + 0x5C
00013294: R30 := 0x98EC
00013296: call @memcpy with return %00013298

00013298:
0001329b: goto %00013299

00013299:
000132a3: R23 := mem[R31 + 0x30, el]:u64
000132a7: R24 := mem[R31 + 0x38, el]:u64
000132af: mem := mem with [R21 + 0x18, el]:u32 <- 31:0[R19]
000132b8: R19 := mem[R31 + 0x10, el]:u64
000132bc: R20 := mem[R31 + 0x18, el]:u64
000132c5: R21 := mem[R31 + 0x20, el]:u64
000132c9: R22 := mem[R31 + 0x28, el]:u64
000132d3: R29 := mem[R31, el]:u64
000132d7: R30 := mem[R31 + 8, el]:u64
000132da: R31 := R31 + 0x40
000132df: call R30 with noreturn

0003b0a5: sub md5_read_ctx(md5_read_ctx_result)
0003b406: md5_read_ctx_result :: out u32 = low:32[R0]

00012c34:
00012c3a: R2 := R0
00012c42: R0 := R1
00012c4b: R1 := mem[R2, el]:u32
00012c53: mem := mem with [R0, el]:u32 <- 31:0[R1]
00012c5c: R1 := mem[R2 + 4, el]:u32
00012c64: mem := mem with [R0 + 4, el]:u32 <- 31:0[R1]
00012c6d: R1 := mem[R2 + 8, el]:u32
00012c75: mem := mem with [R0 + 8, el]:u32 <- 31:0[R1]
00012c7e: R1 := mem[R2 + 0xC, el]:u32
00012c86: mem := mem with [R0 + 0xC, el]:u32 <- 31:0[R1]
00012c8b: call R30 with noreturn

0003b0a6: sub md5_stream(md5_stream_result)
0003b407: md5_stream_result :: out u32 = low:32[R0]

00013754:
00013758: R12 := 0x1140
00013760: R31 := R31 - R12
00013768: #5340 := R31
0001376d: mem := mem with [#5340, el]:u64 <- R29
00013772: mem := mem with [#5340 + 8, el]:u64 <- R30
00013779: R29 := R31
00013781: #5345 := R31 + 0x30
00013786: mem := mem with [#5345, el]:u64 <- R23
0001378b: mem := mem with [#5345 + 8, el]:u64 <- R24
00013791: R23 := 0x27000
00013799: R24 := R1
0001379f: R1 := 0x11000
000137a7: #5353 := R31 + 0x10
000137ac: mem := mem with [#5353, el]:u64 <- R19
000137b1: mem := mem with [#5353 + 8, el]:u64 <- R20
000137b9: R20 := R0
000137c1: R0 := mem[R23 + 0xFB8, el]:u64
000137c9: #5362 := R31 + 0x20
000137ce: mem := mem with [#5362, el]:u64 <- R21
000137d3: mem := mem with [#5362 + 8, el]:u64 <- R22
000137da: R21 := R31 + 0xF0
000137e3: V0 := mem[R1 + 0x8D0, el]:u64.mem[R1 + 0x8D8, el]:u64
000137eb: R1 := mem[R0, el]:u64
000137f3: mem := mem with [R31 + 0x1138, el]:u64 <- R1
000137f9: R1 := 0
00013801: mem := mem with [R31 + 0x40, el]:u64 <- R25
00013808: R25 := R31 + 0x50
0001380e: R22 := 0x1000
00013816: mem := mem with [R31 + 0x60, el]:u64 <- 0
0001381e: mem := mem with [R31 + 0x68, el]:u32 <- 0
00013826: mem := mem with [R31 + 0x50, el]:u128 <- V0
0003b0a7: goto %00013828

00013828:
0001382c: R19 := 0
00013831: goto %0001382f

0001382f:
00013838: R2 := R22 - R19
00013840: R0 := R21 + R19
00013848: R3 := R20
0001384e: R1 := 1
00013853: R30 := 0x9FA8
00013855: call @fread with return %00013857

00013857:
0001385d: R19 := R19 + R0
00013864: #5379 := 0xFFFFFFFFFFFFF000 + R19
00013868: NF := 63:63[#5379]
0001386b: VF := 63:63[R19] & ~63:63[#5379]
0001386e: ZF := #5379 = 0
00013871: CF := 63:63[R19] | ~63:63[#5379] | 63:63[R19] & ~63:63[#5379]
0001387f: #5381 := ~ZF <> 0
00013879: when #5381 goto %00013877
0003b0a8: goto %00018607

00018607:
0001860d: R1 := R19
00018615: R2 := R25
0001861d: R0 := R21
00018622: R30 := 0x9FC4
00018624: call @md5_process_block with return %00018626

00018626:
00018628: goto %00013828

00013877:
0001388b: #5382 := R0 = 0
00013885: when #5382 goto %00013883
0003b0a9: goto %000185ec

00013883:
00013893: R0 := R20
00013898: R30 := 0x9FD0
0001389a: call @ferror with return %0001389c

0001389c:
000138a3: R1 := 31:0[R0]
000138aa: R0 := 1
000138b6: #5389 := ~31:0[R1] = 0
000138b0: when #5389 goto %000138ae
0003b0aa: goto %000185d9

000185ec:
000185f2: R0 := R20
000185f7: R30 := 0x9F90
000185f9: call @feof with return %000185fb

000185fb:
00018604: #7990 := ~31:0[R0] = 0
000185fe: when #7990 goto %000185d9
0003b0ab: goto %0001382f

000185d9:
000185de: R20 := R31 + 0x50
000185e9: #7986 := ~R19 = 0
000185e3: when #7986 goto %00018598
0003b0ac: goto %000185b8

00018598:
0001859e: R1 := R19
000185a6: R0 := R21
000185ae: R2 := R20
000185b3: R30 := 0xA03C
000185b5: call @md5_process_bytes with return %000185b7

000185b7:
000185ba: goto %000185b8

000185b8:
000185c1: R1 := R24
000185c9: R0 := R20
000185ce: R30 := 0x9FF0
000185d0: call @md5_finish_ctx with return %000185d2

000185d2:
000185d7: R0 := 0
0003b0ad: goto %000138ae

000138ae:
000138be: R23 := mem[R23 + 0xFB8, el]:u64
000138c6: R1 := mem[R31 + 0x1138, el]:u64
000138ce: R2 := mem[R23, el]:u64
000138d6: #5396 := 1 + ~R2 + R1
000138da: NF := 63:63[#5396]
000138dd: VF := 63:63[R1] & 63:63[~R2] & ~63:63[#5396] | ~63:63[R1] &
          ~63:63[~R2] & 63:63[#5396]
000138e0: ZF := #5396 = 0
000138e3: CF := 63:63[R1] & 63:63[~R2] | 63:63[~R2] & ~63:63[#5396] |
          63:63[R1] & ~63:63[#5396]
000138e7: R1 := #5396
000138ed: R2 := 0
000138f9: #5401 := ~ZF <> 0
000138f3: when #5401 goto %000138f1
0003b0ae: goto %00018549

000138f1:
000138fe: R30 := 0xA044
00013900: call @__stack_chk_fail with return %00013902

00013902:
0003b0af: call @md5_buffer with noreturn

00018549:
0001854d: R12 := 0x1140
00018556: R29 := mem[R31, el]:u64
0001855a: R30 := mem[R31 + 8, el]:u64
00018563: R19 := mem[R31 + 0x10, el]:u64
00018567: R20 := mem[R31 + 0x18, el]:u64
00018570: R21 := mem[R31 + 0x20, el]:u64
00018574: R22 := mem[R31 + 0x28, el]:u64
0001857d: R23 := mem[R31 + 0x30, el]:u64
00018581: R24 := mem[R31 + 0x38, el]:u64
00018589: R25 := mem[R31 + 0x40, el]:u64
00018591: R31 := R31 + R12
00018596: call R30 with noreturn

0003b0b0: sub memcmp(memcmp_s1, memcmp_s2, memcmp_n, memcmp_result)
0003b408: memcmp_s1 :: in out u64 = R0
0003b409: memcmp_s2 :: in out u64 = R1
0003b40a: memcmp_n :: in u64 = R2
0003b40b: memcmp_result :: out u32 = low:32[R0]

00010830:
00032e4a: R16 := 0x27000
00032e52: R17 := mem[R16 + 0xE18, el]:u64
00032e59: R16 := R16 + 0xE18
00032e5e: call R17 with noreturn

0003b0b1: sub memcpy(memcpy_dst, memcpy_src, memcpy_n, memcpy_result)
0003b40c: memcpy_dst :: in out u64 = R0
0003b40d: memcpy_src :: in out u64 = R1
0003b40e: memcpy_n :: in u64 = R2
0003b40f: memcpy_result :: out u64 = R0

0001238b:
00032887: R16 := 0x27000
0003288f: R17 := mem[R16 + 0xC40, el]:u64
00032896: R16 := R16 + 0xC40
0003289b: call R17 with noreturn

0003b0b2: sub memset(memset_buf, memset_c, memset_n, memset_result)
0003b410: memset_buf :: in out u64 = R0
0003b411: memset_c :: in u32 = low:32[R1]
0003b412: memset_n :: in u64 = R2
0003b413: memset_result :: out u64 = R0

0001349d:
00032bf2: R16 := 0x27000
00032bfa: R17 := mem[R16 + 0xD58, el]:u64
00032c01: R16 := R16 + 0xD58
00032c06: call R17 with noreturn

0003b0b3: sub memxor(memxor_result)
0003b414: memxor_result :: out u32 = low:32[R0]

00012b8e:
00012b98: #4672 := R2 = 0
00012b92: when #4672 goto %00012b90
0003b0b4: goto %0001a7dd

0001a7dd:
0001a7e2: R3 := R1 + 0xF
0001a7e9: R4 := R2 - 1
0001a7f1: R3 := R3 - R0
0001a7f8: #9650 := 0xFFFFFFFFFFFFFFE2 + R3
0001a7fc: NF := 63:63[#9650]
0001a7ff: VF := 63:63[R3] & ~63:63[#9650]
0001a802: ZF := #9650 = 0
0001a805: CF := 63:63[R3] | ~63:63[#9650] | 63:63[R3] & ~63:63[#9650]
0001a82e: #9652 := (CF & ~ZF) <> 0
0001a82f: goto %0001a826

0001a826:
0001a828: when #9652 goto %0001a80e
0001a829: goto %0001a81a

0001a81a:
0001a81b: NF := 0
0001a81e: ZF := 0
0001a821: CF := 0
0001a824: VF := 0
0001a82b: goto %0001a827

0001a80e:
0001a80f: NF := 63:63[R4 - 0xE]
0001a812: VF := 63:63[R4] & ~63:63[R4 - 0xE]
0001a815: ZF := R4 - 0xE = 0
0001a818: CF := 63:63[R4] | ~63:63[R4 - 0xE] | 63:63[R4] & ~63:63[R4 - 0xE]
0001a82a: goto %0001a827

0001a827:
0001a83c: #9655 := (~CF | ZF) <> 0
0001a836: when #9655 goto %00012b9f
0003b0b5: goto %0001a83f

00012b9f:
00012ba3: R3 := 0
0003b0b6: goto %00012ba7

00012ba7:
00012bad: #4673 := R3
00012bb3: R4 := pad:32[mem[R1 + #4673]]
00012bbb: #4674 := R3
00012bc1: R5 := pad:32[mem[R0 + #4674]]
00012bca: R4 := 31:0[R4] ^ 31:0[R5]
00012bd2: #4678 := R3
00012bd7: mem := mem with [R0 + #4678] <- low:8[31:0[R4]]
00012bde: R3 := R3 + 1
00012be6: #4682 := 1 + ~R3 + R2
00012bea: NF := 63:63[#4682]
00012bed: VF := 63:63[R2] & 63:63[~R3] & ~63:63[#4682] | ~63:63[R2] &
          ~63:63[~R3] & 63:63[#4682]
00012bf0: ZF := #4682 = 0
00012bf3: CF := 63:63[R2] & 63:63[~R3] | 63:63[~R3] & ~63:63[#4682] |
          63:63[R2] & ~63:63[#4682]
00012c00: #4687 := ~ZF <> 0
00012bfa: when #4687 goto %00012ba7
0003b0b7: goto %00012c03

00012c03:
00012c06: call R30 with noreturn

0001a83f:
0001a844: R4 := R2 & 0xFFFFFFFFFFFFFFF0
0001a84a: R3 := 0
0003b0b8: goto %0001a84e

0001a84e:
0001a854: #9681 := R3
0001a85a: V0 := mem[R1 + #9681, el]:u64.mem[R1 + #9681 + 8, el]:u64
0001a862: #9684 := R3
0001a868: V1 := mem[R0 + #9684, el]:u64.mem[R0 + #9684 + 8, el]:u64
0001a870: V0 := V0 ^ V1
0001a879: mem := mem with [R0 + R3, el]:u128 <- V0
0001a880: R3 := R3 + 0x10
0001a888: #9689 := 1 + ~R4 + R3
0001a88c: NF := 63:63[#9689]
0001a88f: VF := 63:63[R3] & 63:63[~R4] & ~63:63[#9689] | ~63:63[R3] &
          ~63:63[~R4] & 63:63[#9689]
0001a892: ZF := #9689 = 0
0001a895: CF := 63:63[R3] & 63:63[~R4] | 63:63[~R4] & ~63:63[#9689] |
          63:63[R3] & ~63:63[#9689]
0001a8a2: #9694 := ~ZF <> 0
0001a89c: when #9694 goto %0001a84e
0003b0b9: goto %0001a8a5

0001a8a5:
0001a8aa: R5 := R2 & 0xFFFFFFFFFFFFFFF0
0001a8b1: R3 := R2 & 0xF
0001a8b9: #9744 := 1 + ~R5 + R2
0001a8bd: NF := 63:63[#9744]
0001a8c0: VF := 63:63[R2] & 63:63[~R5] & ~63:63[#9744] | ~63:63[R2] &
          ~63:63[~R5] & 63:63[#9744]
0001a8c3: ZF := #9744 = 0
0001a8c6: CF := 63:63[R2] & 63:63[~R5] | 63:63[~R5] & ~63:63[#9744] |
          63:63[R2] & ~63:63[#9744]
0001a8d0: R4 := R1 + R5
0001a8d8: R2 := R0 + R5
0001a8e3: #9755 := ZF
0001a8dd: when #9755 goto %00012b90
0003b0ba: goto %0001a8e6

0001a8e6:
0001a8ec: #9756 := R5
0001a8f2: R6 := pad:32[mem[R1 + #9756]]
0001a8f9: #9757 := 0xFFFFFFFFFFFFFFFF + R3
0001a8fd: NF := 63:63[#9757]
0001a900: VF := 63:63[R3] & ~63:63[#9757]
0001a903: ZF := #9757 = 0
0001a906: CF := 63:63[R3] | ~63:63[#9757] | 63:63[R3] & ~63:63[#9757]
0001a910: #9758 := R5
0001a916: R1 := pad:32[mem[R0 + #9758]]
0001a91f: R1 := 31:0[R1] ^ 31:0[R6]
0001a927: #9762 := R5
0001a92c: mem := mem with [R0 + #9762] <- low:8[31:0[R1]]
0001a937: #9764 := ZF
0001a931: when #9764 goto %00012b90
0003b0bb: goto %0001a93a

0001a93a:
0001a941: R1 := pad:32[mem[R4 + 1]]
0001a948: #9765 := 0xFFFFFFFFFFFFFFFE + R3
0001a94c: NF := 63:63[#9765]
0001a94f: VF := 63:63[R3] & ~63:63[#9765]
0001a952: ZF := #9765 = 0
0001a955: CF := 63:63[R3] | ~63:63[#9765] | 63:63[R3] & ~63:63[#9765]
0001a960: R5 := pad:32[mem[R2 + 1]]
0001a969: R1 := 31:0[R1] ^ 31:0[R5]
0001a971: mem := mem with [R2 + 1] <- low:8[31:0[R1]]
0001a97c: #9770 := ZF
0001a976: when #9770 goto %00012b90
0003b0bc: goto %0001a97f

0001a97f:
0001a986: R1 := pad:32[mem[R4 + 2]]
0001a98d: #9771 := 0xFFFFFFFFFFFFFFFD + R3
0001a991: NF := 63:63[#9771]
0001a994: VF := 63:63[R3] & ~63:63[#9771]
0001a997: ZF := #9771 = 0
0001a99a: CF := 63:63[R3] | ~63:63[#9771] | 63:63[R3] & ~63:63[#9771]
0001a9a5: R5 := pad:32[mem[R2 + 2]]
0001a9ae: R1 := 31:0[R1] ^ 31:0[R5]
0001a9b6: mem := mem with [R2 + 2] <- low:8[31:0[R1]]
0001a9c1: #9776 := ZF
0001a9bb: when #9776 goto %00012b90
0003b0bd: goto %0001a9c4

0001a9c4:
0001a9cb: R1 := pad:32[mem[R4 + 3]]
0001a9d2: #9777 := 0xFFFFFFFFFFFFFFFC + R3
0001a9d6: NF := 63:63[#9777]
0001a9d9: VF := 63:63[R3] & ~63:63[#9777]
0001a9dc: ZF := #9777 = 0
0001a9df: CF := 63:63[R3] | ~63:63[#9777] | 63:63[R3] & ~63:63[#9777]
0001a9ea: R5 := pad:32[mem[R2 + 3]]
0001a9f3: R1 := 31:0[R1] ^ 31:0[R5]
0001a9fb: mem := mem with [R2 + 3] <- low:8[31:0[R1]]
0001aa06: #9782 := ZF
0001aa00: when #9782 goto %00012b90
0003b0be: goto %0001aa09

0001aa09:
0001aa10: R1 := pad:32[mem[R4 + 4]]
0001aa17: #9783 := 0xFFFFFFFFFFFFFFFB + R3
0001aa1b: NF := 63:63[#9783]
0001aa1e: VF := 63:63[R3] & ~63:63[#9783]
0001aa21: ZF := #9783 = 0
0001aa24: CF := 63:63[R3] | ~63:63[#9783] | 63:63[R3] & ~63:63[#9783]
0001aa2f: R5 := pad:32[mem[R2 + 4]]
0001aa38: R1 := 31:0[R1] ^ 31:0[R5]
0001aa40: mem := mem with [R2 + 4] <- low:8[31:0[R1]]
0001aa4b: #9788 := ZF
0001aa45: when #9788 goto %00012b90
0003b0bf: goto %0001aa4e

0001aa4e:
0001aa55: R1 := pad:32[mem[R4 + 5]]
0001aa5c: #9789 := 0xFFFFFFFFFFFFFFFA + R3
0001aa60: NF := 63:63[#9789]
0001aa63: VF := 63:63[R3] & ~63:63[#9789]
0001aa66: ZF := #9789 = 0
0001aa69: CF := 63:63[R3] | ~63:63[#9789] | 63:63[R3] & ~63:63[#9789]
0001aa74: R5 := pad:32[mem[R2 + 5]]
0001aa7d: R1 := 31:0[R1] ^ 31:0[R5]
0001aa85: mem := mem with [R2 + 5] <- low:8[31:0[R1]]
0001aa90: #9794 := ZF
0001aa8a: when #9794 goto %00012b90
0003b0c0: goto %0001aa93

0001aa93:
0001aa9a: R1 := pad:32[mem[R4 + 6]]
0001aaa1: #9795 := 0xFFFFFFFFFFFFFFF9 + R3
0001aaa5: NF := 63:63[#9795]
0001aaa8: VF := 63:63[R3] & ~63:63[#9795]
0001aaab: ZF := #9795 = 0
0001aaae: CF := 63:63[R3] | ~63:63[#9795] | 63:63[R3] & ~63:63[#9795]
0001aab9: R5 := pad:32[mem[R2 + 6]]
0001aac2: R1 := 31:0[R1] ^ 31:0[R5]
0001aaca: mem := mem with [R2 + 6] <- low:8[31:0[R1]]
0001aad5: #9800 := ZF
0001aacf: when #9800 goto %00012b90
0003b0c1: goto %0001aad8

0001aad8:
0001aadf: R1 := pad:32[mem[R4 + 7]]
0001aae6: #9801 := 0xFFFFFFFFFFFFFFF8 + R3
0001aaea: NF := 63:63[#9801]
0001aaed: VF := 63:63[R3] & ~63:63[#9801]
0001aaf0: ZF := #9801 = 0
0001aaf3: CF := 63:63[R3] | ~63:63[#9801] | 63:63[R3] & ~63:63[#9801]
0001aafe: R5 := pad:32[mem[R2 + 7]]
0001ab07: R1 := 31:0[R1] ^ 31:0[R5]
0001ab0f: mem := mem with [R2 + 7] <- low:8[31:0[R1]]
0001ab1a: #9806 := ZF
0001ab14: when #9806 goto %00012b90
0003b0c2: goto %0001ab1d

0001ab1d:
0001ab24: R1 := pad:32[mem[R4 + 8]]
0001ab2b: #9807 := 0xFFFFFFFFFFFFFFF7 + R3
0001ab2f: NF := 63:63[#9807]
0001ab32: VF := 63:63[R3] & ~63:63[#9807]
0001ab35: ZF := #9807 = 0
0001ab38: CF := 63:63[R3] | ~63:63[#9807] | 63:63[R3] & ~63:63[#9807]
0001ab43: R5 := pad:32[mem[R2 + 8]]
0001ab4c: R1 := 31:0[R1] ^ 31:0[R5]
0001ab54: mem := mem with [R2 + 8] <- low:8[31:0[R1]]
0001ab5f: #9812 := ZF
0001ab59: when #9812 goto %00012b90
0003b0c3: goto %0001ab62

0001ab62:
0001ab69: R1 := pad:32[mem[R4 + 9]]
0001ab70: #9813 := 0xFFFFFFFFFFFFFFF6 + R3
0001ab74: NF := 63:63[#9813]
0001ab77: VF := 63:63[R3] & ~63:63[#9813]
0001ab7a: ZF := #9813 = 0
0001ab7d: CF := 63:63[R3] | ~63:63[#9813] | 63:63[R3] & ~63:63[#9813]
0001ab88: R5 := pad:32[mem[R2 + 9]]
0001ab91: R1 := 31:0[R1] ^ 31:0[R5]
0001ab99: mem := mem with [R2 + 9] <- low:8[31:0[R1]]
0001aba4: #9818 := ZF
0001ab9e: when #9818 goto %00012b90
0003b0c4: goto %0001aba7

0001aba7:
0001abae: R1 := pad:32[mem[R4 + 0xA]]
0001abb5: #9819 := 0xFFFFFFFFFFFFFFF5 + R3
0001abb9: NF := 63:63[#9819]
0001abbc: VF := 63:63[R3] & ~63:63[#9819]
0001abbf: ZF := #9819 = 0
0001abc2: CF := 63:63[R3] | ~63:63[#9819] | 63:63[R3] & ~63:63[#9819]
0001abcd: R5 := pad:32[mem[R2 + 0xA]]
0001abd6: R1 := 31:0[R1] ^ 31:0[R5]
0001abde: mem := mem with [R2 + 0xA] <- low:8[31:0[R1]]
0001abe9: #9824 := ZF
0001abe3: when #9824 goto %00012b90
0003b0c5: goto %0001abec

0001abec:
0001abf3: R1 := pad:32[mem[R4 + 0xB]]
0001abfa: #9825 := 0xFFFFFFFFFFFFFFF4 + R3
0001abfe: NF := 63:63[#9825]
0001ac01: VF := 63:63[R3] & ~63:63[#9825]
0001ac04: ZF := #9825 = 0
0001ac07: CF := 63:63[R3] | ~63:63[#9825] | 63:63[R3] & ~63:63[#9825]
0001ac12: R5 := pad:32[mem[R2 + 0xB]]
0001ac1b: R1 := 31:0[R1] ^ 31:0[R5]
0001ac23: mem := mem with [R2 + 0xB] <- low:8[31:0[R1]]
0001ac2e: #9830 := ZF
0001ac28: when #9830 goto %00012b90
0003b0c6: goto %0001ac31

0001ac31:
0001ac38: R1 := pad:32[mem[R4 + 0xC]]
0001ac3f: #9831 := 0xFFFFFFFFFFFFFFF3 + R3
0001ac43: NF := 63:63[#9831]
0001ac46: VF := 63:63[R3] & ~63:63[#9831]
0001ac49: ZF := #9831 = 0
0001ac4c: CF := 63:63[R3] | ~63:63[#9831] | 63:63[R3] & ~63:63[#9831]
0001ac57: R5 := pad:32[mem[R2 + 0xC]]
0001ac60: R1 := 31:0[R1] ^ 31:0[R5]
0001ac68: mem := mem with [R2 + 0xC] <- low:8[31:0[R1]]
0001ac73: #9836 := ZF
0001ac6d: when #9836 goto %00012b90
0003b0c7: goto %0001ac76

0001ac76:
0001ac7d: R1 := pad:32[mem[R4 + 0xD]]
0001ac84: #9837 := 0xFFFFFFFFFFFFFFF2 + R3
0001ac88: NF := 63:63[#9837]
0001ac8b: VF := 63:63[R3] & ~63:63[#9837]
0001ac8e: ZF := #9837 = 0
0001ac91: CF := 63:63[R3] | ~63:63[#9837] | 63:63[R3] & ~63:63[#9837]
0001ac9c: R3 := pad:32[mem[R2 + 0xD]]
0001aca5: R1 := 31:0[R1] ^ 31:0[R3]
0001acad: mem := mem with [R2 + 0xD] <- low:8[31:0[R1]]
0001acb8: #9842 := ZF
0001acb2: when #9842 goto %00012b90
0003b0c8: goto %0001acbb

0001acbb:
0001acc2: R1 := pad:32[mem[R4 + 0xE]]
0001accb: R3 := pad:32[mem[R2 + 0xE]]
0001acd4: R1 := 31:0[R1] ^ 31:0[R3]
0001acdc: mem := mem with [R2 + 0xE] <- low:8[31:0[R1]]
0003b0c9: goto %00012b90

00012b90:
00012b9d: call R30 with noreturn

0003b0ca: sub myexit(myexit_result)
0003b415: myexit_result :: out u32 = low:32[R0]

000229c5:
000229cf: #14780 := R31 - 0x20
000229d4: mem := mem with [#14780, el]:u64 <- R29
000229d9: mem := mem with [#14780 + 8, el]:u64 <- R30
000229dd: R31 := #14780
000229e4: R29 := R31
000229ec: mem := mem with [R31 + 0x10, el]:u64 <- R19
000229f5: R19 := 31:0[R0]
00022a01: #14785 := ~31:0[R0] = 0
000229fb: when #14785 goto %000229f9
0003b0cb: goto %00022a35

00022a35:
00022a3f: R0 := 31:0[R19]
00022a44: R30 := 0x4824
00022a47: call @exit with return %000229f9

000229f9:
00022a07: R0 := 0x27000
00022a0d: R2 := 0x11000
00022a14: R1 := 1
00022a1b: R2 := R2 + 0x678
00022a23: R0 := mem[R0 + 0xF68, el]:u64
00022a2b: R0 := mem[R0, el]:u64
00022a30: R30 := 0x4840
00022a32: call @__fprintf_chk with return %00022a34

00022a34:
00022a37: goto %00022a35

0003b0cc: sub new(new_result)
0003b416: new_result :: out u32 = low:32[R0]

0000f5a2:
0000f5a6: R1 := 1
0000f5ab: call @calloc with noreturn

0003b0cd: sub new_auth(new_auth_result)
0003b417: new_auth_result :: out u32 = low:32[R0]

0000f3a5:
0000f3af: #57 := R31 - 0x10
0000f3b4: mem := mem with [#57, el]:u64 <- R29
0000f3b9: mem := mem with [#57 + 8, el]:u64 <- R30
0000f3bd: R31 := #57
0000f3c3: R0 := 0x13C
0000f3ca: R29 := R31
0000f3cf: R30 := 0xB060
0000f3d2: call @malloc with return %0000f3d4

0000f3d4:
0000f3de: #59 := R0 = 0
0000f3d8: when #59 goto %0000f3d6
0003b0ce: goto %0002d7c8

0002d7c8:
0002d7cd: R4 := R0 + 0x32
0002d7d4: R3 := R0 + 0x64
0002d7dc: #20226 := R0
0002d7e1: mem := mem with [#20226, el]:u64 <- 0
0002d7e6: mem := mem with [#20226 + 8, el]:u64 <- 0
0002d7ed: R2 := R0 + 0xFA
0002d7f4: R5 := R0 + 0xC8
0002d7fc: #20231 := R0 + 0x10
0002d801: mem := mem with [#20231, el]:u64 <- 0
0002d806: mem := mem with [#20231 + 8, el]:u64 <- 0
0002d80d: R1 := R0 + 0x96
0002d814: R6 := R0 + 0x200
0002d81c: #20236 := R0 + 0x20
0002d821: mem := mem with [#20236, el]:u64 <- 0
0002d826: mem := mem with [#20236 + 8, el]:u64 <- 0
0002d82c: R7 := 0x12000
0002d834: mem := mem with [R0 + 0x30, el]:u16 <- 0
0002d83c: #20241 := R4
0002d841: mem := mem with [#20241, el]:u64 <- 0
0002d846: mem := mem with [#20241 + 8, el]:u64 <- 0
0002d84e: V0 := high:64[V0].mem[R7 + 0x688, el]:u64
0002d856: #20248 := R4 + 0x10
0002d85b: mem := mem with [#20248, el]:u64 <- 0
0002d860: mem := mem with [#20248 + 8, el]:u64 <- 0
0002d868: #20253 := R4 + 0x20
0002d86d: mem := mem with [#20253, el]:u64 <- 0
0002d872: mem := mem with [#20253 + 8, el]:u64 <- 0
0002d87a: mem := mem with [R0 + 0x62, el]:u16 <- 0
0002d882: #20258 := R3
0002d887: mem := mem with [#20258, el]:u64 <- 0
0002d88c: mem := mem with [#20258 + 8, el]:u64 <- 0
0002d894: #20263 := R3 + 0x10
0002d899: mem := mem with [#20263, el]:u64 <- 0
0002d89e: mem := mem with [#20263 + 8, el]:u64 <- 0
0002d8a6: #20268 := R3 + 0x20
0002d8ab: mem := mem with [#20268, el]:u64 <- 0
0002d8b0: mem := mem with [#20268 + 8, el]:u64 <- 0
0002d8b8: mem := mem with [R0 + 0x94, el]:u16 <- 0
0002d8c0: #20273 := R2
0002d8c5: mem := mem with [#20273, el]:u64 <- 0
0002d8ca: mem := mem with [#20273 + 8, el]:u64 <- 0
0002d8d2: #20278 := R2 + 0x10
0002d8d7: mem := mem with [#20278, el]:u64 <- 0
0002d8dc: mem := mem with [#20278 + 8, el]:u64 <- 0
0002d8e4: #20283 := R2 + 0x20
0002d8e9: mem := mem with [#20283, el]:u64 <- 0
0002d8ee: mem := mem with [#20283 + 8, el]:u64 <- 0
0002d8f6: #20288 := R0 + 0xC8
0002d8fb: mem := mem with [#20288, el]:u64 <- 0
0002d900: mem := mem with [#20288 + 8, el]:u64 <- 0
0002d908: mem := mem with [R0 + 0x12A, el]:u16 <- 0
0002d910: #20293 := R5 + 0x10
0002d915: mem := mem with [#20293, el]:u64 <- 0
0002d91a: mem := mem with [#20293 + 8, el]:u64 <- 0
0002d922: #20298 := R5 + 0x20
0002d927: mem := mem with [#20298, el]:u64 <- 0
0002d92c: mem := mem with [#20298 + 8, el]:u64 <- 0
0002d934: mem := mem with [R5 + 0x30, el]:u16 <- 0
0002d93c: #20303 := R1
0002d941: mem := mem with [#20303, el]:u64 <- 0
0002d946: mem := mem with [#20303 + 8, el]:u64 <- 0
0002d94e: #20308 := R1 + 0x10
0002d953: mem := mem with [#20308, el]:u64 <- 0
0002d958: mem := mem with [#20308 + 8, el]:u64 <- 0
0002d960: #20313 := R1 + 0x20
0002d965: mem := mem with [#20313, el]:u64 <- 0
0002d96a: mem := mem with [#20313 + 8, el]:u64 <- 0
0002d972: mem := mem with [R0 + 0xC6, el]:u16 <- 0
0002d97a: mem := mem with [R6 - 0xCC, el]:u64 <- 0
0002d982: mem := mem with [R6 - 0xD4, el]:u64 <- 63:0[V0]
0003b0cf: goto %0000f3d6

0000f3d6:
0000f3e8: R29 := mem[R31, el]:u64
0000f3ec: R30 := mem[R31 + 8, el]:u64
0000f3ef: R31 := R31 + 0x10
0000f3f4: call R30 with noreturn

0003b0d0: sub new_rr_data(new_rr_data_result)
0003b418: new_rr_data_result :: out u32 = low:32[R0]

00014359:
00014360: #5794 := R31 - 0x10
00014365: mem := mem with [#5794, el]:u64 <- R29
0001436a: mem := mem with [#5794 + 8, el]:u64 <- R30
0001436e: R31 := #5794
00014374: R0 := 0x68
0001437b: R29 := R31
00014380: R30 := 0x5320
00014382: call @malloc with return %00014384

00014384:
0001438a: mem := mem with [R0, el]:u32 <- 0
00014390: R1 := 0x11000
00014398: mem := mem with [R0 + 8, el]:u64 <- 0
0001439e: V0 := 0
000143a6: mem := mem with [R0 + 0x20, el]:u32 <- 0
000143af: V1 := mem[R1 + 0x6F0, el]:u64.mem[R1 + 0x6F8, el]:u64
000143b7: mem := mem with [R0 + 0x28, el]:u128 <- V0
000143bf: mem := mem with [R0 + 0x10, el]:u128 <- V1
000143c7: mem := mem with [R0 + 0x38, el]:u128 <- V0
000143cf: mem := mem with [R0 + 0x48, el]:u128 <- V0
000143d7: mem := mem with [R0 + 0x58, el]:u128 <- V0
000143e1: R29 := mem[R31, el]:u64
000143e5: R30 := mem[R31 + 8, el]:u64
000143e8: R31 := R31 + 0x10
000143ed: call R30 with noreturn

0003b0d1: sub noproxy_add(noproxy_add_result)
0003b419: noproxy_add_result :: out u32 = low:32[R0]

0002303e:
00023045: #14991 := R31 - 0x60
0002304a: mem := mem with [#14991, el]:u64 <- R29
0002304f: mem := mem with [#14991 + 8, el]:u64 <- R30
00023053: R31 := #14991
0002305a: R29 := R31
00023062: #14996 := R31 + 0x30
00023067: mem := mem with [#14996, el]:u64 <- R23
0002306c: mem := mem with [#14996 + 8, el]:u64 <- R24
00023072: R23 := 0x27000
0002307a: R2 := mem[R23 + 0xFB8, el]:u64
00023082: #15002 := R31 + 0x10
00023087: mem := mem with [#15002, el]:u64 <- R19
0002308c: mem := mem with [#15002 + 8, el]:u64 <- R20
00023094: R20 := R0
0002309c: R0 := R1
000230a4: R1 := mem[R2, el]:u64
000230ac: mem := mem with [R31 + 0x58, el]:u64 <- R1
000230b2: R1 := 0
000230ba: #15014 := R31 + 0x20
000230bf: mem := mem with [#15014, el]:u64 <- R21
000230c4: mem := mem with [#15014 + 8, el]:u64 <- R22
000230cb: R22 := R31 + 0x50
000230d1: R21 := 0x13000
000230d8: R21 := R21 + 0xFE0
000230e0: R2 := R22
000230e8: R1 := R21
000230ed: R30 := 0x10B60
000230f0: call @strtok_r with return %000230f2

000230f2:
000230fc: #15022 := R0 = 0
000230f6: when #15022 goto %000230f4
0003b0d2: goto %00026857

00026857:
0002685b: R24 := 0x13000
00026863: R19 := R0
0002686a: R24 := R24 + 0xFE8
00026872: mem := mem with [R31 + 0x40, el]:u64 <- R25
00026878: R25 := 0x28000
0002687f: R25 := R25 + 0x4D8
00026884: goto %00026882

00026882:
0002688c: R0 := mem[R25 + 4, el]:u32
00026898: #16905 := 31:0[R0] = 0
00026892: when #16905 goto %00026890
0003b0d3: goto %00026907

00026907:
0002690d: R2 := R19
00026915: R1 := R24
0002691c: R0 := 1
00026921: R30 := 0x10BCC
00026923: call @__printf_chk with return %00026925

00026925:
0002692b: R0 := R19
00026930: R30 := 0x10BD4
00026932: call @strdup with return %00026934

00026934:
0002693a: R2 := R0
00026940: R1 := 0
00026948: R0 := R20
0002694d: R30 := 0x10BE4
0002694f: call @plist_add with return %00026951

00026951:
00026957: R20 := R0
0002695f: R2 := R22
00026967: R1 := R21
0002696d: R0 := 0
00026972: R30 := 0x10BF8
00026974: call @strtok_r with return %00026976

00026976:
0002697c: R19 := R0
00026987: #16956 := ~R0 = 0
00026981: when #16956 goto %00026882
0003b0d4: goto %000268f5

00026890:
000268a0: R0 := R19
000268a5: R30 := 0x10B88
000268a7: call @strdup with return %000268a9

000268a9:
000268ad: R1 := 0
000268b5: R2 := R0
000268bd: R0 := R20
000268c2: R30 := 0x10B98
000268c4: call @plist_add with return %000268c6

000268c6:
000268cc: R2 := R22
000268d4: R20 := R0
000268dc: R1 := R21
000268e2: R0 := 0
000268e7: R30 := 0x10BAC
000268e9: call @strtok_r with return %000268eb

000268eb:
000268f1: R19 := R0
000268fd: #16927 := R0 = 0
000268f7: when #16927 goto %000268f5
0003b0d5: goto %00026882

000268f5:
00026905: R25 := mem[R31 + 0x40, el]:u64
0003b0d6: goto %000230f4

000230f4:
00023104: R23 := mem[R23 + 0xFB8, el]:u64
0002310c: R0 := mem[R31 + 0x58, el]:u64
00023114: R1 := mem[R23, el]:u64
0002311c: #15029 := 1 + ~R1 + R0
00023120: NF := 63:63[#15029]
00023123: VF := 63:63[R0] & 63:63[~R1] & ~63:63[#15029] | ~63:63[R0] &
          ~63:63[~R1] & 63:63[#15029]
00023126: ZF := #15029 = 0
00023129: CF := 63:63[R0] & 63:63[~R1] | 63:63[~R1] & ~63:63[#15029] |
          63:63[R0] & ~63:63[#15029]
0002312d: R0 := #15029
00023133: R1 := 0
0002313f: #15034 := ~ZF <> 0
00023139: when #15034 goto %00023137
0003b0d7: goto %00026812

00023137:
00023147: mem := mem with [R31 + 0x40, el]:u64 <- R25
0002314c: R30 := 0x10C3C
0002314e: call @__stack_chk_fail with return %00023150

00023150:
0003b0d8: call @noproxy_match with noreturn

00026812:
00026818: R0 := R20
00026821: R19 := mem[R31 + 0x10, el]:u64
00026825: R20 := mem[R31 + 0x18, el]:u64
0002682e: R21 := mem[R31 + 0x20, el]:u64
00026832: R22 := mem[R31 + 0x28, el]:u64
0002683b: R23 := mem[R31 + 0x30, el]:u64
0002683f: R24 := mem[R31 + 0x38, el]:u64
00026849: R29 := mem[R31, el]:u64
0002684d: R30 := mem[R31 + 8, el]:u64
00026850: R31 := R31 + 0x60
00026855: call R30 with noreturn

0003b0d9: sub noproxy_match(noproxy_match_result)
0003b41a: noproxy_match_result :: out u32 = low:32[R0]

00023152:
00023159: #15038 := R31 - 0x40
0002315e: mem := mem with [#15038, el]:u64 <- R29
00023163: mem := mem with [#15038 + 8, el]:u64 <- R30
00023167: R31 := #15038
0002316e: R29 := R31
00023176: #15043 := R31 + 0x10
0002317b: mem := mem with [#15043, el]:u64 <- R19
00023180: mem := mem with [#15043 + 8, el]:u64 <- R20
00023188: mem := mem with [R31 + 0x30, el]:u64 <- R23
0002318e: R23 := 0x28000
00023195: R20 := R23 + 0x4D8
0002319d: R19 := mem[R20 + 0x18, el]:u64
000231a9: #15046 := R19 = 0
000231a3: when #15046 goto %000231a1
0003b0da: goto %000267eb

000267eb:
000267f1: #16889 := R31 + 0x20
000267f6: mem := mem with [#16889, el]:u64 <- R21
000267fb: mem := mem with [#16889 + 8, el]:u64 <- R22
00026801: R22 := 0x14000
00026809: R21 := R0
00026810: R22 := R22 + 0x18
0003b0db: goto %00023216

00023216:
00023226: R0 := mem[R19 + 8, el]:u64
00023232: #15063 := R0 = 0
0002322c: when #15063 goto %0002322a
0003b0dc: goto %0002326a

0002326a:
00023271: R1 := pad:32[mem[R0]]
0002327d: #15069 := ~31:0[R1] = 0
00023277: when #15069 goto %00023275
0003b0dd: goto %0002322a

00023275:
00023285: R1 := R21
0002328c: R2 := 0
00023291: R30 := 0x10CDC
00023294: call @fnmatch with return %00023296

00023296:
0002329f: #15073 := ~31:0[R0] = 0
00023299: when #15073 goto %0002322a
0003b0de: goto %000232a2

000232a2:
000232a7: R23 := R23 + 0x4D8
000232ae: R20 := 1
000232b7: R0 := mem[R23 + 4, el]:u32
000232c3: #15075 := ~31:0[R0] = 0
000232bd: when #15075 goto %000232bb
0003b0df: goto %00026799

000232bb:
000232cb: R3 := mem[R19 + 8, el]:u64
000232d3: R2 := R21
000232dc: R0 := 31:0[R20]
000232e2: R1 := 0x14000
000232e9: R1 := R1 + 8
000232ee: R30 := 0x10D20
000232f0: call @__printf_chk with return %000232f2

000232f2:
000232f9: R21 := mem[R31 + 0x20, el]:u64
000232fd: R22 := mem[R31 + 0x28, el]:u64
00023301: goto %000231b2

00026799:
000267a0: R0 := 31:0[R20]
000267a9: R19 := mem[R31 + 0x10, el]:u64
000267ad: R20 := mem[R31 + 0x18, el]:u64
000267b6: R21 := mem[R31 + 0x20, el]:u64
000267ba: R22 := mem[R31 + 0x28, el]:u64
000267c2: R23 := mem[R31 + 0x30, el]:u64
000267cc: R29 := mem[R31, el]:u64
000267d0: R30 := mem[R31 + 8, el]:u64
000267d3: R31 := R31 + 0x40
000267d8: call R30 with noreturn

0002322a:
0002323b: R1 := mem[R20 + 4, el]:u32
00023246: #15065 := ~31:0[R1] = 0
00023240: when #15065 goto %000231e6
0003b0e0: goto %00023249

000231e6:
000231ec: R3 := mem[R19 + 8, el]:u64
000231f4: R2 := R21
000231fc: R1 := R22
00023203: R0 := 1
00023208: R30 := 0x10CC0
0002320a: call @__printf_chk with return %0002320c

0002320c:
00023212: R19 := mem[R19 + 0x10, el]:u64
0002321e: #15061 := ~R19 = 0
00023218: when #15061 goto %00023216
0003b0e1: goto %000267da

000267da:
000267e1: R21 := mem[R31 + 0x20, el]:u64
000267e5: R22 := mem[R31 + 0x28, el]:u64
000267e9: goto %000231a1

00023249:
0002324f: R19 := mem[R19 + 0x10, el]:u64
0002325a: #15067 := ~R19 = 0
00023254: when #15067 goto %00023216
0003b0e2: goto %0002325d

0002325d:
00023264: R21 := mem[R31 + 0x20, el]:u64
00023268: R22 := mem[R31 + 0x28, el]:u64
0003b0e3: goto %000231a1

000231a1:
000231b0: R20 := 0
0003b0e4: goto %000231b2

000231b2:
000231b9: R0 := 31:0[R20]
000231c2: R19 := mem[R31 + 0x10, el]:u64
000231c6: R20 := mem[R31 + 0x18, el]:u64
000231ce: R23 := mem[R31 + 0x30, el]:u64
000231d8: R29 := mem[R31, el]:u64
000231dc: R30 := mem[R31 + 8, el]:u64
000231df: R31 := R31 + 0x40
000231e4: call R30 with noreturn

0003b0e5: sub ntlm2_hash_password(ntlm2_hash_password_result)
0003b41b: ntlm2_hash_password_result :: out u32 = low:32[R0]

0001c1b3:
0001c1ba: #11058 := R31 - 0x50
0001c1bf: mem := mem with [#11058, el]:u64 <- R29
0001c1c4: mem := mem with [#11058 + 8, el]:u64 <- R30
0001c1c8: R31 := #11058
0001c1cf: R29 := R31
0001c1d7: #11063 := R31 + 0x20
0001c1dc: mem := mem with [#11063, el]:u64 <- R21
0001c1e1: mem := mem with [#11063 + 8, el]:u64 <- R22
0001c1e7: R21 := 0x27000
0001c1ee: R22 := R31 + 0x40
0001c1f6: R21 := mem[R21 + 0xFB8, el]:u64
0001c1fe: #11069 := R31 + 0x30
0001c203: mem := mem with [#11069, el]:u64 <- R23
0001c208: mem := mem with [#11069 + 8, el]:u64 <- R24
0001c210: R24 := R0
0001c218: R0 := mem[R21, el]:u64
0001c220: mem := mem with [R31 + 0x48, el]:u64 <- R0
0001c226: R0 := 0
0001c22e: R23 := R1
0001c234: R0 := 0x16
0001c23c: #11081 := R31 + 0x10
0001c241: mem := mem with [#11081, el]:u64 <- R19
0001c246: mem := mem with [#11081 + 8, el]:u64 <- R20
0001c24e: R19 := R2
0001c253: R30 := 0x6130
0001c255: call @new with return %0001c257

0001c257:
0001c25d: R1 := R19
0001c265: R19 := R0
0001c26d: R0 := R22
0001c272: R30 := 0x6140
0001c274: call @unicode with return %0001c276

0001c276:
0001c27b: R20 := extend:64[31:0[R0]]
0001c283: R2 := R19
0001c28b: R0 := mem[R31 + 0x40, el]:u64
0001c293: R1 := R20
0001c298: R30 := 0x6154
0001c29a: call @md4_buffer with return %0001c29c

0001c29c:
0001c2a2: mem := mem with [R19 + 0x10, el]:u32 <- 0
0001c2aa: mem := mem with [R19 + 0x14] <- 0
0001c2b2: R2 := R20
0001c2b9: R1 := 0
0001c2c1: R0 := mem[R31 + 0x40, el]:u64
0001c2c6: R30 := 0x616C
0001c2c8: call @memset with return %0001c2ca

0001c2ca:
0001c2d0: R0 := mem[R31 + 0x40, el]:u64
0001c2d5: R30 := 0x6174
0001c2d7: call @free with return %0001c2d9

0001c2d9:
0001c2df: R0 := R24
0001c2e4: R30 := 0x617C
0001c2e6: call @strlen with return %0001c2e8

0001c2e8:
0001c2ee: R20 := R0
0001c2f6: R0 := R23
0001c2fb: R30 := 0x6188
0001c2fd: call @strlen with return %0001c2ff

0001c2ff:
0001c305: R0 := R20 + R0
0001c30c: R0 := R0 + 1
0001c311: R30 := 0x6194
0001c313: call @new with return %0001c315

0001c315:
0001c31b: R1 := R24
0001c323: R20 := R0
0001c328: R30 := 0x61A0
0001c32b: call @strcat with return %0001c32d

0001c32d:
0001c333: R1 := R23
0001c33b: R0 := R20
0001c340: R30 := 0x61AC
0001c342: call @strcat with return %0001c344

0001c344:
0001c34a: R0 := R20
0001c34f: R30 := 0x61B4
0001c351: call @uppercase with return %0001c353

0001c353:
0001c359: R1 := R20
0001c361: R0 := R22
0001c366: R30 := 0x61C0
0001c368: call @unicode with return %0001c36a

0001c36a:
0001c371: R23 := 31:0[R0]
0001c377: R0 := 0x11
0001c37c: R30 := 0x61CC
0001c37e: call @new with return %0001c380

0001c380:
0001c386: R4 := R0
0001c38e: R2 := mem[R31 + 0x40, el]:u64
0001c395: R3 := extend:64[31:0[R23]]
0001c39b: R1 := 0x10
0001c3a3: R22 := R0
0001c3ab: R0 := R19
0001c3b0: R30 := 0x61E8
0001c3b2: call @hmac_md5 with return %0001c3b4

0001c3b4:
0001c3ba: R0 := R19
0001c3bf: R30 := 0x61F0
0001c3c1: call @free with return %0001c3c3

0001c3c3:
0001c3c9: R0 := mem[R31 + 0x40, el]:u64
0001c3ce: R30 := 0x61F8
0001c3d0: call @free with return %0001c3d2

0001c3d2:
0001c3d8: R0 := R20
0001c3dd: R30 := 0x6200
0001c3df: call @free with return %0001c3e1

0001c3e1:
0001c3e7: R0 := mem[R31 + 0x48, el]:u64
0001c3ef: R1 := mem[R21, el]:u64
0001c3f7: #11167 := 1 + ~R1 + R0
0001c3fb: NF := 63:63[#11167]
0001c3fe: VF := 63:63[R0] & 63:63[~R1] & ~63:63[#11167] | ~63:63[R0] &
          ~63:63[~R1] & 63:63[#11167]
0001c401: ZF := #11167 = 0
0001c404: CF := 63:63[R0] & 63:63[~R1] | 63:63[~R1] & ~63:63[#11167] |
          63:63[R0] & ~63:63[#11167]
0001c408: R0 := #11167
0001c40e: R1 := 0
0001c41a: #11172 := ~ZF <> 0
0001c414: when #11172 goto %0001c412
0003b0e6: goto %0002c972

0001c412:
0001c41f: R30 := 0x6230
0001c421: call @__stack_chk_fail with return %0003b0e7

0003b0e7:
0003b0e8: call @ntlm_request with noreturn

0002c972:
0002c978: R0 := R22
0002c981: R19 := mem[R31 + 0x10, el]:u64
0002c985: R20 := mem[R31 + 0x18, el]:u64
0002c98e: R21 := mem[R31 + 0x20, el]:u64
0002c992: R22 := mem[R31 + 0x28, el]:u64
0002c99b: R23 := mem[R31 + 0x30, el]:u64
0002c99f: R24 := mem[R31 + 0x38, el]:u64
0002c9a9: R29 := mem[R31, el]:u64
0002c9ad: R30 := mem[R31 + 8, el]:u64
0002c9b0: R31 := R31 + 0x50
0002c9b5: call R30 with noreturn

0003b0e9: sub ntlm_hash_lm_password(ntlm_hash_lm_password_result)
0003b41c: ntlm_hash_lm_password_result :: out u32 = low:32[R0]

0001be69:
0001be70: #10925 := R31 - 0x150
0001be75: mem := mem with [#10925, el]:u64 <- R29
0001be7a: mem := mem with [#10925 + 8, el]:u64 <- R30
0001be7e: R31 := #10925
0001be84: R1 := 0x474B
0001be8b: R1 := R1 & 0xFFFFFFFF0000FFFF | 0x21530000
0001be92: R29 := R31
0001be9a: #10931 := R31 + 0x20
0001be9f: mem := mem with [#10931, el]:u64 <- R21
0001bea4: mem := mem with [#10931 + 8, el]:u64 <- R22
0001beaa: R22 := 0x27000
0001beb1: R1 := R1 & 0xFFFF0000FFFFFFFF | 0x234000000000
0001beb9: R22 := mem[R22 + 0xFB8, el]:u64
0001bec0: R1 := R1 & 0xFFFFFFFFFFFF | 0x2524000000000000
0001bec8: mem := mem with [R31 + 0x140, el]:u64 <- R1
0001becf: R21 := R31 + 0x40
0001bed7: R1 := mem[R22, el]:u64
0001bedf: mem := mem with [R31 + 0x148, el]:u64 <- R1
0001bee5: R1 := 0
0001beed: #10940 := R31 + 0x10
0001bef2: mem := mem with [#10940, el]:u64 <- R19
0001bef7: mem := mem with [#10940 + 8, el]:u64 <- R20
0001beff: mem := mem with [R31 + 0x30, el]:u64 <- R23
0001bf07: R23 := R0
0001bf0d: R0 := 0x16
0001bf12: R30 := 0x5F94
0001bf14: call @new with return %0001bf16

0001bf16:
0001bf1c: R19 := R0
0001bf22: R0 := 0xF
0001bf27: R30 := 0x5FA0
0001bf29: call @new with return %0001bf2b

0001bf2b:
0001bf31: R20 := R0
0001bf39: R0 := R23
0001bf3e: R30 := 0x5FAC
0001bf40: call @strlen with return %0001bf42

0001bf42:
0001bf46: R3 := 0xE
0001bf4e: R2 := R0
0001bf56: #10960 := 1 + ~R3 + R0
0001bf5a: NF := 63:63[#10960]
0001bf5d: VF := 63:63[R0] & 63:63[~R3] & ~63:63[#10960] | ~63:63[R0] &
          ~63:63[~R3] & 63:63[#10960]
0001bf60: ZF := #10960 = 0
0001bf63: CF := 63:63[R0] & 63:63[~R3] | 63:63[~R3] & ~63:63[#10960] |
          63:63[R0] & ~63:63[#10960]
0001bf6d: R1 := R23
0001bf84: #10968 := (~CF | ZF) <> 0
0001bf85: goto %0001bf7c

0001bf7c:
0001bf7e: when #10968 goto %0001bf76
0001bf7f: goto %0001bf79

0001bf79:
0001bf7a: R2 := R3
0001bf81: goto %0001bf7d

0001bf76:
0001bf77: R2 := R2
0001bf80: goto %0001bf7d

0001bf7d:
0001bf8e: R0 := R20
0001bf95: R23 := R31 + 0x140
0001bf9a: R30 := 0x5FCC
0001bf9d: call @strncpy with return %0001bf9f

0001bf9f:
0001bfa2: R30 := 0x5FD0
0001bfa4: call @uppercase with return %0001bfa6

0001bfa6:
0001bfac: R0 := R20
0001bfb4: R1 := R21
0001bfb9: R30 := 0x5FDC
0001bfbb: call @ntlm_set_key with return %0001bfbd

0001bfbd:
0001bfc3: R2 := R19
0001bfca: R3 := 0
0001bfd2: R0 := R21
0001bfda: R1 := R23
0001bfdf: R30 := 0x5FF0
0001bfe1: call @gl_des_ecb_crypt with return %0001bfe3

0001bfe3:
0001bfe9: R1 := R21
0001bff0: R0 := R20 + 7
0001bff5: R30 := 0x5FFC
0001bff7: call @ntlm_set_key with return %0001bff9

0001bff9:
0001bfff: R1 := R23
0001c006: R2 := R19 + 8
0001c00e: R0 := R21
0001c015: R3 := 0
0001c01a: R30 := 0x6010
0001c01c: call @gl_des_ecb_crypt with return %0001c01e

0001c01e:
0001c024: mem := mem with [R19 + 0x10, el]:u32 <- 0
0001c02c: mem := mem with [R19 + 0x14] <- 0
0001c034: R0 := R20
0001c039: R30 := 0x6020
0001c03b: call @free with return %0001c03d

0001c03d:
0001c043: R0 := mem[R31 + 0x148, el]:u64
0001c04b: R1 := mem[R22, el]:u64
0001c053: #11004 := 1 + ~R1 + R0
0001c057: NF := 63:63[#11004]
0001c05a: VF := 63:63[R0] & 63:63[~R1] & ~63:63[#11004] | ~63:63[R0] &
          ~63:63[~R1] & 63:63[#11004]
0001c05d: ZF := #11004 = 0
0001c060: CF := 63:63[R0] & 63:63[~R1] | 63:63[~R1] & ~63:63[#11004] |
          63:63[R0] & ~63:63[#11004]
0001c064: R0 := #11004
0001c06a: R1 := 0
0001c076: #11009 := ~ZF <> 0
0001c070: when #11009 goto %0001c06e
0003b0ea: goto %0002c9ea

0001c06e:
0001c07b: R30 := 0x6050
0001c07d: call @__stack_chk_fail with return %0003b0eb

0003b0eb:
0003b0ec: call @ntlm_hash_nt_password with noreturn

0002c9ea:
0002c9f0: R0 := R19
0002c9f9: R19 := mem[R31 + 0x10, el]:u64
0002c9fd: R20 := mem[R31 + 0x18, el]:u64
0002ca06: R21 := mem[R31 + 0x20, el]:u64
0002ca0a: R22 := mem[R31 + 0x28, el]:u64
0002ca12: R23 := mem[R31 + 0x30, el]:u64
0002ca1c: R29 := mem[R31, el]:u64
0002ca20: R30 := mem[R31 + 8, el]:u64
0002ca23: R31 := R31 + 0x150
0002ca28: call R30 with noreturn

0003b0ed: sub ntlm_hash_nt_password(ntlm_hash_nt_password_result)
0003b41d: ntlm_hash_nt_password_result :: out u32 = low:32[R0]

0001c07f:
0001c086: #11013 := R31 - 0x40
0001c08b: mem := mem with [#11013, el]:u64 <- R29
0001c090: mem := mem with [#11013 + 8, el]:u64 <- R30
0001c094: R31 := #11013
0001c09b: R29 := R31
0001c0a3: #11018 := R31 + 0x10
0001c0a8: mem := mem with [#11018, el]:u64 <- R19
0001c0ad: mem := mem with [#11018 + 8, el]:u64 <- R20
0001c0b3: R20 := 0x27000
0001c0bb: R19 := R0
0001c0c3: R20 := mem[R20 + 0xFB8, el]:u64
0001c0c9: R0 := 0x16
0001c0d1: R1 := mem[R20, el]:u64
0001c0d9: mem := mem with [R31 + 0x38, el]:u64 <- R1
0001c0df: R1 := 0
0001c0e7: mem := mem with [R31 + 0x20, el]:u64 <- R21
0001c0ec: R30 := 0x6080
0001c0ee: call @new with return %0001c0f0

0001c0f0:
0001c0f6: R1 := R19
0001c0fe: R19 := R0
0001c105: R0 := R31 + 0x30
0001c10a: R30 := 0x6090
0001c10c: call @unicode with return %0001c10e

0001c10e:
0001c113: R21 := extend:64[31:0[R0]]
0001c11b: R2 := R19
0001c123: R0 := mem[R31 + 0x30, el]:u64
0001c12b: R1 := R21
0001c130: R30 := 0x60A4
0001c132: call @md4_buffer with return %0001c134

0001c134:
0001c13a: mem := mem with [R19 + 0x10, el]:u32 <- 0
0001c142: mem := mem with [R19 + 0x14] <- 0
0001c149: R1 := 0
0001c151: R2 := R21
0001c159: R0 := mem[R31 + 0x30, el]:u64
0001c15e: R30 := 0x60BC
0001c160: call @memset with return %0001c162

0001c162:
0001c168: R0 := mem[R31 + 0x30, el]:u64
0001c16d: R30 := 0x60C4
0001c16f: call @free with return %0001c171

0001c171:
0001c177: R0 := mem[R31 + 0x38, el]:u64
0001c17f: R1 := mem[R20, el]:u64
0001c187: #11049 := 1 + ~R1 + R0
0001c18b: NF := 63:63[#11049]
0001c18e: VF := 63:63[R0] & 63:63[~R1] & ~63:63[#11049] | ~63:63[R0] &
          ~63:63[~R1] & 63:63[#11049]
0001c191: ZF := #11049 = 0
0001c194: CF := 63:63[R0] & 63:63[~R1] | 63:63[~R1] & ~63:63[#11049] |
          63:63[R0] & ~63:63[#11049]
0001c198: R0 := #11049
0001c19e: R1 := 0
0001c1aa: #11054 := ~ZF <> 0
0001c1a4: when #11054 goto %0001c1a2
0003b0ee: goto %0002c9b7

0001c1a2:
0001c1af: R30 := 0x60F0
0001c1b1: call @__stack_chk_fail with return %0003b0ef

0003b0ef:
0003b0f0: call @ntlm2_hash_password with noreturn

0002c9b7:
0002c9bd: R0 := R19
0002c9c6: R19 := mem[R31 + 0x10, el]:u64
0002c9ca: R20 := mem[R31 + 0x18, el]:u64
0002c9d2: R21 := mem[R31 + 0x20, el]:u64
0002c9dc: R29 := mem[R31, el]:u64
0002c9e0: R30 := mem[R31 + 8, el]:u64
0002c9e3: R31 := R31 + 0x40
0002c9e8: call R30 with noreturn

0003b0f1: sub ntlm_request(ntlm_request_result)
0003b41e: ntlm_request_result :: out u32 = low:32[R0]

0001c423:
0001c42a: #11176 := R31 - 0x50
0001c42f: mem := mem with [#11176, el]:u64 <- R29
0001c434: mem := mem with [#11176 + 8, el]:u64 <- R30
0001c438: R31 := #11176
0001c43f: R29 := R31
0001c447: #11181 := R31 + 0x20
0001c44c: mem := mem with [#11181, el]:u64 <- R21
0001c451: mem := mem with [#11181 + 8, el]:u64 <- R22
0001c459: R22 := R0
0001c461: #11189 := R31 + 0x10
0001c466: mem := mem with [#11189, el]:u64 <- R19
0001c46b: mem := mem with [#11189 + 8, el]:u64 <- R20
0001c473: R19 := R1
0001c47b: #11197 := R31 + 0x30
0001c480: mem := mem with [#11197, el]:u64 <- R23
0001c485: mem := mem with [#11197 + 8, el]:u64 <- R24
0001c48c: R23 := R1 + 0x64
0001c494: #11202 := R31 + 0x40
0001c499: mem := mem with [#11202, el]:u64 <- R25
0001c49e: mem := mem with [#11202 + 8, el]:u64 <- R26
0001c4a5: R25 := R1 + 0x32
0001c4ad: R0 := R25
0001c4b5: mem := mem with [R22, el]:u64 <- 0
0001c4ba: R30 := 0x6264
0001c4bc: call @strlen with return %0001c4be

0001c4be:
0001c4c4: R20 := R0
0001c4cc: R0 := R23
0001c4d1: R30 := 0x6270
0001c4d3: call @strlen with return %0001c4d5

0001c4d5:
0001c4d9: R1 := 0x27000
0001c4e2: R26 := mem[R19 + 0x138, el]:u32
0001c4ea: R21 := R0
0001c4f2: R1 := mem[R1 + 0xF78, el]:u64
0001c4fb: R0 := mem[R1, el]:u32
0001c507: #11219 := ~31:0[R26] = 0
0001c501: when #11219 goto %0001c4ff
0003b0f2: goto %0002c94f

0002c94f:
0002c956: R1 := mem[R19 + 0x12C, el]:u32
0002c961: #19679 := 31:0[R1] = 0
0002c95b: when #19679 goto %0001c745
0003b0f3: goto %0002c964

0001c745:
0001c74c: R1 := mem[R19 + 0x130, el]:u32
0001c753: #11326 := 0xFFFFFFFFFFFFFFFE + extend:64[31:0[R1]]
0001c757: NF := 63:63[#11326]
0001c75a: VF := 31:31[R1] & ~63:63[#11326]
0001c75d: ZF := #11326 = 0
0001c760: CF := 31:31[R1] | 31:31[R1] & ~63:63[#11326] | ~63:63[#11326]
0001c76f: #11328 := ZF
0001c769: when #11328 goto %0001c767
0003b0f4: goto %0001e4a4

0001c767:
0001c776: R26 := 0xB207
0001c77d: R26 := high:32[R26].extend:64[31:0[R26]] & 0xFFFFFFFF0000FFFF |
          0xA2080000
0001c781: goto %0001c4ff

0001e4a4:
0001e4ab: R2 := mem[R19 + 0x134, el]:u32
0001e4b6: #12528 := ~31:0[R1] = 0
0001e4b0: when #12528 goto %0001c783
0003b0f5: goto %0001e4b9

0001c783:
0001c788: #11330 := extend:64[31:0[R2]]
0001c78c: NF := 63:63[#11330]
0001c78f: VF := 31:31[R2] & ~63:63[#11330]
0001c792: ZF := #11330 = 0
0001c795: CF := 31:31[R2] | 31:31[R2] & ~63:63[#11330] | ~63:63[#11330]
0001c79f: R26 := 0xB207
0001c7a6: R1 := 0xB205
0001c7be: #11332 := ~ZF <> 0
0001c7bf: goto %0001c7b6

0001c7b6:
0001c7b8: when #11332 goto %0001c7af
0001c7b9: goto %0001c7b3

0001c7b3:
0001c7b4: R26 := 31:0[R1]
0001c7bb: goto %0001c7b7

0001c7af:
0001c7b0: R26 := 31:0[R26]
0001c7ba: goto %0001c7b7

0001c7b7:
0001c7c4: goto %0001c4ff

0001e4b9:
0001e4be: R26 := 0xB206
0001e4c9: #12529 := ~31:0[R2] = 0
0001e4c3: when #12529 goto %0001c4ff
0003b0f6: goto %0001e4cc

0001e4cc:
0001e4d5: #12530 := 31:0[R0] = 0
0001e4cf: when #12530 goto %0001c6fb
0003b0f7: goto %0001e4d8

0001e4d8:
0001e4dc: R1 := 0x11000
0001e4e3: R1 := R1 + 0x700
0001e4ea: R0 := 1
0001e4ef: R30 := 0x6398
0001e4f1: call @__printf_chk with return %0001e4f3

0001e4f3:
0001e4f9: R0 := R19
0001e4fe: R30 := 0x63A0
0001e501: call @dump_auth with return %0002c944

0002c944:
0002c949: R0 := 0
0002c94d: goto %0001c6fb

0002c964:
0002c969: R26 := 0xB205
0002c970: R26 := high:32[R26].extend:64[31:0[R26]] & 0xFFFFFFFF0000FFFF |
          0xA2080000
0003b0f8: goto %0001c4ff

0001c4ff:
0001c513: #11220 := ~31:0[R0] = 0
0001c50d: when #11220 goto %0001c50b
0003b0f9: goto %0001c59b

0001c50b:
0001c519: R1 := 0x11000
0001c520: R0 := 1
0001c527: R1 := R1 + 0x728
0001c52c: R30 := 0x63B8
0001c52e: call @__printf_chk with return %0001c530

0001c530:
0001c536: R2 := R25
0001c53c: R1 := 0x11000
0001c543: R0 := 1
0001c54a: R1 := R1 + 0x738
0001c54f: R30 := 0x63CC
0001c551: call @__printf_chk with return %0001c553

0001c553:
0001c559: R2 := R23
0001c55f: R1 := 0x11000
0001c566: R0 := 1
0001c56d: R1 := R1 + 0x748
0001c572: R30 := 0x63E0
0001c574: call @__printf_chk with return %0001c576

0001c576:
0001c57d: R2 := 31:0[R26]
0001c583: R1 := 0x11000
0001c58a: R0 := 1
0001c591: R1 := R1 + 0x758
0001c596: R30 := 0x63F4
0001c598: call @__printf_chk with return %0001c59a

0001c59a:
0001c59d: goto %0001c59b

0001c59b:
0001c5a2: R0 := 0x400
0001c5a7: R30 := 0x62A4
0001c5a9: call @new with return %0001c5ab

0001c5ab:
0001c5af: R6 := 0x544E
0001c5b7: R19 := R0
0001c5be: R6 := R6 & 0xFFFFFFFF0000FFFF | 0x4D4C0000
0001c5c6: R4 := extend:64[31:0[R21]] + 0x20
0001c5ce: R2 := 31:0[R20] & 0xFFFF
0001c5d6: R1 := 31:0[R21] & 0xFFFF
0001c5dd: R6 := R6 & 0xFFFF0000FFFFFFFF | 0x535300000000
0001c5e4: R5 := 1
0001c5eb: R6 := R6 & 0xFFFFFFFFFFFF | 0x50000000000000
0001c5f2: R3 := 0x20
0001c5fa: mem := mem with [R19, el]:u64 <- R6
0001c602: R0 := R23
0001c60a: #11286 := R19 + 8
0001c60f: mem := mem with [#11286, el]:u32 <- 31:0[R5]
0001c614: mem := mem with [#11286 + 4, el]:u32 <- 31:0[R26]
0001c61b: R24 := extend:64[31:0[R21]]
0001c623: mem := mem with [R19 + 0x10, el]:u16 <- low:16[31:0[R2]]
0001c62b: mem := mem with [R19 + 0x12, el]:u16 <- low:16[31:0[R2]]
0001c633: mem := mem with [R19 + 0x14, el]:u32 <- 31:0[R4]
0001c63b: mem := mem with [R19 + 0x18, el]:u16 <- low:16[31:0[R1]]
0001c643: mem := mem with [R19 + 0x1A, el]:u16 <- low:16[31:0[R1]]
0001c64b: mem := mem with [R19 + 0x1C, el]:u32 <- 31:0[R3]
0001c650: R30 := 0x62F8
0001c652: call @strdup with return %0001c654

0001c654:
0001c657: R30 := 0x62FC
0001c659: call @uppercase with return %0001c65b

0001c65b:
0001c661: R1 := R0
0001c669: R2 := R24
0001c671: R23 := R0
0001c678: R0 := R19 + 0x20
0001c67d: R30 := 0x6310
0001c67f: call @memcpy with return %0001c681

0001c681:
0001c687: R0 := R23
0001c68c: R30 := 0x6318
0001c68e: call @free with return %0001c690

0001c690:
0001c696: R0 := R25
0001c69b: R30 := 0x6320
0001c69d: call @strdup with return %0001c69f

0001c69f:
0001c6a2: R30 := 0x6324
0001c6a4: call @uppercase with return %0001c6a6

0001c6a6:
0001c6ac: R1 := R0
0001c6b3: R2 := extend:64[31:0[R20]]
0001c6bb: R23 := R0
0001c6c2: R0 := R24 + 0x20
0001c6ca: R20 := extend:64[31:0[R20]] + 0x20
0001c6d2: R0 := R19 + R0
0001c6d7: R30 := 0x6340
0001c6d9: call @memcpy with return %0001c6db

0001c6db:
0001c6e1: R0 := R23
0001c6e6: R30 := 0x6348
0001c6e8: call @free with return %0001c6ea

0001c6ea:
0001c6f1: R0 := 31:0[R20] + 31:0[R21]
0001c6f9: mem := mem with [R22, el]:u64 <- R19
0003b0fa: goto %0001c6fb

0001c6fb:
0001c702: R19 := mem[R31 + 0x10, el]:u64
0001c706: R20 := mem[R31 + 0x18, el]:u64
0001c70f: R21 := mem[R31 + 0x20, el]:u64
0001c713: R22 := mem[R31 + 0x28, el]:u64
0001c71c: R23 := mem[R31 + 0x30, el]:u64
0001c720: R24 := mem[R31 + 0x38, el]:u64
0001c729: R25 := mem[R31 + 0x40, el]:u64
0001c72d: R26 := mem[R31 + 0x48, el]:u64
0001c737: R29 := mem[R31, el]:u64
0001c73b: R30 := mem[R31 + 8, el]:u64
0001c73e: R31 := R31 + 0x50
0001c743: call R30 with noreturn

0003b0fb: sub ntlm_response(ntlm_response_result)
0003b41f: ntlm_response_result :: out u32 = low:32[R0]

0001c7c6:
0001c7cd: #11336 := R31 - 0x1C0
0001c7d2: mem := mem with [#11336, el]:u64 <- R29
0001c7d7: mem := mem with [#11336 + 8, el]:u64 <- R30
0001c7db: R31 := #11336
0001c7e1: R5 := 0x27000
0001c7e8: R29 := R31
0001c7f0: #11341 := R31 + 0x30
0001c7f5: mem := mem with [#11341, el]:u64 <- R23
0001c7fa: mem := mem with [#11341 + 8, el]:u64 <- R24
0001c800: R23 := 0x27000
0001c808: R4 := mem[R23 + 0xF78, el]:u64
0001c810: mem := mem with [R31 + 0x78, el]:u64 <- R0
0001c818: R5 := mem[R5 + 0xFB8, el]:u64
0001c820: #11348 := R31 + 0x10
0001c825: mem := mem with [#11348, el]:u64 <- R19
0001c82a: mem := mem with [#11348 + 8, el]:u64 <- R20
0001c833: R4 := mem[R4, el]:u32
0001c83b: R0 := mem[R5, el]:u64
0001c843: mem := mem with [R31 + 0x1B8, el]:u64 <- R0
0001c849: R0 := 0
0001c851: #11355 := R31 + 0x20
0001c856: mem := mem with [#11355, el]:u64 <- R21
0001c85b: mem := mem with [#11355 + 8, el]:u64 <- R22
0001c863: R19 := R1
0001c86b: #11363 := R31 + 0x40
0001c870: mem := mem with [#11363, el]:u64 <- R25
0001c875: mem := mem with [#11363 + 8, el]:u64 <- R26
0001c87d: R20 := R3
0001c886: R25 := 31:0[R2]
0001c88e: #11374 := R31 + 0x50
0001c893: mem := mem with [#11374, el]:u64 <- R27
0001c898: mem := mem with [#11374 + 8, el]:u64 <- R28
0001c8a4: #11376 := ~31:0[R4] = 0
0001c89e: when #11376 goto %0001c89c
0003b0fc: goto %0001c944

0001c89c:
0001c8aa: R1 := 0x11000
0001c8b1: R0 := 1
0001c8b8: R1 := R1 + 0x770
0001c8bd: R30 := 0x6E9C
0001c8bf: call @__printf_chk with return %0001c8c1

0001c8c1:
0001c8c6: R0 := R19 + 0x18
0001c8cd: R2 := 7
0001c8d3: R1 := 8
0001c8d8: R30 := 0x6EAC
0001c8da: call @printmem with return %0001c8dc

0001c8dc:
0001c8e3: R3 := 31:0[R25]
0001c8eb: R2 := R0
0001c8f1: R1 := 0x11000
0001c8f8: R1 := R1 + 0x788
0001c900: R21 := R0
0001c907: R0 := 1
0001c90c: R30 := 0x6EC8
0001c90e: call @__printf_chk with return %0001c910

0001c910:
0001c916: R0 := R21
0001c91b: R30 := 0x6ED0
0001c91d: call @free with return %0001c91f

0001c91f:
0001c926: R2 := mem[R19 + 0x14, el]:u32
0001c92c: R1 := 0x11000
0001c933: R0 := 1
0001c93a: R1 := R1 + 0x758
0001c93f: R30 := 0x6EE4
0001c941: call @__printf_chk with return %0001c943

0001c943:
0001c946: goto %0001c944

0001c944:
0001c94c: #11390 := 0xFFFFFFFFFFFFFFD0 + extend:64[31:0[R25]]
0001c950: NF := 63:63[#11390]
0001c953: VF := 31:31[R25] & ~63:63[#11390]
0001c956: ZF := #11390 = 0
0001c959: CF := 31:31[R25] | 31:31[R25] & ~63:63[#11390] | ~63:63[#11390]
0001c96a: #11392 := (NF = VF & ~ZF) <> 0
0001c964: when #11392 goto %0001c962
0003b0fd: goto %0001e48f

0001c962:
0001c972: R1 := mem[R23 + 0xF78, el]:u64
0001c979: R22 := 0
0001c982: R2 := mem[R19 + 0x2C, el]:u16
0001c98a: mem := mem with [R31 + 0x80, el]:u32 <- 31:0[R2]
0001c992: R0 := extend:64[31:0[R2]] + 3
0001c99b: R24 := 31:0[R2]
0001c9a3: #11401 := 1 + extend:64[~31:0[R25]] + extend:64[31:0[R0]]
0001c9a7: NF := 63:63[#11401]
0001c9aa: VF := 31:31[~31:0[R25]] & 31:31[R0] & ~63:63[#11401] |
          ~31:31[~31:0[R25]] & ~31:31[R0] & 63:63[#11401]
0001c9ad: ZF := #11401 = 0
0001c9b0: CF := 31:31[~31:0[R25]] & 31:31[R0] | 31:31[R0] & ~63:63[#11401] |
          31:31[~31:0[R25]] & ~63:63[#11401]
0001c9bc: R0 := 31:0[R2]
0001c9c5: R2 := mem[R1, el]:u32
0001c9d2: #11407 := NF = VF
0001c9cc: when #11407 goto %0001c9ca
0003b0fe: goto %0001e463

0001c9ca:
0001c9d9: R27 := 0xFFFF
0001c9de: goto %0001c9dc

0001e463:
0001e467: R26 := 0x13000
0001e46e: R1 := R26 + 0x298
0001e474: R27 := 0x11000
0001e47c: mem := mem with [R31 + 0x70, el]:u64 <- R1
0001e483: R1 := R27 + 0x7C8
0001e48b: mem := mem with [R31 + 0x88, el]:u64 <- R1
0003b0ff: goto %0001dafa

0001dafa:
0001db09: R21 := R24 & 0xFFFF
0001db11: R26 := R19 + pad:64[low:16[31:0[R24]]]
0001db19: #12202 := R21
0001db1f: R27 := mem[R19 + #12202, el]:u16
0001db2a: #12203 := 31:0[R27] = 0
0001db24: when #12203 goto %0001d434
0003b100: goto %0001db2d

0001d434:
0001d43d: #11870 := 31:0[R22] = 0
0001d437: when #11870 goto %0001d36b
0003b101: goto %0001d440

0001d440:
0001d446: R22 := extend:64[31:0[R22]] + 4
0001d44e: R22 := 31:0[R22] & 0xFFFF
0001d459: #11893 := 31:0[R2] = 0
0001d453: when #11893 goto %0001ca22
0003b102: goto %0001c9e1

0001db2d:
0001db34: R28 := mem[R26 + 2, el]:u16
0001db3c: R0 := extend:64[31:0[R0]] + 4
0001db45: R0 := 31:0[R0] + 31:0[R28]
0001db4d: #12211 := 1 + extend:64[~31:0[R25]] + extend:64[31:0[R0]]
0001db51: NF := 63:63[#12211]
0001db54: VF := 31:31[~31:0[R25]] & 31:31[R0] & ~63:63[#12211] |
          ~31:31[~31:0[R25]] & ~31:31[R0] & 63:63[#12211]
0001db57: ZF := #12211 = 0
0001db5a: CF := 31:31[~31:0[R25]] & 31:31[R0] | 31:31[R0] & ~63:63[#12211] |
          31:31[~31:0[R25]] & ~63:63[#12211]
0001db6a: #12213 := (NF = VF & ~ZF) <> 0
0001db64: when #12213 goto %0001c9dc
0003b103: goto %0001db6d

0001db6d:
0001db76: #12214 := 31:0[R2] = 0
0001db70: when #12214 goto %0001daa4
0003b104: goto %0001db79

0001db79:
0001db7e: #12215 := 0xFFFFFFFFFFFFFFFD + extend:64[31:0[R27]]
0001db82: NF := 63:63[#12215]
0001db85: VF := 31:31[R27] & ~63:63[#12215]
0001db88: ZF := #12215 = 0
0001db8b: CF := 31:31[R27] | 31:31[R27] & ~63:63[#12215] | ~63:63[#12215]
0001db9a: #12217 := ZF
0001db94: when #12217 goto %0001db92
0003b105: goto %0001dbff

0001db92:
0001dba2: R1 := mem[R31 + 0x88, el]:u64
0001dba9: R0 := 1
0001dbae: R30 := 0x6E48
0001dbb0: call @__printf_chk with return %0001dbb2

0001dbb2:
0001dbb4: goto %0001d9f2

0001dbff:
0001dc09: #12226 := (CF & ~ZF) <> 0
0001dc03: when #12226 goto %0001d9b3
0003b106: goto %0001dc0c

0001d9b3:
0001d9b8: #12096 := 0xFFFFFFFFFFFFFFFC + extend:64[31:0[R27]]
0001d9bc: NF := 63:63[#12096]
0001d9bf: VF := 31:31[R27] & ~63:63[#12096]
0001d9c2: ZF := #12096 = 0
0001d9c5: CF := 31:31[R27] | 31:31[R27] & ~63:63[#12096] | ~63:63[#12096]
0001d9d4: #12098 := ZF
0001d9ce: when #12098 goto %0001d9cc
0003b107: goto %0001e367

0001d9cc:
0001d9da: R1 := 0x11000
0001d9e1: R0 := 1
0001d9e8: R1 := R1 + 0x7D8
0001d9ed: R30 := 0x6E88
0001d9ef: call @__printf_chk with return %0001d9f1

0001d9f1:
0001d9f4: goto %0001d9f2

0001e367:
0001e36c: #12502 := 0xFFFFFFFFFFFFFFFB + extend:64[31:0[R27]]
0001e370: NF := 63:63[#12502]
0001e373: VF := 31:31[R27] & ~63:63[#12502]
0001e376: ZF := #12502 = 0
0001e379: CF := 31:31[R27] | 31:31[R27] & ~63:63[#12502] | ~63:63[#12502]
0001e387: #12504 := ~ZF <> 0
0001e381: when #12504 goto %0001dbb6
0003b108: goto %0001e38a

0001e38a:
0001e38e: R1 := 0x11000
0001e395: R0 := 1
0001e39c: R1 := R1 + 0x7E8
0001e3a1: R30 := 0x6E10
0001e3a3: call @__printf_chk with return %0001e3a5

0001e3a5:
0001e3a7: goto %0001d9f2

0001dc0c:
0001dc11: #12227 := 0xFFFFFFFFFFFFFFFF + extend:64[31:0[R27]]
0001dc15: NF := 63:63[#12227]
0001dc18: VF := 31:31[R27] & ~63:63[#12227]
0001dc1b: ZF := #12227 = 0
0001dc1e: CF := 31:31[R27] | 31:31[R27] & ~63:63[#12227] | ~63:63[#12227]
0001dc2c: #12229 := ZF
0001dc26: when #12229 goto %0001dbde
0003b109: goto %0001dc2f

0001dbde:
0001dbe5: R0 := 31:0[R27]
0001dbeb: R1 := 0x11000
0001dbf2: R1 := R1 + 0x7A8
0001dbf7: R30 := 0x6E74
0001dbf9: call @__printf_chk with return %0001dbfb

0001dbfb:
0001dbfd: goto %0001d9f2

0001dc2f:
0001dc34: #12230 := 0xFFFFFFFFFFFFFFFE + extend:64[31:0[R27]]
0001dc38: NF := 63:63[#12230]
0001dc3b: VF := 31:31[R27] & ~63:63[#12230]
0001dc3e: ZF := #12230 = 0
0001dc41: CF := 31:31[R27] | 31:31[R27] & ~63:63[#12230] | ~63:63[#12230]
0001dc4f: #12232 := ~ZF <> 0
0001dc49: when #12232 goto %0001dbb6
0003b10a: goto %0001dc52

0001dbb6:
0001dbbd: R2 := 31:0[R27]
0001dbc3: R1 := 0x11000
0001dbca: R0 := 1
0001dbd1: R1 := R1 + 0x7F8
0001dbd6: R30 := 0x6E60
0001dbd8: call @__printf_chk with return %0001dbda

0001dbda:
0001dbdc: goto %0001d9f2

0001dc52:
0001dc56: R1 := 0x11000
0001dc5d: R0 := 1
0001dc64: R1 := R1 + 0x7B8
0001dc69: R30 := 0x679C
0001dc6b: call @__printf_chk with return %0001dc6d

0001dc6d:
0003b10b: goto %0001d9f2

0001d9f2:
0001d9fb: R0 := extend:64[31:0[R28]] + 1
0001da02: R1 := R21 + 4
0001da0a: mem := mem with [R31 + 0x68, el]:u64 <- R1
0001da12: R0 := extend:64[31:1[R0]]
0001da1a: R0 := extend:64[31:0[R0]] + 1
0001da21: R0 := extend:64[31:0[R0]]
0001da26: R30 := 0x67BC
0001da28: call @new with return %0001da2a

0001da2a:
0001da30: #12104 := extend:64[~(31:0[R28] ~>> 1)] + 1
0001da34: NF := 63:63[#12104]
0001da37: VF := ~31:31[~(31:0[R28] ~>> 1)] & 63:63[#12104]
0001da3a: ZF := #12104 = 0
0001da3d: CF := 31:31[~(31:0[R28] ~>> 1)] & ~63:63[#12104]
0001da48: R2 := R0
0001da50: R7 := extend:64[31:1[R28]]
0001da5c: #12110 := ZF
0001da56: when #12110 goto %0001da54
0003b10c: goto %0001dc6f

0001dc6f:
0001dc75: R5 := R21 + (extend:64[31:0[R7]] << 1)
0001dc7d: R1 := R0 + extend:64[31:0[R7]]
0001dc84: R5 := R5 + 3
0001dc8c: R5 := R19 + R5
0001dc94: #12245 := 1 + ~R5 + R0
0001dc98: NF := 63:63[#12245]
0001dc9b: VF := 63:63[R0] & 63:63[~R5] & ~63:63[#12245] | ~63:63[R0] &
          ~63:63[~R5] & 63:63[#12245]
0001dc9e: ZF := #12245 = 0
0001dca1: CF := 63:63[R0] & 63:63[~R5] | 63:63[~R5] & ~63:63[#12245] |
          63:63[R0] & ~63:63[#12245]
0001dcab: R0 := mem[R31 + 0x68, el]:u64
0001dcb3: R21 := R19 + R0
0001dcbb: R0 := low:32[extend:64[31:0[R7]] - 1]
0001dce7: #12254 := ~CF <> 0
0001dce8: goto %0001dcdf

0001dcdf:
0001dce1: when #12254 goto %0001dcc2
0001dce2: goto %0001dcd3

0001dcd3:
0001dcd4: NF := 0
0001dcd7: ZF := 0
0001dcda: CF := 1
0001dcdd: VF := 0
0001dce4: goto %0001dce0

0001dcc2:
0001dcc3: #12255 := ~R1
0001dcc8: NF := 63:63[R21 + #12255 + 1]
0001dccb: VF := 63:63[R21] & 63:63[#12255] & ~63:63[R21 + #12255 + 1] |
          ~63:63[R21] & ~63:63[#12255] & 63:63[R21 + #12255 + 1]
0001dcce: ZF := R21 + #12255 + 1 = 0
0001dcd1: CF := 63:63[R21] & 63:63[#12255] | 63:63[#12255] & ~63:63[R21 +
          #12255 + 1] | 63:63[R21] & ~63:63[R21 + #12255 + 1]
0001dce3: goto %0001dce0

0001dce0:
0001dd0f: #12257 := CF
0001dd10: goto %0001dd07

0001dd07:
0001dd09: when #12257 goto %0001dcef
0001dd0a: goto %0001dcfb

0001dcfb:
0001dcfc: NF := 0
0001dcff: ZF := 0
0001dd02: CF := 0
0001dd05: VF := 0
0001dd0c: goto %0001dd08

0001dcef:
0001dcf0: NF := 63:63[extend:64[31:0[R0]] - 0xF]
0001dcf3: VF := 31:31[R0] & ~63:63[extend:64[31:0[R0]] - 0xF]
0001dcf6: ZF := extend:64[31:0[R0]] - 0xF = 0
0001dcf9: CF := 31:31[R0] | ~63:63[extend:64[31:0[R0]] - 0xF] | 31:31[R0] &
          ~63:63[extend:64[31:0[R0]] - 0xF]
0001dd0b: goto %0001dd08

0001dd08:
0001dd1e: #12260 := (~CF | ZF) <> 0
0001dd18: when #12260 goto %0001dd16
0003b10d: goto %0001dd82

0001dd16:
0001dd25: R6 := R26 + 4
0001dd2b: R0 := 0
0003b10e: goto %0001dd2f

0001dd2f:
0001dd34: R1 := R0 << 1
0001dd3c: #12263 := R1
0001dd42: R1 := pad:32[mem[R6 + #12263]]
0001dd4a: #12264 := R0
0001dd4f: mem := mem with [R2 + #12264] <- low:8[31:0[R1]]
0001dd56: R0 := R0 + 1
0001dd5e: #12268 := 1 + extend:64[~31:0[R0]] + extend:64[31:0[R7]]
0001dd62: NF := 63:63[#12268]
0001dd65: VF := 31:31[~31:0[R0]] & 31:31[R7] & ~63:63[#12268] |
          ~31:31[~31:0[R0]] & ~31:31[R7] & 63:63[#12268]
0001dd68: ZF := #12268 = 0
0001dd6b: CF := 31:31[~31:0[R0]] & 31:31[R7] | 31:31[R7] & ~63:63[#12268] |
          31:31[~31:0[R0]] & ~63:63[#12268]
0001dd7b: #12270 := (NF = VF & ~ZF) <> 0
0001dd75: when #12270 goto %0001dd2f
0003b10f: goto %0001dd7e

0001dd7e:
0001dd80: goto %0001da54

0001dd82:
0001dd88: R5 := pad:64[31:4[R0]]
0001dd90: R1 := R2
0001dd98: R6 := R21
0001dda0: R5 := R2 + (pad:64[31:0[R5]] << 4)
0003b110: goto %0001dda2

0001dda2:
0001ddaa: #12282 := mem[R6]
0001ddaf: #12284 := mem[R6 + 1]
0001ddb4: #12286 := #12282.mem[R6 + 2]
0001ddb9: #12288 := #12284.mem[R6 + 3]
0001ddbe: #12290 := #12286.mem[R6 + 4]
0001ddc3: #12292 := #12288.mem[R6 + 5]
0001ddc8: #12294 := #12290.mem[R6 + 6]
0001ddcd: #12296 := #12292.mem[R6 + 7]
0001ddd2: #12298 := #12294.mem[R6 + 8]
0001ddd7: #12300 := #12296.mem[R6 + 9]
0001dddc: #12302 := #12298.mem[R6 + 0xA]
0001dde1: #12304 := #12300.mem[R6 + 0xB]
0001dde6: #12306 := #12302.mem[R6 + 0xC]
0001ddeb: #12308 := #12304.mem[R6 + 0xD]
0001ddf0: #12310 := #12306.mem[R6 + 0xE]
0001ddf5: #12312 := #12308.mem[R6 + 0xF]
0001ddfa: #12314 := #12310.mem[R6 + 0x10]
0001ddff: #12316 := #12312.mem[R6 + 0x11]
0001de04: #12318 := #12314.mem[R6 + 0x12]
0001de09: #12320 := #12316.mem[R6 + 0x13]
0001de0e: #12322 := #12318.mem[R6 + 0x14]
0001de13: #12324 := #12320.mem[R6 + 0x15]
0001de18: #12326 := #12322.mem[R6 + 0x16]
0001de1d: #12328 := #12324.mem[R6 + 0x17]
0001de22: #12330 := #12326.mem[R6 + 0x18]
0001de27: #12332 := #12328.mem[R6 + 0x19]
0001de2c: #12334 := #12330.mem[R6 + 0x1A]
0001de31: #12336 := #12332.mem[R6 + 0x1B]
0001de36: #12338 := #12334.mem[R6 + 0x1C]
0001de3b: #12340 := #12336.mem[R6 + 0x1D]
0001de40: #12342 := #12338.mem[R6 + 0x1E]
0001de45: #12344 := #12340.mem[R6 + 0x1F]
0001de4a: V0 := #12342
0001de4e: V1 := #12344
0001de51: R6 := R6 + 0x20
0001de5a: mem := mem with [R1, el]:u128 <- V0
0001de5d: R1 := R1 + 0x10
0001de65: #12348 := 1 + ~R5 + R1
0001de69: NF := 63:63[#12348]
0001de6c: VF := 63:63[R1] & 63:63[~R5] & ~63:63[#12348] | ~63:63[R1] &
          ~63:63[~R5] & 63:63[#12348]
0001de6f: ZF := #12348 = 0
0001de72: CF := 63:63[R1] & 63:63[~R5] | 63:63[~R5] & ~63:63[#12348] |
          63:63[R1] & ~63:63[#12348]
0001de7f: #12353 := ~ZF <> 0
0001de79: when #12353 goto %0001dda2
0003b111: goto %0001de82

0001de82:
0001de88: R0 := 31:0[R0] & 0xFFFFFFF0
0001de90: R6 := extend:64[31:0[R0]] + 1
0001de98: R1 := 31:0[R0] << 0x21
0001dea0: #12383 := 1 + extend:64[~31:0[R7]] + extend:64[31:0[R6]]
0001dea4: NF := 63:63[#12383]
0001dea7: VF := 31:31[~31:0[R7]] & 31:31[R6] & ~63:63[#12383] |
          ~31:31[~31:0[R7]] & ~31:31[R6] & 63:63[#12383]
0001deaa: ZF := #12383 = 0
0001dead: CF := 31:31[~31:0[R7]] & 31:31[R6] | 31:31[R6] & ~63:63[#12383] |
          31:31[~31:0[R7]] & ~63:63[#12383]
0001deb8: #12384 := extend:64[31:0[R1]]
0001debe: R5 := pad:32[mem[R21 + #12384]]
0001dec6: #12385 := pad:64[31:0[R0]]
0001decb: mem := mem with [R2 + #12385] <- low:8[31:0[R5]]
0001ded7: #12387 := NF = VF
0001ded1: when #12387 goto %0001da54
0003b112: goto %0001deda

0001deda:
0001dee0: R5 := extend:64[31:0[R1]] + 2
0001dee8: R8 := extend:64[31:0[R0]] + 2
0001def0: #12391 := 1 + extend:64[~31:0[R7]] + extend:64[31:0[R8]]
0001def4: NF := 63:63[#12391]
0001def7: VF := 31:31[~31:0[R7]] & 31:31[R8] & ~63:63[#12391] |
          ~31:31[~31:0[R7]] & ~31:31[R8] & 63:63[#12391]
0001defa: ZF := #12391 = 0
0001defd: CF := 31:31[~31:0[R7]] & 31:31[R8] | 31:31[R8] & ~63:63[#12391] |
          31:31[~31:0[R7]] & ~63:63[#12391]
0001df08: #12392 := extend:64[31:0[R5]]
0001df0e: R5 := pad:32[mem[R21 + #12392]]
0001df16: #12393 := extend:64[31:0[R6]]
0001df1b: mem := mem with [R2 + #12393] <- low:8[31:0[R5]]
0001df27: #12395 := NF = VF
0001df21: when #12395 goto %0001da54
0003b113: goto %0001df2a

0001df2a:
0001df30: R5 := extend:64[31:0[R1]] + 4
0001df38: R6 := extend:64[31:0[R0]] + 3
0001df40: #12399 := 1 + extend:64[~31:0[R7]] + extend:64[31:0[R6]]
0001df44: NF := 63:63[#12399]
0001df47: VF := 31:31[~31:0[R7]] & 31:31[R6] & ~63:63[#12399] |
          ~31:31[~31:0[R7]] & ~31:31[R6] & 63:63[#12399]
0001df4a: ZF := #12399 = 0
0001df4d: CF := 31:31[~31:0[R7]] & 31:31[R6] | 31:31[R6] & ~63:63[#12399] |
          31:31[~31:0[R7]] & ~63:63[#12399]
0001df58: #12400 := extend:64[31:0[R5]]
0001df5e: R5 := pad:32[mem[R21 + #12400]]
0001df66: #12401 := extend:64[31:0[R8]]
0001df6b: mem := mem with [R2 + #12401] <- low:8[31:0[R5]]
0001df77: #12403 := NF = VF
0001df71: when #12403 goto %0001da54
0003b114: goto %0001df7a

0001df7a:
0001df80: R5 := extend:64[31:0[R1]] + 6
0001df88: R8 := extend:64[31:0[R0]] + 4
0001df90: #12407 := 1 + extend:64[~31:0[R8]] + extend:64[31:0[R7]]
0001df94: NF := 63:63[#12407]
0001df97: VF := 31:31[~31:0[R8]] & 31:31[R7] & ~63:63[#12407] |
          ~31:31[~31:0[R8]] & ~31:31[R7] & 63:63[#12407]
0001df9a: ZF := #12407 = 0
0001df9d: CF := 31:31[~31:0[R8]] & 31:31[R7] | 31:31[R7] & ~63:63[#12407] |
          31:31[~31:0[R8]] & ~63:63[#12407]
0001dfa8: #12408 := extend:64[31:0[R5]]
0001dfae: R5 := pad:32[mem[R21 + #12408]]
0001dfb6: #12409 := extend:64[31:0[R6]]
0001dfbb: mem := mem with [R2 + #12409] <- low:8[31:0[R5]]
0001dfc8: #12411 := (NF <> VF | ZF) <> 0
0001dfc2: when #12411 goto %0001da54
0003b115: goto %0001dfcb

0001dfcb:
0001dfd1: R5 := extend:64[31:0[R1]] + 8
0001dfd9: R6 := extend:64[31:0[R0]] + 5
0001dfe1: #12415 := 1 + extend:64[~31:0[R7]] + extend:64[31:0[R6]]
0001dfe5: NF := 63:63[#12415]
0001dfe8: VF := 31:31[~31:0[R7]] & 31:31[R6] & ~63:63[#12415] |
          ~31:31[~31:0[R7]] & ~31:31[R6] & 63:63[#12415]
0001dfeb: ZF := #12415 = 0
0001dfee: CF := 31:31[~31:0[R7]] & 31:31[R6] | 31:31[R6] & ~63:63[#12415] |
          31:31[~31:0[R7]] & ~63:63[#12415]
0001dff9: #12416 := extend:64[31:0[R5]]
0001dfff: R5 := pad:32[mem[R21 + #12416]]
0001e007: #12417 := extend:64[31:0[R8]]
0001e00c: mem := mem with [R2 + #12417] <- low:8[31:0[R5]]
0001e018: #12419 := NF = VF
0001e012: when #12419 goto %0001da54
0003b116: goto %0001e01b

0001e01b:
0001e021: R5 := extend:64[31:0[R1]] + 0xA
0001e029: R8 := extend:64[31:0[R0]] + 6
0001e031: #12423 := 1 + extend:64[~31:0[R7]] + extend:64[31:0[R8]]
0001e035: NF := 63:63[#12423]
0001e038: VF := 31:31[~31:0[R7]] & 31:31[R8] & ~63:63[#12423] |
          ~31:31[~31:0[R7]] & ~31:31[R8] & 63:63[#12423]
0001e03b: ZF := #12423 = 0
0001e03e: CF := 31:31[~31:0[R7]] & 31:31[R8] | 31:31[R8] & ~63:63[#12423] |
          31:31[~31:0[R7]] & ~63:63[#12423]
0001e049: #12424 := extend:64[31:0[R5]]
0001e04f: R5 := pad:32[mem[R21 + #12424]]
0001e057: #12425 := extend:64[31:0[R6]]
0001e05c: mem := mem with [R2 + #12425] <- low:8[31:0[R5]]
0001e068: #12427 := NF = VF
0001e062: when #12427 goto %0001da54
0003b117: goto %0001e06b

0001e06b:
0001e071: R5 := extend:64[31:0[R1]] + 0xC
0001e079: R6 := extend:64[31:0[R0]] + 7
0001e081: #12431 := 1 + extend:64[~31:0[R6]] + extend:64[31:0[R7]]
0001e085: NF := 63:63[#12431]
0001e088: VF := 31:31[~31:0[R6]] & 31:31[R7] & ~63:63[#12431] |
          ~31:31[~31:0[R6]] & ~31:31[R7] & 63:63[#12431]
0001e08b: ZF := #12431 = 0
0001e08e: CF := 31:31[~31:0[R6]] & 31:31[R7] | 31:31[R7] & ~63:63[#12431] |
          31:31[~31:0[R6]] & ~63:63[#12431]
0001e099: #12432 := extend:64[31:0[R5]]
0001e09f: R5 := pad:32[mem[R21 + #12432]]
0001e0a7: #12433 := extend:64[31:0[R8]]
0001e0ac: mem := mem with [R2 + #12433] <- low:8[31:0[R5]]
0001e0b9: #12435 := (NF <> VF | ZF) <> 0
0001e0b3: when #12435 goto %0001da54
0003b118: goto %0001e0bc

0001e0bc:
0001e0c2: R5 := extend:64[31:0[R1]] + 0xE
0001e0ca: R8 := extend:64[31:0[R0]] + 8
0001e0d2: #12439 := 1 + extend:64[~31:0[R8]] + extend:64[31:0[R7]]
0001e0d6: NF := 63:63[#12439]
0001e0d9: VF := 31:31[~31:0[R8]] & 31:31[R7] & ~63:63[#12439] |
          ~31:31[~31:0[R8]] & ~31:31[R7] & 63:63[#12439]
0001e0dc: ZF := #12439 = 0
0001e0df: CF := 31:31[~31:0[R8]] & 31:31[R7] | 31:31[R7] & ~63:63[#12439] |
          31:31[~31:0[R8]] & ~63:63[#12439]
0001e0ea: #12440 := extend:64[31:0[R5]]
0001e0f0: R5 := pad:32[mem[R21 + #12440]]
0001e0f8: #12441 := extend:64[31:0[R6]]
0001e0fd: mem := mem with [R2 + #12441] <- low:8[31:0[R5]]
0001e10a: #12443 := (NF <> VF | ZF) <> 0
0001e104: when #12443 goto %0001da54
0003b119: goto %0001e10d

0001e10d:
0001e113: R5 := extend:64[31:0[R1]] + 0x10
0001e11b: R6 := extend:64[31:0[R0]] + 9
0001e123: #12447 := 1 + extend:64[~31:0[R6]] + extend:64[31:0[R7]]
0001e127: NF := 63:63[#12447]
0001e12a: VF := 31:31[~31:0[R6]] & 31:31[R7] & ~63:63[#12447] |
          ~31:31[~31:0[R6]] & ~31:31[R7] & 63:63[#12447]
0001e12d: ZF := #12447 = 0
0001e130: CF := 31:31[~31:0[R6]] & 31:31[R7] | 31:31[R7] & ~63:63[#12447] |
          31:31[~31:0[R6]] & ~63:63[#12447]
0001e13b: #12448 := extend:64[31:0[R5]]
0001e141: R5 := pad:32[mem[R21 + #12448]]
0001e149: #12449 := extend:64[31:0[R8]]
0001e14e: mem := mem with [R2 + #12449] <- low:8[31:0[R5]]
0001e15b: #12451 := (NF <> VF | ZF) <> 0
0001e155: when #12451 goto %0001da54
0003b11a: goto %0001e15e

0001e15e:
0001e164: R5 := extend:64[31:0[R1]] + 0x12
0001e16c: R8 := extend:64[31:0[R0]] + 0xA
0001e174: #12455 := 1 + extend:64[~31:0[R8]] + extend:64[31:0[R7]]
0001e178: NF := 63:63[#12455]
0001e17b: VF := 31:31[~31:0[R8]] & 31:31[R7] & ~63:63[#12455] |
          ~31:31[~31:0[R8]] & ~31:31[R7] & 63:63[#12455]
0001e17e: ZF := #12455 = 0
0001e181: CF := 31:31[~31:0[R8]] & 31:31[R7] | 31:31[R7] & ~63:63[#12455] |
          31:31[~31:0[R8]] & ~63:63[#12455]
0001e18c: #12456 := extend:64[31:0[R5]]
0001e192: R5 := pad:32[mem[R21 + #12456]]
0001e19a: #12457 := extend:64[31:0[R6]]
0001e19f: mem := mem with [R2 + #12457] <- low:8[31:0[R5]]
0001e1ac: #12459 := (NF <> VF | ZF) <> 0
0001e1a6: when #12459 goto %0001da54
0003b11b: goto %0001e1af

0001e1af:
0001e1b5: R5 := extend:64[31:0[R1]] + 0x14
0001e1bd: R6 := extend:64[31:0[R0]] + 0xB
0001e1c5: #12463 := 1 + extend:64[~31:0[R6]] + extend:64[31:0[R7]]
0001e1c9: NF := 63:63[#12463]
0001e1cc: VF := 31:31[~31:0[R6]] & 31:31[R7] & ~63:63[#12463] |
          ~31:31[~31:0[R6]] & ~31:31[R7] & 63:63[#12463]
0001e1cf: ZF := #12463 = 0
0001e1d2: CF := 31:31[~31:0[R6]] & 31:31[R7] | 31:31[R7] & ~63:63[#12463] |
          31:31[~31:0[R6]] & ~63:63[#12463]
0001e1dd: #12464 := extend:64[31:0[R5]]
0001e1e3: R5 := pad:32[mem[R21 + #12464]]
0001e1eb: #12465 := extend:64[31:0[R8]]
0001e1f0: mem := mem with [R2 + #12465] <- low:8[31:0[R5]]
0001e1fd: #12467 := (NF <> VF | ZF) <> 0
0001e1f7: when #12467 goto %0001da54
0003b11c: goto %0001e200

0001e200:
0001e206: R5 := extend:64[31:0[R1]] + 0x16
0001e20e: R8 := extend:64[31:0[R0]] + 0xC
0001e216: #12471 := 1 + extend:64[~31:0[R8]] + extend:64[31:0[R7]]
0001e21a: NF := 63:63[#12471]
0001e21d: VF := 31:31[~31:0[R8]] & 31:31[R7] & ~63:63[#12471] |
          ~31:31[~31:0[R8]] & ~31:31[R7] & 63:63[#12471]
0001e220: ZF := #12471 = 0
0001e223: CF := 31:31[~31:0[R8]] & 31:31[R7] | 31:31[R7] & ~63:63[#12471] |
          31:31[~31:0[R8]] & ~63:63[#12471]
0001e22e: #12472 := extend:64[31:0[R5]]
0001e234: R5 := pad:32[mem[R21 + #12472]]
0001e23c: #12473 := extend:64[31:0[R6]]
0001e241: mem := mem with [R2 + #12473] <- low:8[31:0[R5]]
0001e24e: #12475 := (NF <> VF | ZF) <> 0
0001e248: when #12475 goto %0001da54
0003b11d: goto %0001e251

0001e251:
0001e257: R5 := extend:64[31:0[R1]] + 0x18
0001e25f: R6 := extend:64[31:0[R0]] + 0xD
0001e267: #12479 := 1 + extend:64[~31:0[R6]] + extend:64[31:0[R7]]
0001e26b: NF := 63:63[#12479]
0001e26e: VF := 31:31[~31:0[R6]] & 31:31[R7] & ~63:63[#12479] |
          ~31:31[~31:0[R6]] & ~31:31[R7] & 63:63[#12479]
0001e271: ZF := #12479 = 0
0001e274: CF := 31:31[~31:0[R6]] & 31:31[R7] | 31:31[R7] & ~63:63[#12479] |
          31:31[~31:0[R6]] & ~63:63[#12479]
0001e27f: #12480 := extend:64[31:0[R5]]
0001e285: R5 := pad:32[mem[R21 + #12480]]
0001e28d: #12481 := extend:64[31:0[R8]]
0001e292: mem := mem with [R2 + #12481] <- low:8[31:0[R5]]
0001e29f: #12483 := (NF <> VF | ZF) <> 0
0001e299: when #12483 goto %0001da54
0003b11e: goto %0001e2a2

0001e2a2:
0001e2a8: R5 := extend:64[31:0[R1]] + 0x1A
0001e2b0: R8 := extend:64[31:0[R0]] + 0xE
0001e2b8: #12487 := 1 + extend:64[~31:0[R8]] + extend:64[31:0[R7]]
0001e2bc: NF := 63:63[#12487]
0001e2bf: VF := 31:31[~31:0[R8]] & 31:31[R7] & ~63:63[#12487] |
          ~31:31[~31:0[R8]] & ~31:31[R7] & 63:63[#12487]
0001e2c2: ZF := #12487 = 0
0001e2c5: CF := 31:31[~31:0[R8]] & 31:31[R7] | 31:31[R7] & ~63:63[#12487] |
          31:31[~31:0[R8]] & ~63:63[#12487]
0001e2d0: #12488 := extend:64[31:0[R5]]
0001e2d6: R5 := pad:32[mem[R21 + #12488]]
0001e2de: #12489 := extend:64[31:0[R6]]
0001e2e3: mem := mem with [R2 + #12489] <- low:8[31:0[R5]]
0001e2f0: #12491 := (NF <> VF | ZF) <> 0
0001e2ea: when #12491 goto %0001da54
0003b11f: goto %0001e2f3

0001e2f3:
0001e2f9: R5 := extend:64[31:0[R1]] + 0x1C
0001e301: R0 := extend:64[31:0[R0]] + 0xF
0001e309: #12495 := 1 + extend:64[~31:0[R0]] + extend:64[31:0[R7]]
0001e30d: NF := 63:63[#12495]
0001e310: VF := 31:31[~31:0[R0]] & 31:31[R7] & ~63:63[#12495] |
          ~31:31[~31:0[R0]] & ~31:31[R7] & 63:63[#12495]
0001e313: ZF := #12495 = 0
0001e316: CF := 31:31[~31:0[R0]] & 31:31[R7] | 31:31[R7] & ~63:63[#12495] |
          31:31[~31:0[R0]] & ~63:63[#12495]
0001e321: #12496 := extend:64[31:0[R5]]
0001e327: R5 := pad:32[mem[R21 + #12496]]
0001e32f: #12497 := extend:64[31:0[R8]]
0001e334: mem := mem with [R2 + #12497] <- low:8[31:0[R5]]
0001e341: #12499 := (NF <> VF | ZF) <> 0
0001e33b: when #12499 goto %0001da54
0003b120: goto %0001e344

0001e344:
0001e34a: R1 := extend:64[31:0[R1]] + 0x1E
0001e352: #12500 := extend:64[31:0[R1]]
0001e358: R1 := pad:32[mem[R21 + #12500]]
0001e360: #12501 := extend:64[31:0[R0]]
0001e365: mem := mem with [R2 + #12501] <- low:8[31:0[R1]]
0003b121: goto %0001da54

0001da54:
0001da64: R1 := mem[R31 + 0x70, el]:u64
0001da6b: R0 := 1
0001da73: mem := mem with [R31 + 0x68, el]:u64 <- R2
0001da78: R30 := 0x69A0
0001da7a: call @__printf_chk with return %0001da7c

0001da7c:
0001da82: R2 := mem[R31 + 0x68, el]:u64
0001da8a: R0 := R2
0001da8f: R30 := 0x69AC
0001da91: call @free with return %0001da93

0001da93:
0001da99: R0 := mem[R23 + 0xF78, el]:u64
0001daa2: R2 := mem[R0, el]:u32
0003b122: goto %0001daa4

0001daa4:
0001daaa: R28 := extend:64[31:0[R28]] + 4
0001dab3: R3 := extend:64[31:0[R24]] + pad:64[low:16[31:0[R28]]]
0001dabc: R22 := extend:64[31:0[R22]] + pad:64[low:16[31:0[R28]]]
0001dac4: R24 := 31:0[R3] & 0xFFFF
0001dacc: R22 := 31:0[R22] & 0xFFFF
0001dad4: R1 := extend:64[31:0[R24]] + 3
0001dadd: R0 := 31:0[R24]
0001dae5: #12174 := 1 + extend:64[~31:0[R25]] + extend:64[31:0[R1]]
0001dae9: NF := 63:63[#12174]
0001daec: VF := 31:31[~31:0[R25]] & 31:31[R1] & ~63:63[#12174] |
          ~31:31[~31:0[R25]] & ~31:31[R1] & 63:63[#12174]
0001daef: ZF := #12174 = 0
0001daf2: CF := 31:31[~31:0[R25]] & 31:31[R1] | 31:31[R1] & ~63:63[#12174] |
          31:31[~31:0[R25]] & ~63:63[#12174]
0001db02: #12176 := NF <> VF
0001dafc: when #12176 goto %0001dafa
0003b123: goto %0001c9dc

0001e48f:
0001e496: R0 := mem[R20 + 0x12C, el]:u32
0001e4a1: #12526 := ~31:0[R0] = 0
0001e49b: when #12526 goto %0001d9a8
0003b124: goto %0001ca30

0001ca30:
0001ca41: R0 := mem[R20 + 0x130, el]:u32
0001ca47: R28 := 0
0001ca4f: mem := mem with [R31 + 0x68, el]:u32 <- 0
0001ca56: R26 := 0
0001ca5d: #11419 := 0xFFFFFFFFFFFFFFFE + extend:64[31:0[R0]]
0001ca61: NF := 63:63[#11419]
0001ca64: VF := 31:31[R0] & ~63:63[#11419]
0001ca67: ZF := #11419 = 0
0001ca6a: CF := 31:31[R0] | 31:31[R0] & ~63:63[#11419] | ~63:63[#11419]
0001ca74: R27 := 0
0001ca7a: R25 := 0
0001ca80: R24 := 0
0001ca8c: #11421 := ZF
0001ca86: when #11421 goto %0001ca84
0003b125: goto %0001d75c

0001d75c:
0001d76b: #12022 := 0xFFFFFFFFFFFFFFFF + extend:64[31:0[R0]]
0001d76f: NF := 63:63[#12022]
0001d772: VF := 31:31[R0] & ~63:63[#12022]
0001d775: ZF := #12022 = 0
0001d778: CF := 31:31[R0] | 31:31[R0] & ~63:63[#12022] | ~63:63[#12022]
0001d787: #12024 := ZF
0001d781: when #12024 goto %0001d77f
0003b126: goto %0001ccbd

0001ccbd:
0001cccd: R0 := 31:0[R27] & 0xFFFF
0001ccd5: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0001ccdd: R21 := extend:64[31:0[R0]] + 0x40
0001cce6: R0 := mem[R20 + 0x134, el]:u32
0001cced: R1 := extend:64[31:0[R27]]
0001ccf5: mem := mem with [R31 + 0x70, el]:u64 <- R1
0001ccfd: R21 := 31:0[R21] & 0xFFFF
0001cd09: #11554 := ~31:0[R0] = 0
0001cd03: when #11554 goto %0001cd01
0003b127: goto %0001ce0e

0001ce0e:
0001ce18: R21 := 31:0[R21] + 31:0[R26]
0001ce21: R0 := mem[R20 + 0x130, el]:u32
0001ce29: R1 := 31:0[R21] & 0xFFFF
0001ce31: mem := mem with [R31 + 0x80, el]:u32 <- 31:0[R1]
0001ce38: R1 := R20 + 0x64
0001ce40: mem := mem with [R31 + 0x90, el]:u64 <- R1
0001ce47: R3 := R20 + 0x32
0001ce53: #11616 := ~31:0[R0] = 0
0001ce4d: when #11616 goto %0001ce4b
0003b128: goto %0001d8b8

0001d8b8:
0001d8bf: R0 := mem[R20 + 0x12C, el]:u32
0001d8cb: #12066 := 31:0[R0] = 0
0001d8c5: when #12066 goto %0001d8c3
0003b129: goto %0001ce4b

0001d8c3:
0001d8d3: R0 := R3
0001d8db: mem := mem with [R31 + 0x90, el]:u64 <- R3
0001d8e0: R30 := 0x6FBC
0001d8e2: call @strdup with return %0001d8e4

0001d8e4:
0001d8e7: R30 := 0x6FC0
0001d8e9: call @uppercase with return %0001d8eb

0001d8eb:
0001d8f1: R1 := R0
0001d8f9: R0 := R20
0001d901: mem := mem with [R31 + 0xA0, el]:u64 <- R1
0001d906: R30 := 0x6FD0
0001d908: call @strdup with return %0001d90a

0001d90a:
0001d90d: R30 := 0x6FD4
0001d90f: call @uppercase with return %0001d911

0001d911:
0001d917: R1 := R0
0001d91e: R0 := R20 + 0x64
0001d926: mem := mem with [R31 + 0xA8, el]:u64 <- R1
0001d92b: R30 := 0x6FE4
0001d92d: call @strdup with return %0001d92f

0001d92f:
0001d932: R30 := 0x6FE8
0001d934: call @uppercase with return %0001d936

0001d936:
0001d93c: R1 := R0
0001d944: R3 := mem[R31 + 0x90, el]:u64
0001d94c: mem := mem with [R31 + 0x98, el]:u64 <- R3
0001d954: mem := mem with [R31 + 0xB0, el]:u64 <- R1
0001d95c: R0 := R3
0001d961: R30 := 0x7000
0001d963: call @strlen with return %0001d965

0001d965:
0001d96c: R21 := 31:0[R0]
0001d974: R0 := R20
0001d979: R30 := 0x700C
0001d97b: call @strlen with return %0001d97d

0001d97d:
0001d984: R22 := 31:0[R0]
0001d98b: R0 := R20 + 0x64
0001d990: R30 := 0x7018
0001d992: call @strlen with return %0001d994

0001d994:
0001d99a: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0001d9a2: R3 := mem[R31 + 0x98, el]:u64
0001d9a6: goto %0001cf2b

0001ce4b:
0001ce5b: R0 := R3
0001ce63: mem := mem with [R31 + 0x98, el]:u64 <- R3
0001ce68: R30 := 0x64F8
0001ce6a: call @strdup with return %0001ce6c

0001ce6c:
0001ce6f: R30 := 0x64FC
0001ce71: call @uppercase with return %0001ce73

0001ce73:
0001ce79: R22 := R0
0001ce81: R1 := R22
0001ce88: R0 := R31 + 0xA0
0001ce8d: R30 := 0x650C
0001ce8f: call @unicode with return %0001ce91

0001ce91:
0001ce98: R21 := 31:0[R0]
0001cea0: R0 := R22
0001cea5: R30 := 0x6518
0001cea7: call @free with return %0001cea9

0001cea9:
0001ceaf: R1 := R20
0001ceb6: R0 := R31 + 0xA8
0001cebb: R30 := 0x6524
0001cebd: call @unicode with return %0001cebf

0001cebf:
0001cec6: R22 := 31:0[R0]
0001cecd: R0 := R20 + 0x64
0001ced2: R30 := 0x6530
0001ced4: call @strdup with return %0001ced6

0001ced6:
0001ced9: R30 := 0x6534
0001cedb: call @uppercase with return %0001cedd

0001cedd:
0001cee3: R1 := R0
0001ceea: R0 := R31 + 0xB0
0001cef2: mem := mem with [R31 + 0x90, el]:u64 <- R1
0001cef7: R30 := 0x6544
0001cef9: call @unicode with return %0001cefb

0001cefb:
0001cf02: R2 := 31:0[R0]
0001cf0a: R1 := mem[R31 + 0x90, el]:u64
0001cf12: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R2]
0001cf1a: R0 := R1
0001cf1f: R30 := 0x6558
0001cf21: call @free with return %0001cf23

0001cf23:
0001cf29: R3 := mem[R31 + 0x98, el]:u64
0003b12a: goto %0001cf2b

0001cf2b:
0001cf31: R23 := mem[R23 + 0xF78, el]:u64
0001cf3a: R0 := mem[R23, el]:u32
0001cf46: #11651 := ~31:0[R0] = 0
0001cf40: when #11651 goto %0001cf3e
0003b12b: goto %0001d057

0001cf3e:
0001cf4c: R1 := 0x11000
0001cf53: R0 := 1
0001cf5a: R1 := R1 + 0x860
0001cf62: mem := mem with [R31 + 0x98, el]:u64 <- R3
0001cf67: R30 := 0x6EFC
0001cf69: call @__printf_chk with return %0001cf6b

0001cf6b:
0001cf70: R2 := R20 + 0x64
0001cf76: R1 := 0x11000
0001cf7d: R0 := 1
0001cf84: R1 := R1 + 0x870
0001cf89: R30 := 0x6F10
0001cf8b: call @__printf_chk with return %0001cf8d

0001cf8d:
0001cf93: R3 := mem[R31 + 0x98, el]:u64
0001cf99: R1 := 0x11000
0001cfa0: R0 := 1
0001cfa7: R1 := R1 + 0x888
0001cfaf: R2 := R3
0001cfb4: R30 := 0x6F28
0001cfb6: call @__printf_chk with return %0001cfb8

0001cfb8:
0001cfbc: R1 := 0x11000
0001cfc4: R2 := R20
0001cfcb: R1 := R1 + 0x8A0
0001cfd2: R0 := 1
0001cfd7: R30 := 0x6F3C
0001cfd9: call @__printf_chk with return %0001cfdb

0001cfdb:
0001cfe5: #11659 := ~31:0[R27] = 0
0001cfdf: when #11659 goto %0001cfdd
0003b12c: goto %0001d049

0001cfdd:
0001cfed: R1 := mem[R31 + 0x70, el]:u64
0001cff5: R0 := R25
0001cffc: R2 := 7
0001d001: R30 := 0x7034
0001d003: call @printmem with return %0001d005

0001d005:
0001d00b: R2 := R0
0001d014: R3 := 31:0[R27]
0001d01a: R1 := 0x11000
0001d021: R1 := R1 + 0x8B8
0001d029: R20 := R0
0001d030: R0 := 1
0001d035: R30 := 0x7050
0001d037: call @__printf_chk with return %0001d039

0001d039:
0001d03f: R0 := R20
0001d044: R30 := 0x7058
0001d046: call @free with return %0001d048

0001d048:
0001d04b: goto %0001d049

0001d049:
0001d053: R0 := mem[R31 + 0x68, el]:u32
0001d05f: #11677 := 31:0[R0] = 0
0001d059: when #11677 goto %0001d057
0003b12d: goto %0001d3cf

0001d3cf:
0001d3d5: R1 := R28
0001d3dd: R0 := R24
0001d3e4: R2 := 7
0001d3e9: R30 := 0x6F58
0001d3eb: call @printmem with return %0001d3ed

0001d3ed:
0001d3f4: R3 := mem[R31 + 0x68, el]:u32
0001d3fc: R2 := R0
0001d402: R1 := 0x11000
0001d409: R1 := R1 + 0x8B8
0001d411: R20 := R0
0001d418: R0 := 1
0001d41d: R30 := 0x6F74
0001d41f: call @__printf_chk with return %0001d421

0001d421:
0001d427: R0 := R20
0001d42c: R30 := 0x6F7C
0001d42e: call @free with return %0001d430

0001d430:
0001d432: goto %0001d057

0001d057:
0001d065: R0 := 0x400
0001d06a: R30 := 0x6570
0001d06c: call @new with return %0001d06e

0001d06e:
0001d072: R3 := 0x544E
0001d07a: R20 := R0
0001d083: R8 := mem[R31 + 0x90, el]:u32
0001d08b: R1 := extend:64[31:0[R21]] + 0x40
0001d092: R3 := R3 & 0xFFFFFFFF0000FFFF | 0x4D4C0000
0001d09b: R0 := 31:0[R1] + 31:0[R22]
0001d0a4: R4 := mem[R31 + 0x68, el]:u32
0001d0ab: R3 := R3 & 0xFFFF0000FFFFFFFF | 0x535300000000
0001d0b4: R2 := 31:0[R0] + 31:0[R8]
0001d0bb: R3 := R3 & 0xFFFFFFFFFFFF | 0x50000000000000
0001d0c3: R7 := 31:0[R21] & 0xFFFF
0001d0cb: R6 := 31:0[R22] & 0xFFFF
0001d0d4: R4 := 31:0[R2] + 31:0[R4]
0001d0db: R5 := 3
0001d0e3: mem := mem with [R20, el]:u64 <- R3
0001d0ea: R3 := 0x40
0001d0f2: mem := mem with [R20 + 8, el]:u32 <- 31:0[R5]
0001d0fa: R5 := 31:0[R8] & 0xFFFF
0001d102: mem := mem with [R20 + 0x10, el]:u32 <- 31:0[R2]
0001d109: R21 := extend:64[31:0[R21]]
0001d111: mem := mem with [R20 + 0x18, el]:u32 <- 31:0[R4]
0001d119: R2 := R21
0001d121: mem := mem with [R20 + 0x20, el]:u32 <- 31:0[R3]
0001d12a: R3 := 31:0[R7] + 31:0[R6]
0001d132: mem := mem with [R20 + 0x28, el]:u32 <- 31:0[R1]
0001d139: R22 := extend:64[31:0[R22]]
0001d141: mem := mem with [R20 + 0x30, el]:u32 <- 31:0[R0]
0001d14a: R0 := mem[R31 + 0x80, el]:u32
0001d152: mem := mem with [R31 + 0x68, el]:u32 <- 31:0[R4]
0001d15b: R3 := 31:0[R0] + 31:0[R3]
0001d164: R4 := mem[R31 + 0x88, el]:u32
0001d16d: R0 := 31:0[R8]
0001d176: R8 := mem[R19 + 0x14, el]:u32
0001d17e: R1 := mem[R31 + 0xA0, el]:u64
0001d187: R3 := 31:0[R5] + 31:0[R3]
0001d18f: mem := mem with [R20 + 0xC, el]:u16 <- low:16[31:0[R26]]
0001d196: R19 := extend:64[31:0[R0]]
0001d19e: mem := mem with [R20 + 0xE, el]:u16 <- low:16[31:0[R26]]
0001d1a5: R0 := R20 + 0x40
0001d1ad: mem := mem with [R20 + 0x14, el]:u16 <- low:16[31:0[R4]]
0001d1b5: R26 := R21 + R22
0001d1bd: mem := mem with [R20 + 0x16, el]:u16 <- low:16[31:0[R4]]
0001d1c4: R21 := R21 + 0x40
0001d1cc: mem := mem with [R20 + 0x1C, el]:u16 <- low:16[31:0[R7]]
0001d1d4: R23 := R26 + R19
0001d1dc: mem := mem with [R20 + 0x1E, el]:u16 <- low:16[31:0[R7]]
0001d1e4: mem := mem with [R20 + 0x24, el]:u16 <- low:16[31:0[R6]]
0001d1ec: mem := mem with [R20 + 0x26, el]:u16 <- low:16[31:0[R6]]
0001d1f4: mem := mem with [R20 + 0x2C, el]:u16 <- low:16[31:0[R5]]
0001d1fc: mem := mem with [R20 + 0x2E, el]:u16 <- low:16[31:0[R5]]
0001d204: mem := mem with [R20 + 0x34, el]:u32 <- 0
0001d20c: mem := mem with [R20 + 0x38, el]:u16 <- low:16[31:0[R3]]
0001d214: mem := mem with [R20 + 0x3C, el]:u32 <- 31:0[R8]
0001d219: R30 := 0x6648
0001d21b: call @memcpy with return %0001d21d

0001d21d:
0001d223: R1 := mem[R31 + 0xA8, el]:u64
0001d22b: R2 := R22
0001d233: R0 := R20 + R21
0001d238: R30 := 0x6658
0001d23a: call @memcpy with return %0001d23c

0001d23c:
0001d242: R1 := mem[R31 + 0xB0, el]:u64
0001d249: R0 := R26 + 0x40
0001d251: R2 := R19
0001d259: R0 := R20 + R0
0001d25e: R30 := 0x666C
0001d260: call @memcpy with return %0001d262

0001d262:
0001d267: R0 := R23 + 0x40
0001d26f: R2 := R28
0001d277: R1 := R24
0001d27f: R0 := R20 + R0
0001d284: R30 := 0x6680
0001d286: call @memcpy with return %0001d288

0001d288:
0001d28e: R2 := mem[R31 + 0x70, el]:u64
0001d296: R1 := R25
0001d29d: R0 := R23 + 0x58
0001d2a5: R0 := R20 + R0
0001d2aa: R30 := 0x6694
0001d2ac: call @memcpy with return %0001d2ae

0001d2ae:
0001d2b4: R0 := R25
0001d2b9: R30 := 0x669C
0001d2bb: call @free with return %0001d2bd

0001d2bd:
0001d2c3: R0 := R24
0001d2c8: R30 := 0x66A4
0001d2ca: call @free with return %0001d2cc

0001d2cc:
0001d2d2: R0 := mem[R31 + 0xB0, el]:u64
0001d2d7: R30 := 0x66AC
0001d2d9: call @free with return %0001d2db

0001d2db:
0001d2e1: R0 := mem[R31 + 0xA8, el]:u64
0001d2e6: R30 := 0x66B4
0001d2e8: call @free with return %0001d2ea

0001d2ea:
0001d2f0: R0 := mem[R31 + 0xA0, el]:u64
0001d2f5: R30 := 0x66BC
0001d2f7: call @free with return %0001d2f9

0001d2f9:
0001d2ff: R1 := mem[R31 + 0x78, el]:u64
0001d308: R4 := mem[R31 + 0x68, el]:u32
0001d311: R0 := 31:0[R4] + 31:0[R27]
0001d319: mem := mem with [R1, el]:u64 <- R20
0003b12e: goto %0001d31b

0001d31b:
0001d31f: R1 := 0x27000
0001d327: R1 := mem[R1 + 0xFB8, el]:u64
0001d32f: R2 := mem[R31 + 0x1B8, el]:u64
0001d337: R3 := mem[R1, el]:u64
0001d33f: #11839 := 1 + ~R3 + R2
0001d343: NF := 63:63[#11839]
0001d346: VF := 63:63[R2] & 63:63[~R3] & ~63:63[#11839] | ~63:63[R2] &
          ~63:63[~R3] & 63:63[#11839]
0001d349: ZF := #11839 = 0
0001d34c: CF := 63:63[R2] & 63:63[~R3] | 63:63[~R3] & ~63:63[#11839] |
          63:63[R2] & ~63:63[#11839]
0001d350: R2 := #11839
0001d356: R3 := 0
0001d362: #11844 := ~ZF <> 0
0001d35c: when #11844 goto %0001d35a
0003b12f: goto %0001d378

0001d35a:
0001d367: R30 := 0x70A0
0001d369: call @__stack_chk_fail with return %0001d36b

0001d36b:
0001d372: R27 := 31:0[R22]
0001d376: goto %0001c9dc

0001c9dc:
0001c9e9: #11408 := ~31:0[R2] = 0
0001c9e3: when #11408 goto %0001c9e1
0003b130: goto %0001ca22

0001c9e1:
0001c9f2: R2 := mem[R31 + 0x80, el]:u32
0001c9fb: R4 := 31:0[R27]
0001ca04: R3 := 31:0[R22]
0001ca0a: R1 := 0x11000
0001ca11: R0 := 1
0001ca18: R1 := R1 + 0x808
0001ca1d: R30 := 0x6FAC
0001ca1f: call @__printf_chk with return %0001ca21

0001ca21:
0001ca24: goto %0001ca22

0001ca22:
0001ca2c: R0 := mem[R20 + 0x12C, el]:u32
0001ca38: #11417 := 31:0[R0] = 0
0001ca32: when #11417 goto %0001ca30
0003b131: goto %0001e3a9

0001e3a9:
0001e3b2: #12505 := 31:0[R22] = 0
0001e3ac: when #12505 goto %0001d9a8
0003b132: goto %0001e3b5

0001d9a8:
0001d9ad: R0 := 0
0001d9b1: goto %0001d31b

0001e3b5:
0001e3b9: R0 := 9
0001e3be: R30 := 0x69F0
0001e3c0: call @new with return %0001e3c2

0001e3c2:
0001e3c7: R1 := R20 + 0xFA
0001e3cf: R21 := R0
0001e3d7: mem := mem with [R31 + 0x68, el]:u64 <- R1
0001e3dc: R30 := 0x6A00
0001e3de: call @random with return %0001e3e0

0001e3e0:
0001e3e6: R25 := R0
0001e3eb: R30 := 0x6A08
0001e3ed: call @random with return %0001e3ef

0001e3ef:
0001e3f5: R1 := R0
0001e3fd: R25 := R1 | R25 << 0x20
0001e405: mem := mem with [R21, el]:u64 <- R25
0001e40b: R0 := 0
0001e411: R25 := 0x8000
0001e416: R30 := 0x6A20
0001e419: call @time with return %0001e41b

0001e41b:
0001e420: R25 := R25 & 0xFFFFFFFF0000FFFF | 0xD53E0000
0001e428: R1 := mem[R23 + 0xF78, el]:u64
0001e42e: R2 := 0x9680
0001e435: R25 := R25 & 0xFFFF0000FFFFFFFF | 0xB1DE00000000
0001e43c: R2 := R2 & 0xFFFFFFFF0000FFFF | 0x980000
0001e443: R25 := R25 & 0xFFFFFFFFFFFF | 0x19D000000000000
0001e44c: R1 := mem[R1, el]:u32
0001e455: R24 := R25 + R0 * R2
0001e460: #12524 := ~31:0[R1] = 0
0001e45a: when #12524 goto %0001d45c
0003b133: goto %0001d4bb

0001d45c:
0001d462: R0 := R21
0001d469: R2 := 7
0001d46f: R1 := 8
0001d474: R30 := 0x706C
0001d476: call @printmem with return %0001d478

0001d478:
0001d47e: R3 := R24
0001d486: R2 := R0
0001d48c: R1 := 0x11000
0001d493: R1 := R1 + 0x838
0001d49b: R26 := R0
0001d4a2: R0 := 1
0001d4a7: R30 := 0x7088
0001d4a9: call @__printf_chk with return %0001d4ab

0001d4ab:
0001d4b1: R0 := R26
0001d4b6: R30 := 0x7090
0001d4b8: call @free with return %0001d4ba

0001d4ba:
0001d4bd: goto %0001d4bb

0001d4bb:
0001d4c4: R0 := extend:64[31:0[R22]] + 0x21
0001d4cb: R25 := R22 & 0xFFFF
0001d4d1: R28 := 0x18
0001d4d9: R27 := extend:64[31:0[R22]] + 0x30
0001d4e0: R0 := extend:64[31:0[R0]]
0001d4e5: R30 := 0x6A5C
0001d4e7: call @new with return %0001d4e9

0001d4e9:
0001d4ef: R5 := R0
0001d4f5: R3 := 0x101
0001d4fe: R0 := mem[R31 + 0x80, el]:u16
0001d506: R2 := R25
0001d50e: mem := mem with [R31 + 0x68, el]:u32 <- 31:0[R28]
0001d517: R26 := 31:0[R28]
0001d51f: #11945 := R5
0001d524: mem := mem with [#11945, el]:u64 <- R3
0001d529: mem := mem with [#11945 + 8, el]:u64 <- R24
0001d531: R1 := R19 + pad:64[low:16[31:0[R0]]]
0001d539: R3 := mem[R21, el]:u64
0001d541: mem := mem with [R5 + 0x10, el]:u64 <- R3
0001d549: mem := mem with [R5 + 0x18, el]:u32 <- 0
0001d550: R0 := R5 + 0x1C
0001d558: mem := mem with [R31 + 0x70, el]:u64 <- R5
0001d55d: R30 := 0x6A94
0001d55f: call @memcpy with return %0001d561

0001d561:
0001d567: R5 := mem[R31 + 0x70, el]:u64
0001d56f: R0 := extend:64[31:0[R22]] + 0x31
0001d577: R2 := R5 + R25
0001d57e: R0 := extend:64[31:0[R0]]
0001d586: mem := mem with [R2 + 0x1C, el]:u32 <- 0
0001d58b: R30 := 0x6AAC
0001d58d: call @new with return %0001d58f

0001d58f:
0001d595: R25 := R0
0001d59d: R1 := extend:64[31:0[R22]] + 0x29
0001d5a4: R0 := extend:64[31:0[R1]]
0001d5a9: R30 := 0x6ABC
0001d5ab: call @new with return %0001d5ad

0001d5ad:
0001d5b3: R24 := R0
0001d5bb: R6 := extend:64[31:0[R22]] + 0x20
0001d5c3: R3 := mem[R19 + 0x18, el]:u64
0001d5ca: R6 := extend:64[31:0[R6]]
0001d5d2: R5 := mem[R31 + 0x70, el]:u64
0001d5db: mem := mem with [R0, el]:u64 <- R3
0001d5de: R0 := R0 + 8
0001d5e6: R2 := R6
0001d5ee: mem := mem with [R31 + 0x70, el]:u64 <- R6
0001d5f6: R1 := R5
0001d5fe: mem := mem with [R31 + 0x80, el]:u64 <- R5
0001d603: R30 := 0x6AE8
0001d605: call @memcpy with return %0001d607

0001d607:
0001d60d: R3 := extend:64[31:0[R22]] + 0x28
0001d615: R4 := R25
0001d61d: R2 := R24
0001d623: R1 := 0x10
0001d62a: R3 := extend:64[31:0[R3]]
0001d631: R0 := R20 + 0xFA
0001d636: R30 := 0x6B04
0001d638: call @hmac_md5 with return %0001d63a

0001d63a:
0001d640: R6 := mem[R31 + 0x70, el]:u64
0001d647: R0 := R25 + 0x10
0001d64f: R5 := mem[R31 + 0x80, el]:u64
0001d657: R2 := R6
0001d65f: mem := mem with [R31 + 0x70, el]:u64 <- R5
0001d667: R1 := R5
0001d66c: R30 := 0x6B20
0001d66e: call @memcpy with return %0001d670

0001d670:
0001d676: R0 := R24
0001d67b: R30 := 0x6B28
0001d67d: call @free with return %0001d67f

0001d67f:
0001d683: R0 := 0x19
0001d688: R30 := 0x6B30
0001d68a: call @new with return %0001d68c

0001d68c:
0001d692: R24 := R0
0001d698: R0 := 0x11
0001d69d: R30 := 0x6B3C
0001d69f: call @new with return %0001d6a1

0001d6a1:
0001d6a7: R22 := R0
0001d6af: R1 := mem[R19 + 0x18, el]:u64
0001d6b5: R3 := 0x10
0001d6bd: mem := mem with [R22, el]:u64 <- R1
0001d6c5: R4 := R24
0001d6cd: R2 := R22
0001d6d5: R1 := R3
0001d6dd: R6 := mem[R21, el]:u64
0001d6e5: mem := mem with [R22 + 8, el]:u64 <- R6
0001d6ec: R0 := R20 + 0xFA
0001d6f1: R30 := 0x6B68
0001d6f3: call @hmac_md5 with return %0001d6f5

0001d6f5:
0001d6fb: R0 := mem[R21, el]:u64
0001d703: mem := mem with [R24 + 0x10, el]:u64 <- R0
0001d70b: R0 := R22
0001d710: R30 := 0x6B78
0001d712: call @free with return %0001d714

0001d714:
0001d71a: R5 := mem[R31 + 0x70, el]:u64
0001d722: R0 := R5
0001d727: R30 := 0x6B84
0001d729: call @free with return %0001d72b

0001d72b:
0001d731: R0 := R21
0001d736: R30 := 0x6B8C
0001d738: call @free with return %0001d73a

0001d73a:
0001d741: R0 := mem[R20 + 0x130, el]:u32
0001d748: #12019 := 0xFFFFFFFFFFFFFFFE + extend:64[31:0[R0]]
0001d74c: NF := 63:63[#12019]
0001d74f: VF := 31:31[R0] & ~63:63[#12019]
0001d752: ZF := #12019 = 0
0001d755: CF := 31:31[R0] | 31:31[R0] & ~63:63[#12019] | ~63:63[#12019]
0001d764: #12021 := ~ZF <> 0
0001d75e: when #12021 goto %0001d75c
0003b134: goto %0001ca84

0001ca84:
0001ca92: R0 := 9
0001ca97: R30 := 0x6BA0
0001ca99: call @new with return %0001ca9b

0001ca9b:
0001caa1: R21 := R0
0001caa6: R30 := 0x6BA8
0001caa9: call @random with return %0001caab

0001caab:
0001cab1: R24 := R0
0001cab6: R30 := 0x6BB0
0001cab8: call @random with return %0001caba

0001caba:
0001cac0: R1 := R0
0001cac6: R0 := 0x19
0001cace: R24 := R1 | R24 << 0x20
0001cad6: mem := mem with [R21, el]:u64 <- R24
0001cadc: R28 := 0x18
0001cae3: R22 := R31 + 0xB8
0001cae8: R30 := 0x6BCC
0001caea: call @new with return %0001caec

0001caec:
0001caf2: R24 := R0
0001cafa: R1 := mem[R21, el]:u64
0001cb00: R0 := 0x11
0001cb08: mem := mem with [R24, el]:u64 <- R1
0001cb11: R26 := 31:0[R28]
0001cb19: #11444 := R24 + 8
0001cb1e: mem := mem with [#11444, el]:u64 <- 0
0001cb23: mem := mem with [#11444 + 8, el]:u64 <- 0
0001cb2c: R27 := 31:0[R28]
0001cb34: mem := mem with [R31 + 0x68, el]:u32 <- 31:0[R28]
0001cb3c: mem := mem with [R31 + 0x70, el]:u64 <- R21
0001cb41: R30 := 0x6BF4
0001cb43: call @new with return %0001cb45

0001cb45:
0001cb4b: R25 := R0
0001cb51: R0 := 0x11
0001cb56: R30 := 0x6C00
0001cb58: call @new with return %0001cb5a

0001cb5a:
0001cb60: R2 := R0
0001cb68: R3 := mem[R31 + 0x70, el]:u64
0001cb70: R21 := R0
0001cb78: R1 := mem[R19 + 0x18, el]:u64
0001cb80: mem := mem with [R25, el]:u64 <- R1
0001cb86: R1 := 0x10
0001cb8e: R0 := R25
0001cb96: R3 := mem[R3, el]:u64
0001cb9e: mem := mem with [R25 + 8, el]:u64 <- R3
0001cba3: R30 := 0x6C28
0001cba5: call @md5_buffer with return %0001cba7

0001cba7:
0001cbad: R0 := R25
0001cbb2: R30 := 0x6C30
0001cbb4: call @free with return %0001cbb6

0001cbb6:
0001cbba: R0 := 0x19
0001cbbf: R30 := 0x6C38
0001cbc1: call @new with return %0001cbc3

0001cbc3:
0001cbc9: R1 := R22
0001cbd1: R25 := R0
0001cbd8: R0 := R20 + 0xC8
0001cbdd: R30 := 0x6C48
0001cbdf: call @ntlm_set_key with return %0001cbe1

0001cbe1:
0001cbe7: R2 := R25
0001cbee: R3 := 0
0001cbf6: R1 := R21
0001cbfe: R0 := R22
0001cc03: R30 := 0x6C5C
0001cc05: call @gl_des_ecb_crypt with return %0001cc07

0001cc07:
0001cc0d: R1 := R22
0001cc14: R0 := R20 + 0xCF
0001cc19: R30 := 0x6C68
0001cc1b: call @ntlm_set_key with return %0001cc1d

0001cc1d:
0001cc22: R2 := R25 + 8
0001cc29: R3 := 0
0001cc31: R1 := R21
0001cc39: R0 := R22
0001cc3e: R30 := 0x6C7C
0001cc40: call @gl_des_ecb_crypt with return %0001cc42

0001cc42:
0001cc48: R1 := R22
0001cc4f: R0 := R20 + 0xD6
0001cc54: R30 := 0x6C88
0001cc56: call @ntlm_set_key with return %0001cc58

0001cc58:
0001cc5d: R2 := R25 + 0x10
0001cc65: R1 := R21
0001cc6c: R3 := 0
0001cc74: R0 := R22
0001cc79: R30 := 0x6C9C
0001cc7b: call @gl_des_ecb_crypt with return %0001cc7d

0001cc7d:
0001cc83: R0 := R21
0001cc88: R30 := 0x6CA4
0001cc8a: call @free with return %0001cc8c

0001cc8c:
0001cc92: R0 := mem[R31 + 0x70, el]:u64
0001cc97: R30 := 0x6CAC
0001cc99: call @free with return %0001cc9b

0001cc9b:
0001cca2: R0 := mem[R20 + 0x130, el]:u32
0001cca9: #11505 := 0xFFFFFFFFFFFFFFFF + extend:64[31:0[R0]]
0001ccad: NF := 63:63[#11505]
0001ccb0: VF := 31:31[R0] & ~63:63[#11505]
0001ccb3: ZF := #11505 = 0
0001ccb6: CF := 31:31[R0] | 31:31[R0] & ~63:63[#11505] | ~63:63[#11505]
0001ccc5: #11507 := ~ZF <> 0
0001ccbf: when #11507 goto %0001ccbd
0003b135: goto %0001d77f

0001d77f:
0001d78e: R22 := R31 + 0xB8
0001d794: R0 := 0x19
0001d799: R30 := 0x6CC4
0001d79b: call @new with return %0001d79d

0001d79d:
0001d7a3: R25 := R0
0001d7ab: R1 := R22
0001d7b2: R0 := R20 + 0xC8
0001d7b7: R30 := 0x6CD4
0001d7b9: call @ntlm_set_key with return %0001d7bb

0001d7bb:
0001d7c0: R21 := 0x58
0001d7c7: R4 := R19 + 0x18
0001d7cf: R2 := R25
0001d7d6: R3 := 0
0001d7de: R1 := R4
0001d7e6: R0 := R22
0001d7ee: mem := mem with [R31 + 0x80, el]:u64 <- R4
0001d7f3: R30 := 0x6CF4
0001d7f5: call @gl_des_ecb_crypt with return %0001d7f7

0001d7f7:
0001d7fd: R1 := R22
0001d804: R0 := R20 + 0xCF
0001d809: R30 := 0x6D00
0001d80b: call @ntlm_set_key with return %0001d80d

0001d80d:
0001d813: R4 := mem[R31 + 0x80, el]:u64
0001d81a: R2 := R25 + 8
0001d820: R0 := 0x18
0001d827: R3 := 0
0001d82f: R1 := R4
0001d836: R4 := 0x18
0001d83f: R27 := 31:0[R0]
0001d847: mem := mem with [R31 + 0x70, el]:u64 <- R0
0001d84f: R0 := R22
0001d857: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R4]
0001d85c: R30 := 0x6D2C
0001d85e: call @gl_des_ecb_crypt with return %0001d860

0001d860:
0001d866: R1 := R22
0001d86d: R0 := R20 + 0xD6
0001d872: R30 := 0x6D38
0001d874: call @ntlm_set_key with return %0001d876

0001d876:
0001d87c: R4 := mem[R31 + 0x80, el]:u64
0001d884: R0 := R22
0001d88b: R2 := R25 + 0x10
0001d892: R3 := 0
0001d89a: R1 := R4
0001d89f: R30 := 0x6D50
0001d8a1: call @gl_des_ecb_crypt with return %0001d8a3

0001d8a3:
0001d8aa: R0 := mem[R20 + 0x134, el]:u32
0001d8b5: #12064 := 31:0[R0] = 0
0001d8af: when #12064 goto %0001ce0e
0003b136: goto %0001cd01

0001cd01:
0001cd10: R22 := R31 + 0xB8
0001cd16: R0 := 0x19
0001cd1b: R30 := 0x6D64
0001cd1d: call @new with return %0001cd1f

0001cd1f:
0001cd25: R24 := R0
0001cd2d: R1 := R22
0001cd34: R0 := R20 + 0x96
0001cd39: R30 := 0x6D74
0001cd3b: call @ntlm_set_key with return %0001cd3d

0001cd3d:
0001cd41: R28 := 0x18
0001cd48: R4 := R19 + 0x18
0001cd50: R2 := R24
0001cd57: R3 := 0
0001cd5f: R1 := R4
0001cd67: R0 := R22
0001cd6f: mem := mem with [R31 + 0x80, el]:u64 <- R4
0001cd74: R30 := 0x6D94
0001cd76: call @gl_des_ecb_crypt with return %0001cd78

0001cd78:
0001cd7d: R26 := 0x18
0001cd85: R1 := R22
0001cd8c: R0 := R20 + 0x9D
0001cd91: R30 := 0x6DA4
0001cd93: call @ntlm_set_key with return %0001cd95

0001cd95:
0001cd9b: mem := mem with [R31 + 0x68, el]:u32 <- 31:0[R28]
0001cda3: R4 := mem[R31 + 0x80, el]:u64
0001cdaa: R2 := R24 + 8
0001cdb1: R3 := 0
0001cdb9: R0 := R22
0001cdc1: R1 := R4
0001cdc6: R30 := 0x6DC0
0001cdc8: call @gl_des_ecb_crypt with return %0001cdca

0001cdca:
0001cdd0: R1 := R22
0001cdd7: R0 := R20 + 0xA4
0001cddc: R30 := 0x6DCC
0001cdde: call @ntlm_set_key with return %0001cde0

0001cde0:
0001cde6: R4 := mem[R31 + 0x80, el]:u64
0001cdee: R0 := R22
0001cdf5: R2 := R24 + 0x10
0001cdfc: R3 := 0
0001ce04: R1 := R4
0001ce09: R30 := 0x6DE4
0001ce0b: call @gl_des_ecb_crypt with return %0001ce0d

0001ce0d:
0001ce10: goto %0001ce0e

0001d378:
0001d37f: R19 := mem[R31 + 0x10, el]:u64
0001d383: R20 := mem[R31 + 0x18, el]:u64
0001d38c: R21 := mem[R31 + 0x20, el]:u64
0001d390: R22 := mem[R31 + 0x28, el]:u64
0001d399: R23 := mem[R31 + 0x30, el]:u64
0001d39d: R24 := mem[R31 + 0x38, el]:u64
0001d3a6: R25 := mem[R31 + 0x40, el]:u64
0001d3aa: R26 := mem[R31 + 0x48, el]:u64
0001d3b3: R27 := mem[R31 + 0x50, el]:u64
0001d3b7: R28 := mem[R31 + 0x58, el]:u64
0001d3c1: R29 := mem[R31, el]:u64
0001d3c5: R30 := mem[R31 + 8, el]:u64
0001d3c8: R31 := R31 + 0x1C0
0001d3cd: call R30 with noreturn

0003b137: sub ntlm_set_key(ntlm_set_key_result)
0003b420: ntlm_set_key_result :: out u32 = low:32[R0]

0000fde7:
0000fdee: #435 := R31 - 0x30
0000fdf3: mem := mem with [#435, el]:u64 <- R29
0000fdf8: mem := mem with [#435 + 8, el]:u64 <- R30
0000fdfc: R31 := #435
0000fe04: R2 := R0
0000fe0c: R0 := R1
0000fe13: R29 := R31
0000fe1b: mem := mem with [R31 + 0x10, el]:u64 <- R19
0000fe21: R19 := 0x27000
0000fe28: R1 := R31 + 0x20
0000fe30: R19 := mem[R19 + 0xFB8, el]:u64
0000fe39: R7 := pad:32[mem[R2 + 2]]
0000fe41: R3 := mem[R19, el]:u64
0000fe49: mem := mem with [R31 + 0x28, el]:u64 <- R3
0000fe4f: R3 := 0
0000fe58: R8 := pad:32[mem[R2 + 1]]
0000fe61: R6 := pad:32[mem[R2 + 3]]
0000fe6a: R5 := pad:32[mem[R2 + 4]]
0000fe72: R11 := pad:64[31:2[R7]]
0000fe7b: R3 := pad:32[mem[R2 + 6]]
0000fe83: R9 := pad:64[31:1[R8]]
0000fe8c: R4 := pad:32[mem[R2 + 5]]
0000fe94: R13 := pad:64[31:3[R6]]
0000fe9d: R10 := pad:32[mem[R2]]
0000fea5: R12 := pad:64[31:4[R5]]
0000feae: R8 := 31:0[R11] | 31:0[R8] << 6
0000feb6: R11 := pad:64[31:6[R3]]
0000febe: R2 := pad:64[31:5[R4]]
0000fec7: R7 := 31:0[R13] | 31:0[R7] << 5
0000fed0: R5 := 31:0[R2] | 31:0[R5] << 3
0000fed9: R6 := 31:0[R12] | 31:0[R6] << 4
0000fee2: R2 := 31:0[R9] | 31:0[R10] << 7
0000feeb: R4 := 31:0[R11] | 31:0[R4] << 2
0000fef3: R3 := 31:0[R3] << 0x21
0000fefb: mem := mem with [R31 + 0x20] <- low:8[31:0[R10]]
0000ff03: mem := mem with [R31 + 0x21] <- low:8[31:0[R2]]
0000ff0b: mem := mem with [R31 + 0x22] <- low:8[31:0[R8]]
0000ff13: mem := mem with [R31 + 0x23] <- low:8[31:0[R7]]
0000ff1b: mem := mem with [R31 + 0x24] <- low:8[31:0[R6]]
0000ff23: mem := mem with [R31 + 0x25] <- low:8[31:0[R5]]
0000ff2b: mem := mem with [R31 + 0x26] <- low:8[31:0[R4]]
0000ff33: mem := mem with [R31 + 0x27] <- low:8[31:0[R3]]
0000ff38: R30 := 0x5F20
0000ff3b: call @gl_des_setkey with return %0001be25

0001be25:
0001be2b: R0 := mem[R31 + 0x28, el]:u64
0001be33: R1 := mem[R19, el]:u64
0001be3b: #10916 := 1 + ~R1 + R0
0001be3f: NF := 63:63[#10916]
0001be42: VF := 63:63[R0] & 63:63[~R1] & ~63:63[#10916] | ~63:63[R0] &
          ~63:63[~R1] & 63:63[#10916]
0001be45: ZF := #10916 = 0
0001be48: CF := 63:63[R0] & 63:63[~R1] | 63:63[~R1] & ~63:63[#10916] |
          63:63[R0] & ~63:63[#10916]
0001be4c: R0 := #10916
0001be52: R1 := 0
0001be5e: #10921 := ~ZF <> 0
0001be58: when #10921 goto %0001be56
0003b138: goto %0002ca2a

0001be56:
0001be63: R30 := 0x5F44
0001be65: call @__stack_chk_fail with return %0001be67

0001be67:
0003b139: call @ntlm_hash_lm_password with noreturn

0002ca2a:
0002ca30: R19 := mem[R31 + 0x10, el]:u64
0002ca3a: R29 := mem[R31, el]:u64
0002ca3e: R30 := mem[R31 + 8, el]:u64
0002ca41: R31 := R31 + 0x30
0002ca46: call R30 with noreturn

0003b13a: sub open(open_pathname, open_flags, open_result)
0003b421: open_pathname :: in u64 = R0
0003b422: open_flags :: in u32 = low:32[R1]
0003b423: open_result :: out u32 = low:32[R0]

0002eadf:
00032b5c: R16 := 0x27000
00032b64: R17 := mem[R16 + 0xD28, el]:u64
00032b6b: R16 := R16 + 0xD28
00032b70: call R17 with noreturn

0003b13b: sub openlog(openlog_result)
0003b424: openlog_result :: out u32 = low:32[R0]

0002dadc:
00032dff: R16 := 0x27000
00032e07: R17 := mem[R16 + 0xE00, el]:u64
00032e0e: R16 := R16 + 0xE00
00032e13: call R17 with noreturn

0003b13c: sub parent_add(parent_add_result)
0003b425: parent_add_result :: out u32 = low:32[R0]

000228c4:
000228cb: #14737 := R31 - 0x30
000228d0: mem := mem with [#14737, el]:u64 <- R29
000228d5: mem := mem with [#14737 + 8, el]:u64 <- R30
000228d9: R31 := #14737
000228e0: R29 := R31
000228e8: #14742 := R31 + 0x10
000228ed: mem := mem with [#14742, el]:u64 <- R19
000228f2: mem := mem with [#14742 + 8, el]:u64 <- R20
000228fa: #14747 := R31 + 0x20
000228ff: mem := mem with [#14747, el]:u64 <- R21
00022904: mem := mem with [#14747 + 8, el]:u64 <- R22
0002290d: R22 := 31:0[R1]
00022915: R21 := R0
0002291a: R30 := 0x1052C
0002291c: call @strdup with return %0002291e

0002291e:
00022924: R20 := R0
00022929: R30 := 0x10534
0002292b: call @strlen with return %0002292d

0002292d:
00022933: R19 := R0
00022939: R1 := 0x15000
00022941: R0 := R20
00022948: R1 := R1 + 0x38
0002294d: R30 := 0x10548
0002294f: call @strcspn with return %00022951

00022951:
00022957: #14767 := 1 + extend:64[~31:0[R0]] + extend:64[31:0[R19]]
0002295b: NF := 63:63[#14767]
0002295e: VF := 31:31[~31:0[R0]] & 31:31[R19] & ~63:63[#14767] |
          ~31:31[~31:0[R0]] & ~31:31[R19] & 63:63[#14767]
00022961: ZF := #14767 = 0
00022964: CF := 31:31[~31:0[R0]] & 31:31[R19] | 31:31[R19] & ~63:63[#14767] |
          31:31[~31:0[R0]] & ~63:63[#14767]
00022973: #14769 := ZF
0002296d: when #14769 goto %0002296b
0003b13d: goto %000270c1

000270c1:
000270c6: R3 := extend:64[31:0[R0]]
000270ce: R1 := extend:64[31:0[R0]] + 1
000270d6: #17171 := 1 + extend:64[~31:0[R1]] + extend:64[31:0[R19]]
000270da: NF := 63:63[#17171]
000270dd: VF := 31:31[~31:0[R1]] & 31:31[R19] & ~63:63[#17171] |
          ~31:31[~31:0[R1]] & ~31:31[R19] & 63:63[#17171]
000270e0: ZF := #17171 = 0
000270e3: CF := 31:31[~31:0[R1]] & 31:31[R19] | 31:31[R19] & ~63:63[#17171] |
          31:31[~31:0[R1]] & ~63:63[#17171]
000270ee: #17172 := R3
000270f3: mem := mem with [R20 + #17172] <- 0
00027100: #17174 := (NF <> VF | ZF) <> 0
000270fa: when #17174 goto %00022bae
0003b13e: goto %00027103

00027103:
00027109: R19 := low:32[extend:64[31:0[R19]] - 2]
00027110: R2 := R20 + 2
00027119: R19 := 31:0[R19] - 31:0[R0]
00027121: R0 := R20 + extend:64[31:0[R1]]
00027129: R1 := R19 + R3
00027131: R2 := R1 + R2
00027136: goto %00027134

00027134:
0002713e: R1 := pad:32[mem[R0]]
00027145: #17187 := 0xFFFFFFFFFFFFFFE0 + extend:64[31:0[R1]]
00027149: NF := 63:63[#17187]
0002714c: VF := 31:31[R1] & ~63:63[#17187]
0002714f: ZF := #17187 = 0
00027152: CF := 31:31[R1] | 31:31[R1] & ~63:63[#17187] | ~63:63[#17187]
0002717b: #17189 := ~ZF <> 0
0002717c: goto %00027173

00027173:
00027175: when #17189 goto %0002715b
00027176: goto %00027167

00027167:
00027168: NF := 0
0002716b: ZF := 1
0002716e: CF := 0
00027171: VF := 0
00027178: goto %00027174

0002715b:
0002715c: NF := 63:63[extend:64[31:0[R1]] - 9]
0002715f: VF := 31:31[R1] & ~63:63[extend:64[31:0[R1]] - 9]
00027162: ZF := extend:64[31:0[R1]] - 9 = 0
00027165: CF := 31:31[R1] | ~63:63[extend:64[31:0[R1]] - 9] | 31:31[R1] &
          ~63:63[extend:64[31:0[R1]] - 9]
00027177: goto %00027174

00027174:
00027189: #17192 := ZF
00027183: when #17192 goto %00027181
0003b13f: goto %000271b5

000271b5:
000271ba: R2 := 0xA
000271c0: R1 := 0
000271c5: R30 := 0x105A8
000271c7: call @strtol with return %000271c9

000271c9:
000271d0: R22 := 31:0[R0]
0003b140: goto %0002296b

0002296b:
0002297f: #14770 := 31:0[R22] = 0
00022979: when #14770 goto %00022977
0003b141: goto %00022ad7

00022977:
00022987: R3 := R21
0002298d: R2 := 0x13000
00022994: R2 := R2 + 0xE88
0002299b: R1 := 1
000229a2: R0 := 3
000229a7: R30 := 0x10630
000229a9: call @__syslog_chk with return %000229ab

000229ab:
000229b1: R0 := R20
000229b6: R30 := 0x10638
000229b8: call @free with return %000229ba

000229ba:
000229bf: R0 := 1
000229c4: R30 := 0x10640
000229c7: call @myexit with return %00022ad6

00022ad6:
00022ad9: goto %00022ad7

00022ad7:
00022ade: R19 := 0x28000
00022ae5: R19 := R19 + 0x4D8
00022aeb: R0 := 0x188
00022af0: R30 := 0x105C0
00022af2: call @new with return %00022af4

00022af4:
00022afa: R1 := R20
00022b02: R21 := R0
00022b08: R2 := 0x40
00022b0d: R30 := 0x105D0
00022b0f: call @strlcpy with return %00022b11

00022b11:
00022b18: R1 := mem[R19 + 0x10, el]:u32
00022b20: R2 := R21
00022b28: R0 := mem[R19 + 8, el]:u64
00022b30: R1 := extend:64[31:0[R1]] + 1
00022b38: mem := mem with [R21 + 0x180, el]:u32 <- 31:0[R22]
00022b40: mem := mem with [R21 + 0x184, el]:u32 <- 0
00022b48: mem := mem with [R19 + 0x10, el]:u32 <- 31:0[R1]
00022b4f: R1 := extend:64[31:0[R1]]
00022b54: R30 := 0x105F4
00022b56: call @plist_add with return %00022b58

00022b58:
00022b5e: R1 := R0
00022b66: R0 := R20
00022b6e: mem := mem with [R19 + 8, el]:u64 <- R1
00022b73: R30 := 0x10604
00022b75: call @free with return %00022b77

00022b77:
00022b7c: R0 := 1
00022b85: R19 := mem[R31 + 0x10, el]:u64
00022b89: R20 := mem[R31 + 0x18, el]:u64
00022b92: R21 := mem[R31 + 0x20, el]:u64
00022b96: R22 := mem[R31 + 0x28, el]:u64
00022ba0: R29 := mem[R31, el]:u64
00022ba4: R30 := mem[R31 + 8, el]:u64
00022ba7: R31 := R31 + 0x30
00022bac: call R30 with noreturn

00027181:
00027190: R0 := R0 + 1
00027198: #17196 := 1 + ~R2 + R0
0002719c: NF := 63:63[#17196]
0002719f: VF := 63:63[R0] & 63:63[~R2] & ~63:63[#17196] | ~63:63[R0] &
          ~63:63[~R2] & 63:63[#17196]
000271a2: ZF := #17196 = 0
000271a5: CF := 63:63[R0] & 63:63[~R2] | 63:63[~R2] & ~63:63[#17196] |
          63:63[R0] & ~63:63[#17196]
000271b2: #17201 := ZF
000271ac: when #17201 goto %00022bae
0003b142: goto %00027134

00022bae:
00022bb4: R0 := R20
00022bb9: R30 := 0x1064C
00022bbb: call @free with return %00022bbd

00022bbd:
00022bc2: R0 := 0
00022bcb: R19 := mem[R31 + 0x10, el]:u64
00022bcf: R20 := mem[R31 + 0x18, el]:u64
00022bd8: R21 := mem[R31 + 0x20, el]:u64
00022bdc: R22 := mem[R31 + 0x28, el]:u64
00022be6: R29 := mem[R31, el]:u64
00022bea: R30 := mem[R31 + 8, el]:u64
00022bed: R31 := R31 + 0x30
00022bf2: call R30 with noreturn

0003b143: sub perror(perror_result)
0003b426: perror_result :: out u32 = low:32[R0]

00031b09:
0003294f: R16 := 0x27000
00032957: R17 := mem[R16 + 0xC80, el]:u64
0003295e: R16 := R16 + 0xC80
00032963: call R17 with noreturn

0003b144: sub plist_add(plist_add_result)
0003b427: plist_add_result :: out u32 = low:32[R0]

0001616b:
00016175: #6767 := R31 - 0x30
0001617a: mem := mem with [#6767, el]:u64 <- R29
0001617f: mem := mem with [#6767 + 8, el]:u64 <- R30
00016183: R31 := #6767
0001618a: R29 := R31
00016192: #6772 := R31 + 0x10
00016197: mem := mem with [#6772, el]:u64 <- R19
0001619c: mem := mem with [#6772 + 8, el]:u64 <- R20
000161a4: R20 := R2
000161ac: R19 := R0
000161b2: R0 := 0x18
000161ba: mem := mem with [R31 + 0x20, el]:u64 <- R21
000161c2: R21 := R1
000161c7: R30 := 0x48B4
000161c9: call @malloc with return %000161cb

000161cb:
000161d1: #6786 := R0
000161d6: mem := mem with [#6786, el]:u64 <- R21
000161db: mem := mem with [#6786 + 8, el]:u64 <- R20
000161e3: mem := mem with [R0 + 0x10, el]:u64 <- 0
000161ef: #6788 := R19 = 0
000161e9: when #6788 goto %000161e7
0003b145: goto %00016e66

00016e66:
00016e6c: R1 := R19
0003b146: goto %00016e70

00016e70:
00016e76: R2 := R1
00016e7e: R1 := mem[R1 + 0x10, el]:u64
00016e89: #7254 := ~R1 = 0
00016e83: when #7254 goto %00016e70
0003b147: goto %00016e8c

00016e8c:
00016e92: mem := mem with [R2 + 0x10, el]:u64 <- R0
00016e9a: R0 := R19
0003b148: goto %000161e7

000161e7:
000161f8: R19 := mem[R31 + 0x10, el]:u64
000161fc: R20 := mem[R31 + 0x18, el]:u64
00016204: R21 := mem[R31 + 0x20, el]:u64
0001620e: R29 := mem[R31, el]:u64
00016212: R30 := mem[R31 + 8, el]:u64
00016215: R31 := R31 + 0x30
0001621a: call R30 with noreturn

0003b149: sub plist_count(plist_count_result)
0003b428: plist_count_result :: out u32 = low:32[R0]

00016436:
0001643c: R1 := R0
00016443: R0 := 0
0001644f: #6865 := R1 = 0
00016449: when #6865 goto %00016447
0003b14a: goto %00016ae3

00016ae3:
0003b14b: goto %00016ae5

00016ae5:
00016aeb: R1 := mem[R1 + 0x10, el]:u64
00016af3: R0 := extend:64[31:0[R0]] + 1
00016afe: #7117 := ~R1 = 0
00016af8: when #7117 goto %00016ae5
0003b14c: goto %00016447

00016447:
00016454: call R30 with noreturn

0003b14d: sub plist_del(plist_del_result)
0003b429: plist_del_result :: out u32 = low:32[R0]

0001621e:
00016225: #6795 := R31 - 0x30
0001622a: mem := mem with [#6795, el]:u64 <- R29
0001622f: mem := mem with [#6795 + 8, el]:u64 <- R30
00016233: R31 := #6795
0001623a: R29 := R31
00016242: #6800 := R31 + 0x20
00016247: mem := mem with [#6800, el]:u64 <- R21
0001624c: mem := mem with [#6800 + 8, el]:u64 <- R22
00016254: R22 := R0
00016260: #6805 := R0 = 0
0001625a: when #6805 goto %00016258
0003b14e: goto %00016da8

00016da8:
00016dac: R21 := 0
00016db4: #7217 := R31 + 0x10
00016db9: mem := mem with [#7217, el]:u64 <- R19
00016dbe: mem := mem with [#7217 + 8, el]:u64 <- R20
00016dc6: R19 := R0
00016dcb: goto %00016dc9

00016dc9:
00016dd2: R2 := mem[R19, el]:u64
00016dda: R20 := R19
00016de2: R19 := mem[R19 + 0x10, el]:u64
00016dea: #7230 := 1 + ~R1 + R2
00016dee: NF := 63:63[#7230]
00016df1: VF := 63:63[R2] & 63:63[~R1] & ~63:63[#7230] | ~63:63[R2] &
          ~63:63[~R1] & 63:63[#7230]
00016df4: ZF := #7230 = 0
00016df7: CF := 63:63[R2] & 63:63[~R1] | 63:63[~R1] & ~63:63[#7230] |
          63:63[R2] & ~63:63[#7230]
00016e05: #7235 := ~ZF <> 0
00016dff: when #7235 goto %00016dfd
0003b14f: goto %00016e28

00016e28:
00016e2e: R0 := mem[R20 + 8, el]:u64
00016e3a: #7242 := R0 = 0
00016e34: when #7242 goto %00016e32
0003b150: goto %00016e5f

00016e5f:
00016e62: R30 := 0x493C
00016e64: call @free with return %00016e32

00016e32:
00016e42: R0 := R20
00016e47: R30 := 0x4944
00016e49: call @free with return %00016e4b

00016e4b:
00016e54: #7246 := R21 = 0
00016e4e: when #7246 goto %0001628d
0003b151: goto %00016e57

0001628d:
00016293: R22 := R19
0001629b: R0 := R22
000162a4: R19 := mem[R31 + 0x10, el]:u64
000162a8: R20 := mem[R31 + 0x18, el]:u64
000162b1: R21 := mem[R31 + 0x20, el]:u64
000162b5: R22 := mem[R31 + 0x28, el]:u64
000162bf: R29 := mem[R31, el]:u64
000162c3: R30 := mem[R31 + 8, el]:u64
000162c6: R31 := R31 + 0x30
000162cb: call R30 with noreturn

00016e57:
00016e5d: mem := mem with [R21 + 0x10, el]:u64 <- R19
0003b152: goto %00016e11

00016dfd:
00016e0d: R21 := R20
00016e19: #7239 := R19 = 0
00016e13: when #7239 goto %00016e11
0003b153: goto %00016dc9

00016e11:
00016e22: R19 := mem[R31 + 0x10, el]:u64
00016e26: R20 := mem[R31 + 0x18, el]:u64
0003b154: goto %00016258

00016258:
00016268: R0 := R22
00016271: R21 := mem[R31 + 0x20, el]:u64
00016275: R22 := mem[R31 + 0x28, el]:u64
0001627f: R29 := mem[R31, el]:u64
00016283: R30 := mem[R31 + 8, el]:u64
00016286: R31 := R31 + 0x30
0001628b: call R30 with noreturn

0003b155: sub plist_dump(plist_dump_result)
0003b42a: plist_dump_result :: out u32 = low:32[R0]

0001632b:
00016335: #6833 := R0 = 0
0001632f: when #6833 goto %0001632d
0003b156: goto %00016cfc

0001632d:
0001633a: call R30 with noreturn

00016cfc:
00016d03: #7196 := R31 - 0x20
00016d08: mem := mem with [#7196, el]:u64 <- R29
00016d0d: mem := mem with [#7196 + 8, el]:u64 <- R30
00016d11: R31 := #7196
00016d18: R29 := R31
00016d20: #7201 := R31 + 0x10
00016d25: mem := mem with [#7201, el]:u64 <- R19
00016d2a: mem := mem with [#7201 + 8, el]:u64 <- R20
00016d30: R20 := 0x11000
00016d38: R19 := R0
00016d3f: R20 := R20 + 0x6B8
0003b157: goto %00016d43

00016d43:
00016d4a: R2 := mem[R19, el]:u64
00016d4e: R3 := mem[R19 + 8, el]:u64
00016d56: R1 := R20
00016d5d: R0 := 1
00016d62: R30 := 0x49D8
00016d64: call @__printf_chk with return %00016d66

00016d66:
00016d6c: R19 := mem[R19 + 0x10, el]:u64
00016d77: #7211 := ~R19 = 0
00016d71: when #7211 goto %00016d43
0003b158: goto %00016d7a

00016d7a:
00016d81: R19 := mem[R31 + 0x10, el]:u64
00016d85: R20 := mem[R31 + 0x18, el]:u64
00016d8f: R29 := mem[R31, el]:u64
00016d93: R30 := mem[R31 + 8, el]:u64
00016d96: R31 := R31 + 0x20
00016d9b: call R30 with noreturn

0003b159: sub plist_free(plist_free_result)
0003b42b: plist_free_result :: out u32 = low:32[R0]

00016456:
00016460: #6866 := R0 = 0
0001645a: when #6866 goto %00016458
0003b15a: goto %000169fb

00016458:
00016466: R0 := 0
0001646b: call R30 with noreturn

000169fb:
00016a02: #7083 := R31 - 0x20
00016a07: mem := mem with [#7083, el]:u64 <- R29
00016a0c: mem := mem with [#7083 + 8, el]:u64 <- R30
00016a10: R31 := #7083
00016a17: R29 := R31
00016a1f: #7088 := R31 + 0x10
00016a24: mem := mem with [#7088, el]:u64 <- R19
00016a29: mem := mem with [#7088 + 8, el]:u64 <- R20
00016a31: R19 := R0
00016a39: R0 := R19
00016a42: R1 := mem[R19 + 8, el]:u64
00016a46: R20 := mem[R19 + 0x10, el]:u64
00016a52: #7097 := R1 = 0
00016a4c: when #7097 goto %00016a4a
0003b15b: goto %00016a86

00016a86:
00016a96: R0 := R1
00016a9b: R30 := 0x4B68
00016a9d: call @free with return %00016a9f

00016a9f:
00016aa5: R0 := R19
00016aaa: R30 := 0x4B70
00016aac: call @free with return %00016aae

00016aae:
00016ab8: #7113 := R20 = 0
00016ab2: when #7113 goto %00016ab0
0003b15c: goto %00016a5d

00016a5d:
00016a6d: R19 := R20
00016a75: R0 := R19
00016a7e: R1 := mem[R19 + 8, el]:u64
00016a82: R20 := mem[R19 + 0x10, el]:u64
00016a8e: #7106 := ~R1 = 0
00016a88: when #7106 goto %00016a86
0003b15d: goto %00016a4a

00016a4a:
00016a57: R30 := 0x4B88
00016a59: call @free with return %00016a5b

00016a5b:
00016a65: #7098 := ~R20 = 0
00016a5f: when #7098 goto %00016a5d
0003b15e: goto %00016ab0

00016ab0:
00016abe: R0 := 0
00016ac7: R19 := mem[R31 + 0x10, el]:u64
00016acb: R20 := mem[R31 + 0x18, el]:u64
00016ad5: R29 := mem[R31, el]:u64
00016ad9: R30 := mem[R31 + 8, el]:u64
00016adc: R31 := R31 + 0x20
00016ae1: call R30 with noreturn

0003b15f: sub plist_get(plist_get_result)
0003b42c: plist_get_result :: out u32 = low:32[R0]

0001633c:
00016346: #6834 := R0 = 0
00016340: when #6834 goto %0001633e
0003b160: goto %00016ca5

0001633e:
0001634c: R0 := 0
00016351: call R30 with noreturn

00016ca5:
00016caa: R2 := extend:64[31:0[R1]]
00016caf: goto %00016cad

00016cad:
00016cb6: R1 := mem[R0, el]:u64
00016cbe: #7184 := 1 + ~R2 + R1
00016cc2: NF := 63:63[#7184]
00016cc5: VF := 63:63[R1] & 63:63[~R2] & ~63:63[#7184] | ~63:63[R1] &
          ~63:63[~R2] & 63:63[#7184]
00016cc8: ZF := #7184 = 0
00016ccb: CF := 63:63[R1] & 63:63[~R2] | 63:63[~R2] & ~63:63[#7184] |
          63:63[R1] & ~63:63[#7184]
00016cd9: #7189 := ~ZF <> 0
00016cd3: when #7189 goto %00016cd1
0003b161: goto %00016cf4

00016cf4:
00016cfa: R0 := mem[R0 + 8, el]:u64
0003b162: goto %00016ce5

00016cd1:
00016ce1: R0 := mem[R0 + 0x10, el]:u64
00016ced: #7191 := R0 = 0
00016ce7: when #7191 goto %00016ce5
0003b163: goto %00016cad

00016ce5:
00016cf2: call R30 with noreturn

0003b164: sub plist_in(plist_in_result)
0003b42d: plist_in_result :: out u32 = low:32[R0]

000162cd:
000162d7: #6820 := ~R0 = 0
000162d1: when #6820 goto %000162cf
0003b165: goto %00016da4

000162cf:
000162df: R2 := mem[R0, el]:u64
000162e7: #6825 := 1 + ~R1 + R2
000162eb: NF := 63:63[#6825]
000162ee: VF := 63:63[R2] & 63:63[~R1] & ~63:63[#6825] | ~63:63[R2] &
          ~63:63[~R1] & 63:63[#6825]
000162f1: ZF := #6825 = 0
000162f4: CF := 63:63[R2] & 63:63[~R1] | 63:63[~R1] & ~63:63[#6825] |
          63:63[R2] & ~63:63[#6825]
00016302: #6830 := ~ZF <> 0
000162fc: when #6830 goto %000162fa
0003b166: goto %00016d9d

00016d9d:
00016da2: R0 := 1
0003b167: goto %0001630e

000162fa:
0001630a: R0 := mem[R0 + 0x10, el]:u64
00016316: #6832 := R0 = 0
00016310: when #6832 goto %0001630e
0003b168: goto %000162cf

0001630e:
0001631b: call R30 with noreturn

00016da4:
00016da6: goto %0001631d

0001631d:
00016322: R0 := 0
00016327: call R30 with noreturn

0003b169: sub plist_pop(plist_pop_result)
0003b42e: plist_pop_result :: out u32 = low:32[R0]

00016353:
0001635a: #6838 := R31 - 0x50
0001635f: mem := mem with [#6838, el]:u64 <- R29
00016364: mem := mem with [#6838 + 8, el]:u64 <- R30
00016368: R31 := #6838
0001636f: R29 := R31
00016377: #6843 := R31 + 0x20
0001637c: mem := mem with [#6843, el]:u64 <- R21
00016381: mem := mem with [#6843 + 8, el]:u64 <- R22
0001638d: #6845 := R0 = 0
00016387: when #6845 goto %00016385
0003b16a: goto %00016b01

00016b01:
00016b07: #7121 := R31 + 0x10
00016b0c: mem := mem with [#7121, el]:u64 <- R19
00016b11: mem := mem with [#7121 + 8, el]:u64 <- R20
00016b19: R19 := mem[R0, el]:u64
00016b21: #7127 := R31 + 0x30
00016b26: mem := mem with [#7127, el]:u64 <- R23
00016b2b: mem := mem with [#7127 + 8, el]:u64 <- R24
00016b33: R24 := R0
00016b3b: mem := mem with [R31 + 0x40, el]:u64 <- R25
00016b43: R25 := R1
00016b4e: #7135 := R19 = 0
00016b48: when #7135 goto %00016410
0003b16b: goto %00016b51

00016410:
00016417: R19 := mem[R31 + 0x10, el]:u64
0001641b: R20 := mem[R31 + 0x18, el]:u64
00016424: R23 := mem[R31 + 0x30, el]:u64
00016428: R24 := mem[R31 + 0x38, el]:u64
00016430: R25 := mem[R31 + 0x40, el]:u64
00016434: goto %00016385

00016b51:
0003b16c: goto %00016b53

00016b53:
00016b5a: R20 := mem[R19, el]:u64
00016b5e: R23 := mem[R19 + 8, el]:u64
00016b66: R21 := mem[R19 + 0x10, el]:u64
00016b6f: R0 := 31:0[R20]
00016b78: R22 := 31:0[R20]
00016b7d: R30 := 0x4A64
00016b7f: call @so_closed with return %00016b81

00016b81:
00016b8b: #7144 := ~31:0[R0] = 0
00016b85: when #7144 goto %00016b83
0003b16d: goto %00016c2c

00016b83:
00016b94: R0 := 31:0[R20]
00016b99: R30 := 0x4AA0
00016b9b: call @close with return %00016b9d

00016b9d:
00016ba3: R2 := mem[R19 + 8, el]:u64
00016bab: R0 := R19
00016bb7: #7152 := R2 = 0
00016bb1: when #7152 goto %00016baf
0003b16e: goto %00016c02

00016baf:
00016bbc: R30 := 0x4ACC
00016bbe: call @free with return %00016bc0

00016bc0:
00016bca: #7153 := ~R21 = 0
00016bc4: when #7153 goto %00016bc2
0003b16f: goto %00016bd8

00016c02:
00016c08: R0 := R2
00016c0d: R30 := 0x4AB4
00016c0f: call @free with return %00016c11

00016c11:
00016c17: R0 := R19
00016c1c: R30 := 0x4ABC
00016c1e: call @free with return %00016c20

00016c20:
00016c29: #7166 := R21 = 0
00016c23: when #7166 goto %00016bd8
0003b170: goto %00016bc2

00016bd8:
00016bdf: R19 := mem[R31 + 0x10, el]:u64
00016be3: R20 := mem[R31 + 0x18, el]:u64
00016beb: R25 := mem[R31 + 0x40, el]:u64
00016bf3: mem := mem with [R24, el]:u64 <- 0
00016bfc: R23 := mem[R31 + 0x30, el]:u64
00016c00: R24 := mem[R31 + 0x38, el]:u64
0003b171: goto %00016385

00016385:
00016394: R22 := 0
0001639d: R0 := 31:0[R22]
000163a6: R21 := mem[R31 + 0x20, el]:u64
000163aa: R22 := mem[R31 + 0x28, el]:u64
000163b4: R29 := mem[R31, el]:u64
000163b8: R30 := mem[R31 + 8, el]:u64
000163bb: R31 := R31 + 0x50
000163c0: call R30 with noreturn

00016bc2:
00016bd2: R19 := R21
00016bd6: goto %00016b53

00016c2c:
00016c32: R0 := R19
00016c37: R30 := 0x4A70
00016c39: call @free with return %00016c3b

00016c3b:
00016c41: mem := mem with [R24, el]:u64 <- R21
00016c4c: #7170 := R25 = 0
00016c46: when #7170 goto %000163c2
0003b172: goto %00016c4f

000163c2:
000163c9: R0 := 31:0[R22]
000163d2: R19 := mem[R31 + 0x10, el]:u64
000163d6: R20 := mem[R31 + 0x18, el]:u64
000163df: R21 := mem[R31 + 0x20, el]:u64
000163e3: R22 := mem[R31 + 0x28, el]:u64
000163ec: R23 := mem[R31 + 0x30, el]:u64
000163f0: R24 := mem[R31 + 0x38, el]:u64
000163f8: R25 := mem[R31 + 0x40, el]:u64
00016402: R29 := mem[R31, el]:u64
00016406: R30 := mem[R31 + 8, el]:u64
00016409: R31 := R31 + 0x50
0001640e: call R30 with noreturn

00016c4f:
00016c56: R19 := mem[R31 + 0x10, el]:u64
00016c5a: R20 := mem[R31 + 0x18, el]:u64
00016c62: mem := mem with [R25, el]:u64 <- R23
00016c6b: R0 := 31:0[R22]
00016c74: R21 := mem[R31 + 0x20, el]:u64
00016c78: R22 := mem[R31 + 0x28, el]:u64
00016c81: R23 := mem[R31 + 0x30, el]:u64
00016c85: R24 := mem[R31 + 0x38, el]:u64
00016c8d: R25 := mem[R31 + 0x40, el]:u64
00016c97: R29 := mem[R31, el]:u64
00016c9b: R30 := mem[R31 + 8, el]:u64
00016c9e: R31 := R31 + 0x50
00016ca3: call R30 with noreturn

0003b173: sub prepare_http_connect(prepare_http_connect_result)
0003b42f: prepare_http_connect_result :: out u32 = low:32[R0]

000219ba:
000219c1: #14236 := R31 - 0x50
000219c6: mem := mem with [#14236, el]:u64 <- R29
000219cb: mem := mem with [#14236 + 8, el]:u64 <- R30
000219cf: R31 := #14236
000219d6: #14238 := extend:64[31:0[R0]]
000219da: NF := 63:63[#14238]
000219dd: VF := 31:31[R0] & ~63:63[#14238]
000219e0: ZF := #14238 = 0
000219e3: CF := 31:31[R0] | 31:31[R0] & ~63:63[#14238] | ~63:63[#14238]
00021a0c: #14240 := ~ZF <> 0
00021a0d: goto %00021a04

00021a04:
00021a06: when #14240 goto %000219ec
00021a07: goto %000219f8

000219f8:
000219f9: NF := 0
000219fc: ZF := 1
000219ff: CF := 0
00021a02: VF := 0
00021a09: goto %00021a05

000219ec:
000219ed: NF := 63:63[R2 + 0]
000219f0: VF := 63:63[R2] & ~63:63[R2 + 0]
000219f3: ZF := R2 + 0 = 0
000219f6: CF := 63:63[R2] | ~63:63[R2 + 0] | 63:63[R2] & ~63:63[R2 + 0]
00021a08: goto %00021a05

00021a05:
00021a15: R29 := R31
00021a1d: #14245 := R31 + 0x10
00021a22: mem := mem with [#14245, el]:u64 <- R19
00021a27: mem := mem with [#14245 + 8, el]:u64 <- R20
00021a2e: R19 := 0
00021a36: mem := mem with [R31 + 0x4C, el]:u32 <- 31:0[R0]
00021a42: #14248 := ZF
00021a3c: when #14248 goto %00021a3a
0003b174: goto %000298cd

000298cd:
000298d3: #18301 := R31 + 0x20
000298d8: mem := mem with [#18301, el]:u64 <- R21
000298dd: mem := mem with [#18301 + 8, el]:u64 <- R22
000298e4: R19 := 0
000298ec: R21 := R2
000298f5: R0 := pad:32[mem[R2]]
00029900: #18306 := ~31:0[R0] = 0
000298fa: when #18306 goto %00021a70
0003b175: goto %00029903

00021a70:
00021a76: #14257 := R31 + 0x30
00021a7b: mem := mem with [#14257, el]:u64 <- R23
00021a80: mem := mem with [#14257 + 8, el]:u64 <- R24
00021a88: R23 := R1
00021a8d: R30 := 0xDFF4
00021a8f: call @new_rr_data with return %00021a91

00021a91:
00021a97: R20 := R0
00021a9e: R19 := 1
00021aa3: R30 := 0xE000
00021aa5: call @new_rr_data with return %00021aa7

00021aa7:
00021aad: R22 := R0
00021ab3: R0 := 0x12000
00021aba: R0 := R0 + 0xF00
00021ac2: mem := mem with [R20, el]:u32 <- 31:0[R19]
00021ac7: R30 := 0xE014
00021ac9: call @strdup with return %00021acb

00021acb:
00021ad1: mem := mem with [R20 + 0x28, el]:u64 <- R0
00021ad9: R0 := R21
00021ade: R30 := 0xE020
00021ae0: call @strdup with return %00021ae2

00021ae2:
00021ae8: mem := mem with [R20 + 0x30, el]:u64 <- R0
00021aee: R0 := 0x12000
00021af5: R0 := R0 + 0xFF8
00021afa: R30 := 0xE030
00021afc: call @strdup with return %00021afe

00021afe:
00021b04: R1 := R0
00021b0c: R0 := mem[R20 + 8, el]:u64
00021b14: mem := mem with [R20 + 0x48, el]:u64 <- R1
00021b1d: R3 := 31:0[R19]
00021b23: R2 := 0x12000
00021b29: R1 := 0x12000
00021b30: R2 := R2 + 0xE30
00021b37: R1 := R1 + 0xE40
00021b3c: R30 := 0xE054
00021b3e: call @hlist_mod with return %00021b40

00021b40:
00021b44: R1 := 0x27000
00021b4c: mem := mem with [R20 + 8, el]:u64 <- R0
00021b54: R1 := mem[R1 + 0xF50, el]:u64
00021b5c: R19 := mem[R1, el]:u64
00021b68: #14280 := R19 = 0
00021b62: when #14280 goto %00021b60
0003b176: goto %00029896

00029896:
0002989d: R1 := mem[R19, el]:u64
000298a1: R2 := mem[R19 + 8, el]:u64
000298a8: R3 := 1
000298ad: R30 := 0xE074
000298af: call @hlist_mod with return %000298b1

000298b1:
000298b7: R19 := mem[R19 + 0x18, el]:u64
000298bf: mem := mem with [R20 + 8, el]:u64 <- R0
000298ca: #18297 := ~R19 = 0
000298c4: when #18297 goto %00029896
0003b177: goto %00021b60

00021b60:
00021b6e: R24 := 0x27000
00021b76: R0 := mem[R24 + 0xF78, el]:u64
00021b7f: R0 := mem[R0, el]:u32
00021b8b: #14283 := ~31:0[R0] = 0
00021b85: when #14283 goto %00021b83
0003b178: goto %00021ba9

00021b83:
00021b91: R1 := 0x13000
00021b98: R0 := 1
00021b9f: R1 := R1 + 8
00021ba4: R30 := 0xE1B0
00021ba6: call @__printf_chk with return %00021ba8

00021ba8:
00021bab: goto %00021ba9

00021ba9:
00021bb2: R3 := R23
00021bba: R2 := R22
00021bc2: R1 := R20
00021bc9: R0 := R31 + 0x4C
00021bce: R30 := 0xE0A4
00021bd0: call @proxy_authenticate with return %00021bd2

00021bd2:
00021bd9: R19 := 31:0[R0]
00021be5: #14296 := 31:0[R0] = 0
00021bdf: when #14296 goto %00021bdd
0003b179: goto %00029847

00021bdd:
00021beb: R2 := 0x13000
00021bf2: R1 := 1
00021bf9: R2 := R2 + 0xF0
00021c00: R0 := 3
00021c05: R30 := 0xE19C
00021c07: call @__syslog_chk with return %00021c09

00021c09:
00021c0c: goto %00021c0a

00029847:
0002984e: R0 := mem[R22 + 0x10, el]:u32
00029855: #18289 := 0xFFFFFFFFFFFFFE69 + extend:64[31:0[R0]]
00029859: NF := 63:63[#18289]
0002985c: VF := 31:31[R0] & ~63:63[#18289]
0002985f: ZF := #18289 = 0
00029862: CF := 31:31[R0] | 31:31[R0] & ~63:63[#18289] | ~63:63[#18289]
00029870: #18291 := ZF
0002986a: when #18291 goto %00021c71
0003b17a: goto %00029873

00021c71:
00021c77: R0 := mem[R24 + 0xF78, el]:u64
00021c80: R0 := mem[R0, el]:u32
00021c8c: #14312 := ~31:0[R0] = 0
00021c86: when #14312 goto %00021c84
0003b17b: goto %00021cb9

00021c84:
00021c92: R1 := 0x13000
00021c99: R0 := 1
00021ca0: R1 := R1 + 0x28
00021ca5: R30 := 0xE1EC
00021ca7: call @__printf_chk with return %00021ca9

00021ca9:
00021caf: R0 := mem[R20 + 8, el]:u64
00021cb4: R30 := 0xE1F4
00021cb6: call @hlist_dump with return %00021cb8

00021cb8:
00021cbb: goto %00021cb9

00021cb9:
00021cc3: R0 := mem[R31 + 0x4C, el]:u32
00021ccb: R1 := R20
00021cd0: R30 := 0xE11C
00021cd2: call @headers_send with return %00021cd4

00021cd4:
00021cdb: R19 := 31:0[R0]
00021ce7: #14321 := 31:0[R0] = 0
00021ce1: when #14321 goto %00021cdf
0003b17c: goto %00029638

00021cdf:
00021ced: R1 := 0x13000
00021cf4: R0 := 1
00021cfb: R1 := R1 + 0x40
00021d00: R30 := 0xE258
00021d02: call @__printf_chk with return %00021d04

00021d04:
00021d06: goto %00021c0a

00029638:
0002963e: R0 := mem[R24 + 0xF78, el]:u64
00029647: R0 := mem[R0, el]:u32
00029653: #18249 := ~31:0[R0] = 0
0002964d: when #18249 goto %0002964b
0003b17d: goto %00029671

0002964b:
00029659: R1 := 0x13000
00029660: R0 := 1
00029667: R1 := R1 + 0x60
0002966c: R30 := 0xE244
0002966e: call @__printf_chk with return %00029670

00029670:
00029673: goto %00029671

00029671:
0002967a: R0 := R22
0002967f: R30 := 0xE138
00029681: call @reset_rr_data with return %00029683

00029683:
0002968a: R0 := mem[R31 + 0x4C, el]:u32
00029692: R1 := R22
00029697: R30 := 0xE144
00029699: call @headers_recv with return %0002969b

0002969b:
000296a5: #18257 := 31:0[R0] = 0
0002969f: when #18257 goto %0002969d
0003b17e: goto %000296ea

0002969d:
000296ad: R24 := mem[R24 + 0xF78, el]:u64
000296b6: R19 := mem[R24, el]:u32
000296c1: #18260 := 31:0[R19] = 0
000296bb: when #18260 goto %00021c0a
0003b17f: goto %000296c4

000296c4:
000296c8: R1 := 0x13000
000296cf: R19 := 0
000296d6: R1 := R1 + 0x80
000296dd: R0 := 1
000296e2: R30 := 0xE230
000296e4: call @__printf_chk with return %000296e6

000296e6:
000296e8: goto %00021c0a

000296ea:
000296f0: R0 := mem[R24 + 0xF78, el]:u64
000296f9: R0 := mem[R0, el]:u32
00029705: #18263 := ~31:0[R0] = 0
000296ff: when #18263 goto %000296fd
0003b180: goto %0002981b

000296fd:
0002970d: R0 := mem[R22 + 8, el]:u64
00029712: R30 := 0xE1BC
00029714: call @hlist_dump with return %00029716

00029716:
0002971d: R0 := mem[R22 + 0x10, el]:u32
00029724: #18266 := 0xFFFFFFFFFFFFFF38 + extend:64[31:0[R0]]
00029728: NF := 63:63[#18266]
0002972b: VF := 31:31[R0] & ~63:63[#18266]
0002972e: ZF := #18266 = 0
00029731: CF := 31:31[R0] | 31:31[R0] & ~63:63[#18266] | ~63:63[#18266]
00029740: #18268 := ~ZF <> 0
0002973a: when #18268 goto %00029738
0003b181: goto %000297cb

0002981b:
00029822: R0 := mem[R22 + 0x10, el]:u32
00029829: #18285 := 0xFFFFFFFFFFFFFF38 + extend:64[31:0[R0]]
0002982d: NF := 63:63[#18285]
00029830: VF := 31:31[R0] & ~63:63[#18285]
00029833: ZF := #18285 = 0
00029836: CF := 31:31[R0] | 31:31[R0] & ~63:63[#18285] | ~63:63[#18285]
00029844: #18287 := ZF
0002983e: when #18287 goto %00029810
0003b182: goto %00029738

00029738:
00029747: #18269 := 0xFFFFFFFFFFFFFE69 + extend:64[31:0[R0]]
0002974b: NF := 63:63[#18269]
0002974e: VF := 31:31[R0] & ~63:63[#18269]
00029751: ZF := #18269 = 0
00029754: CF := 31:31[R0] | 31:31[R0] & ~63:63[#18269] | ~63:63[#18269]
00029763: #18271 := ~ZF <> 0
0002975d: when #18271 goto %0002975b
0003b183: goto %00029796

00029796:
0002979c: R3 := R21
000297a2: R2 := 0x13000
000297a9: R1 := 1
000297b0: R2 := R2 + 0xA0
000297b7: R0 := 3
000297be: R19 := 0
000297c3: R30 := 0xE184
000297c5: call @__syslog_chk with return %000297c7

000297c7:
000297c9: goto %00021c0a

00029873:
00029878: #18292 := 0xFFFFFFFFFFFFFF38 + extend:64[31:0[R0]]
0002987c: NF := 63:63[#18292]
0002987f: VF := 31:31[R0] & ~63:63[#18292]
00029882: ZF := #18292 = 0
00029885: CF := 31:31[R0] | 31:31[R0] & ~63:63[#18292] | ~63:63[#18292]
00029893: #18294 := ZF
0002988d: when #18294 goto %000297cb
0003b184: goto %0002975b

000297cb:
000297d1: R24 := mem[R24 + 0xF78, el]:u64
000297da: R0 := mem[R24, el]:u32
000297e6: #18280 := ~31:0[R0] = 0
000297e0: when #18280 goto %000297de
0003b185: goto %00029810

000297de:
000297ec: R1 := 0x12000
000297f3: R0 := 1
000297fa: R1 := R1 + 0xF08
00029803: R19 := 31:0[R0]
00029808: R30 := 0xE20C
0002980a: call @__printf_chk with return %0002980c

0002980c:
0002980e: goto %00021c0a

00029810:
00029815: R19 := 1
00029819: goto %00021c0a

0002975b:
00029769: R2 := 0x13000
00029771: R3 := R21
00029778: R2 := R2 + 0xC8
0002977f: R1 := 1
00029786: R0 := 3
0002978d: R19 := 0
00029792: R30 := 0xE0DC
00029794: call @__syslog_chk with return %00021c0a

00021c0a:
00021c13: R0 := R20
00021c18: R30 := 0xE0E4
00021c1a: call @free_rr_data with return %00021c1c

00021c1c:
00021c22: R0 := R22
00021c27: R30 := 0xE0EC
00021c29: call @free_rr_data with return %00021c2b

00021c2b:
00021c32: R0 := 31:0[R19]
00021c3b: R19 := mem[R31 + 0x10, el]:u64
00021c3f: R20 := mem[R31 + 0x18, el]:u64
00021c48: R21 := mem[R31 + 0x20, el]:u64
00021c4c: R22 := mem[R31 + 0x28, el]:u64
00021c55: R23 := mem[R31 + 0x30, el]:u64
00021c59: R24 := mem[R31 + 0x38, el]:u64
00021c63: R29 := mem[R31, el]:u64
00021c67: R30 := mem[R31 + 8, el]:u64
00021c6a: R31 := R31 + 0x50
00021c6f: call R30 with noreturn

00029903:
0002990a: R21 := mem[R31 + 0x20, el]:u64
0002990e: R22 := mem[R31 + 0x28, el]:u64
0003b186: goto %00021a3a

00021a3a:
00021a4b: R0 := 31:0[R19]
00021a54: R19 := mem[R31 + 0x10, el]:u64
00021a58: R20 := mem[R31 + 0x18, el]:u64
00021a62: R29 := mem[R31, el]:u64
00021a66: R30 := mem[R31 + 8, el]:u64
00021a69: R31 := R31 + 0x50
00021a6e: call R30 with noreturn

0003b187: sub printmem(printmem_result)
0003b430: printmem_result :: out u32 = low:32[R0]

0000fb1d:
0000fb24: #353 := R31 - 0x30
0000fb29: mem := mem with [#353, el]:u64 <- R29
0000fb2e: mem := mem with [#353 + 8, el]:u64 <- R30
0000fb32: R31 := #353
0000fb39: R29 := R31
0000fb41: #358 := R31 + 0x10
0000fb46: mem := mem with [#358, el]:u64 <- R19
0000fb4b: mem := mem with [#358 + 8, el]:u64 <- R20
0000fb52: R20 := R1 << 1
0000fb5a: R19 := R0
0000fb62: #368 := R31 + 0x20
0000fb67: mem := mem with [#368, el]:u64 <- R21
0000fb6c: mem := mem with [#368 + 8, el]:u64 <- R22
0000fb74: R21 := R1
0000fb7d: R22 := 31:0[R2]
0000fb83: R1 := 1
0000fb8b: R0 := R20 + R1
0000fb90: R30 := 0x5B14
0000fb92: call @calloc with return %0000fb94

0000fb94:
0000fb9e: #379 := R21 = 0
0000fb98: when #379 goto %0000fb96
0003b188: goto %0002d0a2

0002d0a2:
0002d0a7: R6 := 7
0002d0b0: R6 := 31:0[R6] - 31:0[R22]
0002d0b6: R4 := 0x28000
0002d0be: R3 := R19
0002d0c6: R7 := R20 + R0
0002d0ce: R6 := 31:0[R6] & 0xFF
0002d0d6: R2 := R0
0002d0dd: R4 := R4 + 0x10
0003b189: goto %0002d0df

0002d0df:
0002d0e7: R1 := pad:32[mem[R3]]
0002d0ea: R3 := R3 + 1
0002d0f1: R2 := R2 + 2
0002d0fa: R1 := 31:0[R1] ^ 31:0[R6]
0002d102: R5 := 31:0[R1] & 0xF
0002d10a: R1 := pad:64[31:4[R1]]
0002d112: #19938 := extend:64[31:0[R5]]
0002d118: R5 := pad:32[mem[R4 + #19938]]
0002d120: #19939 := extend:64[31:0[R1]]
0002d126: R1 := pad:32[mem[R4 + #19939]]
0002d12e: mem := mem with [R2 - 2] <- low:8[31:0[R1]]
0002d136: mem := mem with [R2 - 1] <- low:8[31:0[R5]]
0002d13e: #19943 := 1 + ~R2 + R7
0002d142: NF := 63:63[#19943]
0002d145: VF := 63:63[R7] & 63:63[~R2] & ~63:63[#19943] | ~63:63[R7] &
          ~63:63[~R2] & 63:63[#19943]
0002d148: ZF := #19943 = 0
0002d14b: CF := 63:63[R7] & 63:63[~R2] | 63:63[~R2] & ~63:63[#19943] |
          63:63[R7] & ~63:63[#19943]
0002d158: #19948 := ~ZF <> 0
0002d152: when #19948 goto %0002d0df
0003b18a: goto %0000fb96

0000fb96:
0000fba7: R19 := mem[R31 + 0x10, el]:u64
0000fbab: R20 := mem[R31 + 0x18, el]:u64
0000fbb4: R21 := mem[R31 + 0x20, el]:u64
0000fbb8: R22 := mem[R31 + 0x28, el]:u64
0000fbc2: R29 := mem[R31, el]:u64
0000fbc6: R30 := mem[R31 + 8, el]:u64
0000fbc9: R31 := R31 + 0x30
0000fbce: call R30 with noreturn

0003b18b: sub proxy_authenticate(proxy_authenticate_result)
0003b431: proxy_authenticate_result :: out u32 = low:32[R0]

00021076:
0002107d: #13940 := R31 - 0x80
00021082: mem := mem with [#13940, el]:u64 <- R29
00021087: mem := mem with [#13940 + 8, el]:u64 <- R30
0002108b: R31 := #13940
00021092: R29 := R31
0002109a: #13945 := R31 + 0x30
0002109f: mem := mem with [#13945, el]:u64 <- R23
000210a4: mem := mem with [#13945 + 8, el]:u64 <- R24
000210aa: R24 := 0x27000
000210b2: R23 := R0
000210ba: R4 := mem[R24 + 0xFB8, el]:u64
000210c2: #13954 := R31 + 0x10
000210c7: mem := mem with [#13954, el]:u64 <- R19
000210cc: mem := mem with [#13954 + 8, el]:u64 <- R20
000210d4: R20 := R1
000210dc: R0 := mem[R4, el]:u64
000210e4: mem := mem with [R31 + 0x78, el]:u64 <- R0
000210ea: R0 := 0
000210f2: #13963 := R31 + 0x20
000210f7: mem := mem with [#13963, el]:u64 <- R21
000210fc: mem := mem with [#13963 + 8, el]:u64 <- R22
00021102: R0 := 0x1000
0002110a: R22 := R2
00021112: #13971 := R31 + 0x40
00021117: mem := mem with [#13971, el]:u64 <- R25
0002111c: mem := mem with [#13971 + 8, el]:u64 <- R26
00021124: R26 := R3
0002112c: #13979 := R31 + 0x50
00021131: mem := mem with [#13979, el]:u64 <- R27
00021136: mem := mem with [#13979 + 8, el]:u64 <- R28
0002113b: R30 := 0xD040
0002113d: call @new with return %0002113f

0002113f:
00021143: R1 := 0x12000
0002114a: R2 := R1 + 0xB50
00021152: R21 := R0
00021159: R27 := R31 + 0x70
00021161: R1 := R26
00021169: R0 := R27
00021172: R3 := mem[R2, el]:u32
0002117b: R2 := mem[R2 + 4, el]:u16
00021183: mem := mem with [R21, el]:u32 <- 31:0[R3]
0002118b: mem := mem with [R21 + 4, el]:u16 <- low:16[31:0[R2]]
00021190: R30 := 0xD06C
00021192: call @ntlm_request with return %00021194

00021194:
0002119e: #13992 := ~31:0[R0] = 0
00021198: when #13992 goto %00021196
0003b18c: goto %000211d3

00021196:
000211a6: R1 := mem[R31 + 0x70, el]:u64
000211ad: R2 := extend:64[31:0[R0]]
000211b3: R3 := 0xFFB
000211ba: R0 := R21 + 5
000211bf: R30 := 0xD3C4
000211c1: call @to_base64 with return %000211c3

000211c3:
000211c9: R0 := mem[R31 + 0x70, el]:u64
000211ce: R30 := 0xD3CC
000211d0: call @free with return %000211d2

000211d2:
000211d5: goto %000211d3

000211d3:
000211dc: R0 := R20
000211e1: R30 := 0xD078
000211e3: call @dup_rr_data with return %000211e5

000211e5:
000211eb: R19 := R0
000211f1: R0 := 0x12000
000211f8: R1 := R0 + 0xB58
00021200: R2 := R21
00021207: R3 := 1
0002120f: R0 := mem[R19 + 8, el]:u64
00021214: R30 := 0xD094
00021216: call @hlist_mod with return %00021218

00021218:
0002121e: mem := mem with [R19 + 8, el]:u64 <- R0
0002122a: #14006 := R20 = 0
00021224: when #14006 goto %00021222
0003b18d: goto %0002b05f

00021222:
00021232: R1 := R22
00021238: R0 := 0
0002123d: R30 := 0xD414
0002123f: call @http_has_body with return %00021241

00021241:
0002124b: #14010 := ~R0 = 0
00021245: when #14010 goto %00021243
0003b18e: goto %0002b04d

00021243:
00021251: R25 := 0x27000
00021259: R0 := mem[R25 + 0xF78, el]:u64
00021262: R0 := mem[R0, el]:u32
0002126e: #14013 := ~31:0[R0] = 0
00021268: when #14013 goto %00021266
0003b18f: goto %0002128c

00021266:
00021274: R1 := 0x12000
0002127b: R0 := 1
00021282: R1 := R1 + 0xCA8
00021287: R30 := 0xD4E8
00021289: call @__printf_chk with return %0002128b

0002128b:
0002128e: goto %0002128c

0002128c:
00021294: R0 := 1
0002129c: mem := mem with [R31 + 0x68, el]:u32 <- 31:0[R0]
000212a1: goto %0002129f

0002b04d:
0002b051: R25 := 0x27000
0002b059: mem := mem with [R31 + 0x68, el]:u32 <- 0
0002b05d: goto %0002129f

0002b05f:
0002b066: R0 := mem[R20, el]:u32
0002b071: #18943 := 31:0[R0] = 0
0002b06b: when #18943 goto %0002aa6f
0003b190: goto %0002b074

0002b074:
0002b07a: R1 := mem[R20 + 0x28, el]:u64
0002b080: R0 := 0x12000
0002b087: R0 := R0 + 0x908
0002b08c: R30 := 0xD0B4
0002b08e: call @strcasecmp with return %0002b090

0002b090:
0002b099: #18945 := ~31:0[R0] = 0
0002b093: when #18945 goto %0002aa6f
0003b191: goto %0002b09c

0002aa6f:
0002aa75: R1 := R22
0002aa7d: R0 := R20
0002aa82: R30 := 0xD0F8
0002aa84: call @http_has_body with return %0002aa86

0002aa86:
0002aa8f: #18812 := ~R0 = 0
0002aa89: when #18812 goto %0002a9ae
0003b192: goto %0002aa92

0002a9ae:
0002a9b2: R25 := 0x27000
0002a9ba: R0 := mem[R25 + 0xF78, el]:u64
0002a9c3: R0 := mem[R0, el]:u32
0002a9cf: #18800 := ~31:0[R0] = 0
0002a9c9: when #18800 goto %0002a9c7
0003b193: goto %0002a9ed

0002aa92:
0002aa99: R0 := mem[R20, el]:u32
0002aa9f: R25 := 0x27000
0002aaa7: mem := mem with [R31 + 0x68, el]:u32 <- 0
0002aab2: #18814 := ~31:0[R0] = 0
0002aaac: when #18814 goto %0002aa14
0003b194: goto %0002aab5

0002aab5:
0003b195: goto %0002129f

0002b09c:
0002b0a0: R25 := 0x27000
0002b0a8: R0 := mem[R25 + 0xF78, el]:u64
0002b0b1: R0 := mem[R0, el]:u32
0002b0bc: #18948 := ~31:0[R0] = 0
0002b0b6: when #18948 goto %0002a9c7
0003b196: goto %0002b0bf

0002a9c7:
0002a9d5: R1 := 0x12000
0002a9dc: R0 := 1
0002a9e3: R1 := R1 + 0xCA8
0002a9e8: R30 := 0xD4A0
0002a9ea: call @__printf_chk with return %0002a9ec

0002a9ec:
0002a9ef: goto %0002a9ed

0002a9ed:
0002a9f5: R0 := 1
0002a9fd: mem := mem with [R31 + 0x68, el]:u32 <- 31:0[R0]
0002aa06: R0 := mem[R20, el]:u32
0002aa11: #18802 := 31:0[R0] = 0
0002aa0b: when #18802 goto %0002129f
0003b197: goto %0002aa14

0002aa14:
0002aa1a: R1 := mem[R20 + 0x28, el]:u64
0002aa20: R0 := 0x12000
0002aa27: R0 := R0 + 0x908
0002aa2c: R30 := 0xD2A8
0002aa2e: call @strcasecmp with return %0002aa30

0002aa30:
0002aa39: #18804 := ~31:0[R0] = 0
0002aa33: when #18804 goto %0002129f
0003b198: goto %0002aa3c

0002aa3c:
0002aa3f: goto %0002aa3d

0002b0bf:
0002b0c4: R0 := 1
0002b0cc: mem := mem with [R31 + 0x68, el]:u32 <- 31:0[R0]
0003b199: goto %0002aa3d

0002aa3d:
0002aa46: R0 := mem[R19 + 0x28, el]:u64
0002aa4b: R30 := 0xD0D8
0002aa4d: call @free with return %0002aa4f

0002aa4f:
0002aa53: R0 := 0x12000
0002aa5a: R0 := R0 + 0x910
0002aa5f: R30 := 0xD0E4
0002aa61: call @strdup with return %0002aa63

0002aa63:
0002aa69: mem := mem with [R19 + 0x28, el]:u64 <- R0
0002aa6d: goto %0002129f

0002129f:
000212a8: R0 := mem[R19 + 8, el]:u64
000212ae: R2 := 0x12000
000212b5: R2 := R2 + 0xB70
000212bc: R3 := 1
000212c2: R1 := 0x12000
000212c9: R1 := R1 + 0x918
000212ce: R30 := 0xD12C
000212d0: call @hlist_mod with return %000212d2

000212d2:
000212d8: mem := mem with [R19 + 8, el]:u64 <- R0
000212de: R1 := 0x12000
000212e5: R1 := R1 + 0x938
000212ea: R30 := 0xD13C
000212ec: call @hlist_del with return %000212ee

000212ee:
000212f4: mem := mem with [R19 + 8, el]:u64 <- R0
000212fc: R1 := mem[R25 + 0xF78, el]:u64
00021305: R0 := mem[R1, el]:u32
00021311: #14017 := ~31:0[R0] = 0
0002130b: when #14017 goto %00021309
0003b19a: goto %0002133e

00021309:
00021317: R1 := 0x12000
0002131e: R0 := 1
00021325: R1 := R1 + 0xB78
0002132a: R30 := 0xD3A4
0002132c: call @__printf_chk with return %0002132e

0002132e:
00021334: R0 := mem[R19 + 8, el]:u64
00021339: R30 := 0xD3AC
0002133b: call @hlist_dump with return %0002133d

0002133d:
00021340: goto %0002133e

0002133e:
00021348: R0 := mem[R23, el]:u32
00021350: R1 := R19
00021355: R30 := 0xD158
00021357: call @headers_send with return %00021359

00021359:
00021360: R28 := 31:0[R0]
0002136c: #14026 := 31:0[R0] = 0
00021366: when #14026 goto %00021364
0003b19b: goto %0002b030

0002b030:
0002b036: R0 := mem[R25 + 0xF78, el]:u64
0002b03f: R0 := mem[R0, el]:u32
0002b04a: #18941 := ~31:0[R0] = 0
0002b044: when #18941 goto %0002af6a
0003b19c: goto %0002af86

0002af6a:
0002af6e: R1 := 0x12000
0002af75: R0 := 1
0002af7c: R1 := R1 + 0xB98
0002af81: R30 := 0xD404
0002af83: call @__printf_chk with return %0002af85

0002af85:
0002af88: goto %0002af86

0002af86:
0002af8f: R0 := R19
0002af9b: #18916 := R22 = 0
0002af95: when #18916 goto %0002af93
0003b19d: goto %0002afee

0002af93:
0002afa0: R30 := 0xD3D4
0002afa2: call @reset_rr_data with return %0002afa4

0002afa4:
0002afab: R0 := mem[R23, el]:u32
0002afb3: R1 := R19
0002afb8: R30 := 0xD3E0
0002afba: call @headers_recv with return %0002afbc

0002afbc:
0002afc3: R28 := 31:0[R0]
0002afcf: #18924 := ~31:0[R0] = 0
0002afc9: when #18924 goto %0002afc7
0003b19e: goto %00021370

0002afee:
0002aff1: R30 := 0xD178
0002aff3: call @free_rr_data with return %0002aff5

0002aff5:
0002affb: R19 := R22
0002b003: R0 := R22
0002b008: R30 := 0xD184
0002b00a: call @reset_rr_data with return %0002b00c

0002b00c:
0002b013: R0 := mem[R23, el]:u32
0002b01b: R1 := R22
0002b020: R30 := 0xD190
0002b022: call @headers_recv with return %0002b024

0002b024:
0002b02d: #18938 := 31:0[R0] = 0
0002b027: when #18938 goto %0002ae9a
0003b19f: goto %0002afc7

0002afc7:
0002afd7: R0 := mem[R25 + 0xF78, el]:u64
0002afe0: R0 := mem[R0, el]:u32
0002afeb: #18927 := ~31:0[R0] = 0
0002afe5: when #18927 goto %0002aeaf
0003b1a0: goto %0002aebf

0002aeaf:
0002aeb5: R0 := mem[R19 + 8, el]:u64
0002aeba: R30 := 0xD434
0002aebc: call @hlist_dump with return %0002aebe

0002aebe:
0002aec1: goto %0002aebf

0002aebf:
0002aec9: R0 := mem[R19 + 0x10, el]:u32
0002aed0: #18900 := 0xFFFFFFFFFFFFFE69 + extend:64[31:0[R0]]
0002aed4: NF := 63:63[#18900]
0002aed7: VF := 31:31[R0] & ~63:63[#18900]
0002aeda: ZF := #18900 = 0
0002aedd: CF := 31:31[R0] | 31:31[R0] & ~63:63[#18900] | ~63:63[#18900]
0002aeeb: #18902 := ZF
0002aee5: when #18902 goto %0002aab7
0003b1a1: goto %0002aeee

0002aab7:
0002aabe: R0 := mem[R23, el]:u32
0002aac6: R1 := R19
0002aacb: R30 := 0xD2BC
0002aacd: call @http_body_drop with return %0002aacf

0002aacf:
0002aad6: R28 := 31:0[R0]
0002aae1: #18822 := 31:0[R0] = 0
0002aadb: when #18822 goto %00021364
0003b1a2: goto %0002aae4

0002aae4:
0002aaea: R0 := mem[R19 + 8, el]:u64
0002aaf0: R1 := 0x12000
0002aaf7: R1 := R1 + 0xBC0
0002aafc: R30 := 0xD2D4
0002aafe: call @hlist_get with return %0002ab00

0002ab00:
0002ab06: mem := mem with [R31 + 0x70, el]:u64 <- R0
0002ab12: #18824 := R0 = 0
0002ab0c: when #18824 goto %0002ab0a
0003b1a3: goto %0002ac7a

0002ab0a:
0002ab18: R2 := 0x12000
0002ab1f: R1 := 1
0002ab26: R2 := R2 + 0xC30
0002ab2d: R0 := 4
0002ab32: R30 := 0xD500
0002ab34: call @__syslog_chk with return %0002ab36

0002ab36:
0002ab39: goto %0002ab37

0002ac7a:
0002ac7d: R30 := 0xD2E0
0002ac7f: call @strlen with return %0002ac81

0002ac81:
0002ac86: R0 := R0 + 6
0002ac8b: R30 := 0xD2E8
0002ac8d: call @new with return %0002ac8f

0002ac8f:
0002ac95: R28 := R0
0002ac9d: R1 := mem[R31 + 0x70, el]:u64
0002aca5: mem := mem with [R31 + 0x68, el]:u64 <- R0
0002acac: R1 := R1 + 5
0002acb1: R30 := 0xD2FC
0002acb3: call @from_base64 with return %0002acb5

0002acb5:
0002acbc: R2 := 31:0[R0]
0002acc3: #18857 := 0xFFFFFFFFFFFFFFE8 + extend:64[31:0[R0]]
0002acc7: NF := 63:63[#18857]
0002acca: VF := 31:31[R0] & ~63:63[#18857]
0002accd: ZF := #18857 = 0
0002acd0: CF := 31:31[R0] | 31:31[R0] & ~63:63[#18857] | ~63:63[#18857]
0002ace0: #18859 := (NF <> VF | ZF) <> 0
0002acda: when #18859 goto %0002ac2b
0003b1a4: goto %0002ace3

0002ac2b:
0002ac2f: R2 := 0x12000
0002ac36: R2 := R2 + 0xC08
0003b1a5: goto %0002ac38

0002ace3:
0002ace9: R0 := R27
0002acf1: R3 := R26
0002acf9: R1 := R28
0002acfe: R30 := 0xD318
0002ad00: call @ntlm_response with return %0002ad02

0002ad02:
0002ad07: #18869 := extend:64[31:0[R0]]
0002ad0b: NF := 63:63[#18869]
0002ad0e: VF := 31:31[R0] & ~63:63[#18869]
0002ad11: ZF := #18869 = 0
0002ad14: CF := 31:31[R0] | 31:31[R0] & ~63:63[#18869] | ~63:63[#18869]
0002ad24: #18871 := (NF <> VF | ZF) <> 0
0002ad1e: when #18871 goto %0002ac69
0003b1a6: goto %0002ad27

0002ac69:
0002ac6d: R2 := 0x12000
0002ac74: R2 := R2 + 0xBD8
0002ac78: goto %0002ac38

0002ac38:
0002ac3d: R1 := 1
0002ac44: R0 := 3
0002ac4d: R28 := 31:0[R1]
0002ac52: R30 := 0xD51C
0002ac54: call @__syslog_chk with return %0002ac56

0002ac56:
0002ac5c: R0 := mem[R31 + 0x68, el]:u64
0002ac61: R30 := 0xD524
0002ac63: call @free with return %0002ac65

0002ac65:
0002ac67: goto %00021364

0002ad27:
0002ad2b: R1 := 0x12000
0002ad32: R1 := R1 + 0xB50
0002ad39: R2 := extend:64[31:0[R0]]
0002ad3f: R3 := 0xFFB
0002ad46: R0 := R21 + 5
0002ad4f: R4 := mem[R1, el]:u32
0002ad58: R1 := mem[R1 + 4, el]:u16
0002ad60: mem := mem with [R21, el]:u32 <- 31:0[R4]
0002ad68: mem := mem with [R21 + 4, el]:u16 <- low:16[31:0[R1]]
0002ad70: R1 := mem[R31 + 0x70, el]:u64
0002ad75: R30 := 0xD34C
0002ad77: call @to_base64 with return %0002ad79

0002ad79:
0002ad7f: R0 := mem[R20 + 8, el]:u64
0002ad87: R2 := R21
0002ad8e: R3 := 1
0002ad94: R1 := 0x12000
0002ad9b: R1 := R1 + 0xB58
0002ada0: R30 := 0xD364
0002ada2: call @hlist_mod with return %0002ada4

0002ada4:
0002adaa: R1 := R0
0002adb2: R0 := mem[R31 + 0x70, el]:u64
0002adba: mem := mem with [R20 + 8, el]:u64 <- R1
0002adbf: R30 := 0xD374
0002adc1: call @free with return %0002adc3

0002adc3:
0002adc9: R0 := R28
0002adce: R30 := 0xD37C
0002add0: call @free with return %0002add2

0002add2:
0003b1a7: goto %0002ab37

0002aeee:
0002aef5: R0 := mem[R31 + 0x68, el]:u32
0002af00: #18904 := 31:0[R0] = 0
0002aefa: when #18904 goto %0002ab37
0003b1a8: goto %0002af03

0002ab37:
0002ab41: R0 := mem[R23, el]:u32
0002ab48: R28 := 1
0002ab4d: R30 := 0xD38C
0002ab4f: call @so_closed with return %0002ab51

0002ab51:
0002ab5a: #18826 := 31:0[R0] = 0
0002ab54: when #18826 goto %00021364
0003b1a9: goto %0002ab5d

0002ab5d:
0002ab60: goto %0002ab5e

0002af03:
0002af09: R0 := mem[R25 + 0xF78, el]:u64
0002af12: R0 := mem[R0, el]:u32
0002af1d: #18907 := 31:0[R0] = 0
0002af17: when #18907 goto %0002ae65
0003b1aa: goto %0002af20

0002af20:
0002af2a: #18908 := R20 = 0
0002af24: when #18908 goto %0002af22
0003b1ab: goto %0002af39

0002af39:
0002af40: R0 := mem[R20, el]:u32
0002af4b: #18910 := ~31:0[R0] = 0
0002af45: when #18910 goto %0002ade1
0003b1ac: goto %0002af22

0002ade1:
0002ade7: R1 := mem[R20 + 0x28, el]:u64
0002aded: R0 := 0x12000
0002adf4: R0 := R0 + 0x908
0002adf9: R30 := 0xD4BC
0002adfb: call @strcasecmp with return %0002adfd

0002adfd:
0002ae02: #18889 := extend:64[31:0[R0]]
0002ae06: NF := 63:63[#18889]
0002ae09: VF := 31:31[R0] & ~63:63[#18889]
0002ae0c: ZF := #18889 = 0
0002ae0f: CF := 31:31[R0] | 31:31[R0] & ~63:63[#18889] | ~63:63[#18889]
0002ae18: R2 := 0x12000
0002ae1e: R0 := 0x12000
0002ae25: R2 := R2 + 0xB30
0002ae2c: R0 := R0 + 0xB40
0002ae42: #18891 := ~ZF <> 0
0002ae43: goto %0002ae3a

0002ae3a:
0002ae3c: when #18891 goto %0002ae34
0002ae3d: goto %0002ae37

0002ae37:
0002ae38: R2 := R0
0002ae3f: goto %0002ae3b

0002ae34:
0002ae35: R2 := R2
0002ae3e: goto %0002ae3b

0002ae3b:
0002ae49: goto %0002ae47

0002af22:
0002af30: R2 := 0x12000
0002af37: R2 := R2 + 0xB30
0003b1ad: goto %0002ae47

0002ae47:
0002ae4e: R1 := 0x12000
0002ae55: R0 := 1
0002ae5c: R1 := R1 + 0xC60
0002ae61: R30 := 0xD1E4
0002ae63: call @__printf_chk with return %0002ae65

0002ae65:
0002ae6e: #18892 := R22 = 0
0002ae68: when #18892 goto %0002abd5
0003b1ae: goto %0002ae71

0002abd5:
0002abdc: R0 := mem[R23, el]:u32
0002abe4: R1 := R19
0002abe9: R30 := 0xD474
0002abeb: call @http_body_drop with return %0002abed

0002abed:
0002abf4: R28 := 31:0[R0]
0002abff: #18842 := 31:0[R0] = 0
0002abf9: when #18842 goto %00021370
0003b1af: goto %0002ac02

0002ac02:
0002ac09: R0 := mem[R23, el]:u32
0002ac0e: R30 := 0xD484
0002ac10: call @so_closed with return %0002ac12

0002ac12:
0002ac1b: #18844 := ~31:0[R0] = 0
0002ac15: when #18844 goto %0002ab5e
0003b1b0: goto %0002ac1e

0002ac1e:
0002ac25: R28 := mem[R31 + 0x68, el]:u32
0002ac29: goto %00021370

0002ae71:
0002ae76: R0 := 0x197
0002ae7e: mem := mem with [R22 + 0x10, el]:u32 <- 31:0[R0]
0002ae86: R1 := R19
0002ae8f: R0 := mem[R23, el]:u32
0002ae94: R30 := 0xD1FC
0002ae96: call @http_body_drop with return %0002ae98

0002ae98:
0002aea2: #18897 := 31:0[R0] = 0
0002ae9c: when #18897 goto %0002ae9a
0003b1b1: goto %0002af4e

0002ae9a:
0002aea9: R28 := 0
0002aead: goto %0002138a

0002af4e:
0002af55: R0 := mem[R23, el]:u32
0002af5a: R30 := 0xD208
0002af5c: call @so_closed with return %0002af5e

0002af5e:
0002af67: #18912 := 31:0[R0] = 0
0002af61: when #18912 goto %0002add4
0003b1b2: goto %0002ab5e

0002add4:
0002addb: R28 := mem[R31 + 0x68, el]:u32
0002addf: goto %0002138a

0002ab5e:
0002ab67: R25 := mem[R25 + 0xF78, el]:u64
0002ab70: R0 := mem[R25, el]:u32
0002ab7c: #18829 := ~31:0[R0] = 0
0002ab76: when #18829 goto %0002ab74
0003b1b3: goto %0002ab9a

0002ab74:
0002ab82: R1 := 0x12000
0002ab89: R0 := 1
0002ab90: R1 := R1 + 0xC88
0002ab95: R30 := 0xD464
0002ab97: call @__printf_chk with return %0002ab99

0002ab99:
0002ab9c: goto %0002ab9a

0002ab9a:
0002aba4: R0 := mem[R23, el]:u32
0002aba9: R30 := 0xD220
0002abab: call @close with return %0002abad

0002abad:
0002abb3: R0 := R26
0002abb8: R30 := 0xD228
0002abba: call @proxy_connect with return %0002abbc

0002abbc:
0002abc2: mem := mem with [R23, el]:u32 <- 31:0[R0]
0002abcb: R0 := ~31:0[R0]
0002abd3: R28 := pad:64[1:1[R0]]
0003b1b4: goto %00021364

00021364:
00021378: #14027 := R22 = 0
00021372: when #14027 goto %00021370
0003b1b5: goto %0002138a

00021370:
00021380: R0 := R19
00021385: R30 := 0xD3F0
00021387: call @free_rr_data with return %00021389

00021389:
0002138c: goto %0002138a

0002138a:
00021393: R0 := R21
00021398: R30 := 0xD240
0002139a: call @free with return %0002139c

0002139c:
000213a2: R24 := mem[R24 + 0xFB8, el]:u64
000213aa: R0 := mem[R31 + 0x78, el]:u64
000213b2: R1 := mem[R24, el]:u64
000213ba: #14040 := 1 + ~R1 + R0
000213be: NF := 63:63[#14040]
000213c1: VF := 63:63[R0] & 63:63[~R1] & ~63:63[#14040] | ~63:63[R0] &
          ~63:63[~R1] & 63:63[#14040]
000213c4: ZF := #14040 = 0
000213c7: CF := 63:63[R0] & 63:63[~R1] | 63:63[~R1] & ~63:63[#14040] |
          63:63[R0] & ~63:63[#14040]
000213cb: R0 := #14040
000213d1: R1 := 0
000213dd: #14045 := ~ZF <> 0
000213d7: when #14045 goto %000213d5
0003b1b6: goto %0002a94e

000213d5:
000213e2: R30 := 0xD538
000213e4: call @__stack_chk_fail with return %0003b1b7

0003b1b7:
0003b1b8: call @forward_request with noreturn

0002a94e:
0002a955: R0 := 31:0[R28]
0002a95e: R19 := mem[R31 + 0x10, el]:u64
0002a962: R20 := mem[R31 + 0x18, el]:u64
0002a96b: R21 := mem[R31 + 0x20, el]:u64
0002a96f: R22 := mem[R31 + 0x28, el]:u64
0002a978: R23 := mem[R31 + 0x30, el]:u64
0002a97c: R24 := mem[R31 + 0x38, el]:u64
0002a985: R25 := mem[R31 + 0x40, el]:u64
0002a989: R26 := mem[R31 + 0x48, el]:u64
0002a992: R27 := mem[R31 + 0x50, el]:u64
0002a996: R28 := mem[R31 + 0x58, el]:u64
0002a9a0: R29 := mem[R31, el]:u64
0002a9a4: R30 := mem[R31 + 8, el]:u64
0002a9a7: R31 := R31 + 0x80
0002a9ac: call R30 with noreturn

0003b1b9: sub proxy_connect(proxy_connect_result)
0003b432: proxy_connect_result :: out u32 = low:32[R0]

00020931:
00020938: #13735 := R31 - 0x70
0002093d: mem := mem with [#13735, el]:u64 <- R29
00020942: mem := mem with [#13735 + 8, el]:u64 <- R30
00020946: R31 := #13735
0002094d: R29 := R31
00020955: #13740 := R31 + 0x40
0002095a: mem := mem with [#13740, el]:u64 <- R25
0002095f: mem := mem with [#13740 + 8, el]:u64 <- R26
00020965: R26 := 0x28000
0002096c: R1 := R26 + 0x4A0
00020974: mem := mem with [R31 + 0x68, el]:u64 <- R0
0002097b: R0 := R1 + 8
00020984: R1 := mem[R26 + 0x4A0, el]:u32
0002098c: #13746 := R31 + 0x10
00020991: mem := mem with [#13746, el]:u64 <- R19
00020996: mem := mem with [#13746 + 8, el]:u64 <- R20
0002099e: #13751 := R31 + 0x20
000209a3: mem := mem with [#13751, el]:u64 <- R21
000209a8: mem := mem with [#13751 + 8, el]:u64 <- R22
000209b0: #13756 := R31 + 0x30
000209b5: mem := mem with [#13756, el]:u64 <- R23
000209ba: mem := mem with [#13756 + 8, el]:u64 <- R24
000209c0: R23 := 0x27000
000209c8: #13761 := R31 + 0x50
000209cd: mem := mem with [#13761, el]:u64 <- R27
000209d2: mem := mem with [#13761 + 8, el]:u64 <- R28
000209da: mem := mem with [R31 + 0x64, el]:u32 <- 31:0[R1]
000209df: R30 := 0xCD3C
000209e2: call @pthread_mutex_lock with return %000209e4

000209e4:
000209eb: R0 := mem[R26 + 0x4A0, el]:u32
000209f7: #13764 := 31:0[R0] = 0
000209f1: when #13764 goto %000209ef
0003b1ba: goto %00020a5e

000209ef:
000209ff: R0 := mem[R23 + 0xFE0, el]:u64
00020a06: R19 := 1
00020a0f: R1 := 31:0[R19]
00020a17: mem := mem with [R26 + 0x4A0, el]:u32 <- 31:0[R19]
00020a1f: R0 := mem[R0, el]:u64
00020a24: R30 := 0xCFD8
00020a26: call @plist_get with return %00020a28

00020a28:
00020a2e: R3 := R0
00020a37: R1 := 31:0[R19]
00020a3d: R2 := 0x12000
00020a44: R0 := 6
00020a4b: R2 := R2 + 0xA90
00020a54: R4 := mem[R3 + 0x180, el]:u32
00020a59: R30 := 0xCFF4
00020a5b: call @__syslog_chk with return %00020a5d

00020a5d:
00020a60: goto %00020a5e

00020a5e:
00020a66: R20 := R26 + 0x4A0
00020a6c: R25 := 0x27000
00020a73: R19 := R20 + 8
00020a7a: R22 := 0
00020a82: R0 := R19
00020a87: R30 := 0xCD5C
00020a8a: call @pthread_mutex_unlock with return %00020a8c

00020a8c:
00020a92: R24 := mem[R23 + 0xFE0, el]:u64
00020a9a: R25 := mem[R25 + 0xF78, el]:u64
0003b1bb: goto %00020a9e

00020a9e:
00020aa4: R0 := R19
00020aa9: R30 := 0xCD70
00020aab: call @pthread_mutex_lock with return %00020aad

00020aad:
00020ab4: R1 := mem[R20, el]:u32
00020abc: R0 := mem[R24, el]:u64
00020ac1: R30 := 0xCD7C
00020ac3: call @plist_get with return %00020ac5

00020ac5:
00020acb: R28 := R0
00020ad3: R0 := R19
00020ad8: R30 := 0xCD88
00020ada: call @pthread_mutex_unlock with return %00020adc

00020adc:
00020ae3: R0 := mem[R28 + 0x184, el]:u32
00020aef: #13794 := ~31:0[R0] = 0
00020ae9: when #13794 goto %00020ae7
0003b1bc: goto %00021061

00021061:
00021068: R0 := mem[R25, el]:u32
00021073: #13936 := ~31:0[R0] = 0
0002106d: when #13936 goto %00020ed8
0003b1bd: goto %00020f03

00020ed8:
00020ede: R3 := R28
00020ee4: R2 := 0x12000
00020eeb: R1 := 1
00020ef2: R2 := R2 + 0xAA8
00020ef9: R0 := 6
00020efe: R30 := 0xCF78
00020f00: call @__syslog_chk with return %00020f02

00020f02:
00020f05: goto %00020f03

00020f03:
00020f0c: R1 := R28
00020f13: R0 := R28 + 0x17C
00020f18: R30 := 0xCDA4
00020f1a: call @so_resolv with return %00020f1c

00020f1c:
00020f25: #13898 := 31:0[R0] = 0
00020f1f: when #13898 goto %00020cf0
0003b1be: goto %00020f28

00020cf0:
00020cf6: R3 := R28
00020cfc: R2 := 0x12000
00020d03: R1 := 1
00020d0a: R2 := R2 + 0xAC0
00020d11: R0 := 3
00020d16: R30 := 0xCE20
00020d18: call @__syslog_chk with return %00020d1a

00020d1a:
00020d21: R21 := mem[R28 + 0x184, el]:u32
00020d2c: #13855 := ~31:0[R21] = 0
00020d26: when #13855 goto %00020ae7
0003b1bf: goto %00020b2e

00020f28:
00020f2d: R0 := 1
00020f35: mem := mem with [R28 + 0x184, el]:u32 <- 31:0[R0]
0003b1c0: goto %00020ae7

00020ae7:
00020af8: R0 := mem[R28 + 0x17C, el]:u32
00020b01: R1 := mem[R28 + 0x180, el]:u32
00020b06: R30 := 0xCDBC
00020b08: call @so_connect with return %00020b0a

00020b0a:
00020b11: R21 := 31:0[R0]
00020b18: #13800 := extend:64[31:0[R0]]
00020b1c: NF := 63:63[#13800]
00020b1f: VF := 31:31[R0] & ~63:63[#13800]
00020b22: ZF := #13800 = 0
00020b25: CF := 31:31[R0] | 31:31[R0] & ~63:63[#13800] | ~63:63[#13800]
00020b36: #13802 := (NF <> VF | ZF) <> 0
00020b30: when #13802 goto %00020b2e
0003b1c1: goto %00020fd6

00020b2e:
00020b3e: R0 := R19
00020b43: R30 := 0xCE30
00020b45: call @pthread_mutex_lock with return %00020b47

00020b47:
00020b4b: R5 := 0x27000
00020b54: R1 := mem[R20, el]:u32
00020b5c: R28 := mem[R5 + 0xFA0, el]:u64
00020b65: R0 := mem[R28, el]:u32
00020b6d: #13812 := 1 + extend:64[~31:0[R0]] + extend:64[31:0[R1]]
00020b71: NF := 63:63[#13812]
00020b74: VF := 31:31[~31:0[R0]] & 31:31[R1] & ~63:63[#13812] |
          ~31:31[~31:0[R0]] & ~31:31[R1] & 63:63[#13812]
00020b77: ZF := #13812 = 0
00020b7a: CF := 31:31[~31:0[R0]] & 31:31[R1] | 31:31[R1] & ~63:63[#13812] |
          31:31[~31:0[R0]] & ~63:63[#13812]
00020b85: R0 := mem[R23 + 0xFE0, el]:u64
00020b92: #13815 := NF <> VF
00020b8c: when #13815 goto %00020b8a
0003b1c2: goto %00020f37

00020b8a:
00020b9a: R0 := mem[R0, el]:u64
00020ba2: R1 := extend:64[31:0[R1]] + 1
00020baa: mem := mem with [R20, el]:u32 <- 31:0[R1]
00020bb2: R22 := extend:64[31:0[R22]] + 1
00020bb7: R30 := 0xCF28
00020bb9: call @plist_get with return %00020bbb

00020bbb:
00020bc1: R27 := R0
00020bc9: R0 := R19
00020bce: R30 := 0xCF34
00020bd0: call @pthread_mutex_unlock with return %00020bd2

00020bd2:
00020bd7: R0 := 3
00020bdf: R3 := R27
00020be8: R4 := mem[R27 + 0x180, el]:u32
00020bee: R2 := 0x12000
00020bf5: R1 := 1
00020bfc: R2 := R2 + 0xAE0
00020c01: R30 := 0xCF50
00020c03: call @__syslog_chk with return %00020c05

00020c05:
00020c0c: R0 := mem[R28, el]:u32
00020c14: #13831 := 1 + extend:64[~31:0[R22]] + extend:64[31:0[R0]]
00020c18: NF := 63:63[#13831]
00020c1b: VF := 31:31[~31:0[R22]] & 31:31[R0] & ~63:63[#13831] |
          ~31:31[~31:0[R22]] & ~31:31[R0] & 63:63[#13831]
00020c1e: ZF := #13831 = 0
00020c21: CF := 31:31[~31:0[R22]] & 31:31[R0] | 31:31[R0] & ~63:63[#13831] |
          31:31[~31:0[R22]] & ~63:63[#13831]
00020c31: #13833 := (NF = VF & ~ZF) <> 0
00020c2b: when #13833 goto %00020a9e
0003b1c3: goto %00020c34

00020c34:
00020c37: goto %00020c35

00020f37:
00020f3d: R0 := mem[R0, el]:u64
00020f44: R1 := 1
00020f4d: R22 := 31:0[R22] + 31:0[R1]
00020f55: mem := mem with [R20, el]:u32 <- 31:0[R1]
00020f5a: R30 := 0xCE60
00020f5c: call @plist_get with return %00020f5e

00020f5e:
00020f64: R27 := R0
00020f6c: R0 := R19
00020f71: R30 := 0xCE6C
00020f73: call @pthread_mutex_unlock with return %00020f75

00020f75:
00020f7a: R0 := 3
00020f82: R3 := R27
00020f8b: R4 := mem[R27 + 0x180, el]:u32
00020f91: R2 := 0x12000
00020f98: R1 := 1
00020f9f: R2 := R2 + 0xAE0
00020fa4: R30 := 0xCE88
00020fa6: call @__syslog_chk with return %00020fa8

00020fa8:
00020faf: R0 := mem[R28, el]:u32
00020fb7: #13917 := 1 + extend:64[~31:0[R0]] + extend:64[31:0[R22]]
00020fbb: NF := 63:63[#13917]
00020fbe: VF := 31:31[~31:0[R0]] & 31:31[R22] & ~63:63[#13917] |
          ~31:31[~31:0[R0]] & ~31:31[R22] & 63:63[#13917]
00020fc1: ZF := #13917 = 0
00020fc4: CF := 31:31[~31:0[R0]] & 31:31[R22] | 31:31[R22] & ~63:63[#13917] |
          31:31[~31:0[R0]] & ~63:63[#13917]
00020fd3: #13919 := NF <> VF
00020fcd: when #13919 goto %00020a9e
0003b1c4: goto %00020c35

00020c35:
00020c3d: R1 := 1
00020c44: R0 := 3
00020c4a: R2 := 0x12000
00020c51: R2 := R2 + 0xB08
00020c56: R30 := 0xCEA8
00020c58: call @__syslog_chk with return %00020c5a

00020c5a:
00020c61: R0 := mem[R26 + 0x4A0, el]:u32
00020c6a: R1 := mem[R31 + 0x64, el]:u32
00020c72: #13839 := 1 + extend:64[~31:0[R0]] + extend:64[31:0[R1]]
00020c76: NF := 63:63[#13839]
00020c79: VF := 31:31[~31:0[R0]] & 31:31[R1] & ~63:63[#13839] |
          ~31:31[~31:0[R0]] & ~31:31[R1] & 63:63[#13839]
00020c7c: ZF := #13839 = 0
00020c7f: CF := 31:31[~31:0[R0]] & 31:31[R1] | 31:31[R1] & ~63:63[#13839] |
          31:31[~31:0[R0]] & ~63:63[#13839]
00020c8e: #13841 := ZF
00020c88: when #13841 goto %00020c86
0003b1c5: goto %00020d2f

00020fd6:
00020fdd: R0 := mem[R26 + 0x4A0, el]:u32
00020fe6: R1 := mem[R31 + 0x64, el]:u32
00020fee: #13925 := 1 + extend:64[~31:0[R1]] + extend:64[31:0[R0]]
00020ff2: NF := 63:63[#13925]
00020ff5: VF := 31:31[~31:0[R1]] & 31:31[R0] & ~63:63[#13925] |
          ~31:31[~31:0[R1]] & ~31:31[R0] & 63:63[#13925]
00020ff8: ZF := #13925 = 0
00020ffb: CF := 31:31[~31:0[R1]] & 31:31[R0] | 31:31[R0] & ~63:63[#13925] |
          31:31[~31:0[R1]] & ~63:63[#13925]
00021009: #13927 := ~ZF <> 0
00021003: when #13927 goto %00020d2f
0003b1c6: goto %0002100c

00020d2f:
00020d33: R22 := 0x27000
00020d39: R20 := 0x27000
00020d41: R0 := mem[R22 + 0xF60, el]:u64
00020d46: R30 := 0xCEC8
00020d48: call @pthread_mutex_lock with return %00020d4a

00020d4a:
00020d50: R0 := mem[R20 + 0xFC0, el]:u64
00020d58: R19 := mem[R0, el]:u64
00020d64: #13859 := R19 = 0
00020d5e: when #13859 goto %00020d5c
0003b1c7: goto %00020ea2

00020ea2:
0003b1c8: goto %00020ea4

00020ea4:
00020eab: R0 := mem[R19, el]:u32
00020eb3: R19 := mem[R19 + 0x10, el]:u64
00020eb8: R30 := 0xCEE4
00020eba: call @close with return %00020ebc

00020ebc:
00020ec5: #13889 := ~R19 = 0
00020ebf: when #13889 goto %00020ea4
0003b1c9: goto %00020ec8

00020ec8:
00020ece: R20 := mem[R20 + 0xFC0, el]:u64
00020ed6: R19 := mem[R20, el]:u64
0003b1ca: goto %00020d5c

00020d5c:
00020d6c: R0 := R19
00020d71: R30 := 0xCEF8
00020d73: call @plist_free with return %00020d75

00020d75:
00020d7b: R0 := mem[R22 + 0xF60, el]:u64
00020d80: R30 := 0xCF00
00020d82: call @pthread_mutex_unlock with return %00020d84

00020d84:
00020d8a: R0 := mem[R31 + 0x68, el]:u64
00020d91: #13865 := extend:64[31:0[R21]]
00020d95: NF := 63:63[#13865]
00020d98: VF := 31:31[R21] & ~63:63[#13865]
00020d9b: ZF := #13865 = 0
00020d9e: CF := 31:31[R21] | 31:31[R21] & ~63:63[#13865] | ~63:63[#13865]
00020dc9: #13867 := (NF = VF & ~ZF) <> 0
00020dca: goto %00020dc1

00020dc1:
00020dc3: when #13867 goto %00020da9
00020dc4: goto %00020db5

00020db5:
00020db6: NF := 0
00020db9: ZF := 1
00020dbc: CF := 0
00020dbf: VF := 0
00020dc6: goto %00020dc2

00020da9:
00020daa: NF := 63:63[R0 + 0]
00020dad: VF := 63:63[R0] & ~63:63[R0 + 0]
00020db0: ZF := R0 + 0 = 0
00020db3: CF := 63:63[R0] | ~63:63[R0 + 0] | 63:63[R0] & ~63:63[R0 + 0]
00020dc5: goto %00020dc2

00020dc2:
00020dd6: #13870 := ZF
00020dd0: when #13870 goto %00020c86
0003b1cb: goto %00020dd9

00020dd9:
00020ddc: goto %00020dda

0002100c:
00021012: R0 := mem[R31 + 0x68, el]:u64
00021019: #13929 := extend:64[31:0[R21]]
0002101d: NF := 63:63[#13929]
00021020: VF := 31:31[R21] & ~63:63[#13929]
00021023: ZF := #13929 = 0
00021026: CF := 31:31[R21] | 31:31[R21] & ~63:63[#13929] | ~63:63[#13929]
00021051: #13931 := (NF = VF & ~ZF) <> 0
00021052: goto %00021049

00021049:
0002104b: when #13931 goto %00021031
0002104c: goto %0002103d

0002103d:
0002103e: NF := 0
00021041: ZF := 1
00021044: CF := 0
00021047: VF := 0
0002104e: goto %0002104a

00021031:
00021032: NF := 63:63[R0 + 0]
00021035: VF := 63:63[R0] & ~63:63[R0 + 0]
00021038: ZF := R0 + 0 = 0
0002103b: CF := 63:63[R0] | ~63:63[R0 + 0] | 63:63[R0] & ~63:63[R0 + 0]
0002104d: goto %0002104a

0002104a:
0002105e: #13934 := ~ZF <> 0
00021058: when #13934 goto %00020dda
0003b1cc: goto %00020c86

00020dda:
00020de1: R2 := 0x27000
00020de7: R1 := 0x27000
00020def: R2 := mem[R2 + 0xF90, el]:u64
00020df7: R1 := mem[R1 + 0xF80, el]:u64
00020e00: R2 := mem[R2, el]:u32
00020e08: R1 := mem[R1, el]:u64
00020e0f: #13875 := extend:64[31:0[R2]]
00020e13: NF := 63:63[#13875]
00020e16: VF := 31:31[R2] & ~63:63[#13875]
00020e19: ZF := #13875 = 0
00020e1c: CF := 31:31[R2] | 31:31[R2] & ~63:63[#13875] | ~63:63[#13875]
00020e37: #13877 := ~ZF <> 0
00020e38: goto %00020e2f

00020e2f:
00020e31: when #13877 goto %00020e28
00020e32: goto %00020e2c

00020e2c:
00020e2d: R2 := 1
00020e34: goto %00020e30

00020e28:
00020e29: R2 := 0
00020e33: goto %00020e30

00020e30:
00020e3e: R30 := 0xCFA0
00020e40: call @copy_auth with return %00020e42

00020e42:
00020e49: R0 := 31:0[R21]
00020e52: R19 := mem[R31 + 0x10, el]:u64
00020e56: R20 := mem[R31 + 0x18, el]:u64
00020e5f: R21 := mem[R31 + 0x20, el]:u64
00020e63: R22 := mem[R31 + 0x28, el]:u64
00020e6c: R23 := mem[R31 + 0x30, el]:u64
00020e70: R24 := mem[R31 + 0x38, el]:u64
00020e79: R25 := mem[R31 + 0x40, el]:u64
00020e7d: R26 := mem[R31 + 0x48, el]:u64
00020e86: R27 := mem[R31 + 0x50, el]:u64
00020e8a: R28 := mem[R31 + 0x58, el]:u64
00020e94: R29 := mem[R31, el]:u64
00020e98: R30 := mem[R31 + 8, el]:u64
00020e9b: R31 := R31 + 0x70
00020ea0: call R30 with noreturn

00020c86:
00020c97: R0 := 31:0[R21]
00020ca0: R19 := mem[R31 + 0x10, el]:u64
00020ca4: R20 := mem[R31 + 0x18, el]:u64
00020cad: R21 := mem[R31 + 0x20, el]:u64
00020cb1: R22 := mem[R31 + 0x28, el]:u64
00020cba: R23 := mem[R31 + 0x30, el]:u64
00020cbe: R24 := mem[R31 + 0x38, el]:u64
00020cc7: R25 := mem[R31 + 0x40, el]:u64
00020ccb: R26 := mem[R31 + 0x48, el]:u64
00020cd4: R27 := mem[R31 + 0x50, el]:u64
00020cd8: R28 := mem[R31 + 0x58, el]:u64
00020ce2: R29 := mem[R31, el]:u64
00020ce6: R30 := mem[R31 + 8, el]:u64
00020ce9: R31 := R31 + 0x70
00020cee: call R30 with noreturn

0003b1cd: sub proxy_thread(proxy_thread_result)
0003b433: proxy_thread_result :: out u32 = low:32[R0]

00023303:
0002330a: #15087 := R31 - 0x70
0002330f: mem := mem with [#15087, el]:u64 <- R29
00023314: mem := mem with [#15087 + 8, el]:u64 <- R30
00023318: R31 := #15087
0002331f: R29 := R31
00023327: #15092 := R31 + 0x20
0002332c: mem := mem with [#15092, el]:u64 <- R21
00023331: mem := mem with [#15092 + 8, el]:u64 <- R22
00023339: R21 := R0
00023341: #15100 := R31 + 0x50
00023346: mem := mem with [#15100, el]:u64 <- R27
0002334b: mem := mem with [#15100 + 8, el]:u64 <- R28
00023351: R28 := 0x14000
0002335a: R27 := mem[R21, el]:u32
00023362: #15106 := R31 + 0x40
00023367: mem := mem with [#15106, el]:u64 <- R25
0002336c: mem := mem with [#15106 + 8, el]:u64 <- R26
00023372: R26 := 0x14000
00023379: R26 := R26 + 0x48
00023380: R0 := R28 + 0x28
00023386: R25 := 0x28000
0002338e: #15111 := R31 + 0x10
00023393: mem := mem with [#15111, el]:u64 <- R19
00023398: mem := mem with [#15111 + 8, el]:u64 <- R20
000233a0: #15116 := R31 + 0x30
000233a5: mem := mem with [#15116, el]:u64 <- R23
000233aa: mem := mem with [#15116 + 8, el]:u64 <- R24
000233b2: mem := mem with [R31 + 0x68, el]:u64 <- R0
0003b1ce: goto %000233b6

000233b6:
000233bb: R0 := R25 + 0x4D8
000233c4: R0 := mem[R0 + 4, el]:u32
000233d0: #15119 := ~31:0[R0] = 0
000233ca: when #15119 goto %000233c8
0003b1cf: goto %00026766

000233c8:
000233d8: R1 := mem[R31 + 0x68, el]:u64
000233e1: R2 := 31:0[R27]
000233e8: R0 := 1
000233ed: R30 := 0x10E88
000233ef: call @__printf_chk with return %000233f1

000233f1:
000233f8: R2 := 31:0[R27]
000233fe: R1 := 0x12000
00023405: R1 := R1 + 0xD80
0002340c: R0 := 1
00023411: R30 := 0x10E9C
00023413: call @__printf_chk with return %00023415

00023415:
00023418: R30 := 0x10EA0
0002341a: call @new_rr_data with return %0002341c

0002341c:
00023422: R19 := R0
0002342a: R1 := R19
00023433: R0 := 31:0[R27]
00023438: R30 := 0x10EB0
0002343a: call @headers_recv with return %0002343c

0002343c:
00023446: #15136 := ~31:0[R0] = 0
00023440: when #15136 goto %0002343e
0003b1d0: goto %00026757

00026766:
00026769: R30 := 0x10D78
0002676b: call @new_rr_data with return %0002676d

0002676d:
00026773: R19 := R0
0002677b: R1 := R19
00026784: R0 := 31:0[R27]
00026789: R30 := 0x10D88
0002678b: call @headers_recv with return %0002678d

0002678d:
00026796: #16877 := 31:0[R0] = 0
00026790: when #16877 goto %00026757
0003b1d1: goto %0002343e

00026757:
0002675d: R0 := R19
00026762: R30 := 0x10EBC
00026764: call @free_rr_data with return %00023563

0002343e:
0002344c: R23 := 0x12000
00023452: R22 := 0x12000
00023459: R23 := R23 + 0xE30
00023460: R22 := R22 + 0xE40
00023467: R24 := R25 + 0x4D8
0003b1d2: goto %00023469

00023469:
0002346f: R0 := mem[R19 + 8, el]:u64
00023477: R2 := R23
0002347f: R1 := R22
00023484: R30 := 0x10DB0
00023486: call @hlist_subcmp with return %00023488

00023488:
0002348f: R20 := 31:0[R0]
00023497: R0 := mem[R19 + 0x40, el]:u64
0002349c: R30 := 0x10DBC
0002349e: call @noproxy_match with return %000234a0

000234a0:
000234a7: R2 := 31:0[R0]
000234af: R1 := R19
000234b7: R0 := R21
000234c3: #15157 := 31:0[R2] = 0
000234bd: when #15157 goto %000234bb
0003b1d3: goto %00026733

000234bb:
000234c8: R30 := 0x10E00
000234ca: call @forward_request with return %000234cc

000234cc:
000234d2: R28 := R0
000234db: R0 := mem[R24 + 4, el]:u32
000234e7: #15162 := 31:0[R0] = 0
000234e1: when #15162 goto %000234df
0003b1d4: goto %000266e3

00026733:
00026736: R30 := 0x10DD0
00026738: call @direct_request with return %0002673a

0002673a:
00026740: R28 := R0
00026749: R0 := mem[R24 + 4, el]:u32
00026754: #16864 := ~31:0[R0] = 0
0002674e: when #16864 goto %000266e3
0003b1d5: goto %000234df

000266e3:
000266e9: R1 := R26
000266f1: R2 := R28
000266f8: R0 := 1
000266fd: R30 := 0x10E1C
000266ff: call @__printf_chk with return %00026701

00026701:
00026706: R1 := R28 - 1
0002670e: R0 := R19
00026715: #16857 := 3 + R1
00026719: NF := 63:63[#16857]
0002671c: VF := ~63:63[R1] & 63:63[#16857]
0002671f: ZF := #16857 = 0
00026722: CF := 63:63[R1] & ~63:63[#16857]
00026730: #16859 := (~CF | ZF) <> 0
0002672a: when #16859 goto %000266c4
0003b1d6: goto %00023511

000234df:
000234ee: R1 := R28 - 1
000234f6: R0 := R19
000234fd: #15166 := 3 + R1
00023501: NF := 63:63[#15166]
00023504: VF := ~63:63[R1] & 63:63[#15166]
00023507: ZF := #15166 = 0
0002350a: CF := 63:63[R1] & ~63:63[#15166]
00023519: #15168 := (CF & ~ZF) <> 0
00023513: when #15168 goto %00023511
0003b1d7: goto %000266c4

00023511:
0002351e: R30 := 0x10E30
00023520: call @free_rr_data with return %00023522

00023522:
00023527: #15169 := extend:64[31:0[R20]]
0002352b: NF := 63:63[#15169]
0002352e: VF := 31:31[R20] & ~63:63[#15169]
00023531: ZF := #15169 = 0
00023534: CF := 31:31[R20] | 31:31[R20] & ~63:63[#15169] | ~63:63[#15169]
0002355d: #15171 := ~ZF <> 0
0002355e: goto %00023555

00023555:
00023557: when #15171 goto %0002353d
00023558: goto %00023549

00023549:
0002354a: NF := 0
0002354d: ZF := 1
00023550: CF := 0
00023553: VF := 0
0002355a: goto %00023556

0002353d:
0002353e: NF := 63:63[R28 + 1]
00023541: VF := ~63:63[R28] & 63:63[R28 + 1]
00023544: ZF := R28 + 1 = 0
00023547: CF := 63:63[R28] & ~63:63[R28 + 1]
00023559: goto %00023556

00023556:
0002356b: #15173 := ZF
00023565: when #15173 goto %00023563
0003b1d8: goto %000266a8

00023563:
00023572: R25 := R25 + 0x4D8
0002357b: R0 := mem[R25 + 0x20, el]:u32
00023587: #15175 := ~31:0[R0] = 0
00023581: when #15175 goto %0002357f
0003b1d9: goto %00023605

00023605:
0002360a: R19 := R25 + 0x28
00023612: R0 := R19
00023617: R30 := 0x10ED4
00023619: call @pthread_mutex_lock with return %0002361b

0002361b:
0002361e: R30 := 0x10ED8
00023621: call @pthread_self with return %00023623

00023623:
00023629: R1 := R0
00023631: R0 := mem[R25 + 0x58, el]:u64
00023637: R2 := 0
0002363c: R30 := 0x10EE8
0002363e: call @plist_add with return %00023640

00023640:
00023646: R1 := R0
0002364e: R0 := R19
00023656: mem := mem with [R25 + 0x58, el]:u64 <- R1
0002365b: R30 := 0x10EF8
0002365d: call @pthread_mutex_unlock with return %0002365f

0002365f:
00023661: goto %0002357f

000266a8:
000266ad: R0 := R25 + 0x4D8
000266b6: R0 := mem[R0 + 0x20, el]:u32
000266c1: #16843 := 31:0[R0] = 0
000266bb: when #16843 goto %000233b6
0003b1da: goto %0002357f

0002357f:
0002358f: R0 := R21
00023594: R30 := 0x10E50
00023596: call @free with return %00023598

00023598:
0002359f: R0 := 31:0[R27]
000235a4: R30 := 0x10E58
000235a6: call @close with return %000235a8

000235a8:
000235ac: R0 := 0
000235b5: R19 := mem[R31 + 0x10, el]:u64
000235b9: R20 := mem[R31 + 0x18, el]:u64
000235c2: R21 := mem[R31 + 0x20, el]:u64
000235c6: R22 := mem[R31 + 0x28, el]:u64
000235cf: R23 := mem[R31 + 0x30, el]:u64
000235d3: R24 := mem[R31 + 0x38, el]:u64
000235dc: R25 := mem[R31 + 0x40, el]:u64
000235e0: R26 := mem[R31 + 0x48, el]:u64
000235e9: R27 := mem[R31 + 0x50, el]:u64
000235ed: R28 := mem[R31 + 0x58, el]:u64
000235f7: R29 := mem[R31, el]:u64
000235fb: R30 := mem[R31 + 8, el]:u64
000235fe: R31 := R31 + 0x70
00023603: call R30 with noreturn

000266c4:
000266cd: #16844 := R28 = 0
000266c7: when #16844 goto %00023469
0003b1db: goto %000266d0

000266d0:
000266d6: R19 := R28
000266db: R30 := 0x10DF8
000266dd: call @free_rr_data with return %000266df

000266df:
000266e1: goto %00023469

0003b1dc: sub pthread_attr_destroy(pthread_attr_destroy_result)
0003b434: pthread_attr_destroy_result :: out u32 = low:32[R0]

0002f155:
00032b8e: R16 := 0x27000
00032b96: R17 := mem[R16 + 0xD38, el]:u64
00032b9d: R16 := R16 + 0xD38
00032ba2: call R17 with noreturn

0003b1dd: sub pthread_attr_init(pthread_attr_init_result)
0003b435: pthread_attr_init_result :: out u32 = low:32[R0]

00031bf8:
000329fe: R16 := 0x27000
00032a06: R17 := mem[R16 + 0xCB8, el]:u64
00032a0d: R16 := R16 + 0xCB8
00032a12: call R17 with noreturn

0003b1de: sub pthread_attr_setguardsize(pthread_attr_setguardsize_result)
0003b436: pthread_attr_setguardsize_result :: out u32 = low:32[R0]

00031c24:
00032c24: R16 := 0x27000
00032c2c: R17 := mem[R16 + 0xD68, el]:u64
00032c33: R16 := R16 + 0xD68
00032c38: call R17 with noreturn

0003b1df: sub pthread_attr_setstacksize(pthread_attr_setstacksize_result)
0003b437: pthread_attr_setstacksize_result :: out u32 = low:32[R0]

00031c0e:
00032c88: R16 := 0x27000
00032c90: R17 := mem[R16 + 0xD88, el]:u64
00032c97: R16 := R16 + 0xD88
00032c9c: call R17 with noreturn

0003b1e0: sub pthread_create(pthread_create_result)
0003b438: pthread_create_result :: out u32 = low:32[R0]

0002f22f:
00032d82: R16 := 0x27000
00032d8a: R17 := mem[R16 + 0xDD8, el]:u64
00032d91: R16 := R16 + 0xDD8
00032d96: call R17 with noreturn

0003b1e1: sub pthread_join(pthread_join_result)
0003b439: pthread_join_result :: out u32 = low:32[R0]

0002ef4c:
00032dcd: R16 := 0x27000
00032dd5: R17 := mem[R16 + 0xDF0, el]:u64
00032ddc: R16 := R16 + 0xDF0
00032de1: call R17 with noreturn

0003b1e2: sub pthread_mutex_lock(pthread_mutex_lock_result)
0003b43a: pthread_mutex_lock_result :: out u32 = low:32[R0]

000209e0:
00033151: R16 := 0x27000
00033159: R17 := mem[R16 + 0xF10, el]:u64
00033160: R16 := R16 + 0xF10
00033165: call R17 with noreturn

0003b1e3: sub pthread_mutex_unlock(pthread_mutex_unlock_result)
0003b43b: pthread_mutex_unlock_result :: out u32 = low:32[R0]

00020a88:
0003316a: R16 := 0x27000
00033172: R17 := mem[R16 + 0xF18, el]:u64
00033179: R16 := R16 + 0xF18
0003317e: call R17 with noreturn

0003b1e4: sub pthread_self(pthread_self_result)
0003b43c: pthread_self_result :: out u32 = low:32[R0]

0002361f:
000330ed: R16 := 0x27000
000330f5: R17 := mem[R16 + 0xEF0, el]:u64
000330fc: R16 := R16 + 0xEF0
00033101: call R17 with noreturn

0003b1e5: sub random(random_result)
0003b43d: random_result :: out u64 = R0

0001caa7:
00032c6f: R16 := 0x27000
00032c77: R17 := mem[R16 + 0xD80, el]:u64
00032c7e: R16 := R16 + 0xD80
00032c83: call R17 with noreturn

0003b1e6: sub read(read_fd, read_buf, read_nbytes, read_result)
0003b43e: read_fd :: in u32 = low:32[R0]
0003b43f: read_buf :: in out u64 = R1
0003b440: read_nbytes :: in u64 = R2
0003b441: read_result :: out u64 = R0

0001724a:
0003300c: R16 := 0x27000
00033014: R17 := mem[R16 + 0xEA8, el]:u64
0003301b: R16 := R16 + 0xEA8
00033020: call R17 with noreturn

0003b1e7: sub realloc(realloc_ptr, realloc_size, realloc_result)
0003b442: realloc_ptr :: in out u64 = R0
0003b443: realloc_size :: in u64 = R1
0003b444: realloc_result :: out u64 = R0

00017181:
00032cd3: R16 := 0x27000
00032cdb: R17 := mem[R16 + 0xDA0, el]:u64
00032ce2: R16 := R16 + 0xDA0
00032ce7: call R17 with noreturn

0003b1e8: sub recv(recv_fd, recv_buf, recv_n, recv_flags, recv_result)
0003b445: recv_fd :: in u32 = low:32[R0]
0003b446: recv_buf :: in out u64 = R1
0003b447: recv_n :: in u64 = R2
0003b448: recv_flags :: in u32 = low:32[R3]
0003b449: recv_result :: out u64 = R0

00015a44:
00032d69: R16 := 0x27000
00032d71: R17 := mem[R16 + 0xDD0, el]:u64
00032d78: R16 := R16 + 0xDD0
00032d7d: call R17 with noreturn

0003b1e9: sub register_tm_clones(register_tm_clones_result)
0003b44a: register_tm_clones_result :: out u32 = low:32[R0]

00031022:
00031026: R0 := 0x28000
0003102d: R0 := R0 + 0x498
00031033: R1 := 0x28000
0003103a: R1 := R1 + 0x498
00031042: R1 := R1 - R0
00031049: R2 := R1 >> 0x3F
00031051: R1 := R2 + (R1 ~>> 3)
00031059: #21706 := ~(R1 ~>> 1) + 1
0003105d: NF := 63:63[#21706]
00031060: VF := ~63:63[~(R1 ~>> 1)] & 63:63[#21706]
00031063: ZF := #21706 = 0
00031066: CF := 63:63[~(R1 ~>> 1)] & ~63:63[#21706]
0003106f: R1 := R1 >> 1
0003107b: #21712 := ZF
00031075: when #21712 goto %00031073
0003b1ea: goto %0003112d

0003112d:
00031131: R2 := 0x27000
00031139: R2 := mem[R2 + 0xFE8, el]:u64
00031144: #21725 := R2 = 0
0003113e: when #21725 goto %00031073
0003b1eb: goto %00031147

00031073:
00031080: call R30 with noreturn

00031147:
0003114d: R16 := R2
00031152: call R16 with noreturn

0003b1ec: sub reset_rr_data(reset_rr_data_result)
0003b44b: reset_rr_data_result :: out u32 = low:32[R0]

000143f1:
000143f8: #5806 := R31 - 0x30
000143fd: mem := mem with [#5806, el]:u64 <- R29
00014402: mem := mem with [#5806 + 8, el]:u64 <- R30
00014406: R31 := #5806
0001440d: R29 := R31
00014415: #5811 := R31 + 0x10
0001441a: mem := mem with [#5811, el]:u64 <- R19
0001441f: mem := mem with [#5811 + 8, el]:u64 <- R20
00014427: R19 := R0
00014433: #5816 := R0 = 0
0001442d: when #5816 goto %0001442b
0003b1ed: goto %00014c06

00014c06:
00014c0a: R0 := 0x11000
00014c12: mem := mem with [R19, el]:u32 <- 0
00014c1a: R20 := mem[R19 + 8, el]:u64
00014c22: mem := mem with [R19 + 0x20, el]:u32 <- 0
00014c2b: V0 := mem[R0 + 0x6F0, el]:u64.mem[R0 + 0x6F8, el]:u64
00014c33: mem := mem with [R19 + 0x10, el]:u128 <- V0
00014c3f: #6042 := R20 = 0
00014c39: when #6042 goto %00014c37
0003b1ee: goto %00014d2c

00014d2c:
00014d32: mem := mem with [R31 + 0x20, el]:u64 <- R21
0003b1ef: goto %00014d36

00014d36:
00014d3c: R21 := R20
00014d44: R20 := mem[R20 + 0x18, el]:u64
00014d4c: R0 := mem[R21, el]:u64
00014d51: R30 := 0x53A0
00014d53: call @free with return %00014d55

00014d55:
00014d5b: R0 := mem[R21 + 8, el]:u64
00014d60: R30 := 0x53A8
00014d62: call @free with return %00014d64

00014d64:
00014d6a: R0 := R21
00014d6f: R30 := 0x53B0
00014d71: call @free with return %00014d73

00014d73:
00014d7c: #6070 := ~R20 = 0
00014d76: when #6070 goto %00014d36
0003b1f0: goto %00014d7f

00014d7f:
00014d85: R21 := mem[R31 + 0x20, el]:u64
0003b1f1: goto %00014c37

00014c37:
00014c47: R0 := mem[R19 + 0x28, el]:u64
00014c53: #6044 := R0 = 0
00014c4d: when #6044 goto %00014c4b
0003b1f2: goto %00014d25

00014d25:
00014d28: R30 := 0x53C4
00014d2a: call @free with return %00014c4b

00014c4b:
00014c5b: R0 := mem[R19 + 0x30, el]:u64
00014c67: #6046 := R0 = 0
00014c61: when #6046 goto %00014c5f
0003b1f3: goto %00014d1e

00014d1e:
00014d21: R30 := 0x53D0
00014d23: call @free with return %00014c5f

00014c5f:
00014c6f: R0 := mem[R19 + 0x38, el]:u64
00014c7b: #6048 := R0 = 0
00014c75: when #6048 goto %00014c73
0003b1f4: goto %00014d17

00014d17:
00014d1a: R30 := 0x53DC
00014d1c: call @free with return %00014c73

00014c73:
00014c83: R0 := mem[R19 + 0x40, el]:u64
00014c8f: #6050 := R0 = 0
00014c89: when #6050 goto %00014c87
0003b1f5: goto %00014d10

00014d10:
00014d13: R30 := 0x53E8
00014d15: call @free with return %00014c87

00014c87:
00014c97: R0 := mem[R19 + 0x48, el]:u64
00014ca3: #6052 := R0 = 0
00014c9d: when #6052 goto %00014c9b
0003b1f6: goto %00014d09

00014d09:
00014d0c: R30 := 0x53F4
00014d0e: call @free with return %00014c9b

00014c9b:
00014cab: R0 := mem[R19 + 0x50, el]:u64
00014cb7: #6054 := R0 = 0
00014cb1: when #6054 goto %00014caf
0003b1f7: goto %00014d02

00014d02:
00014d05: R30 := 0x5400
00014d07: call @free with return %00014caf

00014caf:
00014cbf: R0 := mem[R19 + 0x58, el]:u64
00014ccb: #6056 := R0 = 0
00014cc5: when #6056 goto %00014cc3
0003b1f8: goto %00014cfb

00014cfb:
00014cfe: R30 := 0x540C
00014d00: call @free with return %00014cc3

00014cc3:
00014cd1: V0 := 0
00014cd9: mem := mem with [R19 + 8, el]:u64 <- 0
00014ce1: mem := mem with [R19 + 0x28, el]:u128 <- V0
00014ce9: mem := mem with [R19 + 0x38, el]:u128 <- V0
00014cf1: mem := mem with [R19 + 0x48, el]:u128 <- V0
00014cf9: mem := mem with [R19 + 0x58, el]:u128 <- V0
0003b1f9: goto %0001442b

0001442b:
0001443b: R0 := R19
00014444: R19 := mem[R31 + 0x10, el]:u64
00014448: R20 := mem[R31 + 0x18, el]:u64
00014452: R29 := mem[R31, el]:u64
00014456: R30 := mem[R31 + 8, el]:u64
00014459: R31 := R31 + 0x30
0001445e: call R30 with noreturn

0003b1fa: sub scanmem(scanmem_result)
0003b44c: scanmem_result :: out u32 = low:32[R0]

0000fbd2:
0000fbd9: #386 := R31 - 0x30
0000fbde: mem := mem with [#386, el]:u64 <- R29
0000fbe3: mem := mem with [#386 + 8, el]:u64 <- R30
0000fbe7: R31 := #386
0000fbee: R29 := R31
0000fbf6: #391 := R31 + 0x10
0000fbfb: mem := mem with [#391, el]:u64 <- R19
0000fc00: mem := mem with [#391 + 8, el]:u64 <- R20
0000fc08: R19 := R0
0000fc10: mem := mem with [R31 + 0x20, el]:u64 <- R21
0000fc19: R21 := 31:0[R1]
0000fc1e: R30 := 0x5B94
0000fc20: call @strlen with return %0000fc22

0000fc22:
0000fc2c: #399 := ~~0:0[R0]
0000fc26: when #399 goto %0000fc24
0003b1fb: goto %0002cef2

0000fc24:
0000fc32: R0 := 0
0000fc3b: R19 := mem[R31 + 0x10, el]:u64
0000fc3f: R20 := mem[R31 + 0x18, el]:u64
0000fc47: R21 := mem[R31 + 0x20, el]:u64
0000fc51: R29 := mem[R31, el]:u64
0000fc55: R30 := mem[R31 + 8, el]:u64
0000fc58: R31 := R31 + 0x30
0000fc5d: call R30 with noreturn

0002cef2:
0002cef7: R20 := R0 >> 1
0002cefd: R1 := 1
0002cf05: R0 := extend:64[31:0[R20]] + 1
0002cf0c: R0 := extend:64[31:0[R0]]
0002cf11: R30 := 0x5BAC
0002cf13: call @calloc with return %0002cf15

0002cf15:
0002cf1a: #19834 := extend:64[31:0[R20]]
0002cf1e: NF := 63:63[#19834]
0002cf21: VF := 31:31[R20] & ~63:63[#19834]
0002cf24: ZF := #19834 = 0
0002cf27: CF := 31:31[R20] | 31:31[R20] & ~63:63[#19834] | ~63:63[#19834]
0002cf37: #19836 := (NF <> VF | ZF) <> 0
0002cf31: when #19836 goto %0000fc5f
0003b1fc: goto %0002cf3a

0000fc5f:
0000fc65: R7 := R0
0000fc6d: mem := mem with [R7] <- 0
0000fc72: goto %0000fc70

0002cf3a:
0002cf40: R6 := low:32[extend:64[31:0[R20]] - 1]
0002cf46: R5 := 0x28000
0002cf4d: R5 := R5 + 0x10
0002cf54: R1 := 7
0002cf5b: R6 := R6 + 2
0002cf63: R3 := R19
0002cf6a: R5 := R5 + 0x20
0002cf71: R8 := R0 - 1
0002cf7a: R21 := 31:0[R1] - 31:0[R21]
0002cf80: R2 := 1
0002cf85: goto %0002cf83

0002cf83:
0002cf8d: R1 := pad:32[mem[R3]]
0002cf96: R7 := 31:0[R2]
0002cf9f: R4 := pad:32[mem[R3 + 1]]
0002cfa6: R3 := R3 + 2
0002cfae: #19847 := R1 << 2
0002cfb4: R1 := mem[R5 + #19847, el]:u32
0002cfbc: #19849 := R4 << 2
0002cfc2: R4 := mem[R5 + #19849, el]:u32
0002cfc9: #19850 := extend:64[31:0[R1]]
0002cfcd: NF := 63:63[#19850]
0002cfd0: VF := 31:31[R1] & ~63:63[#19850]
0002cfd3: ZF := #19850 = 0
0002cfd6: CF := 31:31[R1] | 31:31[R1] & ~63:63[#19850] | ~63:63[#19850]
0002d000: #19852 := NF = VF
0002d001: goto %0002cff8

0002cff8:
0002cffa: when #19852 goto %0002cfe0
0002cffb: goto %0002cfec

0002cfec:
0002cfed: NF := 0
0002cff0: ZF := 0
0002cff3: CF := 0
0002cff6: VF := 1
0002cffd: goto %0002cff9

0002cfe0:
0002cfe1: NF := 63:63[extend:64[31:0[R4]] + 0]
0002cfe4: VF := 31:31[R4] & ~63:63[extend:64[31:0[R4]] + 0]
0002cfe7: ZF := extend:64[31:0[R4]] + 0 = 0
0002cfea: CF := 31:31[R4] | ~63:63[extend:64[31:0[R4]] + 0] | 31:31[R4] &
          ~63:63[extend:64[31:0[R4]] + 0]
0002cffc: goto %0002cff9

0002cff9:
0002d00f: #19855 := NF = VF
0002d009: when #19855 goto %0002d007
0003b1fd: goto %0002d06a

0002d06a:
0002d06d: R30 := 0x5C20
0002d06f: call @free with return %0002d071

0002d071:
0002d075: R0 := 0
0002d07e: R19 := mem[R31 + 0x10, el]:u64
0002d082: R20 := mem[R31 + 0x18, el]:u64
0002d08a: R21 := mem[R31 + 0x20, el]:u64
0002d094: R29 := mem[R31, el]:u64
0002d098: R30 := mem[R31 + 8, el]:u64
0002d09b: R31 := R31 + 0x30
0002d0a0: call R30 with noreturn

0002d007:
0002d018: R1 := 31:0[R4] + (31:0[R1] << 4)
0002d021: R1 := 31:0[R1] ^ 31:0[R21]
0002d029: #19862 := R2
0002d02e: mem := mem with [R8 + #19862] <- low:8[31:0[R1]]
0002d035: R2 := R2 + 1
0002d03d: #19866 := 1 + ~R2 + R6
0002d041: NF := 63:63[#19866]
0002d044: VF := 63:63[R6] & 63:63[~R2] & ~63:63[#19866] | ~63:63[R6] &
          ~63:63[~R2] & 63:63[#19866]
0002d047: ZF := #19866 = 0
0002d04a: CF := 63:63[R6] & 63:63[~R2] | 63:63[~R2] & ~63:63[#19866] |
          63:63[R6] & ~63:63[#19866]
0002d058: #19871 := ZF
0002d052: when #19871 goto %0002d050
0003b1fe: goto %0002cf83

0002d050:
0002d060: R7 := R0 + extend:64[31:0[R7]]
0002d068: mem := mem with [R7] <- 0
0003b1ff: goto %0000fc70

0000fc70:
0000fc7a: R19 := mem[R31 + 0x10, el]:u64
0000fc7e: R20 := mem[R31 + 0x18, el]:u64
0000fc86: R21 := mem[R31 + 0x20, el]:u64
0000fc90: R29 := mem[R31, el]:u64
0000fc94: R30 := mem[R31 + 8, el]:u64
0000fc97: R31 := R31 + 0x30
0000fc9c: call R30 with noreturn

0003b200: sub scanner_hook(scanner_hook_result)
0003b44d: scanner_hook_result :: out u32 = low:32[R0]

000248cd:
000248d2: R31 := R31 - 0x100
000248da: #15921 := R31 + 0x10
000248df: mem := mem with [#15921, el]:u64 <- R29
000248e4: mem := mem with [#15921 + 8, el]:u64 <- R30
000248eb: R29 := R31 + 0x10
000248f4: R6 := mem[R0, el]:u32
000248fc: #15927 := R31 + 0x20
00024901: mem := mem with [#15927, el]:u64 <- R19
00024906: mem := mem with [#15927 + 8, el]:u64 <- R20
0002490c: R19 := 0x27000
00024914: R7 := mem[R19 + 0xFB8, el]:u64
0002491c: #15933 := R31 + 0x60
00024921: mem := mem with [#15933, el]:u64 <- R27
00024926: mem := mem with [#15933 + 8, el]:u64 <- R28
0002492e: R8 := mem[R7, el]:u64
00024936: mem := mem with [R31 + 0xF8, el]:u64 <- R8
0002493c: R8 := 0
00024944: mem := mem with [R31 + 0x78, el]:u64 <- R2
0002494c: mem := mem with [R31 + 0xB0, el]:u32 <- 31:0[R3]
00024958: #15936 := 31:0[R6] = 0
00024952: when #15936 goto %00024950
0003b201: goto %00026513

00026513:
0002651a: R2 := mem[R1 + 0x10, el]:u32
00026522: R20 := R1
00026529: #16800 := 0xFFFFFFFFFFFFFF38 + extend:64[31:0[R2]]
0002652d: NF := 63:63[#16800]
00026530: VF := 31:31[R2] & ~63:63[#16800]
00026533: ZF := #16800 = 0
00026536: CF := 31:31[R2] | 31:31[R2] & ~63:63[#16800] | ~63:63[#16800]
00026544: #16802 := ZF
0002653e: when #16802 goto %000262c8
0003b202: goto %00024950

000262c8:
000262ce: #16727 := R31 + 0x30
000262d3: mem := mem with [#16727, el]:u64 <- R21
000262d8: mem := mem with [#16727 + 8, el]:u64 <- R22
000262e0: R21 := R0
000262e8: R22 := R4
000262f0: #16738 := R31 + 0x40
000262f5: mem := mem with [#16738, el]:u64 <- R23
000262fa: mem := mem with [#16738 + 8, el]:u64 <- R24
00026302: R23 := R5
00026307: R30 := 0xF7A4
00026309: call @http_has_body with return %0002630b

0002630b:
00026310: #16743 := 1 + R0
00026314: NF := 63:63[#16743]
00026317: VF := ~63:63[R0] & 63:63[#16743]
0002631a: ZF := #16743 = 0
0002631d: CF := 63:63[R0] & ~63:63[#16743]
0002632b: #16745 := ZF
00026325: when #16745 goto %00026323
0003b203: goto %00026358

00026323:
00026333: R0 := mem[R20 + 8, el]:u64
00026339: R2 := 0x12000
0002633f: R1 := 0x12000
00026346: R2 := R2 + 0x968
0002634d: R1 := R1 + 0x938
00026352: R30 := 0xF7D0
00026354: call @hlist_subcmp with return %00026356

00026356:
00026360: #16747 := ~31:0[R0] = 0
0002635a: when #16747 goto %00026358
0003b204: goto %00026380

00026380:
00026386: R0 := mem[R20 + 8, el]:u64
0002638c: R2 := 0x12000
00026392: R1 := 0x12000
00026399: R2 := R2 + 0x950
000263a0: R1 := R1 + 0xE40
000263a5: R30 := 0xF7EC
000263a7: call @hlist_subcmp with return %000263a9

000263a9:
000263b2: #16751 := 31:0[R0] = 0
000263ac: when #16751 goto %00026358
0003b205: goto %000263b5

000263b5:
000263bb: R0 := mem[R21 + 8, el]:u64
000263c1: R1 := 0x13000
000263c8: R1 := R1 + 0x6E8
000263d0: #16756 := R31 + 0x50
000263d5: mem := mem with [#16756, el]:u64 <- R25
000263da: mem := mem with [#16756 + 8, el]:u64 <- R26
000263df: R30 := 0xF804
000263e1: call @hlist_get with return %000263e3

000263e3:
000263ec: #16758 := R0 = 0
000263e6: when #16758 goto %00024f25
0003b206: goto %000263ef

000263ef:
000263f2: R30 := 0xF80C
000263f4: call @strdup with return %000263f6

000263f6:
000263fa: R28 := 0x13000
000263ff: R30 := 0xF814
00026401: call @lowercase with return %00026403

00026403:
00026409: R26 := R0
0002640f: R1 := 0x27000
00026415: R0 := 0x27000
0002641c: R28 := R28 + 0x6F8
00026424: R1 := mem[R1 + 0xFF8, el]:u64
0002642c: R27 := mem[R0 + 0xF78, el]:u64
00026434: R25 := mem[R1, el]:u64
00026440: #16765 := ~R25 = 0
0002643a: when #16765 goto %00026438
0003b207: goto %0002650f

00026438:
00026448: R0 := mem[R25 + 8, el]:u64
0002644d: R30 := 0xF864
0002644f: call @strdup with return %00026451

00026451:
00026454: R30 := 0xF868
00026456: call @lowercase with return %00026458

00026458:
0002645e: R24 := R0
00026467: R1 := mem[R27, el]:u32
00026473: #16771 := 31:0[R1] = 0
0002646d: when #16771 goto %0002646b
0003b208: goto %000264e5

000264e5:
000264eb: R3 := R0
000264f3: R2 := R26
000264fb: R1 := R28
00026502: R0 := 1
00026507: R30 := 0xF888
00026509: call @__printf_chk with return %0002650b

0002650b:
0002650d: goto %0002646b

0002646b:
0002647b: R1 := R26
00026483: R0 := R24
0002648a: R2 := 0
0002648f: R30 := 0xF848
00026491: call @fnmatch with return %00026493

00026493:
0002649d: #16778 := 31:0[R0] = 0
00026497: when #16778 goto %00026495
0003b209: goto %000264c2

00026495:
000264a3: R0 := 0x27000
000264ab: R0 := mem[R0 + 0xF78, el]:u64
000264b4: R0 := mem[R0, el]:u32
000264bf: #16781 := ~31:0[R0] = 0
000264b9: when #16781 goto %00024ee2
0003b20a: goto %00024efe

00024ee2:
00024ee6: R1 := 0x13000
00024eed: R0 := 1
00024ef4: R1 := R1 + 0x728
00024ef9: R30 := 0x1007C
00024efb: call @__printf_chk with return %00024efd

00024efd:
00024f00: goto %00024efe

00024efe:
00024f07: R0 := R24
00024f0d: R23 := 0
00024f12: R30 := 0xF8A8
00024f14: call @free with return %00024f16

000264c2:
000264c8: R0 := R24
000264cd: R30 := 0xF854
000264cf: call @free with return %000264d1

000264d1:
000264d7: R25 := mem[R25 + 0x10, el]:u64
000264e2: #16786 := R25 = 0
000264dc: when #16786 goto %00024f16
0003b20b: goto %00026438

0002650f:
00026511: goto %00024f16

00024f16:
00024f1c: R0 := R26
00024f21: R30 := 0xF8B0
00024f23: call @free with return %00024f25

00024f25:
00024f29: R0 := 0x1000
00024f2e: R30 := 0xF8B8
00024f30: call @new with return %00024f32

00024f32:
00024f36: R1 := 0x27000
00024f3d: R24 := 0
00024f43: R28 := 0x13000
00024f4a: R28 := R28 + 0x748
00024f52: R27 := mem[R1 + 0xF78, el]:u64
00024f5a: R25 := R0
00024f61: R26 := 0xFFF
00024f69: mem := mem with [R31 + 0x80, el]:u64 <- R21
00024f72: R21 := 31:0[R24]
00024f7a: R24 := R23
00024f82: R23 := R20
00024f8a: R20 := R28
00024f92: R28 := R27
00024f97: goto %00024f95

00024f95:
00024f9f: R0 := mem[R22, el]:u32
00024fa8: R2 := 31:0[R26] - 31:0[R21]
00024fb0: R1 := R25 + extend:64[31:0[R21]]
00024fb7: R2 := extend:64[31:0[R2]]
00024fbc: R30 := 0xF910
00024fbe: call @read with return %00024fc0

00024fc0:
00024fc6: R27 := R0
00024fcf: R1 := mem[R28, el]:u32
00024fdb: #16170 := ~31:0[R1] = 0
00024fd5: when #16170 goto %00024fd3
0003b20c: goto %0002500d

00024fd3:
00024fe2: R0 := 0x1000
00024feb: R2 := 31:0[R27]
00024ff4: R3 := 31:0[R0] - 31:0[R21]
00024ffc: R1 := R20
00025003: R0 := 1
00025008: R30 := 0xFC3C
0002500a: call @__printf_chk with return %0002500c

0002500c:
0002500f: goto %0002500d

0002500d:
00025015: #16180 := extend:64[31:0[R27]]
00025019: NF := 63:63[#16180]
0002501c: VF := 31:31[R27] & ~63:63[#16180]
0002501f: ZF := #16180 = 0
00025022: CF := 31:31[R27] | 31:31[R27] & ~63:63[#16180] | ~63:63[#16180]
00025033: #16182 := (NF = VF & ~ZF) <> 0
0002502d: when #16182 goto %0002502b
0003b20d: goto %00025775

00025775:
0002577b: R20 := R23
00025781: R1 := 0x13000
00025789: R23 := R24
00025791: R0 := R25
0002579a: R24 := 31:0[R21]
000257a1: R1 := R1 + 0x768
000257a9: R21 := mem[R31 + 0x80, el]:u64
000257ae: R30 := 0xF944
000257b0: call @strstr with return %000257b2

000257b2:
000257bc: #16402 := R0 = 0
000257b6: when #16402 goto %000257b4
0003b20e: goto %000257c5

000257c5:
000257c9: R1 := 0x13000
000257d1: R0 := R25
000257d8: R1 := R1 + 0x790
000257dd: R30 := 0xF958
000257df: call @strstr with return %000257e1

000257e1:
000257ea: #16406 := R0 = 0
000257e4: when #16406 goto %000257b4
0003b20f: goto %000257ed

000257ed:
000257f2: R1 := 0x22
000257f7: R30 := 0xF964
000257f9: call @strchr with return %000257fb

000257fb:
00025804: #16407 := R0 = 0
000257fe: when #16407 goto %000257b4
0003b210: goto %000256d3

000257b4:
000257c3: R28 := 1
0003b211: goto %00024a5b

0002502b:
0002503c: R21 := 31:0[R21] + 31:0[R27]
00025043: #16186 := 0xFFFFFFFFFFFFF002 + extend:64[31:0[R21]]
00025047: NF := 63:63[#16186]
0002504a: VF := 31:31[R21] & ~63:63[#16186]
0002504d: ZF := #16186 = 0
00025050: CF := 31:31[R21] | 31:31[R21] & ~63:63[#16186] | ~63:63[#16186]
00025061: #16188 := (NF = VF & ~ZF) <> 0
0002505b: when #16188 goto %00025059
0003b212: goto %00024f95

00025059:
00025069: R20 := R23
0002506f: R1 := 0x13000
00025077: R23 := R24
0002507f: R0 := R25
00025088: R24 := 31:0[R21]
0002508f: R1 := R1 + 0x768
00025097: R21 := mem[R31 + 0x80, el]:u64
0002509c: R30 := 0x102C8
0002509e: call @strstr with return %000250a0

000250a0:
000250aa: #16202 := R0 = 0
000250a4: when #16202 goto %000250a2
0003b213: goto %0002569b

0002569b:
0002569f: R1 := 0x13000
000256a7: R0 := R25
000256ae: R1 := R1 + 0x790
000256b3: R30 := 0x102DC
000256b5: call @strstr with return %000256b7

000256b7:
000256c0: #16367 := R0 = 0
000256ba: when #16367 goto %000250a2
0003b214: goto %000256c3

000256c3:
000256c8: R1 := 0x22
000256cd: R30 := 0x102E8
000256cf: call @strchr with return %000256d1

000256d1:
000256db: #16368 := ~R0 = 0
000256d5: when #16368 goto %000256d3
0003b215: goto %000250a2

000250a2:
000250b0: R0 := 0x27000
000250b8: R0 := mem[R0 + 0xF78, el]:u64
000250c1: R0 := mem[R0, el]:u32
000250c6: goto %000250c4

000256d3:
000256e2: R26 := R0 + 1
000256ea: R0 := R26
000256ef: R30 := 0xF974
000256f1: call @strlen with return %000256f3

000256f3:
000256f7: R1 := 0
00025703: #16372 := ~R0 = 0
000256fd: when #16372 goto %000256fb
0003b216: goto %00025771

000256fb:
0002570b: #16373 := R1
00025711: R3 := pad:32[mem[R26 + #16373]]
0002571a: R2 := 31:0[R1]
00025721: #16377 := 0xFFFFFFFFFFFFFFDE + extend:64[31:0[R3]]
00025725: NF := 63:63[#16377]
00025728: VF := 31:31[R3] & ~63:63[#16377]
0002572b: ZF := #16377 = 0
0002572e: CF := 31:31[R3] | 31:31[R3] & ~63:63[#16377] | ~63:63[#16377]
0002573d: #16379 := ~ZF <> 0
00025737: when #16379 goto %00025735
0003b217: goto %000251a4

00025735:
00025745: R2 := extend:64[31:0[R1]] + 1
0002574c: R1 := R1 + 1
00025754: #16383 := 1 + ~R1 + R0
00025758: NF := 63:63[#16383]
0002575b: VF := 63:63[R0] & 63:63[~R1] & ~63:63[#16383] | ~63:63[R0] &
          ~63:63[~R1] & 63:63[#16383]
0002575e: ZF := #16383 = 0
00025761: CF := 63:63[R0] & 63:63[~R1] | 63:63[~R1] & ~63:63[#16383] |
          63:63[R0] & ~63:63[#16383]
0002576e: #16388 := ZF
00025768: when #16388 goto %0002517a
0003b218: goto %000256fb

0002517a:
00025180: R0 := R26 + extend:64[31:0[R2]]
0003b219: goto %00025182

00025771:
00025773: goto %000252e9

000252e9:
000252ef: R0 := R26
000252f6: R2 := 0
000252fa: goto %00025182

00025182:
00025189: R0 := pad:32[mem[R0]]
00025190: #16223 := 0xFFFFFFFFFFFFFFDE + extend:64[31:0[R0]]
00025194: NF := 63:63[#16223]
00025197: VF := 31:31[R0] & ~63:63[#16223]
0002519a: ZF := #16223 = 0
0002519d: CF := 31:31[R0] | 31:31[R0] & ~63:63[#16223] | ~63:63[#16223]
000251ac: #16225 := ZF
000251a6: when #16225 goto %000251a4
0003b21a: goto %000252fc

000252fc:
00025300: R0 := 0x27000
00025308: R0 := mem[R0 + 0xF78, el]:u64
00025311: R0 := mem[R0, el]:u32
0002531c: #16263 := ~31:0[R0] = 0
00025316: when #16263 goto %00024eba
0003b21b: goto %0002531f

00024eba:
00024ebe: R1 := 0x13000
00024ec5: R0 := 1
00024ecc: R1 := R1 + 0xA38
00024ed5: R28 := 31:0[R0]
00024eda: R30 := 0x10068
00024edc: call @__printf_chk with return %00024ede

00024ede:
00024ee0: goto %00024a5b

0002531f:
00025324: R28 := 1
0002532f: #16264 := ~31:0[R24] = 0
00025329: when #16264 goto %000250c9
0003b21c: goto %00025332

00025332:
00025334: goto %00024a83

000251a4:
000251b3: R1 := 0
000251bb: R0 := R26
000251c0: R30 := 0xF9AC
000251c2: call @substr with return %000251c4

000251c4:
000251ca: mem := mem with [R31 + 0xD8, el]:u64 <- R0
000251d0: R1 := 0x27000
000251d8: R1 := mem[R1 + 0xF78, el]:u64
000251e1: R0 := mem[R1, el]:u32
000251ed: #16231 := ~31:0[R0] = 0
000251e7: when #16231 goto %000251e5
0003b21d: goto %00025213

000251e5:
000251f5: R2 := mem[R31 + 0xD8, el]:u64
000251fb: R1 := 0x13000
00025202: R0 := 1
00025209: R1 := R1 + 0x7A8
0002520e: R30 := 0x100A8
00025210: call @__printf_chk with return %00025212

00025212:
00025215: goto %00025213

00025213:
0002521b: R26 := 0x1000
00025221: R0 := 0x1000
00025229: mem := mem with [R31 + 0xE8, el]:u32 <- 31:0[R26]
0002522e: R30 := 0xF9D0
00025230: call @new with return %00025232

00025232:
00025236: R1 := 0x27000
0002523c: R2 := 0x13000
00025243: R2 := R2 + 0x7C8
0002524b: #16236 := R31 + 0x98
00025250: mem := mem with [#16236, el]:u64 <- 0
00025255: mem := mem with [#16236 + 8, el]:u64 <- R2
0002525c: R2 := R31 + 0xF0
00025264: R1 := mem[R1 + 0xF78, el]:u64
0002526c: mem := mem with [R31 + 0xB8, el]:u64 <- R1
00025272: R1 := 0x13000
00025279: R1 := R1 + 0x808
00025281: mem := mem with [R31 + 0xC0, el]:u64 <- R1
00025288: R1 := R31 + 0xE8
0002528e: R28 := 0x1000
00025296: #16242 := R31 + 0x88
0002529b: mem := mem with [#16242, el]:u64 <- R22
000252a0: mem := mem with [#16242 + 8, el]:u64 <- R23
000252a8: R23 := R2
000252b0: R22 := R1
000252b8: mem := mem with [R31 + 0xA8, el]:u64 <- R20
000252c0: mem := mem with [R31 + 0xB4, el]:u32 <- 0
000252c8: #16253 := R31 + 0xC8
000252cd: mem := mem with [#16253, el]:u64 <- 0
000252d2: mem := mem with [#16253 + 8, el]:u64 <- R21
000252db: R21 := 31:0[R26]
000252e3: mem := mem with [R31 + 0xF0, el]:u64 <- R0
000252e7: goto %00024b7b

00024b7b:
00024b81: R0 := mem[R31 + 0x88, el]:u64
00024b89: R2 := R22
00024b91: R1 := R23
00024b9a: R0 := mem[R0, el]:u32
00024b9f: R30 := 0xFBB0
00024ba1: call @so_recvln with return %00024ba3

00024ba3:
00024baa: R20 := 31:0[R0]
00024bb2: R26 := mem[R31 + 0xF0, el]:u64
00024bba: R0 := R26
00024bbf: R30 := 0xFBC0
00024bc1: call @strlen with return %00024bc3

00024bc3:
00024bc9: R27 := R0
00024bd1: R0 := R0 + extend:64[31:0[R24]]
00024bd9: #16025 := 1 + ~R28 + R0
00024bdd: NF := 63:63[#16025]
00024be0: VF := 63:63[R0] & 63:63[~R28] & ~63:63[#16025] | ~63:63[R0] &
          ~63:63[~R28] & 63:63[#16025]
00024be3: ZF := #16025 = 0
00024be6: CF := 63:63[R0] & 63:63[~R28] | 63:63[~R28] & ~63:63[#16025] |
          63:63[R0] & ~63:63[#16025]
00024bf5: #16030 := NF <> VF
00024bef: when #16030 goto %00024bed
0003b21e: goto %000261e1

000261e1:
000261e7: R21 := 31:0[R21] << 0x21
000261ef: R0 := R25
000261f6: R28 := extend:64[31:0[R21]]
000261fe: R1 := R28
00026203: R30 := 0xFBE4
00026205: call @realloc with return %00026207

00026207:
00026210: #16707 := R0 = 0
0002620a: when #16707 goto %000261ca
0003b21f: goto %00026213

00026213:
00026219: R26 := mem[R31 + 0xF0, el]:u64
00026221: R25 := R0
0003b220: goto %00024bed

00024bed:
00024bfd: R1 := R26
00024c06: R24 := 31:0[R24] + 31:0[R27]
00024c0e: R0 := R25
00024c13: R30 := 0xFC00
00024c15: call @strcat with return %00024c17

00024c17:
00024c21: #16040 := ~31:31[R20]
00024c1b: when #16040 goto %00024c19
0003b221: goto %000261ca

000261ca:
000261d0: R20 := mem[R31 + 0xA8, el]:u64
000261d7: R28 := 1
000261df: R27 := mem[R31 + 0xF0, el]:u64
0003b222: goto %00024a39

00024c19:
00024c29: R1 := mem[R31 + 0xA0, el]:u64
00024c31: R27 := mem[R31 + 0xF0, el]:u64
00024c39: R0 := R27
00024c3e: R30 := 0xFA34
00024c40: call @strstr with return %00024c42

00024c42:
00024c48: R26 := R0
00024c53: #16049 := R0 = 0
00024c4d: when #16049 goto %00024ac7
0003b223: goto %00024c56

00024c56:
00024c59: R30 := 0xFA40
00024c5b: call @__ctype_b_loc with return %00024c5d

00024c5d:
00024c64: R1 := pad:32[mem[R26 + 0xB]]
00024c6c: R0 := mem[R0, el]:u64
00024c74: #16051 := R1 << 1
00024c7a: R0 := mem[R0 + #16051, el]:u16
00024c85: #16052 := ~11:11[R0]
00024c7f: when #16052 goto %00024ac7
0003b224: goto %00024c88

00024ac7:
00024acd: R0 := R27
00024ad3: R1 := 0x13000
00024ada: R1 := R1 + 0x7D8
00024adf: R30 := 0xFCEC
00024ae1: call @strstr with return %00024ae3

00024ae3:
00024ae9: R26 := R0
00024af5: #15990 := R0 = 0
00024aef: when #15990 goto %00024aed
0003b225: goto %00026223

00026223:
00026226: R30 := 0xFCF8
00026228: call @__ctype_b_loc with return %0002622a

0002622a:
00026231: R1 := pad:32[mem[R26 + 0x11]]
00026239: R0 := mem[R0, el]:u64
00026241: #16713 := R1 << 1
00026247: R0 := mem[R0 + #16713, el]:u16
00026252: #16714 := ~11:11[R0]
0002624c: when #16714 goto %00024aed
0003b226: goto %00026255

00024aed:
00024afc: R0 := 1
00024b04: mem := mem with [R31 + 0x80, el]:u32 <- 0
00024b09: goto %00024b07

00026255:
0002625a: R0 := 1
00026262: mem := mem with [R31 + 0x80, el]:u32 <- 31:0[R0]
00026266: goto %00024c90

00024c88:
00024c8e: mem := mem with [R31 + 0x80, el]:u32 <- 0
0003b227: goto %00024c90

00024c90:
00024c96: R0 := mem[R31 + 0xB8, el]:u64
00024c9f: R0 := mem[R0, el]:u32
00024cab: #16055 := ~31:0[R0] = 0
00024ca5: when #16055 goto %00024ca3
0003b228: goto %00024cd9

00024ca3:
00024cb3: R2 := R27
00024cb9: R1 := 0x13000
00024cc0: R0 := 1
00024cc7: R1 := R1 + 0x7F0
00024ccc: R30 := 0xFF58
00024cce: call @__printf_chk with return %00024cd0

00024cd0:
00024cd6: R27 := mem[R31 + 0xF0, el]:u64
00024cdb: goto %00024cd9

00024cd9:
00024ce2: R1 := mem[R31 + 0xC0, el]:u64
00024cea: R0 := R27
00024cef: R30 := 0xFA6C
00024cf1: call @strstr with return %00024cf3

00024cf3:
00024cfd: #16064 := R0 = 0
00024cf7: when #16064 goto %00024cf5
0003b229: goto %00026004

00024cf5:
00024d06: R0 := mem[R31 + 0xB4, el]:u32
00024d12: #16066 := ~31:0[R0] = 0
00024d0c: when #16066 goto %00024d0a
0003b22a: goto %00025fc9

00025fc9:
00025fcd: R0 := 0x27000
00025fd5: R22 := mem[R31 + 0x88, el]:u64
00025fdd: R0 := mem[R0 + 0xF78, el]:u64
00025fe5: R20 := mem[R31 + 0xA8, el]:u64
00025fee: R0 := mem[R0, el]:u32
00025ff6: R21 := mem[R31 + 0xD0, el]:u64
00026001: #16647 := ~31:0[R0] = 0
00025ffb: when #16647 goto %00025f37
0003b22b: goto %00024a19

00025f37:
00025f3b: R1 := 0x13000
00025f42: R0 := 1
00025f49: R1 := R1 + 0x898
00025f4e: R30 := 0x1021C
00025f50: call @__printf_chk with return %00025f52

00025f52:
00025f58: R27 := mem[R31 + 0xF0, el]:u64
00025f5c: goto %00024a19

00026004:
00026009: R2 := 0xA
0002600f: R1 := 0
00026016: R0 := R0 + 0x10
0002601b: R30 := 0xFA80
0002601d: call @strtol with return %0002601f

0002601f:
00026023: R1 := 0x27000
0002602b: R2 := R0
00026033: mem := mem with [R31 + 0x98, el]:u64 <- R2
0002603b: R1 := mem[R1 + 0xF78, el]:u64
00026044: R0 := mem[R1, el]:u32
00026050: #16653 := 31:0[R0] = 0
0002604a: when #16653 goto %00026048
0003b22c: goto %0002617c

0002617c:
00026181: #16691 := R2
00026185: NF := 63:63[#16691]
00026188: VF := 63:63[R2] & ~63:63[#16691]
0002618b: ZF := #16691 = 0
0002618e: CF := 63:63[R2] | ~63:63[#16691] | 63:63[R2] & ~63:63[#16691]
0002619d: #16693 := (NF <> VF | ZF) <> 0
00026197: when #16693 goto %00025f8a
0003b22d: goto %000261a0

00025f8a:
00025f8e: R1 := 0x13000
00025f95: R0 := 1
00025f9c: R1 := R1 + 0x858
00025fa4: R22 := mem[R31 + 0x88, el]:u64
00025fac: R20 := mem[R31 + 0xA8, el]:u64
00025fb4: R21 := mem[R31 + 0xD0, el]:u64
00025fb9: R30 := 0x10130
00025fbb: call @__printf_chk with return %00025fbd

00025fbd:
00025fc3: R27 := mem[R31 + 0xF0, el]:u64
00025fc7: goto %00024a19

000261a0:
000261a6: R3 := mem[R31 + 0x90, el]:u64
000261ac: R1 := 0x13000
000261b3: R2 := R2 >> 0xA
000261ba: R1 := R1 + 0x820
000261c1: R0 := 1
000261c6: R30 := 0xFAB8
000261c8: call @__printf_chk with return %00026048

00026048:
00026058: R0 := mem[R31 + 0x90, el]:u64
00026064: #16655 := R0 = 0
0002605e: when #16655 goto %0002605c
0003b22e: goto %000260f0

000260f0:
000260f5: #16674 := 0xFFFFFFFFFFFFFFFF + R0
000260f9: NF := 63:63[#16674]
000260fc: VF := 63:63[R0] & ~63:63[#16674]
000260ff: ZF := #16674 = 0
00026102: CF := 63:63[R0] | ~63:63[#16674] | 63:63[R0] & ~63:63[#16674]
0002610f: #16676 := ZF
00026109: when #16676 goto %00024b4d
0003b22f: goto %00026112

00026112:
00026118: R1 := mem[R31 + 0x98, el]:u64
0002611f: #16678 := R1
00026123: NF := 63:63[#16678]
00026126: VF := 63:63[R1] & ~63:63[#16678]
00026129: ZF := #16678 = 0
0002612c: CF := 63:63[R1] | ~63:63[#16678] | 63:63[R1] & ~63:63[#16678]
00026135: R0 := R1 + 0x3FF
0002614c: #16680 := NF <> VF
0002614d: goto %00026144

00026144:
00026146: when #16680 goto %0002613e
00026147: goto %00026141

00026141:
00026142: R0 := R1
00026149: goto %00026145

0002613e:
0002613f: R0 := R0
00026148: goto %00026145

00026145:
00026156: R1 := mem[R31 + 0x90, el]:u64
0002615e: #16685 := 1 + ~(R0 ~>> 0xA) + R1
00026162: NF := 63:63[#16685]
00026165: VF := 63:63[R1] & 63:63[~(R0 ~>> 0xA)] & ~63:63[#16685] |
          ~63:63[R1] & ~63:63[~(R0 ~>> 0xA)] & 63:63[#16685]
00026168: ZF := #16685 = 0
0002616b: CF := 63:63[R1] & 63:63[~(R0 ~>> 0xA)] | 63:63[~(R0 ~>> 0xA)] &
          ~63:63[#16685] | 63:63[R1] & ~63:63[#16685]
00026179: #16690 := NF <> VF
00026173: when #16690 goto %00024b4d
0003b230: goto %0002605c

0002605c:
0002606a: R0 := 0x32
0002606f: R30 := 0xFAEC
00026071: call @new with return %00026073

00026073:
00026079: R1 := mem[R31 + 0xD0, el]:u64
0002607f: R4 := 0x13000
00026086: R4 := R4 + 0x888
0002608c: R3 := 0xFFFFFFFFFFFFFFFF
00026093: R2 := 1
0002609b: R26 := R0
000260a3: R5 := mem[R1 + 0x48, el]:u64
000260a9: R1 := 0x32
000260ae: R30 := 0xFB10
000260b0: call @__snprintf_chk with return %000260b2

000260b2:
000260b8: R0 := R26
000260bd: R30 := 0xFB18
000260bf: call @strlen with return %000260c1

000260c1:
000260c7: R2 := R0
000260d0: R0 := mem[R31 + 0xB0, el]:u32
000260d8: R1 := R26
000260dd: R30 := 0xFB28
000260df: call @write with return %000260e1

000260e1:
000260e7: R0 := R26
000260ec: R30 := 0xFB30
000260ee: call @free with return %00024d0a

00024d0a:
00024d1a: R0 := mem[R31 + 0x98, el]:u64
00024d21: #16068 := R0
00024d25: NF := 63:63[#16068]
00024d28: VF := 63:63[R0] & ~63:63[#16068]
00024d2b: ZF := #16068 = 0
00024d2e: CF := 63:63[R0] | ~63:63[#16068] | 63:63[R0] & ~63:63[#16068]
00024d38: R0 := mem[R31 + 0x90, el]:u64
00024d50: #16071 := ~ZF <> 0
00024d51: goto %00024d48

00024d48:
00024d4a: when #16071 goto %00024d41
00024d4b: goto %00024d45

00024d45:
00024d46: R26 := 1
00024d4d: goto %00024d49

00024d41:
00024d42: R26 := 0
00024d4c: goto %00024d49

00024d49:
00024d59: #16072 := R0
00024d5d: NF := 63:63[#16072]
00024d60: VF := 63:63[R0] & ~63:63[#16072]
00024d63: ZF := #16072 = 0
00024d66: CF := 63:63[R0] | ~63:63[#16072] | 63:63[R0] & ~63:63[#16072]
00024d71: R0 := mem[R31 + 0x80, el]:u32
00024d89: #16075 := ~ZF <> 0
00024d8a: goto %00024d81

00024d81:
00024d83: when #16075 goto %00024d7a
00024d84: goto %00024d7e

00024d7e:
00024d7f: R26 := 0
00024d86: goto %00024d82

00024d7a:
00024d7b: R26 := 31:0[R26]
00024d85: goto %00024d82

00024d82:
00024d97: #16076 := 31:0[R0] = 0
00024d91: when #16076 goto %00024d8f
0003b231: goto %000258ac

00024d8f:
00024d9d: R0 := 0x32
00024da2: R30 := 0xFF68
00024da4: call @new with return %00024da6

00024da6:
00024dac: R3 := mem[R31 + 0xF0, el]:u64
00024db4: R27 := R0
00024dbb: R2 := 0xA
00024dc1: R1 := 0
00024dc8: R0 := R3 + 0xC
00024dcd: R30 := 0xFF80
00024dcf: call @strtol with return %00024dd1

00024dd1:
00024dd7: R5 := R0
00024ddf: R6 := mem[R31 + 0x98, el]:u64
00024de5: R4 := 0x13000
00024dec: R4 := R4 + 0x8D8
00024df2: R3 := 0xFFFFFFFFFFFFFFFF
00024df9: R2 := 1
00024dff: R1 := 0x32
00024e07: mem := mem with [R31 + 0xC8, el]:u64 <- R0
00024e0f: R0 := R27
00024e14: R30 := 0xFFA8
00024e16: call @__snprintf_chk with return %00024e18

00024e18:
00024e1e: R0 := R27
00024e23: R30 := 0xFFB0
00024e25: call @strlen with return %00024e27

00024e27:
00024e2d: R2 := R0
00024e36: R0 := mem[R31 + 0xB0, el]:u32
00024e3e: R1 := R27
00024e43: R30 := 0xFFC0
00024e45: call @write with return %00024e47

00024e47:
00024e4d: R0 := R27
00024e52: R30 := 0xFFC8
00024e54: call @free with return %00024e56

00024e56:
00024e60: #16101 := ~31:0[R26] = 0
00024e5a: when #16101 goto %00024e58
0003b232: goto %00025899

00025899:
0002589e: R0 := 1
000258a6: mem := mem with [R31 + 0xB4, el]:u32 <- 31:0[R0]
000258aa: goto %00024b07

000258ac:
000258b6: #16445 := 31:0[R26] = 0
000258b0: when #16445 goto %000258ae
0003b233: goto %00024e58

000258ae:
000258bf: R0 := mem[R31 + 0x80, el]:u32
000258c7: mem := mem with [R31 + 0xB4, el]:u32 <- 31:0[R0]
000258cf: R22 := mem[R31 + 0x88, el]:u64
000258d7: R20 := mem[R31 + 0xA8, el]:u64
000258df: R21 := mem[R31 + 0xD0, el]:u64
000258e7: R27 := mem[R31 + 0xF0, el]:u64
000258ec: goto %000258ea

00024e58:
00024e68: R0 := mem[R31 + 0x90, el]:u64
00024e6f: #16103 := 0xFFFFFFFFFFFFFFFF + R0
00024e73: NF := 63:63[#16103]
00024e76: VF := 63:63[R0] & ~63:63[#16103]
00024e79: ZF := #16103 = 0
00024e7c: CF := 63:63[R0] | ~63:63[#16103] | 63:63[R0] & ~63:63[#16103]
00024e8a: #16105 := ZF
00024e84: when #16105 goto %00024e82
0003b234: goto %00025807

00024e82:
00024e93: R0 := mem[R31 + 0x80, el]:u32
00024e9c: R1 := mem[R31 + 0x90, el]:u32
00024ea4: R0 := 31:0[R0] ^ 1
00024eac: mem := mem with [R31 + 0x98, el]:u64 <- 0
00024eb4: mem := mem with [R31 + 0xB4, el]:u32 <- 31:0[R1]
00024eb8: goto %00024b07

00025807:
0002580d: R1 := mem[R31 + 0xC8, el]:u64
00025814: #16409 := R1
00025818: NF := 63:63[#16409]
0002581b: VF := 63:63[R1] & ~63:63[#16409]
0002581e: ZF := #16409 = 0
00025821: CF := 63:63[R1] | ~63:63[#16409] | 63:63[R1] & ~63:63[#16409]
0002582a: R0 := R1 + 0x3FF
00025841: #16411 := NF <> VF
00025842: goto %00025839

00025839:
0002583b: when #16411 goto %00025833
0002583c: goto %00025836

00025836:
00025837: R0 := R1
0002583e: goto %0002583a

00025833:
00025834: R0 := R0
0002583d: goto %0002583a

0002583a:
0002584b: R1 := mem[R31 + 0x90, el]:u64
00025853: #16416 := 1 + ~(R0 ~>> 0xA) + R1
00025857: NF := 63:63[#16416]
0002585a: VF := 63:63[R1] & 63:63[~(R0 ~>> 0xA)] & ~63:63[#16416] |
          ~63:63[R1] & ~63:63[~(R0 ~>> 0xA)] & 63:63[#16416]
0002585d: ZF := #16416 = 0
00025860: CF := 63:63[R1] & 63:63[~(R0 ~>> 0xA)] | 63:63[~(R0 ~>> 0xA)] &
          ~63:63[#16416] | 63:63[R1] & ~63:63[#16416]
0002586e: #16421 := NF <> VF
00025868: when #16421 goto %000249e1
0003b235: goto %00025871

00025871:
00025878: R0 := mem[R31 + 0x80, el]:u32
0002587f: R1 := 1
00025887: mem := mem with [R31 + 0x98, el]:u64 <- 0
0002588f: R0 := 31:0[R0] ^ 1
00025897: mem := mem with [R31 + 0xB4, el]:u32 <- 31:0[R1]
0003b236: goto %00024b07

00024b07:
00024b0f: #15991 := extend:64[31:0[R20]]
00024b13: NF := 63:63[#15991]
00024b16: VF := 31:31[R20] & ~63:63[#15991]
00024b19: ZF := #15991 = 0
00024b1c: CF := 31:31[R20] | 31:31[R20] & ~63:63[#15991] | ~63:63[#15991]
00024b47: #15993 := (NF = VF & ~ZF) <> 0
00024b48: goto %00024b3f

00024b3f:
00024b41: when #15993 goto %00024b27
00024b42: goto %00024b33

00024b33:
00024b34: NF := 0
00024b37: ZF := 1
00024b3a: CF := 0
00024b3d: VF := 0
00024b44: goto %00024b40

00024b27:
00024b28: NF := 63:63[extend:64[31:0[R0]] + 0]
00024b2b: VF := 31:31[R0] & ~63:63[extend:64[31:0[R0]] + 0]
00024b2e: ZF := extend:64[31:0[R0]] + 0 = 0
00024b31: CF := 31:31[R0] | ~63:63[extend:64[31:0[R0]] + 0] | 31:31[R0] &
          ~63:63[extend:64[31:0[R0]] + 0]
00024b43: goto %00024b40

00024b40:
00024b55: #15996 := ZF
00024b4f: when #15996 goto %00024b4d
0003b237: goto %00024b7b

00024b4d:
00024b5d: R22 := mem[R31 + 0x88, el]:u64
00024b65: R20 := mem[R31 + 0xA8, el]:u64
00024b6d: R21 := mem[R31 + 0xD0, el]:u64
00024b75: R27 := mem[R31 + 0xF0, el]:u64
00024b79: goto %00024a19

00026358:
00026369: R21 := mem[R31 + 0x30, el]:u64
0002636d: R22 := mem[R31 + 0x38, el]:u64
00026376: R23 := mem[R31 + 0x40, el]:u64
0002637a: R24 := mem[R31 + 0x48, el]:u64
0002637e: goto %00024950

00024950:
0002495f: R28 := 3
0003b238: goto %00024961

00024961:
00024967: R19 := mem[R19 + 0xFB8, el]:u64
0002496f: R0 := mem[R31 + 0xF8, el]:u64
00024977: R1 := mem[R19, el]:u64
0002497f: #15943 := 1 + ~R1 + R0
00024983: NF := 63:63[#15943]
00024986: VF := 63:63[R0] & 63:63[~R1] & ~63:63[#15943] | ~63:63[R0] &
          ~63:63[~R1] & 63:63[#15943]
00024989: ZF := #15943 = 0
0002498c: CF := 63:63[R0] & 63:63[~R1] | 63:63[~R1] & ~63:63[#15943] |
          63:63[R0] & ~63:63[#15943]
00024990: R0 := #15943
00024996: R1 := 0
000249a2: #15948 := ~ZF <> 0
0002499c: when #15948 goto %0002499a
0003b239: goto %0002628c

0002499a:
000249aa: #15952 := R31 + 0x30
000249af: mem := mem with [#15952, el]:u64 <- R21
000249b4: mem := mem with [#15952 + 8, el]:u64 <- R22
000249bc: #15957 := R31 + 0x40
000249c1: mem := mem with [#15957, el]:u64 <- R23
000249c6: mem := mem with [#15957 + 8, el]:u64 <- R24
000249ce: #15962 := R31 + 0x50
000249d3: mem := mem with [#15962, el]:u64 <- R25
000249d8: mem := mem with [#15962 + 8, el]:u64 <- R26
000249dd: R30 := 0x100DC
000249df: call @__stack_chk_fail with return %000249e1

000249e1:
000249e6: R0 := 1
000249ee: mem := mem with [R31 + 0x98, el]:u64 <- 0
000249f6: mem := mem with [R31 + 0xB4, el]:u32 <- 31:0[R0]
000249fe: R22 := mem[R31 + 0x88, el]:u64
00024a06: R20 := mem[R31 + 0xA8, el]:u64
00024a0e: R21 := mem[R31 + 0xD0, el]:u64
00024a16: R27 := mem[R31 + 0xF0, el]:u64
00024a1b: goto %00024a19

00024a19:
00024a23: R0 := mem[R31 + 0x80, el]:u32
00024a2f: #15969 := 31:0[R0] = 0
00024a29: when #15969 goto %00024a27
0003b23a: goto %000258ea

00024a27:
00024a36: R28 := 1
00024a3b: goto %00024a39

000258ea:
000258f3: R0 := R27
000258f9: R1 := 0x13000
00025900: R1 := R1 + 0x8F8
00025905: R30 := 0xFD5C
00025907: call @strstr with return %00025909

00025909:
0002590e: R23 := R0 + 3
00025915: R1 := 0x22
0002591d: R0 := R23
00025922: R30 := 0xFD6C
00025924: call @strchr with return %00025926

00025926:
0002592c: R2 := R0 - R23
00025933: R28 := 1
0002593a: #16460 := R2
0002593e: NF := 63:63[#16460]
00025941: VF := 63:63[R2] & ~63:63[#16460]
00025944: ZF := #16460 = 0
00025947: CF := 63:63[R2] | ~63:63[#16460] | 63:63[R2] & ~63:63[#16460]
00025956: #16462 := (NF <> VF | ZF) <> 0
00025950: when #16462 goto %00024a39
0003b23b: goto %00025959

00025959:
0002595e: R1 := 0
00025966: R0 := R23
0002596b: R30 := 0xFD88
0002596d: call @substr with return %0002596f

0002596f:
00025975: R26 := R0
0002597a: R30 := 0xFD90
0002597c: call @urlencode with return %0002597e

0002597e:
00025984: R23 := R0
0002598c: R0 := R26
00025991: R30 := 0xFD9C
00025993: call @free with return %00025995

00025995:
0002599b: R0 := mem[R21 + 0x30, el]:u64
000259a0: R30 := 0xFDA4
000259a2: call @urlencode with return %000259a4

000259a4:
000259aa: R26 := R0
000259b0: R0 := 0x1000
000259b8: mem := mem with [R31 + 0x80, el]:u64 <- R26
000259bd: R30 := 0xFDB4
000259bf: call @new with return %000259c1

000259c1:
000259c7: R27 := R0
000259cf: R5 := mem[R31 + 0xD8, el]:u64
000259d7: #16486 := R31
000259dc: mem := mem with [#16486, el]:u64 <- R5
000259e1: mem := mem with [#16486 + 8, el]:u64 <- R26
000259e9: R6 := R23
000259f1: R7 := R5
000259fa: R2 := 31:0[R28]
00025a00: R4 := 0x13000
00025a06: R3 := 0xFFFFFFFFFFFFFFFF
00025a0d: R4 := R4 + 0x900
00025a13: R1 := 0xFFF
00025a18: R30 := 0xFDE0
00025a1a: call @__snprintf_chk with return %00025a1c

00025a1c:
00025a20: R0 := 0x27000
00025a28: R0 := mem[R0 + 0xF78, el]:u64
00025a31: R0 := mem[R0, el]:u32
00025a3d: #16499 := ~31:0[R0] = 0
00025a37: when #16499 goto %00025a35
0003b23c: goto %00025a65

00025a35:
00025a45: R2 := mem[R21 + 0x30, el]:u64
00025a4e: R0 := 31:0[R28]
00025a54: R1 := 0x13000
00025a5b: R1 := R1 + 0x928
00025a60: R30 := 0x10110
00025a62: call @__printf_chk with return %00025a64

00025a64:
00025a67: goto %00025a65

00025a65:
00025a6c: R0 := 0x32
00025a71: R30 := 0xFDF8
00025a73: call @new with return %00025a75

00025a75:
00025a7b: R28 := R0
00025a83: R0 := R27
00025a88: R30 := 0xFE04
00025a8a: call @strlen with return %00025a8c

00025a8c:
00025a93: R5 := 31:0[R0]
00025a99: R4 := 0x13000
00025aa0: R4 := R4 + 0x958
00025aa6: R3 := 0xFFFFFFFFFFFFFFFF
00025aad: R2 := 1
00025ab3: R1 := 0x32
00025abb: R0 := R28
00025ac0: R30 := 0xFE24
00025ac2: call @__snprintf_chk with return %00025ac4

00025ac4:
00025ac7: R30 := 0xFE28
00025ac9: call @new_rr_data with return %00025acb

00025acb:
00025ad1: R23 := R0
00025ad9: R0 := R21
00025ade: R30 := 0xFE34
00025ae0: call @dup_rr_data with return %00025ae2

00025ae2:
00025ae8: R26 := R0
00025af0: R0 := mem[R0 + 0x28, el]:u64
00025af5: R30 := 0xFE40
00025af7: call @free with return %00025af9

00025af9:
00025afd: R0 := 0x13000
00025b04: R0 := R0 + 0x960
00025b09: R30 := 0xFE4C
00025b0b: call @strdup with return %00025b0d

00025b0d:
00025b13: R2 := mem[R21 + 0x30, el]:u64
00025b1b: mem := mem with [R26 + 0x28, el]:u64 <- R0
00025b23: R0 := mem[R26 + 8, el]:u64
00025b2a: R3 := 1
00025b30: R1 := 0x13000
00025b37: R1 := R1 + 0x968
00025b3c: R30 := 0xFE68
00025b3e: call @hlist_mod with return %00025b40

00025b40:
00025b46: R0 := mem[R26 + 8, el]:u64
00025b4d: R3 := 1
00025b53: R2 := 0x13000
00025b59: R1 := 0x12000
00025b60: R2 := R2 + 0x970
00025b67: R1 := R1 + 0x928
00025b6c: R30 := 0xFE84
00025b6e: call @hlist_mod with return %00025b70

00025b70:
00025b76: R0 := mem[R26 + 8, el]:u64
00025b7e: R2 := R28
00025b84: R1 := 0x12000
00025b8b: R1 := R1 + 0x918
00025b92: R3 := 1
00025b97: R30 := 0xFE9C
00025b99: call @hlist_mod with return %00025b9b

00025b9b:
00025ba1: R0 := R28
00025ba6: R30 := 0xFEA4
00025ba8: call @free with return %00025baa

00025baa:
00025bb0: R21 := mem[R31 + 0x78, el]:u64
00025bb8: R0 := R21
00025bbd: R30 := 0xFEB0
00025bbf: call @proxy_connect with return %00025bc1

00025bc1:
00025bc8: R4 := 31:0[R0]
00025bd0: R3 := R21
00025bd8: R2 := R23
00025be0: R1 := R26
00025be7: R0 := R31 + 0xEC
00025bef: mem := mem with [R31 + 0xEC, el]:u32 <- 31:0[R4]
00025bf4: R30 := 0xFECC
00025bf6: call @proxy_authenticate with return %00025bf8

00025bf8:
00025c02: #16552 := 31:0[R0] = 0
00025bfc: when #16552 goto %00025bfa
0003b23d: goto %00025f5e

00025f5e:
00025f65: R0 := mem[R23 + 0x10, el]:u32
00025f6c: #16635 := 0xFFFFFFFFFFFFFE69 + extend:64[31:0[R0]]
00025f70: NF := 63:63[#16635]
00025f73: VF := 31:31[R0] & ~63:63[#16635]
00025f76: ZF := #16635 = 0
00025f79: CF := 31:31[R0] | 31:31[R0] & ~63:63[#16635] | ~63:63[#16635]
00025f87: #16637 := ZF
00025f81: when #16637 goto %00025ef5
0003b23e: goto %00025bfa

00025ef5:
00025ef9: R0 := 0x27000
00025f01: R0 := mem[R0 + 0xF78, el]:u64
00025f0a: R0 := mem[R0, el]:u32
00025f15: #16632 := 31:0[R0] = 0
00025f0f: when #16632 goto %00025c5e
0003b23f: goto %00025f18

00025f18:
00025f1c: R1 := 0x13000
00025f23: R0 := 1
00025f2a: R1 := R1 + 0x998
00025f2f: R30 := 0x10208
00025f31: call @__printf_chk with return %00025f33

00025f33:
00025f35: goto %00025c5e

00025bfa:
00025c08: R0 := 0x27000
00025c10: R0 := mem[R0 + 0xF78, el]:u64
00025c19: R0 := mem[R0, el]:u32
00025c25: #16555 := ~31:0[R0] = 0
00025c1f: when #16555 goto %00025c1d
0003b240: goto %00025c43

00025c1d:
00025c2b: R1 := 0x13000
00025c32: R0 := 1
00025c39: R1 := R1 + 0x9D0
00025c3e: R30 := 0x101E4
00025c40: call @__printf_chk with return %00025c42

00025c42:
00025c45: goto %00025c43

00025c43:
00025c4d: R0 := mem[R31 + 0xEC, el]:u32
00025c52: R30 := 0xFEF4
00025c54: call @close with return %00025c56

00025c56:
00025c5c: mem := mem with [R31 + 0xEC, el]:u32 <- 0
0003b241: goto %00025c5e

00025c5e:
00025c64: R0 := R23
00025c69: R30 := 0xFF00
00025c6b: call @reset_rr_data with return %00025c6d

00025c6d:
00025c74: R0 := mem[R31 + 0xEC, el]:u32
00025c80: #16561 := ~31:0[R0] = 0
00025c7a: when #16561 goto %00025c78
0003b242: goto %00025c93

00025c78:
00025c88: R1 := R26
00025c8d: R30 := 0x10154
00025c8f: call @headers_send with return %00025c91

00025c91:
00025c9b: #16565 := 31:0[R0] = 0
00025c95: when #16565 goto %00025c93
0003b243: goto %00025d30

00025d30:
00025d36: R0 := R27
00025d3b: R30 := 0x10160
00025d3d: call @strlen with return %00025d3f

00025d3f:
00025d45: R2 := R0
00025d4e: R0 := mem[R31 + 0xEC, el]:u32
00025d56: R1 := R27
00025d5b: R30 := 0x10170
00025d5d: call @write with return %00025d5f

00025d5f:
00025d68: #16593 := R0 = 0
00025d62: when #16593 goto %00025c93
0003b244: goto %00025d6b

00025d6b:
00025d72: R0 := mem[R31 + 0xEC, el]:u32
00025d7a: R1 := R23
00025d7f: R30 := 0x10180
00025d81: call @headers_recv with return %00025d83

00025d83:
00025d8c: #16598 := 31:0[R0] = 0
00025d86: when #16598 goto %00025c93
0003b245: goto %00025d8f

00025d8f:
00025d93: R0 := 0x27000
00025d9b: R0 := mem[R0 + 0xF78, el]:u64
00025da4: R0 := mem[R0, el]:u32
00025db0: #16601 := ~31:0[R0] = 0
00025daa: when #16601 goto %00025da8
0003b246: goto %00025dc2

00025da8:
00025db8: R0 := mem[R23 + 8, el]:u64
00025dbd: R30 := 0x10288
00025dbf: call @hlist_dump with return %00025dc1

00025dc1:
00025dc4: goto %00025dc2

00025dc2:
00025dcb: R0 := mem[R31 + 0x98, el]:u64
00025dd3: R1 := mem[R31 + 0xC8, el]:u64
00025ddb: R0 := R0 | R1
00025de7: #16608 := ~R0 = 0
00025de1: when #16608 goto %00025ddf
0003b247: goto %00025e97

00025ddf:
00025ded: R0 := 0x14
00025df2: R30 := 0x10234
00025df4: call @new with return %00025df6

00025df6:
00025dfc: R1 := mem[R31 + 0x98, el]:u64
00025e04: R21 := R0
00025e0c: R2 := mem[R31 + 0xC8, el]:u64
00025e13: #16614 := R1
00025e17: NF := 63:63[#16614]
00025e1a: VF := 63:63[R1] & ~63:63[#16614]
00025e1d: ZF := #16614 = 0
00025e20: CF := 63:63[R1] | ~63:63[#16614] | 63:63[R1] & ~63:63[#16614]
00025e28: R3 := 0xFFFFFFFFFFFFFFFF
00025e2e: R4 := 0x13000
00025e44: #16616 := ~ZF <> 0
00025e45: goto %00025e3c

00025e3c:
00025e3e: when #16616 goto %00025e36
00025e3f: goto %00025e39

00025e39:
00025e3a: R5 := R2
00025e41: goto %00025e3d

00025e36:
00025e37: R5 := R1
00025e40: goto %00025e3d

00025e3d:
00025e4d: R4 := R4 + 0xA08
00025e54: R2 := 1
00025e5a: R1 := 0x14
00025e5f: R30 := 0x10260
00025e61: call @__snprintf_chk with return %00025e63

00025e63:
00025e69: R0 := mem[R23 + 8, el]:u64
00025e71: R2 := R21
00025e77: R1 := 0x12000
00025e7e: R3 := 1
00025e85: R1 := R1 + 0x918
00025e8a: R30 := 0x10278
00025e8c: call @hlist_mod with return %00025e8e

00025e8e:
00025e94: mem := mem with [R23 + 8, el]:u64 <- R0
00025e99: goto %00025e97

00025e97:
00025ea1: R0 := mem[R31 + 0xB4, el]:u32
00025ea9: R1 := R23
00025eb1: mem := mem with [R23 + 0x14, el]:u32 <- 31:0[R0]
00025eb9: R0 := R20
00025ec0: R24 := 0
00025ec7: R28 := 3
00025ecc: R30 := 0x101C0
00025ece: call @copy_rr_data with return %00025ed0

00025ed0:
00025ed7: R0 := mem[R22, el]:u32
00025edc: R30 := 0x101C8
00025ede: call @close with return %00025ee0

00025ee0:
00025ee7: R0 := mem[R31 + 0xEC, el]:u32
00025eef: mem := mem with [R22, el]:u32 <- 31:0[R0]
00025ef3: goto %00025ce5

00025c93:
00025ca1: R0 := 0x27000
00025ca8: R28 := 1
00025cb0: R0 := mem[R0 + 0xF78, el]:u64
00025cb9: R0 := mem[R0, el]:u32
00025cc5: #16568 := ~31:0[R0] = 0
00025cbf: when #16568 goto %00025cbd
0003b248: goto %00025ce5

00025cbd:
00025cce: R0 := 31:0[R28]
00025cd4: R1 := 0x13000
00025cdb: R1 := R1 + 0xA10
00025ce0: R30 := 0x10148
00025ce2: call @__printf_chk with return %00025ce4

00025ce4:
00025ce7: goto %00025ce5

00025ce5:
00025cee: R0 := R26
00025cf3: R30 := 0xFF24
00025cf5: call @free with return %00025cf7

00025cf7:
00025cfd: R0 := R23
00025d02: R30 := 0xFF2C
00025d04: call @free with return %00025d06

00025d06:
00025d0c: R0 := R27
00025d11: R30 := 0xFF34
00025d13: call @free with return %00025d15

00025d15:
00025d1b: R0 := mem[R31 + 0x80, el]:u64
00025d20: R30 := 0xFF3C
00025d22: call @free with return %00025d24

00025d24:
00025d2a: R27 := mem[R31 + 0xF0, el]:u64
00025d2e: goto %00024a39

00024a39:
00024a42: R0 := R27
00024a47: R30 := 0xFC18
00024a49: call @free with return %00024a4b

00024a4b:
00024a51: R0 := mem[R31 + 0xD8, el]:u64
00024a56: R30 := 0xFC20
00024a58: call @free with return %00024a5a

00024a5a:
00024a5d: goto %00024a5b

00024a5b:
00024a62: R0 := 0x27000
00024a6a: R0 := mem[R0 + 0xF78, el]:u64
00024a73: R0 := mem[R0, el]:u32
00024a7f: #15976 := 31:0[R24] = 0
00024a79: when #15976 goto %00024a77
0003b249: goto %000250c4

000250c4:
000250d1: #16205 := 31:0[R0] = 0
000250cb: when #16205 goto %000250c9
0003b24a: goto %000253ac

000253ac:
000253b3: R2 := 31:0[R24]
000253b9: R1 := 0x13000
000253c0: R0 := 1
000253c7: R1 := R1 + 0xA58
000253cc: R30 := 0xFC6C
000253ce: call @__printf_chk with return %000253d0

000253d0:
000253d6: R0 := mem[R20 + 8, el]:u64
000253db: R30 := 0xFC74
000253dd: call @hlist_dump with return %000250c9

000250c9:
000250da: R0 := mem[R31 + 0xB0, el]:u32
000250e2: R1 := R20
000250e7: R30 := 0xFC80
000250e9: call @headers_send with return %000250eb

000250eb:
000250f5: #16210 := 31:0[R0] = 0
000250ef: when #16210 goto %000250ed
0003b24b: goto %0002534a

000250ed:
000250fb: R0 := 0x27000
00025103: R0 := mem[R0 + 0xF78, el]:u64
0002510c: R0 := mem[R0, el]:u32
00025118: #16213 := ~31:0[R0] = 0
00025112: when #16213 goto %00025110
0003b24c: goto %00025136

00025110:
0002511e: R1 := 0x13000
00025125: R0 := 1
0002512c: R1 := R1 + 0xA88
00025131: R30 := 0x10090
00025133: call @__printf_chk with return %00025135

00025135:
00025138: goto %00025136

00025136:
0002513f: R0 := R25
00025146: R28 := 0x8000
0002514b: R30 := 0xFFF4
0002514d: call @free with return %0002514f

0002514f:
00025156: R21 := mem[R31 + 0x30, el]:u64
0002515a: R22 := mem[R31 + 0x38, el]:u64
00025163: R23 := mem[R31 + 0x40, el]:u64
00025167: R24 := mem[R31 + 0x48, el]:u64
00025170: R25 := mem[R31 + 0x50, el]:u64
00025174: R26 := mem[R31 + 0x58, el]:u64
00025178: goto %00024961

0002534a:
00025351: R0 := mem[R31 + 0xB0, el]:u32
00025358: R2 := extend:64[31:0[R24]]
00025360: R1 := R25
00025365: R30 := 0xFC94
00025367: call @write with return %00025369

00025369:
0002536e: #16271 := extend:64[31:0[R0]]
00025372: NF := 63:63[#16271]
00025375: VF := 31:31[R0] & ~63:63[#16271]
00025378: ZF := #16271 = 0
0002537b: CF := 31:31[R0] | 31:31[R0] & ~63:63[#16271] | ~63:63[#16271]
00025384: R0 := 0x27000
0002538c: R0 := mem[R0 + 0xF78, el]:u64
00025399: #16274 := (NF <> VF | ZF) <> 0
00025393: when #16274 goto %00025336
0003b24d: goto %0002539c

00025336:
0002533d: R0 := mem[R0, el]:u32
00025344: R28 := 0x8000
00025348: goto %00024a77

0002539c:
000253a3: R0 := mem[R0, el]:u32
000253aa: R28 := 2
0003b24e: goto %00024a77

00024a77:
00024a8b: #15977 := 31:0[R0] = 0
00024a85: when #15977 goto %00024a83
0003b24f: goto %00026268

00026268:
0002626c: R1 := 0x13000
00026275: R2 := 31:0[R28]
0002627c: R1 := R1 + 0xAB0
00026283: R0 := 1
00026288: R30 := 0xFCC4
0002628a: call @__printf_chk with return %00024a83

00024a83:
00024a93: R0 := R25
00024a98: R30 := 0xFCCC
00024a9a: call @free with return %00024a9c

00024a9c:
00024aa3: R21 := mem[R31 + 0x30, el]:u64
00024aa7: R22 := mem[R31 + 0x38, el]:u64
00024ab0: R23 := mem[R31 + 0x40, el]:u64
00024ab4: R24 := mem[R31 + 0x48, el]:u64
00024abd: R25 := mem[R31 + 0x50, el]:u64
00024ac1: R26 := mem[R31 + 0x58, el]:u64
00024ac5: goto %00024961

0002628c:
00026293: R0 := 31:0[R28]
0002629c: R29 := mem[R31 + 0x10, el]:u64
000262a0: R30 := mem[R31 + 0x18, el]:u64
000262a9: R19 := mem[R31 + 0x20, el]:u64
000262ad: R20 := mem[R31 + 0x28, el]:u64
000262b6: R27 := mem[R31 + 0x60, el]:u64
000262ba: R28 := mem[R31 + 0x68, el]:u64
000262c1: R31 := R31 + 0x100
000262c6: call R30 with noreturn

0003b250: sub select(select_result)
0003b44e: select_result :: out u32 = low:32[R0]

0001fd8d:
00033057: R16 := 0x27000
0003305f: R17 := mem[R16 + 0xEC0, el]:u64
00033066: R16 := R16 + 0xEC0
0003306b: call R17 with noreturn

0003b251: sub setgid(setgid_arg1, setgid_result)
0003b44f: setgid_arg1 :: in u32 = low:32[R0]
0003b450: setgid_result :: out u32 = low:32[R0]

0002ea14:
00032e18: R16 := 0x27000
00032e20: R17 := mem[R16 + 0xE08, el]:u64
00032e27: R16 := R16 + 0xE08
00032e2c: call R17 with noreturn

0003b252: sub setsid(setsid_result)
0003b451: setsid_result :: out u32 = low:32[R0]

00031b23:
00033070: R16 := 0x27000
00033078: R17 := mem[R16 + 0xEC8, el]:u64
0003307f: R16 := R16 + 0xEC8
00033084: call R17 with noreturn

0003b253: sub setsockopt(setsockopt_fd, setsockopt_level, setsockopt_optnmae, setsockopt_optval, setsockopt_len, setsockopt_result)
0003b452: setsockopt_fd :: in u32 = low:32[R0]
0003b453: setsockopt_level :: in u32 = low:32[R1]
0003b454: setsockopt_optnmae :: in u32 = low:32[R2]
0003b455: setsockopt_optval :: in out u64 = R3
0003b456: setsockopt_len :: in u64 = R4
0003b457: setsockopt_result :: out u32 = low:32[R0]

000175dd:
00032b43: R16 := 0x27000
00032b4b: R17 := mem[R16 + 0xD20, el]:u64
00032b52: R16 := R16 + 0xD20
00032b57: call R17 with noreturn

0003b254: sub setuid(setuid_arg1, setuid_result)
0003b458: setuid_arg1 :: in u32 = low:32[R0]
0003b459: setuid_result :: out u32 = low:32[R0]

0002ea25:
000328d2: R16 := 0x27000
000328da: R17 := mem[R16 + 0xC58, el]:u64
000328e1: R16 := R16 + 0xC58
000328e6: call R17 with noreturn

0003b255: sub sighandler(sighandler_result)
0003b45a: sighandler_result :: out u32 = low:32[R0]

000227d1:
000227d8: #14717 := R31 - 0x20
000227dd: mem := mem with [#14717, el]:u64 <- R29
000227e2: mem := mem with [#14717 + 8, el]:u64 <- R30
000227e6: R31 := #14717
000227ef: R3 := 31:0[R0]
000227f6: R29 := R31
000227fe: mem := mem with [R31 + 0x10, el]:u64 <- R19
00022804: R19 := 0x28000
0002280d: R0 := mem[R19 + 0x4D8, el]:u32
00022819: #14723 := ~31:0[R0] = 0
00022813: when #14723 goto %00022811
0003b256: goto %000271d2

00022811:
0002281f: R2 := 0x13000
00022826: R1 := 1
0002282d: R2 := R2 + 0xE60
00022834: R0 := 6
00022839: R30 := 0x10508
0002283b: call @__syslog_chk with return %0002283d

0002283d:
00022840: goto %0002283e

000271d2:
000271d6: R2 := 0x13000
000271dd: R1 := 1
000271e4: R2 := R2 + 0xE30
000271eb: R0 := 6
000271f0: R30 := 0x104C8
000271f2: call @__syslog_chk with return %0002283e

0002283e:
00022846: R1 := R19 + 0x4D8
0002284f: R0 := mem[R19 + 0x4D8, el]:u32
00022857: R2 := extend:64[31:0[R0]] + 2
00022860: R1 := mem[R1 + 4, el]:u32
00022869: R1 := 31:0[R0] | 31:0[R1]
00022870: #14729 := extend:64[31:0[R1]]
00022874: NF := 63:63[#14729]
00022877: VF := 31:31[R1] & ~63:63[#14729]
0002287a: ZF := #14729 = 0
0002287d: CF := 31:31[R1] | 31:31[R1] & ~63:63[#14729] | ~63:63[#14729]
00022898: #14731 := ~ZF <> 0
00022899: goto %00022890

00022890:
00022892: when #14731 goto %00022889
00022893: goto %0002288d

0002288d:
0002288e: R0 := extend:64[31:0[R0]] + 1
00022895: goto %00022891

00022889:
0002288a: R0 := 31:0[R2]
00022894: goto %00022891

00022891:
000228a2: mem := mem with [R19 + 0x4D8, el]:u32 <- 31:0[R0]
000228aa: R19 := mem[R31 + 0x10, el]:u64
000228b4: R29 := mem[R31, el]:u64
000228b8: R30 := mem[R31 + 8, el]:u64
000228bb: R31 := R31 + 0x20
000228c0: call R30 with noreturn

0003b257: sub signal(signal_result)
0003b45b: signal_result :: out u32 = low:32[R0]

0002ebfa:
00032a7b: R16 := 0x27000
00032a83: R17 := mem[R16 + 0xCE0, el]:u64
00032a8a: R16 := R16 + 0xCE0
00032a8f: call R17 with noreturn

0003b258: sub so_closed(so_closed_result)
0003b45c: so_closed_result :: out u32 = low:32[R0]

00015b68:
00015b6f: #6546 := R31 - 0x30
00015b74: mem := mem with [#6546, el]:u64 <- R29
00015b79: mem := mem with [#6546 + 8, el]:u64 <- R30
00015b7d: R31 := #6546
00015b84: #6548 := 1 + extend:64[31:0[R0]]
00015b88: NF := 63:63[#6548]
00015b8b: VF := ~31:31[R0] & 63:63[#6548]
00015b8e: ZF := #6548 = 0
00015b91: CF := 31:31[R0] & ~63:63[#6548]
00015b9b: R29 := R31
00015ba3: #6552 := R31 + 0x10
00015ba8: mem := mem with [#6552, el]:u64 <- R19
00015bad: mem := mem with [#6552 + 8, el]:u64 <- R20
00015bb3: R19 := 0x27000
00015bbb: R1 := mem[R19 + 0xFB8, el]:u64
00015bc3: R2 := mem[R1, el]:u64
00015bcb: mem := mem with [R31 + 0x28, el]:u64 <- R2
00015bd1: R2 := 0
00015bdd: #6557 := ZF
00015bd7: when #6557 goto %00015bd5
0003b259: goto %00017466

00017466:
0001746b: R1 := R31 + 0x27
00017472: R3 := 0x42
00017478: R2 := 1
0001747d: R30 := 0xABE0
0001747f: call @recv with return %00017481

00017481:
0001748a: #7435 := ~31:0[R0] = 0
00017484: when #7435 goto %000173dc
0003b25a: goto %00015bd5

000173dc:
000173e1: #7425 := 1 + extend:64[31:0[R0]]
000173e5: NF := 63:63[#7425]
000173e8: VF := ~31:31[R0] & 63:63[#7425]
000173eb: ZF := #7425 = 0
000173ee: CF := 31:31[R0] & ~63:63[#7425]
000173f8: R20 := 0
00017403: #7427 := ~ZF <> 0
000173fd: when #7427 goto %00015be6
0003b25b: goto %00017406

00017406:
00017409: R30 := 0xAC20
0001740c: call @__errno_location with return %0001740e

0001740e:
00017415: R0 := mem[R0, el]:u32
0001741c: #7429 := 0xFFFFFFFFFFFFFFFE + extend:64[31:0[R0]]
00017420: NF := 63:63[#7429]
00017423: VF := 31:31[R0] & ~63:63[#7429]
00017426: ZF := #7429 = 0
00017429: CF := 31:31[R0] | 31:31[R0] & ~63:63[#7429] | ~63:63[#7429]
00017452: #7431 := ~ZF <> 0
00017453: goto %0001744a

0001744a:
0001744c: when #7431 goto %00017432
0001744d: goto %0001743e

0001743e:
0001743f: NF := 0
00017442: ZF := 1
00017445: CF := 0
00017448: VF := 0
0001744f: goto %0001744b

00017432:
00017433: NF := 63:63[extend:64[31:0[R0]] - 0xB]
00017436: VF := 31:31[R0] & ~63:63[extend:64[31:0[R0]] - 0xB]
00017439: ZF := extend:64[31:0[R0]] - 0xB = 0
0001743c: CF := 31:31[R0] | ~63:63[extend:64[31:0[R0]] - 0xB] | 31:31[R0] &
          ~63:63[extend:64[31:0[R0]] - 0xB]
0001744e: goto %0001744b

0001744b:
0001745f: #7434 := ZF
00017459: when #7434 goto %00015be6
0003b25c: goto %00017462

00017462:
00017464: goto %00015bd5

00015bd5:
00015be4: R20 := 1
0003b25d: goto %00015be6

00015be6:
00015bec: R19 := mem[R19 + 0xFB8, el]:u64
00015bf4: R0 := mem[R31 + 0x28, el]:u64
00015bfc: R1 := mem[R19, el]:u64
00015c04: #6564 := 1 + ~R1 + R0
00015c08: NF := 63:63[#6564]
00015c0b: VF := 63:63[R0] & 63:63[~R1] & ~63:63[#6564] | ~63:63[R0] &
          ~63:63[~R1] & 63:63[#6564]
00015c0e: ZF := #6564 = 0
00015c11: CF := 63:63[R0] & 63:63[~R1] | 63:63[~R1] & ~63:63[#6564] |
          63:63[R0] & ~63:63[#6564]
00015c15: R0 := #6564
00015c1b: R1 := 0
00015c27: #6569 := ~ZF <> 0
00015c21: when #6569 goto %00015c1f
0003b25e: goto %000173b0

00015c1f:
00015c2c: R30 := 0xAC38
00015c2e: call @__stack_chk_fail with return %0003b25f

0003b25f:
0003b260: call @so_recvln with noreturn

000173b0:
000173b7: R0 := 31:0[R20]
000173c0: R19 := mem[R31 + 0x10, el]:u64
000173c4: R20 := mem[R31 + 0x18, el]:u64
000173ce: R29 := mem[R31, el]:u64
000173d2: R30 := mem[R31 + 8, el]:u64
000173d5: R31 := R31 + 0x30
000173da: call R30 with noreturn

0003b261: sub so_connect(so_connect_result)
0003b45d: so_connect_result :: out u32 = low:32[R0]

00015789:
00015790: #6423 := R31 - 0x60
00015795: mem := mem with [#6423, el]:u64 <- R29
0001579a: mem := mem with [#6423 + 8, el]:u64 <- R30
0001579e: R31 := #6423
000157a5: R2 := 0
000157ac: R29 := R31
000157b4: #6428 := R31 + 0x20
000157b9: mem := mem with [#6428, el]:u64 <- R21
000157be: mem := mem with [#6428 + 8, el]:u64 <- R22
000157c4: R22 := 0x27000
000157cd: R21 := 31:0[R0]
000157d5: R0 := mem[R22 + 0xFB8, el]:u64
000157dd: #6437 := R31 + 0x10
000157e2: mem := mem with [#6437, el]:u64 <- R19
000157e7: mem := mem with [#6437 + 8, el]:u64 <- R20
000157f0: R20 := 31:0[R1]
000157f8: R3 := mem[R0, el]:u64
00015800: mem := mem with [R31 + 0x58, el]:u64 <- R3
00015806: R3 := 0
0001580d: R1 := 1
00015814: R0 := 2
00015819: R30 := 0xA81C
0001581c: call @socket with return %0001581e

0001581e:
00015828: #6443 := ~~31:31[R0]
00015822: when #6443 goto %00015820
0003b262: goto %0001781b

00015820:
0001582e: R0 := 0x27000
00015835: R19 := 0xFFFFFFFFFFFFFFFF
0001583d: R0 := mem[R0 + 0xF78, el]:u64
00015846: R0 := mem[R0, el]:u32
00015852: #6446 := 31:0[R0] = 0
0001584c: when #6446 goto %0001584a
0003b263: goto %00017697

00017697:
0001769a: R30 := 0xA8C8
0001769c: call @__errno_location with return %0001769e

0001769e:
000176a5: R0 := mem[R0, el]:u32
000176aa: R30 := 0xA8D0
000176ac: call @strerror with return %000176ae

000176ae:
000176b4: R2 := R0
000176ba: R1 := 0x12000
000176c1: R0 := 1
000176c8: R1 := R1 + 0x428
000176cd: R30 := 0xA8E4
000176cf: call @__printf_chk with return %000176d1

000176d1:
000176d3: goto %0001584a

0001781b:
00017820: R3 := 2
00017827: R20 := high:32[R20].23:16[R20].31:24[R20].7:0[R20].15:8[R20]
00017830: R19 := 31:0[R0]
00017837: R2 := 0
0001783e: R1 := 3
00017846: mem := mem with [R31 + 0x30, el]:u64 <- R23
0001784d: R23 := R31 + 0x48
00017855: mem := mem with [R31 + 0x48, el]:u16 <- low:16[31:0[R3]]
0001785d: mem := mem with [R31 + 0x4A, el]:u16 <- low:16[31:0[R20]]
00017865: mem := mem with [R31 + 0x4C, el]:u32 <- 31:0[R21]
0001786d: mem := mem with [R31 + 0x50, el]:u64 <- 0
00017872: R30 := 0xA850
00017875: call @fcntl with return %00017877

00017877:
0001787e: R20 := 31:0[R0]
00017889: #7516 := ~~31:31[R0]
00017883: when #7516 goto %000176d5
0003b264: goto %0001788c

000176d5:
000176d9: R0 := 0x27000
000176e1: R0 := mem[R0 + 0xF78, el]:u64
000176ea: R0 := mem[R0, el]:u32
000176f6: #7487 := ~31:0[R0] = 0
000176f0: when #7487 goto %000176ee
0003b265: goto %00017733

000176ee:
000176fb: R30 := 0xA978
000176fd: call @__errno_location with return %000176ff

000176ff:
00017706: R0 := mem[R0, el]:u32
0001770b: R30 := 0xA980
0001770d: call @strerror with return %0001770f

0001770f:
00017715: R2 := R0
0001771b: R1 := 0x12000
00017722: R0 := 1
00017729: R1 := R1 + 0x440
0001772e: R30 := 0xA994
00017730: call @__printf_chk with return %00017732

00017732:
00017735: goto %00017733

0001788c:
00017892: R1 := R23
0001789b: R0 := 31:0[R19]
000178a2: R2 := 0x10
000178a7: R30 := 0xA868
000178aa: call @connect with return %000178ac

000178ac:
000178b5: #7523 := ~~31:31[R0]
000178af: when #7523 goto %00017759
0003b266: goto %000178b8

00017759:
0001775d: R0 := 0x27000
00017765: R0 := mem[R0 + 0xF78, el]:u64
0001776e: R0 := mem[R0, el]:u32
00017779: #7498 := 31:0[R0] = 0
00017773: when #7498 goto %00017733
0003b267: goto %0001777c

0001777c:
0001777f: R30 := 0xA920
00017781: call @__errno_location with return %00017783

00017783:
0001778a: R0 := mem[R0, el]:u32
0001778f: R30 := 0xA928
00017791: call @strerror with return %00017793

00017793:
00017799: R2 := R0
0001779f: R1 := 0x12000
000177a6: R0 := 1
000177ad: R1 := R1 + 0x460
000177b2: R30 := 0xA93C
000177b4: call @__printf_chk with return %000177b6

000177b6:
000177b8: goto %00017733

000178b8:
000178be: R2 := 31:0[R20] & 0xFFFFF7FF
000178c7: R0 := 31:0[R19]
000178ce: R1 := 4
000178d3: R30 := 0xA87C
000178d5: call @fcntl with return %000178d7

000178d7:
000178e0: #7551 := ~~31:31[R0]
000178da: when #7551 goto %000177ba
0003b268: goto %000178e3

000177ba:
000177be: R0 := 0x27000
000177c6: R0 := mem[R0 + 0xF78, el]:u64
000177cf: R0 := mem[R0, el]:u32
000177da: #7505 := 31:0[R0] = 0
000177d4: when #7505 goto %00017733
0003b269: goto %000177dd

000177dd:
000177e0: R30 := 0xA954
000177e2: call @__errno_location with return %000177e4

000177e4:
000177eb: R0 := mem[R0, el]:u32
000177f0: R30 := 0xA95C
000177f2: call @strerror with return %000177f4

000177f4:
000177fa: R2 := R0
00017800: R1 := 0x12000
00017807: R0 := 1
0001780e: R1 := R1 + 0x470
00017813: R30 := 0xA970
00017815: call @__printf_chk with return %00017817

00017817:
00017819: goto %00017733

00017733:
0001773d: R0 := 31:0[R19]
00017744: R19 := 0xFFFFFFFFFFFFFFFF
00017749: R30 := 0xA904
0001774b: call @close with return %0001774d

0001774d:
00017753: R23 := mem[R31 + 0x30, el]:u64
00017757: goto %0001584a

000178e3:
000178e9: R23 := mem[R31 + 0x30, el]:u64
0003b26a: goto %0001584a

0001584a:
0001585a: R0 := mem[R22 + 0xFB8, el]:u64
00015862: R1 := mem[R31 + 0x58, el]:u64
0001586a: R2 := mem[R0, el]:u64
00015872: #6453 := 1 + ~R2 + R1
00015876: NF := 63:63[#6453]
00015879: VF := 63:63[R1] & 63:63[~R2] & ~63:63[#6453] | ~63:63[R1] &
          ~63:63[~R2] & 63:63[#6453]
0001587c: ZF := #6453 = 0
0001587f: CF := 63:63[R1] & 63:63[~R2] | 63:63[~R2] & ~63:63[#6453] |
          63:63[R1] & ~63:63[#6453]
00015883: R1 := #6453
00015889: R2 := 0
00015895: #6458 := ~ZF <> 0
0001588f: when #6458 goto %0001588d
0003b26b: goto %0001765e

0001588d:
0001589d: mem := mem with [R31 + 0x30, el]:u64 <- R23
000158a2: R30 := 0xA9A0
000158a4: call @__stack_chk_fail with return %0003b26c

0003b26c:
0003b26d: call @so_listen with noreturn

0001765e:
00017665: R0 := 31:0[R19]
0001766e: R19 := mem[R31 + 0x10, el]:u64
00017672: R20 := mem[R31 + 0x18, el]:u64
0001767b: R21 := mem[R31 + 0x20, el]:u64
0001767f: R22 := mem[R31 + 0x28, el]:u64
00017689: R29 := mem[R31, el]:u64
0001768d: R30 := mem[R31 + 8, el]:u64
00017690: R31 := R31 + 0x60
00017695: call R30 with noreturn

0003b26e: sub so_dataready(so_dataready_result)
0003b45e: so_dataready_result :: out u32 = low:32[R0]

00015a8c:
00015a93: #6525 := R31 - 0x30
00015a98: mem := mem with [#6525, el]:u64 <- R29
00015a9d: mem := mem with [#6525 + 8, el]:u64 <- R30
00015aa1: R31 := #6525
00015aa7: R2 := 1
00015aae: R3 := 0x42
00015ab5: R29 := R31
00015abd: mem := mem with [R31 + 0x10, el]:u64 <- R19
00015ac3: R19 := 0x27000
00015aca: R1 := R31 + 0x27
00015ad2: R19 := mem[R19 + 0xFB8, el]:u64
00015ada: R4 := mem[R19, el]:u64
00015ae2: mem := mem with [R31 + 0x28, el]:u64 <- R4
00015ae8: R4 := 0
00015aed: R30 := 0xAB78
00015aef: call @recv with return %00015af1

00015af1:
00015af6: #6529 := extend:64[31:0[R0]]
00015afa: NF := 63:63[#6529]
00015afd: VF := 31:31[R0] & ~63:63[#6529]
00015b00: ZF := #6529 = 0
00015b03: CF := 31:31[R0] | 31:31[R0] & ~63:63[#6529] | ~63:63[#6529]
00015b20: #6531 := (NF <> VF | ZF) <> 0
00015b21: goto %00015b18

00015b18:
00015b1a: when #6531 goto %00015b11
00015b1b: goto %00015b15

00015b15:
00015b16: R0 := 1
00015b1d: goto %00015b19

00015b11:
00015b12: R0 := 0
00015b1c: goto %00015b19

00015b19:
00015b2a: R1 := mem[R31 + 0x28, el]:u64
00015b32: R2 := mem[R19, el]:u64
00015b3a: #6537 := 1 + ~R2 + R1
00015b3e: NF := 63:63[#6537]
00015b41: VF := 63:63[R1] & 63:63[~R2] & ~63:63[#6537] | ~63:63[R1] &
          ~63:63[~R2] & 63:63[#6537]
00015b44: ZF := #6537 = 0
00015b47: CF := 63:63[R1] & 63:63[~R2] | 63:63[~R2] & ~63:63[#6537] |
          63:63[R1] & ~63:63[#6537]
00015b4b: R1 := #6537
00015b51: R2 := 0
00015b5d: #6542 := ~ZF <> 0
00015b57: when #6542 goto %00015b55
0003b26f: goto %0001748d

00015b55:
00015b62: R30 := 0xABA4
00015b64: call @__stack_chk_fail with return %00015b66

00015b66:
0003b270: call @so_closed with noreturn

0001748d:
00017493: R19 := mem[R31 + 0x10, el]:u64
0001749d: R29 := mem[R31, el]:u64
000174a1: R30 := mem[R31 + 8, el]:u64
000174a4: R31 := R31 + 0x30
000174a9: call R30 with noreturn

0003b271: sub so_listen(so_listen_result)
0003b45f: so_listen_result :: out u32 = low:32[R0]

000158a6:
000158ad: #6462 := R31 - 0x60
000158b2: mem := mem with [#6462, el]:u64 <- R29
000158b7: mem := mem with [#6462 + 8, el]:u64 <- R30
000158bb: R31 := #6462
000158c2: R2 := 0
000158c9: R29 := R31
000158d1: #6467 := R31 + 0x10
000158d6: mem := mem with [#6467, el]:u64 <- R19
000158db: mem := mem with [#6467 + 8, el]:u64 <- R20
000158e1: R20 := 0x27000
000158e9: R3 := mem[R20 + 0xFB8, el]:u64
000158f1: mem := mem with [R31 + 0x30, el]:u64 <- R23
000158fa: R23 := 31:0[R0]
00015902: #6476 := R31 + 0x20
00015907: mem := mem with [#6476, el]:u64 <- R21
0001590c: mem := mem with [#6476 + 8, el]:u64 <- R22
00015914: R0 := mem[R3, el]:u64
0001591c: mem := mem with [R31 + 0x58, el]:u64 <- R0
00015922: R0 := 0
0001592b: R21 := 31:0[R1]
00015932: R0 := 2
00015939: R1 := 1
0001593e: R30 := 0xA9E0
00015940: call @socket with return %00015942

00015942:
00015949: R19 := 31:0[R0]
00015955: #6485 := ~~31:31[R0]
0001594f: when #6485 goto %0001594d
0003b272: goto %000175ac

0001594d:
0001595b: R0 := 0x27000
00015963: R0 := mem[R0 + 0xF78, el]:u64
0001596c: R0 := mem[R0, el]:u32
00015978: #6488 := 31:0[R0] = 0
00015972: when #6488 goto %00015970
0003b273: goto %00017572

00017572:
00017575: R30 := 0xAA84
00017577: call @__errno_location with return %00017579

00017579:
00017580: R0 := mem[R0, el]:u32
00017585: R30 := 0xAA8C
00017587: call @strerror with return %00017589

00017589:
0001758f: R2 := R0
00017595: R1 := 0x12000
0001759c: R0 := 1
000175a3: R1 := R1 + 0x490
000175a8: R30 := 0xAAA0
000175aa: call @__printf_chk with return %00015970

000175ac:
000175b1: R3 := R31 + 0x44
000175b8: R4 := 4
000175bf: R22 := 1
000175c6: R2 := 2
000175cf: R1 := 31:0[R22]
000175d7: mem := mem with [R31 + 0x44, el]:u32 <- 31:0[R22]
000175dc: R30 := 0xAA04
000175df: call @setsockopt with return %000175e1

000175e1:
000175e7: mem := mem with [R31 + 0x4C, el]:u32 <- 31:0[R21]
000175ee: R3 := high:32[R3].23:16[R23].31:24[R23].7:0[R23].15:8[R23]
000175f5: R4 := 2
000175fc: R1 := R31 + 0x48
00017605: R0 := 31:0[R19]
0001760c: R2 := 0x10
00017614: mem := mem with [R31 + 0x48, el]:u16 <- low:16[31:0[R4]]
0001761c: mem := mem with [R31 + 0x4A, el]:u16 <- low:16[31:0[R3]]
00017624: mem := mem with [R31 + 0x50, el]:u64 <- 0
00017629: R30 := 0xAA2C
0001762c: call @bind with return %0001762e

0001762e:
00017637: #7470 := ~31:0[R0] = 0
00017631: when #7470 goto %0001750a
0003b274: goto %0001763a

0001750a:
0001750d: R30 := 0xAAB4
0001750f: call @__errno_location with return %00017511

00017511:
00017518: R0 := mem[R0, el]:u32
0001751d: R30 := 0xAABC
00017520: call @strerror with return %00017522

00017522:
00017528: R4 := R0
00017531: R3 := 31:0[R23]
0001753a: R1 := 31:0[R22]
00017540: R2 := 0x12000
00017547: R2 := R2 + 0x4B0
0001754e: R0 := 3
00017553: R30 := 0xAAD8
00017555: call @__syslog_chk with return %00017557

00017557:
0001755e: R0 := 31:0[R19]
00017565: R19 := 0xFFFFFFFFFFFFFFFF
0001756a: R30 := 0xAAE4
0001756c: call @close with return %0001756e

0001756e:
00017570: goto %00015993

0001763a:
00017641: R0 := 31:0[R19]
00017648: R1 := 5
0001764d: R30 := 0xAA3C
00017650: call @listen with return %00017652

00017652:
0001765b: #7474 := ~31:0[R0] = 0
00017655: when #7474 goto %00015970
0003b275: goto %00015993

00015970:
00015981: R0 := 31:0[R19]
00015988: R19 := 0xFFFFFFFFFFFFFFFF
0001598d: R30 := 0xAAAC
00015990: call @close with return %00015992

00015992:
00015995: goto %00015993

00015993:
0001599c: R20 := mem[R20 + 0xFB8, el]:u64
000159a4: R0 := mem[R31 + 0x58, el]:u64
000159ac: R1 := mem[R20, el]:u64
000159b4: #6498 := 1 + ~R1 + R0
000159b8: NF := 63:63[#6498]
000159bb: VF := 63:63[R0] & 63:63[~R1] & ~63:63[#6498] | ~63:63[R0] &
          ~63:63[~R1] & 63:63[#6498]
000159be: ZF := #6498 = 0
000159c1: CF := 63:63[R0] & 63:63[~R1] | 63:63[~R1] & ~63:63[#6498] |
          63:63[R0] & ~63:63[#6498]
000159c5: R0 := #6498
000159cb: R1 := 0
000159d7: #6503 := ~ZF <> 0
000159d1: when #6503 goto %000159cf
0003b276: goto %000174c9

000159cf:
000159dc: R30 := 0xAAEC
000159de: call @__stack_chk_fail with return %000159e0

000159e0:
0003b277: call @so_recvtest with noreturn

000174c9:
000174d0: R0 := 31:0[R19]
000174d9: R19 := mem[R31 + 0x10, el]:u64
000174dd: R20 := mem[R31 + 0x18, el]:u64
000174e6: R21 := mem[R31 + 0x20, el]:u64
000174ea: R22 := mem[R31 + 0x28, el]:u64
000174f2: R23 := mem[R31 + 0x30, el]:u64
000174fc: R29 := mem[R31, el]:u64
00017500: R30 := mem[R31 + 8, el]:u64
00017503: R31 := R31 + 0x60
00017508: call R30 with noreturn

0003b278: sub so_recvln(so_recvln_result)
0003b460: so_recvln_result :: out u32 = low:32[R0]

00015c30:
00015c37: #6573 := R31 - 0x70
00015c3c: mem := mem with [#6573, el]:u64 <- R29
00015c41: mem := mem with [#6573 + 8, el]:u64 <- R30
00015c45: R31 := #6573
00015c4c: R29 := R31
00015c54: #6578 := R31 + 0x40
00015c59: mem := mem with [#6578, el]:u64 <- R25
00015c5e: mem := mem with [#6578 + 8, el]:u64 <- R26
00015c64: R25 := 0x27000
00015c6c: R3 := mem[R25 + 0xFB8, el]:u64
00015c74: #6584 := R31 + 0x10
00015c79: mem := mem with [#6584, el]:u64 <- R19
00015c7e: mem := mem with [#6584 + 8, el]:u64 <- R20
00015c86: R20 := R2
00015c8e: R4 := mem[R3, el]:u64
00015c96: mem := mem with [R31 + 0x68, el]:u64 <- R4
00015c9c: R4 := 0
00015ca5: R2 := mem[R2, el]:u32
00015cad: #6594 := R31 + 0x20
00015cb2: mem := mem with [#6594, el]:u64 <- R21
00015cb7: mem := mem with [#6594 + 8, el]:u64 <- R22
00015cbf: R21 := R1
00015cc6: #6599 := 0xFFFFFFFFFFFFFFFF + extend:64[31:0[R2]]
00015cca: NF := 63:63[#6599]
00015ccd: VF := 31:31[R2] & ~63:63[#6599]
00015cd0: ZF := #6599 = 0
00015cd3: CF := 31:31[R2] | 31:31[R2] & ~63:63[#6599] | ~63:63[#6599]
00015cde: #6603 := R31 + 0x50
00015ce3: mem := mem with [#6603, el]:u64 <- R27
00015ce8: mem := mem with [#6603 + 8, el]:u64 <- R28
00015cf0: mem := mem with [R31 + 0x67] <- 0
00015cfe: #6606 := (NF <> VF | ZF) <> 0
00015cf8: when #6606 goto %00015cf6
0003b279: goto %00017369

00015cf6:
00015d04: R27 := 0
00015d0b: R19 := 1
00015d10: goto %00015d0e

00017369:
0001736f: #7414 := R31 + 0x30
00017374: mem := mem with [#7414, el]:u64 <- R23
00017379: mem := mem with [#7414 + 8, el]:u64 <- R24
0001737f: R24 := 0x27000
00017385: R26 := 0x12000
0001738d: R24 := mem[R24 + 0xF78, el]:u64
00017396: R22 := 31:0[R0]
0001739d: R26 := R26 + 0x4D0
000173a4: R23 := R31 + 0x67
000173aa: R27 := 1
000173ae: goto %0001722f

0001722f:
00017235: R1 := R23
0001723e: R0 := 31:0[R22]
00017244: R2 := 1
00017249: R30 := 0xACCC
0001724c: call @read with return %0001724e

0001724e:
00017253: R1 := R27 - 1
0001725a: #7379 := extend:64[31:0[R0]]
0001725e: NF := 63:63[#7379]
00017261: VF := 31:31[R0] & ~63:63[#7379]
00017264: ZF := #7379 = 0
00017267: CF := 31:31[R0] | 31:31[R0] & ~63:63[#7379] | ~63:63[#7379]
00017273: R19 := 31:0[R0]
00017281: #7384 := (NF <> VF | ZF) <> 0
0001727b: when #7384 goto %00017279
0003b27a: goto %0001729c

00017279:
00017289: R27 := R1
00017292: R23 := mem[R31 + 0x30, el]:u64
00017296: R24 := mem[R31 + 0x38, el]:u64
0001729a: goto %00015d0e

0001729c:
000172a2: R2 := mem[R21, el]:u64
000172ab: R28 := 31:0[R27]
000172b4: R0 := pad:32[mem[R31 + 0x67]]
000172bc: #7393 := R1
000172c1: mem := mem with [R2 + #7393] <- low:8[31:0[R0]]
000172c8: #7394 := 0xFFFFFFFFFFFFFFF6 + extend:64[31:0[R0]]
000172cc: NF := 63:63[#7394]
000172cf: VF := 31:31[R0] & ~63:63[#7394]
000172d2: ZF := #7394 = 0
000172d5: CF := 31:31[R0] | 31:31[R0] & ~63:63[#7394] | ~63:63[#7394]
000172e1: R3 := mem[R20, el]:u32
000172e9: R0 := low:32[extend:64[31:0[R3]] - 1]
00017315: #7397 := ~ZF <> 0
00017316: goto %0001730d

0001730d:
0001730f: when #7397 goto %000172f0
00017310: goto %00017301

00017301:
00017302: NF := 0
00017305: ZF := 0
00017308: CF := 0
0001730b: VF := 0
00017312: goto %0001730e

000172f0:
000172f1: #7398 := ~31:0[R27]
000172f6: NF := 63:63[extend:64[31:0[R0]] + extend:64[#7398] + 1]
000172f9: VF := 31:31[R0] & 31:31[#7398] & ~63:63[extend:64[31:0[R0]] +
          extend:64[#7398] + 1] | ~31:31[R0] & ~31:31[#7398] &
          63:63[extend:64[31:0[R0]] + extend:64[#7398] + 1]
000172fc: ZF := extend:64[31:0[R0]] + extend:64[#7398] + 1 = 0
000172ff: CF := 31:31[R0] & 31:31[#7398] | 31:31[#7398] &
          ~63:63[extend:64[31:0[R0]] + extend:64[#7398] + 1] | 31:31[R0] &
          ~63:63[extend:64[31:0[R0]] + extend:64[#7398] + 1]
00017311: goto %0001730e

0001730e:
00017323: #7400 := ~ZF <> 0
0001731d: when #7400 goto %0001731b
0003b27b: goto %0001734a

0001734a:
00017351: R0 := mem[R24, el]:u32
00017359: R3 := 31:0[R3] << 0x21
00017364: #7410 := ~31:0[R0] = 0
0001735e: when #7410 goto %00017132
0003b27c: goto %00017163

00017132:
00017139: R2 := 31:0[R22]
00017141: R1 := R26
00017148: R0 := 1
0001714d: R30 := 0xAD88
0001714f: call @__printf_chk with return %00017151

00017151:
00017158: R3 := mem[R20, el]:u32
00017160: R3 := 31:0[R3] << 0x21
00017165: goto %00017163

00017163:
0001716c: R0 := mem[R21, el]:u64
00017174: mem := mem with [R20, el]:u32 <- 31:0[R3]
0001717b: R1 := extend:64[31:0[R3]]
00017180: R30 := 0xAD1C
00017183: call @realloc with return %00017185

00017185:
0001718f: #7357 := R0 = 0
00017189: when #7357 goto %00017187
0003b27d: goto %000171a9

00017187:
00017196: R19 := 0xFFFFFFFFFFFFFFFF
0001719f: R23 := mem[R31 + 0x30, el]:u64
000171a3: R24 := mem[R31 + 0x38, el]:u64
000171a7: goto %00015d26

000171a9:
000171b0: R1 := mem[R20, el]:u32
000171b8: mem := mem with [R21, el]:u64 <- R0
000171c0: R0 := low:32[extend:64[31:0[R1]] - 1]
000171c8: #7363 := 1 + extend:64[~31:0[R0]] + extend:64[31:0[R28]]
000171cc: NF := 63:63[#7363]
000171cf: VF := 31:31[~31:0[R0]] & 31:31[R28] & ~63:63[#7363] |
          ~31:31[~31:0[R0]] & ~31:31[R28] & 63:63[#7363]
000171d2: ZF := #7363 = 0
000171d5: CF := 31:31[~31:0[R0]] & 31:31[R28] | 31:31[R28] & ~63:63[#7363] |
          31:31[~31:0[R0]] & ~63:63[#7363]
000171e5: #7365 := NF <> VF
000171df: when #7365 goto %000171dd
0003b27e: goto %00017367

00017367:
0003b27f: goto %00017210

0001731b:
0001732b: #7404 := 1 + extend:64[~31:0[R0]] + extend:64[31:0[R28]]
0001732f: NF := 63:63[#7404]
00017332: VF := 31:31[~31:0[R0]] & 31:31[R28] & ~63:63[#7404] |
          ~31:31[~31:0[R0]] & ~31:31[R28] & 63:63[#7404]
00017335: ZF := #7404 = 0
00017338: CF := 31:31[~31:0[R0]] & 31:31[R28] | 31:31[R28] & ~63:63[#7404] |
          31:31[~31:0[R0]] & ~63:63[#7404]
00017347: #7406 := NF = VF
00017341: when #7406 goto %00017210
0003b280: goto %000171dd

000171dd:
000171ee: R0 := pad:32[mem[R31 + 0x67]]
000171f5: R1 := R27 + 1
000171fc: #7366 := 0xFFFFFFFFFFFFFFF6 + extend:64[31:0[R0]]
00017200: NF := 63:63[#7366]
00017203: VF := 31:31[R0] & ~63:63[#7366]
00017206: ZF := #7366 = 0
00017209: CF := 31:31[R0] | 31:31[R0] & ~63:63[#7366] | ~63:63[#7366]
00017218: #7368 := ZF
00017212: when #7368 goto %00017210
0003b281: goto %00017227

00017210:
00017221: R23 := mem[R31 + 0x30, el]:u64
00017225: R24 := mem[R31 + 0x38, el]:u64
0003b282: goto %00015d0e

00015d0e:
00015d17: R0 := mem[R21, el]:u64
00015d1f: #6608 := R27
00015d24: mem := mem with [R0 + #6608] <- 0
0003b283: goto %00015d26

00015d26:
00015d2c: R25 := mem[R25 + 0xFB8, el]:u64
00015d34: R0 := mem[R31 + 0x68, el]:u64
00015d3c: R1 := mem[R25, el]:u64
00015d44: #6615 := 1 + ~R1 + R0
00015d48: NF := 63:63[#6615]
00015d4b: VF := 63:63[R0] & 63:63[~R1] & ~63:63[#6615] | ~63:63[R0] &
          ~63:63[~R1] & 63:63[#6615]
00015d4e: ZF := #6615 = 0
00015d51: CF := 63:63[R0] & 63:63[~R1] | 63:63[~R1] & ~63:63[#6615] |
          63:63[R0] & ~63:63[#6615]
00015d55: R0 := #6615
00015d5b: R1 := 0
00015d67: #6620 := ~ZF <> 0
00015d61: when #6620 goto %00015d5f
0003b284: goto %000170df

00015d5f:
00015d6f: #6624 := R31 + 0x30
00015d74: mem := mem with [#6624, el]:u64 <- R23
00015d79: mem := mem with [#6624 + 8, el]:u64 <- R24
00015d7e: R30 := 0xADC0
00015d80: call @__stack_chk_fail with return %0003b285

0003b285:
0003b286: call @acl_add with noreturn

000170df:
000170e6: R0 := 31:0[R19]
000170ef: R19 := mem[R31 + 0x10, el]:u64
000170f3: R20 := mem[R31 + 0x18, el]:u64
000170fc: R21 := mem[R31 + 0x20, el]:u64
00017100: R22 := mem[R31 + 0x28, el]:u64
00017109: R25 := mem[R31 + 0x40, el]:u64
0001710d: R26 := mem[R31 + 0x48, el]:u64
00017116: R27 := mem[R31 + 0x50, el]:u64
0001711a: R28 := mem[R31 + 0x58, el]:u64
00017124: R29 := mem[R31, el]:u64
00017128: R30 := mem[R31 + 8, el]:u64
0001712b: R31 := R31 + 0x70
00017130: call R30 with noreturn

00017227:
0001722d: R27 := R1
0003b287: goto %0001722f

0003b288: sub so_recvtest(so_recvtest_result)
0003b461: so_recvtest_result :: out u32 = low:32[R0]

000159e2:
000159e9: #6507 := R31 - 0x30
000159ee: mem := mem with [#6507, el]:u64 <- R29
000159f3: mem := mem with [#6507 + 8, el]:u64 <- R30
000159f7: R31 := #6507
000159fd: R2 := 1
00015a04: R3 := 0x42
00015a0b: R29 := R31
00015a13: mem := mem with [R31 + 0x10, el]:u64 <- R19
00015a19: R19 := 0x27000
00015a20: R1 := R31 + 0x27
00015a28: R19 := mem[R19 + 0xFB8, el]:u64
00015a30: R4 := mem[R19, el]:u64
00015a38: mem := mem with [R31 + 0x28, el]:u64 <- R4
00015a3e: R4 := 0
00015a43: R30 := 0xAB20
00015a46: call @recv with return %00015a48

00015a48:
00015a4e: R1 := mem[R31 + 0x28, el]:u64
00015a56: R2 := mem[R19, el]:u64
00015a5e: #6516 := 1 + ~R2 + R1
00015a62: NF := 63:63[#6516]
00015a65: VF := 63:63[R1] & 63:63[~R2] & ~63:63[#6516] | ~63:63[R1] &
          ~63:63[~R2] & 63:63[#6516]
00015a68: ZF := #6516 = 0
00015a6b: CF := 63:63[R1] & 63:63[~R2] | 63:63[~R2] & ~63:63[#6516] |
          63:63[R1] & ~63:63[#6516]
00015a6f: R1 := #6516
00015a75: R2 := 0
00015a81: #6521 := ~ZF <> 0
00015a7b: when #6521 goto %00015a79
0003b289: goto %000174ab

00015a79:
00015a86: R30 := 0xAB44
00015a88: call @__stack_chk_fail with return %00015a8a

00015a8a:
0003b28a: call @so_dataready with noreturn

000174ab:
000174b1: R19 := mem[R31 + 0x10, el]:u64
000174bb: R29 := mem[R31, el]:u64
000174bf: R30 := mem[R31 + 8, el]:u64
000174c2: R31 := R31 + 0x30
000174c7: call R30 with noreturn

0003b28b: sub so_resolv(so_resolv_result)
0003b462: so_resolv_result :: out u32 = low:32[R0]

000155d2:
000155d9: #6352 := R31 - 0x80
000155de: mem := mem with [#6352, el]:u64 <- R29
000155e3: mem := mem with [#6352 + 8, el]:u64 <- R30
000155e7: R31 := #6352
000155ed: R2 := 0x12000
000155f4: R29 := R31
000155fc: #6357 := R31 + 0x20
00015601: mem := mem with [#6357, el]:u64 <- R21
00015606: mem := mem with [#6357 + 8, el]:u64 <- R22
0001560c: R22 := 0x27000
00015614: R21 := R1
0001561c: R1 := mem[R22 + 0xFB8, el]:u64
00015624: #6366 := R31 + 0x48
00015629: mem := mem with [#6366, el]:u64 <- 0
0001562e: mem := mem with [#6366 + 8, el]:u64 <- 0
00015636: V0 := high:64[V0].mem[R2 + 0x4F0, el]:u64
0001563e: R2 := mem[R1, el]:u64
00015646: mem := mem with [R31 + 0x78, el]:u64 <- R2
0001564c: R2 := 0
00015653: R3 := R31 + 0x40
0001565a: R2 := R31 + 0x48
00015660: R1 := 0
00015668: #6374 := R31 + 0x10
0001566d: mem := mem with [#6374, el]:u64 <- R19
00015672: mem := mem with [#6374 + 8, el]:u64 <- R20
0001567a: R19 := R0
00015682: R0 := R21
0001568a: mem := mem with [R31 + 0x4C, el]:u64 <- 63:0[V0]
00015692: #6385 := R31 + 0x58
00015697: mem := mem with [#6385, el]:u64 <- 0
0001569c: mem := mem with [#6385 + 8, el]:u64 <- 0
000156a4: #6390 := R31 + 0x68
000156a9: mem := mem with [#6390, el]:u64 <- 0
000156ae: mem := mem with [#6390 + 8, el]:u64 <- 0
000156b3: R30 := 0xA658
000156b6: call @getaddrinfo with return %000156b8

000156b8:
000156c2: #6392 := ~31:0[R0] = 0
000156bc: when #6392 goto %000156ba
0003b28c: goto %00017b3a

000156ba:
000156c8: R1 := 0x27000
000156d0: R1 := mem[R1 + 0xF78, el]:u64
000156d9: R1 := mem[R1, el]:u32
000156e5: #6395 := ~31:0[R1] = 0
000156df: when #6395 goto %000156dd
0003b28d: goto %00015734

000156dd:
000156ee: R20 := 31:0[R0]
000156f3: R30 := 0xA7AC
000156f6: call @gai_strerror with return %000156f8

000156f8:
000156ff: R4 := 31:0[R20]
00015707: R3 := R0
0001570f: R2 := R21
00015715: R1 := 0x12000
0001571c: R0 := 1
00015723: R1 := R1 + 0x3D8
00015728: R30 := 0xA7C8
0001572a: call @__printf_chk with return %0001572c

0001572c:
00015731: R1 := 0
00015736: goto %00015734

00017b3a:
00017b3e: R20 := 0x27000
00017b46: R0 := mem[R20 + 0xF78, el]:u64
00017b4f: R0 := mem[R0, el]:u32
00017b5a: #7613 := ~31:0[R0] = 0
00017b54: when #7613 goto %00017a8d
0003b28e: goto %00017ab1

00017a8d:
00017a93: R2 := R21
00017a99: R1 := 0x12000
00017aa0: R0 := 1
00017aa7: R1 := R1 + 0x3F8
00017aac: R30 := 0xA74C
00017aae: call @__printf_chk with return %00017ab0

00017ab0:
00017ab3: goto %00017ab1

00017ab1:
00017aba: R21 := mem[R31 + 0x40, el]:u64
00017ac5: #7600 := R21 = 0
00017abf: when #7600 goto %00017958
0003b28f: goto %00017ac8

00017ac8:
00017ace: R0 := mem[R21 + 0x18, el]:u64
00017ad6: mem := mem with [R31 + 0x30, el]:u64 <- R23
00017ae1: #7602 := R0 = 0
00017adb: when #7602 goto %0001792c
0003b290: goto %00017ae4

00017ae4:
00017aea: R23 := mem[R20 + 0xF78, el]:u64
00017af3: R1 := mem[R0 + 4, el]:u32
00017afb: mem := mem with [R19, el]:u32 <- 31:0[R1]
00017b04: R2 := mem[R23, el]:u32
00017b0f: #7606 := ~31:0[R2] = 0
00017b09: when #7606 goto %00017975
0003b291: goto %00017b12

00017975:
0001797c: R0 := mem[R0 + 4, el]:u32
00017981: R30 := 0xA70C
00017983: call @inet_ntoa with return %00017985

00017985:
0001798b: R2 := R0
00017991: R1 := 0x12000
00017998: R0 := 1
0001799f: R1 := R1 + 0x408
000179a4: R30 := 0xA720
000179a6: call @__printf_chk with return %000179a8

000179a8:
000179ae: R19 := mem[R21 + 0x28, el]:u64
000179ba: #7573 := R19 = 0
000179b4: when #7573 goto %000179b2
0003b292: goto %000179cc

000179cc:
000179d2: R0 := mem[R19 + 0x18, el]:u64
000179dd: #7577 := R0 = 0
000179d7: when #7577 goto %00017924
0003b293: goto %000179e0

000179e0:
000179e7: R2 := mem[R23, el]:u32
000179ec: goto %000179ea

00017b12:
00017b18: R19 := mem[R21 + 0x28, el]:u64
00017b23: #7608 := R19 = 0
00017b1d: when #7608 goto %0001794f
0003b294: goto %00017b26

0001794f:
00017955: R23 := mem[R31 + 0x30, el]:u64
0001795a: goto %00017958

00017b26:
00017b2c: R0 := mem[R19 + 0x18, el]:u64
00017b37: #7610 := R0 = 0
00017b31: when #7610 goto %0001792c
0003b295: goto %000179ea

000179ea:
000179f1: R1 := 0x12000
000179f8: R21 := R1 + 0x418
00017a00: R20 := mem[R20 + 0xF78, el]:u64
00017a0c: #7580 := ~31:0[R2] = 0
00017a06: when #7580 goto %00017a04
0003b296: goto %00017a6f

00017a6f:
00017a7f: R19 := mem[R19 + 0x28, el]:u64
00017a8a: #7595 := R19 = 0
00017a84: when #7595 goto %000179b2
0003b297: goto %00017a46

00017a46:
00017a56: R0 := mem[R19 + 0x18, el]:u64
00017a61: #7591 := R0 = 0
00017a5b: when #7591 goto %00017924
0003b298: goto %00017a64

00017924:
0001792a: R21 := mem[R31 + 0x40, el]:u64
0003b299: goto %0001792c

0001792c:
00017932: R0 := R21
00017937: R30 := 0xA798
0001793a: call @freeaddrinfo with return %0001793c

0001793c:
00017941: R1 := 0
00017949: R23 := mem[R31 + 0x30, el]:u64
0001794d: goto %00015734

00017a64:
00017a6b: R2 := mem[R20, el]:u32
00017a77: #7593 := 31:0[R2] = 0
00017a71: when #7593 goto %00017a6f
0003b29a: goto %00017a04

00017a04:
00017a15: R0 := mem[R0 + 4, el]:u32
00017a1a: R30 := 0xA6D4
00017a1c: call @inet_ntoa with return %00017a1e

00017a1e:
00017a24: R2 := R0
00017a2c: R1 := R21
00017a33: R0 := 1
00017a38: R30 := 0xA6E4
00017a3a: call @__printf_chk with return %00017a3c

00017a3c:
00017a42: R19 := mem[R19 + 0x28, el]:u64
00017a4e: #7589 := ~R19 = 0
00017a48: when #7589 goto %00017a46
0003b29b: goto %000179b2

000179b2:
000179c2: R23 := mem[R31 + 0x30, el]:u64
000179ca: R21 := mem[R31 + 0x40, el]:u64
0003b29c: goto %00017958

00017958:
00017961: R0 := R21
00017966: R30 := 0xA6FC
00017968: call @freeaddrinfo with return %0001796a

0001796a:
0001796f: R1 := 1
00017973: goto %00015734

00015734:
0001573d: R22 := mem[R22 + 0xFB8, el]:u64
00015745: R0 := mem[R31 + 0x78, el]:u64
0001574d: R2 := mem[R22, el]:u64
00015755: #6414 := 1 + ~R2 + R0
00015759: NF := 63:63[#6414]
0001575c: VF := 63:63[R0] & 63:63[~R2] & ~63:63[#6414] | ~63:63[R0] &
          ~63:63[~R2] & 63:63[#6414]
0001575f: ZF := #6414 = 0
00015762: CF := 63:63[R0] & 63:63[~R2] | 63:63[~R2] & ~63:63[#6414] |
          63:63[R0] & ~63:63[#6414]
00015766: R0 := #6414
0001576c: R2 := 0
00015778: #6419 := ~ZF <> 0
00015772: when #6419 goto %00015770
0003b29d: goto %000178eb

00015770:
00015780: mem := mem with [R31 + 0x30, el]:u64 <- R23
00015785: R30 := 0xA7E0
00015787: call @__stack_chk_fail with return %0003b29e

0003b29e:
0003b29f: call @so_connect with noreturn

000178eb:
000178f2: R0 := 31:0[R1]
000178fb: R19 := mem[R31 + 0x10, el]:u64
000178ff: R20 := mem[R31 + 0x18, el]:u64
00017908: R21 := mem[R31 + 0x20, el]:u64
0001790c: R22 := mem[R31 + 0x28, el]:u64
00017916: R29 := mem[R31, el]:u64
0001791a: R30 := mem[R31 + 8, el]:u64
0001791d: R31 := R31 + 0x80
00017922: call R30 with noreturn

0003b2a0: sub socket(socket_domain, socket_type, socket_protocol, socket_result)
0003b463: socket_domain :: in u32 = low:32[R0]
0003b464: socket_type :: in u32 = low:32[R1]
0003b465: socket_protocol :: in u32 = low:32[R2]
0003b466: socket_result :: out u32 = low:32[R0]

0001581a:
00032fc1: R16 := 0x27000
00032fc9: R17 := mem[R16 + 0xE90, el]:u64
00032fd0: R16 := R16 + 0xE90
00032fd5: call R17 with noreturn

0003b2a1: sub socks5_thread(socks5_thread_result)
0003b467: socks5_thread_result :: out u32 = low:32[R0]

000237ab:
000237b2: #15250 := R31 - 0x80
000237b7: mem := mem with [#15250, el]:u64 <- R29
000237bc: mem := mem with [#15250 + 8, el]:u64 <- R30
000237c0: R31 := #15250
000237c7: R29 := R31
000237cf: #15255 := R31 + 0x40
000237d4: mem := mem with [#15255, el]:u64 <- R25
000237d9: mem := mem with [#15255 + 8, el]:u64 <- R26
000237df: R26 := 0x28000
000237e6: R1 := R26 + 0x4D8
000237ee: #15260 := R31 + 0x10
000237f3: mem := mem with [#15260, el]:u64 <- R19
000237f8: mem := mem with [#15260 + 8, el]:u64 <- R20
000237fe: R20 := 0x27000
00023806: R19 := R0
0002380e: R0 := mem[R1 + 0x60, el]:u64
00023816: #15269 := R31 + 0x20
0002381b: mem := mem with [#15269, el]:u64 <- R21
00023820: mem := mem with [#15269 + 8, el]:u64 <- R22
00023828: R1 := mem[R20 + 0xFB8, el]:u64
00023830: #15275 := R31 + 0x30
00023835: mem := mem with [#15275, el]:u64 <- R23
0002383a: mem := mem with [#15275 + 8, el]:u64 <- R24
00023842: R2 := mem[R1, el]:u64
0002384a: mem := mem with [R31 + 0x78, el]:u64 <- R2
00023850: R2 := 0
00023858: #15281 := R31 + 0x50
0002385d: mem := mem with [#15281, el]:u64 <- R27
00023862: mem := mem with [#15281 + 8, el]:u64 <- R28
00023867: R30 := 0x10FEC
00023869: call @hlist_count with return %0002386b

0002386b:
00023872: R23 := mem[R19, el]:u32
0002387a: R1 := mem[R19 + 0x10, el]:u64
00023883: R24 := 31:0[R0]
0002388b: R0 := R19
00023893: mem := mem with [R31 + 0x68, el]:u64 <- R1
00023898: R30 := 0x11004
0002389a: call @free with return %0002389c

0002389c:
000238a0: R0 := 0xA
000238a5: R30 := 0x1100C
000238a7: call @new with return %000238a9

000238a9:
000238af: R19 := R0
000238b5: R0 := 0x32
000238ba: R30 := 0x11018
000238bc: call @new with return %000238be

000238be:
000238c4: R21 := R0
000238ca: R0 := 0x32
000238cf: R30 := 0x11024
000238d1: call @new with return %000238d3

000238d3:
000238d9: R1 := R19
000238e1: R22 := R0
000238e7: R2 := 2
000238f0: R0 := 31:0[R23]
000238f5: R30 := 0x11038
000238f7: call @read with return %000238f9

000238f9:
000238fe: #15306 := 0xFFFFFFFFFFFFFFFE + extend:64[31:0[R0]]
00023902: NF := 63:63[#15306]
00023905: VF := 31:31[R0] & ~63:63[#15306]
00023908: ZF := #15306 = 0
0002390b: CF := 31:31[R0] | 31:31[R0] & ~63:63[#15306] | ~63:63[#15306]
0002391a: #15308 := ~ZF <> 0
00023914: when #15308 goto %00023912
0003b2a2: goto %000246f8

00023912:
00023921: R27 := 0xFFFFFFFFFFFFFFFF
00023927: R25 := 0
0002392c: goto %0002392a

000246f8:
000246ff: R0 := pad:32[mem[R19]]
00024706: R27 := 0xFFFFFFFFFFFFFFFF
0002470c: R25 := 0
00024713: #15850 := 0xFFFFFFFFFFFFFFFB + extend:64[31:0[R0]]
00024717: NF := 63:63[#15850]
0002471a: VF := 31:31[R0] & ~63:63[#15850]
0002471d: ZF := #15850 = 0
00024720: CF := 31:31[R0] | 31:31[R0] & ~63:63[#15850] | ~63:63[#15850]
0002472e: #15852 := ZF
00024728: when #15852 goto %00024580
0003b2a3: goto %0002392a

00024580:
00024587: R0 := pad:32[mem[R19 + 1]]
0002458f: mem := mem with [R31 + 0x74, el]:u32 <- 31:0[R0]
00024597: R0 := extend:64[31:0[R0]] + 1
0002459e: R0 := extend:64[31:0[R0]]
000245a3: R30 := 0x110F4
000245a5: call @new with return %000245a7

000245a7:
000245ad: R2 := extend:64[mem[R31 + 0x74, el]:u32]
000245b5: R28 := R0
000245bd: R1 := R28
000245c6: R0 := 31:0[R23]
000245cb: R30 := 0x11108
000245cd: call @read with return %000245cf

000245cf:
000245d6: R2 := mem[R31 + 0x74, el]:u32
000245de: #15809 := 1 + extend:64[~31:0[R0]] + extend:64[31:0[R2]]
000245e2: NF := 63:63[#15809]
000245e5: VF := 31:31[~31:0[R0]] & 31:31[R2] & ~63:63[#15809] |
          ~31:31[~31:0[R0]] & ~31:31[R2] & 63:63[#15809]
000245e8: ZF := #15809 = 0
000245eb: CF := 31:31[~31:0[R0]] & 31:31[R2] | 31:31[R2] & ~63:63[#15809] |
          31:31[~31:0[R0]] & ~63:63[#15809]
000245f9: #15811 := ~ZF <> 0
000245f3: when #15811 goto %00023b25
0003b2a4: goto %000245fc

000245fc:
00024601: #15812 := extend:64[31:0[R2]]
00024605: NF := 63:63[#15812]
00024608: VF := 31:31[R2] & ~63:63[#15812]
0002460b: ZF := #15812 = 0
0002460e: CF := 31:31[R2] | 31:31[R2] & ~63:63[#15812] | ~63:63[#15812]
0002461c: #15813 := ~31:0[R24] = 0
00024616: when #15813 goto %00023b36
0003b2a5: goto %0002461f

00023b36:
00023b3a: R0 := 0
00023b48: #15399 := (NF = VF & ~ZF) <> 0
00023b42: when #15399 goto %00023b40
0003b2a6: goto %00024308

00024308:
0002430a: goto %00023b9e

0002461f:
0002462a: #15815 := (NF <> VF | ZF) <> 0
00024624: when #15815 goto %00023b9e
0003b2a7: goto %0002462d

0002462d:
00024633: R3 := low:32[extend:64[31:0[R2]] - 1]
0002463b: R0 := R28
00024642: R3 := R3 + 1
0002464a: R3 := R3 + R28
0002464f: goto %0002464d

0002464d:
00024657: R1 := pad:32[mem[R0]]
00024663: #15822 := ~31:0[R1] = 0
0002465d: when #15822 goto %0002465b
0003b2a8: goto %0002468f

0002468f:
00024694: R0 := 5
0002469c: mem := mem with [R19, el]:u16 <- low:16[31:0[R0]]
000246a4: R1 := R19
000246ad: R0 := 31:0[R23]
000246b3: R2 := 2
000246b8: R30 := 0x11160
000246ba: call @write with return %00023dbc

0002465b:
0002466a: R0 := R0 + 1
00024672: #15826 := 1 + ~R3 + R0
00024676: NF := 63:63[#15826]
00024679: VF := 63:63[R0] & 63:63[~R3] & ~63:63[#15826] | ~63:63[R0] &
          ~63:63[~R3] & 63:63[#15826]
0002467c: ZF := #15826 = 0
0002467f: CF := 63:63[R0] & 63:63[~R3] | 63:63[~R3] & ~63:63[#15826] |
          63:63[R0] & ~63:63[#15826]
0002468c: #15831 := ZF
00024686: when #15831 goto %00023c9e
0003b2a9: goto %0002464d

00023c9e:
00023ca2: R0 := 0
00023ca6: goto %00023b40

00023b40:
00023b50: #15400 := R0
00023b56: R1 := pad:32[mem[R28 + #15400]]
00023b5d: #15401 := 0xFFFFFFFFFFFFFFFE + extend:64[31:0[R1]]
00023b61: NF := 63:63[#15401]
00023b64: VF := 31:31[R1] & ~63:63[#15401]
00023b67: ZF := #15401 = 0
00023b6a: CF := 31:31[R1] | 31:31[R1] & ~63:63[#15401] | ~63:63[#15401]
00023b79: #15403 := ~ZF <> 0
00023b73: when #15403 goto %00023b71
0003b2aa: goto %0002426d

0002426d:
00024272: R0 := 0x205
0002427a: mem := mem with [R19, el]:u16 <- low:16[31:0[R0]]
00024282: R1 := R19
00024288: R2 := 2
00024291: R0 := 31:0[R23]
00024296: R30 := 0x11288
00024298: call @write with return %0002429a

0002429a:
000242a0: R1 := R19
000242a9: R0 := 31:0[R23]
000242af: R2 := 2
000242b4: R30 := 0x11298
000242b6: call @read with return %000242b8

000242b8:
000242bd: #15688 := 0xFFFFFFFFFFFFFFFE + extend:64[31:0[R0]]
000242c1: NF := 63:63[#15688]
000242c4: VF := 31:31[R0] & ~63:63[#15688]
000242c7: ZF := #15688 = 0
000242ca: CF := 31:31[R0] | 31:31[R0] & ~63:63[#15688] | ~63:63[#15688]
000242d8: #15690 := ZF
000242d2: when #15690 goto %00023be6
0003b2ab: goto %000242db

00023be6:
00023bed: R0 := pad:32[mem[R19 + 1]]
00023bf5: mem := mem with [R31 + 0x74, el]:u32 <- 31:0[R0]
00023bfd: R0 := extend:64[31:0[R0]] + 1
00023c04: R0 := extend:64[31:0[R0]]
00023c09: R30 := 0x11304
00023c0b: call @new with return %00023c0d

00023c0d:
00023c14: R2 := mem[R31 + 0x74, el]:u32
00023c1c: R24 := R0
00023c24: R1 := R24
00023c2d: R0 := 31:0[R23]
00023c35: R2 := extend:64[31:0[R2]] + 1
00023c3c: R2 := extend:64[31:0[R2]]
00023c41: R30 := 0x11320
00023c43: call @read with return %00023c45

00023c45:
00023c4c: R1 := mem[R31 + 0x74, el]:u32
00023c54: R2 := extend:64[31:0[R1]] + 1
00023c5c: #15432 := 1 + extend:64[~31:0[R0]] + extend:64[31:0[R2]]
00023c60: NF := 63:63[#15432]
00023c63: VF := 31:31[~31:0[R0]] & 31:31[R2] & ~63:63[#15432] |
          ~31:31[~31:0[R0]] & ~31:31[R2] & 63:63[#15432]
00023c66: ZF := #15432 = 0
00023c69: CF := 31:31[~31:0[R0]] & 31:31[R2] | 31:31[R2] & ~63:63[#15432] |
          31:31[~31:0[R0]] & ~63:63[#15432]
00023c78: #15434 := ~ZF <> 0
00023c72: when #15434 goto %00023c70
0003b2ac: goto %000241d0

000241d0:
000241d6: #15654 := extend:64[31:0[R1]]
000241dc: R2 := pad:32[mem[R24 + #15654]]
000241e4: #15655 := extend:64[31:0[R1]]
000241e9: mem := mem with [R24 + #15655] <- 0
000241f1: R0 := extend:64[31:0[R2]] + 1
000241f9: mem := mem with [R31 + 0x74, el]:u32 <- 31:0[R2]
00024200: R0 := extend:64[31:0[R0]]
00024205: R30 := 0x11348
00024207: call @new with return %00024209

00024209:
0002420f: R2 := extend:64[mem[R31 + 0x74, el]:u32]
00024217: R25 := R0
0002421f: R1 := R25
00024228: R0 := 31:0[R23]
0002422d: R30 := 0x1135C
0002422f: call @read with return %00024231

00024231:
00024238: R1 := mem[R31 + 0x74, el]:u32
00024240: #15670 := 1 + extend:64[~31:0[R0]] + extend:64[31:0[R1]]
00024244: NF := 63:63[#15670]
00024247: VF := 31:31[~31:0[R0]] & 31:31[R1] & ~63:63[#15670] |
          ~31:31[~31:0[R0]] & ~31:31[R1] & 63:63[#15670]
0002424a: ZF := #15670 = 0
0002424d: CF := 31:31[~31:0[R0]] & 31:31[R1] | 31:31[R1] & ~63:63[#15670] |
          31:31[~31:0[R0]] & ~63:63[#15670]
0002425b: #15672 := ZF
00024255: when #15672 goto %00023d09
0003b2ad: goto %0002425e

00023d09:
00023d0e: R27 := R26 + 0x4D8
00023d16: #15448 := extend:64[31:0[R1]]
00023d1b: mem := mem with [R25 + #15448] <- 0
00023d23: R1 := R24
00023d2b: R0 := mem[R27 + 0x60, el]:u64
00023d30: R30 := 0x113C4
00023d32: call @hlist_get with return %00023d34

00023d34:
00023d3a: R26 := R0
00023d42: R0 := mem[R27 + 0x60, el]:u64
00023d47: R30 := 0x113D0
00023d49: call @hlist_count with return %00023d4b

00023d4b:
00023d50: R3 := 0
00023d5c: #15457 := 31:0[R0] = 0
00023d56: when #15457 goto %00023d54
0003b2ae: goto %0002416c

0002416c:
00024171: R3 := 0xFF
0002417c: #15622 := R26 = 0
00024176: when #15622 goto %00023d54
0003b2af: goto %0002417f

0002417f:
00024185: R0 := R26
0002418d: R1 := R25
00024192: R30 := 0x113EC
00024195: call @strcmp with return %00024197

00024197:
0002419c: #15629 := extend:64[31:0[R0]]
000241a0: NF := 63:63[#15629]
000241a3: VF := 31:31[R0] & ~63:63[#15629]
000241a6: ZF := #15629 = 0
000241a9: CF := 31:31[R0] | 31:31[R0] & ~63:63[#15629] | ~63:63[#15629]
000241c4: #15631 := ZF
000241c5: goto %000241bc

000241bc:
000241be: when #15631 goto %000241b5
000241bf: goto %000241b9

000241b9:
000241ba: R3 := 0xFFFFFFFF
000241c1: goto %000241bd

000241b5:
000241b6: R3 := 0
000241c0: goto %000241bd

000241bd:
000241ce: R3 := 31:0[R3] & 0xFF
0003b2b0: goto %00023d54

00023d54:
00023d64: R1 := R19
00023d6b: R0 := 1
00023d73: mem := mem with [R19] <- low:8[31:0[R0]]
00023d79: R2 := 2
00023d81: mem := mem with [R19 + 1] <- low:8[31:0[R3]]
00023d8a: R0 := 31:0[R23]
00023d8f: R30 := 0x11414
00023d91: call @write with return %00023d93

00023d93:
00023d99: R0 := R25
00023d9e: R30 := 0x1141C
00023da0: call @free with return %00023da2

00023da2:
00023da8: R0 := R24
00023dad: R30 := 0x11424
00023daf: call @free with return %00023db1

00023db1:
00023db8: R0 := pad:32[mem[R19 + 1]]
00023dc4: #15470 := 31:0[R0] = 0
00023dbe: when #15470 goto %00023dbc
0003b2b1: goto %00024168

00024168:
0002416a: goto %00023c8a

00023dbc:
00023dcc: R1 := R19
00023dd5: R0 := 31:0[R23]
00023ddb: R2 := 4
00023de0: R30 := 0x11170
00023de2: call @read with return %00023de4

00023de4:
00023dea: R1 := R0
00023df1: #15480 := 0xFFFFFFFFFFFFFFFC + extend:64[31:0[R0]]
00023df5: NF := 63:63[#15480]
00023df8: VF := 31:31[R0] & ~63:63[#15480]
00023dfb: ZF := #15480 = 0
00023dfe: CF := 31:31[R0] | 31:31[R0] & ~63:63[#15480] | ~63:63[#15480]
00023e0c: #15482 := ~ZF <> 0
00023e06: when #15482 goto %00023b25
0003b2b2: goto %00023e0f

00023e0f:
00023e16: R0 := pad:32[mem[R19 + 1]]
00023e1d: #15483 := 0xFFFFFFFFFFFFFFFF + extend:64[31:0[R0]]
00023e21: NF := 63:63[#15483]
00023e24: VF := 31:31[R0] & ~63:63[#15483]
00023e27: ZF := #15483 = 0
00023e2a: CF := 31:31[R0] | 31:31[R0] & ~63:63[#15483] | ~63:63[#15483]
00023e38: #15485 := ~ZF <> 0
00023e32: when #15485 goto %00023ca8
0003b2b3: goto %00023e3b

00023e3b:
00023e42: R25 := pad:32[mem[R19 + 3]]
00023e4a: R0 := 31:0[R25] & 0xFFFFFFFD
00023e51: #15510 := 0xFFFFFFFFFFFFFFFF + extend:64[31:0[R0]]
00023e55: NF := 63:63[#15510]
00023e58: VF := 31:31[R0] & ~63:63[#15510]
00023e5b: ZF := #15510 = 0
00023e5e: CF := 31:31[R0] | 31:31[R0] & ~63:63[#15510] | ~63:63[#15510]
00023e6c: #15512 := ~ZF <> 0
00023e66: when #15512 goto %00023ca8
0003b2b4: goto %00023e6f

00023ca8:
00023cae: R3 := R19
00023cb5: R4 := 0x205
00023cbc: R4 := high:32[R4].extend:64[31:0[R4]] & 0xFFFFFFFF0000FFFF |
          0x1000000
00023cc4: R1 := R19
00023ccd: R0 := 31:0[R23]
00023cd3: R2 := 0xA
00023cdc: mem := mem with [R3, el]:u32 <- 31:0[R4]
00023cdf: R3 := R3 + 4
00023ce6: R27 := 0xFFFFFFFFFFFFFFFF
00023cee: mem := mem with [R19 + 4, el]:u32 <- 0
00023cf4: R25 := 0
00023cfc: mem := mem with [R3 + 4, el]:u16 <- 0
00023d01: R30 := 0x113AC
00023d03: call @write with return %00023d05

00023d05:
00023d07: goto %00023afc

00023e6f:
00023e74: #15513 := 0xFFFFFFFFFFFFFFFF + extend:64[31:0[R25]]
00023e78: NF := 63:63[#15513]
00023e7b: VF := 31:31[R25] & ~63:63[#15513]
00023e7e: ZF := #15513 = 0
00023e81: CF := 31:31[R25] | 31:31[R25] & ~63:63[#15513] | ~63:63[#15513]
00023e90: #15515 := ZF
00023e8a: when #15515 goto %00023e88
0003b2b5: goto %00024027

00023e88:
00023e96: R0 := 0xF
00023e9e: mem := mem with [R31 + 0x74, el]:u32 <- 31:0[R1]
00023ea3: R30 := 0x1143C
00023ea5: call @new with return %00023ea7

00023ea7:
00023ead: R1 := R0
00023eb5: R2 := extend:64[mem[R31 + 0x74, el]:u32]
00023ebd: R24 := R0
00023ec6: R0 := 31:0[R23]
00023ecb: R30 := 0x11450
00023ecd: call @read with return %00023ecf

00023ecf:
00023ed6: R1 := mem[R31 + 0x74, el]:u32
00023ede: #15529 := 1 + extend:64[~31:0[R0]] + extend:64[31:0[R1]]
00023ee2: NF := 63:63[#15529]
00023ee5: VF := 31:31[~31:0[R0]] & 31:31[R1] & ~63:63[#15529] |
          ~31:31[~31:0[R0]] & ~31:31[R1] & 63:63[#15529]
00023ee8: ZF := #15529 = 0
00023eeb: CF := 31:31[~31:0[R0]] & 31:31[R1] | 31:31[R1] & ~63:63[#15529] |
          31:31[~31:0[R0]] & ~63:63[#15529]
00023efa: #15531 := ~ZF <> 0
00023ef4: when #15531 goto %00023ef2
0003b2b6: goto %00023f09

00023f09:
00023f0f: #15532 := extend:64[31:0[R1]]
00023f14: mem := mem with [R24 + #15532] <- 0
00023f1a: R3 := 0x14000
00023f21: R3 := R3 + 0x78
00023f2a: R1 := 31:0[R25]
00023f33: R7 := pad:32[mem[R24 + 3]]
00023f39: R2 := 0xFFFFFFFFFFFFFFFF
00023f42: R6 := pad:32[mem[R24 + 2]]
00023f4a: R0 := R21
00023f53: R5 := pad:32[mem[R24 + 1]]
00023f5c: R4 := pad:32[mem[R24]]
00023f61: R30 := 0x11488
00023f63: call @__sprintf_chk with return %00023f65

00023f65:
00023f6a: R1 := R31 + 0x72
00023f73: R0 := 31:0[R23]
00023f79: R2 := 2
00023f7e: R30 := 0x11498
00023f80: call @read with return %00023f82

00023f82:
00023f87: #15542 := 0xFFFFFFFFFFFFFFFE + extend:64[31:0[R0]]
00023f8b: NF := 63:63[#15542]
00023f8e: VF := 31:31[R0] & ~63:63[#15542]
00023f91: ZF := #15542 = 0
00023f94: CF := 31:31[R0] | 31:31[R0] & ~63:63[#15542] | ~63:63[#15542]
00023fa3: #15544 := ZF
00023f9d: when #15544 goto %00023f9b
0003b2b7: goto %00024007

00024007:
0002400c: R27 := 0xFFFFFFFFFFFFFFFF
00024012: R25 := 0
00024017: goto %00024015

00024027:
0002402c: #15582 := 0xFFFFFFFFFFFFFFFD + extend:64[31:0[R25]]
00024030: NF := 63:63[#15582]
00024033: VF := 31:31[R25] & ~63:63[#15582]
00024036: ZF := #15582 = 0
00024039: CF := 31:31[R25] | 31:31[R25] & ~63:63[#15582] | ~63:63[#15582]
00024047: #15584 := ~ZF <> 0
00024041: when #15584 goto %00023b25
0003b2b8: goto %0002404a

0002404a:
0002404f: R1 := R31 + 0x74
00024058: R0 := 31:0[R23]
0002405e: R2 := 1
00024063: R30 := 0x111B8
00024065: call @read with return %00024067

00024067:
0002406c: #15588 := 0xFFFFFFFFFFFFFFFF + extend:64[31:0[R0]]
00024070: NF := 63:63[#15588]
00024073: VF := 31:31[R0] & ~63:63[#15588]
00024076: ZF := #15588 = 0
00024079: CF := 31:31[R0] | 31:31[R0] & ~63:63[#15588] | ~63:63[#15588]
00024087: #15590 := ~ZF <> 0
00024081: when #15590 goto %00023b25
0003b2b9: goto %0002408a

00023b25:
00023b2a: R27 := 0xFFFFFFFFFFFFFFFF
00023b30: R25 := 0
00023b34: goto %00023afc

0002408a:
00024091: R0 := mem[R31 + 0x74, el]:u32
00024099: R0 := extend:64[31:0[R0]] + 0xB
000240a0: R0 := extend:64[31:0[R0]]
000240a5: R30 := 0x111D0
000240a7: call @new with return %000240a9

000240a9:
000240af: R2 := extend:64[mem[R31 + 0x74, el]:u32]
000240b7: R24 := R0
000240bf: R1 := R24
000240c8: R0 := 31:0[R23]
000240cd: R30 := 0x111E4
000240cf: call @read with return %000240d1

000240d1:
000240d8: R1 := mem[R31 + 0x74, el]:u32
000240e0: #15606 := 1 + extend:64[~31:0[R0]] + extend:64[31:0[R1]]
000240e4: NF := 63:63[#15606]
000240e7: VF := 31:31[~31:0[R0]] & 31:31[R1] & ~63:63[#15606] |
          ~31:31[~31:0[R0]] & ~31:31[R1] & 63:63[#15606]
000240ea: ZF := #15606 = 0
000240ed: CF := 31:31[~31:0[R0]] & 31:31[R1] | 31:31[R1] & ~63:63[#15606] |
          31:31[~31:0[R0]] & ~63:63[#15606]
000240fb: #15608 := ~ZF <> 0
000240f5: when #15608 goto %00023ef2
0003b2ba: goto %000240fe

000240fe:
00024104: #15609 := extend:64[31:0[R1]]
00024109: mem := mem with [R24 + #15609] <- 0
0002410f: R2 := 0x32
00024117: R1 := R24
0002411f: R0 := R21
00024124: R30 := 0x11204
00024126: call @strlcpy with return %00024128

00024128:
0002412d: R1 := R31 + 0x72
00024136: R0 := 31:0[R23]
0002413c: R2 := 2
00024141: R30 := 0x11214
00024143: call @read with return %00024145

00024145:
0002414a: #15619 := 0xFFFFFFFFFFFFFFFE + extend:64[31:0[R0]]
0002414e: NF := 63:63[#15619]
00024151: VF := 31:31[R0] & ~63:63[#15619]
00024154: ZF := #15619 = 0
00024157: CF := 31:31[R0] | 31:31[R0] & ~63:63[#15619] | ~63:63[#15619]
00024165: #15621 := ZF
0002415f: when #15621 goto %00023f9b
0003b2bb: goto %00023ef2

00023f9b:
00023fab: R0 := R21
00023fb0: R30 := 0x114B4
00023fb2: call @noproxy_match with return %00023fb4

00023fb4:
00023fbd: #15548 := 31:0[R0] = 0
00023fb7: when #15548 goto %000239d7
0003b2bc: goto %00023fc0

00023fc0:
00023fc7: R1 := mem[R31 + 0x72, el]:u16
00023fcf: R0 := R21
00023fd5: R25 := 0
00023fdc: R1 := high:32[R1].23:16[R1].31:24[R1].7:0[R1].15:8[R1]
00023fe4: R1 := 31:0[R1] & 0xFFFF
00023fe9: R30 := 0x114D0
00023feb: call @host_connect with return %00023fed

00023fed:
00023ff4: R27 := 31:0[R0]
00023ffd: R0 := ~31:0[R0]
00024005: R0 := pad:64[1:1[R0]]
0003b2bd: goto %00023a9a

00023ef2:
00023f01: R27 := 0xFFFFFFFFFFFFFFFF
00023f07: R25 := 0
0003b2be: goto %00023af7

0002425e:
00024264: R0 := R25
00024269: R30 := 0x11370
0002426b: call @free with return %00023c70

00023c70:
00023c80: R0 := R24
00023c85: R30 := 0x11378
00023c87: call @free with return %00023c89

00023c89:
00023c8c: goto %00023c8a

000242db:
000242e0: R0 := 0xFFFFFFFFFFFFFF01
000242e8: mem := mem with [R19, el]:u16 <- low:16[31:0[R0]]
000242f0: R1 := R19
000242f9: R0 := 31:0[R23]
000242ff: R2 := 2
00024304: R30 := 0x112B8
00024306: call @write with return %00023c8a

00023c8a:
00023c92: R27 := 0xFFFFFFFFFFFFFFFF
00023c98: R25 := 0
00023c9c: goto %00023b12

00023b71:
00023b80: R0 := R0 + 1
00023b88: #15407 := 1 + extend:64[~31:0[R0]] + extend:64[31:0[R2]]
00023b8c: NF := 63:63[#15407]
00023b8f: VF := 31:31[~31:0[R0]] & 31:31[R2] & ~63:63[#15407] |
          ~31:31[~31:0[R0]] & ~31:31[R2] & 63:63[#15407]
00023b92: ZF := #15407 = 0
00023b95: CF := 31:31[~31:0[R0]] & 31:31[R2] | 31:31[R2] & ~63:63[#15407] |
          31:31[~31:0[R0]] & ~63:63[#15407]
00023ba6: #15409 := (NF <> VF | ZF) <> 0
00023ba0: when #15409 goto %00023b9e
0003b2bf: goto %00023b40

00023b9e:
00023bad: R0 := 0xFFFFFFFFFFFFFF05
00023bb5: mem := mem with [R19, el]:u16 <- low:16[31:0[R0]]
00023bbd: R1 := R19
00023bc6: R0 := 31:0[R23]
00023bcc: R2 := 2
00023bd3: R27 := 0xFFFFFFFFFFFFFFFF
00023bd9: R25 := 0
00023bde: R30 := 0x112EC
00023be0: call @write with return %00023be2

00023be2:
00023be4: goto %00023afc

0002392a:
00023937: #15309 := R21 = 0
00023931: when #15309 goto %0002392f
0003b2c0: goto %000246e9

000246e9:
000246ef: R0 := R21
000246f4: R30 := 0x11060
000246f6: call @free with return %0002392f

0002392f:
00023943: #15310 := R22 = 0
0002393d: when #15310 goto %0002393b
0003b2c1: goto %000246da

000246da:
000246e0: R0 := R22
000246e5: R30 := 0x1106C
000246e7: call @free with return %0002393b

0002393b:
0002394f: #15311 := R19 = 0
00023949: when #15311 goto %00023947
0003b2c2: goto %000246cb

000246cb:
000246d1: R0 := R19
000246d6: R30 := 0x11078
000246d8: call @free with return %00023947

00023947:
0002395b: #15312 := R25 = 0
00023955: when #15312 goto %00023953
0003b2c3: goto %000246bc

000246bc:
000246c2: R0 := R25
000246c7: R30 := 0x11084
000246c9: call @free with return %00023953

00023953:
00023967: #15313 := ~31:0[R27] = 0
00023961: when #15313 goto %0002395f
0003b2c4: goto %0002397a

0002395f:
00023970: R0 := 31:0[R27]
00023975: R30 := 0x110DC
00023977: call @close with return %00023979

00023979:
0002397c: goto %0002397a

0002397a:
00023984: R0 := 31:0[R23]
00023989: R30 := 0x11090
0002398b: call @close with return %0002398d

0002398d:
00023993: R20 := mem[R20 + 0xFB8, el]:u64
0002399b: R0 := mem[R31 + 0x78, el]:u64
000239a3: R1 := mem[R20, el]:u64
000239ab: #15326 := 1 + ~R1 + R0
000239af: NF := 63:63[#15326]
000239b2: VF := 63:63[R0] & 63:63[~R1] & ~63:63[#15326] | ~63:63[R0] &
          ~63:63[~R1] & 63:63[#15326]
000239b5: ZF := #15326 = 0
000239b8: CF := 63:63[R0] & 63:63[~R1] | 63:63[~R1] & ~63:63[#15326] |
          63:63[R0] & ~63:63[#15326]
000239bc: R0 := #15326
000239c2: R1 := 0
000239ce: #15331 := ~ZF <> 0
000239c8: when #15331 goto %000239c6
0003b2c5: goto %00024523

000239c6:
000239d3: R30 := 0x11540
000239d5: call @__stack_chk_fail with return %000239d7

000239d7:
000239de: R4 := mem[R31 + 0x72, el]:u16
000239e4: R3 := 0x13000
000239eb: R3 := R3 + 0x958
000239f1: R2 := 0xFFFFFFFFFFFFFFFF
000239f8: R4 := high:32[R4].23:16[R4].31:24[R4].7:0[R4].15:8[R4]
000239ff: R1 := 1
00023a07: R4 := 31:0[R4] & 0xFFFF
00023a0f: R0 := R22
00023a14: R30 := 0x11564
00023a16: call @__sprintf_chk with return %00023a18

00023a18:
00023a1c: R2 := 0x32
00023a24: R0 := R21
00023a2a: R1 := 0x12000
00023a31: R1 := R1 + 0x728
00023a36: R30 := 0x11578
00023a38: call @strlcat with return %00023a3a

00023a3a:
00023a40: R1 := R22
00023a46: R2 := 0x32
00023a4e: R0 := R21
00023a53: R30 := 0x11588
00023a55: call @strlcat with return %00023a57

00023a57:
00023a5a: R30 := 0x1158C
00023a5c: call @new_auth with return %00023a5e

00023a5e:
00023a64: R25 := R0
00023a69: R30 := 0x11594
00023a6b: call @proxy_connect with return %00023a6d

00023a6d:
00023a74: R27 := 31:0[R0]
00023a80: #15373 := ~31:31[R0]
00023a7a: when #15373 goto %00023a78
0003b2c6: goto %0002451c

00023a78:
00023a88: R2 := R21
00023a90: R1 := R25
00023a95: R30 := 0x115D0
00023a97: call @prepare_http_connect with return %00023a99

00023a99:
00023a9c: goto %00023a9a

00023a9a:
00023aa2: R3 := R19 + 4
00023aae: #15380 := 31:0[R0] = 0
00023aa8: when #15380 goto %00023aa6
0003b2c7: goto %0002430c

0002430c:
00024311: R0 := 5
00024319: R1 := R19
00024320: R0 := high:32[R0].extend:64[31:0[R0]] & 0xFFFFFFFF0000FFFF |
          0x1000000
00024328: #15704 := R19
0002432d: mem := mem with [#15704, el]:u32 <- 31:0[R0]
00024332: mem := mem with [#15704 + 4, el]:u32 <- 0
0002433a: mem := mem with [R3 + 4, el]:u16 <- 0
00024340: R2 := 0xA
00024349: R0 := 31:0[R23]
0002434e: R30 := 0x11504
00024350: call @write with return %00024352

00024352:
00024358: R0 := mem[R31 + 0x68, el]:u64
0002435f: R0 := R0 >> 0x20
00024364: R30 := 0x11510
00024366: call @inet_ntoa with return %00024368

00024368:
0002436e: R4 := R21
00024376: R3 := R0
0002437c: R2 := 0x14000
00024383: R2 := R2 + 0x68
0002438a: R1 := 1
00024391: R0 := 7
00024396: R30 := 0x1152C
00024398: call @__syslog_chk with return %0002439a

0002439a:
000243a1: R1 := 31:0[R27]
000243aa: R0 := 31:0[R23]
000243af: R30 := 0x11538
000243b1: call @tunnel with return %000243b3

000243b3:
000243b5: goto %00023af7

0002451c:
00024521: R3 := R19 + 4
0003b2c8: goto %00023aa6

00023aa6:
00023ab5: R0 := 0x105
00023abd: R1 := R19
00023ac4: R0 := high:32[R0].extend:64[31:0[R0]] & 0xFFFFFFFF0000FFFF |
          0x1000000
00023acc: #15388 := R19
00023ad1: mem := mem with [#15388, el]:u32 <- 31:0[R0]
00023ad6: mem := mem with [#15388 + 4, el]:u32 <- 0
00023ade: mem := mem with [R3 + 4, el]:u16 <- 0
00023ae7: R0 := 31:0[R23]
00023aed: R2 := 0xA
00023af2: R30 := 0x115C0
00023af4: call @write with return %00023af6

00023af6:
00023af9: goto %00023af7

00023af7:
00023b04: #15393 := R24 = 0
00023afe: when #15393 goto %00023afc
0003b2c9: goto %00024015

00024015:
0002401e: R0 := R24
00024023: R30 := 0x11230
00024025: call @free with return %00023afc

00023afc:
00023b0f: #15394 := R28 = 0
00023b09: when #15394 goto %0002392a
0003b2ca: goto %00023b12

00023b12:
00023b18: R0 := R28
00023b1d: R30 := 0x1123C
00023b1f: call @free with return %00023b21

00023b21:
00023b23: goto %0002392a

00024523:
00024527: R0 := 0
00024530: R19 := mem[R31 + 0x10, el]:u64
00024534: R20 := mem[R31 + 0x18, el]:u64
0002453d: R21 := mem[R31 + 0x20, el]:u64
00024541: R22 := mem[R31 + 0x28, el]:u64
0002454a: R23 := mem[R31 + 0x30, el]:u64
0002454e: R24 := mem[R31 + 0x38, el]:u64
00024557: R25 := mem[R31 + 0x40, el]:u64
0002455b: R26 := mem[R31 + 0x48, el]:u64
00024564: R27 := mem[R31 + 0x50, el]:u64
00024568: R28 := mem[R31 + 0x58, el]:u64
00024572: R29 := mem[R31, el]:u64
00024576: R30 := mem[R31 + 8, el]:u64
00024579: R31 := R31 + 0x80
0002457e: call R30 with noreturn

0003b2cb: sub srandom(srandom_arg1)
0003b468: srandom_arg1 :: in u32 = low:32[R0]

0002ec7b:
000330a2: R16 := 0x27000
000330aa: R17 := mem[R16 + 0xED8, el]:u64
000330b1: R16 := R16 + 0xED8
000330b6: call R17 with noreturn

0003b2cc: sub strcasecmp(strcasecmp_s1, strcasecmp_s2, strcasecmp_result)
0003b469: strcasecmp_s1 :: in u64 = R0
0003b46a: strcasecmp_s2 :: in u64 = R1
0003b46b: strcasecmp_result :: out u32 = low:32[R0]

0001401a:
00032cba: R16 := 0x27000
00032cc2: R17 := mem[R16 + 0xD98, el]:u64
00032cc9: R16 := R16 + 0xD98
00032cce: call R17 with noreturn

0003b2cd: sub strcat(strcat_dst, strcat_src, strcat_result)
0003b46c: strcat_dst :: in out u64 = R0
0003b46d: strcat_src :: in u64 = R1
0003b46e: strcat_result :: out u64 = R0

0001c329:
00032bc0: R16 := 0x27000
00032bc8: R17 := mem[R16 + 0xD48, el]:u64
00032bcf: R16 := R16 + 0xD48
00032bd4: call R17 with noreturn

0003b2ce: sub strchr(strchr_s, strchr_c, strchr_result)
0003b46f: strchr_s :: in u64 = R0
0003b470: strchr_c :: in u32 = low:32[R1]
0003b471: strchr_result :: out u64 = R0

0001ec3a:
00032f5d: R16 := 0x27000
00032f65: R17 := mem[R16 + 0xE70, el]:u64
00032f6c: R16 := R16 + 0xE70
00032f71: call R17 with noreturn

0003b2cf: sub strcmp(strcmp_s1, strcmp_s2, strcmp_result)
0003b472: strcmp_s1 :: in u64 = R0
0003b473: strcmp_s2 :: in u64 = R1
0003b474: strcmp_result :: out u32 = low:32[R0]

00024193:
00032e7c: R16 := 0x27000
00032e84: R17 := mem[R16 + 0xE28, el]:u64
00032e8b: R16 := R16 + 0xE28
00032e90: call R17 with noreturn

0003b2d0: sub strcpy(strcpy_dst, strcpy_src, strcpy_result)
0003b475: strcpy_dst :: in out u64 = R0
0003b476: strcpy_src :: in u64 = R1
0003b477: strcpy_result :: out u64 = R0

00026d34:
00032fda: R16 := 0x27000
00032fe2: R17 := mem[R16 + 0xE98, el]:u64
00032fe9: R16 := R16 + 0xE98
00032fee: call R17 with noreturn

0003b2d1: sub strcspn(strcspn_s, strcspn_reject, strcspn_result)
0003b478: strcspn_s :: in u64 = R0
0003b479: strcspn_reject :: in u64 = R1
0003b47a: strcspn_result :: out u64 = R0

00017093:
0003311f: R16 := 0x27000
00033127: R17 := mem[R16 + 0xF00, el]:u64
0003312e: R16 := R16 + 0xF00
00033133: call R17 with noreturn

0003b2d2: sub strdup(strdup_s, strdup_result)
0003b47b: strdup_s :: in u64 = R0
0003b47c: strdup_result :: out u64 = R0

00013e6d:
00032d05: R16 := 0x27000
00032d0d: R17 := mem[R16 + 0xDB0, el]:u64
00032d14: R16 := R16 + 0xDB0
00032d19: call R17 with noreturn

0003b2d3: sub strerror(strerror_result)
0003b47d: strerror_result :: out u32 = low:32[R0]

0001751e:
00032d1e: R16 := 0x27000
00032d26: R17 := mem[R16 + 0xDB8, el]:u64
00032d2d: R16 := R16 + 0xDB8
00032d32: call R17 with noreturn

0003b2d4: sub strlcat(strlcat_result)
0003b47e: strlcat_result :: out u32 = low:32[R0]

0000f522:
0000f529: #107 := R31 - 0x20
0000f52e: mem := mem with [#107, el]:u64 <- R29
0000f533: mem := mem with [#107 + 8, el]:u64 <- R30
0000f537: R31 := #107
0000f53e: R29 := R31
0000f546: mem := mem with [R31 + 0x10, el]:u64 <- R19
0000f54e: R19 := R0
0000f556: R0 := R1
0000f562: #115 := R2 = 0
0000f55c: when #115 goto %0000f55a
0003b2d5: goto %0002d299

0000f55a:
0000f568: R19 := 0
0003b2d6: goto %0000f56a

0002d299:
0002d29f: R6 := R19 + R2
0002d2a7: R3 := R19
0002d2ac: goto %0002d2aa

0002d2aa:
0002d2b4: R4 := pad:32[mem[R3]]
0002d2c0: #20005 := ~31:0[R4] = 0
0002d2ba: when #20005 goto %0002d2b8
0003b2d7: goto %0002d2e2

0002d2b8:
0002d2c7: R3 := R3 + 1
0002d2cf: #20009 := 1 + ~R6 + R3
0002d2d3: NF := 63:63[#20009]
0002d2d6: VF := 63:63[R3] & 63:63[~R6] & ~63:63[#20009] | ~63:63[R3] &
          ~63:63[~R6] & 63:63[#20009]
0002d2d9: ZF := #20009 = 0
0002d2dc: CF := 63:63[R3] & 63:63[~R6] | 63:63[~R6] & ~63:63[#20009] |
          63:63[R3] & ~63:63[#20009]
0002d2ea: #20014 := ZF
0002d2e4: when #20014 goto %0002d2e2
0003b2d8: goto %0002d2aa

0002d2e2:
0002d2f2: R19 := R3 - R19
0002d2fa: #20021 := 1 + ~R19 + R2
0002d2fe: NF := 63:63[#20021]
0002d301: VF := 63:63[R2] & 63:63[~R19] & ~63:63[#20021] | ~63:63[R2] &
          ~63:63[~R19] & 63:63[#20021]
0002d304: ZF := #20021 = 0
0002d307: CF := 63:63[R2] & 63:63[~R19] | 63:63[~R19] & ~63:63[#20021] |
          63:63[R2] & ~63:63[#20021]
0002d30b: R2 := #20021
0002d316: #20026 := ZF
0002d310: when #20026 goto %0000f56a
0003b2d9: goto %0002d319

0000f56a:
0000f56d: R30 := 0x5868
0000f570: call @strlen with return %0000f572

0000f572:
0000f578: R19 := R19 + R0
0000f580: R0 := R19
0000f588: R19 := mem[R31 + 0x10, el]:u64
0000f592: R29 := mem[R31, el]:u64
0000f596: R30 := mem[R31 + 8, el]:u64
0000f599: R31 := R31 + 0x20
0000f59e: call R30 with noreturn

0002d319:
0002d320: R6 := pad:32[mem[R0]]
0002d328: R5 := R0
0002d330: R4 := R3
0002d33c: #20033 := ~31:0[R6] = 0
0002d336: when #20033 goto %0002d334
0003b2da: goto %0002d3fb

0002d334:
0002d344: R4 := R3
0002d34b: #20037 := 0xFFFFFFFFFFFFFFFF + R2
0002d34f: NF := 63:63[#20037]
0002d352: VF := 63:63[R2] & ~63:63[#20037]
0002d355: ZF := #20037 = 0
0002d358: CF := 63:63[R2] | ~63:63[#20037] | 63:63[R2] & ~63:63[#20037]
0002d366: #20039 := ~ZF <> 0
0002d360: when #20039 goto %0002d35e
0003b2db: goto %0002d3da

0002d3da:
0002d3e2: R1 := pad:32[mem[R5 + 1]]
0002d3e5: R5 := R5 + 1
0002d3f0: #20055 := ~31:0[R1] = 0
0002d3ea: when #20055 goto %0002d3da
0003b2dc: goto %0002d3f3

0002d3f3:
0002d3f9: R4 := R3
0003b2dd: goto %0002d392

0002d35e:
0002d36f: mem := mem with [R4] <- low:8[31:0[R6]]
0002d372: R4 := R4 + 1
0002d379: R2 := R2 - 1
0002d383: R6 := pad:32[mem[R5 + 1]]
0002d386: R5 := R5 + 1
0002d38e: R3 := R4
0002d39a: #20043 := 31:0[R6] = 0
0002d394: when #20043 goto %0002d392
0003b2de: goto %0002d334

0002d392:
0002d3a2: R5 := R5 - R0
0002d3aa: R19 := R19 + R5
0003b2df: goto %0002d3ac

0002d3fb:
0002d3fd: goto %0002d3ac

0002d3ac:
0002d3b2: mem := mem with [R4] <- 0
0002d3ba: R0 := R19
0002d3c2: R19 := mem[R31 + 0x10, el]:u64
0002d3cc: R29 := mem[R31, el]:u64
0002d3d0: R30 := mem[R31 + 8, el]:u64
0002d3d3: R31 := R31 + 0x20
0002d3d8: call R30 with noreturn

0003b2e0: sub strlcpy(strlcpy_result)
0003b47f: strlcpy_result :: out u32 = low:32[R0]

0000f4d2:
0000f4db: R3 := R0
0000f4e7: #96 := R2 = 0
0000f4e1: when #96 goto %0000f4df
0003b2e1: goto %0002d3ff

0000f4df:
0000f4ef: R2 := R1
0003b2e2: goto %0000f4f3

0002d3ff:
0002d404: R5 := R2 - 1
0002d40c: R2 := R1
0002d414: R5 := R0 + R5
0002d419: goto %0002d417

0002d417:
0002d420: R0 := R2
0002d428: #20071 := 1 + ~R5 + R3
0002d42c: NF := 63:63[#20071]
0002d42f: VF := 63:63[R3] & 63:63[~R5] & ~63:63[#20071] | ~63:63[R3] &
          ~63:63[~R5] & 63:63[#20071]
0002d432: ZF := #20071 = 0
0002d435: CF := 63:63[R3] & 63:63[~R5] | 63:63[~R5] & ~63:63[#20071] |
          63:63[R3] & ~63:63[#20071]
0002d43e: R2 := R2 + 1
0002d44a: #20076 := ~ZF <> 0
0002d444: when #20076 goto %0002d442
0003b2e3: goto %0002d481

0002d481:
0002d487: R2 := R0
0002d48f: mem := mem with [R3] <- 0
0002d499: R3 := pad:32[mem[R2]]
0002d49c: R2 := R2 + 1
0002d4a7: #20084 := ~31:0[R3] = 0
0002d4a1: when #20084 goto %0000f4f3
0003b2e4: goto %0002d463

0000f4f3:
0000f4fb: R3 := pad:32[mem[R2]]
0000f4fe: R2 := R2 + 1
0000f509: #100 := ~31:0[R3] = 0
0000f503: when #100 goto %0000f4f3
0003b2e5: goto %0000f50c

0000f50c:
0000f512: R0 := R2 - R1
0000f519: R0 := R0 - 1
0000f51e: call R30 with noreturn

0002d442:
0002d453: R4 := mem[R2 - 1]
0002d45c: mem := mem with [R3] <- low:8[31:0[R4]]
0002d45f: R3 := R3 + 1
0002d46b: #20077 := 31:0[R4] = 0
0002d465: when #20077 goto %0002d463
0003b2e6: goto %0002d417

0002d463:
0002d473: R0 := R2 - R1
0002d47a: R0 := R0 - 1
0002d47f: call R30 with noreturn

0003b2e7: sub strlen(strlen_s, strlen_result)
0003b480: strlen_s :: in u64 = R0
0003b481: strlen_result :: out u64 = R0

0000f56e:
00032904: R16 := 0x27000
0003290c: R17 := mem[R16 + 0xC68, el]:u64
00032913: R16 := R16 + 0xC68
00032918: call R17 with noreturn

0003b2e8: sub strncasecmp(strncasecmp_s1, strncasecmp_s2, strncasecmp_n, strncasecmp_result)
0003b482: strncasecmp_s1 :: in u64 = R0
0003b483: strncasecmp_s2 :: in u64 = R1
0003b484: strncasecmp_n :: in u64 = R2
0003b485: strncasecmp_result :: out u32 = low:32[R0]

0001f4b2:
00032f2b: R16 := 0x27000
00032f33: R17 := mem[R16 + 0xE60, el]:u64
00032f3a: R16 := R16 + 0xE60
00032f3f: call R17 with noreturn

0003b2e9: sub strncpy(strncpy_dst, strncpy_src, strncpy_n, strncpy_result)
0003b486: strncpy_dst :: in out u64 = R0
0003b487: strncpy_src :: in u64 = R1
0003b488: strncpy_n :: in u64 = R2
0003b489: strncpy_result :: out u64 = R0

0001bf9b:
000330d4: R16 := 0x27000
000330dc: R17 := mem[R16 + 0xEE8, el]:u64
000330e3: R16 := R16 + 0xEE8
000330e8: call R17 with noreturn

0003b2ea: sub strstr(strstr_haystack, strstr_needle, strstr_result)
0003b48a: strstr_haystack :: in u64 = R0
0003b48b: strstr_needle :: in u64 = R1
0003b48c: strstr_result :: out u64 = R0

000150fe:
00033089: R16 := 0x27000
00033091: R17 := mem[R16 + 0xED0, el]:u64
00033098: R16 := R16 + 0xED0
0003309d: call R17 with noreturn

0003b2eb: sub strtok_r(strtok_r_str, strtok_r_delim, strtok_r_saveptr, strtok_r_result)
0003b48d: strtok_r_str :: in out u64 = R0
0003b48e: strtok_r_delim :: in u64 = R1
0003b48f: strtok_r_saveptr :: in out u64 = R2
0003b490: strtok_r_result :: out u64 = R0

000230ee:
00032adf: R16 := 0x27000
00032ae7: R17 := mem[R16 + 0xD00, el]:u64
00032aee: R16 := R16 + 0xD00
00032af3: call R17 with noreturn

0003b2ec: sub strtol(strtol_nptr, strtol_endptr, strtol_base, strtol_result)
0003b491: strtol_nptr :: in u64 = R0
0003b492: strtol_endptr :: in out u64 = R1
0003b493: strtol_base :: in u32 = low:32[R2]
0003b494: strtol_result :: out u64 = R0

00016f37:
00032eae: R16 := 0x27000
00032eb6: R17 := mem[R16 + 0xE38, el]:u64
00032ebd: R16 := R16 + 0xE38
00032ec2: call R17 with noreturn

0003b2ed: sub strtoll(strtoll_nptr, strtoll_endptr, strtoll_base, strtoll_result)
0003b495: strtoll_nptr :: in u64 = R0
0003b496: strtoll_endptr :: in out u64 = R1
0003b497: strtoll_base :: in u32 = low:32[R2]
0003b498: strtoll_result :: out u64 = R0

0001ff8f:
00032981: R16 := 0x27000
00032989: R17 := mem[R16 + 0xC90, el]:u64
00032990: R16 := R16 + 0xC90
00032995: call R17 with noreturn

0003b2ee: sub strtoul(strtoul_nptr, strtoul_endptr, strtoul_base, strtoul_result)
0003b499: strtoul_nptr :: in u64 = R0
0003b49a: strtoul_endptr :: in out u64 = R1
0003b49b: strtoul_base :: in u32 = low:32[R2]
0003b49c: strtoul_result :: out u64 = R0

0002f405:
000328eb: R16 := 0x27000
000328f3: R17 := mem[R16 + 0xC60, el]:u64
000328fa: R16 := R16 + 0xC60
000328ff: call R17 with noreturn

0003b2ef: sub sub_b518(sub_b518_result)
0003b49d: sub_b518_result :: out u32 = low:32[R0]

0001e599:
0001e5a0: #12553 := R31 - 0x70
0001e5a5: mem := mem with [#12553, el]:u64 <- R29
0001e5aa: mem := mem with [#12553 + 8, el]:u64 <- R30
0001e5ae: R31 := #12553
0001e5b5: R29 := R31
0001e5bd: #12558 := R31 + 0x10
0001e5c2: mem := mem with [#12558, el]:u64 <- R19
0001e5c7: mem := mem with [#12558 + 8, el]:u64 <- R20
0001e5d0: R20 := 31:0[R0]
0001e5d8: R19 := R2
0001e5de: R0 := 0x800
0001e5e6: #12569 := R31 + 0x20
0001e5eb: mem := mem with [#12569, el]:u64 <- R21
0001e5f0: mem := mem with [#12569 + 8, el]:u64 <- R22
0001e5f8: #12574 := R31 + 0x30
0001e5fd: mem := mem with [#12574, el]:u64 <- R23
0001e602: mem := mem with [#12574 + 8, el]:u64 <- R24
0001e60b: R24 := 31:0[R1]
0001e612: R23 := 1
0001e61a: #12582 := R31 + 0x40
0001e61f: mem := mem with [#12582, el]:u64 <- R25
0001e624: mem := mem with [#12582 + 8, el]:u64 <- R26
0001e62c: #12587 := R31 + 0x50
0001e631: mem := mem with [#12587, el]:u64 <- R27
0001e636: mem := mem with [#12587 + 8, el]:u64 <- R28
0001e63b: R30 := 0xB54C
0001e63d: call @new with return %0001e63f

0001e63f:
0001e643: R1 := 0x27000
0001e64b: R22 := R0
0001e652: R28 := 0
0001e65a: R27 := mem[R1 + 0xF78, el]:u64
0001e660: R0 := 0x12000
0001e667: R0 := R0 + 0x6D0
0001e66f: mem := mem with [R31 + 0x68, el]:u64 <- R0
0003b2f0: goto %0001e671

0001e671:
0001e676: #12593 := 1 + R19
0001e67a: NF := 63:63[#12593]
0001e67d: VF := ~63:63[R19] & 63:63[#12593]
0001e680: ZF := #12593 = 0
0001e683: CF := 63:63[R19] & ~63:63[#12593]
0001e691: #12595 := ZF
0001e68b: when #12595 goto %0001e689
0003b2f1: goto %0002c6ef

0002c6ef:
0002c6f5: R0 := R19 - extend:64[31:0[R28]]
0002c6fc: #19635 := 0xFFFFFFFFFFFFF800 + R0
0002c700: NF := 63:63[#19635]
0002c703: VF := 63:63[R0] & ~63:63[#19635]
0002c706: ZF := #19635 = 0
0002c709: CF := 63:63[R0] | ~63:63[#19635] | 63:63[R0] & ~63:63[#19635]
0002c718: #19637 := (NF = VF & ~ZF) <> 0
0002c712: when #19637 goto %0001e689
0003b2f2: goto %0002c71b

0002c71b:
0002c722: R21 := 31:0[R19] - 31:0[R28]
0002c729: R2 := extend:64[31:0[R21]]
0003b2f3: goto %0001e6a3

0001e6a3:
0001e6ac: R1 := R22
0001e6b5: R0 := 31:0[R24]
0001e6ba: R30 := 0xB590
0001e6bc: call @read with return %0001e6be

0001e6be:
0001e6c3: #12605 := extend:64[31:0[R0]]
0001e6c7: NF := 63:63[#12605]
0001e6ca: VF := 31:31[R0] & ~63:63[#12605]
0001e6cd: ZF := #12605 = 0
0001e6d0: CF := 31:31[R0] | 31:31[R0] & ~63:63[#12605] | ~63:63[#12605]
0001e6db: R26 := R0
0001e6e4: R0 := 31:0[R28] + 31:0[R0]
0001e6fe: #12613 := (NF = VF & ~ZF) <> 0
0001e6ff: goto %0001e6f6

0001e6f6:
0001e6f8: when #12613 goto %0001e6ef
0001e6f9: goto %0001e6f3

0001e6f3:
0001e6f4: R28 := 31:0[R28]
0001e6fb: goto %0001e6f7

0001e6ef:
0001e6f0: R28 := 31:0[R0]
0001e6fa: goto %0001e6f7

0001e6f7:
0001e709: R25 := 31:0[R26]
0001e715: #12617 := ~~31:31[R20]
0001e70f: when #12617 goto %0001e70d
0003b2f4: goto %0002c6b3

0001e70d:
0001e71c: #12618 := extend:64[31:0[R26]]
0001e720: NF := 63:63[#12618]
0001e723: VF := 31:31[R26] & ~63:63[#12618]
0001e726: ZF := #12618 = 0
0001e729: CF := 31:31[R26] | 31:31[R26] & ~63:63[#12618] | ~63:63[#12618]
0001e746: #12620 := (NF <> VF | ZF) <> 0
0001e747: goto %0001e73e

0001e73e:
0001e740: when #12620 goto %0001e737
0001e741: goto %0001e73b

0001e73b:
0001e73c: R21 := 1
0001e743: goto %0001e73f

0001e737:
0001e738: R21 := 0
0001e742: goto %0001e73f

0001e73f:
0001e74d: goto %0001e74b

0002c6b3:
0002c6ba: R0 := mem[R27, el]:u32
0002c6c0: R1 := 0x27000
0002c6c8: mem := mem with [R31 + 0x60, el]:u64 <- R1
0002c6d3: #19630 := 31:0[R0] = 0
0002c6cd: when #19630 goto %0002c611
0003b2f5: goto %0002c6d6

0002c6d6:
0002c6da: R6 := 0x12000
0002c6e1: R6 := R6 + 0x690
0002c6ec: #19631 := ~~31:31[R26]
0002c6e6: when #19631 goto %0002c5b0
0003b2f6: goto %0002c5d0

0002c5b0:
0002c5b3: R30 := 0xB698
0002c5b5: call @__errno_location with return %0002c5b7

0002c5b7:
0002c5be: R0 := mem[R0, el]:u32
0002c5c3: R30 := 0xB6A0
0002c5c5: call @strerror with return %0002c5c7

0002c5c7:
0002c5cd: R6 := R0
0002c5d2: goto %0002c5d0

0002c5d0:
0002c5d7: R1 := 0x12000
0002c5e0: R3 := 31:0[R21]
0002c5e8: R5 := R19
0002c5ef: R1 := R1 + 0x698
0002c5f8: R4 := 31:0[R28]
0002c601: R2 := 31:0[R26]
0002c608: R0 := 1
0002c60d: R30 := 0xB5E4
0002c60f: call @__printf_chk with return %0002c611

0002c611:
0002c618: R0 := 31:0[R20]
0002c61d: R30 := 0xB5EC
0002c61f: call @so_closed with return %0002c621

0002c621:
0002c62a: #19609 := ~31:0[R0] = 0
0002c624: when #19609 goto %0001e96b
0003b2f7: goto %0002c62d

0001e96b:
0001e971: R0 := R22
0001e976: R30 := 0xB730
0001e978: call @free with return %0001e97a

0001e97a:
0001e980: R0 := mem[R31 + 0x60, el]:u64
0001e987: R25 := 0xFFFFFFFFFFFFFC19
0001e98f: R26 := mem[R0 + 0xF78, el]:u64
0001e998: R0 := mem[R26, el]:u32
0001e9a3: #12673 := ~31:0[R0] = 0
0001e99d: when #12673 goto %0001e8d7
0003b2f8: goto %0001e9a6

0001e9a6:
0001e9ad: R19 := mem[R31 + 0x10, el]:u64
0001e9b1: R20 := mem[R31 + 0x18, el]:u64
0001e9ba: R21 := mem[R31 + 0x20, el]:u64
0001e9be: R22 := mem[R31 + 0x28, el]:u64
0001e9c7: R23 := mem[R31 + 0x30, el]:u64
0001e9cb: R24 := mem[R31 + 0x38, el]:u64
0001e9d4: R25 := mem[R31 + 0x40, el]:u64
0001e9d8: R26 := mem[R31 + 0x48, el]:u64
0001e9e1: R27 := mem[R31 + 0x50, el]:u64
0001e9e5: R28 := mem[R31 + 0x58, el]:u64
0001e9ef: R29 := mem[R31, el]:u64
0001e9f3: R30 := mem[R31 + 8, el]:u64
0001e9f6: R31 := R31 + 0x70
0001e9fb: call R30 with noreturn

0002c62d:
0002c632: #19610 := extend:64[31:0[R26]]
0002c636: NF := 63:63[#19610]
0002c639: VF := 31:31[R26] & ~63:63[#19610]
0002c63c: ZF := #19610 = 0
0002c63f: CF := 31:31[R26] | 31:31[R26] & ~63:63[#19610] | ~63:63[#19610]
0002c650: #19612 := (NF <> VF | ZF) <> 0
0002c64a: when #19612 goto %0002c648
0003b2f9: goto %0002c661

0002c648:
0002c658: R0 := R22
0002c65d: R30 := 0xB6B0
0002c65f: call @free with return %0001e7f6

0002c661:
0002c667: R1 := R22
0002c66e: R2 := extend:64[31:0[R26]]
0002c677: R0 := 31:0[R20]
0002c67c: R30 := 0xB608
0002c67e: call @write with return %0002c680

0002c680:
0002c684: R1 := 0x27000
0002c68d: R23 := 31:0[R0]
0002c694: R21 := 1
0002c69c: R1 := mem[R1 + 0xF78, el]:u64
0002c6a5: R1 := mem[R1, el]:u32
0002c6b0: #19628 := ~31:0[R1] = 0
0002c6aa: when #19628 goto %0002c582
0003b2fa: goto %0001e74b

0002c582:
0002c588: R1 := mem[R31 + 0x68, el]:u64
0002c591: R2 := 31:0[R0]
0002c59a: R3 := 31:0[R26]
0002c5a3: R0 := 31:0[R21]
0002c5a8: R30 := 0xB690
0002c5aa: call @__printf_chk with return %0002c5ac

0002c5ac:
0002c5ae: goto %0001e74b

0001e74b:
0001e753: #12621 := extend:64[31:0[R23]]
0001e757: NF := 63:63[#12621]
0001e75a: VF := 31:31[R23] & ~63:63[#12621]
0001e75d: ZF := #12621 = 0
0001e760: CF := 31:31[R23] | 31:31[R23] & ~63:63[#12621] | ~63:63[#12621]
0001e78b: #12623 := (NF = VF & ~ZF) <> 0
0001e78c: goto %0001e783

0001e783:
0001e785: when #12623 goto %0001e76b
0001e786: goto %0001e777

0001e777:
0001e778: NF := 0
0001e77b: ZF := 1
0001e77e: CF := 0
0001e781: VF := 0
0001e788: goto %0001e784

0001e76b:
0001e76c: NF := 63:63[extend:64[31:0[R21]] + 0]
0001e76f: VF := 31:31[R21] & ~63:63[extend:64[31:0[R21]] + 0]
0001e772: ZF := extend:64[31:0[R21]] + 0 = 0
0001e775: CF := 31:31[R21] | ~63:63[extend:64[31:0[R21]] + 0] | 31:31[R21] &
          ~63:63[extend:64[31:0[R21]] + 0]
0001e787: goto %0001e784

0001e784:
0001e799: #12626 := ZF
0001e793: when #12626 goto %0001e791
0003b2fb: goto %0002c525

0001e791:
0001e7a1: R0 := R22
0001e7a6: R30 := 0xB768
0001e7a8: call @free with return %0001e7aa

0001e7aa:
0001e7af: #12630 := extend:64[31:0[R25]]
0001e7b3: NF := 63:63[#12630]
0001e7b6: VF := 31:31[R25] & ~63:63[#12630]
0001e7b9: ZF := #12630 = 0
0001e7bc: CF := 31:31[R25] | 31:31[R25] & ~63:63[#12630] | ~63:63[#12630]
0001e7c6: R0 := 1
0001e7ee: #12632 := (NF = VF & ~ZF) <> 0
0001e7ef: goto %0001e7e6

0001e7e6:
0001e7e8: when #12632 goto %0001e7ce
0001e7e9: goto %0001e7da

0001e7da:
0001e7db: NF := 0
0001e7de: ZF := 1
0001e7e1: CF := 0
0001e7e4: VF := 0
0001e7eb: goto %0001e7e7

0001e7ce:
0001e7cf: NF := 63:63[extend:64[31:0[R23]] + 0]
0001e7d2: VF := 31:31[R23] & ~63:63[extend:64[31:0[R23]] + 0]
0001e7d5: ZF := extend:64[31:0[R23]] + 0 = 0
0001e7d8: CF := 31:31[R23] | ~63:63[extend:64[31:0[R23]] + 0] | 31:31[R23] &
          ~63:63[extend:64[31:0[R23]] + 0]
0001e7ea: goto %0001e7e7

0001e7e7:
0001e7fe: #12635 := (NF <> VF | ZF) <> 0
0001e7f8: when #12635 goto %0001e7f6
0003b2fc: goto %0001ea50

0001ea50:
0001ea57: R19 := mem[R31 + 0x10, el]:u64
0001ea5b: R20 := mem[R31 + 0x18, el]:u64
0001ea64: R21 := mem[R31 + 0x20, el]:u64
0001ea68: R22 := mem[R31 + 0x28, el]:u64
0001ea71: R23 := mem[R31 + 0x30, el]:u64
0001ea75: R24 := mem[R31 + 0x38, el]:u64
0001ea7e: R25 := mem[R31 + 0x40, el]:u64
0001ea82: R26 := mem[R31 + 0x48, el]:u64
0001ea8b: R27 := mem[R31 + 0x50, el]:u64
0001ea8f: R28 := mem[R31 + 0x58, el]:u64
0001ea99: R29 := mem[R31, el]:u64
0001ea9d: R30 := mem[R31 + 8, el]:u64
0001eaa0: R31 := R31 + 0x70
0001eaa5: call R30 with noreturn

0001e7f6:
0001e805: #12636 := extend:64[31:0[R25]]
0001e809: NF := 63:63[#12636]
0001e80c: VF := 31:31[R25] & ~63:63[#12636]
0001e80f: ZF := #12636 = 0
0001e812: CF := 31:31[R25] | 31:31[R25] & ~63:63[#12636] | ~63:63[#12636]
0001e83b: #12638 := ZF
0001e83c: goto %0001e833

0001e833:
0001e835: when #12638 goto %0001e81b
0001e836: goto %0001e827

0001e827:
0001e828: NF := 0
0001e82b: ZF := 1
0001e82e: CF := 0
0001e831: VF := 0
0001e838: goto %0001e834

0001e81b:
0001e81c: NF := 63:63[extend:64[31:0[R23]] + 0]
0001e81f: VF := 31:31[R23] & ~63:63[extend:64[31:0[R23]] + 0]
0001e822: ZF := extend:64[31:0[R23]] + 0 = 0
0001e825: CF := 31:31[R23] | ~63:63[extend:64[31:0[R23]] + 0] | 31:31[R23] &
          ~63:63[extend:64[31:0[R23]] + 0]
0001e837: goto %0001e834

0001e834:
0001e84b: #12641 := (NF <> VF | ZF) <> 0
0001e845: when #12641 goto %0001e843
0003b2fd: goto %0001e9fd

0001e9fd:
0001ea02: #12680 := 1 + R19
0001ea06: NF := 63:63[#12680]
0001ea09: VF := ~63:63[R19] & 63:63[#12680]
0001ea0c: ZF := #12680 = 0
0001ea0f: CF := 63:63[R19] & ~63:63[#12680]
0001ea18: R0 := 1
0001ea23: #12682 := ZF
0001ea1d: when #12682 goto %0001e876
0003b2fe: goto %0001ea26

0001ea26:
0001ea2c: #12686 := 1 + extend:64[~(31:0[R28] << 0x30)] + R19
0001ea30: NF := 63:63[#12686]
0001ea33: VF := 63:63[R19] & 31:31[~(31:0[R28] << 0x30)] & ~63:63[#12686] |
          ~63:63[R19] & ~31:31[~(31:0[R28] << 0x30)] & 63:63[#12686]
0001ea36: ZF := #12686 = 0
0001ea39: CF := 63:63[R19] & 31:31[~(31:0[R28] << 0x30)] |
          31:31[~(31:0[R28] << 0x30)] & ~63:63[#12686] | 63:63[R19] &
          ~63:63[#12686]
0001ea46: #12691 := ZF
0001ea40: when #12691 goto %0001e876
0003b2ff: goto %0001ea49

0001ea49:
0001ea4e: R25 := 0
0003b300: goto %0001e843

0001e843:
0001e851: R0 := 0x27000
0001e859: mem := mem with [R31 + 0x60, el]:u64 <- R0
0001e861: R0 := mem[R31 + 0x60, el]:u64
0001e869: R26 := mem[R0 + 0xF78, el]:u64
0001e872: R0 := mem[R26, el]:u32
0001e87e: #12645 := 31:0[R0] = 0
0001e878: when #12645 goto %0001e876
0003b301: goto %0001e8d7

0001e8d7:
0001e8de: R4 := 31:0[R25]
0001e8e7: R3 := 31:0[R24]
0001e8f0: R2 := 31:0[R20]
0001e8f6: R1 := 0x12000
0001e8fd: R0 := 1
0001e904: R1 := R1 + 0x6F0
0001e909: R30 := 0xB708
0001e90b: call @__printf_chk with return %0001e90d

0001e90d:
0001e912: R0 := 0
0001e91b: R19 := mem[R31 + 0x10, el]:u64
0001e91f: R20 := mem[R31 + 0x18, el]:u64
0001e928: R21 := mem[R31 + 0x20, el]:u64
0001e92c: R22 := mem[R31 + 0x28, el]:u64
0001e935: R23 := mem[R31 + 0x30, el]:u64
0001e939: R24 := mem[R31 + 0x38, el]:u64
0001e942: R25 := mem[R31 + 0x40, el]:u64
0001e946: R26 := mem[R31 + 0x48, el]:u64
0001e94f: R27 := mem[R31 + 0x50, el]:u64
0001e953: R28 := mem[R31 + 0x58, el]:u64
0001e95d: R29 := mem[R31, el]:u64
0001e961: R30 := mem[R31 + 8, el]:u64
0001e964: R31 := R31 + 0x70
0001e969: call R30 with noreturn

0002c525:
0002c52a: #19565 := 1 + R19
0002c52e: NF := 63:63[#19565]
0002c531: VF := ~63:63[R19] & 63:63[#19565]
0002c534: ZF := #19565 = 0
0002c537: CF := 63:63[R19] & ~63:63[#19565]
0002c544: #19567 := ZF
0002c53e: when #19567 goto %0001e689
0003b302: goto %0002c547

0001e689:
0001e697: R2 := 0x800
0001e6a0: R21 := 31:0[R2]
0001e6a5: goto %0001e6a3

0002c547:
0002c54d: #19571 := 1 + extend:64[~(31:0[R28] << 0x30)] + R19
0002c551: NF := 63:63[#19571]
0002c554: VF := 63:63[R19] & 31:31[~(31:0[R28] << 0x30)] & ~63:63[#19571] |
          ~63:63[R19] & ~31:31[~(31:0[R28] << 0x30)] & 63:63[#19571]
0002c557: ZF := #19571 = 0
0002c55a: CF := 63:63[R19] & 31:31[~(31:0[R28] << 0x30)] |
          31:31[~(31:0[R28] << 0x30)] & ~63:63[#19571] | 63:63[R19] &
          ~63:63[#19571]
0002c569: #19576 := (NF = VF & ~ZF) <> 0
0002c563: when #19576 goto %0001e671
0003b303: goto %0002c56c

0002c56c:
0002c572: R0 := R22
0002c577: R30 := 0xB644
0002c579: call @free with return %0002c57b

0002c57b:
0002c580: R0 := 1
0003b304: goto %0001e876

0001e876:
0001e887: R19 := mem[R31 + 0x10, el]:u64
0001e88b: R20 := mem[R31 + 0x18, el]:u64
0001e894: R21 := mem[R31 + 0x20, el]:u64
0001e898: R22 := mem[R31 + 0x28, el]:u64
0001e8a1: R23 := mem[R31 + 0x30, el]:u64
0001e8a5: R24 := mem[R31 + 0x38, el]:u64
0001e8ae: R25 := mem[R31 + 0x40, el]:u64
0001e8b2: R26 := mem[R31 + 0x48, el]:u64
0001e8bb: R27 := mem[R31 + 0x50, el]:u64
0001e8bf: R28 := mem[R31 + 0x58, el]:u64
0001e8c9: R29 := mem[R31, el]:u64
0001e8cd: R30 := mem[R31 + 8, el]:u64
0001e8d0: R31 := R31 + 0x70
0001e8d5: call R30 with noreturn

0003b305: sub substr(substr_result)
0003b49e: substr_result :: out u32 = low:32[R0]

00014222:
00014229: #5745 := R31 - 0x30
0001422e: mem := mem with [#5745, el]:u64 <- R29
00014233: mem := mem with [#5745 + 8, el]:u64 <- R30
00014237: R31 := #5745
0001423e: R29 := R31
00014246: #5750 := R31 + 0x10
0001424b: mem := mem with [#5750, el]:u64 <- R19
00014250: mem := mem with [#5750 + 8, el]:u64 <- R20
00014259: R19 := 31:0[R2]
00014261: R20 := R0
00014269: #5761 := R31 + 0x20
0001426e: mem := mem with [#5761, el]:u64 <- R21
00014273: mem := mem with [#5761 + 8, el]:u64 <- R22
0001427a: R22 := extend:64[31:0[R1]]
0001427f: R30 := 0x5288
00014281: call @strlen with return %00014283

00014283:
00014288: #5764 := extend:64[31:0[R19]]
0001428c: NF := 63:63[#5764]
0001428f: VF := 31:31[R19] & ~63:63[#5764]
00014292: ZF := #5764 = 0
00014295: CF := 31:31[R19] | 31:31[R19] & ~63:63[#5764] | ~63:63[#5764]
000142a0: R1 := R0 - R22
000142b8: #5769 := ~ZF <> 0
000142b9: goto %000142b0

000142b0:
000142b2: when #5769 goto %000142a9
000142b3: goto %000142ad

000142ad:
000142ae: R19 := 31:0[R0]
000142b5: goto %000142b1

000142a9:
000142aa: R19 := 31:0[R19]
000142b4: goto %000142b1

000142b1:
000142c3: R0 := 31:0[R0] - 31:0[R22]
000142cb: #5776 := 1 + extend:64[~(31:0[R19] << 0x30)] + R1
000142cf: NF := 63:63[#5776]
000142d2: VF := 63:63[R1] & 31:31[~(31:0[R19] << 0x30)] & ~63:63[#5776] |
          ~63:63[R1] & ~31:31[~(31:0[R19] << 0x30)] & 63:63[#5776]
000142d5: ZF := #5776 = 0
000142d8: CF := 63:63[R1] & 31:31[~(31:0[R19] << 0x30)] |
          31:31[~(31:0[R19] << 0x30)] & ~63:63[#5776] | 63:63[R1] &
          ~63:63[#5776]
000142f3: #5781 := (~CF | ZF) <> 0
000142f4: goto %000142eb

000142eb:
000142ed: when #5781 goto %000142e4
000142ee: goto %000142e8

000142e8:
000142e9: R19 := 31:0[R19]
000142f0: goto %000142ec

000142e4:
000142e5: R19 := 31:0[R0]
000142ef: goto %000142ec

000142ec:
000142fc: #5782 := extend:64[31:0[R19]]
00014300: NF := 63:63[#5782]
00014303: VF := 31:31[R19] & ~63:63[#5782]
00014306: ZF := #5782 = 0
00014309: CF := 31:31[R19] | 31:31[R19] & ~63:63[#5782] | ~63:63[#5782]
0001431a: #5784 := (NF <> VF | ZF) <> 0
00014314: when #5784 goto %00014312
0003b306: goto %00014d87

00014312:
00014323: R19 := mem[R31 + 0x10, el]:u64
00014327: R20 := mem[R31 + 0x18, el]:u64
0001432d: R1 := 1
00014336: R21 := mem[R31 + 0x20, el]:u64
0001433a: R22 := mem[R31 + 0x28, el]:u64
00014342: R0 := R1
0001434c: R29 := mem[R31, el]:u64
00014350: R30 := mem[R31 + 8, el]:u64
00014353: R31 := R31 + 0x30
00014357: call @calloc with noreturn

00014d87:
00014d8d: R0 := extend:64[31:0[R19]] + 1
00014d93: R1 := 1
00014d9a: R19 := extend:64[31:0[R19]]
00014da1: R0 := extend:64[31:0[R0]]
00014da6: R30 := 0x52BC
00014da8: call @calloc with return %00014daa

00014daa:
00014db0: R1 := R20 + R22
00014db8: R2 := R0
0003b307: goto %00014dba

00014dba:
00014dc2: R3 := pad:32[mem[R1]]
00014dc5: R1 := R1 + 1
00014dce: mem := mem with [R2] <- low:8[31:0[R3]]
00014dd1: R2 := R2 + 1
00014dd9: R4 := R19 - R2
00014de5: #6083 := 31:0[R3] = 0
00014ddf: when #6083 goto %00014ddd
0003b308: goto %00014e17

00014e17:
00014e1d: #6090 := R4 + R0
00014e21: NF := 63:63[#6090]
00014e24: VF := 63:63[R0] & 63:63[R4] & ~63:63[#6090] | ~63:63[R0] &
          ~63:63[R4] & 63:63[#6090]
00014e27: ZF := #6090 = 0
00014e2a: CF := 63:63[R0] & 63:63[R4] | 63:63[R4] & ~63:63[#6090] | 63:63[R0]
          & ~63:63[#6090]
00014e37: #6095 := ~ZF <> 0
00014e31: when #6095 goto %00014dba
0003b309: goto %00014e3a

00014e3a:
00014e40: mem := mem with [R2] <- 0
0003b30a: goto %00014e42

00014e42:
00014e4a: R2 := pad:32[mem[R1]]
00014e4d: R1 := R1 + 1
00014e58: #6096 := ~31:0[R2] = 0
00014e52: when #6096 goto %00014e42
0003b30b: goto %00014ddd

00014ddd:
00014dee: R19 := mem[R31 + 0x10, el]:u64
00014df2: R20 := mem[R31 + 0x18, el]:u64
00014dfb: R21 := mem[R31 + 0x20, el]:u64
00014dff: R22 := mem[R31 + 0x28, el]:u64
00014e09: R29 := mem[R31, el]:u64
00014e0d: R30 := mem[R31 + 8, el]:u64
00014e10: R31 := R31 + 0x30
00014e15: call R30 with noreturn

0003b30c: sub tcgetattr(tcgetattr_result)
0003b49f: tcgetattr_result :: out u32 = low:32[R0]

0002e1e3:
00032a62: R16 := 0x27000
00032a6a: R17 := mem[R16 + 0xCD8, el]:u64
00032a71: R16 := R16 + 0xCD8
00032a76: call R17 with noreturn

0003b30d: sub tcsetattr(tcsetattr_result)
0003b4a0: tcsetattr_result :: out u32 = low:32[R0]

0002e29f:
00033025: R16 := 0x27000
0003302d: R17 := mem[R16 + 0xEB0, el]:u64
00033034: R16 := R16 + 0xEB0
00033039: call R17 with noreturn

0003b30e: sub time(time_result)
0003b4a1: time_result :: out u32 = low:32[R0]

0001e417:
00032b11: R16 := 0x27000
00032b19: R17 := mem[R16 + 0xD10, el]:u64
00032b20: R16 := R16 + 0xD10
00032b25: call R17 with noreturn

0003b30f: sub to_base64(to_base64_result)
0003b4a2: to_base64_result :: out u32 = low:32[R0]

0000fca0:
0000fca5: #409 := 0xFFFFFFFFFFFFFFFE + R2
0000fca9: NF := 63:63[#409]
0000fcac: VF := 63:63[R2] & ~63:63[#409]
0000fcaf: ZF := #409 = 0
0000fcb2: CF := 63:63[R2] | ~63:63[#409] | 63:63[R2] & ~63:63[#409]
0000fcdb: #411 := (CF & ~ZF) <> 0
0000fcdc: goto %0000fcd3

0000fcd3:
0000fcd5: when #411 goto %0000fcbb
0000fcd6: goto %0000fcc7

0000fcc7:
0000fcc8: NF := 0
0000fccb: ZF := 0
0000fcce: CF := 0
0000fcd1: VF := 0
0000fcd8: goto %0000fcd4

0000fcbb:
0000fcbc: NF := 63:63[R3 - 0xA]
0000fcbf: VF := 63:63[R3] & ~63:63[R3 - 0xA]
0000fcc2: ZF := R3 - 0xA = 0
0000fcc5: CF := 63:63[R3] | ~63:63[R3 - 0xA] | 63:63[R3] & ~63:63[R3 - 0xA]
0000fcd7: goto %0000fcd4

0000fcd4:
0000fcea: #414 := (~CF | ZF) <> 0
0000fce4: when #414 goto %0000fce2
0003b310: goto %0002cdb6

0002cdb6:
0002cdba: R4 := 0x28000
0002cdc1: R4 := R4 + 0x10
0002cdc8: R4 := R4 + 0x220
0003b311: goto %0002cdca

0002cdca:
0002cdd1: R5 := pad:32[mem[R1]]
0002cdd8: R0 := R0 + 4
0002cddf: R2 := R2 - 3
0002cde6: R3 := R3 - 4
0002cded: #19789 := 0xFFFFFFFFFFFFFFFE + R2
0002cdf1: NF := 63:63[#19789]
0002cdf4: VF := 63:63[R2] & ~63:63[#19789]
0002cdf7: ZF := #19789 = 0
0002cdfa: CF := 63:63[R2] | ~63:63[#19789] | 63:63[R2] & ~63:63[#19789]
0002ce03: R1 := R1 + 3
0002ce0b: R5 := pad:64[31:2[R5]]
0002ce32: #19792 := (CF & ~ZF) <> 0
0002ce33: goto %0002ce2a

0002ce2a:
0002ce2c: when #19792 goto %0002ce12
0002ce2d: goto %0002ce1e

0002ce1e:
0002ce1f: NF := 0
0002ce22: ZF := 0
0002ce25: CF := 0
0002ce28: VF := 0
0002ce2f: goto %0002ce2b

0002ce12:
0002ce13: NF := 63:63[R3 - 0xA]
0002ce16: VF := 63:63[R3] & ~63:63[R3 - 0xA]
0002ce19: ZF := R3 - 0xA = 0
0002ce1c: CF := 63:63[R3] | ~63:63[R3 - 0xA] | 63:63[R3] & ~63:63[R3 - 0xA]
0002ce2e: goto %0002ce2b

0002ce2b:
0002ce3c: #19794 := extend:64[31:0[R5]]
0002ce42: R5 := pad:32[mem[R4 + #19794]]
0002ce4a: mem := mem with [R0 - 4] <- low:8[31:0[R5]]
0002ce53: R6 := mem[R1 - 3]
0002ce5c: R5 := mem[R1 - 2]
0002ce64: R6 := pad:64[1:0[R6]] << 0x24
0002ce6d: R5 := 31:0[R6] | 31:0[R5] >> 4
0002ce75: #19800 := extend:64[31:0[R5]]
0002ce7b: R5 := pad:32[mem[R4 + #19800]]
0002ce83: mem := mem with [R0 - 3] <- low:8[31:0[R5]]
0002ce8c: R6 := mem[R1 - 2]
0002ce95: R5 := mem[R1 - 1]
0002ce9d: R6 := pad:64[3:0[R6]] << 0x22
0002cea6: R5 := 31:0[R6] | 31:0[R5] >> 6
0002ceae: #19806 := extend:64[31:0[R5]]
0002ceb4: R5 := pad:32[mem[R4 + #19806]]
0002cebc: mem := mem with [R0 - 2] <- low:8[31:0[R5]]
0002cec5: R5 := mem[R1 - 1]
0002cecd: R5 := 31:0[R5] & 0x3F
0002ced5: #19829 := extend:64[31:0[R5]]
0002cedb: R5 := pad:32[mem[R4 + #19829]]
0002cee3: mem := mem with [R0 - 1] <- low:8[31:0[R5]]
0002ceef: #19831 := (CF & ~ZF) <> 0
0002cee9: when #19831 goto %0002cdca
0003b312: goto %0000fce2

0000fce2:
0000fcf1: #415 := R2
0000fcf5: NF := 63:63[#415]
0000fcf8: VF := 63:63[R2] & ~63:63[#415]
0000fcfb: ZF := #415 = 0
0000fcfe: CF := 63:63[R2] | ~63:63[#415] | 63:63[R2] & ~63:63[#415]
0000fd26: #417 := ~ZF <> 0
0000fd27: goto %0000fd1e

0000fd1e:
0000fd20: when #417 goto %0000fd06
0000fd21: goto %0000fd12

0000fd12:
0000fd13: NF := 0
0000fd16: ZF := 0
0000fd19: CF := 0
0000fd1c: VF := 0
0000fd23: goto %0000fd1f

0000fd06:
0000fd07: NF := 63:63[R3 - 4]
0000fd0a: VF := 63:63[R3] & ~63:63[R3 - 4]
0000fd0d: ZF := R3 - 4 = 0
0000fd10: CF := 63:63[R3] | ~63:63[R3 - 4] | 63:63[R3] & ~63:63[R3 - 4]
0000fd22: goto %0000fd1f

0000fd1f:
0000fd35: #420 := (~CF | ZF) <> 0
0000fd2f: when #420 goto %0000fd2d
0003b313: goto %0002cd00

0002cd00:
0002cd07: R4 := pad:32[mem[R1]]
0002cd0d: R3 := 0x28000
0002cd14: R3 := R3 + 0x10
0002cd1b: #19775 := 0xFFFFFFFFFFFFFFFF + R2
0002cd1f: NF := 63:63[#19775]
0002cd22: VF := 63:63[R2] & ~63:63[#19775]
0002cd25: ZF := #19775 = 0
0002cd28: CF := 63:63[R2] | ~63:63[#19775] | 63:63[R2] & ~63:63[#19775]
0002cd31: R2 := R3 + 0x220
0002cd39: R3 := pad:64[31:2[R4]]
0002cd41: #19777 := extend:64[31:0[R3]]
0002cd47: R3 := pad:32[mem[R2 + #19777]]
0002cd4f: mem := mem with [R0] <- low:8[31:0[R3]]
0002cd58: R3 := pad:32[mem[R1]]
0002cd60: R3 := pad:64[1:0[R3]] << 0x24
0002cd6c: #19781 := (~CF | ZF) <> 0
0002cd66: when #19781 goto %0000fd44
0003b314: goto %0002cd6f

0000fd44:
0000fd4a: #421 := extend:64[31:0[R3]]
0000fd50: R1 := pad:32[mem[R2 + #421]]
0000fd57: R2 := 0x3D
0000fd5f: mem := mem with [R0 + 1] <- low:8[31:0[R1]]
0000fd64: goto %0000fd62

0002cd6f:
0002cd76: R4 := pad:32[mem[R1 + 1]]
0002cd7f: R3 := 31:0[R3] | 31:0[R4] >> 4
0002cd87: #19785 := extend:64[31:0[R3]]
0002cd8d: R3 := pad:32[mem[R2 + #19785]]
0002cd95: mem := mem with [R0 + 1] <- low:8[31:0[R3]]
0002cd9e: R1 := pad:32[mem[R1 + 1]]
0002cda6: R1 := pad:64[3:0[R1]] << 0x22
0002cdae: #19788 := extend:64[31:0[R1]]
0002cdb4: R2 := pad:32[mem[R2 + #19788]]
0003b315: goto %0000fd62

0000fd62:
0000fd6a: R1 := 0x3D
0000fd71: R0 := R0 + 4
0000fd79: mem := mem with [R0 - 2] <- low:8[31:0[R2]]
0000fd81: mem := mem with [R0 - 1] <- low:8[31:0[R1]]
0003b316: goto %0000fd2d

0000fd2d:
0000fd3d: mem := mem with [R0] <- 0
0000fd42: call R30 with noreturn

0003b317: sub trimr(trimr_result)
0003b4a3: trimr_result :: out u32 = low:32[R0]

000147ec:
000147f3: #5916 := R31 - 0x20
000147f8: mem := mem with [#5916, el]:u64 <- R29
000147fd: mem := mem with [#5916 + 8, el]:u64 <- R30
00014801: R31 := #5916
00014808: R29 := R31
00014810: #5921 := R31 + 0x10
00014815: mem := mem with [#5921, el]:u64 <- R19
0001481a: mem := mem with [#5921 + 8, el]:u64 <- R20
00014822: R20 := R0
00014827: R30 := 0x56E4
00014829: call @strlen with return %0001482b

0001482b:
00014830: #5926 := 0xFFFFFFFFFFFFFFFF + extend:64[31:0[R0]]
00014834: NF := 63:63[#5926]
00014837: VF := 31:31[R0] & ~63:63[#5926]
0001483a: ZF := #5926 = 0
0001483d: CF := 31:31[R0] | 31:31[R0] & ~63:63[#5926] | ~63:63[#5926]
00014842: R19 := #5926
0001484e: #5928 := NF
00014848: when #5928 goto %00014846
0003b318: goto %000148d8

00014846:
00014855: R1 := extend:64[31:0[R19]]
0001485a: goto %00014858

000148d8:
000148db: R30 := 0x56F0
000148dd: call @__ctype_b_loc with return %000148df

000148df:
000148e4: R1 := extend:64[31:0[R19]]
000148ec: R0 := mem[R0, el]:u64
000148f1: goto %000148ef

000148ef:
000148f8: #5949 := R1
000148fe: R2 := pad:32[mem[R20 + #5949]]
00014906: R3 := low:32[extend:64[31:0[R1]] - 1]
0001490e: #5950 := R2 << 1
00014914: R2 := mem[R0 + #5950, el]:u16
00014920: #5951 := ~~13:13[R2]
0001491a: when #5951 goto %00014918
0003b319: goto %00014858

00014858:
00014861: R1 := R20 + R1
00014869: R0 := R20
00014871: mem := mem with [R1 + 1] <- 0
0001487a: R19 := mem[R31 + 0x10, el]:u64
0001487e: R20 := mem[R31 + 0x18, el]:u64
00014888: R29 := mem[R31, el]:u64
0001488c: R30 := mem[R31 + 8, el]:u64
0001488f: R31 := R31 + 0x20
00014894: call R30 with noreturn

00014918:
00014927: R1 := R1 - 1
00014932: #5952 := ~~31:31[R1]
0001492c: when #5952 goto %00014896
0003b31a: goto %000148ef

00014896:
0001489b: R1 := extend:64[31:0[R3]]
000148a3: R0 := R20
000148ab: R1 := R20 + R1
000148b3: mem := mem with [R1 + 1] <- 0
000148bc: R19 := mem[R31 + 0x10, el]:u64
000148c0: R20 := mem[R31 + 0x18, el]:u64
000148ca: R29 := mem[R31, el]:u64
000148ce: R30 := mem[R31 + 8, el]:u64
000148d1: R31 := R31 + 0x20
000148d6: call R30 with noreturn

0003b31b: sub tunnel(tunnel_result)
0003b4a4: tunnel_result :: out u32 = low:32[R0]

0001fae5:
0001faec: #13204 := R31 - 0x100
0001faf1: mem := mem with [#13204, el]:u64 <- R29
0001faf6: mem := mem with [#13204 + 8, el]:u64 <- R30
0001fafa: R31 := #13204
0001fb01: R29 := R31
0001fb09: #13209 := R31 + 0x50
0001fb0e: mem := mem with [#13209, el]:u64 <- R27
0001fb13: mem := mem with [#13209 + 8, el]:u64 <- R28
0001fb19: R27 := 0x27000
0001fb21: R2 := mem[R27 + 0xFB8, el]:u64
0001fb29: #13215 := R31 + 0x40
0001fb2e: mem := mem with [#13215, el]:u64 <- R25
0001fb33: mem := mem with [#13215 + 8, el]:u64 <- R26
0001fb3c: R25 := 31:0[R1]
0001fb44: R1 := mem[R2, el]:u64
0001fb4c: mem := mem with [R31 + 0xF8, el]:u64 <- R1
0001fb52: R1 := 0
0001fb5b: R26 := 31:0[R0]
0001fb61: R0 := 0x1000
0001fb69: #13227 := R31 + 0x10
0001fb6e: mem := mem with [#13227, el]:u64 <- R19
0001fb73: mem := mem with [#13227 + 8, el]:u64 <- R20
0001fb7b: #13232 := R31 + 0x20
0001fb80: mem := mem with [#13232, el]:u64 <- R21
0001fb85: mem := mem with [#13232 + 8, el]:u64 <- R22
0001fb8d: #13237 := R31 + 0x30
0001fb92: mem := mem with [#13237, el]:u64 <- R23
0001fb97: mem := mem with [#13237 + 8, el]:u64 <- R24
0001fb9c: R30 := 0xC430
0001fb9e: call @new with return %0001fba0

0001fba0:
0001fba4: R1 := 0x27000
0001fbac: R22 := R0
0001fbb4: R1 := mem[R1 + 0xF78, el]:u64
0001fbbd: R0 := mem[R1, el]:u32
0001fbc9: #13244 := ~31:0[R0] = 0
0001fbc3: when #13244 goto %0001fbc1
0003b31c: goto %0001fbf9

0001fbc1:
0001fbd2: R3 := 31:0[R25]
0001fbdb: R2 := 31:0[R26]
0001fbe1: R1 := 0x12000
0001fbe8: R0 := 1
0001fbef: R1 := R1 + 0x8E0
0001fbf4: R30 := 0xC5C8
0001fbf6: call @__printf_chk with return %0001fbf8

0001fbf8:
0001fbfb: goto %0001fbf9

0001fbf9:
0001fc02: #13254 := extend:64[~31:0[R26]] + 1
0001fc06: NF := 63:63[#13254]
0001fc09: VF := ~31:31[~31:0[R26]] & 63:63[#13254]
0001fc0c: ZF := #13254 = 0
0001fc0f: CF := 31:31[~31:0[R26]] & ~63:63[#13254]
0001fc14: R20 := #13254
0001fc1c: R0 := 31:0[R26] & 0x3F
0001fc24: R20 := 31:0[R20] & 0x3F
0001fc2c: R1 := 31:0[R25] & 0x3F
0001fc44: #13322 := NF
0001fc45: goto %0001fc3c

0001fc3c:
0001fc3e: when #13322 goto %0001fc35
0001fc3f: goto %0001fc39

0001fc39:
0001fc3a: R20 := -31:0[R20]
0001fc41: goto %0001fc3d

0001fc35:
0001fc36: R20 := 31:0[R0]
0001fc40: goto %0001fc3d

0001fc3d:
0001fc4e: #13326 := extend:64[~31:0[R25]] + 1
0001fc52: NF := 63:63[#13326]
0001fc55: VF := ~31:31[~31:0[R25]] & 63:63[#13326]
0001fc58: ZF := #13326 = 0
0001fc5b: CF := 31:31[~31:0[R25]] & ~63:63[#13326]
0001fc60: R0 := #13326
0001fc68: R0 := 31:0[R0] & 0x3F
0001fc6e: R23 := 1
0001fc86: #13350 := NF
0001fc87: goto %0001fc7e

0001fc7e:
0001fc80: when #13350 goto %0001fc77
0001fc81: goto %0001fc7b

0001fc7b:
0001fc7c: R0 := -31:0[R0]
0001fc83: goto %0001fc7f

0001fc77:
0001fc78: R0 := 31:0[R1]
0001fc82: goto %0001fc7f

0001fc7f:
0001fc8f: R21 := extend:64[31:0[R26]]
0001fc95: V0 := 0
0001fc9c: R24 := extend:64[31:0[R25]]
0001fca3: R19 := R31 + 0x70
0001fcab: R20 := R23 << R20 % 0x40
0001fcb3: R23 := R23 << R0 % 0x40
0003b31d: goto %0001fcb5

0001fcb5:
0001fcbb: R0 := R21
0001fcc3: #13363 := R31 + 0x70
0001fcc8: mem := mem with [#13363, el]:u128 <- V0
0001fccd: mem := mem with [#13363 + 0x10, el]:u128 <- V0
0001fcd5: #13368 := R31 + 0x90
0001fcda: mem := mem with [#13368, el]:u128 <- V0
0001fcdf: mem := mem with [#13368 + 0x10, el]:u128 <- V0
0001fce7: #13373 := R31 + 0xB0
0001fcec: mem := mem with [#13373, el]:u128 <- V0
0001fcf1: mem := mem with [#13373 + 0x10, el]:u128 <- V0
0001fcf9: #13378 := R31 + 0xD0
0001fcfe: mem := mem with [#13378, el]:u128 <- V0
0001fd03: mem := mem with [#13378 + 0x10, el]:u128 <- V0
0001fd08: R30 := 0xC498
0001fd0b: call @__fdelt_chk with return %0001fd0d

0001fd0d:
0001fd13: R1 := R0
0001fd1b: R0 := R24
0001fd23: #13387 := R1 << 3
0001fd28: R2 := mem[R19 + #13387, el]:u64
0001fd30: R2 := R2 | R20
0001fd39: mem := mem with [R19 + (R1 << 3), el]:u64 <- R2
0001fd3e: R30 := 0xC4B0
0001fd40: call @__fdelt_chk with return %0001fd42

0001fd42:
0001fd48: R5 := R0
0001fd50: R1 := R19
0001fd56: R4 := 0
0001fd5c: R3 := 0
0001fd62: R2 := 0
0001fd6a: #13398 := R5 << 3
0001fd6f: R6 := mem[R19 + #13398, el]:u64
0001fd76: R0 := 0x400
0001fd7e: R6 := R6 | R23
0001fd87: mem := mem with [R19 + (R5 << 3), el]:u64 <- R6
0001fd8c: R30 := 0xC4D8
0001fd8f: call @select with return %0001fd91

0001fd91:
0001fd96: #13402 := extend:64[31:0[R0]]
0001fd9a: NF := 63:63[#13402]
0001fd9d: VF := 31:31[R0] & ~63:63[#13402]
0001fda0: ZF := #13402 = 0
0001fda3: CF := 31:31[R0] | 31:31[R0] & ~63:63[#13402] | ~63:63[#13402]
0001fdac: V0 := 0
0001fdba: #13408 := (NF <> VF | ZF) <> 0
0001fdb4: when #13408 goto %0001fdb2
0003b31e: goto %0002b7e4

0001fdb2:
0001fdc5: #13410 := ZF
0001fdbf: when #13410 goto %0001fcb5
0003b31f: goto %0001fdc8

0001fdc8:
0001fdce: R0 := R22
0001fdd3: R30 := 0xC53C
0001fdd5: call @free with return %0001fdd7

0001fdd7:
0001fddc: R0 := 0
0001fde1: goto %0001fddf

0002b7e4:
0002b7ea: R0 := R21
0002b7ef: R30 := 0xC4EC
0002b7f1: call @__fdelt_chk with return %0002b7f3

0002b7f3:
0002b7f9: #19126 := R0 << 3
0002b7fe: R0 := mem[R19 + #19126, el]:u64
0002b806: #19130 := R0
0002b80a: #19131 := R20 & #19130
0002b80e: NF := 63:63[#19131]
0002b811: ZF := #19131 = 0
0002b814: CF := 0
0002b817: VF := 0
0002b824: #19133 := ~ZF <> 0
0002b81e: when #19133 goto %0002b715
0003b320: goto %0002b827

0002b715:
0002b71b: R1 := R22
0002b724: R0 := 31:0[R26]
0002b72a: R2 := 0x1000
0002b733: R28 := 31:0[R25]
0002b738: R30 := 0xC558
0002b73a: call @read with return %0002b73c

0002b73c:
0002b741: #19098 := extend:64[31:0[R0]]
0002b745: NF := 63:63[#19098]
0002b748: VF := 31:31[R0] & ~63:63[#19098]
0002b74b: ZF := #19098 = 0
0002b74e: CF := 31:31[R0] | 31:31[R0] & ~63:63[#19098] | ~63:63[#19098]
0002b75a: R1 := 31:0[R0]
0002b768: #19103 := (NF = VF & ~ZF) <> 0
0002b762: when #19103 goto %0002b760
0003b321: goto %0002b793

0002b827:
0002b82d: R1 := R22
0002b836: R0 := 31:0[R25]
0002b83c: R2 := 0x1000
0002b845: R28 := 31:0[R26]
0002b84a: R30 := 0xC50C
0002b84c: call @read with return %0002b84e

0002b84e:
0002b853: #19143 := extend:64[31:0[R0]]
0002b857: NF := 63:63[#19143]
0002b85a: VF := 31:31[R0] & ~63:63[#19143]
0002b85d: ZF := #19143 = 0
0002b860: CF := 31:31[R0] | 31:31[R0] & ~63:63[#19143] | ~63:63[#19143]
0002b86c: R1 := 31:0[R0]
0002b879: #19148 := (NF <> VF | ZF) <> 0
0002b873: when #19148 goto %0002b793
0003b322: goto %0002b760

0002b793:
0002b799: R0 := R22
0002b7a1: mem := mem with [R31 + 0x6C, el]:u32 <- 31:0[R1]
0002b7a6: R30 := 0xC570
0002b7a8: call @free with return %0002b7aa

0002b7aa:
0002b7b1: R1 := mem[R31 + 0x6C, el]:u32
0002b7b8: #19119 := extend:64[31:0[R1]]
0002b7bc: NF := 63:63[#19119]
0002b7bf: VF := 31:31[R1] & ~63:63[#19119]
0002b7c2: ZF := #19119 = 0
0002b7c5: CF := 31:31[R1] | 31:31[R1] & ~63:63[#19119] | ~63:63[#19119]
0002b7e0: #19121 := ~ZF <> 0
0002b7e1: goto %0002b7d8

0002b7d8:
0002b7da: when #19121 goto %0002b7d1
0002b7db: goto %0002b7d5

0002b7d5:
0002b7d6: R0 := 1
0002b7dd: goto %0002b7d9

0002b7d1:
0002b7d2: R0 := 0
0002b7dc: goto %0002b7d9

0002b7d9:
0003b323: goto %0001fddf

0001fddf:
0001fde8: R27 := mem[R27 + 0xFB8, el]:u64
0001fdf0: R1 := mem[R31 + 0xF8, el]:u64
0001fdf8: R2 := mem[R27, el]:u64
0001fe00: #13420 := 1 + ~R2 + R1
0001fe04: NF := 63:63[#13420]
0001fe07: VF := 63:63[R1] & 63:63[~R2] & ~63:63[#13420] | ~63:63[R1] &
          ~63:63[~R2] & 63:63[#13420]
0001fe0a: ZF := #13420 = 0
0001fe0d: CF := 63:63[R1] & 63:63[~R2] | 63:63[~R2] & ~63:63[#13420] |
          63:63[R1] & ~63:63[#13420]
0001fe11: R1 := #13420
0001fe17: R2 := 0
0001fe23: #13425 := ~ZF <> 0
0001fe1d: when #13425 goto %0001fe1b
0003b324: goto %0002b6be

0001fe1b:
0001fe28: R30 := 0xC5D0
0001fe2a: call @__stack_chk_fail with return %0003b325

0003b325:
0003b326: call @http_has_body with noreturn

0002b6be:
0002b6c5: R19 := mem[R31 + 0x10, el]:u64
0002b6c9: R20 := mem[R31 + 0x18, el]:u64
0002b6d2: R21 := mem[R31 + 0x20, el]:u64
0002b6d6: R22 := mem[R31 + 0x28, el]:u64
0002b6df: R23 := mem[R31 + 0x30, el]:u64
0002b6e3: R24 := mem[R31 + 0x38, el]:u64
0002b6ec: R25 := mem[R31 + 0x40, el]:u64
0002b6f0: R26 := mem[R31 + 0x48, el]:u64
0002b6f9: R27 := mem[R31 + 0x50, el]:u64
0002b6fd: R28 := mem[R31 + 0x58, el]:u64
0002b707: R29 := mem[R31, el]:u64
0002b70b: R30 := mem[R31 + 8, el]:u64
0002b70e: R31 := R31 + 0x100
0002b713: call R30 with noreturn

0002b760:
0002b76f: R2 := extend:64[31:0[R0]]
0002b777: R1 := R22
0002b780: R0 := 31:0[R28]
0002b785: R30 := 0xC528
0002b787: call @write with return %0002b789

0002b789:
0002b78d: V0 := 0
0002b791: goto %0001fcb5

0003b327: sub tunnel_add(tunnel_add_result)
0003b4a5: tunnel_add_result :: out u32 = low:32[R0]

00022eaa:
00022eb1: #14938 := R31 - 0x80
00022eb6: mem := mem with [#14938, el]:u64 <- R29
00022ebb: mem := mem with [#14938 + 8, el]:u64 <- R30
00022ebf: R31 := #14938
00022ec6: R29 := R31
00022ece: #14943 := R31 + 0x10
00022ed3: mem := mem with [#14943, el]:u64 <- R19
00022ed8: mem := mem with [#14943 + 8, el]:u64 <- R20
00022ede: R19 := 0x27000
00022ee7: R20 := 31:0[R2]
00022eef: R3 := mem[R19 + 0xFB8, el]:u64
00022ef7: #14952 := R31 + 0x20
00022efc: mem := mem with [#14952, el]:u64 <- R21
00022f01: mem := mem with [#14952 + 8, el]:u64 <- R22
00022f09: R21 := R0
00022f11: R0 := R1
00022f19: R1 := mem[R3, el]:u64
00022f21: mem := mem with [R31 + 0x78, el]:u64 <- R1
00022f27: R1 := 0
00022f2c: R30 := 0x1084C
00022f2e: call @strdup with return %00022f30

00022f30:
00022f36: R22 := R0
00022f3b: R30 := 0x10854
00022f3d: call @strlen with return %00022f3f

00022f3f:
00022f44: #14964 := extend:64[31:0[R0]]
00022f48: NF := 63:63[#14964]
00022f4b: VF := 31:31[R0] & ~63:63[#14964]
00022f4e: ZF := #14964 = 0
00022f51: CF := 31:31[R0] | 31:31[R0] & ~63:63[#14964] | ~63:63[#14964]
00022f62: #14966 := (NF <> VF | ZF) <> 0
00022f5c: when #14966 goto %00022f5a
0003b328: goto %00026f7b

00022f5a:
00022f69: #14967 := extend:64[31:0[R20]]
00022f6d: NF := 63:63[#14967]
00022f70: VF := 31:31[R20] & ~63:63[#14967]
00022f73: ZF := #14967 = 0
00022f76: CF := 31:31[R20] | 31:31[R20] & ~63:63[#14967] | ~63:63[#14967]
00022f80: R0 := 0x7F
00022f87: R0 := high:32[R0].extend:64[31:0[R0]] & 0xFFFFFFFF0000FFFF |
          0x1000000
00022f9f: #14970 := ZF
00022fa0: goto %00022f97

00022f97:
00022f99: when #14970 goto %00022f90
00022f9a: goto %00022f94

00022f94:
00022f95: R0 := 0
00022f9c: goto %00022f98

00022f90:
00022f91: R0 := 31:0[R0]
00022f9b: goto %00022f98

00022f98:
00022fa9: mem := mem with [R31 + 0x50, el]:u32 <- 31:0[R0]
00022fae: goto %00022fac

00026f7b:
00026f7f: R1 := 1
00026f87: R5 := R0
00026f8e: R6 := R22 - 1
00026f97: R4 := 31:0[R1]
00026f9e: R7 := R31 + 0x58
0003b329: goto %00026a7c

00026a7c:
00026a8c: #16986 := R1
00026a92: R3 := pad:32[mem[R6 + #16986]]
00026a99: #16987 := 0xFFFFFFFFFFFFFFC6 + extend:64[31:0[R3]]
00026a9d: NF := 63:63[#16987]
00026aa0: VF := 31:31[R3] & ~63:63[#16987]
00026aa3: ZF := #16987 = 0
00026aa6: CF := 31:31[R3] | 31:31[R3] & ~63:63[#16987] | ~63:63[#16987]
00026ab4: #16989 := ZF
00026aae: when #16989 goto %000269c1
0003b32a: goto %00026ab7

000269c1:
000269c7: R2 := extend:64[31:0[R4]] + 1
000269cf: R0 := R22 + R1
000269d6: #16966 := 0xFFFFFFFFFFFFFFFD + extend:64[31:0[R2]]
000269da: NF := 63:63[#16966]
000269dd: VF := 31:31[R2] & ~63:63[#16966]
000269e0: ZF := #16966 = 0
000269e3: CF := 31:31[R2] | 31:31[R2] & ~63:63[#16966] | ~63:63[#16966]
000269ef: mem := mem with [R7 + extend:64[31:0[R4] << 3], el]:u64 <- R0
00026a09: #16968 := (NF = VF & ~ZF) <> 0
00026a0a: goto %00026a01

00026a01:
00026a03: when #16968 goto %000269fa
00026a04: goto %000269fe

000269fe:
000269ff: R3 := 1
00026a06: goto %00026a02

000269fa:
000269fb: R3 := 0
00026a05: goto %00026a02

00026a02:
00026a13: #16972 := 1 + extend:64[~31:0[R1]] + extend:64[31:0[R5]]
00026a17: NF := 63:63[#16972]
00026a1a: VF := 31:31[~31:0[R1]] & 31:31[R5] & ~63:63[#16972] |
          ~31:31[~31:0[R1]] & ~31:31[R5] & 63:63[#16972]
00026a1d: ZF := #16972 = 0
00026a20: CF := 31:31[~31:0[R1]] & 31:31[R5] | 31:31[R5] & ~63:63[#16972] |
          31:31[~31:0[R1]] & ~63:63[#16972]
00026a2b: #16973 := R1
00026a30: mem := mem with [R6 + #16973] <- 0
00026a4a: #16975 := (NF <> VF | ZF) <> 0
00026a4b: goto %00026a42

00026a42:
00026a44: when #16975 goto %00026a3b
00026a45: goto %00026a3f

00026a3f:
00026a40: R0 := 1
00026a47: goto %00026a43

00026a3b:
00026a3c: R0 := 0
00026a46: goto %00026a43

00026a43:
00026a55: R4 := 31:0[R2]
00026a5d: #16982 := 31:0[R0]
00026a61: #16983 := 31:0[R3] & #16982
00026a65: NF := 31:31[#16983]
00026a68: ZF := #16983 = 0
00026a6b: CF := 0
00026a6e: VF := 0
00026a78: R1 := R1 + 1
00026a84: #16985 := ~ZF <> 0
00026a7e: when #16985 goto %00026a7c
0003b32b: goto %00026f58

00026f58:
00026f5d: #17129 := 0xFFFFFFFFFFFFFFFC + extend:64[31:0[R4]]
00026f61: NF := 63:63[#17129]
00026f64: VF := 31:31[R4] & ~63:63[#17129]
00026f67: ZF := #17129 = 0
00026f6a: CF := 31:31[R4] | 31:31[R4] & ~63:63[#17129] | ~63:63[#17129]
00026f78: #17131 := ~ZF <> 0
00026f72: when #17131 goto %00026eee
0003b32c: goto %00026b66

00026ab7:
00026abc: #16990 := 0xFFFFFFFFFFFFFFFD + extend:64[31:0[R4]]
00026ac0: NF := 63:63[#16990]
00026ac3: VF := 31:31[R4] & ~63:63[#16990]
00026ac6: ZF := #16990 = 0
00026ac9: CF := 31:31[R4] | 31:31[R4] & ~63:63[#16990] | ~63:63[#16990]
00026ae6: #16992 := (NF = VF & ~ZF) <> 0
00026ae7: goto %00026ade

00026ade:
00026ae0: when #16992 goto %00026ad7
00026ae1: goto %00026adb

00026adb:
00026adc: R3 := 1
00026ae3: goto %00026adf

00026ad7:
00026ad8: R3 := 0
00026ae2: goto %00026adf

00026adf:
00026af0: #16996 := 1 + extend:64[~31:0[R1]] + extend:64[31:0[R5]]
00026af4: NF := 63:63[#16996]
00026af7: VF := 31:31[~31:0[R1]] & 31:31[R5] & ~63:63[#16996] |
          ~31:31[~31:0[R1]] & ~31:31[R5] & 63:63[#16996]
00026afa: ZF := #16996 = 0
00026afd: CF := 31:31[~31:0[R1]] & 31:31[R5] | 31:31[R5] & ~63:63[#16996] |
          31:31[~31:0[R1]] & ~63:63[#16996]
00026b1a: #16998 := (NF <> VF | ZF) <> 0
00026b1b: goto %00026b12

00026b12:
00026b14: when #16998 goto %00026b0b
00026b15: goto %00026b0f

00026b0f:
00026b10: R2 := 1
00026b17: goto %00026b13

00026b0b:
00026b0c: R2 := 0
00026b16: goto %00026b13

00026b13:
00026b23: R1 := R1 + 1
00026b2b: #17002 := 31:0[R2]
00026b2f: #17003 := 31:0[R3] & #17002
00026b33: NF := 31:31[#17003]
00026b36: ZF := #17003 = 0
00026b39: CF := 0
00026b3c: VF := 0
00026b4a: #17005 := ~ZF <> 0
00026b44: when #17005 goto %00026a7c
0003b32d: goto %00026b4d

00026b4d:
00026b52: #17006 := 0xFFFFFFFFFFFFFFFC + extend:64[31:0[R4]]
00026b56: NF := 63:63[#17006]
00026b59: VF := 31:31[R4] & ~63:63[#17006]
00026b5c: ZF := #17006 = 0
00026b5f: CF := 31:31[R4] | 31:31[R4] & ~63:63[#17006] | ~63:63[#17006]
00026b6e: #17008 := ZF
00026b68: when #17008 goto %00026b66
0003b32e: goto %00026eee

00026b66:
00026b76: R1 := R22
00026b7d: R0 := R31 + 0x50
00026b85: #17015 := R31 + 0x30
00026b8a: mem := mem with [#17015, el]:u64 <- R23
00026b8f: mem := mem with [#17015 + 8, el]:u64 <- R24
00026b97: mem := mem with [R31 + 0x40, el]:u64 <- R25
00026b9c: R30 := 0x1094C
00026b9e: call @so_resolv with return %00026ba0

00026ba0:
00026baa: #17017 := 31:0[R0] = 0
00026ba4: when #17017 goto %00026ba2
0003b32f: goto %00026be5

00026ba2:
00026bb2: R3 := R22
00026bb8: R2 := 0x13000
00026bbf: R2 := R2 + 0xF10
00026bc6: R1 := 1
00026bcd: R0 := 3
00026bd2: R30 := 0x10A80
00026bd4: call @__syslog_chk with return %00026bd6

00026bd6:
00026bdb: R0 := 1
00026be0: R30 := 0x10A88
00026be2: call @myexit with return %00026be4

00026be4:
00026be7: goto %00026be5

00026be5:
00026bee: R20 := mem[R31 + 0x60, el]:u64
00026bf5: R2 := 0xA
00026bfb: R1 := 0
00026c02: R25 := 3
00026c0a: R0 := R20
00026c11: R24 := 2
00026c16: R30 := 0x1096C
00026c18: call @strtol with return %00026c1a

00026c1a:
00026c20: R23 := R0
00026c2c: #17028 := 31:0[R0] = 0
00026c26: when #17028 goto %00026c24
0003b330: goto %00026c67

00026eee:
00026ef3: #17122 := extend:64[31:0[R20]]
00026ef7: NF := 63:63[#17122]
00026efa: VF := 31:31[R20] & ~63:63[#17122]
00026efd: ZF := #17122 = 0
00026f00: CF := 31:31[R20] | 31:31[R20] & ~63:63[#17122] | ~63:63[#17122]
00026f0a: R0 := 0x7F
00026f11: R0 := high:32[R0].extend:64[31:0[R0]] & 0xFFFFFFFF0000FFFF |
          0x1000000
00026f29: #17125 := ~ZF <> 0
00026f2a: goto %00026f21

00026f21:
00026f23: when #17125 goto %00026f1a
00026f24: goto %00026f1e

00026f1e:
00026f1f: R0 := 31:0[R0]
00026f26: goto %00026f22

00026f1a:
00026f1b: R0 := 0
00026f25: goto %00026f22

00026f22:
00026f33: mem := mem with [R31 + 0x50, el]:u32 <- 31:0[R0]
00026f3a: #17126 := 0xFFFFFFFFFFFFFFFD + extend:64[31:0[R4]]
00026f3e: NF := 63:63[#17126]
00026f41: VF := 31:31[R4] & ~63:63[#17126]
00026f44: ZF := #17126 = 0
00026f47: CF := 31:31[R4] | 31:31[R4] & ~63:63[#17126] | ~63:63[#17126]
00026f55: #17128 := ZF
00026f4f: when #17128 goto %00026dee
0003b331: goto %00022fac

00026dee:
00026df4: R20 := R22
00026dfb: R2 := 0xA
00026e03: R0 := R20
00026e09: R1 := 0
00026e11: #17096 := R31 + 0x30
00026e16: mem := mem with [#17096, el]:u64 <- R23
00026e1b: mem := mem with [#17096 + 8, el]:u64 <- R24
00026e22: R24 := 1
00026e2a: mem := mem with [R31 + 0x40, el]:u64 <- R25
00026e2f: R30 := 0x10AC0
00026e31: call @strtol with return %00026e33

00026e33:
00026e38: R25 := 2
00026e40: R23 := R0
00026e4b: #17101 := ~31:0[R0] = 0
00026e45: when #17101 goto %00026c67
0003b332: goto %00026c24

00026c24:
00026c34: R3 := R20
00026c3a: R2 := 0x13000
00026c41: R2 := R2 + 0xF38
00026c48: R1 := 1
00026c4f: R0 := 3
00026c54: R30 := 0x10AE4
00026c56: call @__syslog_chk with return %00026c58

00026c58:
00026c5d: R0 := 1
00026c62: R30 := 0x10AEC
00026c64: call @myexit with return %00026c66

00026c66:
00026c69: goto %00026c67

00026c67:
00026c6f: R0 := R31 + 0x58
00026c77: #17033 := extend:64[31:0[R24] << 3]
00026c7c: R24 := mem[R0 + #17033, el]:u64
00026c84: #17035 := extend:64[31:0[R25] << 3]
00026c89: R25 := mem[R0 + #17035, el]:u64
00026c92: R0 := pad:32[mem[R24]]
00026c9e: #17036 := 31:0[R0] = 0
00026c98: when #17036 goto %00026c96
0003b333: goto %00026ed9

00026ed9:
00026ee0: R0 := pad:32[mem[R25]]
00026eeb: #17121 := 31:0[R0] = 0
00026ee5: when #17121 goto %00026c96
0003b334: goto %00026ce1

00026c96:
00026ca6: R4 := R25
00026cae: R3 := R24
00026cb4: R2 := 0x13000
00026cbb: R2 := R2 + 0xF58
00026cc2: R1 := 1
00026cc9: R0 := 3
00026cce: R30 := 0x10A5C
00026cd0: call @__syslog_chk with return %00026cd2

00026cd2:
00026cd7: R0 := 1
00026cdc: R30 := 0x10A64
00026cde: call @myexit with return %00026ce0

00026ce0:
00026ce3: goto %00026ce1

00026ce1:
00026cea: R0 := R24
00026cef: R30 := 0x10998
00026cf1: call @strlen with return %00026cf3

00026cf3:
00026cf9: R20 := R0
00026d01: R0 := R25
00026d06: R30 := 0x109A4
00026d08: call @strlen with return %00026d0a

00026d0a:
00026d10: R0 := R20 + R0
00026d17: R0 := R0 + 3
00026d1c: R30 := 0x109B0
00026d1e: call @new with return %00026d20

00026d20:
00026d26: R1 := R24
00026d2e: R20 := R0
00026d33: R30 := 0x109BC
00026d36: call @strcpy with return %00026d38

00026d38:
00026d3e: R0 := R20
00026d43: R30 := 0x109C4
00026d45: call @strlen with return %00026d47

00026d47:
00026d4d: R2 := R0
00026d54: R3 := 0x3A
00026d5b: R0 := R0 + 1
00026d63: R1 := R25
00026d6b: R0 := R20 + R0
00026d73: #17073 := R2
00026d78: mem := mem with [R20 + #17073] <- low:8[31:0[R3]]
00026d7d: R30 := 0x109E0
00026d7f: call @strcpy with return %00026d81

00026d81:
00026d88: R1 := mem[R31 + 0x50, el]:u32
00026d91: R0 := 31:0[R23]
00026d96: R30 := 0x109EC
00026d98: call @so_listen with return %00026d9a

00026d9a:
00026d9f: R1 := extend:64[31:0[R0]]
00026da6: #17079 := extend:64[31:0[R1]]
00026daa: NF := 63:63[#17079]
00026dad: VF := 31:31[R1] & ~63:63[#17079]
00026db0: ZF := #17079 = 0
00026db3: CF := 31:31[R1] | 31:31[R1] & ~63:63[#17079] | ~63:63[#17079]
00026dc4: #17081 := (NF <> VF | ZF) <> 0
00026dbe: when #17081 goto %00026dbc
0003b335: goto %00026e4e

00026dbc:
00026dcc: R0 := R20
00026dd1: R30 := 0x10A94
00026dd3: call @free with return %00026dd5

00026dd5:
00026ddc: R23 := mem[R31 + 0x30, el]:u64
00026de0: R24 := mem[R31 + 0x38, el]:u64
00026de8: R25 := mem[R31 + 0x40, el]:u64
00026dec: goto %00022fd8

00026e4e:
00026e54: R0 := mem[R21, el]:u64
00026e5c: R2 := R20
00026e61: R30 := 0x10A04
00026e63: call @plist_add with return %00026e65

00026e65:
00026e6b: R1 := R0
00026e74: R0 := mem[R31 + 0x50, el]:u32
00026e7c: mem := mem with [R21, el]:u64 <- R1
00026e81: R30 := 0x10A14
00026e83: call @inet_ntoa with return %00026e85

00026e85:
00026e8b: R3 := R0
00026e94: R4 := 31:0[R23]
00026e9c: R5 := R20
00026ea2: R2 := 0x13000
00026ea9: R1 := 1
00026eb0: R2 := R2 + 0xF78
00026eb7: R0 := 6
00026ebc: R30 := 0x10A34
00026ebe: call @__syslog_chk with return %00026ec0

00026ec0:
00026ec7: R23 := mem[R31 + 0x30, el]:u64
00026ecb: R24 := mem[R31 + 0x38, el]:u64
00026ed3: R25 := mem[R31 + 0x40, el]:u64
00026ed7: goto %00022fd8

00022fac:
00022fb3: R1 := 0x13000
00022fba: R1 := R1 + 0xF98
00022fc1: R0 := 1
00022fc6: R30 := 0x108CC
00022fc8: call @__printf_chk with return %00022fca

00022fca:
00022fcf: R0 := 1
00022fd4: R30 := 0x108D4
00022fd6: call @myexit with return %00022fd8

00022fd8:
00022fde: R19 := mem[R19 + 0xFB8, el]:u64
00022fe6: R0 := mem[R31 + 0x78, el]:u64
00022fee: R1 := mem[R19, el]:u64
00022ff6: #14977 := 1 + ~R1 + R0
00022ffa: NF := 63:63[#14977]
00022ffd: VF := 63:63[R0] & 63:63[~R1] & ~63:63[#14977] | ~63:63[R0] &
          ~63:63[~R1] & 63:63[#14977]
00023000: ZF := #14977 = 0
00023003: CF := 63:63[R0] & 63:63[~R1] | 63:63[~R1] & ~63:63[#14977] |
          63:63[R0] & ~63:63[#14977]
00023007: R0 := #14977
0002300d: R1 := 0
00023019: #14982 := ~ZF <> 0
00023013: when #14982 goto %00023011
0003b336: goto %0002698a

00023011:
00023021: #14986 := R31 + 0x30
00023026: mem := mem with [#14986, el]:u64 <- R23
0002302b: mem := mem with [#14986 + 8, el]:u64 <- R24
00023033: mem := mem with [R31 + 0x40, el]:u64 <- R25
00023038: R30 := 0x10B14
0002303a: call @__stack_chk_fail with return %0002303c

0002303c:
0003b337: call @noproxy_add with noreturn

0002698a:
00026990: R0 := R22
00026999: R19 := mem[R31 + 0x10, el]:u64
0002699d: R20 := mem[R31 + 0x18, el]:u64
000269a6: R21 := mem[R31 + 0x20, el]:u64
000269aa: R22 := mem[R31 + 0x28, el]:u64
000269b4: R29 := mem[R31, el]:u64
000269b8: R30 := mem[R31 + 8, el]:u64
000269bb: R31 := R31 + 0x80
000269bf: call @free with noreturn

0003b338: sub tunnel_thread(tunnel_thread_result)
0003b4a6: tunnel_thread_result :: out u32 = low:32[R0]

00023665:
0002366c: #15204 := R31 - 0x20
00023671: mem := mem with [#15204, el]:u64 <- R29
00023676: mem := mem with [#15204 + 8, el]:u64 <- R30
0002367a: R31 := #15204
00023681: R29 := R31
00023689: #15209 := R31 + 0x10
0002368e: mem := mem with [#15209, el]:u64 <- R19
00023693: mem := mem with [#15209 + 8, el]:u64 <- R20
0002369b: R19 := R0
000236a3: R0 := mem[R0 + 8, el]:u64
000236a8: R30 := 0x10F18
000236aa: call @strdup with return %000236ac

000236ac:
000236b2: R20 := R0
000236b9: R1 := 0x3A
000236be: R30 := 0x10F24
000236c0: call @strchr with return %000236c2

000236c2:
000236cc: #15218 := R0 = 0
000236c6: when #15218 goto %000236c4
0003b339: goto %000266a0

000266a0:
000266a6: mem := mem with [R0] <- 0
0003b33a: goto %000236c4

000236c4:
000236d4: R0 := R20
000236d9: R30 := 0x10F34
000236db: call @noproxy_match with return %000236dd

000236dd:
000236e7: #15222 := 31:0[R0] = 0
000236e1: when #15222 goto %000236df
0003b33b: goto %00024731

000236df:
000236ef: R0 := R19
000236f4: R30 := 0x10FA0
000236f6: call @forward_tunnel with return %000236f8

000236f8:
000236fb: goto %000236f9

00024731:
00024737: R0 := R19
0002473c: R30 := 0x10F40
0002473f: call @direct_tunnel with return %000236f9

000236f9:
00023702: R0 := R20
00023707: R30 := 0x10F48
00023709: call @free with return %0002370b

0002370b:
00023711: R0 := R19
00023717: R19 := 0x28000
0002371e: R19 := R19 + 0x4D8
00023723: R30 := 0x10F58
00023725: call @free with return %00023727

00023727:
0002372c: R20 := R19 + 0x28
00023734: R0 := R20
00023739: R30 := 0x10F64
0002373b: call @pthread_mutex_lock with return %0002373d

0002373d:
00023740: R30 := 0x10F68
00023742: call @pthread_self with return %00023744

00023744:
0002374a: R1 := R0
00023752: R0 := mem[R19 + 0x58, el]:u64
00023758: R2 := 0
0002375d: R30 := 0x10F78
0002375f: call @plist_add with return %00023761

00023761:
00023767: R1 := R0
0002376f: R0 := R20
00023777: mem := mem with [R19 + 0x58, el]:u64 <- R1
0002377c: R30 := 0x10F88
0002377e: call @pthread_mutex_unlock with return %00023780

00023780:
00023784: R0 := 0
0002378d: R19 := mem[R31 + 0x10, el]:u64
00023791: R20 := mem[R31 + 0x18, el]:u64
0002379b: R29 := mem[R31, el]:u64
0002379f: R30 := mem[R31 + 8, el]:u64
000237a2: R31 := R31 + 0x20
000237a7: call R30 with noreturn

0003b33c: sub umask(umask_result)
0003b4a7: umask_result :: out u32 = low:32[R0]

0002eac1:
00033106: R16 := 0x27000
0003310e: R17 := mem[R16 + 0xEF8, el]:u64
00033115: R16 := R16 + 0xEF8
0003311a: call R17 with noreturn

0003b33d: sub unicode(unicode_result)
0003b4a8: unicode_result :: out u32 = low:32[R0]

0000f76d:
0000f774: #197 := R31 - 0x40
0000f779: mem := mem with [#197, el]:u64 <- R29
0000f77e: mem := mem with [#197 + 8, el]:u64 <- R30
0000f782: R31 := #197
0000f789: R29 := R31
0000f791: #202 := R31 + 0x20
0000f796: mem := mem with [#202, el]:u64 <- R21
0000f79b: mem := mem with [#202 + 8, el]:u64 <- R22
0000f7a3: mem := mem with [R31 + 0x30, el]:u64 <- R23
0000f7ab: R23 := R0
0000f7b7: #207 := R1 = 0
0000f7b1: when #207 goto %0000f7af
0003b33e: goto %0002d15b

0000f7af:
0000f7bf: mem := mem with [R0, el]:u64 <- 0
0000f7c6: R21 := 0
0000f7cf: R0 := 31:0[R21]
0000f7d8: R21 := mem[R31 + 0x20, el]:u64
0000f7dc: R22 := mem[R31 + 0x28, el]:u64
0000f7e4: R23 := mem[R31 + 0x30, el]:u64
0000f7ee: R29 := mem[R31, el]:u64
0000f7f2: R30 := mem[R31 + 8, el]:u64
0000f7f5: R31 := R31 + 0x40
0000f7fa: call R30 with noreturn

0002d15b:
0002d161: R0 := R1
0002d167: R21 := 0x40
0002d16f: #19955 := R31 + 0x10
0002d174: mem := mem with [#19955, el]:u64 <- R19
0002d179: mem := mem with [#19955 + 8, el]:u64 <- R20
0002d181: R19 := R1
0002d186: R30 := 0x5954
0002d188: call @strlen with return %0002d18a

0002d18a:
0002d190: #19963 := 1 + ~R21 + R0
0002d194: NF := 63:63[#19963]
0002d197: VF := 63:63[R0] & 63:63[~R21] & ~63:63[#19963] | ~63:63[R0] &
          ~63:63[~R21] & 63:63[#19963]
0002d19a: ZF := #19963 = 0
0002d19d: CF := 63:63[R0] & 63:63[~R21] | 63:63[~R21] & ~63:63[#19963] |
          63:63[R0] & ~63:63[#19963]
0002d1a5: R1 := 1
0002d1bc: #19968 := (~CF | ZF) <> 0
0002d1bd: goto %0002d1b4

0002d1b4:
0002d1b6: when #19968 goto %0002d1ae
0002d1b7: goto %0002d1b1

0002d1b1:
0002d1b2: R21 := R21
0002d1b9: goto %0002d1b5

0002d1ae:
0002d1af: R21 := R0
0002d1b8: goto %0002d1b5

0002d1b5:
0002d1c6: R22 := R0
0002d1cf: R20 := 31:0[R21]
0002d1d7: R21 := 31:0[R21] << 0x21
0002d1de: R0 := extend:64[31:0[R21]]
0002d1e3: R30 := 0x5974
0002d1e5: call @calloc with return %0002d1e7

0002d1e7:
0002d1ed: R1 := R0
0002d1f9: #19981 := R22 = 0
0002d1f3: when #19981 goto %0002d1f1
0003b33f: goto %0002d244

0002d244:
0002d248: R2 := 0
0003b340: goto %0002d24a

0002d24a:
0002d24f: R3 := R2 << 1
0002d257: #19991 := R2
0002d25d: R4 := pad:32[mem[R19 + #19991]]
0002d264: R2 := R2 + 1
0002d26c: #19995 := 1 + extend:64[~31:0[R2]] + extend:64[31:0[R20]]
0002d270: NF := 63:63[#19995]
0002d273: VF := 31:31[~31:0[R2]] & 31:31[R20] & ~63:63[#19995] |
          ~31:31[~31:0[R2]] & ~31:31[R20] & 63:63[#19995]
0002d276: ZF := #19995 = 0
0002d279: CF := 31:31[~31:0[R2]] & 31:31[R20] | 31:31[R20] & ~63:63[#19995] |
          31:31[~31:0[R2]] & ~63:63[#19995]
0002d284: #19996 := R3
0002d289: mem := mem with [R1 + #19996] <- low:8[31:0[R4]]
0002d296: #19998 := (NF = VF & ~ZF) <> 0
0002d290: when #19998 goto %0002d24a
0003b341: goto %0002d1f1

0002d1f1:
0002d202: R19 := mem[R31 + 0x10, el]:u64
0002d206: R20 := mem[R31 + 0x18, el]:u64
0002d20e: mem := mem with [R23, el]:u64 <- R1
0002d217: R0 := 31:0[R21]
0002d220: R21 := mem[R31 + 0x20, el]:u64
0002d224: R22 := mem[R31 + 0x28, el]:u64
0002d22c: R23 := mem[R31 + 0x30, el]:u64
0002d236: R29 := mem[R31, el]:u64
0002d23a: R30 := mem[R31 + 8, el]:u64
0002d23d: R31 := R31 + 0x40
0002d242: call R30 with noreturn

0003b342: sub unlink(unlink_name, unlink_result)
0003b4a9: unlink_name :: in u64 = R0
0003b4aa: unlink_result :: out u32 = low:32[R0]

0002e013:
00033183: R16 := 0x27000
0003318b: R17 := mem[R16 + 0xF20, el]:u64
00033192: R16 := R16 + 0xF20
00033197: call R17 with noreturn

0003b343: sub uppercase(uppercase_result)
0003b4ab: uppercase_result :: out u32 = low:32[R0]

0000f68d:
0000f694: #162 := R31 - 0x20
0000f699: mem := mem with [#162, el]:u64 <- R29
0000f69e: mem := mem with [#162 + 8, el]:u64 <- R30
0000f6a2: R31 := #162
0000f6a9: R29 := R31
0000f6b1: #167 := R31 + 0x10
0000f6b6: mem := mem with [#167, el]:u64 <- R19
0000f6bb: mem := mem with [#167 + 8, el]:u64 <- R20
0000f6c3: R20 := R0
0000f6c9: R19 := 0
0000f6ce: goto %0000f6cc

0000f6cc:
0000f6d5: R0 := R20
0000f6da: R30 := 0x5910
0000f6dc: call @strlen with return %0000f6de

0000f6de:
0000f6e4: #178 := 1 + ~R19 + R0
0000f6e8: NF := 63:63[#178]
0000f6eb: VF := 63:63[R0] & 63:63[~R19] & ~63:63[#178] | ~63:63[R0] &
          ~63:63[~R19] & 63:63[#178]
0000f6ee: ZF := #178 = 0
0000f6f1: CF := 63:63[R0] & 63:63[~R19] | 63:63[~R19] & ~63:63[#178] |
          63:63[R0] & ~63:63[#178]
0000f700: #183 := (CF & ~ZF) <> 0
0000f6fa: when #183 goto %0000f6f8
0003b344: goto %0000f742

0000f742:
0000f748: R0 := R20
0000f751: R19 := mem[R31 + 0x10, el]:u64
0000f755: R20 := mem[R31 + 0x18, el]:u64
0000f75f: R29 := mem[R31, el]:u64
0000f763: R30 := mem[R31 + 8, el]:u64
0000f766: R31 := R31 + 0x20
0000f76b: call R30 with noreturn

0000f6f8:
0000f705: R30 := 0x58F4
0000f708: call @__ctype_toupper_loc with return %0000f70a

0000f70a:
0000f710: #184 := R19
0000f716: R1 := pad:32[mem[R20 + #184]]
0000f71e: R0 := mem[R0, el]:u64
0000f726: #187 := R1 << 2
0000f72c: R0 := mem[R0 + #187, el]:u32
0000f734: #188 := R19
0000f739: mem := mem with [R20 + #188] <- low:8[31:0[R0]]
0000f740: R19 := R19 + 1
0003b345: goto %0000f6cc

0003b346: sub urlencode(urlencode_result)
0003b4ac: urlencode_result :: out u32 = low:32[R0]

0000f7fc:
0000f803: #217 := R31 - 0x60
0000f808: mem := mem with [#217, el]:u64 <- R29
0000f80d: mem := mem with [#217 + 8, el]:u64 <- R30
0000f811: R31 := #217
0000f818: R29 := R31
0000f820: #222 := R31 + 0x10
0000f825: mem := mem with [#222, el]:u64 <- R19
0000f82a: mem := mem with [#222 + 8, el]:u64 <- R20
0000f830: R20 := 0
0000f838: #227 := R31 + 0x20
0000f83d: mem := mem with [#227, el]:u64 <- R21
0000f842: mem := mem with [#227 + 8, el]:u64 <- R22
0000f849: R21 := 0
0000f850: R22 := extend:64[31:0[R21]]
0000f858: #233 := R31 + 0x30
0000f85d: mem := mem with [#233, el]:u64 <- R23
0000f862: mem := mem with [#233 + 8, el]:u64 <- R24
0000f86a: R23 := R0
0000f872: #241 := R31 + 0x40
0000f877: mem := mem with [#241, el]:u64 <- R25
0000f87c: mem := mem with [#241 + 8, el]:u64 <- R26
0000f882: R26 := 0x11000
0000f889: R25 := 0x7E
0000f891: #246 := R31 + 0x50
0000f896: mem := mem with [#246, el]:u64 <- R27
0000f89b: mem := mem with [#246 + 8, el]:u64 <- R28
0000f8a0: R30 := 0x5A08
0000f8a2: call @strlen with return %0000f8a4

0000f8a4:
0000f8a8: R1 := 1
0000f8b0: R0 := R0 + (R0 << 1)
0000f8b7: R26 := R26 + 0x6E8
0000f8bf: R0 := R0 + R1
0000f8c4: R30 := 0x5A1C
0000f8c6: call @calloc with return %0000f8c8

0000f8c8:
0000f8ce: R24 := R0
0000f8d6: R0 := R23
0000f8db: R30 := 0x5A28
0000f8dd: call @strlen with return %0000f8df

0000f8df:
0000f8e5: #263 := 1 + ~R20 + R0
0000f8e9: NF := 63:63[#263]
0000f8ec: VF := 63:63[R0] & 63:63[~R20] & ~63:63[#263] | ~63:63[R0] &
          ~63:63[~R20] & 63:63[#263]
0000f8ef: ZF := #263 = 0
0000f8f2: CF := 63:63[R0] & 63:63[~R20] | 63:63[~R20] & ~63:63[#263] |
          63:63[R0] & ~63:63[#263]
0000f901: #268 := (~CF | ZF) <> 0
0000f8fb: when #268 goto %0000f8f9
0003b347: goto %0000f9d3

0000f9d3:
0000f9e0: R30 := 0x5A34
0000f9e3: call @__ctype_b_loc with return %0000f9e5

0000f9e5:
0000f9eb: #300 := R20
0000f9f1: R28 := pad:32[mem[R23 + #300]]
0000f9f9: R1 := mem[R0, el]:u64
0000fa01: R27 := R24 + R22
0000fa08: R0 := pad:64[7:0[R28]] << 1
0000fa10: R19 := R28
0000fa18: #310 := R0
0000fa1e: R0 := mem[R1 + #310, el]:u16
0000fa2a: #311 := ~~11:11[R0]
0000fa24: when #311 goto %0000fa22
0003b348: goto %0000fa48

0000fa48:
0000fa4b: R30 := 0x5A54
0000fa4d: call @__ctype_tolower_loc with return %0000fa4f

0000fa4f:
0000fa55: R0 := mem[R0, el]:u64
0000fa5d: R1 := low:32[extend:64[31:0[R28]] - 0x2D]
0000fa65: R1 := 31:0[R1] & 0xFF
0000fa6d: #337 := R28 << 2
0000fa73: R0 := mem[R0 + #337, el]:u32
0000fa7b: R0 := low:32[extend:64[31:0[R0]] - 0x61]
0000fa82: #338 := 0xFFFFFFFFFFFFFFE7 + extend:64[31:0[R0]]
0000fa86: NF := 63:63[#338]
0000fa89: VF := 31:31[R0] & ~63:63[#338]
0000fa8c: ZF := #338 = 0
0000fa8f: CF := 31:31[R0] | 31:31[R0] & ~63:63[#338] | ~63:63[#338]
0000fa9e: #340 := (~CF | ZF) <> 0
0000fa98: when #340 goto %0000fa22
0003b349: goto %0000faa1

0000faa1:
0000faa6: #341 := 0xFFFFFFFFFFFFFFA1 + extend:64[31:0[R28]]
0000faaa: NF := 63:63[#341]
0000faad: VF := 31:31[R28] & ~63:63[#341]
0000fab0: ZF := #341 = 0
0000fab3: CF := 31:31[R28] | 31:31[R28] & ~63:63[#341] | ~63:63[#341]
0000fadc: #343 := ~ZF <> 0
0000fadd: goto %0000fad4

0000fad4:
0000fad6: when #343 goto %0000fabc
0000fad7: goto %0000fac8

0000fac8:
0000fac9: NF := 0
0000facc: ZF := 0
0000facf: CF := 0
0000fad2: VF := 0
0000fad9: goto %0000fad5

0000fabc:
0000fabd: NF := 63:63[extend:64[31:0[R1]] - 1]
0000fac0: VF := 31:31[R1] & ~63:63[extend:64[31:0[R1]] - 1]
0000fac3: ZF := extend:64[31:0[R1]] - 1 = 0
0000fac6: CF := 31:31[R1] | ~63:63[extend:64[31:0[R1]] - 1] | 31:31[R1] &
          ~63:63[extend:64[31:0[R1]] - 1]
0000fad8: goto %0000fad5

0000fad5:
0000fb0b: #346 := (CF & ~ZF) <> 0
0000fb0c: goto %0000fb03

0000fb03:
0000fb05: when #346 goto %0000fae6
0000fb06: goto %0000faf7

0000faf7:
0000faf8: NF := 0
0000fafb: ZF := 1
0000fafe: CF := 0
0000fb01: VF := 0
0000fb08: goto %0000fb04

0000fae6:
0000fae7: #347 := ~31:0[R25]
0000faec: NF := 63:63[extend:64[31:0[R28]] + extend:64[#347] + 1]
0000faef: VF := 31:31[R28] & 31:31[#347] & ~63:63[extend:64[31:0[R28]] +
          extend:64[#347] + 1] | ~31:31[R28] & ~31:31[#347] &
          63:63[extend:64[31:0[R28]] + extend:64[#347] + 1]
0000faf2: ZF := extend:64[31:0[R28]] + extend:64[#347] + 1 = 0
0000faf5: CF := 31:31[R28] & 31:31[#347] | 31:31[#347] &
          ~63:63[extend:64[31:0[R28]] + extend:64[#347] + 1] | 31:31[R28] &
          ~63:63[extend:64[31:0[R28]] + extend:64[#347] + 1]
0000fb07: goto %0000fb04

0000fb04:
0000fb18: #349 := ~ZF <> 0
0000fb12: when #349 goto %0000f962
0003b34a: goto %0000fa22

0000f962:
0000f969: R4 := 31:0[R28]
0000f971: R0 := R27
0000f979: R3 := R26
0000f97f: R2 := 0xFFFFFFFFFFFFFFFF
0000f986: R1 := 1
0000f98e: R21 := extend:64[31:0[R21]] + 3
0000f995: R20 := R20 + 1
0000f99a: R30 := 0x5AE0
0000f99d: call @__sprintf_chk with return %0000f99f

0000f99f:
0000f9a2: goto %0000f9a0

0000fa22:
0000fa32: R21 := extend:64[31:0[R21]] + 1
0000fa39: R20 := R20 + 1
0000fa41: #312 := R22
0000fa46: mem := mem with [R24 + #312] <- low:8[31:0[R19]]
0003b34b: goto %0000f9a0

0000f9a0:
0000f9a9: R0 := R23
0000f9b0: R22 := extend:64[31:0[R21]]
0000f9b5: R30 := 0x5A98
0000f9b7: call @strlen with return %0000f9b9

0000f9b9:
0000f9bf: #294 := 1 + ~R20 + R0
0000f9c3: NF := 63:63[#294]
0000f9c6: VF := 63:63[R0] & 63:63[~R20] & ~63:63[#294] | ~63:63[R0] &
          ~63:63[~R20] & 63:63[#294]
0000f9c9: ZF := #294 = 0
0000f9cc: CF := 63:63[R0] & 63:63[~R20] | 63:63[~R20] & ~63:63[#294] |
          63:63[R0] & ~63:63[#294]
0000f9db: #299 := (CF & ~ZF) <> 0
0000f9d5: when #299 goto %0000f9d3
0003b34c: goto %0000f8f9

0000f8f9:
0000f909: R0 := R24
0000f912: R19 := mem[R31 + 0x10, el]:u64
0000f916: R20 := mem[R31 + 0x18, el]:u64
0000f91f: R21 := mem[R31 + 0x20, el]:u64
0000f923: R22 := mem[R31 + 0x28, el]:u64
0000f92c: R23 := mem[R31 + 0x30, el]:u64
0000f930: R24 := mem[R31 + 0x38, el]:u64
0000f939: R25 := mem[R31 + 0x40, el]:u64
0000f93d: R26 := mem[R31 + 0x48, el]:u64
0000f946: R27 := mem[R31 + 0x50, el]:u64
0000f94a: R28 := mem[R31 + 0x58, el]:u64
0000f954: R29 := mem[R31, el]:u64
0000f958: R30 := mem[R31 + 8, el]:u64
0000f95b: R31 := R31 + 0x60
0000f960: call R30 with noreturn

0003b34d: sub write(write_arg1, write_arg2, write_arg3, write_result)
0003b4ad: write_arg1 :: in u32 = low:32[R0]
0003b4ae: write_arg2 :: in out u64 = R1
0003b4af: write_arg3 :: in u64 = R2
0003b4b0: write_result :: out u64 = R0

0001f790:
00032db4: R16 := 0x27000
00032dbc: R17 := mem[R16 + 0xDE8, el]:u64
00032dc3: R16 := R16 + 0xDE8
00032dc8: call R17 with noreturn

0003b34e: sub www_authenticate(www_authenticate_result)
0003b4b1: www_authenticate_result :: out u32 = low:32[R0]

000221dc:
000221e3: #14517 := R31 - 0x80
000221e8: mem := mem with [#14517, el]:u64 <- R29
000221ed: mem := mem with [#14517 + 8, el]:u64 <- R30
000221f1: R31 := #14517
000221f8: R29 := R31
00022200: #14522 := R31 + 0x20
00022205: mem := mem with [#14522, el]:u64 <- R21
0002220a: mem := mem with [#14522 + 8, el]:u64 <- R22
00022210: R22 := 0x27000
00022219: R21 := 31:0[R0]
00022221: R4 := mem[R22 + 0xFB8, el]:u64
00022229: #14531 := R31 + 0x10
0002222e: mem := mem with [#14531, el]:u64 <- R19
00022233: mem := mem with [#14531 + 8, el]:u64 <- R20
0002223b: R0 := mem[R4, el]:u64
00022243: mem := mem with [R31 + 0x78, el]:u64 <- R0
00022249: R0 := 0
00022251: #14537 := R31 + 0x30
00022256: mem := mem with [#14537, el]:u64 <- R23
0002225b: mem := mem with [#14537 + 8, el]:u64 <- R24
00022261: R0 := 0x1000
00022269: R24 := R1
00022271: R23 := R2
00022279: #14548 := R31 + 0x40
0002227e: mem := mem with [#14548, el]:u64 <- R25
00022283: mem := mem with [#14548 + 8, el]:u64 <- R26
0002228b: R25 := R3
00022293: #14556 := R31 + 0x50
00022298: mem := mem with [#14556, el]:u64 <- R27
0002229d: mem := mem with [#14556 + 8, el]:u64 <- R28
000222a2: R30 := 0xE998
000222a4: call @new with return %000222a6

000222a6:
000222aa: R1 := 0x12000
000222b1: R2 := R1 + 0xB50
000222b9: R20 := R0
000222c0: R27 := R31 + 0x70
000222c8: R1 := R25
000222d0: R0 := R27
000222d9: R3 := mem[R2, el]:u32
000222e2: R2 := mem[R2 + 4, el]:u16
000222ea: mem := mem with [R20, el]:u32 <- 31:0[R3]
000222f2: mem := mem with [R20 + 4, el]:u16 <- low:16[31:0[R2]]
000222f7: R30 := 0xE9C4
000222f9: call @ntlm_request with return %000222fb

000222fb:
00022305: #14569 := ~31:0[R0] = 0
000222ff: when #14569 goto %000222fd
0003b34f: goto %0002233a

000222fd:
0002230d: R1 := mem[R31 + 0x70, el]:u64
00022314: R2 := extend:64[31:0[R0]]
0002231a: R3 := 0xFFB
00022321: R0 := R20 + 5
00022326: R30 := 0xEB30
00022328: call @to_base64 with return %0002232a

0002232a:
00022330: R0 := mem[R31 + 0x70, el]:u64
00022335: R30 := 0xEB38
00022337: call @free with return %00022339

00022339:
0002233c: goto %0002233a

0002233a:
00022343: R0 := R24
00022348: R30 := 0xE9D0
0002234a: call @dup_rr_data with return %0002234c

0002234c:
00022352: R19 := R0
00022359: R3 := 1
00022361: R0 := mem[R0 + 8, el]:u64
00022367: R2 := 0x12000
0002236d: R1 := 0x12000
00022374: R2 := R2 + 0xE30
0002237b: R1 := R1 + 0x958
00022381: R28 := 0x13000
00022386: R30 := 0xE9F4
00022388: call @hlist_mod with return %0002238a

0002238a:
00022390: mem := mem with [R19 + 8, el]:u64 <- R0
00022397: R1 := R28 + 0x410
0002239f: R2 := R20
000223a6: R3 := 1
000223ab: R30 := 0xEA08
000223ad: call @hlist_mod with return %000223af

000223af:
000223b5: mem := mem with [R19 + 8, el]:u64 <- R0
000223bb: R2 := 0x12000
000223c2: R2 := R2 + 0xB70
000223c9: R3 := 1
000223cf: R1 := 0x12000
000223d6: R1 := R1 + 0x918
000223db: R30 := 0xEA24
000223dd: call @hlist_mod with return %000223df

000223df:
000223e5: mem := mem with [R19 + 8, el]:u64 <- R0
000223eb: R1 := 0x12000
000223f2: R1 := R1 + 0x938
000223f7: R30 := 0xEA34
000223f9: call @hlist_del with return %000223fb

000223fb:
00022401: mem := mem with [R19 + 8, el]:u64 <- R0
00022409: R1 := R23
00022412: R0 := 31:0[R21]
00022417: R30 := 0xEA44
00022419: call @http_body_drop with return %0002241b

0002241b:
00022425: #14589 := 31:0[R0] = 0
0002241f: when #14589 goto %0002241d
0003b350: goto %00028b20

00028b20:
00028b24: R26 := 0x27000
00028b2c: R0 := mem[R26 + 0xF78, el]:u64
00028b35: R0 := mem[R0, el]:u32
00028b40: #17948 := ~31:0[R0] = 0
00028b3a: when #17948 goto %00028675
0003b351: goto %00028b43

00028675:
00028679: R1 := 0x13000
00028680: R0 := 1
00028687: R1 := R1 + 0x420
0002868c: R30 := 0xEB00
0002868e: call @__printf_chk with return %00028690

00028690:
00028696: R0 := mem[R19 + 8, el]:u64
0002869b: R30 := 0xEB08
0002869d: call @hlist_dump with return %0002869f

0002869f:
000286a5: R1 := R19
000286ae: R0 := 31:0[R21]
000286b3: R30 := 0xEB14
000286b5: call @headers_send with return %000286b7

000286b7:
000286c1: #17843 := ~31:0[R0] = 0
000286bb: when #17843 goto %000286b9
0003b352: goto %00028b1c

00028b1c:
00028b1e: goto %0002241d

00028b43:
00028b49: R1 := R19
00028b52: R0 := 31:0[R21]
00028b57: R30 := 0xEA64
00028b59: call @headers_send with return %00028b5b

00028b5b:
00028b64: #17955 := 31:0[R0] = 0
00028b5e: when #17955 goto %0002241d
0003b353: goto %000286b9

000286b9:
000286c9: R0 := mem[R26 + 0xF78, el]:u64
000286d2: R0 := mem[R0, el]:u32
000286de: #17846 := ~31:0[R0] = 0
000286d8: when #17846 goto %000286d6
0003b354: goto %000286fc

000286d6:
000286e4: R1 := 0x13000
000286eb: R0 := 1
000286f2: R1 := R1 + 0x440
000286f7: R30 := 0xEC84
000286f9: call @__printf_chk with return %000286fb

000286fb:
000286fe: goto %000286fc

000286fc:
00028705: R0 := R19
0002870a: R30 := 0xEA7C
0002870c: call @reset_rr_data with return %0002870e

0002870e:
00028714: R1 := R19
0002871d: R0 := 31:0[R21]
00028722: R30 := 0xEA88
00028724: call @headers_recv with return %00028726

00028726:
0002872f: #17856 := 31:0[R0] = 0
00028729: when #17856 goto %0002241d
0003b355: goto %00028732

00028732:
00028738: R0 := mem[R26 + 0xF78, el]:u64
00028741: R0 := mem[R0, el]:u32
0002874d: #17859 := ~31:0[R0] = 0
00028747: when #17859 goto %00028745
0003b356: goto %0002875f

00028745:
00028755: R0 := mem[R19 + 8, el]:u64
0002875a: R30 := 0xEC70
0002875c: call @hlist_dump with return %0002875e

0002875e:
00028761: goto %0002875f

0002875f:
00028769: R0 := mem[R19 + 0x10, el]:u32
00028770: #17862 := 0xFFFFFFFFFFFFFE6F + extend:64[31:0[R0]]
00028774: NF := 63:63[#17862]
00028777: VF := 31:31[R0] & ~63:63[#17862]
0002877a: ZF := #17862 = 0
0002877d: CF := 31:31[R0] | 31:31[R0] & ~63:63[#17862] | ~63:63[#17862]
0002878c: #17864 := ZF
00028786: when #17864 goto %00028784
0003b357: goto %0002241d

00028784:
00028794: R1 := R19
0002879d: R0 := 31:0[R21]
000287a2: R30 := 0xEB48
000287a4: call @http_body_drop with return %000287a6

000287a6:
000287af: #17871 := 31:0[R0] = 0
000287a9: when #17871 goto %0002241d
0003b358: goto %000287b2

000287b2:
000287b8: R0 := mem[R19 + 8, el]:u64
000287be: R1 := 0x13000
000287c5: R1 := R1 + 0x460
000287ca: R30 := 0xEB5C
000287cc: call @hlist_get with return %000287ce

000287ce:
000287d4: mem := mem with [R31 + 0x70, el]:u64 <- R0
000287e0: #17873 := R0 = 0
000287da: when #17873 goto %000287d8
0003b359: goto %0002898a

0002898a:
0002898d: R30 := 0xEB68
0002898f: call @strlen with return %00028991

00028991:
00028996: #17905 := 0xFFFFFFFFFFFFFFF2 + R0
0002899a: NF := 63:63[#17905]
0002899d: VF := 63:63[R0] & ~63:63[#17905]
000289a0: ZF := #17905 = 0
000289a3: CF := 63:63[R0] | ~63:63[#17905] | 63:63[R0] & ~63:63[#17905]
000289b1: #17907 := (~CF | ZF) <> 0
000289ab: when #17907 goto %000287d8
0003b35a: goto %000289b4

000287d8:
000287e7: R0 := 4
000287ed: R2 := 0x13000
000287f4: R1 := 1
000287fb: R2 := R2 + 0x4C8
00028800: R30 := 0xEC9C
00028802: call @__syslog_chk with return %00028804

00028804:
00028809: R21 := 0
0002880f: R0 := 0x13000
00028816: R0 := R0 + 0x4F0
0002881e: mem := mem with [R23 + 0x60, el]:u64 <- R0
00028822: goto %0002242e

000289b4:
000289b9: R0 := R0 + 6
000289be: R30 := 0xEB78
000289c0: call @new with return %000289c2

000289c2:
000289c8: R1 := mem[R31 + 0x70, el]:u64
000289d0: mem := mem with [R31 + 0x68, el]:u64 <- R0
000289d7: R1 := R1 + 5
000289dc: R30 := 0xEB88
000289de: call @from_base64 with return %000289e0

000289e0:
000289e7: R2 := 31:0[R0]
000289ee: #17912 := 0xFFFFFFFFFFFFFFE8 + extend:64[31:0[R0]]
000289f2: NF := 63:63[#17912]
000289f5: VF := 31:31[R0] & ~63:63[#17912]
000289f8: ZF := #17912 = 0
000289fb: CF := 31:31[R0] | 31:31[R0] & ~63:63[#17912] | ~63:63[#17912]
00028a0b: #17914 := (NF <> VF | ZF) <> 0
00028a05: when #17914 goto %00028824
0003b35b: goto %00028a0e

00028824:
00028828: R2 := 0x13000
0002882f: R2 := R2 + 0x4A0
0003b35c: goto %00028831

00028a0e:
00028a14: R3 := R25
00028a1c: R0 := R27
00028a24: R25 := mem[R31 + 0x68, el]:u64
00028a2c: R1 := R25
00028a31: R30 := 0xEBA8
00028a33: call @ntlm_response with return %00028a35

00028a35:
00028a3a: #17925 := extend:64[31:0[R0]]
00028a3e: NF := 63:63[#17925]
00028a41: VF := 31:31[R0] & ~63:63[#17925]
00028a44: ZF := #17925 = 0
00028a47: CF := 31:31[R0] | 31:31[R0] & ~63:63[#17925] | ~63:63[#17925]
00028a57: #17927 := (NF <> VF | ZF) <> 0
00028a51: when #17927 goto %00028875
0003b35d: goto %00028a5a

00028875:
00028879: R2 := 0x12000
00028880: R2 := R2 + 0xBD8
00028884: goto %00028831

00028831:
00028836: R1 := 1
0002883d: R0 := 3
00028842: R30 := 0xECC4
00028844: call @__syslog_chk with return %00028846

00028846:
0002884b: R21 := 0
00028851: R0 := 0x13000
00028858: R0 := R0 + 0x478
00028860: mem := mem with [R23 + 0x60, el]:u64 <- R0
00028868: R0 := mem[R31 + 0x68, el]:u64
0002886d: R30 := 0xECDC
0002886f: call @free with return %00028871

00028871:
00028873: goto %0002242e

00028a5a:
00028a5e: R1 := 0x12000
00028a65: R1 := R1 + 0xB50
00028a6c: R2 := extend:64[31:0[R0]]
00028a72: R3 := 0xFFB
00028a79: R0 := R20 + 5
00028a82: R4 := mem[R1, el]:u32
00028a8b: R1 := mem[R1 + 4, el]:u16
00028a93: mem := mem with [R20, el]:u32 <- 31:0[R4]
00028a9b: mem := mem with [R20 + 4, el]:u16 <- low:16[31:0[R1]]
00028aa3: R1 := mem[R31 + 0x70, el]:u64
00028aa8: R30 := 0xEBDC
00028aaa: call @to_base64 with return %00028aac

00028aac:
00028ab2: R0 := mem[R24 + 8, el]:u64
00028aba: R2 := R20
00028ac1: R3 := 1
00028ac8: R1 := R28 + 0x410
00028acd: R30 := 0xEBF0
00028acf: call @hlist_mod with return %00028ad1

00028ad1:
00028ad7: R1 := R0
00028adf: R0 := mem[R31 + 0x70, el]:u64
00028ae7: mem := mem with [R24 + 8, el]:u64 <- R1
00028aec: R30 := 0xEC00
00028aee: call @free with return %00028af0

00028af0:
00028af6: R0 := R25
00028afb: R30 := 0xEC08
00028afd: call @free with return %00028aff

00028aff:
00028b05: R0 := mem[R26 + 0xF78, el]:u64
00028b0e: R0 := mem[R0, el]:u32
00028b19: #17945 := ~31:0[R0] = 0
00028b13: when #17945 goto %00028886
0003b35e: goto %000288a2

00028886:
0002888a: R1 := 0x13000
00028891: R0 := 1
00028898: R1 := R1 + 0x518
0002889d: R30 := 0xECFC
0002889f: call @__printf_chk with return %000288a1

000288a1:
000288a4: goto %000288a2

000288a2:
000288ab: R1 := R24
000288b4: R0 := 31:0[R21]
000288b9: R30 := 0xEC20
000288bb: call @headers_send with return %000288bd

000288bd:
000288c6: #17881 := 31:0[R0] = 0
000288c0: when #17881 goto %0002241d
0003b35f: goto %000288c9

000288c9:
000288cf: R0 := mem[R26 + 0xF78, el]:u64
000288d8: R0 := mem[R0, el]:u32
000288e4: #17884 := ~31:0[R0] = 0
000288de: when #17884 goto %000288dc
0003b360: goto %00028902

000288dc:
000288ea: R1 := 0x13000
000288f1: R0 := 1
000288f8: R1 := R1 + 0x530
000288fd: R30 := 0xED10
000288ff: call @__printf_chk with return %00028901

00028901:
00028904: goto %00028902

00028902:
0002890b: R0 := R19
00028910: R30 := 0xEC38
00028912: call @reset_rr_data with return %00028914

00028914:
0002891a: R1 := R19
00028923: R0 := 31:0[R21]
00028928: R30 := 0xEC44
0002892a: call @headers_recv with return %0002892c

0002892c:
00028935: #17894 := 31:0[R0] = 0
0002892f: when #17894 goto %0002241d
0003b361: goto %00028938

00028938:
0002893e: R26 := mem[R26 + 0xF78, el]:u64
00028947: R0 := mem[R26, el]:u32
00028953: #17897 := ~31:0[R0] = 0
0002894d: when #17897 goto %0002894b
0003b362: goto %00028965

0002894b:
0002895b: R0 := mem[R19 + 8, el]:u64
00028960: R30 := 0xED1C
00028962: call @hlist_dump with return %00028964

00028964:
00028967: goto %00028965

00028965:
0002896e: R0 := R23
00028976: R1 := R19
0002897d: R21 := 1
00028982: R30 := 0xEC64
00028984: call @copy_rr_data with return %00028986

00028986:
00028988: goto %0002242e

0002241d:
0002242c: R21 := 0
0003b363: goto %0002242e

0002242e:
00022434: R0 := R19
00022439: R30 := 0xEAB0
0002243b: call @free_rr_data with return %0002243d

0002243d:
00022443: R0 := R20
00022448: R30 := 0xEAB8
0002244a: call @free with return %0002244c

0002244c:
00022452: R22 := mem[R22 + 0xFB8, el]:u64
0002245a: R0 := mem[R31 + 0x78, el]:u64
00022462: R1 := mem[R22, el]:u64
0002246a: #14602 := 1 + ~R1 + R0
0002246e: NF := 63:63[#14602]
00022471: VF := 63:63[R0] & 63:63[~R1] & ~63:63[#14602] | ~63:63[R0] &
          ~63:63[~R1] & 63:63[#14602]
00022474: ZF := #14602 = 0
00022477: CF := 63:63[R0] & 63:63[~R1] | 63:63[~R1] & ~63:63[#14602] |
          63:63[R0] & ~63:63[#14602]
0002247b: R0 := #14602
00022481: R1 := 0
0002248d: #14607 := ~ZF <> 0
00022487: when #14607 goto %00022485
0003b364: goto %00028615

00022485:
00022492: R30 := 0xED24
00022494: call @__stack_chk_fail with return %00022496

00022496:
0003b365: call @direct_request with noreturn

00028615:
0002861c: R0 := 31:0[R21]
00028625: R19 := mem[R31 + 0x10, el]:u64
00028629: R20 := mem[R31 + 0x18, el]:u64
00028632: R21 := mem[R31 + 0x20, el]:u64
00028636: R22 := mem[R31 + 0x28, el]:u64
0002863f: R23 := mem[R31 + 0x30, el]:u64
00028643: R24 := mem[R31 + 0x38, el]:u64
0002864c: R25 := mem[R31 + 0x40, el]:u64
00028650: R26 := mem[R31 + 0x48, el]:u64
00028659: R27 := mem[R31 + 0x50, el]:u64
0002865d: R28 := mem[R31 + 0x58, el]:u64
00028667: R29 := mem[R31, el]:u64
0002866b: R30 := mem[R31 + 8, el]:u64
0002866e: R31 := R31 + 0x80
00028673: call R30 with noreturn

00020163: sub intrinsic:software-breakpoint()

