00000827: program
0000080c: sub __cxa_finalize(__cxa_finalize_result)
00000828: __cxa_finalize_result :: out u32 = low:32[R0]

0000057e:
0000065f: R16 := 0x11000
00000666: R17 := mem[R16, el]:u64
0000066c: R16 := R16
00000671: call R17 with noreturn

0000080d: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
00000829: __do_global_dtors_aux_result :: out u32 = low:32[R0]

0000033c:
00000340: #5 := R31 - 0x20
00000346: mem := mem with [#5, el]:u64 <- R29
0000034c: mem := mem with [#5 + 8, el]:u64 <- R30
00000350: R31 := #5
00000356: R29 := R31
0000035e: mem := mem with [R31 + 0x10, el]:u64 <- R19
00000363: R19 := 0x11000
0000036a: R0 := pad:64[mem[R19 + 0x30]]
00000371: when 31:0[R0] <> 0 goto %0000036f
0000080e: goto %00000547

00000547:
0000054a: R0 := 0x10000
00000551: R0 := mem[R0 + 0xFC0, el]:u64
00000557: when R0 = 0 goto %00000555
0000080f: goto %0000056e

0000056e:
00000571: R0 := 0x11000
00000578: R0 := mem[R0 + 0x28, el]:u64
0000057d: R30 := 0x700
00000580: call @__cxa_finalize with return %00000555

00000555:
0000055d: R30 := 0x704
0000055f: call @deregister_tm_clones with return %00000561

00000561:
00000564: R0 := 1
0000056c: mem := mem with [R19 + 0x30] <- 7:0[R0]
00000810: goto %0000036f

0000036f:
00000379: R19 := mem[R31 + 0x10, el]:u64
00000380: R29 := mem[R31, el]:u64
00000385: R30 := mem[R31 + 8, el]:u64
00000389: R31 := R31 + 0x20
0000038e: call R30 with noreturn

00000811: sub __libc_csu_fini(__libc_csu_fini_result)
0000082a: __libc_csu_fini_result :: out u32 = low:32[R0]

000004e7:
000004ea: call R30 with noreturn

00000812: sub __libc_csu_init(__libc_csu_init_result)
0000082b: __libc_csu_init_result :: out u32 = low:32[R0]

000003f4:
000003f8: #6 := R31 - 0x40
000003fe: mem := mem with [#6, el]:u64 <- R29
00000404: mem := mem with [#6 + 8, el]:u64 <- R30
00000408: R31 := #6
0000040e: R29 := R31
00000414: #7 := R31 + 0x10
0000041a: mem := mem with [#7, el]:u64 <- R19
00000420: mem := mem with [#7 + 8, el]:u64 <- R20
00000425: R20 := 0x10000
0000042b: R20 := R20 + 0xDC0
00000431: #8 := R31 + 0x20
00000437: mem := mem with [#8, el]:u64 <- R21
0000043d: mem := mem with [#8 + 8, el]:u64 <- R22
00000442: R21 := 0x10000
00000448: R21 := R21 + 0xDB8
0000044f: R20 := R20 + ~R21 + 1
00000455: R22 := pad:64[31:0[R0]]
0000045b: #9 := R31 + 0x30
00000461: mem := mem with [#9, el]:u64 <- R23
00000467: mem := mem with [#9 + 8, el]:u64 <- R24
0000046d: R23 := R1
00000473: R24 := R2
00000478: R30 := 0x790
0000047b: call @_init with return %0000047d

0000047d:
00000481: #10 := ~(R20 ~>> 3)
00000485: #11 := ~(R20 ~>> 3) + 1
0000048a: VF := extend:65[#11] <> extend:65[#10] + 1
0000048f: CF := pad:65[#11] <> pad:65[#10] + 1
00000493: ZF := #11 = 0
00000497: NF := 63:63[#11]
0000049d: when ZF goto %0000049b
00000813: goto %000004ec

000004ec:
000004f2: R20 :=

          >> 3 | R20 << 0x3D]
000004f7: R19 := 0
00000814: goto %000004f9

000004f9:
000004ff: R3 := mem[R21 + (60:0[R19].0), el]:u64
00000505: R2 := R24
0000050b: R19 := R19 + 1
00000511: R1 := R23
00000517: R0 := pad:64[31:0[R22]]
0000051c: R30 := 0x7B8
0000051f: call R3 with return %00000521

00000521:
00000525: #15 := ~R19
0000052a: #16 := R20 + ~R19 + 1
00000530: VF := extend:65[#16] <> extend:65[R20] + extend:65[#15] + 1
00000536: CF := pad:65[#16] <> pad:65[R20] + pad:65[#15] + 1
0000053a: ZF := #16 = 0
0000053e: NF := 63:63[#16]
00000543: when ZF <> 1 goto %000004f9
00000815: goto %0000049b

0000049b:
000004a4: #12 := R31 + 0x10
000004a9: R19 := mem[#12, el]:u64
000004ae: R20 := mem[#12 + 8, el]:u64
000004b4: #13 := R31 + 0x20
000004b9: R21 := mem[#13, el]:u64
000004be: R22 := mem[#13 + 8, el]:u64
000004c4: #14 := R31 + 0x30
000004c9: R23 := mem[#14, el]:u64
000004ce: R24 := mem[#14 + 8, el]:u64
000004d5: R29 := mem[R31, el]:u64
000004da: R30 := mem[R31 + 8, el]:u64
000004de: R31 := R31 + 0x40
000004e3: call R30 with noreturn

00000816: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
0000082c: __libc_start_main_main :: in u64 = R0
0000082d: __libc_start_main_arg2 :: in u32 = low:32[R1]
0000082e: __libc_start_main_arg3 :: in out u64 = R2
0000082f: __libc_start_main_auxv :: in out u64 = R3
00000830: __libc_start_main_result :: out u32 = low:32[R0]

0000027a:
00000675: R16 := 0x11000
0000067c: R17 := mem[R16 + 8, el]:u64
00000682: R16 := R16 + 8
00000687: call R17 with noreturn

00000817: sub _fini(_fini_result)
00000831: _fini_result :: out u32 = low:32[R0]

00000030:
00000034: #0 := R31 - 0x10
0000003a: mem := mem with [#0, el]:u64 <- R29
00000040: mem := mem with [#0 + 8, el]:u64 <- R30
00000044: R31 := #0
0000004a: R29 := R31
00000051: R29 := mem[R31, el]:u64
00000056: R30 := mem[R31 + 8, el]:u64
0000005a: R31 := R31 + 0x10
0000005f: call R30 with noreturn

00000818: sub _init(_init_result)
00000832: _init_result :: out u32 = low:32[R0]

00000479:
00000747: #18 := R31 - 0x10
0000074d: mem := mem with [#18, el]:u64 <- R29
00000753: mem := mem with [#18 + 8, el]:u64 <- R30
00000757: R31 := #18
0000075d: R29 := R31
00000762: R30 := 0x5A4
00000764: call @call_weak_fn with return %00000766

00000766:
0000076b: R29 := mem[R31, el]:u64
00000770: R30 := mem[R31 + 8, el]:u64
00000774: R31 := R31 + 0x10
00000779: call R30 with noreturn

00000819: sub _start(_start_result)
00000833: _start_result :: out u32 = low:32[R0]

0000022f:
00000232: R29 := 0
00000237: R30 := 0
0000023d: R5 := R0
00000244: R1 := mem[R31, el]:u64
0000024a: R2 := R31 + 8
00000250: R6 := R31
00000255: R0 := 0x10000
0000025c: R0 := mem[R0 + 0xFD8, el]:u64
00000261: R3 := 0x10000
00000268: R3 := mem[R3 + 0xFD0, el]:u64
0000026d: R4 := 0x10000
00000274: R4 := mem[R4 + 0xFB0, el]:u64
00000279: R30 := 0x644
0000027c: call @__libc_start_main with return %0000027e

0000027e:
00000281: R30 := 0x648
00000284: call @abort with return %0000081a

0000081a:
0000081b: call @call_weak_fn with noreturn

0000081c: sub abort()


00000282:
000006a1: R16 := 0x11000
000006a8: R17 := mem[R16 + 0x18, el]:u64
000006ae: R16 := R16 + 0x18
000006b3: call R17 with noreturn

0000081d: sub call_weak_fn(call_weak_fn_result)
00000834: call_weak_fn_result :: out u32 = low:32[R0]

00000286:
00000289: R0 := 0x10000
00000290: R0 := mem[R0 + 0xFC8, el]:u64
00000296: when R0 = 0 goto %00000294
0000081e: goto %000005be

00000294:
0000029c: call R30 with noreturn

000005be:
000005c1: goto @__gmon_start__

000005bf:
0000068b: R16 := 0x11000
00000692: R17 := mem[R16 + 0x10, el]:u64
00000698: R16 := R16 + 0x10
0000069d: call R17 with noreturn

0000081f: sub deregister_tm_clones(deregister_tm_clones_result)
00000835: deregister_tm_clones_result :: out u32 = low:32[R0]

000002a0:
000002a3: R0 := 0x11000
000002a9: R0 := R0 + 0x30
000002ae: R1 := 0x11000
000002b4: R1 := R1 + 0x30
000002ba: #1 := ~R0
000002bf: #2 := R1 + ~R0 + 1
000002c5: VF := extend:65[#2] <> extend:65[R1] + extend:65[#1] + 1
000002cb: CF := pad:65[#2] <> pad:65[R1] + pad:65[#1] + 1
000002cf: ZF := #2 = 0
000002d3: NF := 63:63[#2]
000002d9: when ZF goto %000002d7
00000820: goto %000005a0

000005a0:
000005a3: R1 := 0x10000
000005aa: R1 := mem[R1 + 0xFB8, el]:u64
000005af: when R1 = 0 goto %000002d7
00000821: goto %000005b3

000002d7:
000002df: call R30 with noreturn

000005b3:
000005b7: R16 := R1
000005bc: call R16 with noreturn

00000822: sub frame_dummy(frame_dummy_result)
00000836: frame_dummy_result :: out u32 = low:32[R0]

00000390:
00000392: call @register_tm_clones with noreturn

00000823: sub main(main_argc, main_argv, main_result)
00000837: main_argc :: in u32 = low:32[R0]
00000838: main_argv :: in out u64 = R1
00000839: main_result :: out u32 = low:32[R0]

00000394:
00000397: R9 := 0x11000
0000039c: R0 := 0
000003a3: mem := mem with [R9 + 0x34, el]:u32 <- 0
000003aa: R8 := pad:64[mem[R9 + 0x34, el]:u32]
000003b0: R8 := pad:64[31:0[R8] + 1]
000003b8: mem := mem with [R9 + 0x34, el]:u32 <- 31:0[R8]
000003bd: R8 := 0x11000
000003c4: R10 := pad:64[mem[R8 + 0x38, el]:u32]
000003c9: R8 := 0x11000
000003d1: mem := mem with [R8 + 0x3C, el]:u32 <- 31:0[R10]
000003d8: mem := mem with [R8 + 0x3C, el]:u32 <- 0
000003df: R8 := pad:64[mem[R9 + 0x34, el]:u32]
000003e5: R8 := pad:64[31:0[R8] + 1]
000003ed: mem := mem with [R9 + 0x34, el]:u32 <- 31:0[R8]
000003f2: call R30 with noreturn

00000824: sub register_tm_clones(register_tm_clones_result)
0000083a: register_tm_clones_result :: out u32 = low:32[R0]

000002e1:
000002e4: R0 := 0x11000
000002ea: R0 := R0 + 0x30
000002ef: R1 := 0x11000
000002f5: R1 := R1 + 0x30
000002fc: R1 := R1 + ~R0 + 1
00000303: R2 := 0.0:0[R1 >> 0x3F | R1 << 1]
0000030a: R1 := R2 + (R1 ~>> 3)
00000310: #3 := ~(R1 ~>> 1)
00000314: #4 := ~(R1 ~>> 1) + 1
00000319: VF := extend:65[#4] <> extend:65[#3] + 1
0000031e: CF := pad:65[#4] <> pad:65[#3] + 1
00000322: ZF := #4 = 0
00000326: NF := 63:63[#4]
0000032e: R1 :=

          >> 1 | R1 << 0x3F]
00000334: when ZF goto %00000332
00000825: goto %00000582

00000582:
00000585: R2 := 0x10000
0000058c: R2 := mem[R2 + 0xFE0, el]:u64
00000591: when R2 = 0 goto %00000332
00000826: goto %00000595

00000332:
0000033a: call R30 with noreturn

00000595:
00000599: R16 := R2
0000059e: call R16 with noreturn
