00000835: program
00000818: sub __cxa_finalize(__cxa_finalize_result)
00000836: __cxa_finalize_result :: out u32 = low:32[R0]

0000058a:
0000066b: R16 := 0x10000
00000672: R17 := mem[R16 + 0xFA0, el]:u64
00000678: R16 := R16 + 0xFA0
0000067d: call R17 with noreturn

00000819: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
00000837: __do_global_dtors_aux_result :: out u32 = low:32[R0]

0000033c:
00000340: #5 := R31 - 0x20
00000346: mem := mem with [#5, el]:u64 <- R29
0000034c: mem := mem with [#5 + 8, el]:u64 <- R30
00000350: R31 := #5
00000356: R29 := R31
0000035e: mem := mem with [R31 + 0x10, el]:u64 <- R19
00000363: R19 := 0x11000
0000036a: R0 := pad:64[mem[R19 + 0x10]]
00000371: when 31:0[R0] <> 0 goto %0000036f
0000081a: goto %00000553

00000553:
00000556: R0 := 0x10000
0000055d: R0 := mem[R0 + 0xFD8, el]:u64
00000563: when R0 = 0 goto %00000561
0000081b: goto %0000057a

0000057a:
0000057d: R0 := 0x11000
00000584: R0 := mem[R0 + 8, el]:u64
00000589: R30 := 0x700
0000058c: call @__cxa_finalize with return %00000561

00000561:
00000569: R30 := 0x704
0000056b: call @deregister_tm_clones with return %0000056d

0000056d:
00000570: R0 := 1
00000578: mem := mem with [R19 + 0x10] <- 7:0[R0]
0000081c: goto %0000036f

0000036f:
00000379: R19 := mem[R31 + 0x10, el]:u64
00000380: R29 := mem[R31, el]:u64
00000385: R30 := mem[R31 + 8, el]:u64
00000389: R31 := R31 + 0x20
0000038e: call R30 with noreturn

0000081d: sub __libc_csu_fini(__libc_csu_fini_result)
00000838: __libc_csu_fini_result :: out u32 = low:32[R0]

000004f3:
000004f6: call R30 with noreturn

0000081e: sub __libc_csu_init(__libc_csu_init_result)
00000839: __libc_csu_init_result :: out u32 = low:32[R0]

00000400:
00000404: #7 := R31 - 0x40
0000040a: mem := mem with [#7, el]:u64 <- R29
00000410: mem := mem with [#7 + 8, el]:u64 <- R30
00000414: R31 := #7
0000041a: R29 := R31
00000420: #8 := R31 + 0x10
00000426: mem := mem with [#8, el]:u64 <- R19
0000042c: mem := mem with [#8 + 8, el]:u64 <- R20
00000431: R20 := 0x10000
00000437: R20 := R20 + 0xD90
0000043d: #9 := R31 + 0x20
00000443: mem := mem with [#9, el]:u64 <- R21
00000449: mem := mem with [#9 + 8, el]:u64 <- R22
0000044e: R21 := 0x10000
00000454: R21 := R21 + 0xD88
0000045b: R20 := R20 + ~R21 + 1
00000461: R22 := pad:64[31:0[R0]]
00000467: #10 := R31 + 0x30
0000046d: mem := mem with [#10, el]:u64 <- R23
00000473: mem := mem with [#10 + 8, el]:u64 <- R24
00000479: R23 := R1
0000047f: R24 := R2
00000484: R30 := 0x790
00000487: call @_init with return %00000489

00000489:
0000048d: #11 := ~(R20 ~>> 3)
00000491: #12 := ~(R20 ~>> 3) + 1
00000496: VF := extend:65[#12] <> extend:65[#11] + 1
0000049b: CF := pad:65[#12] <> pad:65[#11] + 1
0000049f: ZF := #12 = 0
000004a3: NF := 63:63[#12]
000004a9: when ZF goto %000004a7
0000081f: goto %000004f8

000004f8:
000004fe: R20 :=

          >> 3 | R20 << 0x3D]
00000503: R19 := 0
00000820: goto %00000505

00000505:
0000050b: R3 := mem[R21 + (60:0[R19].0), el]:u64
00000511: R2 := R24
00000517: R19 := R19 + 1
0000051d: R1 := R23
00000523: R0 := pad:64[31:0[R22]]
00000528: R30 := 0x7B8
0000052b: call R3 with return %0000052d

0000052d:
00000531: #16 := ~R19
00000536: #17 := R20 + ~R19 + 1
0000053c: VF := extend:65[#17] <> extend:65[R20] + extend:65[#16] + 1
00000542: CF := pad:65[#17] <> pad:65[R20] + pad:65[#16] + 1
00000546: ZF := #17 = 0
0000054a: NF := 63:63[#17]
0000054f: when ZF <> 1 goto %00000505
00000821: goto %000004a7

000004a7:
000004b0: #13 := R31 + 0x10
000004b5: R19 := mem[#13, el]:u64
000004ba: R20 := mem[#13 + 8, el]:u64
000004c0: #14 := R31 + 0x20
000004c5: R21 := mem[#14, el]:u64
000004ca: R22 := mem[#14 + 8, el]:u64
000004d0: #15 := R31 + 0x30
000004d5: R23 := mem[#15, el]:u64
000004da: R24 := mem[#15 + 8, el]:u64
000004e1: R29 := mem[R31, el]:u64
000004e6: R30 := mem[R31 + 8, el]:u64
000004ea: R31 := R31 + 0x40
000004ef: call R30 with noreturn

00000822: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
0000083a: __libc_start_main_main :: in u64 = R0
0000083b: __libc_start_main_arg2 :: in u32 = low:32[R1]
0000083c: __libc_start_main_arg3 :: in out u64 = R2
0000083d: __libc_start_main_auxv :: in out u64 = R3
0000083e: __libc_start_main_result :: out u32 = low:32[R0]

0000027a:
00000681: R16 := 0x10000
00000688: R17 := mem[R16 + 0xFA8, el]:u64
0000068e: R16 := R16 + 0xFA8
00000693: call R17 with noreturn

00000823: sub _fini(_fini_result)
0000083f: _fini_result :: out u32 = low:32[R0]

00000030:
00000034: #0 := R31 - 0x10
0000003a: mem := mem with [#0, el]:u64 <- R29
00000040: mem := mem with [#0 + 8, el]:u64 <- R30
00000044: R31 := #0
0000004a: R29 := R31
00000051: R29 := mem[R31, el]:u64
00000056: R30 := mem[R31 + 8, el]:u64
0000005a: R31 := R31 + 0x10
0000005f: call R30 with noreturn

00000824: sub _init(_init_result)
00000840: _init_result :: out u32 = low:32[R0]

00000485:
00000753: #19 := R31 - 0x10
00000759: mem := mem with [#19, el]:u64 <- R29
0000075f: mem := mem with [#19 + 8, el]:u64 <- R30
00000763: R31 := #19
00000769: R29 := R31
0000076e: R30 := 0x5A4
00000770: call @call_weak_fn with return %00000772

00000772:
00000777: R29 := mem[R31, el]:u64
0000077c: R30 := mem[R31 + 8, el]:u64
00000780: R31 := R31 + 0x10
00000785: call R30 with noreturn

00000825: sub _start(_start_result)
00000841: _start_result :: out u32 = low:32[R0]

0000022f:
00000232: R29 := 0
00000237: R30 := 0
0000023d: R5 := R0
00000244: R1 := mem[R31, el]:u64
0000024a: R2 := R31 + 8
00000250: R6 := R31
00000255: R0 := 0x10000
0000025c: R0 := mem[R0 + 0xFF0, el]:u64
00000261: R3 := 0x10000
00000268: R3 := mem[R3 + 0xFE8, el]:u64
0000026d: R4 := 0x10000
00000274: R4 := mem[R4 + 0xFC8, el]:u64
00000279: R30 := 0x644
0000027c: call @__libc_start_main with return %0000027e

0000027e:
00000281: R30 := 0x648
00000284: call @abort with return %00000826

00000826:
00000827: call @call_weak_fn with noreturn

00000828: sub abort()


00000282:
000006ad: R16 := 0x10000
000006b4: R17 := mem[R16 + 0xFB8, el]:u64
000006ba: R16 := R16 + 0xFB8
000006bf: call R17 with noreturn

00000829: sub call_weak_fn(call_weak_fn_result)
00000842: call_weak_fn_result :: out u32 = low:32[R0]

00000286:
00000289: R0 := 0x10000
00000290: R0 := mem[R0 + 0xFE0, el]:u64
00000296: when R0 = 0 goto %00000294
0000082a: goto %000005ca

00000294:
0000029c: call R30 with noreturn

000005ca:
000005cd: goto @__gmon_start__

000005cb:
00000697: R16 := 0x10000
0000069e: R17 := mem[R16 + 0xFB0, el]:u64
000006a4: R16 := R16 + 0xFB0
000006a9: call R17 with noreturn

0000082b: sub deregister_tm_clones(deregister_tm_clones_result)
00000843: deregister_tm_clones_result :: out u32 = low:32[R0]

000002a0:
000002a3: R0 := 0x11000
000002a9: R0 := R0 + 0x10
000002ae: R1 := 0x11000
000002b4: R1 := R1 + 0x10
000002ba: #1 := ~R0
000002bf: #2 := R1 + ~R0 + 1
000002c5: VF := extend:65[#2] <> extend:65[R1] + extend:65[#1] + 1
000002cb: CF := pad:65[#2] <> pad:65[R1] + pad:65[#1] + 1
000002cf: ZF := #2 = 0
000002d3: NF := 63:63[#2]
000002d9: when ZF goto %000002d7
0000082c: goto %000005ac

000005ac:
000005af: R1 := 0x10000
000005b6: R1 := mem[R1 + 0xFD0, el]:u64
000005bb: when R1 = 0 goto %000002d7
0000082d: goto %000005bf

000002d7:
000002df: call R30 with noreturn

000005bf:
000005c3: R16 := R1
000005c8: call R16 with noreturn

0000082e: sub frame_dummy(frame_dummy_result)
00000844: frame_dummy_result :: out u32 = low:32[R0]

00000390:
00000392: call @register_tm_clones with noreturn

0000082f: sub main(main_argc, main_argv, main_result)
00000845: main_argc :: in u32 = low:32[R0]
00000846: main_argv :: in out u64 = R1
00000847: main_result :: out u32 = low:32[R0]

00000394:
00000397: goto %00000395

00000395:
0000039b: R0 := 0x11000
000003a1: R0 := R0 + 0x14
000003a8: R0 := pad:64[mem[R0, el]:u32]
000003ae: #6 := 31:0[R0] - 9
000003b3: VF := extend:33[#6] <> extend:33[31:0[R0]] - 9
000003b8: CF := pad:33[#6] <> pad:33[31:0[R0]] + 0xFFFFFFF7
000003bc: ZF := #6 = 0
000003c0: NF := 31:31[#6]
000003c8: when ~(NF = VF & ~ZF) goto %000003c6
00000830: goto %000003f6

000003f6:
000003f9: R0 := 0
000003fe: call R30 with noreturn

000003c6:
000003ce: R0 := 0x11000
000003d4: R0 := R0 + 0x14
000003db: R0 := pad:64[mem[R0, el]:u32]
000003e1: R1 := pad:64[31:0[R0] + 1]
000003e6: R0 := 0x11000
000003ec: R0 := R0 + 0x14
000003f4: mem := mem with [R0, el]:u32 <- 31:0[R1]
00000831: goto %00000395

00000832: sub register_tm_clones(register_tm_clones_result)
00000848: register_tm_clones_result :: out u32 = low:32[R0]

000002e1:
000002e4: R0 := 0x11000
000002ea: R0 := R0 + 0x10
000002ef: R1 := 0x11000
000002f5: R1 := R1 + 0x10
000002fc: R1 := R1 + ~R0 + 1
00000303: R2 := 0.0:0[R1 >> 0x3F | R1 << 1]
0000030a: R1 := R2 + (R1 ~>> 3)
00000310: #3 := ~(R1 ~>> 1)
00000314: #4 := ~(R1 ~>> 1) + 1
00000319: VF := extend:65[#4] <> extend:65[#3] + 1
0000031e: CF := pad:65[#4] <> pad:65[#3] + 1
00000322: ZF := #4 = 0
00000326: NF := 63:63[#4]
0000032e: R1 :=

          >> 1 | R1 << 0x3F]
00000334: when ZF goto %00000332
00000833: goto %0000058e

0000058e:
00000591: R2 := 0x10000
00000598: R2 := mem[R2 + 0xFF8, el]:u64
0000059d: when R2 = 0 goto %00000332
00000834: goto %000005a1

00000332:
0000033a: call R30 with noreturn

000005a1:
000005a5: R16 := R2
000005aa: call R16 with noreturn
