000005d7: program
000005c1: sub __cxa_finalize(__cxa_finalize_result)
000005d8: __cxa_finalize_result :: out u32 = low:32[R0]

0000036d:
00000465: R16 := 0x1F000
0000046c: R17 := mem[R16 + 0xFB8, el]:u64
00000472: R16 := R16 + 0xFB8
00000477: call R17 with noreturn

000005c2: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
000005d9: __do_global_dtors_aux_result :: out u32 = low:32[R0]

0000028e:
00000292: #3 := R31 - 0x20
00000298: mem := mem with [#3, el]:u64 <- R29
0000029e: mem := mem with [#3 + 8, el]:u64 <- R30
000002a2: R31 := #3
000002a8: R29 := R31
000002b0: mem := mem with [R31 + 0x10, el]:u64 <- R19
000002b5: R19 := 0x20000
000002bc: R0 := pad:64[mem[R19 + 0x10]]
000002c3: when 31:0[R0] <> 0 goto %000002c1
000005c3: goto %00000336

00000336:
00000339: R0 := 0x1F000
00000340: R0 := mem[R0 + 0xFE0, el]:u64
00000346: when R0 = 0 goto %00000344
000005c4: goto %0000035d

0000035d:
00000360: R0 := 0x20000
00000367: R0 := mem[R0 + 8, el]:u64
0000036c: R30 := 0x6F0
0000036f: call @__cxa_finalize with return %00000344

00000344:
0000034c: R30 := 0x6F4
0000034e: call @deregister_tm_clones with return %00000350

00000350:
00000353: R0 := 1
0000035b: mem := mem with [R19 + 0x10] <- 7:0[R0]
000005c5: goto %000002c1

000002c1:
000002cb: R19 := mem[R31 + 0x10, el]:u64
000002d2: R29 := mem[R31, el]:u64
000002d7: R30 := mem[R31 + 8, el]:u64
000002db: R31 := R31 + 0x20
000002e0: call R30 with noreturn

000005c6: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
000005da: __libc_start_main_main :: in u64 = R0
000005db: __libc_start_main_arg2 :: in u32 = low:32[R1]
000005dc: __libc_start_main_arg3 :: in out u64 = R2
000005dd: __libc_start_main_auxv :: in out u64 = R3
000005de: __libc_start_main_result :: out u32 = low:32[R0]

000001e7:
0000044f: R16 := 0x1F000
00000456: R17 := mem[R16 + 0xFB0, el]:u64
0000045c: R16 := R16 + 0xFB0
00000461: call R17 with noreturn

000005c7: sub _fini(_fini_result)
000005df: _fini_result :: out u32 = low:32[R0]

0000002f:
00000035: #0 := R31 - 0x10
0000003b: mem := mem with [#0, el]:u64 <- R29
00000041: mem := mem with [#0 + 8, el]:u64 <- R30
00000045: R31 := #0
0000004b: R29 := R31
00000052: R29 := mem[R31, el]:u64
00000057: R30 := mem[R31 + 8, el]:u64
0000005b: R31 := R31 + 0x10
00000060: call R30 with noreturn

000005c8: sub _init(_init_result)
000005e0: _init_result :: out u32 = low:32[R0]

00000517:
0000051d: #5 := R31 - 0x10
00000523: mem := mem with [#5, el]:u64 <- R29
00000529: mem := mem with [#5 + 8, el]:u64 <- R30
0000052d: R31 := #5
00000533: R29 := R31
00000538: R30 := 0x598
0000053a: call @call_weak_fn with return %0000053c

0000053c:
00000541: R29 := mem[R31, el]:u64
00000546: R30 := mem[R31 + 8, el]:u64
0000054a: R31 := R31 + 0x10
0000054f: call R30 with noreturn

000005c9: sub _start(_start_result)
000005e1: _start_result :: out u32 = low:32[R0]

000001a8:
000001ad: R29 := 0
000001b2: R30 := 0
000001b8: R5 := R0
000001bf: R1 := mem[R31, el]:u64
000001c5: R2 := R31 + 8
000001cb: R6 := R31
000001d0: R0 := 0x1F000
000001d7: R0 := mem[R0 + 0xFF0, el]:u64
000001dc: R3 := 0
000001e1: R4 := 0
000001e6: R30 := 0x630
000001e9: call @__libc_start_main with return %000001eb

000001eb:
000001ee: R30 := 0x634
000001f1: call @abort with return %000005ca

000005ca:
000005cb: call @call_weak_fn with noreturn

000005cc: sub abort()


000001ef:
00000491: R16 := 0x1F000
00000498: R17 := mem[R16 + 0xFC8, el]:u64
0000049e: R16 := R16 + 0xFC8
000004a3: call R17 with noreturn

000005cd: sub call_weak_fn(call_weak_fn_result)
000005e2: call_weak_fn_result :: out u32 = low:32[R0]

000001f3:
000001f6: R0 := 0x1F000
000001fd: R0 := mem[R0 + 0xFE8, el]:u64
00000203: when R0 = 0 goto %00000201
000005ce: goto %000003ad

00000201:
00000209: call R30 with noreturn

000003ad:
000003b0: goto @__gmon_start__

000003ae:
0000047b: R16 := 0x1F000
00000482: R17 := mem[R16 + 0xFC0, el]:u64
00000488: R16 := R16 + 0xFC0
0000048d: call R17 with noreturn

000005cf: sub deregister_tm_clones(deregister_tm_clones_result)
000005e3: deregister_tm_clones_result :: out u32 = low:32[R0]

0000020f:
00000212: R0 := 0x20000
00000218: R0 := R0 + 0x10
0000021d: R1 := 0x20000
00000223: R1 := R1 + 0x10
00000229: #1 := ~R0
0000022e: #2 := R1 + ~R0
00000234: VF := extend:65[#2 + 1] <> extend:65[R1] + extend:65[#1] + 1
0000023a: CF := pad:65[#2 + 1] <> pad:65[R1] + pad:65[#1] + 1
0000023e: ZF := #2 + 1 = 0
00000242: NF := 63:63[#2 + 1]
00000248: when ZF goto %00000246
000005d0: goto %0000038f

0000038f:
00000392: R1 := 0x1F000
00000399: R1 := mem[R1 + 0xFD8, el]:u64
0000039e: when R1 = 0 goto %00000246
000005d1: goto %000003a2

00000246:
0000024e: call R30 with noreturn

000003a2:
000003a6: R16 := R1
000003ab: call R16 with noreturn

000005d2: sub frame_dummy(frame_dummy_result)
000005e4: frame_dummy_result :: out u32 = low:32[R0]

000002e6:
000002e8: call @register_tm_clones with noreturn

000005d3: sub main(main_argc, main_argv, main_result)
000005e5: main_argc :: in u32 = low:32[R0]
000005e6: main_argv :: in out u64 = R1
000005e7: main_result :: out u32 = low:32[R0]

000002ea:
000002ee: R31 := R31 - 0x10
000002f5: mem := mem with [R31 + 0xC, el]:u32 <- 0
000002fc: R0 := pad:64[mem[R31 + 0xC, el]:u32]
00000302: R0 := pad:64[31:0[R0] + 1]
0000030a: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R0]
0000030f: R0 := 3
00000317: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R0]
0000031c: R0 := 0xA
00000324: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R0]
00000329: R0 := 0
0000032f: R31 := R31 + 0x10
00000334: call R30 with noreturn

000005d4: sub register_tm_clones(register_tm_clones_result)
000005e8: register_tm_clones_result :: out u32 = low:32[R0]

00000250:
00000253: R0 := 0x20000
00000259: R0 := R0 + 0x10
0000025e: R1 := 0x20000
00000264: R1 := R1 + 0x10
0000026b: R1 := R1 + ~R0 + 1
00000271: R2 := 0.63:63[R1]
00000278: R1 := R2 + (R1 ~>> 3)
0000027e: R1 := extend:64[63:1[R1]]
00000284: when R1 = 0 goto %00000282
000005d5: goto %00000371

00000371:
00000374: R2 := 0x1F000
0000037b: R2 := mem[R2 + 0xFF8, el]:u64
00000380: when R2 = 0 goto %00000282
000005d6: goto %00000384

00000282:
0000028a: call R30 with noreturn

00000384:
00000388: R16 := R2
0000038d: call R16 with noreturn
