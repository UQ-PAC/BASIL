00000826: program
0000080a: sub __cxa_finalize(__cxa_finalize_result)
00000827: __cxa_finalize_result :: out u32 = low:32[R0]

00000580:
00000661: R16 := 0x11000
00000668: R17 := mem[R16, el]:u64
0000066e: R16 := R16
00000673: call R17 with noreturn

0000080b: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
00000828: __do_global_dtors_aux_result :: out u32 = low:32[R0]

00000338:
0000033c: #5 := R31 - 0x20
00000342: mem := mem with [#5, el]:u64 <- R29
00000348: mem := mem with [#5 + 8, el]:u64 <- R30
0000034c: R31 := #5
00000352: R29 := R31
0000035a: mem := mem with [R31 + 0x10, el]:u64 <- R19
0000035f: R19 := 0x11000
00000366: R0 := pad:64[mem[R19 + 0x30]]
0000036d: when 31:0[R0] <> 0 goto %0000036b
0000080c: goto %00000549

00000549:
0000054c: R0 := 0x10000
00000553: R0 := mem[R0 + 0xFC0, el]:u64
00000559: when R0 = 0 goto %00000557
0000080d: goto %00000570

00000570:
00000573: R0 := 0x11000
0000057a: R0 := mem[R0 + 0x28, el]:u64
0000057f: R30 := 0x700
00000582: call @__cxa_finalize with return %00000557

00000557:
0000055f: R30 := 0x704
00000561: call @deregister_tm_clones with return %00000563

00000563:
00000566: R0 := 1
0000056e: mem := mem with [R19 + 0x30] <- 7:0[R0]
0000080e: goto %0000036b

0000036b:
00000375: R19 := mem[R31 + 0x10, el]:u64
0000037c: R29 := mem[R31, el]:u64
00000381: R30 := mem[R31 + 8, el]:u64
00000385: R31 := R31 + 0x20
0000038a: call R30 with noreturn

0000080f: sub __libc_csu_fini(__libc_csu_fini_result)
00000829: __libc_csu_fini_result :: out u32 = low:32[R0]

000004c2:
000004c5: call R30 with noreturn

00000810: sub __libc_csu_init(__libc_csu_init_result)
0000082a: __libc_csu_init_result :: out u32 = low:32[R0]

000003cf:
000003d3: #7 := R31 - 0x40
000003d9: mem := mem with [#7, el]:u64 <- R29
000003df: mem := mem with [#7 + 8, el]:u64 <- R30
000003e3: R31 := #7
000003e9: R29 := R31
000003ef: #8 := R31 + 0x10
000003f5: mem := mem with [#8, el]:u64 <- R19
000003fb: mem := mem with [#8 + 8, el]:u64 <- R20
00000400: R20 := 0x10000
00000406: R20 := R20 + 0xDC0
0000040c: #9 := R31 + 0x20
00000412: mem := mem with [#9, el]:u64 <- R21
00000418: mem := mem with [#9 + 8, el]:u64 <- R22
0000041d: R21 := 0x10000
00000423: R21 := R21 + 0xDB8
0000042a: R20 := R20 + ~R21 + 1
00000430: R22 := pad:64[31:0[R0]]
00000436: #10 := R31 + 0x30
0000043c: mem := mem with [#10, el]:u64 <- R23
00000442: mem := mem with [#10 + 8, el]:u64 <- R24
00000448: R23 := R1
0000044e: R24 := R2
00000453: R30 := 0x788
00000456: call @_init with return %00000458

00000458:
0000045c: #11 := ~(R20 ~>> 3)
00000460: #12 := ~(R20 ~>> 3) + 1
00000465: VF := extend:65[#12] <> extend:65[#11] + 1
0000046a: CF := pad:65[#12] <> pad:65[#11] + 1
0000046e: ZF := #12 = 0
00000472: NF := 63:63[#12]
00000478: when ZF goto %00000476
00000811: goto %000004c7

000004c7:
000004cd: R20 :=

          >> 3 | R20 << 0x3D]
000004d2: R19 := 0
00000812: goto %000004d4

000004d4:
000004da: R3 := mem[R21 + (60:0[R19].0), el]:u64
000004e0: R2 := R24
000004e6: R19 := R19 + 1
000004ec: R1 := R23
000004f2: R0 := pad:64[31:0[R22]]
000004f7: R30 := 0x7B0
000004fa: call R3 with return %000004fc

000004fc:
00000500: #16 := ~R19
00000505: #17 := R20 + ~R19 + 1
0000050b: VF := extend:65[#17] <> extend:65[R20] + extend:65[#16] + 1
00000511: CF := pad:65[#17] <> pad:65[R20] + pad:65[#16] + 1
00000515: ZF := #17 = 0
00000519: NF := 63:63[#17]
0000051e: when ZF <> 1 goto %000004d4
00000813: goto %00000476

00000476:
0000047f: #13 := R31 + 0x10
00000484: R19 := mem[#13, el]:u64
00000489: R20 := mem[#13 + 8, el]:u64
0000048f: #14 := R31 + 0x20
00000494: R21 := mem[#14, el]:u64
00000499: R22 := mem[#14 + 8, el]:u64
0000049f: #15 := R31 + 0x30
000004a4: R23 := mem[#15, el]:u64
000004a9: R24 := mem[#15 + 8, el]:u64
000004b0: R29 := mem[R31, el]:u64
000004b5: R30 := mem[R31 + 8, el]:u64
000004b9: R31 := R31 + 0x40
000004be: call R30 with noreturn

00000814: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
0000082b: __libc_start_main_main :: in u64 = R0
0000082c: __libc_start_main_arg2 :: in u32 = low:32[R1]
0000082d: __libc_start_main_arg3 :: in out u64 = R2
0000082e: __libc_start_main_auxv :: in out u64 = R3
0000082f: __libc_start_main_result :: out u32 = low:32[R0]

00000276:
00000677: R16 := 0x11000
0000067e: R17 := mem[R16 + 8, el]:u64
00000684: R16 := R16 + 8
00000689: call R17 with noreturn

00000815: sub _fini(_fini_result)
00000830: _fini_result :: out u32 = low:32[R0]

00000034:
00000038: #0 := R31 - 0x10
0000003e: mem := mem with [#0, el]:u64 <- R29
00000044: mem := mem with [#0 + 8, el]:u64 <- R30
00000048: R31 := #0
0000004e: R29 := R31
00000055: R29 := mem[R31, el]:u64
0000005a: R30 := mem[R31 + 8, el]:u64
0000005e: R31 := R31 + 0x10
00000063: call R30 with noreturn

00000816: sub _init(_init_result)
00000831: _init_result :: out u32 = low:32[R0]

00000454:
00000747: #19 := R31 - 0x10
0000074d: mem := mem with [#19, el]:u64 <- R29
00000753: mem := mem with [#19 + 8, el]:u64 <- R30
00000757: R31 := #19
0000075d: R29 := R31
00000762: R30 := 0x5A4
00000764: call @call_weak_fn with return %00000766

00000766:
0000076b: R29 := mem[R31, el]:u64
00000770: R30 := mem[R31 + 8, el]:u64
00000774: R31 := R31 + 0x10
00000779: call R30 with noreturn

00000817: sub _start(_start_result)
00000832: _start_result :: out u32 = low:32[R0]

0000022b:
0000022e: R29 := 0
00000233: R30 := 0
00000239: R5 := R0
00000240: R1 := mem[R31, el]:u64
00000246: R2 := R31 + 8
0000024c: R6 := R31
00000251: R0 := 0x10000
00000258: R0 := mem[R0 + 0xFD8, el]:u64
0000025d: R3 := 0x10000
00000264: R3 := mem[R3 + 0xFD0, el]:u64
00000269: R4 := 0x10000
00000270: R4 := mem[R4 + 0xFB0, el]:u64
00000275: R30 := 0x644
00000278: call @__libc_start_main with return %0000027a

0000027a:
0000027d: R30 := 0x648
00000280: call @abort with return %00000818

00000818:
00000819: call @call_weak_fn with noreturn

0000081a: sub abort()


0000027e:
000006a3: R16 := 0x11000
000006aa: R17 := mem[R16 + 0x18, el]:u64
000006b0: R16 := R16 + 0x18
000006b5: call R17 with noreturn

0000081b: sub call_weak_fn(call_weak_fn_result)
00000833: call_weak_fn_result :: out u32 = low:32[R0]

00000282:
00000285: R0 := 0x10000
0000028c: R0 := mem[R0 + 0xFC8, el]:u64
00000292: when R0 = 0 goto %00000290
0000081c: goto %000005c0

00000290:
00000298: call R30 with noreturn

000005c0:
000005c3: goto @__gmon_start__

000005c1:
0000068d: R16 := 0x11000
00000694: R17 := mem[R16 + 0x10, el]:u64
0000069a: R16 := R16 + 0x10
0000069f: call R17 with noreturn

0000081d: sub deregister_tm_clones(deregister_tm_clones_result)
00000834: deregister_tm_clones_result :: out u32 = low:32[R0]

0000029c:
0000029f: R0 := 0x11000
000002a5: R0 := R0 + 0x30
000002aa: R1 := 0x11000
000002b0: R1 := R1 + 0x30
000002b6: #1 := ~R0
000002bb: #2 := R1 + ~R0 + 1
000002c1: VF := extend:65[#2] <> extend:65[R1] + extend:65[#1] + 1
000002c7: CF := pad:65[#2] <> pad:65[R1] + pad:65[#1] + 1
000002cb: ZF := #2 = 0
000002cf: NF := 63:63[#2]
000002d5: when ZF goto %000002d3
0000081e: goto %000005a2

000005a2:
000005a5: R1 := 0x10000
000005ac: R1 := mem[R1 + 0xFB8, el]:u64
000005b1: when R1 = 0 goto %000002d3
0000081f: goto %000005b5

000002d3:
000002db: call R30 with noreturn

000005b5:
000005b9: R16 := R1
000005be: call R16 with noreturn

00000820: sub frame_dummy(frame_dummy_result)
00000835: frame_dummy_result :: out u32 = low:32[R0]

0000038c:
0000038e: call @register_tm_clones with noreturn

00000821: sub get_two(get_two_result)
00000836: get_two_result :: out u32 = low:32[R0]

000003c2:
000003c8: R0 := 2
000003cd: call R30 with noreturn

00000822: sub main(main_argc, main_argv, main_result)
00000837: main_argc :: in u32 = low:32[R0]
00000838: main_argv :: in out u64 = R1
00000839: main_result :: out u32 = low:32[R0]

00000390:
00000394: #6 := R31 - 0x10
0000039a: mem := mem with [#6, el]:u64 <- R29
000003a0: mem := mem with [#6 + 8, el]:u64 <- R30
000003a4: R31 := #6
000003aa: R29 := R31
000003af: R9 := 0x11000
000003b4: R8 := 1
000003bc: mem := mem with [R9 + 0x34, el]:u32 <- 31:0[R8]
000003c1: R30 := 0x734
000003c4: call @get_two with return %00000522

00000522:
00000525: R8 := 0x11000
0000052d: mem := mem with [R8 + 0x38, el]:u32 <- 31:0[R0]
00000532: R0 := 0
00000539: R29 := mem[R31, el]:u64
0000053e: R30 := mem[R31 + 8, el]:u64
00000542: R31 := R31 + 0x10
00000547: call R30 with noreturn

00000823: sub register_tm_clones(register_tm_clones_result)
0000083a: register_tm_clones_result :: out u32 = low:32[R0]

000002dd:
000002e0: R0 := 0x11000
000002e6: R0 := R0 + 0x30
000002eb: R1 := 0x11000
000002f1: R1 := R1 + 0x30
000002f8: R1 := R1 + ~R0 + 1
000002ff: R2 := 0.0:0[R1 >> 0x3F | R1 << 1]
00000306: R1 := R2 + (R1 ~>> 3)
0000030c: #3 := ~(R1 ~>> 1)
00000310: #4 := ~(R1 ~>> 1) + 1
00000315: VF := extend:65[#4] <> extend:65[#3] + 1
0000031a: CF := pad:65[#4] <> pad:65[#3] + 1
0000031e: ZF := #4 = 0
00000322: NF := 63:63[#4]
0000032a: R1 :=

          >> 1 | R1 << 0x3F]
00000330: when ZF goto %0000032e
00000824: goto %00000584

00000584:
00000587: R2 := 0x10000
0000058e: R2 := mem[R2 + 0xFE0, el]:u64
00000593: when R2 = 0 goto %0000032e
00000825: goto %00000597

0000032e:
00000336: call R30 with noreturn

00000597:
0000059b: R16 := R2
000005a0: call R16 with noreturn
