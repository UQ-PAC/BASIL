Procedure("1488:__cxa_finalize", in(), out(Parameter(Register(R0, bv64))), blocks(
  Block("1488:l__cxa_finalize",
    statements(
      LocalAssign(Register(R16, bv64) := 65536bv64)
      LocalAssign(Register(R17, bv64) := MemoryLoad(Memory("mem", 64, 8), [BinaryExpr("add", Register(R16, bv64), 4000bv64)]))
      LocalAssign(Register(R16, bv64) := BinaryExpr("add", Register(R16, bv64), 4000bv64))
    ),
    jumps(
    IndirectCall(Register(R17, bv64), ))
  )
)),
Procedure("1744:__do_global_dtors_aux", in(), out(Parameter(Register(R0, bv64))), blocks(
  Block("1744:l__do_global_dtors_aux",
    statements(
      LocalAssign(LocalVar(#5, bv64) := BinaryExpr("add", Register(R31, bv64), 18446744073709551584bv64))
      MemoryAssign(MemoryStore(Memory("mem", 64, 8)[LocalVar(#5, bv64)] := Register(R29, bv64)))
      MemoryAssign(MemoryStore(Memory("mem", 64, 8)[BinaryExpr("add", LocalVar(#5, bv64), 8bv64)] := Register(R30, bv64)))
      LocalAssign(Register(R31, bv64) := LocalVar(#5, bv64))
      LocalAssign(Register(R29, bv64) := Register(R31, bv64))
      MemoryAssign(MemoryStore(Memory("mem", 64, 8)[BinaryExpr("add", Register(R31, bv64), 16bv64)] := Register(R19, bv64)))
      LocalAssign(Register(R19, bv64) := 69632bv64)
      LocalAssign(Register(R0, bv64) := ZeroExtend(MemoryLoad(Memory("mem", 64, 8), [BinaryExpr("add", Register(R19, bv64), 16bv64)]), 56))
    ),
    jumps(
    GoTo("?:l__do_global_dtors_aux_goto_l00000379", "?:l__do_global_dtors_aux_goto_l0000056b"))
  )
  Block("1768:l0000056b",
    statements(
      LocalAssign(Register(R0, bv64) := 65536bv64)
      LocalAssign(Register(R0, bv64) := MemoryLoad(Memory("mem", 64, 8), [BinaryExpr("add", Register(R0, bv64), 4056bv64)]))
    ),
    jumps(
    GoTo("?:l0000056b_goto_l00000579", "?:l0000056b_goto_l00000592"))
  )
  Block("1780:l00000592",
    statements(
      LocalAssign(Register(R0, bv64) := 69632bv64)
      LocalAssign(Register(R0, bv64) := MemoryLoad(Memory("mem", 64, 8), [BinaryExpr("add", Register(R0, bv64), 8bv64)]))
      LocalAssign(Register(R30, bv64) := 1792bv64)
    ),
    jumps(
    DirectCall("1488:__cxa_finalize", ))
  )
  Block("1792:l00000579",
    statements(
      LocalAssign(Register(R30, bv64) := 1796bv64)
    ),
    jumps(
    DirectCall("1632:deregister_tm_clones", ))
  )
  Block("1796:l00000585",
    statements(
      LocalAssign(Register(R0, bv64) := 1bv64)
      MemoryAssign(MemoryStore(Memory("mem", 64, 8)[BinaryExpr("add", Register(R19, bv64), 16bv64)] := Extract(Register(R0, bv64)[8:0])))
    ),
    jumps(
    GoTo("1804:l00000379"))
  )
  Block("1804:l00000379",
    statements(
      LocalAssign(Register(R19, bv64) := MemoryLoad(Memory("mem", 64, 8), [BinaryExpr("add", Register(R31, bv64), 16bv64)]))
      LocalAssign(Register(R29, bv64) := MemoryLoad(Memory("mem", 64, 8), [Register(R31, bv64)]))
      LocalAssign(Register(R30, bv64) := MemoryLoad(Memory("mem", 64, 8), [BinaryExpr("add", Register(R31, bv64), 8bv64)]))
      LocalAssign(Register(R31, bv64) := BinaryExpr("add", Register(R31, bv64), 32bv64))
    ),
    jumps(
    IndirectCall(Register(R30, bv64), ))
  )
  Block("?:l__do_global_dtors_aux_goto_l00000379",
    statements(
      BinaryExpr("!=", UnaryExpr("not", BinaryExpr("comp", Extract(Register(R0, bv64)[32:0]), 0bv32)), 0bv1)
    ),
    jumps(
    GoTo("1804:l00000379"))
  )
  Block("?:l__do_global_dtors_aux_goto_l0000056b",
    statements(
      BinaryExpr("==", UnaryExpr("not", BinaryExpr("comp", Extract(Register(R0, bv64)[32:0]), 0bv32)), 0bv1)
    ),
    jumps(
    GoTo("1768:l0000056b"))
  )
  Block("?:l0000056b_goto_l00000579",
    statements(
      BinaryExpr("!=", BinaryExpr("comp", Register(R0, bv64), 0bv64), 0bv1)
    ),
    jumps(
    GoTo("1792:l00000579"))
  )
  Block("?:l0000056b_goto_l00000592",
    statements(
      BinaryExpr("==", BinaryExpr("comp", Register(R0, bv64), 0bv64), 0bv1)
    ),
    jumps(
    GoTo("1780:l00000592"))
  )
)),
Procedure("2016:__libc_csu_fini", in(), out(Parameter(Register(R0, bv64))), blocks(
  Block("2016:l__libc_csu_fini",
    statements(
    ),
    jumps(
    IndirectCall(Register(R30, bv64), ))
  )
)),
Procedure("1888:__libc_csu_init", in(), out(Parameter(Register(R0, bv64))), blocks(
  Block("1888:l__libc_csu_init",
    statements(
      LocalAssign(LocalVar(#7, bv64) := BinaryExpr("add", Register(R31, bv64), 18446744073709551552bv64))
      MemoryAssign(MemoryStore(Memory("mem", 64, 8)[LocalVar(#7, bv64)] := Register(R29, bv64)))
      MemoryAssign(MemoryStore(Memory("mem", 64, 8)[BinaryExpr("add", LocalVar(#7, bv64), 8bv64)] := Register(R30, bv64)))
      LocalAssign(Register(R31, bv64) := LocalVar(#7, bv64))
      LocalAssign(Register(R29, bv64) := Register(R31, bv64))
      LocalAssign(LocalVar(#8, bv64) := BinaryExpr("add", Register(R31, bv64), 16bv64))
      MemoryAssign(MemoryStore(Memory("mem", 64, 8)[LocalVar(#8, bv64)] := Register(R19, bv64)))
      MemoryAssign(MemoryStore(Memory("mem", 64, 8)[BinaryExpr("add", LocalVar(#8, bv64), 8bv64)] := Register(R20, bv64)))
      LocalAssign(Register(R20, bv64) := 65536bv64)
      LocalAssign(Register(R20, bv64) := BinaryExpr("add", Register(R20, bv64), 3472bv64))
      LocalAssign(LocalVar(#9, bv64) := BinaryExpr("add", Register(R31, bv64), 32bv64))
      MemoryAssign(MemoryStore(Memory("mem", 64, 8)[LocalVar(#9, bv64)] := Register(R21, bv64)))
      MemoryAssign(MemoryStore(Memory("mem", 64, 8)[BinaryExpr("add", LocalVar(#9, bv64), 8bv64)] := Register(R22, bv64)))
      LocalAssign(Register(R21, bv64) := 65536bv64)
      LocalAssign(Register(R21, bv64) := BinaryExpr("add", Register(R21, bv64), 3464bv64))
      LocalAssign(Register(R20, bv64) := BinaryExpr("add", BinaryExpr("add", Register(R20, bv64), UnaryExpr("not", Register(R21, bv64))), 1bv64))
      LocalAssign(Register(R22, bv64) := ZeroExtend(Extract(Register(R0, bv64)[32:0]), 32))
      LocalAssign(LocalVar(#10, bv64) := BinaryExpr("add", Register(R31, bv64), 48bv64))
      MemoryAssign(MemoryStore(Memory("mem", 64, 8)[LocalVar(#10, bv64)] := Register(R23, bv64)))
      MemoryAssign(MemoryStore(Memory("mem", 64, 8)[BinaryExpr("add", LocalVar(#10, bv64), 8bv64)] := Register(R24, bv64)))
      LocalAssign(Register(R23, bv64) := Register(R1, bv64))
      LocalAssign(Register(R24, bv64) := Register(R2, bv64))
      LocalAssign(Register(R30, bv64) := 1944bv64)
    ),
    jumps(
    DirectCall("1432:_init", ))
  )
  Block("1944:l0000046e",
    statements(
      LocalAssign(LocalVar(#11, bv64) := UnaryExpr("not", BinaryExpr("ashr", Register(R20, bv64), ZeroExtend(3bv3, 61))))
      LocalAssign(LocalVar(#12, bv64) := BinaryExpr("add", UnaryExpr("not", BinaryExpr("ashr", Register(R20, bv64), ZeroExtend(3bv3, 61))), 1bv64))
      LocalAssign(LocalVar(VF, bv1) := UnaryExpr("not", BinaryExpr("comp", SignExtend(LocalVar(#12, bv64), 1), BinaryExpr("add", SignExtend(LocalVar(#11, bv64), 1), 1bv65))))
      LocalAssign(LocalVar(CF, bv1) := UnaryExpr("not", BinaryExpr("comp", ZeroExtend(LocalVar(#12, bv64), 1), BinaryExpr("add", ZeroExtend(LocalVar(#11, bv64), 1), 1bv65))))
      LocalAssign(LocalVar(ZF, bv1) := BinaryExpr("comp", LocalVar(#12, bv64), 0bv64))
      LocalAssign(LocalVar(NF, bv1) := Extract(LocalVar(#12, bv64)[64:63]))
    ),
    jumps(
    GoTo("?:l0000046e_goto_l0000048c", "?:l0000046e_goto_l000004dd"))
  )
  Block("1952:l000004dd",
    statements(
      LocalAssign(Register(R20, bv64) := BinaryExpr("++", Extract(BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", Extract(Register(R20, bv64)[64:63]), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63])), Extract(Register(R20, bv64)[64:63]))[64:61]), Extract(BinaryExpr("or", BinaryExpr("lshr", Register(R20, bv64), ZeroExtend(3bv3, 61)), BinaryExpr("shl", Register(R20, bv64), ZeroExtend(61bv7, 57)))[61:0])))
      LocalAssign(Register(R19, bv64) := 0bv64)
    ),
    jumps(
    GoTo("1960:l000004ea"))
  )
  Block("1960:l000004ea",
    statements(
      LocalAssign(Register(R3, bv64) := MemoryLoad(Memory("mem", 64, 8), [BinaryExpr("add", Register(R21, bv64), BinaryExpr("++", Extract(Register(R19, bv64)[61:0]), 0bv3))]))
      LocalAssign(Register(R2, bv64) := Register(R24, bv64))
      LocalAssign(Register(R19, bv64) := BinaryExpr("add", Register(R19, bv64), 1bv64))
      LocalAssign(Register(R1, bv64) := Register(R23, bv64))
      LocalAssign(Register(R0, bv64) := ZeroExtend(Extract(Register(R22, bv64)[32:0]), 32))
      LocalAssign(Register(R30, bv64) := 1984bv64)
    ),
    jumps(
    IndirectCall(Register(R3, bv64), ))
  )
  Block("1984:l00000512",
    statements(
      LocalAssign(LocalVar(#16, bv64) := UnaryExpr("not", Register(R19, bv64)))
      LocalAssign(LocalVar(#17, bv64) := BinaryExpr("add", BinaryExpr("add", Register(R20, bv64), UnaryExpr("not", Register(R19, bv64))), 1bv64))
      LocalAssign(LocalVar(VF, bv1) := UnaryExpr("not", BinaryExpr("comp", SignExtend(LocalVar(#17, bv64), 1), BinaryExpr("add", BinaryExpr("add", SignExtend(Register(R20, bv64), 1), SignExtend(LocalVar(#16, bv64), 1)), 1bv65))))
      LocalAssign(LocalVar(CF, bv1) := UnaryExpr("not", BinaryExpr("comp", ZeroExtend(LocalVar(#17, bv64), 1), BinaryExpr("add", BinaryExpr("add", ZeroExtend(Register(R20, bv64), 1), ZeroExtend(LocalVar(#16, bv64), 1)), 1bv65))))
      LocalAssign(LocalVar(ZF, bv1) := BinaryExpr("comp", LocalVar(#17, bv64), 0bv64))
      LocalAssign(LocalVar(NF, bv1) := Extract(LocalVar(#17, bv64)[64:63]))
    ),
    jumps(
    GoTo("?:l00000512_goto_l000004ea", "?:l00000512_goto_l0000048c"))
  )
  Block("1992:l0000048c",
    statements(
      LocalAssign(LocalVar(#13, bv64) := BinaryExpr("add", Register(R31, bv64), 16bv64))
      LocalAssign(Register(R19, bv64) := MemoryLoad(Memory("mem", 64, 8), [LocalVar(#13, bv64)]))
      LocalAssign(Register(R20, bv64) := MemoryLoad(Memory("mem", 64, 8), [BinaryExpr("add", LocalVar(#13, bv64), 8bv64)]))
      LocalAssign(LocalVar(#14, bv64) := BinaryExpr("add", Register(R31, bv64), 32bv64))
      LocalAssign(Register(R21, bv64) := MemoryLoad(Memory("mem", 64, 8), [LocalVar(#14, bv64)]))
      LocalAssign(Register(R22, bv64) := MemoryLoad(Memory("mem", 64, 8), [BinaryExpr("add", LocalVar(#14, bv64), 8bv64)]))
      LocalAssign(LocalVar(#15, bv64) := BinaryExpr("add", Register(R31, bv64), 48bv64))
      LocalAssign(Register(R23, bv64) := MemoryLoad(Memory("mem", 64, 8), [LocalVar(#15, bv64)]))
      LocalAssign(Register(R24, bv64) := MemoryLoad(Memory("mem", 64, 8), [BinaryExpr("add", LocalVar(#15, bv64), 8bv64)]))
      LocalAssign(Register(R29, bv64) := MemoryLoad(Memory("mem", 64, 8), [Register(R31, bv64)]))
      LocalAssign(Register(R30, bv64) := MemoryLoad(Memory("mem", 64, 8), [BinaryExpr("add", Register(R31, bv64), 8bv64)]))
      LocalAssign(Register(R31, bv64) := BinaryExpr("add", Register(R31, bv64), 64bv64))
    ),
    jumps(
    IndirectCall(Register(R30, bv64), ))
  )
  Block("?:l0000046e_goto_l0000048c",
    statements(
      BinaryExpr("!=", BinaryExpr("comp", LocalVar(ZF, bv1), 1bv1), 0bv1)
    ),
    jumps(
    GoTo("1992:l0000048c"))
  )
  Block("?:l0000046e_goto_l000004dd",
    statements(
      BinaryExpr("==", BinaryExpr("comp", LocalVar(ZF, bv1), 1bv1), 0bv1)
    ),
    jumps(
    GoTo("1952:l000004dd"))
  )
  Block("?:l00000512_goto_l000004ea",
    statements(
      BinaryExpr("!=", UnaryExpr("not", BinaryExpr("comp", LocalVar(ZF, bv1), 1bv1)), 0bv1)
    ),
    jumps(
    GoTo("1960:l000004ea"))
  )
  Block("?:l00000512_goto_l0000048c",
    statements(
      BinaryExpr("==", UnaryExpr("not", BinaryExpr("comp", LocalVar(ZF, bv1), 1bv1)), 0bv1)
    ),
    jumps(
    GoTo("1992:l0000048c"))
  )
)),
Procedure("1504:__libc_start_main", in(Parameter(Register(R0, bv64)), Parameter(Register(R1, bv64)), Parameter(Register(R2, bv64)), Parameter(Register(R3, bv64))), out(Parameter(Register(R2, bv64)), Parameter(Register(R3, bv64)), Parameter(Register(R0, bv64))), blocks(
  Block("1504:l__libc_start_main",
    statements(
      LocalAssign(Register(R16, bv64) := 65536bv64)
      LocalAssign(Register(R17, bv64) := MemoryLoad(Memory("mem", 64, 8), [BinaryExpr("add", Register(R16, bv64), 4008bv64)]))
      LocalAssign(Register(R16, bv64) := BinaryExpr("add", Register(R16, bv64), 4008bv64))
    ),
    jumps(
    IndirectCall(Register(R17, bv64), ))
  )
)),
Procedure("2020:_fini", in(), out(Parameter(Register(R0, bv64))), blocks(
  Block("2020:l_fini",
    statements(
      LocalAssign(LocalVar(#0, bv64) := BinaryExpr("add", Register(R31, bv64), 18446744073709551600bv64))
      MemoryAssign(MemoryStore(Memory("mem", 64, 8)[LocalVar(#0, bv64)] := Register(R29, bv64)))
      MemoryAssign(MemoryStore(Memory("mem", 64, 8)[BinaryExpr("add", LocalVar(#0, bv64), 8bv64)] := Register(R30, bv64)))
      LocalAssign(Register(R31, bv64) := LocalVar(#0, bv64))
      LocalAssign(Register(R29, bv64) := Register(R31, bv64))
      LocalAssign(Register(R29, bv64) := MemoryLoad(Memory("mem", 64, 8), [Register(R31, bv64)]))
      LocalAssign(Register(R30, bv64) := MemoryLoad(Memory("mem", 64, 8), [BinaryExpr("add", Register(R31, bv64), 8bv64)]))
      LocalAssign(Register(R31, bv64) := BinaryExpr("add", Register(R31, bv64), 16bv64))
    ),
    jumps(
    IndirectCall(Register(R30, bv64), ))
  )
)),
Procedure("1432:_init", in(), out(Parameter(Register(R0, bv64))), blocks(
  Block("1432:l_init",
    statements(
      LocalAssign(LocalVar(#19, bv64) := BinaryExpr("add", Register(R31, bv64), 18446744073709551600bv64))
      MemoryAssign(MemoryStore(Memory("mem", 64, 8)[LocalVar(#19, bv64)] := Register(R29, bv64)))
      MemoryAssign(MemoryStore(Memory("mem", 64, 8)[BinaryExpr("add", LocalVar(#19, bv64), 8bv64)] := Register(R30, bv64)))
      LocalAssign(Register(R31, bv64) := LocalVar(#19, bv64))
      LocalAssign(Register(R29, bv64) := Register(R31, bv64))
      LocalAssign(Register(R30, bv64) := 1444bv64)
    ),
    jumps(
    DirectCall("1608:call_weak_fn", ))
  )
  Block("1444:l0000078c",
    statements(
      LocalAssign(Register(R29, bv64) := MemoryLoad(Memory("mem", 64, 8), [Register(R31, bv64)]))
      LocalAssign(Register(R30, bv64) := MemoryLoad(Memory("mem", 64, 8), [BinaryExpr("add", Register(R31, bv64), 8bv64)]))
      LocalAssign(Register(R31, bv64) := BinaryExpr("add", Register(R31, bv64), 16bv64))
    ),
    jumps(
    IndirectCall(Register(R30, bv64), ))
  )
)),
Procedure("1552:_start", in(), out(Parameter(Register(R0, bv64))), blocks(
  Block("1552:l_start",
    statements(
      LocalAssign(Register(R29, bv64) := 0bv64)
      LocalAssign(Register(R30, bv64) := 0bv64)
      LocalAssign(Register(R5, bv64) := Register(R0, bv64))
      LocalAssign(Register(R1, bv64) := MemoryLoad(Memory("mem", 64, 8), [Register(R31, bv64)]))
      LocalAssign(Register(R2, bv64) := BinaryExpr("add", Register(R31, bv64), 8bv64))
      LocalAssign(Register(R6, bv64) := Register(R31, bv64))
      LocalAssign(Register(R0, bv64) := 65536bv64)
      LocalAssign(Register(R0, bv64) := MemoryLoad(Memory("mem", 64, 8), [BinaryExpr("add", Register(R0, bv64), 4080bv64)]))
      LocalAssign(Register(R3, bv64) := 65536bv64)
      LocalAssign(Register(R3, bv64) := MemoryLoad(Memory("mem", 64, 8), [BinaryExpr("add", Register(R3, bv64), 4072bv64)]))
      LocalAssign(Register(R4, bv64) := 65536bv64)
      LocalAssign(Register(R4, bv64) := MemoryLoad(Memory("mem", 64, 8), [BinaryExpr("add", Register(R4, bv64), 4040bv64)]))
      LocalAssign(Register(R30, bv64) := 1604bv64)
    ),
    jumps(
    DirectCall("1504:__libc_start_main", ))
  )
  Block("1604:l00000288",
    statements(
      LocalAssign(Register(R30, bv64) := 1608bv64)
    ),
    jumps(
    DirectCall("1536:abort", ))
  )
  Block("?:l00000842",
    statements(
    ),
    jumps(
    DirectCall("1608:call_weak_fn", ))
  )
)),
Procedure("1536:abort", in(), out(), blocks(
  Block("1536:labort",
    statements(
      LocalAssign(Register(R16, bv64) := 65536bv64)
      LocalAssign(Register(R17, bv64) := MemoryLoad(Memory("mem", 64, 8), [BinaryExpr("add", Register(R16, bv64), 4024bv64)]))
      LocalAssign(Register(R16, bv64) := BinaryExpr("add", Register(R16, bv64), 4024bv64))
    ),
    jumps(
    IndirectCall(Register(R17, bv64), ))
  )
)),
Procedure("1608:call_weak_fn", in(), out(Parameter(Register(R0, bv64))), blocks(
  Block("1608:lcall_weak_fn",
    statements(
      LocalAssign(Register(R0, bv64) := 65536bv64)
      LocalAssign(Register(R0, bv64) := MemoryLoad(Memory("mem", 64, 8), [BinaryExpr("add", Register(R0, bv64), 4064bv64)]))
    ),
    jumps(
    GoTo("?:lcall_weak_fn_goto_l0000029e", "?:lcall_weak_fn_goto_l000005e2"))
  )
  Block("1624:l0000029e",
    statements(
    ),
    jumps(
    IndirectCall(Register(R30, bv64), ))
  )
  Block("1620:l000005e2",
    statements(
    ),
    jumps(
    GoTo("1520:l__gmon_start__"))
  )
  Block("1520:l__gmon_start__",
    statements(
      LocalAssign(Register(R16, bv64) := 65536bv64)
      LocalAssign(Register(R17, bv64) := MemoryLoad(Memory("mem", 64, 8), [BinaryExpr("add", Register(R16, bv64), 4016bv64)]))
      LocalAssign(Register(R16, bv64) := BinaryExpr("add", Register(R16, bv64), 4016bv64))
    ),
    jumps(
    IndirectCall(Register(R17, bv64), ))
  )
  Block("?:lcall_weak_fn_goto_l0000029e",
    statements(
      BinaryExpr("!=", BinaryExpr("comp", Register(R0, bv64), 0bv64), 0bv1)
    ),
    jumps(
    GoTo("1624:l0000029e"))
  )
  Block("?:lcall_weak_fn_goto_l000005e2",
    statements(
      BinaryExpr("==", BinaryExpr("comp", Register(R0, bv64), 0bv64), 0bv1)
    ),
    jumps(
    GoTo("1620:l000005e2"))
  )
)),
Procedure("1632:deregister_tm_clones", in(), out(Parameter(Register(R0, bv64))), blocks(
  Block("1632:lderegister_tm_clones",
    statements(
      LocalAssign(Register(R0, bv64) := 69632bv64)
      LocalAssign(Register(R0, bv64) := BinaryExpr("add", Register(R0, bv64), 16bv64))
      LocalAssign(Register(R1, bv64) := 69632bv64)
      LocalAssign(Register(R1, bv64) := BinaryExpr("add", Register(R1, bv64), 16bv64))
      LocalAssign(LocalVar(#1, bv64) := UnaryExpr("not", Register(R0, bv64)))
      LocalAssign(LocalVar(#2, bv64) := BinaryExpr("add", BinaryExpr("add", Register(R1, bv64), UnaryExpr("not", Register(R0, bv64))), 1bv64))
      LocalAssign(LocalVar(VF, bv1) := UnaryExpr("not", BinaryExpr("comp", SignExtend(LocalVar(#2, bv64), 1), BinaryExpr("add", BinaryExpr("add", SignExtend(Register(R1, bv64), 1), SignExtend(LocalVar(#1, bv64), 1)), 1bv65))))
      LocalAssign(LocalVar(CF, bv1) := UnaryExpr("not", BinaryExpr("comp", ZeroExtend(LocalVar(#2, bv64), 1), BinaryExpr("add", BinaryExpr("add", ZeroExtend(Register(R1, bv64), 1), ZeroExtend(LocalVar(#1, bv64), 1)), 1bv65))))
      LocalAssign(LocalVar(ZF, bv1) := BinaryExpr("comp", LocalVar(#2, bv64), 0bv64))
      LocalAssign(LocalVar(NF, bv1) := Extract(LocalVar(#2, bv64)[64:63]))
    ),
    jumps(
    GoTo("?:lderegister_tm_clones_goto_l000002e1", "?:lderegister_tm_clones_goto_l000005c4"))
  )
  Block("1656:l000005c4",
    statements(
      LocalAssign(Register(R1, bv64) := 65536bv64)
      LocalAssign(Register(R1, bv64) := MemoryLoad(Memory("mem", 64, 8), [BinaryExpr("add", Register(R1, bv64), 4048bv64)]))
    ),
    jumps(
    GoTo("?:l000005c4_goto_l000002e1", "?:l000005c4_goto_l000005d7"))
  )
  Block("1676:l000002e1",
    statements(
    ),
    jumps(
    IndirectCall(Register(R30, bv64), ))
  )
  Block("1668:l000005d7",
    statements(
      LocalAssign(Register(R16, bv64) := Register(R1, bv64))
    ),
    jumps(
    IndirectCall(Register(R16, bv64), ))
  )
  Block("?:lderegister_tm_clones_goto_l000002e1",
    statements(
      BinaryExpr("!=", BinaryExpr("comp", LocalVar(ZF, bv1), 1bv1), 0bv1)
    ),
    jumps(
    GoTo("1676:l000002e1"))
  )
  Block("?:lderegister_tm_clones_goto_l000005c4",
    statements(
      BinaryExpr("==", BinaryExpr("comp", LocalVar(ZF, bv1), 1bv1), 0bv1)
    ),
    jumps(
    GoTo("1656:l000005c4"))
  )
  Block("?:l000005c4_goto_l000002e1",
    statements(
      BinaryExpr("!=", BinaryExpr("comp", Register(R1, bv64), 0bv64), 0bv1)
    ),
    jumps(
    GoTo("1676:l000002e1"))
  )
  Block("?:l000005c4_goto_l000005d7",
    statements(
      BinaryExpr("==", BinaryExpr("comp", Register(R1, bv64), 0bv64), 0bv1)
    ),
    jumps(
    GoTo("1668:l000005d7"))
  )
)),
Procedure("1816:frame_dummy", in(), out(Parameter(Register(R0, bv64))), blocks(
  Block("1816:lframe_dummy",
    statements(
    ),
    jumps(
    DirectCall("1680:register_tm_clones", ))
  )
)),
Procedure("1876:get_two", in(), out(Parameter(Register(R0, bv64))), blocks(
  Block("1876:lget_two",
    statements(
      LocalAssign(Register(R0, bv64) := 2bv64)
    ),
    jumps(
    IndirectCall(Register(R30, bv64), ))
  )
)),
Procedure("1820:main", in(Parameter(Register(R0, bv64)), Parameter(Register(R1, bv64))), out(Parameter(Register(R1, bv64)), Parameter(Register(R0, bv64))), blocks(
  Block("1820:lmain",
    statements(
      LocalAssign(LocalVar(#6, bv64) := BinaryExpr("add", Register(R31, bv64), 18446744073709551600bv64))
      MemoryAssign(MemoryStore(Memory("mem", 64, 8)[LocalVar(#6, bv64)] := Register(R29, bv64)))
      MemoryAssign(MemoryStore(Memory("mem", 64, 8)[BinaryExpr("add", LocalVar(#6, bv64), 8bv64)] := Register(R30, bv64)))
      LocalAssign(Register(R31, bv64) := LocalVar(#6, bv64))
      LocalAssign(Register(R29, bv64) := Register(R31, bv64))
      LocalAssign(Register(R0, bv64) := 69632bv64)
      LocalAssign(Register(R0, bv64) := BinaryExpr("add", Register(R0, bv64), 20bv64))
      LocalAssign(Register(R1, bv64) := 1bv64)
      MemoryAssign(MemoryStore(Memory("mem", 64, 8)[Register(R0, bv64)] := Extract(Register(R1, bv64)[32:0])))
      LocalAssign(Register(R30, bv64) := 1848bv64)
    ),
    jumps(
    DirectCall("1876:get_two", ))
  )
  Block("1848:l00000538",
    statements(
      LocalAssign(Register(R1, bv64) := ZeroExtend(Extract(Register(R0, bv64)[32:0]), 32))
      LocalAssign(Register(R0, bv64) := 69632bv64)
      LocalAssign(Register(R0, bv64) := BinaryExpr("add", Register(R0, bv64), 24bv64))
      MemoryAssign(MemoryStore(Memory("mem", 64, 8)[Register(R0, bv64)] := Extract(Register(R1, bv64)[32:0])))
      LocalAssign(Register(R0, bv64) := 0bv64)
      LocalAssign(Register(R29, bv64) := MemoryLoad(Memory("mem", 64, 8), [Register(R31, bv64)]))
      LocalAssign(Register(R30, bv64) := MemoryLoad(Memory("mem", 64, 8), [BinaryExpr("add", Register(R31, bv64), 8bv64)]))
      LocalAssign(Register(R31, bv64) := BinaryExpr("add", Register(R31, bv64), 16bv64))
    ),
    jumps(
    IndirectCall(Register(R30, bv64), ))
  )
)),
Procedure("1680:register_tm_clones", in(), out(Parameter(Register(R0, bv64))), blocks(
  Block("1680:lregister_tm_clones",
    statements(
      LocalAssign(Register(R0, bv64) := 69632bv64)
      LocalAssign(Register(R0, bv64) := BinaryExpr("add", Register(R0, bv64), 16bv64))
      LocalAssign(Register(R1, bv64) := 69632bv64)
      LocalAssign(Register(R1, bv64) := BinaryExpr("add", Register(R1, bv64), 16bv64))
      LocalAssign(Register(R1, bv64) := BinaryExpr("add", BinaryExpr("add", Register(R1, bv64), UnaryExpr("not", Register(R0, bv64))), 1bv64))
      LocalAssign(Register(R2, bv64) := BinaryExpr("++", 0bv63, Extract(BinaryExpr("or", BinaryExpr("lshr", Register(R1, bv64), ZeroExtend(63bv7, 57)), BinaryExpr("shl", Register(R1, bv64), ZeroExtend(1bv2, 62)))[1:0])))
      LocalAssign(Register(R1, bv64) := BinaryExpr("add", Register(R2, bv64), BinaryExpr("ashr", Register(R1, bv64), ZeroExtend(3bv3, 61))))
      LocalAssign(LocalVar(#3, bv64) := UnaryExpr("not", BinaryExpr("ashr", Register(R1, bv64), ZeroExtend(1bv2, 62))))
      LocalAssign(LocalVar(#4, bv64) := BinaryExpr("add", UnaryExpr("not", BinaryExpr("ashr", Register(R1, bv64), ZeroExtend(1bv2, 62))), 1bv64))
      LocalAssign(LocalVar(VF, bv1) := UnaryExpr("not", BinaryExpr("comp", SignExtend(LocalVar(#4, bv64), 1), BinaryExpr("add", SignExtend(LocalVar(#3, bv64), 1), 1bv65))))
      LocalAssign(LocalVar(CF, bv1) := UnaryExpr("not", BinaryExpr("comp", ZeroExtend(LocalVar(#4, bv64), 1), BinaryExpr("add", ZeroExtend(LocalVar(#3, bv64), 1), 1bv65))))
      LocalAssign(LocalVar(ZF, bv1) := BinaryExpr("comp", LocalVar(#4, bv64), 0bv64))
      LocalAssign(LocalVar(NF, bv1) := Extract(LocalVar(#4, bv64)[64:63]))
      LocalAssign(Register(R1, bv64) := BinaryExpr("++", Extract(BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", BinaryExpr("++", Extract(Register(R1, bv64)[64:63]), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63])), Extract(Register(R1, bv64)[64:63]))[64:63]), Extract(BinaryExpr("or", BinaryExpr("lshr", Register(R1, bv64), ZeroExtend(1bv2, 62)), BinaryExpr("shl", Register(R1, bv64), ZeroExtend(63bv7, 57)))[63:0])))
    ),
    jumps(
    GoTo("?:lregister_tm_clones_goto_l0000033c", "?:lregister_tm_clones_goto_l000005a6"))
  )
  Block("1720:l000005a6",
    statements(
      LocalAssign(Register(R2, bv64) := 65536bv64)
      LocalAssign(Register(R2, bv64) := MemoryLoad(Memory("mem", 64, 8), [BinaryExpr("add", Register(R2, bv64), 4088bv64)]))
    ),
    jumps(
    GoTo("?:l000005a6_goto_l0000033c", "?:l000005a6_goto_l000005b9"))
  )
  Block("1740:l0000033c",
    statements(
    ),
    jumps(
    IndirectCall(Register(R30, bv64), ))
  )
  Block("1732:l000005b9",
    statements(
      LocalAssign(Register(R16, bv64) := Register(R2, bv64))
    ),
    jumps(
    IndirectCall(Register(R16, bv64), ))
  )
  Block("?:lregister_tm_clones_goto_l0000033c",
    statements(
      BinaryExpr("!=", BinaryExpr("comp", LocalVar(ZF, bv1), 1bv1), 0bv1)
    ),
    jumps(
    GoTo("1740:l0000033c"))
  )
  Block("?:lregister_tm_clones_goto_l000005a6",
    statements(
      BinaryExpr("==", BinaryExpr("comp", LocalVar(ZF, bv1), 1bv1), 0bv1)
    ),
    jumps(
    GoTo("1720:l000005a6"))
  )
  Block("?:l000005a6_goto_l0000033c",
    statements(
      BinaryExpr("!=", BinaryExpr("comp", Register(R2, bv64), 0bv64), 0bv1)
    ),
    jumps(
    GoTo("1740:l0000033c"))
  )
  Block("?:l000005a6_goto_l000005b9",
    statements(
      BinaryExpr("==", BinaryExpr("comp", Register(R2, bv64), 0bv64), 0bv1)
    ),
    jumps(
    GoTo("1732:l000005b9"))
  )
)),