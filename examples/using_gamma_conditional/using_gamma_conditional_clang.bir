00000851: program
00000835: sub __cxa_finalize(__cxa_finalize_result)
00000852: __cxa_finalize_result :: out u32 = low:32[R0]

000005a3:
00000684: R16 := 0x11000
0000068b: R17 := mem[R16, el]:u64
00000691: R16 := R16
00000696: call R17 with noreturn

00000836: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
00000853: __do_global_dtors_aux_result :: out u32 = low:32[R0]

00000342:
00000346: #5 := R31 - 0x20
0000034c: mem := mem with [#5, el]:u64 <- R29
00000352: mem := mem with [#5 + 8, el]:u64 <- R30
00000356: R31 := #5
0000035c: R29 := R31
00000364: mem := mem with [R31 + 0x10, el]:u64 <- R19
00000369: R19 := 0x11000
00000370: R0 := pad:64[mem[R19 + 0x30]]
00000377: when 31:0[R0] <> 0 goto %00000375
00000837: goto %0000056c

0000056c:
0000056f: R0 := 0x10000
00000576: R0 := mem[R0 + 0xFC0, el]:u64
0000057c: when R0 = 0 goto %0000057a
00000838: goto %00000593

00000593:
00000596: R0 := 0x11000
0000059d: R0 := mem[R0 + 0x28, el]:u64
000005a2: R30 := 0x700
000005a5: call @__cxa_finalize with return %0000057a

0000057a:
00000582: R30 := 0x704
00000584: call @deregister_tm_clones with return %00000586

00000586:
00000589: R0 := 1
00000591: mem := mem with [R19 + 0x30] <- 7:0[R0]
00000839: goto %00000375

00000375:
0000037f: R19 := mem[R31 + 0x10, el]:u64
00000386: R29 := mem[R31, el]:u64
0000038b: R30 := mem[R31 + 8, el]:u64
0000038f: R31 := R31 + 0x20
00000394: call R30 with noreturn

0000083a: sub __libc_csu_fini(__libc_csu_fini_result)
00000854: __libc_csu_fini_result :: out u32 = low:32[R0]

000004fd:
00000500: call R30 with noreturn

0000083b: sub __libc_csu_init(__libc_csu_init_result)
00000855: __libc_csu_init_result :: out u32 = low:32[R0]

0000040a:
0000040e: #7 := R31 - 0x40
00000414: mem := mem with [#7, el]:u64 <- R29
0000041a: mem := mem with [#7 + 8, el]:u64 <- R30
0000041e: R31 := #7
00000424: R29 := R31
0000042a: #8 := R31 + 0x10
00000430: mem := mem with [#8, el]:u64 <- R19
00000436: mem := mem with [#8 + 8, el]:u64 <- R20
0000043b: R20 := 0x10000
00000441: R20 := R20 + 0xDC0
00000447: #9 := R31 + 0x20
0000044d: mem := mem with [#9, el]:u64 <- R21
00000453: mem := mem with [#9 + 8, el]:u64 <- R22
00000458: R21 := 0x10000
0000045e: R21 := R21 + 0xDB8
00000465: R20 := R20 + ~R21 + 1
0000046b: R22 := pad:64[31:0[R0]]
00000471: #10 := R31 + 0x30
00000477: mem := mem with [#10, el]:u64 <- R23
0000047d: mem := mem with [#10 + 8, el]:u64 <- R24
00000483: R23 := R1
00000489: R24 := R2
0000048e: R30 := 0x798
00000491: call @_init with return %00000493

00000493:
00000497: #11 := ~(R20 ~>> 3)
0000049b: #12 := ~(R20 ~>> 3) + 1
000004a0: VF := extend:65[#12] <> extend:65[#11] + 1
000004a5: CF := pad:65[#12] <> pad:65[#11] + 1
000004a9: ZF := #12 = 0
000004ad: NF := 63:63[#12]
000004b3: when ZF goto %000004b1
0000083c: goto %00000502

00000502:
00000508: R20 :=

          >> 3 | R20 << 0x3D]
0000050d: R19 := 0
0000083d: goto %0000050f

0000050f:
00000515: R3 := mem[R21 + (60:0[R19].0), el]:u64
0000051b: R2 := R24
00000521: R19 := R19 + 1
00000527: R1 := R23
0000052d: R0 := pad:64[31:0[R22]]
00000532: R30 := 0x7C0
00000535: call R3 with return %00000537

00000537:
0000053b: #16 := ~R19
00000540: #17 := R20 + ~R19 + 1
00000546: VF := extend:65[#17] <> extend:65[R20] + extend:65[#16] + 1
0000054c: CF := pad:65[#17] <> pad:65[R20] + pad:65[#16] + 1
00000550: ZF := #17 = 0
00000554: NF := 63:63[#17]
00000559: when ZF <> 1 goto %0000050f
0000083e: goto %000004b1

000004b1:
000004ba: #13 := R31 + 0x10
000004bf: R19 := mem[#13, el]:u64
000004c4: R20 := mem[#13 + 8, el]:u64
000004ca: #14 := R31 + 0x20
000004cf: R21 := mem[#14, el]:u64
000004d4: R22 := mem[#14 + 8, el]:u64
000004da: #15 := R31 + 0x30
000004df: R23 := mem[#15, el]:u64
000004e4: R24 := mem[#15 + 8, el]:u64
000004eb: R29 := mem[R31, el]:u64
000004f0: R30 := mem[R31 + 8, el]:u64
000004f4: R31 := R31 + 0x40
000004f9: call R30 with noreturn

0000083f: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
00000856: __libc_start_main_main :: in u64 = R0
00000857: __libc_start_main_arg2 :: in u32 = low:32[R1]
00000858: __libc_start_main_arg3 :: in out u64 = R2
00000859: __libc_start_main_auxv :: in out u64 = R3
0000085a: __libc_start_main_result :: out u32 = low:32[R0]

00000280:
0000069a: R16 := 0x11000
000006a1: R17 := mem[R16 + 8, el]:u64
000006a7: R16 := R16 + 8
000006ac: call R17 with noreturn

00000840: sub _fini(_fini_result)
0000085b: _fini_result :: out u32 = low:32[R0]

0000002e:
00000032: #0 := R31 - 0x10
00000038: mem := mem with [#0, el]:u64 <- R29
0000003e: mem := mem with [#0 + 8, el]:u64 <- R30
00000042: R31 := #0
00000048: R29 := R31
0000004f: R29 := mem[R31, el]:u64
00000054: R30 := mem[R31 + 8, el]:u64
00000058: R31 := R31 + 0x10
0000005d: call R30 with noreturn

00000841: sub _init(_init_result)
0000085c: _init_result :: out u32 = low:32[R0]

0000048f:
0000076e: #19 := R31 - 0x10
00000774: mem := mem with [#19, el]:u64 <- R29
0000077a: mem := mem with [#19 + 8, el]:u64 <- R30
0000077e: R31 := #19
00000784: R29 := R31
00000789: R30 := 0x5A4
0000078b: call @call_weak_fn with return %0000078d

0000078d:
00000792: R29 := mem[R31, el]:u64
00000797: R30 := mem[R31 + 8, el]:u64
0000079b: R31 := R31 + 0x10
000007a0: call R30 with noreturn

00000842: sub _start(_start_result)
0000085d: _start_result :: out u32 = low:32[R0]

00000235:
00000238: R29 := 0
0000023d: R30 := 0
00000243: R5 := R0
0000024a: R1 := mem[R31, el]:u64
00000250: R2 := R31 + 8
00000256: R6 := R31
0000025b: R0 := 0x10000
00000262: R0 := mem[R0 + 0xFD8, el]:u64
00000267: R3 := 0x10000
0000026e: R3 := mem[R3 + 0xFD0, el]:u64
00000273: R4 := 0x10000
0000027a: R4 := mem[R4 + 0xFB0, el]:u64
0000027f: R30 := 0x644
00000282: call @__libc_start_main with return %00000284

00000284:
00000287: R30 := 0x648
0000028a: call @abort with return %00000843

00000843:
00000844: call @call_weak_fn with noreturn

00000845: sub abort()


00000288:
000006c6: R16 := 0x11000
000006cd: R17 := mem[R16 + 0x18, el]:u64
000006d3: R16 := R16 + 0x18
000006d8: call R17 with noreturn

00000846: sub call_weak_fn(call_weak_fn_result)
0000085e: call_weak_fn_result :: out u32 = low:32[R0]

0000028c:
0000028f: R0 := 0x10000
00000296: R0 := mem[R0 + 0xFC8, el]:u64
0000029c: when R0 = 0 goto %0000029a
00000847: goto %000005e3

0000029a:
000002a2: call R30 with noreturn

000005e3:
000005e6: goto @__gmon_start__

000005e4:
000006b0: R16 := 0x11000
000006b7: R17 := mem[R16 + 0x10, el]:u64
000006bd: R16 := R16 + 0x10
000006c2: call R17 with noreturn

00000848: sub deregister_tm_clones(deregister_tm_clones_result)
0000085f: deregister_tm_clones_result :: out u32 = low:32[R0]

000002a6:
000002a9: R0 := 0x11000
000002af: R0 := R0 + 0x30
000002b4: R1 := 0x11000
000002ba: R1 := R1 + 0x30
000002c0: #1 := ~R0
000002c5: #2 := R1 + ~R0 + 1
000002cb: VF := extend:65[#2] <> extend:65[R1] + extend:65[#1] + 1
000002d1: CF := pad:65[#2] <> pad:65[R1] + pad:65[#1] + 1
000002d5: ZF := #2 = 0
000002d9: NF := 63:63[#2]
000002df: when ZF goto %000002dd
00000849: goto %000005c5

000005c5:
000005c8: R1 := 0x10000
000005cf: R1 := mem[R1 + 0xFB8, el]:u64
000005d4: when R1 = 0 goto %000002dd
0000084a: goto %000005d8

000002dd:
000002e5: call R30 with noreturn

000005d8:
000005dc: R16 := R1
000005e1: call R16 with noreturn

0000084b: sub frame_dummy(frame_dummy_result)
00000860: frame_dummy_result :: out u32 = low:32[R0]

00000396:
00000398: call @register_tm_clones with noreturn

0000084c: sub main(main_argc, main_argv, main_result)
00000861: main_argc :: in u32 = low:32[R0]
00000862: main_argv :: in out u64 = R1
00000863: main_result :: out u32 = low:32[R0]

0000039a:
0000039e: R31 := R31 - 0x10
000003a5: mem := mem with [R31 + 0xC, el]:u32 <- 0
000003aa: R8 := 0x11000
000003b1: R8 := pad:64[mem[R8 + 0x34, el]:u32]
000003b7: #6 := 31:0[R8] + 0
000003bc: VF := extend:33[#6] <> extend:33[31:0[R8]] + 0
000003c1: CF := pad:33[#6] <> pad:33[31:0[R8]] - 0x100000000
000003c5: ZF := #6 = 0
000003c9: NF := 31:31[#6]
000003cd: R8 := pad:64[#6]
000003d9: when ZF <> 1 goto %000003d2
000003da: goto %000003d5

000003d5:
000003d6: R8 := 1
000003dc: goto %000003d8

000003d2:
000003d3: R8 := 0
000003db: goto %000003d8

000003d8:
000003e2: when 0:0[R8] goto %000003e0
0000084d: goto %0000055d

000003e0:
000003e8: R8 := 1
000003f0: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R8]
000003f5: goto %000003f3

0000055d:
00000560: goto %0000055e

0000055e:
00000566: mem := mem with [R31 + 0xC, el]:u32 <- 0
0000056a: goto %000003f3

000003f3:
000003fb: R0 := pad:64[mem[R31 + 0xC, el]:u32]
00000401: R31 := R31 + 0x10
00000406: call R30 with noreturn

0000084e: sub register_tm_clones(register_tm_clones_result)
00000864: register_tm_clones_result :: out u32 = low:32[R0]

000002e7:
000002ea: R0 := 0x11000
000002f0: R0 := R0 + 0x30
000002f5: R1 := 0x11000
000002fb: R1 := R1 + 0x30
00000302: R1 := R1 + ~R0 + 1
00000309: R2 := 0.0:0[R1 >> 0x3F | R1 << 1]
00000310: R1 := R2 + (R1 ~>> 3)
00000316: #3 := ~(R1 ~>> 1)
0000031a: #4 := ~(R1 ~>> 1) + 1
0000031f: VF := extend:65[#4] <> extend:65[#3] + 1
00000324: CF := pad:65[#4] <> pad:65[#3] + 1
00000328: ZF := #4 = 0
0000032c: NF := 63:63[#4]
00000334: R1 :=

          >> 1 | R1 << 0x3F]
0000033a: when ZF goto %00000338
0000084f: goto %000005a7

000005a7:
000005aa: R2 := 0x10000
000005b1: R2 := mem[R2 + 0xFE0, el]:u64
000005b6: when R2 = 0 goto %00000338
00000850: goto %000005ba

00000338:
00000340: call R30 with noreturn

000005ba:
000005be: R16 := R2
000005c3: call R16 with noreturn
