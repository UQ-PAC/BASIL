00000833: program
00000816: sub __cxa_finalize(__cxa_finalize_result)
00000834: __cxa_finalize_result :: out u32 = low:32[R0]

00000588:
00000669: R16 := 0x10000
00000670: R17 := mem[R16 + 0xFA0, el]:u64
00000676: R16 := R16 + 0xFA0
0000067b: call R17 with noreturn

00000817: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
00000835: __do_global_dtors_aux_result :: out u32 = low:32[R0]

0000033a:
0000033e: #5 := R31 - 0x20
00000344: mem := mem with [#5, el]:u64 <- R29
0000034a: mem := mem with [#5 + 8, el]:u64 <- R30
0000034e: R31 := #5
00000354: R29 := R31
0000035c: mem := mem with [R31 + 0x10, el]:u64 <- R19
00000361: R19 := 0x11000
00000368: R0 := pad:64[mem[R19 + 0x10]]
0000036f: when 31:0[R0] <> 0 goto %0000036d
00000818: goto %00000551

00000551:
00000554: R0 := 0x10000
0000055b: R0 := mem[R0 + 0xFD8, el]:u64
00000561: when R0 = 0 goto %0000055f
00000819: goto %00000578

00000578:
0000057b: R0 := 0x11000
00000582: R0 := mem[R0 + 8, el]:u64
00000587: R30 := 0x700
0000058a: call @__cxa_finalize with return %0000055f

0000055f:
00000567: R30 := 0x704
00000569: call @deregister_tm_clones with return %0000056b

0000056b:
0000056e: R0 := 1
00000576: mem := mem with [R19 + 0x10] <- 7:0[R0]
0000081a: goto %0000036d

0000036d:
00000377: R19 := mem[R31 + 0x10, el]:u64
0000037e: R29 := mem[R31, el]:u64
00000383: R30 := mem[R31 + 8, el]:u64
00000387: R31 := R31 + 0x20
0000038c: call R30 with noreturn

0000081b: sub __libc_csu_fini(__libc_csu_fini_result)
00000836: __libc_csu_fini_result :: out u32 = low:32[R0]

000004d7:
000004da: call R30 with noreturn

0000081c: sub __libc_csu_init(__libc_csu_init_result)
00000837: __libc_csu_init_result :: out u32 = low:32[R0]

000003e4:
000003e8: #7 := R31 - 0x40
000003ee: mem := mem with [#7, el]:u64 <- R29
000003f4: mem := mem with [#7 + 8, el]:u64 <- R30
000003f8: R31 := #7
000003fe: R29 := R31
00000404: #8 := R31 + 0x10
0000040a: mem := mem with [#8, el]:u64 <- R19
00000410: mem := mem with [#8 + 8, el]:u64 <- R20
00000415: R20 := 0x10000
0000041b: R20 := R20 + 0xD90
00000421: #9 := R31 + 0x20
00000427: mem := mem with [#9, el]:u64 <- R21
0000042d: mem := mem with [#9 + 8, el]:u64 <- R22
00000432: R21 := 0x10000
00000438: R21 := R21 + 0xD88
0000043f: R20 := R20 + ~R21 + 1
00000445: R22 := pad:64[31:0[R0]]
0000044b: #10 := R31 + 0x30
00000451: mem := mem with [#10, el]:u64 <- R23
00000457: mem := mem with [#10 + 8, el]:u64 <- R24
0000045d: R23 := R1
00000463: R24 := R2
00000468: R30 := 0x790
0000046b: call @_init with return %0000046d

0000046d:
00000471: #11 := ~(R20 ~>> 3)
00000475: #12 := ~(R20 ~>> 3) + 1
0000047a: VF := extend:65[#12] <> extend:65[#11] + 1
0000047f: CF := pad:65[#12] <> pad:65[#11] + 1
00000483: ZF := #12 = 0
00000487: NF := 63:63[#12]
0000048d: when ZF goto %0000048b
0000081d: goto %000004dc

000004dc:
000004e2: R20 :=

          >> 3 | R20 << 0x3D]
000004e7: R19 := 0
0000081e: goto %000004e9

000004e9:
000004ef: R3 := mem[R21 + (60:0[R19].0), el]:u64
000004f5: R2 := R24
000004fb: R19 := R19 + 1
00000501: R1 := R23
00000507: R0 := pad:64[31:0[R22]]
0000050c: R30 := 0x7B8
0000050f: call R3 with return %00000511

00000511:
00000515: #16 := ~R19
0000051a: #17 := R20 + ~R19 + 1
00000520: VF := extend:65[#17] <> extend:65[R20] + extend:65[#16] + 1
00000526: CF := pad:65[#17] <> pad:65[R20] + pad:65[#16] + 1
0000052a: ZF := #17 = 0
0000052e: NF := 63:63[#17]
00000533: when ZF <> 1 goto %000004e9
0000081f: goto %0000048b

0000048b:
00000494: #13 := R31 + 0x10
00000499: R19 := mem[#13, el]:u64
0000049e: R20 := mem[#13 + 8, el]:u64
000004a4: #14 := R31 + 0x20
000004a9: R21 := mem[#14, el]:u64
000004ae: R22 := mem[#14 + 8, el]:u64
000004b4: #15 := R31 + 0x30
000004b9: R23 := mem[#15, el]:u64
000004be: R24 := mem[#15 + 8, el]:u64
000004c5: R29 := mem[R31, el]:u64
000004ca: R30 := mem[R31 + 8, el]:u64
000004ce: R31 := R31 + 0x40
000004d3: call R30 with noreturn

00000820: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
00000838: __libc_start_main_main :: in u64 = R0
00000839: __libc_start_main_arg2 :: in u32 = low:32[R1]
0000083a: __libc_start_main_arg3 :: in out u64 = R2
0000083b: __libc_start_main_auxv :: in out u64 = R3
0000083c: __libc_start_main_result :: out u32 = low:32[R0]

00000278:
0000067f: R16 := 0x10000
00000686: R17 := mem[R16 + 0xFA8, el]:u64
0000068c: R16 := R16 + 0xFA8
00000691: call R17 with noreturn

00000821: sub _fini(_fini_result)
0000083d: _fini_result :: out u32 = low:32[R0]

0000002e:
00000032: #0 := R31 - 0x10
00000038: mem := mem with [#0, el]:u64 <- R29
0000003e: mem := mem with [#0 + 8, el]:u64 <- R30
00000042: R31 := #0
00000048: R29 := R31
0000004f: R29 := mem[R31, el]:u64
00000054: R30 := mem[R31 + 8, el]:u64
00000058: R31 := R31 + 0x10
0000005d: call R30 with noreturn

00000822: sub _init(_init_result)
0000083e: _init_result :: out u32 = low:32[R0]

00000469:
00000751: #19 := R31 - 0x10
00000757: mem := mem with [#19, el]:u64 <- R29
0000075d: mem := mem with [#19 + 8, el]:u64 <- R30
00000761: R31 := #19
00000767: R29 := R31
0000076c: R30 := 0x5A4
0000076e: call @call_weak_fn with return %00000770

00000770:
00000775: R29 := mem[R31, el]:u64
0000077a: R30 := mem[R31 + 8, el]:u64
0000077e: R31 := R31 + 0x10
00000783: call R30 with noreturn

00000823: sub _start(_start_result)
0000083f: _start_result :: out u32 = low:32[R0]

0000022d:
00000230: R29 := 0
00000235: R30 := 0
0000023b: R5 := R0
00000242: R1 := mem[R31, el]:u64
00000248: R2 := R31 + 8
0000024e: R6 := R31
00000253: R0 := 0x10000
0000025a: R0 := mem[R0 + 0xFF0, el]:u64
0000025f: R3 := 0x10000
00000266: R3 := mem[R3 + 0xFE8, el]:u64
0000026b: R4 := 0x10000
00000272: R4 := mem[R4 + 0xFC8, el]:u64
00000277: R30 := 0x644
0000027a: call @__libc_start_main with return %0000027c

0000027c:
0000027f: R30 := 0x648
00000282: call @abort with return %00000824

00000824:
00000825: call @call_weak_fn with noreturn

00000826: sub abort()


00000280:
000006ab: R16 := 0x10000
000006b2: R17 := mem[R16 + 0xFB8, el]:u64
000006b8: R16 := R16 + 0xFB8
000006bd: call R17 with noreturn

00000827: sub call_weak_fn(call_weak_fn_result)
00000840: call_weak_fn_result :: out u32 = low:32[R0]

00000284:
00000287: R0 := 0x10000
0000028e: R0 := mem[R0 + 0xFE0, el]:u64
00000294: when R0 = 0 goto %00000292
00000828: goto %000005c8

00000292:
0000029a: call R30 with noreturn

000005c8:
000005cb: goto @__gmon_start__

000005c9:
00000695: R16 := 0x10000
0000069c: R17 := mem[R16 + 0xFB0, el]:u64
000006a2: R16 := R16 + 0xFB0
000006a7: call R17 with noreturn

00000829: sub deregister_tm_clones(deregister_tm_clones_result)
00000841: deregister_tm_clones_result :: out u32 = low:32[R0]

0000029e:
000002a1: R0 := 0x11000
000002a7: R0 := R0 + 0x10
000002ac: R1 := 0x11000
000002b2: R1 := R1 + 0x10
000002b8: #1 := ~R0
000002bd: #2 := R1 + ~R0 + 1
000002c3: VF := extend:65[#2] <> extend:65[R1] + extend:65[#1] + 1
000002c9: CF := pad:65[#2] <> pad:65[R1] + pad:65[#1] + 1
000002cd: ZF := #2 = 0
000002d1: NF := 63:63[#2]
000002d7: when ZF goto %000002d5
0000082a: goto %000005aa

000005aa:
000005ad: R1 := 0x10000
000005b4: R1 := mem[R1 + 0xFD0, el]:u64
000005b9: when R1 = 0 goto %000002d5
0000082b: goto %000005bd

000002d5:
000002dd: call R30 with noreturn

000005bd:
000005c1: R16 := R1
000005c6: call R16 with noreturn

0000082c: sub frame_dummy(frame_dummy_result)
00000842: frame_dummy_result :: out u32 = low:32[R0]

0000038e:
00000390: call @register_tm_clones with noreturn

0000082d: sub main(main_argc, main_argv, main_result)
00000843: main_argc :: in u32 = low:32[R0]
00000844: main_argv :: in out u64 = R1
00000845: main_result :: out u32 = low:32[R0]

00000392:
00000396: R31 := R31 - 0x10
0000039d: mem := mem with [R31 + 0xC, el]:u32 <- 0
000003a2: R0 := 0x11000
000003a8: R0 := R0 + 0x14
000003af: R0 := pad:64[mem[R0, el]:u32]
000003b5: #6 := 31:0[R0] + 0
000003ba: VF := extend:33[#6] <> extend:33[31:0[R0]] + 0
000003bf: CF := pad:33[#6] <> pad:33[31:0[R0]] - 0x100000000
000003c3: ZF := #6 = 0
000003c7: NF := 31:31[#6]
000003cd: when ZF <> 1 goto %000003cb
0000082e: goto %00000537

00000537:
0000053a: R0 := 0x11000
00000540: R0 := R0 + 0x18
00000547: R0 := pad:64[mem[R0, el]:u32]
0000054f: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R0]
0000082f: goto %000003cb

000003cb:
000003d5: R0 := pad:64[mem[R31 + 0xC, el]:u32]
000003db: R31 := R31 + 0x10
000003e0: call R30 with noreturn

00000830: sub register_tm_clones(register_tm_clones_result)
00000846: register_tm_clones_result :: out u32 = low:32[R0]

000002df:
000002e2: R0 := 0x11000
000002e8: R0 := R0 + 0x10
000002ed: R1 := 0x11000
000002f3: R1 := R1 + 0x10
000002fa: R1 := R1 + ~R0 + 1
00000301: R2 := 0.0:0[R1 >> 0x3F | R1 << 1]
00000308: R1 := R2 + (R1 ~>> 3)
0000030e: #3 := ~(R1 ~>> 1)
00000312: #4 := ~(R1 ~>> 1) + 1
00000317: VF := extend:65[#4] <> extend:65[#3] + 1
0000031c: CF := pad:65[#4] <> pad:65[#3] + 1
00000320: ZF := #4 = 0
00000324: NF := 63:63[#4]
0000032c: R1 :=

          >> 1 | R1 << 0x3F]
00000332: when ZF goto %00000330
00000831: goto %0000058c

0000058c:
0000058f: R2 := 0x10000
00000596: R2 := mem[R2 + 0xFF8, el]:u64
0000059b: when R2 = 0 goto %00000330
00000832: goto %0000059f

00000330:
00000338: call R30 with noreturn

0000059f:
000005a3: R16 := R2
000005a8: call R16 with noreturn
