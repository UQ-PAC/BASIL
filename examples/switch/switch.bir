0000088f: program
00000870: sub __cxa_finalize(__cxa_finalize_result)
00000890: __cxa_finalize_result :: out u32 = low:32[R0]

000005d6:
000006b7: R16 := 0x10000
000006be: R17 := mem[R16 + 0xFA0, el]:u64
000006c4: R16 := R16 + 0xFA0
000006c9: call R17 with noreturn

00000871: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
00000891: __do_global_dtors_aux_result :: out u32 = low:32[R0]

00000354:
00000358: #5 := R31 - 0x20
0000035e: mem := mem with [#5, el]:u64 <- R29
00000364: mem := mem with [#5 + 8, el]:u64 <- R30
00000368: R31 := #5
0000036e: R29 := R31
00000376: mem := mem with [R31 + 0x10, el]:u64 <- R19
0000037b: R19 := 0x11000
00000382: R0 := pad:64[mem[R19 + 0x10]]
00000389: when 31:0[R0] <> 0 goto %00000387
00000872: goto %0000059f

0000059f:
000005a2: R0 := 0x10000
000005a9: R0 := mem[R0 + 0xFD8, el]:u64
000005af: when R0 = 0 goto %000005ad
00000873: goto %000005c6

000005c6:
000005c9: R0 := 0x11000
000005d0: R0 := mem[R0 + 8, el]:u64
000005d5: R30 := 0x700
000005d8: call @__cxa_finalize with return %000005ad

000005ad:
000005b5: R30 := 0x704
000005b7: call @deregister_tm_clones with return %000005b9

000005b9:
000005bc: R0 := 1
000005c4: mem := mem with [R19 + 0x10] <- 7:0[R0]
00000874: goto %00000387

00000387:
00000391: R19 := mem[R31 + 0x10, el]:u64
00000398: R29 := mem[R31, el]:u64
0000039d: R30 := mem[R31 + 8, el]:u64
000003a1: R31 := R31 + 0x20
000003a6: call R30 with noreturn

00000875: sub __libc_csu_fini(__libc_csu_fini_result)
00000892: __libc_csu_fini_result :: out u32 = low:32[R0]

000004fd:
00000500: call R30 with noreturn

00000876: sub __libc_csu_init(__libc_csu_init_result)
00000893: __libc_csu_init_result :: out u32 = low:32[R0]

0000040a:
0000040e: #7 := R31 - 0x40
00000414: mem := mem with [#7, el]:u64 <- R29
0000041a: mem := mem with [#7 + 8, el]:u64 <- R30
0000041e: R31 := #7
00000424: R29 := R31
0000042a: #8 := R31 + 0x10
00000430: mem := mem with [#8, el]:u64 <- R19
00000436: mem := mem with [#8 + 8, el]:u64 <- R20
0000043b: R20 := 0x10000
00000441: R20 := R20 + 0xD90
00000447: #9 := R31 + 0x20
0000044d: mem := mem with [#9, el]:u64 <- R21
00000453: mem := mem with [#9 + 8, el]:u64 <- R22
00000458: R21 := 0x10000
0000045e: R21 := R21 + 0xD88
00000465: R20 := R20 + ~R21 + 1
0000046b: R22 := pad:64[31:0[R0]]
00000471: #10 := R31 + 0x30
00000477: mem := mem with [#10, el]:u64 <- R23
0000047d: mem := mem with [#10 + 8, el]:u64 <- R24
00000483: R23 := R1
00000489: R24 := R2
0000048e: R30 := 0x7A8
00000491: call @_init with return %00000493

00000493:
00000497: #11 := ~(R20 ~>> 3)
0000049b: #12 := ~(R20 ~>> 3) + 1
000004a0: VF := extend:65[#12] <> extend:65[#11] + 1
000004a5: CF := pad:65[#12] <> pad:65[#11] + 1
000004a9: ZF := #12 = 0
000004ad: NF := 63:63[#12]
000004b3: when ZF goto %000004b1
00000877: goto %00000502

00000502:
00000508: R20 :=

          >> 3 | R20 << 0x3D]
0000050d: R19 := 0
00000878: goto %0000050f

0000050f:
00000515: R3 := mem[R21 + (60:0[R19].0), el]:u64
0000051b: R2 := R24
00000521: R19 := R19 + 1
00000527: R1 := R23
0000052d: R0 := pad:64[31:0[R22]]
00000532: R30 := 0x7D0
00000535: call R3 with return %00000537

00000537:
0000053b: #16 := ~R19
00000540: #17 := R20 + ~R19 + 1
00000546: VF := extend:65[#17] <> extend:65[R20] + extend:65[#16] + 1
0000054c: CF := pad:65[#17] <> pad:65[R20] + pad:65[#16] + 1
00000550: ZF := #17 = 0
00000554: NF := 63:63[#17]
00000559: when ZF <> 1 goto %0000050f
00000879: goto %000004b1

000004b1:
000004ba: #13 := R31 + 0x10
000004bf: R19 := mem[#13, el]:u64
000004c4: R20 := mem[#13 + 8, el]:u64
000004ca: #14 := R31 + 0x20
000004cf: R21 := mem[#14, el]:u64
000004d4: R22 := mem[#14 + 8, el]:u64
000004da: #15 := R31 + 0x30
000004df: R23 := mem[#15, el]:u64
000004e4: R24 := mem[#15 + 8, el]:u64
000004eb: R29 := mem[R31, el]:u64
000004f0: R30 := mem[R31 + 8, el]:u64
000004f4: R31 := R31 + 0x40
000004f9: call R30 with noreturn

0000087a: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
00000894: __libc_start_main_main :: in u64 = R0
00000895: __libc_start_main_arg2 :: in u32 = low:32[R1]
00000896: __libc_start_main_arg3 :: in out u64 = R2
00000897: __libc_start_main_auxv :: in out u64 = R3
00000898: __libc_start_main_result :: out u32 = low:32[R0]

00000292:
000006cd: R16 := 0x10000
000006d4: R17 := mem[R16 + 0xFA8, el]:u64
000006da: R16 := R16 + 0xFA8
000006df: call R17 with noreturn

0000087b: sub _fini(_fini_result)
00000899: _fini_result :: out u32 = low:32[R0]

00000030:
00000034: #0 := R31 - 0x10
0000003a: mem := mem with [#0, el]:u64 <- R29
00000040: mem := mem with [#0 + 8, el]:u64 <- R30
00000044: R31 := #0
0000004a: R29 := R31
00000051: R29 := mem[R31, el]:u64
00000056: R30 := mem[R31 + 8, el]:u64
0000005a: R31 := R31 + 0x10
0000005f: call R30 with noreturn

0000087c: sub _init(_init_result)
0000089a: _init_result :: out u32 = low:32[R0]

0000048f:
000007a5: #20 := R31 - 0x10
000007ab: mem := mem with [#20, el]:u64 <- R29
000007b1: mem := mem with [#20 + 8, el]:u64 <- R30
000007b5: R31 := #20
000007bb: R29 := R31
000007c0: R30 := 0x5A4
000007c2: call @call_weak_fn with return %000007c4

000007c4:
000007c9: R29 := mem[R31, el]:u64
000007ce: R30 := mem[R31 + 8, el]:u64
000007d2: R31 := R31 + 0x10
000007d7: call R30 with noreturn

0000087d: sub _start(_start_result)
0000089b: _start_result :: out u32 = low:32[R0]

00000247:
0000024a: R29 := 0
0000024f: R30 := 0
00000255: R5 := R0
0000025c: R1 := mem[R31, el]:u64
00000262: R2 := R31 + 8
00000268: R6 := R31
0000026d: R0 := 0x10000
00000274: R0 := mem[R0 + 0xFF0, el]:u64
00000279: R3 := 0x10000
00000280: R3 := mem[R3 + 0xFE8, el]:u64
00000285: R4 := 0x10000
0000028c: R4 := mem[R4 + 0xFC8, el]:u64
00000291: R30 := 0x644
00000294: call @__libc_start_main with return %00000296

00000296:
00000299: R30 := 0x648
0000029c: call @abort with return %0000087e

0000087e:
0000087f: call @call_weak_fn with noreturn

00000880: sub abort()


0000029a:
000006f9: R16 := 0x10000
00000700: R17 := mem[R16 + 0xFB8, el]:u64
00000706: R16 := R16 + 0xFB8
0000070b: call R17 with noreturn

00000881: sub call_weak_fn(call_weak_fn_result)
0000089c: call_weak_fn_result :: out u32 = low:32[R0]

0000029e:
000002a1: R0 := 0x10000
000002a8: R0 := mem[R0 + 0xFE0, el]:u64
000002ae: when R0 = 0 goto %000002ac
00000882: goto %00000616

000002ac:
000002b4: call R30 with noreturn

00000616:
00000619: goto @__gmon_start__

00000617:
000006e3: R16 := 0x10000
000006ea: R17 := mem[R16 + 0xFB0, el]:u64
000006f0: R16 := R16 + 0xFB0
000006f5: call R17 with noreturn

00000883: sub deregister_tm_clones(deregister_tm_clones_result)
0000089d: deregister_tm_clones_result :: out u32 = low:32[R0]

000002b8:
000002bb: R0 := 0x11000
000002c1: R0 := R0 + 0x10
000002c6: R1 := 0x11000
000002cc: R1 := R1 + 0x10
000002d2: #1 := ~R0
000002d7: #2 := R1 + ~R0 + 1
000002dd: VF := extend:65[#2] <> extend:65[R1] + extend:65[#1] + 1
000002e3: CF := pad:65[#2] <> pad:65[R1] + pad:65[#1] + 1
000002e7: ZF := #2 = 0
000002eb: NF := 63:63[#2]
000002f1: when ZF goto %000002ef
00000884: goto %000005f8

000005f8:
000005fb: R1 := 0x10000
00000602: R1 := mem[R1 + 0xFD0, el]:u64
00000607: when R1 = 0 goto %000002ef
00000885: goto %0000060b

000002ef:
000002f7: call R30 with noreturn

0000060b:
0000060f: R16 := R1
00000614: call R16 with noreturn

00000886: sub frame_dummy(frame_dummy_result)
0000089e: frame_dummy_result :: out u32 = low:32[R0]

000003a8:
000003aa: call @register_tm_clones with noreturn

00000887: sub main(main_argc, main_argv, main_result)
0000089f: main_argc :: in u32 = low:32[R0]
000008a0: main_argv :: in out u64 = R1
000008a1: main_result :: out u32 = low:32[R0]

000003ac:
000003b0: R31 := R31 - 0x10
000003b5: R0 := 1
000003bd: mem := mem with [R31 + 8, el]:u32 <- 31:0[R0]
000003c4: mem := mem with [R31 + 0xC, el]:u32 <- 0
000003cb: R0 := pad:64[mem[R31 + 8, el]:u32]
000003d1: #6 := 31:0[R0] - 1
000003d6: VF := extend:33[#6] <> extend:33[31:0[R0]] - 1
000003db: CF := pad:33[#6] <> pad:33[31:0[R0]] + 0xFFFFFFFF
000003df: ZF := #6 = 0
000003e3: NF := 31:31[#6]
000003e9: when ZF goto %000003e7
00000888: goto %0000056c

0000056c:
00000571: R0 := pad:64[mem[R31 + 8, el]:u32]
00000577: #18 := 31:0[R0] - 3
0000057c: VF := extend:33[#18] <> extend:33[31:0[R0]] - 3
00000581: CF := pad:33[#18] <> pad:33[31:0[R0]] + 0xFFFFFFFD
00000585: ZF := #18 = 0
00000589: NF := 31:31[#18]
0000058e: when ZF <> 1 goto %0000055d
00000889: goto %00000592

0000055d:
00000560: R0 := 5
00000568: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R0]
0000088a: goto %000003fa

00000592:
00000595: R0 := 3
0000059d: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R0]
0000088b: goto %000003e7

000003e7:
000003ef: R0 := 1
000003f7: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R0]
000003fc: goto %000003fa

000003fa:
00000403: R31 := R31 + 0x10
00000408: call R30 with noreturn

0000088c: sub register_tm_clones(register_tm_clones_result)
000008a2: register_tm_clones_result :: out u32 = low:32[R0]

000002f9:
000002fc: R0 := 0x11000
00000302: R0 := R0 + 0x10
00000307: R1 := 0x11000
0000030d: R1 := R1 + 0x10
00000314: R1 := R1 + ~R0 + 1
0000031b: R2 := 0.0:0[R1 >> 0x3F | R1 << 1]
00000322: R1 := R2 + (R1 ~>> 3)
00000328: #3 := ~(R1 ~>> 1)
0000032c: #4 := ~(R1 ~>> 1) + 1
00000331: VF := extend:65[#4] <> extend:65[#3] + 1
00000336: CF := pad:65[#4] <> pad:65[#3] + 1
0000033a: ZF := #4 = 0
0000033e: NF := 63:63[#4]
00000346: R1 :=

          >> 1 | R1 << 0x3F]
0000034c: when ZF goto %0000034a
0000088d: goto %000005da

000005da:
000005dd: R2 := 0x10000
000005e4: R2 := mem[R2 + 0xFF8, el]:u64
000005e9: when R2 = 0 goto %0000034a
0000088e: goto %000005ed

0000034a:
00000352: call R30 with noreturn

000005ed:
000005f1: R16 := R2
000005f6: call R16 with noreturn
