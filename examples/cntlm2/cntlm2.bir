0006d089: program
0006c9fc: sub __ctype_b_loc(__ctype_b_loc_result)
0006d08a: __ctype_b_loc_result :: out u32 = low:32[R0]

00046382:
00064c1d: R16 := 0x27000
00064c24: R17 := mem[R16 + 0xE30, el]:u64
00064c2a: R16 := R16 + 0xE30
00064c2f: call R17 with noreturn

0006c9fd: sub __ctype_tolower_loc(__ctype_tolower_loc_result)
0006d08b: __ctype_tolower_loc_result :: out u32 = low:32[R0]

0004600c:
00064855: R16 := 0x27000
0006485c: R17 := mem[R16 + 0xCD0, el]:u64
00064862: R16 := R16 + 0xCD0
00064867: call R17 with noreturn

0006c9fe: sub __ctype_toupper_loc(__ctype_toupper_loc_result)
0006d08c: __ctype_toupper_loc_result :: out u32 = low:32[R0]

000460d6:
00064aa7: R16 := 0x27000
00064aae: R17 := mem[R16 + 0xDA8, el]:u64
00064ab4: R16 := R16 + 0xDA8
00064ab9: call R17 with noreturn

0006c9ff: sub __cxa_finalize(__cxa_finalize_result)
0006d08d: __cxa_finalize_result :: out u32 = low:32[R0]

000631fc:
000647e7: R16 := 0x27000
000647ee: R17 := mem[R16 + 0xCA8, el]:u64
000647f4: R16 := R16 + 0xCA8
000647f9: call R17 with noreturn

0006ca00: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
0006d08e: __do_global_dtors_aux_result :: out u32 = low:32[R0]

0006316b:
0006316f: #1579 := R31 - 0x20
00063175: mem := mem with [#1579, el]:u64 <- R29
0006317b: mem := mem with [#1579 + 8, el]:u64 <- R30
0006317f: R31 := #1579
00063185: R29 := R31
0006318d: mem := mem with [R31 + 0x10, el]:u64 <- R19
00063192: R19 := 0x28000
00063199: R0 := pad:64[mem[R19 + 0x498]]
000631a0: when 31:0[R0] <> 0 goto %0006319e
0006ca01: goto %000631c5

000631c5:
000631c8: R0 := 0x27000
000631cf: R0 := mem[R0 + 0xF58, el]:u64
000631d5: when R0 = 0 goto %000631d3
0006ca02: goto %000631ec

000631ec:
000631ef: R0 := 0x28000
000631f6: R0 := mem[R0 + 8, el]:u64
000631fb: R30 := 0x47E8
000631fe: call @__cxa_finalize with return %000631d3

000631d3:
000631db: R30 := 0x47EC
000631dd: call @deregister_tm_clones with return %000631df

000631df:
000631e2: R0 := 1
000631ea: mem := mem with [R19 + 0x498] <- 7:0[R0]
0006ca03: goto %0006319e

0006319e:
000631a8: R19 := mem[R31 + 0x10, el]:u64
000631af: R29 := mem[R31, el]:u64
000631b4: R30 := mem[R31 + 8, el]:u64
000631b8: R31 := R31 + 0x20
000631bd: call R30 with noreturn

0006ca04: sub __errno_location(__errno_location_result)
0006d08f: __errno_location_result :: out u64 = R0

0004cddc:
00064e6f: R16 := 0x27000
00064e76: R17 := mem[R16 + 0xF08, el]:u64
00064e7c: R16 := R16 + 0xF08
00064e81: call R17 with noreturn

0006ca05: sub __fdelt_chk(__fdelt_chk_result)
0006d090: __fdelt_chk_result :: out u32 = low:32[R0]

0005443f:
0006495d: R16 := 0x27000
00064964: R17 := mem[R16 + 0xD30, el]:u64
0006496a: R16 := R16 + 0xD30
0006496f: call R17 with noreturn

0006ca06: sub __fprintf_chk(__fprintf_chk_result)
0006d091: __fprintf_chk_result :: out u32 = low:32[R0]

0005638a:
00064bf1: R16 := 0x27000
00064bf8: R17 := mem[R16 + 0xE20, el]:u64
00064bfe: R16 := R16 + 0xE20
00064c03: call R17 with noreturn

0006ca07: sub __libc_csu_fini(__libc_csu_fini_result)
0006d092: __libc_csu_fini_result :: out u32 = low:32[R0]

00058364:
00058367: call R30 with noreturn

0006ca08: sub __libc_csu_init(__libc_csu_init_result)
0006d093: __libc_csu_init_result :: out u32 = low:32[R0]

00058271:
00058275: #1134 := R31 - 0x40
0005827b: mem := mem with [#1134, el]:u64 <- R29
00058281: mem := mem with [#1134 + 8, el]:u64 <- R30
00058285: R31 := #1134
0005828b: R29 := R31
00058291: #1135 := R31 + 0x10
00058297: mem := mem with [#1135, el]:u64 <- R19
0005829d: mem := mem with [#1135 + 8, el]:u64 <- R20
000582a2: R20 := 0x27000
000582a8: R20 := R20 + 0xA10
000582ae: #1136 := R31 + 0x20
000582b4: mem := mem with [#1136, el]:u64 <- R21
000582ba: mem := mem with [#1136 + 8, el]:u64 <- R22
000582bf: R21 := 0x27000
000582c5: R21 := R21 + 0xA08
000582cc: R20 := R20 + ~R21 + 1
000582d2: R22 := pad:64[31:0[R0]]
000582d8: #1137 := R31 + 0x30
000582de: mem := mem with [#1137, el]:u64 <- R23
000582e4: mem := mem with [#1137 + 8, el]:u64 <- R24
000582ea: R23 := R1
000582f0: R24 := R2
000582f5: R30 := 0x11610
000582f8: call @_init with return %000582fa

000582fa:
000582fe: #1138 := ~(R20 ~>> 3)
00058302: #1139 := ~(R20 ~>> 3) + 1
00058307: VF := extend:65[#1139] <> extend:65[#1138] + 1
0005830c: CF := pad:65[#1139] <> pad:65[#1138] + 1
00058310: ZF := #1139 = 0
00058314: NF := 63:63[#1139]
0005831a: when ZF goto %00058318
0006ca09: goto %00058369

00058369:
0005836f: R20 :=

          >> 3 | R20 << 0x3D]
00058374: R19 := 0
0006ca0a: goto %00058376

00058376:
0005837c: R3 := mem[R21 + (60:0[R19].0), el]:u64
00058382: R2 := R24
00058388: R19 := R19 + 1
0005838e: R1 := R23
00058394: R0 := pad:64[31:0[R22]]
00058399: R30 := 0x11638
0005839c: call R3 with return %0005839e

0005839e:
000583a2: #1143 := ~R19
000583a7: #1144 := R20 + ~R19 + 1
000583ad: VF := extend:65[#1144] <> extend:65[R20] + extend:65[#1143] + 1
000583b3: CF := pad:65[#1144] <> pad:65[R20] + pad:65[#1143] + 1
000583b7: ZF := #1144 = 0
000583bb: NF := 63:63[#1144]
000583c0: when ZF <> 1 goto %00058376
0006ca0b: goto %00058318

00058318:
00058321: #1140 := R31 + 0x10
00058326: R19 := mem[#1140, el]:u64
0005832b: R20 := mem[#1140 + 8, el]:u64
00058331: #1141 := R31 + 0x20
00058336: R21 := mem[#1141, el]:u64
0005833b: R22 := mem[#1141 + 8, el]:u64
00058341: #1142 := R31 + 0x30
00058346: R23 := mem[#1142, el]:u64
0005834b: R24 := mem[#1142 + 8, el]:u64
00058352: R29 := mem[R31, el]:u64
00058357: R30 := mem[R31 + 8, el]:u64
0005835b: R31 := R31 + 0x40
00058360: call R30 with noreturn

0006ca0c: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
0006d094: __libc_start_main_main :: in u64 = R0
0006d095: __libc_start_main_arg2 :: in u32 = low:32[R1]
0006d096: __libc_start_main_arg3 :: in out u64 = R2
0006d097: __libc_start_main_auxv :: in out u64 = R3
0006d098: __libc_start_main_result :: out u32 = low:32[R0]

000630ab:
00064989: R16 := 0x27000
00064990: R17 := mem[R16 + 0xD40, el]:u64
00064996: R16 := R16 + 0xD40
0006499b: call R17 with noreturn

0006ca0d: sub __posix_getopt(__posix_getopt_result)
0006d099: __posix_getopt_result :: out u32 = low:32[R0]

0006046f:
00064a0d: R16 := 0x27000
00064a14: R17 := mem[R16 + 0xD70, el]:u64
00064a1a: R16 := R16 + 0xD70
00064a1f: call R17 with noreturn

0006ca0e: sub __printf_chk(__printf_chk_result)
0006d09a: __printf_chk_result :: out u32 = low:32[R0]

0004ac82:
000649b5: R16 := 0x27000
000649bc: R17 := mem[R16 + 0xD50, el]:u64
000649c2: R16 := R16 + 0xD50
000649c7: call R17 with noreturn

0006ca0f: sub __snprintf_chk(__snprintf_chk_result)
0006d09b: __snprintf_chk_result :: out u32 = low:32[R0]

00056a12:
00064897: R16 := 0x27000
0006489e: R17 := mem[R16 + 0xCE8, el]:u64
000648a4: R16 := R16 + 0xCE8
000648a9: call R17 with noreturn

0006ca10: sub __sprintf_chk(__sprintf_chk_result)
0006d09c: __sprintf_chk_result :: out u32 = low:32[R0]

0004633b:
0006474d: R16 := 0x27000
00064754: R17 := mem[R16 + 0xC70, el]:u64
0006475a: R16 := R16 + 0xC70
0006475f: call R17 with noreturn

0006ca11: sub __stack_chk_fail(__stack_chk_fail_result)
0006d09d: __stack_chk_fail_result :: out u32 = low:32[R0]

0004702e:
00064ae9: R16 := 0x27000
00064af0: R17 := mem[R16 + 0xDC0, el]:u64
00064af6: R16 := R16 + 0xDC0
00064afb: call R17 with noreturn

0006ca12: sub __syslog_chk(__syslog_chk_result)
0006d09e: __syslog_chk_result :: out u32 = low:32[R0]

0004bbf0:
00064d0f: R16 := 0x27000
00064d16: R17 := mem[R16 + 0xE88, el]:u64
00064d1c: R16 := R16 + 0xE88
00064d21: call R17 with noreturn

0006ca13: sub _fini(_fini_result)
0006d09f: _fini_result :: out u32 = low:32[R0]

00036a65:
00036a69: #0 := R31 - 0x10
00036a6f: mem := mem with [#0, el]:u64 <- R29
00036a75: mem := mem with [#0 + 8, el]:u64 <- R30
00036a79: R31 := #0
00036a7f: R29 := R31
00036a86: R29 := mem[R31, el]:u64
00036a8b: R30 := mem[R31 + 8, el]:u64
00036a8f: R31 := R31 + 0x10
00036a94: call R30 with noreturn

0006ca14: sub _init(_init_result)
0006d0a0: _init_result :: out u32 = low:32[R0]

000582f6:
00068ba7: #1598 := R31 - 0x10
00068bad: mem := mem with [#1598, el]:u64 <- R29
00068bb3: mem := mem with [#1598 + 8, el]:u64 <- R30
00068bb7: R31 := #1598
00068bbd: R29 := R31
00068bc2: R30 := 0x1DDC
00068bc4: call @call_weak_fn with return %00068bc6

00068bc6:
00068bcb: R29 := mem[R31, el]:u64
00068bd0: R30 := mem[R31 + 8, el]:u64
00068bd4: R31 := R31 + 0x10
00068bd9: call R30 with noreturn

0006ca15: sub _start(_start_result)
0006d0a1: _start_result :: out u32 = low:32[R0]

00063060:
00063063: R29 := 0
00063068: R30 := 0
0006306e: R5 := R0
00063075: R1 := mem[R31, el]:u64
0006307b: R2 := R31 + 8
00063081: R6 := R31
00063086: R0 := 0x27000
0006308d: R0 := mem[R0 + 0xFD8, el]:u64
00063092: R3 := 0x27000
00063099: R3 := mem[R3 + 0xFC8, el]:u64
0006309e: R4 := 0x27000
000630a5: R4 := mem[R4 + 0xF40, el]:u64
000630aa: R30 := 0x4730
000630ad: call @__libc_start_main with return %000630af

000630af:
000630b2: R30 := 0x4734
000630b5: call @abort with return %0006ca16

0006ca16:
0006ca17: call @call_weak_fn with noreturn

0006ca18: sub abort()


000630b3:
00064b83: R16 := 0x27000
00064b8a: R17 := mem[R16 + 0xDF8, el]:u64
00064b90: R16 := R16 + 0xDF8
00064b95: call R17 with noreturn

0006ca19: sub accept(accept_fd, accept_addr, accept_len_ptr, accept_result)
0006d0a2: accept_fd :: in u32 = low:32[R0]
0006d0a3: accept_addr :: in u64 = R1
0006d0a4: accept_len_ptr :: in out u64 = R2
0006d0a5: accept_result :: out u32 = low:32[R0]

00061643:
00064a23: R16 := 0x27000
00064a2a: R17 := mem[R16 + 0xD78, el]:u64
00064a30: R16 := R16 + 0xD78
00064a35: call R17 with noreturn

0006ca1a: sub acl_add(acl_add_result)
0006d0a6: acl_add_result :: out u32 = low:32[R0]

0004b9bd:
0004b9c1: #376 := R31 - 0x70
0004b9c7: mem := mem with [#376, el]:u64 <- R29
0004b9cd: mem := mem with [#376 + 8, el]:u64 <- R30
0004b9d1: R31 := #376
0004b9d7: R29 := R31
0004b9dd: #377 := R31 + 0x20
0004b9e3: mem := mem with [#377, el]:u64 <- R21
0004b9e9: mem := mem with [#377 + 8, el]:u64 <- R22
0004b9ee: R21 := 0x27000
0004b9f5: R3 := mem[R21 + 0xFB8, el]:u64
0004b9fb: #378 := R31 + 0x10
0004ba01: mem := mem with [#378, el]:u64 <- R19
0004ba07: mem := mem with [#378 + 8, el]:u64 <- R20
0004ba0d: R20 := R0
0004ba13: R0 := R1
0004ba1a: R1 := mem[R3, el]:u64
0004ba22: mem := mem with [R31 + 0x68, el]:u64 <- R1
0004ba27: R1 := 0
0004ba2d: #379 := R31 + 0x40
0004ba33: mem := mem with [#379, el]:u64 <- R25
0004ba39: mem := mem with [#379 + 8, el]:u64 <- R26
0004ba3e: R25 := 0
0004ba44: when R20 = 0 goto %0004ba42
0006ca1b: goto %0004ca59

0004ca59:
0004ca5d: #461 := R31 + 0x30
0004ca63: mem := mem with [#461, el]:u64 <- R23
0004ca69: mem := mem with [#461 + 8, el]:u64 <- R24
0004ca6f: R23 := pad:64[31:0[R2]]
0004ca74: R30 := 0xAE04
0004ca76: call @strdup with return %0004ca78

0004ca78:
0004ca7c: R19 := R0
0004ca81: R0 := 8
0004ca86: R30 := 0xAE10
0004ca88: call @new with return %0004ca8a

0004ca8a:
0004ca8e: R22 := R0
0004ca93: R1 := 0x12000
0004ca99: R0 := R19
0004ca9f: R1 := R1 + 0x508
0004caa4: R30 := 0xAE24
0004caa7: call @strcspn with return %0004caa9

0004caa9:
0004caad: R24 := R0
0004cab2: R26 := 0x20
0004cab8: R0 := R19
0004cabf: R24 :=

0004cac4: R30 := 0xAE38
0004cac6: call @strlen with return %0004cac8

0004cac8:
0004cacc: #462 := ~R0
0004cad1: #463 := R24 + ~R0 + 1
0004cad7: VF := extend:65[#463] <> extend:65[R24] + extend:65[#462] + 1
0004cadd: CF := pad:65[#463] <> pad:65[R24] + pad:65[#462] + 1
0004cae1: ZF := #463 = 0
0004cae5: NF := 63:63[#463]
0004caea: when CF <> 1 goto %0004c967
0006ca1c: goto %0004c9fb

0004c967:
0004c96d: mem := mem with [R19 + R24] <- 0
0004c973: R25 := R24 + 1
0004c97a: R0 := R19 + R25
0004c980: R1 := R31 + 0x60
0004c985: R2 := 0xA
0004c98a: R30 := 0xAF78
0004c98d: call @strtol with return %0004c98f

0004c98f:
0004c993: #458 := ~31:0[R26]
0004c998: #459 := 31:0[R0] + ~31:0[R26] + 1
0004c99e: VF := extend:33[#459] <> extend:33[31:0[R0]] + extend:33[#458] + 1
0004c9a4: CF := pad:33[#459] <> pad:33[31:0[R0]] + pad:33[#458] + 1
0004c9a8: ZF := #459 = 0
0004c9ac: NF := 31:31[#459]
0004c9b3: when CF & ~ZF goto %0004c9b1
0006ca1d: goto %0004c9d6

0004c9d6:
0004c9dc: R1 := pad:64[mem[R19 + R25]]
0004c9e1: when 31:0[R1] = 0 goto %0004c9b1
0006ca1e: goto %0004c9e5

0004c9e5:
0004c9ea: R1 := mem[R31 + 0x60, el]:u64
0004c9f0: R26 := pad:64[31:0[R0]]
0004c9f7: R1 := pad:64[mem[R1]]
0004c9fd: when 31:0[R1] = 0 goto %0004c9fb
0006ca1f: goto %0004c9b1

0004c9b1:
0004c9b9: R2 := 0x12000
0004c9bf: R3 := R19
0004c9c5: R2 := R2 + 0x510
0004c9ca: R1 := 1
0004c9cf: R0 := 3
0004c9d4: R25 := 0
0006ca20: goto %0004bbe9

0004c9fb:
0004ca05: R0 := pad:64[mem[R19]]
0004ca0b: #460 := 31:0[R0] - 0x2A
0004ca10: VF := extend:33[#460] <> extend:33[31:0[R0]] - 0x2A
0004ca15: CF := pad:33[#460] <> pad:33[31:0[R0]] + 0xFFFFFFD6
0004ca19: ZF := #460 = 0
0004ca1d: NF := 31:31[#460]
0004ca22: when ZF <> 1 goto %0004bb7f
0006ca21: goto %0004ca26

0004ca26:
0004ca2b: R1 := pad:64[mem[R19 + 1]]
0004ca31: R2 := pad:64[~31:0[R1] + 1]
0004ca37: when 31:0[R1] <> 0 goto %0004bb7f
0006ca22: goto %0004ca3b

0004bb7f:
0004bb83: #387 := 31:0[R0] - 0x30
0004bb88: VF := extend:33[#387] <> extend:33[31:0[R0]] - 0x30
0004bb8d: CF := pad:33[#387] <> pad:33[31:0[R0]] + 0xFFFFFFD0
0004bb91: ZF := #387 = 0
0004bb95: NF := 31:31[#387]
0004bb9b: when ZF goto %0004bb99
0006ca23: goto %0004bba8

0004bb99:
0004bba3: R0 := pad:64[mem[R19 + 1]]
0004bbaa: when 31:0[R0] <> 0 goto %0004bba8
0006ca24: goto %0004ca4f

0004ca4f:
0004ca53: R2 := pad:64[31:0[R26]]
0004ca57: goto %0004ca3b

0004bba8:
0004bbb1: R1 := R19
0004bbb7: R0 := R31 + 0x58
0004bbbc: R30 := 0xAF08
0004bbbe: call @so_resolv with return %0004bbc0

0004bbc0:
0004bbc4: R25 := pad:64[31:0[R0]]
0004bbca: when 31:0[R0] = 0 goto %0004bbc8
0006ca25: goto %0004bc22

0004bbc8:
0004bbd0: R2 := 0x12000
0004bbd6: R3 := R19
0004bbdc: R2 := R2 + 0x530
0004bbe1: R1 := 1
0004bbe6: R0 := 3
0004bbeb: goto %0004bbe9

0004bbe9:
0004bbef: R30 := 0xAFB4
0004bbf2: call @__syslog_chk with return %0004bbf4

0004bbf4:
0004bbf8: R0 := R22
0004bbfd: R30 := 0xAFBC
0004bbff: call @free with return %0004bc01

0004bc01:
0004bc05: R0 := R19
0004bc0a: R30 := 0xAFC4
0004bc0c: call @free with return %0004bc0e

0004bc0e:
0004bc12: #388 := R31 + 0x30
0004bc17: R23 := mem[#388, el]:u64
0004bc1c: R24 := mem[#388 + 8, el]:u64
0004bc20: goto %0004ba42

0004bc22:
0004bc25: R0 := 0x20
0004bc2c: R0 := pad:64[31:0[R0] + ~31:0[R26] + 1]
0004bc33: R1 := pad:64[mem[R31 + 0x58, el]:u32]
0004bc38: R24 := 1
0004bc3f: R0 := R24 << pad:7[5:0[R0]]
0004bc45: R0 := pad:64[~31:0[R0] + 1]
0004bc4d: mem := mem with [R22, el]:u32 <- 31:0[R1]
0004bc53: mem := mem with [R22 + 4, el]:u32 <- 31:0[R26]
0004bc5c: R0 := pad:64[7:0[R0].15:8[R0].23:16[R0].31:24[R0]]
0004bc63: #389 := 31:0[R1] & ~31:0[R0]
0004bc66: VF := 0
0004bc69: CF := 0
0004bc6d: ZF := #389 = 0
0004bc71: NF := 31:31[#389]
0004bc77: when ZF goto %0004bc75
0006ca26: goto %0004c92b

0004c92b:
0004c930: R0 := pad:64[mem[R31 + 0x58, el]:u32]
0004c935: R30 := 0xAF40
0004c937: call @inet_ntoa with return %0004c939

0004c939:
0004c93d: R3 := R0
0004c944: R4 := pad:64[mem[R22 + 4, el]:u32]
0004c94a: R1 := pad:64[31:0[R24]]
0004c94f: R2 := 0x12000
0004c954: R0 := 4
0004c95a: R2 := R2 + 0x558
0004c95f: R30 := 0xAF5C
0004c961: call @__syslog_chk with return %0004c963

0004c963:
0004c965: goto %0004bc75

0004ca3b:
0004ca40: mem := mem with [R31 + 0x58, el]:u32 <- 0
0004ca47: mem := mem with [R22, el]:u32 <- 0
0004ca4d: mem := mem with [R22 + 4, el]:u32 <- 31:0[R2]
0006ca27: goto %0004bc75

0004bc75:
0004bc7f: R0 := pad:64[mem[R31 + 0x58, el]:u32]
0004bc85: #390 := 31:0[R23] + 0
0004bc8a: VF := extend:33[#390] <> extend:33[31:0[R23]] + 0
0004bc8f: CF := pad:33[#390] <> pad:33[31:0[R23]] - 0x100000000
0004bc93: ZF := #390 = 0
0004bc97: NF := 31:31[#390]
0004bc9c: R3 := 0x12000
0004bca2: R3 := R3 + 0x500
0004bca7: R24 := 0x12000
0004bcad: R24 := R24 + 0x4F8
0004bcbb: when ZF goto %0004bcb3
0004bcbc: goto %0004bcb7

0004bcb7:
0004bcb8: R24 := R3
0004bcbe: goto %0004bcba

0004bcb3:
0004bcb4: R24 := R24
0004bcbd: goto %0004bcba

0004bcba:
0004bcc3: R25 := 1
0004bcc8: R30 := 0xAE84
0004bccb: call @inet_ntoa with return %0004bccd

0004bccd:
0004bcd1: R4 := R0
0004bcd8: R5 := pad:64[mem[R22 + 4, el]:u32]
0004bcde: R3 := R24
0004bce4: R1 := pad:64[31:0[R25]]
0004bce9: R0 := 6
0004bcee: R2 := 0x12000
0004bcf4: R2 := R2 + 0x588
0004bcf9: R30 := 0xAEA4
0004bcfb: call @__syslog_chk with return %0004bcfd

0004bcfd:
0004bd02: R0 := mem[R20, el]:u64
0004bd08: R1 := pad:64[31:0[R23]]
0004bd0e: R2 := R22
0004bd13: R30 := 0xAEB4
0004bd16: call @plist_add with return %0004c906

0004c906:
0004c90c: mem := mem with [R20, el]:u64 <- R0
0004c912: R0 := R19
0004c917: R30 := 0xAEC0
0004c919: call @free with return %0004c91b

0004c91b:
0004c91f: #457 := R31 + 0x30
0004c924: R23 := mem[#457, el]:u64
0004c929: R24 := mem[#457 + 8, el]:u64
0006ca28: goto %0004ba42

0004ba42:
0004ba4c: R21 := mem[R21 + 0xFB8, el]:u64
0004ba53: R0 := mem[R31 + 0x68, el]:u64
0004ba5a: R1 := mem[R21, el]:u64
0004ba60: #380 := ~R1
0004ba65: #381 := R0 + ~R1 + 1
0004ba6b: VF := extend:65[#381] <> extend:65[R0] + extend:65[#380] + 1
0004ba71: CF := pad:65[#381] <> pad:65[R0] + pad:65[#380] + 1
0004ba75: ZF := #381 = 0
0004ba79: NF := 63:63[#381]
0004ba7d: R0 := #381
0004ba82: R1 := 0
0004ba88: when ZF <> 1 goto %0004ba86
0006ca29: goto %0004bb34

0004ba86:
0004ba8f: #382 := R31 + 0x30
0004ba95: mem := mem with [#382, el]:u64 <- R23
0004ba9b: mem := mem with [#382 + 8, el]:u64 <- R24
0004baa0: R30 := 0xAFFC
0004baa2: call @__stack_chk_fail with return %0004baa4

0004baa4:
0006ca2a: call @acl_check with noreturn

0004bb34:
0004bb38: R0 := pad:64[31:0[R25]]
0004bb3e: #384 := R31 + 0x10
0004bb43: R19 := mem[#384, el]:u64
0004bb48: R20 := mem[#384 + 8, el]:u64
0004bb4e: #385 := R31 + 0x20
0004bb53: R21 := mem[#385, el]:u64
0004bb58: R22 := mem[#385 + 8, el]:u64
0004bb5e: #386 := R31 + 0x40
0004bb63: R25 := mem[#386, el]:u64
0004bb68: R26 := mem[#386 + 8, el]:u64
0004bb6f: R29 := mem[R31, el]:u64
0004bb74: R30 := mem[R31 + 8, el]:u64
0004bb78: R31 := R31 + 0x70
0004bb7d: call R30 with noreturn

0006ca2b: sub acl_check(acl_check_result)
0006d0a7: acl_check_result :: out u32 = low:32[R0]

0004baa6:
0004baaa: when R0 = 0 goto %0004baa8
0006ca2c: goto %0004bab7

0004baa8:
0004bab0: R0 := 0
0004bab5: call R30 with noreturn

0004bab7:
0004baba: R5 := 0x20
0004babf: R4 := 1
0004bac4: goto %0004bac2

0004bac2:
0004baca: R3 := mem[R0 + 8, el]:u64
0004bad1: R2 := pad:64[mem[R3 + 4, el]:u32]
0004bad8: R3 := pad:64[mem[R3, el]:u32]
0004badf: R2 := pad:64[31:0[R5] + ~31:0[R2] + 1]
0004bae6: R3 := pad:64[31:0[R1] ^ 31:0[R3]]
0004baed: R2 := R4 << pad:7[5:0[R2]]
0004baf3: R2 := pad:64[~31:0[R2] + 1]
0004bafc: R2 := pad:64[7:0[R2].15:8[R2].23:16[R2].31:24[R2]]
0004bb03: #383 := 31:0[R3] & 31:0[R2]
0004bb06: VF := 0
0004bb09: CF := 0
0004bb0d: ZF := #383 = 0
0004bb11: NF := 31:31[#383]
0004bb17: when ZF <> 1 goto %0004bb15
0006ca2d: goto %0004bb2d

0004bb2d:
0004bb32: R0 := pad:64[mem[R0, el]:u32]
0006ca2e: goto %0004bb23

0004bb15:
0004bb1f: R0 := mem[R0 + 0x10, el]:u64
0004bb25: when R0 = 0 goto %0004bb23
0006ca2f: goto %0004bac2

0004bb23:
0004bb2b: call R30 with noreturn

0006ca30: sub bind(bind_fd, bind_addr, bind_len, bind_result)
0006d0a8: bind_fd :: in u32 = low:32[R0]
0006d0a9: bind_addr :: in u64 = R1
0006d0aa: bind_len :: in u64 = R2
0006d0ab: bind_result :: out u32 = low:32[R0]

0004cfc3:
000647d1: R16 := 0x27000
000647d8: R17 := mem[R16 + 0xCA0, el]:u64
000647de: R16 := R16 + 0xCA0
000647e3: call R17 with noreturn

0006ca31: sub call_weak_fn(call_weak_fn_result)
0006d0ac: call_weak_fn_result :: out u32 = low:32[R0]

000630b7:
000630ba: R0 := 0x27000
000630c1: R0 := mem[R0 + 0xFB0, el]:u64
000630c7: when R0 = 0 goto %000630c5
0006ca32: goto %0006323c

000630c5:
000630cd: call R30 with noreturn

0006323c:
0006323f: goto @__gmon_start__

0006323d:
00064b41: R16 := 0x27000
00064b48: R17 := mem[R16 + 0xDE0, el]:u64
00064b4e: R16 := R16 + 0xDE0
00064b53: call R17 with noreturn

0006ca33: sub calloc(calloc_nmemb, calloc_size, calloc_result)
0006d0ad: calloc_nmemb :: in u64 = R0
0006d0ae: calloc_size :: in u64 = R1
0006d0af: calloc_result :: out u64 = R0

00045f93:
00064a65: R16 := 0x27000
00064a6c: R17 := mem[R16 + 0xD90, el]:u64
00064a72: R16 := R16 + 0xD90
00064a77: call R17 with noreturn

0006ca34: sub chdir(chdir_arg1, chdir_result)
0006d0b0: chdir_arg1 :: in u64 = R0
0006d0b1: chdir_result :: out u32 = low:32[R0]

00063a96:
00064c5f: R16 := 0x27000
00064c66: R17 := mem[R16 + 0xE48, el]:u64
00064c6c: R16 := R16 + 0xE48
00064c71: call R17 with noreturn

0006ca35: sub chunked_data_send(chunked_data_send_result)
0006d0b2: chunked_data_send_result :: out u32 = low:32[R0]

000540b2:
000540b6: #862 := R31 - 0x70
000540bc: mem := mem with [#862, el]:u64 <- R29
000540c2: mem := mem with [#862 + 8, el]:u64 <- R30
000540c6: R31 := #862
000540cc: R29 := R31
000540d2: #863 := R31 + 0x40
000540d8: mem := mem with [#863, el]:u64 <- R25
000540de: mem := mem with [#863 + 8, el]:u64 <- R26
000540e3: R25 := 0x27000
000540ea: R2 := mem[R25 + 0xFB8, el]:u64
000540f0: #864 := R31 + 0x10
000540f6: mem := mem with [#864, el]:u64 <- R19
000540fc: mem := mem with [#864 + 8, el]:u64 <- R20
00054102: R20 := pad:64[31:0[R1]]
00054109: R3 := mem[R2, el]:u64
00054111: mem := mem with [R31 + 0x68, el]:u64 <- R3
00054116: R3 := 0
0005411b: R1 := 0x1000
00054121: #865 := R31 + 0x20
00054127: mem := mem with [#865, el]:u64 <- R21
0005412d: mem := mem with [#865 + 8, el]:u64 <- R22
00054133: R21 := pad:64[31:0[R0]]
00054138: R0 := 0x1000
0005413e: #866 := R31 + 0x30
00054144: mem := mem with [#866, el]:u64 <- R23
0005414a: mem := mem with [#866 + 8, el]:u64 <- R24
00054150: R22 := R31 + 0x58
00054156: R23 := R31 + 0x54
0005415e: mem := mem with [R31 + 0x54, el]:u32 <- 31:0[R1]
00054164: R24 := R31 + 0x60
0005416b: mem := mem with [R31 + 0x60, el]:u64 <- 0
00054170: R30 := 0xC18C
00054172: call @new with return %00054174

00054174:
0005417a: mem := mem with [R31 + 0x58, el]:u64 <- R0
00054180: when ~31:31[R21] goto %0005417e
0006ca36: goto %0005e991

0005417e:
00054187: R2 := R23
0005418d: R1 := R22
00054193: R0 := pad:64[31:0[R20]]
00054198: R30 := 0xC240
0005419a: call @so_recvln with return %0005419c

0005419c:
000541a0: #867 := 31:0[R0] + 0
000541a5: VF := extend:33[#867] <> extend:33[31:0[R0]] + 0
000541aa: CF := pad:33[#867] <> pad:33[31:0[R0]] - 0x100000000
000541ae: ZF := #867 = 0
000541b2: NF := 31:31[#867]
000541ba: when ~(NF = VF & ~ZF) goto %000541b8
0006ca37: goto %0005e80f

0005e80f:
0005e814: R0 := mem[R31 + 0x58, el]:u64
0005e81a: R1 := R24
0005e81f: R2 := 0x10
0005e824: R30 := 0xC258
0005e826: call @strtol with return %0005e828

0005e828:
0005e82c: R19 := R0
0005e831: R30 := 0xC260
0005e833: call @__ctype_b_loc with return %0005e835

0005e835:
0005e83a: R2 := mem[R31 + 0x60, el]:u64
0005e841: R1 := mem[R0, el]:u64
0005e848: R0 := pad:64[mem[R2]]
0005e84e: #1407 := 31:0[R0] - 0x3B
0005e853: VF := extend:33[#1407] <> extend:33[31:0[R0]] - 0x3B
0005e858: CF := pad:33[#1407] <> pad:33[31:0[R0]] + 0xFFFFFFC5
0005e85c: ZF := #1407 = 0
0005e860: NF := 31:31[#1407]
0005e867: R0 := 0.8:1[R0 >> 0x3F | R0 << 1].0
0005e86f: R0 := pad:64[mem[R1 + R0, el]:u16]
0005e875: R0 := pad:64[0.13:13[R0].0]
0005e87b: #1408 := 31:0[R0] + 0
0005e8a1: goto %0005e89b

0005e89b:
0005e89d: when ZF <> 1 goto %0005e880
0005e89e: goto %0005e890

0005e890:
0005e891: VF := 0
0005e894: CF := 0
0005e897: ZF := 0
0005e89a: NF := 0
0005e8a0: goto %0005e89c

0005e880:
0005e881: VF := extend:33[#1408] <> extend:33[31:0[R0]] + 0
0005e886: CF := pad:33[#1408] <> pad:33[31:0[R0]] - 0x100000000
0005e88a: ZF := #1408 = 0
0005e88e: NF := 31:31[#1408]
0005e89f: goto %0005e89c

0005e89c:
0005e8a6: when ZF goto %0005e754
0006ca38: goto %0005e8aa

0005e8aa:
0005e8af: R26 := mem[R31 + 0x58, el]:u64
0005e8b5: R0 := R26
0005e8ba: R30 := 0xC290
0005e8bc: call @strlen with return %0005e8be

0005e8be:
0005e8c2: R1 := R26
0005e8c8: R2 := R0
0005e8ce: R0 := pad:64[31:0[R21]]
0005e8d3: R30 := 0xC2A0
0005e8d5: call @write with return %0005e8d7

0005e8d7:
0005e8da: when 31:0[R19] = 0 goto %0005e63c
0006ca39: goto %0005e8de

0005e8de:
0005e8e2: #1409 := 31:0[R19] + 2
0005e8e7: VF := extend:33[#1409] <> extend:33[31:0[R19]] + 2
0005e8ec: CF := pad:33[#1409] <> pad:33[31:0[R19]] + 2
0005e8f0: ZF := #1409 = 0
0005e8f4: NF := 31:31[#1409]
0005e8f8: R19 := pad:64[#1409]
0005e8fd: when ZF goto %0005417e
0006ca3a: goto %0005e901

0005e901:
0005e906: R2 :=

0005e90c: R1 := pad:64[31:0[R20]]
0005e912: R0 := pad:64[31:0[R21]]
0005e917: R30 := 0xC2BC
0005e919: call @data_send.part.0 with return %0005e91b

0005e91b:
0005e91f: when 31:0[R0] = 0 goto %0005e91d
0006ca3b: goto %0005e957

0005e957:
0005e95b: R2 := R23
0005e961: R1 := R22
0005e967: R0 := pad:64[31:0[R20]]
0005e96c: R30 := 0xC2D0
0005e96e: call @so_recvln with return %0005e970

0005e970:
0005e974: #1410 := 31:0[R0] + 0
0005e979: VF := extend:33[#1410] <> extend:33[31:0[R0]] + 0
0005e97e: CF := pad:33[#1410] <> pad:33[31:0[R0]] - 0x100000000
0005e982: ZF := #1410 = 0
0005e986: NF := 31:31[#1410]
0005e98d: when NF = VF & ~ZF goto %0005e80f
0006ca3c: goto %000541b8

0005e991:
0006ca3d: goto %0005e993

0005e993:
0005e997: R2 := R23
0005e99d: R1 := R22
0005e9a3: R0 := pad:64[31:0[R20]]
0005e9a8: R30 := 0xC1A8
0005e9aa: call @so_recvln with return %0005e9ac

0005e9ac:
0005e9b0: #1411 := 31:0[R0] + 0
0005e9b5: VF := extend:33[#1411] <> extend:33[31:0[R0]] + 0
0005e9ba: CF := pad:33[#1411] <> pad:33[31:0[R0]] - 0x100000000
0005e9be: ZF := #1411 = 0
0005e9c2: NF := 31:31[#1411]
0005e9c9: when ~(NF = VF & ~ZF) goto %000541b8
0006ca3e: goto %0005e9cd

000541b8:
000541c0: R0 := 0x27000
000541c7: R0 := mem[R0 + 0xF78, el]:u64
000541ce: R0 := pad:64[mem[R0, el]:u32]
000541d5: when 31:0[R0] <> 0 goto %000541d3
0006ca3f: goto %000541f0

000541d3:
000541db: R1 := 0x12000
000541e0: R0 := 1
000541e6: R1 := R1 + 0x848
000541eb: R30 := 0xC3E8
000541ed: call @__printf_chk with return %000541ef

000541ef:
000541f2: goto %000541f0

0005e9cd:
0005e9d2: R0 := mem[R31 + 0x58, el]:u64
0005e9d8: R1 := R24
0005e9dd: R2 := 0x10
0005e9e2: R30 := 0xC1C0
0005e9e4: call @strtol with return %0005e9e6

0005e9e6:
0005e9ea: R19 := R0
0005e9ef: R30 := 0xC1C8
0005e9f1: call @__ctype_b_loc with return %0005e9f3

0005e9f3:
0005e9f8: R1 := mem[R31 + 0x60, el]:u64
0005e9ff: R0 := mem[R0, el]:u64
0005ea06: R2 := pad:64[mem[R1]]
0005ea0c: #1412 := 31:0[R2] - 0x3B
0005ea11: VF := extend:33[#1412] <> extend:33[31:0[R2]] - 0x3B
0005ea16: CF := pad:33[#1412] <> pad:33[31:0[R2]] + 0xFFFFFFC5
0005ea1a: ZF := #1412 = 0
0005ea1e: NF := 31:31[#1412]
0005ea25: R2 := 0.8:1[R2 >> 0x3F | R2 << 1].0
0005ea2d: R0 := pad:64[mem[R0 + R2, el]:u16]
0005ea33: R0 := pad:64[0.13:13[R0].0]
0005ea39: #1413 := 31:0[R0] + 0
0005ea5f: goto %0005ea59

0005ea59:
0005ea5b: when ZF <> 1 goto %0005ea3e
0005ea5c: goto %0005ea4e

0005ea4e:
0005ea4f: VF := 0
0005ea52: CF := 0
0005ea55: ZF := 0
0005ea58: NF := 0
0005ea5e: goto %0005ea5a

0005ea3e:
0005ea3f: VF := extend:33[#1413] <> extend:33[31:0[R0]] + 0
0005ea44: CF := pad:33[#1413] <> pad:33[31:0[R0]] - 0x100000000
0005ea48: ZF := #1413 = 0
0005ea4c: NF := 31:31[#1413]
0005ea5d: goto %0005ea5a

0005ea5a:
0005ea64: when ZF goto %0005e754
0006ca40: goto %0005ea68

0005e754:
0005e757: R0 := 0x27000
0005e75e: R0 := mem[R0 + 0xF78, el]:u64
0005e765: R0 := pad:64[mem[R0, el]:u32]
0005e76a: when 31:0[R0] = 0 goto %000541f0
0006ca41: goto %0005e76e

0005e76e:
0005e771: R1 := 0x12000
0005e776: R0 := 1
0005e77c: R1 := R1 + 0x878
0005e781: R30 := 0xC3C4
0005e783: call @__printf_chk with return %0005e785

0005e785:
0005e787: goto %000541f0

0005ea68:
0005ea6b: when 31:0[R19] = 0 goto %0005e63c
0006ca42: goto %0005ea6f

0005e63c:
0005e640: R0 := pad:64[~31:0[R21]]
0005e647: R19 := pad:64[0.0:0[31:0[R0] >> 0x1F | 31:0[R0] << 1]]
0005e64c: goto %0005e64a

0005e64a:
0005e651: R2 := R23
0005e657: R1 := R22
0005e65d: R0 := pad:64[31:0[R20]]
0005e662: R30 := 0xC35C
0005e664: call @so_recvln with return %0005e666

0005e666:
0005e66a: #1400 := 31:0[R0] + 0
0005e66f: VF := extend:33[#1400] <> extend:33[31:0[R0]] + 0
0005e674: CF := pad:33[#1400] <> pad:33[31:0[R0]] - 0x100000000
0005e678: ZF := #1400 = 0
0005e67c: NF := 31:31[#1400]
0005e682: #1401 := 31:0[R19] + 0
0005e6aa: goto %0005e6a4

0005e6a4:
0005e6a6: when NF = VF & ~ZF goto %0005e689
0005e6a7: goto %0005e699

0005e699:
0005e69a: VF := 0
0005e69d: CF := 0
0005e6a0: ZF := 1
0005e6a3: NF := 0
0005e6a9: goto %0005e6a5

0005e689:
0005e68a: VF := extend:33[#1401] <> extend:33[31:0[R19]] + 0
0005e68f: CF := pad:33[#1401] <> pad:33[31:0[R19]] - 0x100000000
0005e693: ZF := #1401 = 0
0005e697: NF := 31:31[#1401]
0005e6a8: goto %0005e6a5

0005e6a5:
0005e6b0: when ZF goto %0005e6ae
0006ca43: goto %0005e789

0005e789:
0005e78e: R24 := mem[R31 + 0x58, el]:u64
0005e794: R0 := R24
0005e799: R30 := 0xC374
0005e79b: call @strlen with return %0005e79d

0005e79d:
0005e7a1: R1 := R24
0005e7a7: R2 := R0
0005e7ad: R0 := pad:64[31:0[R21]]
0005e7b2: R30 := 0xC384
0005e7b4: call @write with return %0005e7b6

0005e7b6:
0005e7bb: R0 := mem[R31 + 0x58, el]:u64
0005e7c2: R1 := pad:64[mem[R0]]
0005e7c8: #1405 := 31:0[R1] - 0xD
0005e7cd: VF := extend:33[#1405] <> extend:33[31:0[R1]] - 0xD
0005e7d2: CF := pad:33[#1405] <> pad:33[31:0[R1]] + 0xFFFFFFF3
0005e7d6: ZF := #1405 = 0
0005e7da: NF := 31:31[#1405]
0005e7e0: #1406 := 31:0[R1] - 0xA
0005e806: goto %0005e800

0005e800:
0005e802: when ZF <> 1 goto %0005e7e5
0005e803: goto %0005e7f5

0005e7f5:
0005e7f6: VF := 0
0005e7f9: CF := 0
0005e7fc: ZF := 1
0005e7ff: NF := 0
0005e805: goto %0005e801

0005e7e5:
0005e7e6: VF := extend:33[#1406] <> extend:33[31:0[R1]] - 0xA
0005e7eb: CF := pad:33[#1406] <> pad:33[31:0[R1]] + 0xFFFFFFF6
0005e7ef: ZF := #1406 = 0
0005e7f3: NF := 31:31[#1406]
0005e804: goto %0005e801

0005e801:
0005e80b: when ZF <> 1 goto %0005e64a
0006ca44: goto %0005e73f

0005e6ae:
0005e6b7: #1402 := 31:0[R0] + 0
0005e6bc: VF := extend:33[#1402] <> extend:33[31:0[R0]] + 0
0005e6c1: CF := pad:33[#1402] <> pad:33[31:0[R0]] - 0x100000000
0005e6c5: ZF := #1402 = 0
0005e6c9: NF := 31:31[#1402]
0005e6d1: when ~(NF = VF & ~ZF) goto %0005e6cf
0006ca45: goto %0005e6eb

0005e6cf:
0005e6d9: R0 := mem[R31 + 0x58, el]:u64
0005e6de: R30 := 0xC3D0
0005e6e0: call @free with return %0005e6e2

0005e6e2:
0005e6e5: R0 := 1
0005e6e9: goto %00054206

0005e6eb:
0005e6f0: R0 := mem[R31 + 0x58, el]:u64
0005e6f7: R1 := pad:64[mem[R0]]
0005e6fd: #1403 := 31:0[R1] - 0xD
0005e702: VF := extend:33[#1403] <> extend:33[31:0[R1]] - 0xD
0005e707: CF := pad:33[#1403] <> pad:33[31:0[R1]] + 0xFFFFFFF3
0005e70b: ZF := #1403 = 0
0005e70f: NF := 31:31[#1403]
0005e715: #1404 := 31:0[R1] - 0xA
0005e73b: goto %0005e735

0005e735:
0005e737: when ZF <> 1 goto %0005e71a
0005e738: goto %0005e72a

0005e72a:
0005e72b: VF := 0
0005e72e: CF := 0
0005e731: ZF := 1
0005e734: NF := 0
0005e73a: goto %0005e736

0005e71a:
0005e71b: VF := extend:33[#1404] <> extend:33[31:0[R1]] - 0xA
0005e720: CF := pad:33[#1404] <> pad:33[31:0[R1]] + 0xFFFFFFF6
0005e724: ZF := #1404 = 0
0005e728: NF := 31:31[#1404]
0005e739: goto %0005e736

0005e736:
0005e741: when ZF goto %0005e73f
0006ca46: goto %0005e64a

0005e73f:
0005e747: R30 := 0xC39C
0005e749: call @free with return %0005e74b

0005e74b:
0005e74e: R0 := 1
0005e752: goto %00054206

0005ea6f:
0005ea73: #1414 := 31:0[R19] + 2
0005ea78: VF := extend:33[#1414] <> extend:33[31:0[R19]] + 2
0005ea7d: CF := pad:33[#1414] <> pad:33[31:0[R19]] + 2
0005ea81: ZF := #1414 = 0
0005ea85: NF := 31:31[#1414]
0005ea89: R19 := pad:64[#1414]
0005ea8e: when ZF goto %0005e993
0006ca47: goto %0005ea92

0005ea92:
0005ea97: R2 :=

0005ea9d: R1 := pad:64[31:0[R20]]
0005eaa3: R0 := pad:64[31:0[R21]]
0005eaa8: R30 := 0xC208
0005eaaa: call @data_send.part.0 with return %0005eaac

0005eaac:
0005eab0: when 31:0[R0] <> 0 goto %0005e993
0006ca48: goto %0005e91d

0005e91d:
0005e925: R0 := 0x27000
0005e92c: R0 := mem[R0 + 0xF78, el]:u64
0005e933: R0 := pad:64[mem[R0, el]:u32]
0005e938: when 31:0[R0] = 0 goto %000541f0
0006ca49: goto %0005e93c

0005e93c:
0005e93f: R1 := 0x12000
0005e944: R0 := 1
0005e94a: R1 := R1 + 0x8B0
0005e94f: R30 := 0xC22C
0005e951: call @__printf_chk with return %0005e953

0005e953:
0005e955: goto %000541f0

000541f0:
000541f8: R0 := mem[R31 + 0x58, el]:u64
000541fd: R30 := 0xC2F0
000541ff: call @free with return %00054201

00054201:
00054204: R0 := 0
0006ca4a: goto %00054206

00054206:
0005420b: R25 := mem[R25 + 0xFB8, el]:u64
00054212: R1 := mem[R31 + 0x68, el]:u64
00054219: R2 := mem[R25, el]:u64
0005421f: #868 := ~R2
00054224: #869 := R1 + ~R2 + 1
0005422a: VF := extend:65[#869] <> extend:65[R1] + extend:65[#868] + 1
00054230: CF := pad:65[#869] <> pad:65[R1] + pad:65[#868] + 1
00054234: ZF := #869 = 0
00054238: NF := 63:63[#869]
0005423c: R1 := #869
00054241: R2 := 0
00054247: when ZF <> 1 goto %00054245
0006ca4b: goto %0005e5e7

00054245:
0005424d: R30 := 0xC3F0
0005424f: call @__stack_chk_fail with return %0006ca4c

0006ca4c:
0006ca4d: call @tunnel with noreturn

0005e5e7:
0005e5eb: #1396 := R31 + 0x10
0005e5f0: R19 := mem[#1396, el]:u64
0005e5f5: R20 := mem[#1396 + 8, el]:u64
0005e5fb: #1397 := R31 + 0x20
0005e600: R21 := mem[#1397, el]:u64
0005e605: R22 := mem[#1397 + 8, el]:u64
0005e60b: #1398 := R31 + 0x30
0005e610: R23 := mem[#1398, el]:u64
0005e615: R24 := mem[#1398 + 8, el]:u64
0005e61b: #1399 := R31 + 0x40
0005e620: R25 := mem[#1399, el]:u64
0005e625: R26 := mem[#1399 + 8, el]:u64
0005e62c: R29 := mem[R31, el]:u64
0005e631: R30 := mem[R31 + 8, el]:u64
0005e635: R31 := R31 + 0x70
0005e63a: call R30 with noreturn

0006ca4e: sub close(close_fd, close_result)
0006d0b3: close_fd :: in u32 = low:32[R0]
0006d0b4: close_result :: out u32 = low:32[R0]

0004b606:
00064aff: R16 := 0x27000
00064b06: R17 := mem[R16 + 0xDC8, el]:u64
00064b0c: R16 := R16 + 0xDC8
00064b11: call R17 with noreturn

0006ca4f: sub config_close(config_close_result)
0006d0b5: config_close_result :: out u32 = low:32[R0]

0004b2b9:
0004b2bd: when R0 = 0 goto %0004b2bb
0006ca50: goto %0004d40b

0004b2bb:
0004b2c3: call R30 with noreturn

0004d40b:
0004d40f: #491 := R31 - 0x20
0004d415: mem := mem with [#491, el]:u64 <- R29
0004d41b: mem := mem with [#491 + 8, el]:u64 <- R30
0004d41f: R31 := #491
0004d425: R29 := R31
0004d42d: mem := mem with [R31 + 0x10, el]:u64 <- R19
0004d433: R19 := R0
0004d43a: R0 := mem[R0, el]:u64
0004d43f: R30 := 0xA5EC
0004d441: call @hlist_free with return %0004d443

0004d443:
0004d447: R0 := R19
0004d44e: R19 := mem[R31 + 0x10, el]:u64
0004d455: R29 := mem[R31, el]:u64
0004d45a: R30 := mem[R31 + 8, el]:u64
0004d45e: R31 := R31 + 0x20
0004d462: call @free with noreturn

0006ca51: sub config_count(config_count_result)
0006d0b6: config_count_result :: out u32 = low:32[R0]

0004b2ae:
0004b2b3: R0 := mem[R0, el]:u64
0004b2b7: call @hlist_count with noreturn

0006ca52: sub config_open(config_open_result)
0006d0b7: config_open_result :: out u32 = low:32[R0]

00049b6b:
00049b6f: #235 := R31 - 0xB0
00049b75: mem := mem with [#235, el]:u64 <- R29
00049b7b: mem := mem with [#235 + 8, el]:u64 <- R30
00049b7f: R31 := #235
00049b84: R4 := 0x6C67
00049b8b: R4 := 63:32[R4].0x626F.15:0[R4]
00049b91: R29 := R31
00049b97: #236 := R31 + 0x20
00049b9d: mem := mem with [#236, el]:u64 <- R21
00049ba3: mem := mem with [#236 + 8, el]:u64 <- R22
00049ba8: R22 := 0x27000
00049baf: R4 := 63:48[R4].0x6C61.31:0[R4]
00049bb6: R2 := mem[R22 + 0xFB8, el]:u64
00049bbb: R5 := 0
00049bc0: R1 := 0x12000
00049bc6: R1 := R1 + 0x3B0
00049bcd: R3 := mem[R2, el]:u64
00049bd5: mem := mem with [R31 + 0xA8, el]:u64 <- R3
00049bda: R3 := 0
00049be0: #237 := R31 + 0x30
00049be6: mem := mem with [#237, el]:u64 <- R23
00049bec: mem := mem with [#237 + 8, el]:u64 <- R24
00049bf2: #238 := R31 + 0x70
00049bf8: mem := mem with [#238, el]:u64 <- R4
00049bfe: mem := mem with [#238 + 8, el]:u64 <- R5
00049c04: #239 := R31 + 0x80
00049c09: mem := mem with [#239, el]:u64 <- 0
00049c0e: mem := mem with [#239 + 8, el]:u64 <- 0
00049c14: #240 := R31 + 0x90
00049c19: mem := mem with [#240, el]:u64 <- 0
00049c1e: mem := mem with [#240 + 8, el]:u64 <- 0
00049c25: mem := mem with [R31 + 0xA0, el]:u16 <- 0
00049c2a: R30 := 0xA1C0
00049c2d: call @fopen with return %00049c2f

00049c2f:
00049c33: when R0 = 0 goto %00049c31
0006ca53: goto %0004dc08

00049c31:
00049c39: R23 := 0
00049c3e: goto %00049c3c

0004dc08:
0004dc0b: R24 := 0x27000
0004dc11: R21 := R0
0004dc16: R0 := 0x1000
0004dc1c: #536 := R31 + 0x10
0004dc22: mem := mem with [#536, el]:u64 <- R19
0004dc28: mem := mem with [#536 + 8, el]:u64 <- R20
0004dc2e: #537 := R31 + 0x40
0004dc34: mem := mem with [#537, el]:u64 <- R25
0004dc3a: mem := mem with [#537 + 8, el]:u64 <- R26
0004dc3f: R25 := 0x12000
0004dc45: R26 := R31 + 0x70
0004dc4b: #538 := R31 + 0x50
0004dc51: mem := mem with [#538, el]:u64 <- R27
0004dc57: mem := mem with [#538 + 8, el]:u64 <- R28
0004dc5c: R30 := 0xA1E8
0004dc5e: call @new with return %0004dc60

0004dc60:
0004dc64: R20 := R0
0004dc69: R0 := 8
0004dc6e: R30 := 0xA1F4
0004dc70: call @new with return %0004dc72

0004dc72:
0004dc77: R24 := mem[R24 + 0xF78, el]:u64
0004dc7d: R23 := R0
0004dc83: R25 := R25 + 0x3D0
0004dc8a: mem := mem with [R0, el]:u64 <- 0
0006ca54: goto %0004d4e2

0004d4e2:
0004d4eb: R0 := R21
0004d4f0: R30 := 0xA210
0004d4f2: call @feof with return %0004d4f4

0004d4f4:
0004d4f9: when 31:0[R0] <> 0 goto %0004d4f7
0006ca55: goto %0004d547

0004d547:
0004d54b: R2 := R21
0004d551: R0 := R20
0004d556: R1 := 0x1000
0004d55b: R30 := 0xA224
0004d55e: call @fgets with return %0004d560

0004d560:
0004d563: when R0 = 0 goto %0004d4f7
0006ca56: goto %0004d567

0004d567:
0004d56b: R0 := R20
0004d570: R30 := 0xA230
0004d572: call @strlen with return %0004d574

0004d574:
0004d578: #497 := R0 - 0x1000
0004d57d: VF := extend:65[#497] <> extend:65[R0] - 0x1000
0004d582: CF := pad:65[#497] <> pad:65[R0] + 0xFFFFFFFFFFFFF000
0004d586: ZF := #497 = 0
0004d58a: NF := 63:63[#497]
0004d590: when CF & ~ZF goto %0004d4c8
0006ca57: goto %0004d594

0004d4c8:
0004d4cb: R19 := 0x1000
0004d4d0: goto %0004d4ce

0004d594:
0004d598: R19 := pad:64[31:0[R0]]
0004d59d: when R0 = 0 goto %0004d4e2
0006ca58: goto %0004d4ce

0004d4ce:
0004d4d5: R0 := R21
0004d4da: R30 := 0xA248
0004d4dd: call @feof with return %0004d4df

0004d4df:
0004d4e4: when 31:0[R0] <> 0 goto %0004d4e2
0006ca59: goto %0004d5a1

0004d5a1:
0004d5a4: R30 := 0xA250
0004d5a6: call @__ctype_b_loc with return %0004d5a8

0004d5a8:
0004d5ac: R28 := R0
0004d5b1: R2 := 0
0004d5b8: R5 := mem[R0, el]:u64
0004d5bd: goto %0004d5bb

0004d5bb:
0004d5c4: R4 := pad:64[mem[R20 + R2]]
0004d5ca: R1 := pad:64[31:0[R2]]
0004d5d1: R3 := 0.8:1[R4 >> 0x3F | R4 << 1].0
0004d5d9: R3 := pad:64[mem[R5 + R3, el]:u16]
0004d5df: when 13:13[R3] goto %0004d5dd
0006ca5a: goto %0004d610

0004d610:
0004d614: #500 := 31:0[R4] - 0x23
0004d619: VF := extend:33[#500] <> extend:33[31:0[R4]] - 0x23
0004d61e: CF := pad:33[#500] <> pad:33[31:0[R4]] + 0xFFFFFFDD
0004d622: ZF := #500 = 0
0004d626: NF := 31:31[#500]
0004d62b: R0 := 0x3B
0004d631: #501 := ~31:0[R0]
0004d636: #502 := 31:0[R4] + ~31:0[R0] + 1
0004d65e: goto %0004d658

0004d658:
0004d65a: when ZF <> 1 goto %0004d63c
0004d65b: goto %0004d64d

0004d64d:
0004d64e: VF := 0
0004d651: CF := 0
0004d654: ZF := 1
0004d657: NF := 0
0004d65d: goto %0004d659

0004d63c:
0004d63d: VF := extend:33[#502] <> extend:33[31:0[R4]] + extend:33[#501] + 1
0004d643: CF := pad:33[#502] <> pad:33[31:0[R4]] + pad:33[#501] + 1
0004d647: ZF := #502 = 0
0004d64b: NF := 31:31[#502]
0004d65c: goto %0004d659

0004d659:
0004d666: R4 :=

0004d66b: when ZF goto %0004d4e2
0006ca5b: goto %0004d66f

0004d66f:
0004d673: when ~3:3[R3] goto %0004d671
0006ca5c: goto %0004dbc3

0004dbc3:
0004dbc7: R4 := R4 + 1
0004dbcd: #534 := ~31:0[R4]
0004dbd2: #535 := 31:0[R19] + ~31:0[R4] + 1
0004dbd8: VF := extend:33[#535] <> extend:33[31:0[R19]] + extend:33[#534] + 1
0004dbde: CF := pad:33[#535] <> pad:33[31:0[R19]] + pad:33[#534] + 1
0004dbe2: ZF := #535 = 0
0004dbe6: NF := 31:31[#535]
0004dbed: when ~(NF = VF & ~ZF) goto %0004d4e2
0006ca5d: goto %0004dbf1

0004dbf1:
0004dbf7: R2 := pad:64[mem[R20 + R4]]
0004dbff: R3 := pad:64[mem[R5 + (62:0[R2].0), el]:u16]
0004dc04: when 3:3[R3] goto %0004dbc3
0006ca5e: goto %0004d671

0004d671:
0004d67a: #503 := ~31:0[R4]
0004d67f: #504 := 31:0[R19] + ~31:0[R4] + 1
0004d685: VF := extend:33[#504] <> extend:33[31:0[R19]] + extend:33[#503] + 1
0004d68b: CF := pad:33[#504] <> pad:33[31:0[R19]] + pad:33[#503] + 1
0004d68f: ZF := #504 = 0
0004d693: NF := 31:31[#504]
0004d69a: when ~(NF = VF & ~ZF) goto %0004d4e2
0006ca5f: goto %0004d69e

0004d69e:
0004d6a4: R0 := pad:64[mem[R20 + extend:64[31:0[R4]]]]
0004d6ab: R27 :=

0004d6b1: #505 := 31:0[R0] - 0x5B
0004d6b6: VF := extend:33[#505] <> extend:33[31:0[R0]] - 0x5B
0004d6bb: CF := pad:33[#505] <> pad:33[31:0[R0]] + 0xFFFFFFA5
0004d6bf: ZF := #505 = 0
0004d6c3: NF := 31:31[#505]
0004d6c9: when ZF goto %0004d6c7
0006ca60: goto %0004d892

0004d6c7:
0004d6d0: R0 := pad:64[31:0[R4] + 1]
0004d6d6: #506 := ~31:0[R0]
0004d6db: #507 := 31:0[R19] + ~31:0[R0] + 1
0004d6e1: VF := extend:33[#507] <> extend:33[31:0[R19]] + extend:33[#506] + 1
0004d6e7: CF := pad:33[#507] <> pad:33[31:0[R19]] + pad:33[#506] + 1
0004d6eb: ZF := #507 = 0
0004d6ef: NF := 31:31[#507]
0004d6f6: when ~(NF = VF & ~ZF) goto %0004d4e2
0006ca61: goto %0004d6fa

0004d6fa:
0004d6ff: R0 :=

0004d704: goto %0004d702

0004d702:
0004d70b: R2 := pad:64[mem[R20 + R0]]
0004d711: R6 := pad:64[31:0[R0]]
0004d718: R1 := R20 + R0
0004d720: R2 := pad:64[mem[R5 + (62:0[R2].0), el]:u16]
0004d726: when 13:13[R2] goto %0004d724
0006ca62: goto %0004d757

0004d757:
0004d75b: #510 := ~31:0[R0]
0004d760: #511 := 31:0[R19] + ~31:0[R0] + 1
0004d766: VF := extend:33[#511] <> extend:33[31:0[R19]] + extend:33[#510] + 1
0004d76c: CF := pad:33[#511] <> pad:33[31:0[R19]] + pad:33[#510] + 1
0004d770: ZF := #511 = 0
0004d774: NF := 31:31[#511]
0004d77b: when ~(NF = VF & ~ZF) goto %0004d4e2
0006ca63: goto %0004d77f

0004d77f:
0004d783: R4 := pad:64[31:0[R19] - 1]
0004d78a: R0 :=

0004d791: R4 := pad:64[31:0[R4] + ~31:0[R6] + 1]
0004d796: R7 := 1
0004d79c: R8 := R0 + 0x31
0004d7a3: R4 := R4 + R0
0004d7aa: R7 := pad:64[31:0[R7] + ~31:0[R6] + 1]
0004d7af: goto %0004d7ad

0004d7ad:
0004d7b6: R2 := pad:64[mem[R20 + R0]]
0004d7bc: R3 := pad:64[31:0[R0]]
0004d7c2: #512 := 31:0[R2] - 0x5D
0004d7c7: VF := extend:33[#512] <> extend:33[31:0[R2]] - 0x5D
0004d7cc: CF := pad:33[#512] <> pad:33[31:0[R2]] + 0xFFFFFFA3
0004d7d0: ZF := #512 = 0
0004d7d4: NF := 31:31[#512]
0004d7da: when ZF <> 1 goto %0004d7d8
0006ca64: goto %0004d7ee

0004d7d8:
0004d7e2: R2 := 0.8:1[R2 >> 0x3F | R2 << 1].0
0004d7ea: R2 := pad:64[mem[R5 + R2, el]:u16]
0004d7f0: when 13:13[R2] goto %0004d7ee
0006ca65: goto %0004d839

0004d7ee:
0004d7f8: R3 := pad:64[31:0[R3] + ~31:0[R6] + 1]
0006ca66: goto %0004d7fa

0004d839:
0004d83e: R3 := pad:64[31:0[R7] + 31:0[R3]]
0004d844: #514 := ~R4
0004d849: #515 := R0 + ~R4 + 1
0004d84f: VF := extend:65[#515] <> extend:65[R0] + extend:65[#514] + 1
0004d855: CF := pad:65[#515] <> pad:65[R0] + pad:65[#514] + 1
0004d859: ZF := #515 = 0
0004d85d: NF := 63:63[#515]
0004d862: when ZF goto %0004d7fa
0006ca67: goto %0004d866

0004d866:
0004d86a: R0 := R0 + 1
0004d870: #516 := ~R0
0004d875: #517 := R8 + ~R0 + 1
0004d87b: VF := extend:65[#517] <> extend:65[R8] + extend:65[#516] + 1
0004d881: CF := pad:65[#517] <> pad:65[R8] + pad:65[#516] + 1
0004d885: ZF := #517 = 0
0004d889: NF := 63:63[#517]
0004d88e: when ZF goto %0004d7fa
0006ca68: goto %0004d7ad

0004d7fa:
0004d7fe: #513 := 31:0[R3] + 0
0004d803: VF := extend:33[#513] <> extend:33[31:0[R3]] + 0
0004d808: CF := pad:33[#513] <> pad:33[31:0[R3]] - 0x100000000
0004d80c: ZF := #513 = 0
0004d810: NF := 31:31[#513]
0004d817: when ~(NF = VF & ~ZF) goto %0004d4e2
0006ca69: goto %0004d81b

0004d81b:
0004d81f: R3 := pad:64[31:0[R3] + 1]
0004d825: R0 := R26
0004d82c: R2 :=

0004d831: R30 := 0xA49C
0004d833: call @strlcpy with return %0004d835

0004d835:
0004d837: goto %0004d4e2

0004d724:
0004d72d: R0 := R0 + 1
0004d733: #508 := ~31:0[R0]
0004d738: #509 := 31:0[R19] + ~31:0[R0] + 1
0004d73e: VF := extend:33[#509] <> extend:33[31:0[R19]] + extend:33[#508] + 1
0004d744: CF := pad:33[#509] <> pad:33[31:0[R19]] + pad:33[#508] + 1
0004d748: ZF := #509 = 0
0004d74c: NF := 31:31[#509]
0004d753: when ~(NF = VF & ~ZF) goto %0004d4e2
0006ca6a: goto %0004d702

0004d892:
0004d897: R2 := pad:64[31:0[R4] + ~31:0[R1] + 1]
0004d89d: R0 := R20
0004d8a2: R30 := 0xA2D4
0004d8a4: call @substr with return %0004d8a6

0004d8a6:
0004d8aa: R3 := R0
0004d8b1: R5 := mem[R28, el]:u64
0004d8b6: goto %0004d8b4

0004d8b4:
0004d8bd: R1 := pad:64[mem[R20 + R27]]
0004d8c4: R4 := 0.8:1[R1 >> 0x3F | R1 << 1].0
0004d8cc: R4 := pad:64[mem[R5 + R4, el]:u16]
0004d8d2: when 13:13[R4] goto %0004d8d0
0006ca6b: goto %0004d903

0004d903:
0004d907: #520 := ~31:0[R27]
0004d90c: #521 := 31:0[R19] + ~31:0[R27] + 1
0004d912: VF := extend:33[#521] <> extend:33[31:0[R19]] + extend:33[#520] + 1
0004d918: CF := pad:33[#521] <> pad:33[31:0[R19]] + pad:33[#520] + 1
0004d91c: ZF := #521 = 0
0004d920: NF := 31:31[#521]
0004d927: when ~(NF = VF & ~ZF) goto %0004d4e2
0006ca6c: goto %0004d92b

0004d92b:
0004d92f: #522 := 31:0[R1] - 0x3B
0004d934: VF := extend:33[#522] <> extend:33[31:0[R1]] - 0x3B
0004d939: CF := pad:33[#522] <> pad:33[31:0[R1]] + 0xFFFFFFC5
0004d93d: ZF := #522 = 0
0004d941: NF := 31:31[#522]
0004d946: R0 := 0x23
0004d94c: #523 := ~31:0[R0]
0004d951: #524 := 31:0[R1] + ~31:0[R0] + 1
0004d979: goto %0004d973

0004d973:
0004d975: when ZF <> 1 goto %0004d957
0004d976: goto %0004d968

0004d968:
0004d969: VF := 0
0004d96c: CF := 0
0004d96f: ZF := 1
0004d972: NF := 0
0004d978: goto %0004d974

0004d957:
0004d958: VF := extend:33[#524] <> extend:33[31:0[R1]] + extend:33[#523] + 1
0004d95e: CF := pad:33[#524] <> pad:33[31:0[R1]] + pad:33[#523] + 1
0004d962: ZF := #524 = 0
0004d966: NF := 31:31[#524]
0004d977: goto %0004d974

0004d974:
0004d97f: when ZF goto %0004d4e2
0006ca6d: goto %0004d983

0004d983:
0004d987: #525 := 31:0[R1] - 0x22
0004d98c: VF := extend:33[#525] <> extend:33[31:0[R1]] - 0x22
0004d991: CF := pad:33[#525] <> pad:33[31:0[R1]] + 0xFFFFFFDE
0004d995: ZF := #525 = 0
0004d999: NF := 31:31[#525]
0004d99f: when ZF goto %0004d99d
0006ca6e: goto %0004db23

0004d99d:
0004d9a6: R1 := pad:64[31:0[R27] + 1]
0004d9ac: #526 := ~31:0[R1]
0004d9b1: #527 := 31:0[R19] + ~31:0[R1] + 1
0004d9b7: VF := extend:33[#527] <> extend:33[31:0[R19]] + extend:33[#526] + 1
0004d9bd: CF := pad:33[#527] <> pad:33[31:0[R19]] + pad:33[#526] + 1
0004d9c1: ZF := #527 = 0
0004d9c5: NF := 31:31[#527]
0004d9cc: when ~(NF = VF & ~ZF) goto %0004d4e2
0006ca6f: goto %0004d9d0

0004d9d0:
0004d9d6: R0 := pad:64[mem[R20 + extend:64[31:0[R1]]]]
0004d9dc: #528 := 31:0[R0] - 0x22
0004d9e1: VF := extend:33[#528] <> extend:33[31:0[R0]] - 0x22
0004d9e6: CF := pad:33[#528] <> pad:33[31:0[R0]] + 0xFFFFFFDE
0004d9ea: ZF := #528 = 0
0004d9ee: NF := 31:31[#528]
0004d9f4: when ZF goto %0004d9f2
0006ca70: goto %0004dab5

0004d9f2:
0004d9fb: R2 := pad:64[31:0[R1]]
0004da00: goto %0004d9fe

0004dab5:
0004dab9: R2 := pad:64[31:0[R27] + 2]
0004dabf: R5 := R20 - 1
0004dac6: R4 :=

0006ca71: goto %0004dac8

0004dac8:
0004dacc: R2 := pad:64[31:0[R4]]
0004dad2: R4 := R4 + 1
0004dada: R0 := pad:64[mem[R5 + R4]]
0004dae0: #529 := 31:0[R0] - 0x22
0004dae5: VF := extend:33[#529] <> extend:33[31:0[R0]] - 0x22
0004daea: CF := pad:33[#529] <> pad:33[31:0[R0]] + 0xFFFFFFDE
0004daee: ZF := #529 = 0
0004daf2: NF := 31:31[#529]
0004daf7: when ZF <> 1 goto %0004dac8
0006ca72: goto %0004dafb

0004dafb:
0004daff: #530 := ~31:0[R2]
0004db04: #531 := 31:0[R19] + ~31:0[R2] + 1
0004db0a: VF := extend:33[#531] <> extend:33[31:0[R19]] + extend:33[#530] + 1
0004db10: CF := pad:33[#531] <> pad:33[31:0[R19]] + pad:33[#530] + 1
0004db14: ZF := #531 = 0
0004db18: NF := 31:31[#531]
0004db1f: when ~(NF = VF & ~ZF) goto %0004d4e2
0006ca73: goto %0004d9fe

0004d9fe:
0004da06: R2 := pad:64[31:0[R2] + ~31:0[R1] + 1]
0004da0c: R0 := R20
0004da14: mem := mem with [R31 + 0x68, el]:u64 <- R3
0004da19: R30 := 0xA51C
0004da1b: call @substr with return %0004da1d

0004da1d:
0004da21: R19 := R0
0004da28: R3 := mem[R31 + 0x68, el]:u64
0004da2d: goto %0004da2b

0004db23:
0004db28: R2 := pad:64[31:0[R19] + ~31:0[R27] + 1]
0004db2e: R1 := pad:64[31:0[R27]]
0004db34: R0 := R20
0004db3c: mem := mem with [R31 + 0x68, el]:u64 <- R3
0004db41: R30 := 0xA330
0004db43: call @substr with return %0004db45

0004db45:
0004db49: R19 := R0
0004db4f: R1 := R25
0004db54: R30 := 0xA33C
0004db56: call @strcspn with return %0004db58

0004db58:
0004db5c: R27 := R0
0004db62: R0 := R19
0004db69: R27 :=

0004db6e: R30 := 0xA34C
0004db70: call @strlen with return %0004db72

0004db72:
0004db76: #532 := ~R0
0004db7b: #533 := R27 + ~R0 + 1
0004db81: VF := extend:65[#533] <> extend:65[R27] + extend:65[#532] + 1
0004db87: CF := pad:65[#533] <> pad:65[R27] + pad:65[#532] + 1
0004db8b: ZF := #533 = 0
0004db8f: NF := 63:63[#533]
0004db96: R3 := mem[R31 + 0x68, el]:u64
0004db9c: when ZF goto %0004db9a
0006ca74: goto %0004dbbb

0004dbbb:
0004dbc1: mem := mem with [R19 + R27] <- 0
0006ca75: goto %0004db9a

0004db9a:
0004dba3: R0 := R19
0004dbab: mem := mem with [R31 + 0x68, el]:u64 <- R3
0004dbb0: R30 := 0xA368
0004dbb2: call @trimr with return %0004dbb4

0004dbb4:
0004dbb9: R3 := mem[R31 + 0x68, el]:u64
0006ca76: goto %0004da2b

0004da2b:
0004da33: R0 := pad:64[mem[R24, el]:u32]
0004da3a: when 31:0[R0] <> 0 goto %0004da38
0006ca77: goto %0004da70

0004da38:
0004da41: R4 := R19
0004da47: R2 := R26
0004da4c: R1 := 0x12000
0004da51: R0 := 1
0004da57: R1 := R1 + 0x3B8
0004da5f: mem := mem with [R31 + 0x68, el]:u64 <- R3
0004da64: R30 := 0xA4C4
0004da66: call @__printf_chk with return %0004da68

0004da68:
0004da6d: R3 := mem[R31 + 0x68, el]:u64
0004da72: goto %0004da70

0004da70:
0004da78: R0 := mem[R23, el]:u64
0004da7e: R1 := R3
0004da84: R2 := R19
0004da89: R4 := 0
0004da8e: R3 := 0
0004da93: R30 := 0xA38C
0004da95: call @hlist_add with return %0004da97

0004da97:
0004da9d: mem := mem with [R23, el]:u64 <- R0
0004daa3: R0 := R21
0004daa8: R30 := 0xA398
0004daaa: call @feof with return %0004daac

0004daac:
0004daaf: when 31:0[R0] = 0 goto %0004d547
0006ca78: goto %0004dab3

0004dab3:
0006ca79: goto %0004d4f7

0004d4f7:
0004d500: R0 := R20
0004d505: R30 := 0xA3A8
0004d507: call @free with return %0004d509

0004d509:
0004d50d: R0 := R21
0004d512: R30 := 0xA3B0
0004d515: call @fclose with return %0004d517

0004d517:
0004d51b: #494 := R31 + 0x10
0004d520: R19 := mem[#494, el]:u64
0004d525: R20 := mem[#494 + 8, el]:u64
0004d52b: #495 := R31 + 0x40
0004d530: R25 := mem[#495, el]:u64
0004d535: R26 := mem[#495 + 8, el]:u64
0004d53b: #496 := R31 + 0x50
0004d540: R27 := mem[#496, el]:u64
0004d545: R28 := mem[#496 + 8, el]:u64
0006ca7a: goto %00049c3c

00049c3c:
00049c44: R22 := mem[R22 + 0xFB8, el]:u64
00049c4b: R0 := mem[R31 + 0xA8, el]:u64
00049c52: R1 := mem[R22, el]:u64
00049c58: #241 := ~R1
00049c5d: #242 := R0 + ~R1 + 1
00049c63: VF := extend:65[#242] <> extend:65[R0] + extend:65[#241] + 1
00049c69: CF := pad:65[#242] <> pad:65[R0] + pad:65[#241] + 1
00049c6d: ZF := #242 = 0
00049c71: NF := 63:63[#242]
00049c75: R0 := #242
00049c7a: R1 := 0
00049c80: when ZF <> 1 goto %00049c7e
0006ca7b: goto %0004d48d

00049c7e:
00049c87: #243 := R31 + 0x10
00049c8d: mem := mem with [#243, el]:u64 <- R19
00049c93: mem := mem with [#243 + 8, el]:u64 <- R20
00049c99: #244 := R31 + 0x40
00049c9f: mem := mem with [#244, el]:u64 <- R25
00049ca5: mem := mem with [#244 + 8, el]:u64 <- R26
00049cab: #245 := R31 + 0x50
00049cb1: mem := mem with [#245, el]:u64 <- R27
00049cb7: mem := mem with [#245 + 8, el]:u64 <- R28
00049cbc: R30 := 0xA540
00049cbe: call @__stack_chk_fail with return %0006ca7c

0006ca7c:
0006ca7d: call @config_set with noreturn

0004d48d:
0004d491: R0 := R23
0004d497: #492 := R31 + 0x20
0004d49c: R21 := mem[#492, el]:u64
0004d4a1: R22 := mem[#492 + 8, el]:u64
0004d4a7: #493 := R31 + 0x30
0004d4ac: R23 := mem[#493, el]:u64
0004d4b1: R24 := mem[#493 + 8, el]:u64
0004d4b8: R29 := mem[R31, el]:u64
0004d4bd: R30 := mem[R31 + 8, el]:u64
0004d4c1: R31 := R31 + 0xB0
0004d4c6: call R30 with noreturn

0004d8d0:
0004d8d9: R27 := R27 + 1
0004d8df: #518 := ~31:0[R27]
0004d8e4: #519 := 31:0[R19] + ~31:0[R27] + 1
0004d8ea: VF := extend:33[#519] <> extend:33[31:0[R19]] + extend:33[#518] + 1
0004d8f0: CF := pad:33[#519] <> pad:33[31:0[R19]] + pad:33[#518] + 1
0004d8f4: ZF := #519 = 0
0004d8f8: NF := 31:31[#519]
0004d8ff: when ~(NF = VF & ~ZF) goto %0004d4e2
0006ca7e: goto %0004d8b4

0004d5dd:
0004d5e6: R2 := R2 + 1
0004d5ec: #498 := ~31:0[R2]
0004d5f1: #499 := 31:0[R19] + ~31:0[R2] + 1
0004d5f7: VF := extend:33[#499] <> extend:33[31:0[R19]] + extend:33[#498] + 1
0004d5fd: CF := pad:33[#499] <> pad:33[31:0[R19]] + pad:33[#498] + 1
0004d601: ZF := #499 = 0
0004d605: NF := 31:31[#499]
0004d60c: when ~(NF = VF & ~ZF) goto %0004d4e2
0006ca7f: goto %0004d5bb

0006ca80: sub config_pop(config_pop_result)
0006d0b8: config_pop_result :: out u32 = low:32[R0]

0004b21d:
0004b221: #334 := R31 - 0x30
0004b227: mem := mem with [#334, el]:u64 <- R29
0004b22d: mem := mem with [#334 + 8, el]:u64 <- R30
0004b231: R31 := #334
0004b237: R29 := R31
0004b23d: #335 := R31 + 0x10
0004b243: mem := mem with [#335, el]:u64 <- R19
0004b249: mem := mem with [#335 + 8, el]:u64 <- R20
0004b24f: R20 := R0
0004b256: R0 := mem[R0, el]:u64
0004b25e: mem := mem with [R31 + 0x20, el]:u64 <- R21
0004b264: R21 := R1
0004b269: R30 := 0xA590
0004b26b: call @hlist_get with return %0004b26d

0004b26d:
0004b271: R19 := R0
0004b277: when R0 = 0 goto %0004b275
0006ca81: goto %0004d464

0004d464:
0004d467: R30 := 0xA59C
0004d469: call @strdup with return %0004d46b

0004d46b:
0004d46f: R19 := R0
0004d476: R0 := mem[R20, el]:u64
0004d47c: R1 := R21
0004d481: R30 := 0xA5AC
0004d483: call @hlist_del with return %0004d485

0004d485:
0004d48b: mem := mem with [R20, el]:u64 <- R0
0006ca82: goto %0004b275

0004b275:
0004b27e: R0 := R19
0004b284: #336 := R31 + 0x10
0004b289: R19 := mem[#336, el]:u64
0004b28e: R20 := mem[#336 + 8, el]:u64
0004b295: R21 := mem[R31 + 0x20, el]:u64
0004b29c: R29 := mem[R31, el]:u64
0004b2a1: R30 := mem[R31 + 8, el]:u64
0004b2a5: R31 := R31 + 0x30
0004b2aa: call R30 with noreturn

0006ca83: sub config_set(config_set_result)
0006d0b9: config_set_result :: out u32 = low:32[R0]

00049cc0:
00049cc4: #246 := R31 - 0x20
00049cca: mem := mem with [#246, el]:u64 <- R29
00049cd0: mem := mem with [#246 + 8, el]:u64 <- R30
00049cd4: R31 := #246
00049cd9: R3 := 1
00049cdf: R29 := R31
00049ce7: mem := mem with [R31 + 0x10, el]:u64 <- R19
00049ced: R19 := R0
00049cf4: R0 := mem[R0, el]:u64
00049cf9: R30 := 0xA55C
00049cfc: call @hlist_mod with return %0004b1f7

0004b1f7:
0004b1fd: mem := mem with [R19, el]:u64 <- R0
0004b204: R19 := mem[R31 + 0x10, el]:u64
0004b20b: R29 := mem[R31, el]:u64
0004b210: R30 := mem[R31 + 8, el]:u64
0004b214: R31 := R31 + 0x20
0004b219: call R30 with noreturn

0006ca84: sub connect(connect_fd, connect_addr, connect_len, connect_result)
0006d0ba: connect_fd :: in u32 = low:32[R0]
0006d0bb: connect_addr :: in u64 = R1
0006d0bc: connect_len :: in u64 = R2
0006d0bd: connect_result :: out u32 = low:32[R0]

0004d1de:
00064cb7: R16 := 0x27000
00064cbe: R17 := mem[R16 + 0xE68, el]:u64
00064cc4: R16 := R16 + 0xE68
00064cc9: call R17 with noreturn

0006ca85: sub copy_auth(copy_auth_result)
0006d0be: copy_auth_result :: out u32 = low:32[R0]

00045e1b:
00045e1f: #9 := R31 - 0x40
00045e25: mem := mem with [#9, el]:u64 <- R29
00045e2b: mem := mem with [#9 + 8, el]:u64 <- R30
00045e2f: R31 := #9
00045e35: R4 := R1 + 0x200
00045e3b: R3 := R0 + 0x200
00045e41: R29 := R31
00045e47: #10 := R31 + 0x10
00045e4d: mem := mem with [#10, el]:u64 <- R19
00045e53: mem := mem with [#10 + 8, el]:u64 <- R20
00045e59: R20 := R1
00045e60: V0 := pad:128[mem[R4 - 0xD4, el]:u64]
00045e66: #11 := R31 + 0x20
00045e6c: mem := mem with [#11, el]:u64 <- R21
00045e72: mem := mem with [#11 + 8, el]:u64 <- R22
00045e78: R19 := R0
00045e7e: R1 := R1 + 0x32
00045e84: #12 := R31 + 0x30
00045e8a: mem := mem with [#12, el]:u64 <- R23
00045e90: mem := mem with [#12 + 8, el]:u64 <- R24
00045e96: R0 := R0 + 0x32
00045e9c: R24 := pad:64[31:0[R2]]
00045ea4: mem := mem with [R3 - 0xD4, el]:u64 <- 63:0[V0]
00045ea9: R2 := 0x32
00045eb0: R4 := pad:64[mem[R20 + 0x134, el]:u32]
00045eb6: R22 := R19 + 0xFA
00045ebd: R3 := pad:64[mem[R20 + 0x138, el]:u32]
00045ec3: R23 := R19 + 0xC8
00045ecb: mem := mem with [R19 + 0x134, el]:u32 <- 31:0[R4]
00045ed1: R21 := R19 + 0x96
00045ed9: mem := mem with [R19 + 0x138, el]:u32 <- 31:0[R3]
00045ede: R30 := 0xB154
00045ee1: call @strlcpy with return %0005fe50

0005fe50:
0005fe54: R1 := R20 + 0x64
0005fe5a: R0 := R19 + 0x64
0005fe5f: R2 := 0x32
0005fe64: R30 := 0xB164
0005fe66: call @strlcpy with return %0005fe68

0005fe68:
0005fe6c: when 31:0[R24] = 0 goto %0005fe6a
0006ca86: goto %0005ff8a

0005fe6a:
0005fe74: mem := mem with [R19, el]:u64 <- 0
0005fe79: mem := mem with [R19 + 8, el]:u64 <- 0
0005fe7f: R0 := R19
0005fe85: #1480 := R19 + 0x10
0005fe8a: mem := mem with [#1480, el]:u64 <- 0
0005fe8f: mem := mem with [#1480 + 8, el]:u64 <- 0
0005fe95: #1481 := R19 + 0x20
0005fe9a: mem := mem with [#1481, el]:u64 <- 0
0005fe9f: mem := mem with [#1481 + 8, el]:u64 <- 0
0005fea6: mem := mem with [R19 + 0x30, el]:u16 <- 0
0005fead: mem := mem with [R22, el]:u64 <- 0
0005feb2: mem := mem with [R22 + 8, el]:u64 <- 0
0005feb8: #1482 := R22 + 0x10
0005febd: mem := mem with [#1482, el]:u64 <- 0
0005fec2: mem := mem with [#1482 + 8, el]:u64 <- 0
0005fec8: #1483 := R22 + 0x20
0005fecd: mem := mem with [#1483, el]:u64 <- 0
0005fed2: mem := mem with [#1483 + 8, el]:u64 <- 0
0005fed9: mem := mem with [R22 + 0x30, el]:u16 <- 0
0005fedf: #1484 := R19 + 0xC8
0005fee4: mem := mem with [#1484, el]:u64 <- 0
0005fee9: mem := mem with [#1484 + 8, el]:u64 <- 0
0005feef: #1485 := R23 + 0x10
0005fef4: mem := mem with [#1485, el]:u64 <- 0
0005fef9: mem := mem with [#1485 + 8, el]:u64 <- 0
0005feff: #1486 := R23 + 0x20
0005ff04: mem := mem with [#1486, el]:u64 <- 0
0005ff09: mem := mem with [#1486 + 8, el]:u64 <- 0
0005ff10: mem := mem with [R23 + 0x30, el]:u16 <- 0
0005ff17: mem := mem with [R21, el]:u64 <- 0
0005ff1c: mem := mem with [R21 + 8, el]:u64 <- 0
0005ff22: #1487 := R21 + 0x10
0005ff27: mem := mem with [#1487, el]:u64 <- 0
0005ff2c: mem := mem with [#1487 + 8, el]:u64 <- 0
0005ff32: #1488 := R21 + 0x20
0005ff37: mem := mem with [#1488, el]:u64 <- 0
0005ff3c: mem := mem with [#1488 + 8, el]:u64 <- 0
0005ff43: mem := mem with [R21 + 0x30, el]:u16 <- 0
0005ff49: #1489 := R31 + 0x10
0005ff4e: R19 := mem[#1489, el]:u64
0005ff53: R20 := mem[#1489 + 8, el]:u64
0005ff59: #1490 := R31 + 0x20
0005ff5e: R21 := mem[#1490, el]:u64
0005ff63: R22 := mem[#1490 + 8, el]:u64
0005ff69: #1491 := R31 + 0x30
0005ff6e: R23 := mem[#1491, el]:u64
0005ff73: R24 := mem[#1491 + 8, el]:u64
0005ff7a: R29 := mem[R31, el]:u64
0005ff7f: R30 := mem[R31 + 8, el]:u64
0005ff83: R31 := R31 + 0x40
0005ff88: call R30 with noreturn

0005ff8a:
0005ff8e: R1 := R20
0005ff94: R0 := R19
0005ff99: R2 := 0x32
0005ff9e: R30 := 0xB178
0005ffa0: call @strlcpy with return %0005ffa2

0005ffa2:
0005ffa6: R1 := R20 + 0xFA
0005ffac: R0 := R20 + 0x96
0005ffb3: R2 := mem[R1, el]:u64
0005ffb8: R3 := mem[R1 + 8, el]:u64
0005ffc0: mem := mem with [R22, el]:u64 <- R2
0005ffc6: mem := mem with [R22 + 8, el]:u64 <- R3
0005ffcc: #1492 := R1 + 0x10
0005ffd1: R2 := mem[#1492, el]:u64
0005ffd6: R3 := mem[#1492 + 8, el]:u64
0005ffdc: #1493 := R22 + 0x10
0005ffe2: mem := mem with [#1493, el]:u64 <- R2
0005ffe8: mem := mem with [#1493 + 8, el]:u64 <- R3
0005ffee: #1494 := R1 + 0x20
0005fff3: R2 := mem[#1494, el]:u64
0005fff8: R3 := mem[#1494 + 8, el]:u64
0005fffe: #1495 := R22 + 0x20
00060004: mem := mem with [#1495, el]:u64 <- R2
0006000a: mem := mem with [#1495 + 8, el]:u64 <- R3
00060011: R1 := pad:64[mem[R20 + 0x12A, el]:u16]
00060019: mem := mem with [R22 + 0x30, el]:u16 <- 15:0[R1]
0006001f: #1496 := R20 + 0xC8
00060024: R2 := mem[#1496, el]:u64
00060029: R3 := mem[#1496 + 8, el]:u64
0006002f: #1497 := R19 + 0xC8
00060035: mem := mem with [#1497, el]:u64 <- R2
0006003b: mem := mem with [#1497 + 8, el]:u64 <- R3
00060041: #1498 := R20 + 0xD8
00060046: R2 := mem[#1498, el]:u64
0006004b: R3 := mem[#1498 + 8, el]:u64
00060051: #1499 := R23 + 0x10
00060057: mem := mem with [#1499, el]:u64 <- R2
0006005d: mem := mem with [#1499 + 8, el]:u64 <- R3
00060063: #1500 := R20 + 0xE8
00060068: R2 := mem[#1500, el]:u64
0006006d: R3 := mem[#1500 + 8, el]:u64
00060073: #1501 := R23 + 0x20
00060079: mem := mem with [#1501, el]:u64 <- R2
0006007f: mem := mem with [#1501 + 8, el]:u64 <- R3
00060086: R1 := pad:64[mem[R20 + 0xF8, el]:u16]
0006008e: mem := mem with [R23 + 0x30, el]:u16 <- 15:0[R1]
00060095: R2 := mem[R0, el]:u64
0006009a: R3 := mem[R0 + 8, el]:u64
000600a2: mem := mem with [R21, el]:u64 <- R2
000600a8: mem := mem with [R21 + 8, el]:u64 <- R3
000600ae: #1502 := R0 + 0x10
000600b3: R2 := mem[#1502, el]:u64
000600b8: R3 := mem[#1502 + 8, el]:u64
000600be: #1503 := R21 + 0x10
000600c4: mem := mem with [#1503, el]:u64 <- R2
000600ca: mem := mem with [#1503 + 8, el]:u64 <- R3
000600d0: #1504 := R0 + 0x20
000600d5: R2 := mem[#1504, el]:u64
000600da: R3 := mem[#1504 + 8, el]:u64
000600e0: #1505 := R21 + 0x20
000600e6: mem := mem with [#1505, el]:u64 <- R2
000600ec: mem := mem with [#1505 + 8, el]:u64 <- R3
000600f3: R0 := pad:64[mem[R20 + 0xC6, el]:u16]
000600fb: mem := mem with [R21 + 0x30, el]:u16 <- 15:0[R0]
00060101: R0 := R19
00060107: #1506 := R31 + 0x10
0006010c: R19 := mem[#1506, el]:u64
00060111: R20 := mem[#1506 + 8, el]:u64
00060117: #1507 := R31 + 0x20
0006011c: R21 := mem[#1507, el]:u64
00060121: R22 := mem[#1507 + 8, el]:u64
00060127: #1508 := R31 + 0x30
0006012c: R23 := mem[#1508, el]:u64
00060131: R24 := mem[#1508 + 8, el]:u64
00060138: R29 := mem[R31, el]:u64
0006013d: R30 := mem[R31 + 8, el]:u64
00060141: R31 := R31 + 0x40
00060146: call R30 with noreturn

0006ca87: sub copy_rr_data(copy_rr_data_result)
0006d0bf: copy_rr_data_result :: out u32 = low:32[R0]

0004a360:
0004a364: #283 := R31 - 0x50
0004a36a: mem := mem with [#283, el]:u64 <- R29
0004a370: mem := mem with [#283 + 8, el]:u64 <- R30
0004a374: R31 := #283
0004a37a: #284 := R1 + 0
0004a37f: VF := extend:65[#284] <> extend:65[R1] + 0
0004a384: CF := pad:65[#284] <> pad:65[R1] - 0x10000000000000000
0004a388: ZF := #284 = 0
0004a38c: NF := 63:63[#284]
0004a392: #285 := R0 + 0
0004a3b8: goto %0004a3b2

0004a3b2:
0004a3b4: when ZF <> 1 goto %0004a397
0004a3b5: goto %0004a3a7

0004a3a7:
0004a3a8: VF := 0
0004a3ab: CF := 0
0004a3ae: ZF := 1
0004a3b1: NF := 0
0004a3b7: goto %0004a3b3

0004a397:
0004a398: VF := extend:65[#285] <> extend:65[R0] + 0
0004a39d: CF := pad:65[#285] <> pad:65[R0] - 0x10000000000000000
0004a3a1: ZF := #285 = 0
0004a3a5: NF := 63:63[#285]
0004a3b6: goto %0004a3b3

0004a3b3:
0004a3be: R29 := R31
0004a3c4: #286 := R31 + 0x10
0004a3ca: mem := mem with [#286, el]:u64 <- R19
0004a3d0: mem := mem with [#286 + 8, el]:u64 <- R20
0004a3d5: R20 := 0
0004a3db: when ZF goto %0004a3d9
0006ca88: goto %0004a9a6

0004a9a6:
0004a9aa: R19 := R1
0004a9b0: R20 := R0
0004a9b6: #304 := R31 + 0x20
0004a9bc: mem := mem with [#304, el]:u64 <- R21
0004a9c2: mem := mem with [#304 + 8, el]:u64 <- R22
0004a9c7: R30 := 0x5464
0004a9c9: call @reset_rr_data with return %0004a9cb

0004a9cb:
0004a9d0: R0 := pad:64[mem[R19, el]:u32]
0004a9d7: R22 := mem[R19 + 8, el]:u64
0004a9df: mem := mem with [R20, el]:u32 <- 31:0[R0]
0004a9e6: V0 := mem[R19 + 0x10, el]:u128
0004a9ee: mem := mem with [R20 + 0x10, el]:u128 <- V0
0004a9f5: R0 := pad:64[mem[R19 + 0x20, el]:u32]
0004a9fd: mem := mem with [R20 + 0x20, el]:u32 <- 31:0[R0]
0004aa02: when R22 = 0 goto %0004a582
0006ca89: goto %0004aa06

0004aa06:
0004aa0a: #305 := R31 + 0x30
0004aa10: mem := mem with [#305, el]:u64 <- R23
0004aa16: mem := mem with [#305 + 8, el]:u64 <- R24
0004aa1b: R23 := 0
0004aa23: mem := mem with [R31 + 0x40, el]:u64 <- R25
0006ca8a: goto %0004a48d

0004a48d:
0004a497: R25 := mem[R22, el]:u64
0004a49c: R24 := mem[R22 + 8, el]:u64
0004a4a2: #290 := R25 + 0
0004a4a7: VF := extend:65[#290] <> extend:65[R25] + 0
0004a4ac: CF := pad:65[#290] <> pad:65[R25] - 0x10000000000000000
0004a4b0: ZF := #290 = 0
0004a4b4: NF := 63:63[#290]
0004a4ba: #291 := R24 + 0
0004a4e0: goto %0004a4da

0004a4da:
0004a4dc: when ZF <> 1 goto %0004a4bf
0004a4dd: goto %0004a4cf

0004a4cf:
0004a4d0: VF := 0
0004a4d3: CF := 0
0004a4d6: ZF := 1
0004a4d9: NF := 0
0004a4df: goto %0004a4db

0004a4bf:
0004a4c0: VF := extend:65[#291] <> extend:65[R24] + 0
0004a4c5: CF := pad:65[#291] <> pad:65[R24] - 0x10000000000000000
0004a4c9: ZF := #291 = 0
0004a4cd: NF := 63:63[#291]
0004a4de: goto %0004a4db

0004a4db:
0004a4e5: when ZF goto %0004a480
0006ca8b: goto %0004a4e9

0004a4e9:
0004a4ec: R0 := 0x20
0004a4f1: R30 := 0x54A8
0004a4f3: call @malloc with return %0004a4f5

0004a4f5:
0004a4f9: R21 := R0
0004a4ff: R0 := R25
0004a504: R30 := 0x54B4
0004a506: call @strdup with return %0004a508

0004a508:
0004a50c: R1 := R0
0004a512: R0 := R24
0004a51a: mem := mem with [R21, el]:u64 <- R1
0004a51f: R30 := 0x54C4
0004a521: call @strdup with return %0004a523

0004a523:
0004a529: mem := mem with [R21 + 8, el]:u64 <- R0
0004a530: mem := mem with [R21 + 0x10, el]:u32 <- 0
0004a537: mem := mem with [R21 + 0x18, el]:u64 <- 0
0004a53c: when R23 = 0 goto %0004a479
0006ca8c: goto %0004a540

0004a479:
0004a47d: R23 := R21
0004a482: goto %0004a480

0004a540:
0004a544: R0 := R23
0006ca8d: goto %0004a546

0004a546:
0004a54a: R1 := R0
0004a551: R0 := mem[R0 + 0x18, el]:u64
0004a557: when R0 <> 0 goto %0004a546
0006ca8e: goto %0004a55b

0004a55b:
0004a561: mem := mem with [R1 + 0x18, el]:u64 <- R21
0006ca8f: goto %0004a480

0004a480:
0004a488: R22 := mem[R22 + 0x18, el]:u64
0004a48f: when R22 <> 0 goto %0004a48d
0006ca90: goto %0004a563

0004a563:
0004a568: R25 := mem[R31 + 0x40, el]:u64
0004a570: mem := mem with [R20 + 8, el]:u64 <- R23
0004a576: #292 := R31 + 0x30
0004a57b: R23 := mem[#292, el]:u64
0004a580: R24 := mem[#292 + 8, el]:u64
0006ca91: goto %0004a582

0004a582:
0004a587: R0 := mem[R19 + 0x28, el]:u64
0004a58d: when R0 = 0 goto %0004a58b
0006ca92: goto %0004a667

0004a667:
0004a66a: R30 := 0x5508
0004a66c: call @strdup with return %0004a66e

0004a66e:
0004a674: mem := mem with [R20 + 0x28, el]:u64 <- R0
0006ca93: goto %0004a58b

0004a58b:
0004a595: R0 := mem[R19 + 0x30, el]:u64
0004a59b: when R0 = 0 goto %0004a599
0006ca94: goto %0004a658

0004a658:
0004a65b: R30 := 0x5518
0004a65d: call @strdup with return %0004a65f

0004a65f:
0004a665: mem := mem with [R20 + 0x30, el]:u64 <- R0
0006ca95: goto %0004a599

0004a599:
0004a5a3: R0 := mem[R19 + 0x38, el]:u64
0004a5a9: when R0 = 0 goto %0004a5a7
0006ca96: goto %0004a649

0004a649:
0004a64c: R30 := 0x5528
0004a64e: call @strdup with return %0004a650

0004a650:
0004a656: mem := mem with [R20 + 0x38, el]:u64 <- R0
0006ca97: goto %0004a5a7

0004a5a7:
0004a5b1: R0 := mem[R19 + 0x40, el]:u64
0004a5b7: when R0 = 0 goto %0004a5b5
0006ca98: goto %0004a63a

0004a63a:
0004a63d: R30 := 0x5538
0004a63f: call @strdup with return %0004a641

0004a641:
0004a647: mem := mem with [R20 + 0x40, el]:u64 <- R0
0006ca99: goto %0004a5b5

0004a5b5:
0004a5bf: R0 := mem[R19 + 0x48, el]:u64
0004a5c5: when R0 = 0 goto %0004a5c3
0006ca9a: goto %0004a62b

0004a62b:
0004a62e: R30 := 0x5548
0004a630: call @strdup with return %0004a632

0004a632:
0004a638: mem := mem with [R20 + 0x48, el]:u64 <- R0
0006ca9b: goto %0004a5c3

0004a5c3:
0004a5cd: R0 := mem[R19 + 0x50, el]:u64
0004a5d3: when R0 = 0 goto %0004a5d1
0006ca9c: goto %0004a61c

0004a61c:
0004a61f: R30 := 0x5558
0004a621: call @strdup with return %0004a623

0004a623:
0004a629: mem := mem with [R20 + 0x50, el]:u64 <- R0
0006ca9d: goto %0004a5d1

0004a5d1:
0004a5db: R0 := mem[R19 + 0x58, el]:u64
0004a5e1: when R0 = 0 goto %0004a5df
0006ca9e: goto %0004a5f4

0004a5f4:
0004a5f9: R2 := pad:64[mem[R19 + 0x18, el]:u32]
0004a5ff: #294 := 31:0[R2] + 0
0004a604: VF := extend:33[#294] <> extend:33[31:0[R2]] + 0
0004a609: CF := pad:33[#294] <> pad:33[31:0[R2]] - 0x100000000
0004a60d: ZF := #294 = 0
0004a611: NF := 31:31[#294]
0004a618: when NF = VF & ~ZF goto %0004a409
0006ca9f: goto %0004a5df

0004a409:
0004a40e: R21 :=

0004a413: R1 := 1
0004a419: R0 := R21
0004a41e: R30 := 0x5594
0004a420: call @calloc with return %0004a422

0004a422:
0004a428: mem := mem with [R20 + 0x58, el]:u64 <- R0
0004a42e: R2 := R21
0004a435: R1 := mem[R19 + 0x58, el]:u64
0004a43a: R30 := 0x55A4
0004a43c: call @memcpy with return %0004a43e

0004a43e:
0004a442: R0 := R20
0004a448: #288 := R31 + 0x10
0004a44d: R19 := mem[#288, el]:u64
0004a452: R20 := mem[#288 + 8, el]:u64
0004a458: #289 := R31 + 0x20
0004a45d: R21 := mem[#289, el]:u64
0004a462: R22 := mem[#289 + 8, el]:u64
0004a469: R29 := mem[R31, el]:u64
0004a46e: R30 := mem[R31 + 8, el]:u64
0004a472: R31 := R31 + 0x50
0004a477: call R30 with noreturn

0004a5df:
0004a5e8: #293 := R31 + 0x20
0004a5ed: R21 := mem[#293, el]:u64
0004a5f2: R22 := mem[#293 + 8, el]:u64
0006caa0: goto %0004a3d9

0004a3d9:
0004a3e2: R0 := R20
0004a3e8: #287 := R31 + 0x10
0004a3ed: R19 := mem[#287, el]:u64
0004a3f2: R20 := mem[#287 + 8, el]:u64
0004a3f9: R29 := mem[R31, el]:u64
0004a3fe: R30 := mem[R31 + 8, el]:u64
0004a402: R31 := R31 + 0x50
0004a407: call R30 with noreturn

0006caa1: sub croak(croak_result)
0006d0c0: croak_result :: out u32 = low:32[R0]

00056c67:
00056c6b: #1054 := R31 - 0x10
00056c71: mem := mem with [#1054, el]:u64 <- R29
00056c77: mem := mem with [#1054 + 8, el]:u64 <- R30
00056c7b: R31 := #1054
00056c81: R29 := R31
00056c87: when 31:0[R1] = 0 goto %00056c85
0006caa2: goto %00056cbe

00056cbe:
00056cc2: R2 := R0
00056cc7: R1 := 0x11000
00056ccc: R0 := 1
00056cd2: R1 := R1 + 0x6B0
00056cd7: R30 := 0x4868
00056cd9: call @__printf_chk with return %00056cad

00056cad:
00056cb3: R0 := 1
00056cb8: R30 := 0x4870
00056cba: call @myexit with return %00056c85

00056c85:
00056c8e: R3 := R0
00056c93: R2 := 0x11000
00056c98: R1 := 1
00056c9e: R2 := R2 + 0x6B0
00056ca3: R0 := 3
00056ca8: R30 := 0x4888
00056caa: call @__syslog_chk with return %00056cac

00056cac:
00056caf: goto %00056cad

0006caa3: sub data_send(data_send_result)
0006d0c1: data_send_result :: out u32 = low:32[R0]

000540a6:
000540ab: when R2 <> 0 goto %000540a9
0006caa4: goto %0005eab4

000540a9:
000540b0: call @data_send.part.0 with noreturn

0005eab4:
0005eab7: R0 := 1
0005eabc: call R30 with noreturn

0006caa5: sub data_send.part.0(data_send\.part\.0_result)
0006d0c2: data_send\.part\.0_result :: out u32 = low:32[R0]

00052f28:
00052f2c: #773 := R31 - 0x70
00052f32: mem := mem with [#773, el]:u64 <- R29
00052f38: mem := mem with [#773 + 8, el]:u64 <- R30
00052f3c: R31 := #773
00052f42: R29 := R31
00052f48: #774 := R31 + 0x10
00052f4e: mem := mem with [#774, el]:u64 <- R19
00052f54: mem := mem with [#774 + 8, el]:u64 <- R20
00052f5a: R20 := pad:64[31:0[R0]]
00052f60: R19 := R2
00052f65: R0 := 0x800
00052f6b: #775 := R31 + 0x20
00052f71: mem := mem with [#775, el]:u64 <- R21
00052f77: mem := mem with [#775 + 8, el]:u64 <- R22
00052f7d: #776 := R31 + 0x30
00052f83: mem := mem with [#776, el]:u64 <- R23
00052f89: mem := mem with [#776 + 8, el]:u64 <- R24
00052f8f: R24 := pad:64[31:0[R1]]
00052f94: R23 := 1
00052f9a: #777 := R31 + 0x40
00052fa0: mem := mem with [#777, el]:u64 <- R25
00052fa6: mem := mem with [#777 + 8, el]:u64 <- R26
00052fac: #778 := R31 + 0x50
00052fb2: mem := mem with [#778, el]:u64 <- R27
00052fb8: mem := mem with [#778 + 8, el]:u64 <- R28
00052fbd: R30 := 0xB54C
00052fbf: call @new with return %00052fc1

00052fc1:
00052fc4: R1 := 0x27000
00052fca: R22 := R0
00052fcf: R28 := 0
00052fd6: R27 := mem[R1 + 0xF78, el]:u64
00052fdb: R0 := 0x12000
00052fe1: R0 := R0 + 0x6D0
00052fe9: mem := mem with [R31 + 0x68, el]:u64 <- R0
0006caa6: goto %00052feb

00052feb:
00052fef: #779 := R19 + 1
00052ff4: VF := extend:65[#779] <> extend:65[R19] + 1
00052ff9: CF := pad:65[#779] <> pad:65[R19] + 1
00052ffd: ZF := #779 = 0
00053001: NF := 63:63[#779]
00053007: when ZF goto %00053005
0006caa7: goto %0005f26f

0005f26f:
0005f274: R0 := R19 + ~extend:64[31:0[R28]] + 1
0005f27a: #1435 := R0 - 0x800
0005f27f: VF := extend:65[#1435] <> extend:65[R0] - 0x800
0005f284: CF := pad:65[#1435] <> pad:65[R0] + 0xFFFFFFFFFFFFF800
0005f288: ZF := #1435 = 0
0005f28c: NF := 63:63[#1435]
0005f293: when NF = VF & ~ZF goto %00053005
0006caa8: goto %0005f297

0005f297:
0005f29c: R21 := pad:64[31:0[R19] + ~31:0[R28] + 1]
0005f2a3: R2 :=

0006caa9: goto %00053016

00053016:
0005301d: R1 := R22
00053023: R0 := pad:64[31:0[R24]]
00053028: R30 := 0xB590
0005302a: call @read with return %0005302c

0005302c:
00053030: #780 := 31:0[R0] + 0
00053035: VF := extend:33[#780] <> extend:33[31:0[R0]] + 0
0005303a: CF := pad:33[#780] <> pad:33[31:0[R0]] - 0x100000000
0005303e: ZF := #780 = 0
00053042: NF := 31:31[#780]
00053048: R26 := R0
0005304f: R0 := pad:64[31:0[R28] + 31:0[R0]]
0005305f: when NF = VF & ~ZF goto %00053057
00053060: goto %0005305b

0005305b:
0005305c: R28 := pad:64[31:0[R28]]
00053062: goto %0005305e

00053057:
00053058: R28 := pad:64[31:0[R0]]
00053061: goto %0005305e

0005305e:
00053068: R25 := pad:64[31:0[R26]]
0005306e: when 31:31[R20] goto %0005306c
0006caaa: goto %0005f242

0005306c:
00053075: #781 := 31:0[R26] + 0
0005307a: VF := extend:33[#781] <> extend:33[31:0[R26]] + 0
0005307f: CF := pad:33[#781] <> pad:33[31:0[R26]] - 0x100000000
00053083: ZF := #781 = 0
00053087: NF := 31:31[#781]
00053095: when ~(NF = VF & ~ZF) goto %0005308e
00053096: goto %00053091

00053091:
00053092: R21 := 1
00053098: goto %00053094

0005308e:
0005308f: R21 := 0
00053097: goto %00053094

00053094:
0005309d: goto %0005309b

0005f242:
0005f247: R0 := pad:64[mem[R27, el]:u32]
0005f24c: R1 := 0x27000
0005f254: mem := mem with [R31 + 0x60, el]:u64 <- R1
0005f259: when 31:0[R0] = 0 goto %0005f1bf
0006caab: goto %0005f25d

0005f25d:
0005f260: R6 := 0x12000
0005f266: R6 := R6 + 0x690
0005f26b: when 31:31[R26] goto %0005f171
0006caac: goto %0005f18d

0005f171:
0005f174: R30 := 0xB698
0005f176: call @__errno_location with return %0005f178

0005f178:
0005f17d: R0 := pad:64[mem[R0, el]:u32]
0005f182: R30 := 0xB6A0
0005f184: call @strerror with return %0005f186

0005f186:
0005f18a: R6 := R0
0005f18f: goto %0005f18d

0005f18d:
0005f193: R1 := 0x12000
0005f199: R3 := pad:64[31:0[R21]]
0005f19f: R5 := R19
0005f1a5: R1 := R1 + 0x698
0005f1ab: R4 := pad:64[31:0[R28]]
0005f1b1: R2 := pad:64[31:0[R26]]
0005f1b6: R0 := 1
0005f1bb: R30 := 0xB5E4
0005f1bd: call @__printf_chk with return %0005f1bf

0005f1bf:
0005f1c3: R0 := pad:64[31:0[R20]]
0005f1c8: R30 := 0xB5EC
0005f1ca: call @so_closed with return %0005f1cc

0005f1cc:
0005f1d0: when 31:0[R0] <> 0 goto %000532ba
0006caad: goto %0005f1d4

000532ba:
000532be: R0 := R22
000532c3: R30 := 0xB730
000532c5: call @free with return %000532c7

000532c7:
000532cc: R0 := mem[R31 + 0x60, el]:u64
000532d1: R25 := 0xFFFFFC19
000532d8: R26 := mem[R0 + 0xF78, el]:u64
000532df: R0 := pad:64[mem[R26, el]:u32]
000532e5: when 31:0[R0] <> 0 goto %00053227
0006caae: goto %000532e9

000532e9:
000532ed: #798 := R31 + 0x10
000532f2: R19 := mem[#798, el]:u64
000532f7: R20 := mem[#798 + 8, el]:u64
000532fd: #799 := R31 + 0x20
00053302: R21 := mem[#799, el]:u64
00053307: R22 := mem[#799 + 8, el]:u64
0005330d: #800 := R31 + 0x30
00053312: R23 := mem[#800, el]:u64
00053317: R24 := mem[#800 + 8, el]:u64
0005331d: #801 := R31 + 0x40
00053322: R25 := mem[#801, el]:u64
00053327: R26 := mem[#801 + 8, el]:u64
0005332d: #802 := R31 + 0x50
00053332: R27 := mem[#802, el]:u64
00053337: R28 := mem[#802 + 8, el]:u64
0005333e: R29 := mem[R31, el]:u64
00053343: R30 := mem[R31 + 8, el]:u64
00053347: R31 := R31 + 0x70
0005334c: call R30 with noreturn

0005f1d4:
0005f1d8: #1434 := 31:0[R26] + 0
0005f1dd: VF := extend:33[#1434] <> extend:33[31:0[R26]] + 0
0005f1e2: CF := pad:33[#1434] <> pad:33[31:0[R26]] - 0x100000000
0005f1e6: ZF := #1434 = 0
0005f1ea: NF := 31:31[#1434]
0005f1f2: when ~(NF = VF & ~ZF) goto %0005f1f0
0006caaf: goto %0005f202

0005f1f0:
0005f1f9: R0 := R22
0005f1fe: R30 := 0xB6B0
0005f200: call @free with return %00053147

0005f202:
0005f206: R1 := R22
0005f20d: R2 :=

0005f213: R0 := pad:64[31:0[R20]]
0005f218: R30 := 0xB608
0005f21a: call @write with return %0005f21c

0005f21c:
0005f21f: R1 := 0x27000
0005f225: R23 := pad:64[31:0[R0]]
0005f22a: R21 := 1
0005f231: R1 := mem[R1 + 0xF78, el]:u64
0005f238: R1 := pad:64[mem[R1, el]:u32]
0005f23e: when 31:0[R1] <> 0 goto %0005f14d
0006cab0: goto %0005309b

0005f14d:
0005f152: R1 := mem[R31 + 0x68, el]:u64
0005f158: R2 := pad:64[31:0[R0]]
0005f15e: R3 := pad:64[31:0[R26]]
0005f164: R0 := pad:64[31:0[R21]]
0005f169: R30 := 0xB690
0005f16b: call @__printf_chk with return %0005f16d

0005f16d:
0005f16f: goto %0005309b

0005309b:
000530a2: #782 := 31:0[R23] + 0
000530a7: VF := extend:33[#782] <> extend:33[31:0[R23]] + 0
000530ac: CF := pad:33[#782] <> pad:33[31:0[R23]] - 0x100000000
000530b0: ZF := #782 = 0
000530b4: NF := 31:31[#782]
000530ba: #783 := 31:0[R21] + 0
000530e2: goto %000530dc

000530dc:
000530de: when NF = VF & ~ZF goto %000530c1
000530df: goto %000530d1

000530d1:
000530d2: VF := 0
000530d5: CF := 0
000530d8: ZF := 1
000530db: NF := 0
000530e1: goto %000530dd

000530c1:
000530c2: VF := extend:33[#783] <> extend:33[31:0[R21]] + 0
000530c7: CF := pad:33[#783] <> pad:33[31:0[R21]] - 0x100000000
000530cb: ZF := #783 = 0
000530cf: NF := 31:31[#783]
000530e0: goto %000530dd

000530dd:
000530e8: when ZF goto %000530e6
0006cab1: goto %0005f0f4

000530e6:
000530ef: R0 := R22
000530f4: R30 := 0xB768
000530f6: call @free with return %000530f8

000530f8:
000530fc: #784 := 31:0[R25] + 0
00053101: VF := extend:33[#784] <> extend:33[31:0[R25]] + 0
00053106: CF := pad:33[#784] <> pad:33[31:0[R25]] - 0x100000000
0005310a: ZF := #784 = 0
0005310e: NF := 31:31[#784]
00053113: R0 := 1
00053119: #785 := 31:0[R23] + 0
00053141: goto %0005313b

0005313b:
0005313d: when NF = VF & ~ZF goto %00053120
0005313e: goto %00053130

00053130:
00053131: VF := 0
00053134: CF := 0
00053137: ZF := 1
0005313a: NF := 0
00053140: goto %0005313c

00053120:
00053121: VF := extend:33[#785] <> extend:33[31:0[R23]] + 0
00053126: CF := pad:33[#785] <> pad:33[31:0[R23]] - 0x100000000
0005312a: ZF := #785 = 0
0005312e: NF := 31:31[#785]
0005313f: goto %0005313c

0005313c:
00053149: when ~(NF = VF & ~ZF) goto %00053147
0006cab2: goto %0005339d

0005339d:
000533a1: #806 := R31 + 0x10
000533a6: R19 := mem[#806, el]:u64
000533ab: R20 := mem[#806 + 8, el]:u64
000533b1: #807 := R31 + 0x20
000533b6: R21 := mem[#807, el]:u64
000533bb: R22 := mem[#807 + 8, el]:u64
000533c1: #808 := R31 + 0x30
000533c6: R23 := mem[#808, el]:u64
000533cb: R24 := mem[#808 + 8, el]:u64
000533d1: #809 := R31 + 0x40
000533d6: R25 := mem[#809, el]:u64
000533db: R26 := mem[#809 + 8, el]:u64
000533e1: #810 := R31 + 0x50
000533e6: R27 := mem[#810, el]:u64
000533eb: R28 := mem[#810 + 8, el]:u64
000533f2: R29 := mem[R31, el]:u64
000533f7: R30 := mem[R31 + 8, el]:u64
000533fb: R31 := R31 + 0x70
00053400: call R30 with noreturn

00053147:
00053150: #786 := 31:0[R25] + 0
00053155: VF := extend:33[#786] <> extend:33[31:0[R25]] + 0
0005315a: CF := pad:33[#786] <> pad:33[31:0[R25]] - 0x100000000
0005315e: ZF := #786 = 0
00053162: NF := 31:31[#786]
00053168: #787 := 31:0[R23] + 0
0005318e: goto %00053188

00053188:
0005318a: when ZF goto %0005316d
0005318b: goto %0005317d

0005317d:
0005317e: VF := 0
00053181: CF := 0
00053184: ZF := 1
00053187: NF := 0
0005318d: goto %00053189

0005316d:
0005316e: VF := extend:33[#787] <> extend:33[31:0[R23]] + 0
00053173: CF := pad:33[#787] <> pad:33[31:0[R23]] - 0x100000000
00053177: ZF := #787 = 0
0005317b: NF := 31:31[#787]
0005318c: goto %00053189

00053189:
00053196: when ~(NF = VF & ~ZF) goto %00053194
0006cab3: goto %0005334e

0005334e:
00053352: #803 := R19 + 1
00053357: VF := extend:65[#803] <> extend:65[R19] + 1
0005335c: CF := pad:65[#803] <> pad:65[R19] + 1
00053360: ZF := #803 = 0
00053364: NF := 63:63[#803]
00053369: R0 := 1
0005336e: when ZF goto %000531bd
0006cab4: goto %00053372

00053372:
00053376: #804 := ~extend:64[31:0[R28]]
0005337b: #805 := R19 + ~extend:64[31:0[R28]] + 1
00053381: VF := extend:65[#805] <> extend:65[R19] + extend:65[#804] + 1
00053387: CF := pad:65[#805] <> pad:65[R19] + pad:65[#804] + 1
0005338b: ZF := #805 = 0
0005338f: NF := 63:63[#805]
00053394: when ZF goto %000531bd
0006cab5: goto %00053398

00053398:
0005339b: R25 := 0
0006cab6: goto %00053194

00053194:
0005319c: R0 := 0x27000
000531a4: mem := mem with [R31 + 0x60, el]:u64 <- R0
000531ab: R0 := mem[R31 + 0x60, el]:u64
000531b2: R26 := mem[R0 + 0xF78, el]:u64
000531b9: R0 := pad:64[mem[R26, el]:u32]
000531bf: when 31:0[R0] = 0 goto %000531bd
0006cab7: goto %00053227

00053227:
0005322b: R4 := pad:64[31:0[R25]]
00053231: R3 := pad:64[31:0[R24]]
00053237: R2 := pad:64[31:0[R20]]
0005323c: R1 := 0x12000
00053241: R0 := 1
00053247: R1 := R1 + 0x6F0
0005324c: R30 := 0xB708
0005324e: call @__printf_chk with return %00053250

00053250:
00053253: R0 := 0
00053259: #793 := R31 + 0x10
0005325e: R19 := mem[#793, el]:u64
00053263: R20 := mem[#793 + 8, el]:u64
00053269: #794 := R31 + 0x20
0005326e: R21 := mem[#794, el]:u64
00053273: R22 := mem[#794 + 8, el]:u64
00053279: #795 := R31 + 0x30
0005327e: R23 := mem[#795, el]:u64
00053283: R24 := mem[#795 + 8, el]:u64
00053289: #796 := R31 + 0x40
0005328e: R25 := mem[#796, el]:u64
00053293: R26 := mem[#796 + 8, el]:u64
00053299: #797 := R31 + 0x50
0005329e: R27 := mem[#797, el]:u64
000532a3: R28 := mem[#797 + 8, el]:u64
000532aa: R29 := mem[R31, el]:u64
000532af: R30 := mem[R31 + 8, el]:u64
000532b3: R31 := R31 + 0x70
000532b8: call R30 with noreturn

0005f0f4:
0005f0f8: #1431 := R19 + 1
0005f0fd: VF := extend:65[#1431] <> extend:65[R19] + 1
0005f102: CF := pad:65[#1431] <> pad:65[R19] + 1
0005f106: ZF := #1431 = 0
0005f10a: NF := 63:63[#1431]
0005f10f: when ZF goto %00053005
0006cab8: goto %0005f113

00053005:
0005300d: R2 := 0x800
00053013: R21 := pad:64[31:0[R2]]
00053018: goto %00053016

0005f113:
0005f117: #1432 := ~extend:64[31:0[R28]]
0005f11c: #1433 := R19 + ~extend:64[31:0[R28]] + 1
0005f122: VF := extend:65[#1433] <> extend:65[R19] + extend:65[#1432] + 1
0005f128: CF := pad:65[#1433] <> pad:65[R19] + pad:65[#1432] + 1
0005f12c: ZF := #1433 = 0
0005f130: NF := 63:63[#1433]
0005f137: when NF = VF & ~ZF goto %00052feb
0006cab9: goto %0005f13b

0005f13b:
0005f13f: R0 := R22
0005f144: R30 := 0xB644
0005f146: call @free with return %0005f148

0005f148:
0005f14b: R0 := 1
0006caba: goto %000531bd

000531bd:
000531c6: #788 := R31 + 0x10
000531cb: R19 := mem[#788, el]:u64
000531d0: R20 := mem[#788 + 8, el]:u64
000531d6: #789 := R31 + 0x20
000531db: R21 := mem[#789, el]:u64
000531e0: R22 := mem[#789 + 8, el]:u64
000531e6: #790 := R31 + 0x30
000531eb: R23 := mem[#790, el]:u64
000531f0: R24 := mem[#790 + 8, el]:u64
000531f6: #791 := R31 + 0x40
000531fb: R25 := mem[#791, el]:u64
00053200: R26 := mem[#791 + 8, el]:u64
00053206: #792 := R31 + 0x50
0005320b: R27 := mem[#792, el]:u64
00053210: R28 := mem[#792 + 8, el]:u64
00053217: R29 := mem[R31, el]:u64
0005321c: R30 := mem[R31 + 8, el]:u64
00053220: R31 := R31 + 0x70
00053225: call R30 with noreturn

0006cabb: sub deregister_tm_clones(deregister_tm_clones_result)
0006d0c3: deregister_tm_clones_result :: out u32 = low:32[R0]

000630cf:
000630d2: R0 := 0x28000
000630d8: R0 := R0 + 0x498
000630dd: R1 := 0x28000
000630e3: R1 := R1 + 0x498
000630e9: #1575 := ~R0
000630ee: #1576 := R1 + ~R0 + 1
000630f4: VF := extend:65[#1576] <> extend:65[R1] + extend:65[#1575] + 1
000630fa: CF := pad:65[#1576] <> pad:65[R1] + pad:65[#1575] + 1
000630fe: ZF := #1576 = 0
00063102: NF := 63:63[#1576]
00063108: when ZF goto %00063106
0006cabc: goto %0006321e

0006321e:
00063221: R1 := 0x27000
00063228: R1 := mem[R1 + 0xF48, el]:u64
0006322d: when R1 = 0 goto %00063106
0006cabd: goto %00063231

00063106:
0006310e: call R30 with noreturn

00063231:
00063235: R16 := R1
0006323a: call R16 with noreturn

0006cabe: sub des_key_schedule(des_key_schedule_result)
0006d0c4: des_key_schedule_result :: out u32 = low:32[R0]

0004688b:
00046892: #62 := R31 - 0x50
00046898: mem := mem with [#62, el]:u64 <- R29
0004689e: mem := mem with [#62 + 8, el]:u64 <- R30
000468a2: R31 := #62
000468a7: R3 := 0x11000
000468ad: R3 := R3 + 0x8E0
000468b3: R29 := R31
000468b9: #63 := R31 + 0x10
000468bf: mem := mem with [#63, el]:u64 <- R19
000468c5: mem := mem with [#63 + 8, el]:u64 <- R20
000468cb: R4 := R3 + 0x40
000468d1: R6 := R3 + 0x80
000468d7: #64 := R31 + 0x20
000468dd: mem := mem with [#64, el]:u64 <- R21
000468e3: mem := mem with [#64 + 8, el]:u64 <- R22
000468e9: R12 := R1 + 0x80
000468ee: R11 := 0x1C
000468f4: #65 := R31 + 0x30
000468fa: mem := mem with [#65, el]:u64 <- R23
00046900: mem := mem with [#65 + 8, el]:u64 <- R24
00046905: R10 := 0x24000000
0004690a: R9 := 0x2080000
00046912: mem := mem with [R31 + 0x40, el]:u64 <- R25
00046917: R8 := 0x808
0004691c: R7 := 0x11
00046923: R2 := pad:64[mem[R0, el]:u32]
00046928: R5 := pad:64[mem[R0 + 4, el]:u32]
00046931: R5 := pad:64[7:0[R5].15:8[R5].23:16[R5].31:24[R5]]
0004693a: R2 := pad:64[7:0[R2].15:8[R2].23:16[R2].31:24[R2]]
00046941: R0 := pad:64[31:0[R2] ^ 31:0[R5] >> 4]
00046947: R0 := pad:64[31:0[R0] & 0xF0F0F0F]
0004694e: R2 := pad:64[31:0[R2] ^ 31:0[R0]]
00046955: R0 := pad:64[31:0[R5] ^ 31:0[R0] << 4]
0004695c: R5 := pad:64[31:0[R2] ^ 31:0[R0]]
00046962: R5 := pad:64[31:0[R5] & 0x10101010]
00046969: R2 := pad:64[31:0[R2] ^ 31:0[R5]]
00046970: R0 := pad:64[31:0[R0] ^ 31:0[R5]]
00046976: R22 := 0.3:0[R2]
0004697d: R13 := 0.3:0[R2 >> 0x10 | R2 << 0x30]
00046984: R14 := 0.3:0[R2 >> 8 | R2 << 0x38]
0004698b: R19 := 0.3:0[R2 >> 0x18 | R2 << 0x28]
00046992: R16 := 0.3:0[R0 >> 0x19 | R0 << 0x27]
00046999: R15 := 0.3:0[R0 >> 4 | R0 << 0x3C]
000469a1: R22 := pad:64[mem[R3 + (61:0[R22].0), el]:u32]
000469a9: R13 := pad:64[mem[R3 + (61:0[R13].0), el]:u32]
000469b0: R5 := 0.3:0[R0 >> 9 | R0 << 0x37]
000469b8: R19 := pad:64[mem[R3 + (61:0[R19].0), el]:u32]
000469bf: R20 := pad:64[0.3:0[31:0[R0] >> 0x1C | 31:0[R0] << 4]]
000469c7: R14 := pad:64[mem[R3 + (61:0[R14].0), el]:u32]
000469ce: R21 := 0.3:0[R2 >> 0xD | R2 << 0x33]
000469d5: R23 := 0.3:0[R0 >> 1 | R0 << 0x3F]
000469dc: R13 := pad:64[31:1[31:0[R13] >> 0x1F | 31:0[R13] << 1].0]
000469e3: R18 := 0.3:0[R2 >> 5 | R2 << 0x3B]
000469ea: R17 := pad:64[0.2:0[31:0[R2] >> 0x1D | 31:0[R2] << 3]]
000469f1: R14 := pad:64[31:0[R13] | 31:0[R14] << 2]
000469f8: R22 := pad:64[31:0[R19] | 31:0[R22] << 3]
00046a00: R13 := pad:64[mem[R4 + (61:0[R16].0), el]:u32]
00046a07: R16 := 0.3:0[R0 >> 0x11 | R0 << 0x2F]
00046a0f: R19 := pad:64[mem[R4 + (61:0[R15].0), el]:u32]
00046a16: R15 := 0.3:0[R0 >> 0x14 | R0 << 0x2C]
00046a1e: R5 := pad:64[mem[R4 + (61:0[R5].0), el]:u32]
00046a25: R2 := 0.3:0[R2 >> 0x15 | R2 << 0x2B]
00046a2d: R20 := pad:64[mem[R4 + (61:0[R20].0), el]:u32]
00046a34: R0 := 0.3:0[R0 >> 0xC | R0 << 0x34]
00046a3c: R21 := pad:64[mem[R3 + (61:0[R21].0), el]:u32]
00046a43: R19 := pad:64[31:7[31:0[R19] >> 0x19 | 31:0[R19] << 7].0]
00046a4b: R23 := pad:64[mem[R4 + (61:0[R23].0), el]:u32]
00046a52: R5 := pad:64[31:2[31:0[R5] >> 0x1E | 31:0[R5] << 2].0]
00046a5a: R18 := pad:64[mem[R3 + (61:0[R18].0), el]:u32]
00046a61: R20 := pad:64[31:0[R13] | 31:0[R20] << 4]
00046a69: R17 := pad:64[mem[R3 + (61:0[R17].0), el]:u32]
00046a70: R21 := pad:64[31:6[31:0[R21] >> 0x1A | 31:0[R21] << 6].0]
00046a78: R16 := pad:64[mem[R4 + (61:0[R16].0), el]:u32]
00046a7f: R5 := pad:64[31:0[R5] | 31:0[R23] << 3]
00046a87: R15 := pad:64[mem[R4 + (61:0[R15].0), el]:u32]
00046a8e: R18 := pad:64[31:0[R21] | 31:0[R18] << 7]
00046a96: R13 := pad:64[mem[R3 + (61:0[R2].0), el]:u32]
00046a9d: R3 := pad:64[31:0[R14] | 31:0[R22]]
00046aa5: R2 := pad:64[mem[R4 + (61:0[R0].0), el]:u32]
00046aac: R14 := pad:64[31:4[31:0[R17] >> 0x1C | 31:0[R17] << 4].0]
00046ab3: R0 := pad:64[31:0[R5] | 31:0[R20]]
00046aba: R4 := pad:64[31:5[31:0[R15] >> 0x1B | 31:0[R15] << 5].0]
00046ac1: R5 := pad:64[31:0[R19] | 31:0[R16] << 1]
00046ac8: R3 := pad:64[31:0[R3] | 31:0[R18]]
00046acf: R13 := pad:64[31:0[R14] | 31:0[R13] << 5]
00046ad6: R0 := pad:64[31:0[R0] | 31:0[R5]]
00046add: R2 := pad:64[31:0[R4] | 31:0[R2] << 6]
00046ae4: R13 := pad:64[31:0[R13] | 31:0[R3]]
00046aeb: R2 := pad:64[31:0[R2] | 31:0[R0]]
00046af1: R13 := pad:64[0.27:0[R13]]
00046af7: R2 := pad:64[0.27:0[R2]]
0006cabf: goto %00046afb

00046afb:
00046b00: R16 := pad:64[mem[R6]]
00046b04: R6 := R6 + 1
00046b0b: R3 := pad:64[31:0[R11] + ~31:0[R16] + 1]
00046b12: R0 := pad:64[31:0[R13] << pad:6[4:0[R16]]]
00046b19: R13 := pad:64[31:0[R13] >> pad:6[4:0[R3]]]
00046b20: R0 := pad:64[31:0[R0] | 31:0[R13]]
00046b27: R3 := pad:64[31:0[R2] >> pad:6[4:0[R3]]]
00046b2d: R13 := pad:64[0.27:0[R0]]
00046b34: R5 := pad:64[31:14[31:0[R0] >> 0x12 | 31:0[R0] << 0xE].0]
00046b3b: R18 := pad:64[31:0[R9] & 31:0[R0] << 0x12]
00046b42: R17 := pad:64[0.28:28[31:0[R0] >> 4 | 31:0[R0] << 0x1C].0]
00046b49: R14 := pad:64[31:9[31:0[R0] >> 0x17 | 31:0[R0] << 9].0]
00046b50: R15 := pad:64[31:0[R10] & 31:0[R0] << 4]
00046b57: R4 := pad:64[31:6[31:0[R0] >> 0x1A | 31:0[R0] << 6].0]
00046b5d: R5 := pad:64[0.27:27[R5].0]
00046b64: R21 := pad:64[31:15[31:0[R0] >> 0x11 | 31:0[R0] << 0xF].0]
00046b6b: R5 := pad:64[31:0[R5] | 31:0[R18]]
00046b72: R15 := pad:64[31:0[R15] | 31:0[R17]]
00046b79: R19 := pad:64[31:22[31:0[R0] >> 0xA | 31:0[R0] << 0x16].0]
00046b80: R18 := pad:64[31:17[31:0[R0] >> 0xF | 31:0[R0] << 0x11].0]
00046b87: R2 := pad:64[31:0[R2] << pad:6[4:0[R16]]]
00046b8d: R4 := pad:64[0.24:24[R4].0]
00046b94: R2 := pad:64[31:0[R2] | 31:0[R3]]
00046b9b: R16 := pad:64[31:10[31:0[R0] >> 0x16 | 31:0[R0] << 0xA].0]
00046ba1: R3 := pad:64[0.21:21[R14].0]
00046ba8: R14 := 0.26:0[R0 >> 1 | R0 << 0x3F]
00046baf: R4 := pad:64[31:0[R4] | 31:0[R3]]
00046bb5: R23 := pad:64[0.18:18[R16].0]
00046bbb: R17 := pad:64[0.29:29[R21].0]
00046bc2: R15 := pad:64[31:0[R15] | 31:0[R5]]
00046bc8: R16 := pad:64[0.27:27[R16].0]
00046bcf: R30 := pad:64[0.29:2[31:0[R0] >> 0x1E | 31:0[R0] << 2].0]
00046bd6: R22 := 0.17:0[R0 >> 0xA | R0 << 0x36]
00046bdd: R3 := 0.25:0[R0 >> 2 | R0 << 0x3E]
00046be4: R20 := pad:64[0.28:1[31:0[R0] >> 0x1F | 31:0[R0] << 1].0]
00046bea: R14 := pad:64[0.20:20[R14].0]
00046bf0: R19 := pad:64[0.26:26[R19].0]
00046bf6: R18 := pad:64[0.28:28[R18].0]
00046bfd: R5 := pad:64[31:0[R15] | 31:0[R4]]
00046c04: R14 := pad:64[31:0[R14] | 31:0[R23]]
00046c0b: R19 := pad:64[31:0[R19] | 31:0[R16]]
00046c12: R23 := 0.14:0[R2 >> 0xD | R2 << 0x33]
00046c19: R4 := pad:64[31:16[31:0[R0] >> 0x10 | 31:0[R0] << 0x10].0]
00046c1f: R30 := pad:64[0.17:17[R30].0]
00046c25: R22 := pad:64[0.16:16[R22].0]
00046c2c: R15 := 0.23:0[R2 >> 4 | R2 << 0x3C]
00046c33: R18 := pad:64[31:0[R18] | 31:0[R17]]
00046c39: R3 := pad:64[0.25:25[R3].0]
00046c3f: R20 := pad:64[0.24:24[R20].0]
00046c46: R24 := pad:64[31:11[31:0[R0] >> 0x15 | 31:0[R0] << 0xB].0]
00046c4d: R16 := pad:64[31:0[R3] | 31:0[R20]]
00046c54: R17 := pad:64[31:0[R19] | 31:0[R18]]
00046c5a: R3 := pad:64[0.21:21[R4].0]
00046c61: R5 := pad:64[31:0[R5] | 31:0[R14]]
00046c68: R25 := pad:64[31:6[31:0[R2] >> 0x1A | 31:0[R2] << 6].0]
00046c6f: R14 := pad:64[31:0[R30] | 31:0[R22]]
00046c75: R24 := pad:64[0.20:20[R24].0]
00046c7b: R22 := pad:64[0.13:13[R23].0]
00046c82: R30 := pad:64[0.30:3[31:0[R0] >> 0x1D | 31:0[R0] << 3].0]
00046c89: R23 := 0.26:0[R2 >> 1 | R2 << 0x3F]
00046c90: R4 := 0.21:0[R0 >> 6 | R0 << 0x3A]
00046c96: R15 := pad:64[0.12:12[R15].0]
00046c9d: R15 := pad:64[31:0[R22] | 31:0[R15]]
00046ca3: R18 := pad:64[0.10:10[R23].0]
00046caa: R20 := 0.13:0[R2 >> 0xE | R2 << 0x32]
00046cb1: R19 := 0.22:0[R2 >> 5 | R2 << 0x3B]
00046cb8: R5 := pad:64[31:0[R5] | 31:0[R14]]
00046cbf: R17 := pad:64[31:0[R17] | 31:0[R16]]
00046cc5: R4 := pad:64[0.18:18[R4].0]
00046ccc: R16 := pad:64[31:0[R3] | 31:0[R24]]
00046cd2: R14 := pad:64[0.11:11[R25].0]
00046cd8: R30 := pad:64[0.19:19[R30].0]
00046cdf: R0 := 0.23:0[R0 >> 4 | R0 << 0x3C]
00046ce6: R14 := pad:64[31:0[R14] | 31:0[R18]]
00046ced: R17 := pad:64[31:0[R17] | 31:0[R16]]
00046cf4: R18 := 0.24:0[R2 >> 3 | R2 << 0x3D]
00046cfb: R5 := pad:64[31:0[R5] | 31:0[R15]]
00046d01: R22 := pad:64[0.9:9[R20].0]
00046d07: R15 := pad:64[0.5:5[R19].0]
00046d0d: R3 := pad:64[0.17:17[R21].0]
00046d14: R19 := 0.17:0[R2 >> 0xA | R2 << 0x36]
00046d1b: R30 := pad:64[31:0[R30] | 31:0[R4]]
00046d21: R0 := pad:64[0.16:16[R0].0]
00046d28: R16 := 0.25:0[R2 >> 2 | R2 << 0x3E]
00046d2f: R24 := pad:64[31:8[31:0[R2] >> 0x18 | 31:0[R2] << 8].0]
00046d36: R4 := pad:64[31:0[R17] | 31:0[R30]]
00046d3d: R5 := pad:64[31:0[R5] | 31:0[R14]]
00046d44: R22 := pad:64[31:0[R15] | 31:0[R22]]
00046d4a: R21 := pad:64[0.3:3[R18].0]
00046d51: R15 := 0.9:0[R2 >> 0x12 | R2 << 0x2E]
00046d58: R23 := 0.1:0[R2 >> 0x1A | R2 << 0x26]
00046d5f: R3 := pad:64[31:0[R0] | 31:0[R3]]
00046d66: R14 := 0.18:0[R2 >> 9 | R2 << 0x37]
00046d6c: R0 := pad:64[0.12:12[R24].0]
00046d72: R19 := pad:64[0.4:4[R19].0]
00046d78: R16 := pad:64[0.13:13[R16].0]
00046d7f: R5 := pad:64[31:0[R5] | 31:0[R22]]
00046d86: R19 := pad:64[31:0[R19] | 31:0[R21]]
00046d8c: R17 := pad:64[0.1:1[R23].0]
00046d93: R3 := pad:64[31:0[R4] | 31:0[R3]]
00046d9a: R16 := pad:64[31:0[R16] | 31:0[R0]]
00046da1: R30 := 0.20:0[R2 >> 7 | R2 << 0x39]
00046da8: R0 := pad:64[31:7[31:0[R2] >> 0x19 | 31:0[R2] << 7].0]
00046daf: R20 := pad:64[31:0[R20] & 31:0[R8]]
00046db5: R15 := pad:64[0.2:2[R15].0]
00046dbb: R14 := pad:64[0.10:10[R14].0]
00046dc2: R4 := pad:64[31:0[R5] | 31:0[R19]]
00046dc9: R15 := pad:64[31:0[R15] | 31:0[R17]]
00046dcf: R19 := pad:64[0.8:8[R2].0]
00046dd6: R17 := 0.0:0[R2 >> 0x18 | R2 << 0x28]
00046ddd: R14 := pad:64[31:0[R14] | 31:0[R20]]
00046de3: R5 := pad:64[0.8:8[R0].0]
00046dea: R3 := pad:64[31:0[R3] | 31:0[R16]]
00046df0: R0 := pad:64[0.5:5[R30].0]
00046df7: R5 := pad:64[31:0[R5] | 31:0[R0]]
00046dfe: R4 := pad:64[31:0[R4] | 31:0[R15]]
00046e05: R3 := pad:64[31:0[R3] | 31:0[R14]]
00046e0c: R0 := 0.6:0[R2 >> 0x15 | R2 << 0x2B]
00046e13: R14 := pad:64[0.2:2[31:0[R2] >> 0x1E | 31:0[R2] << 2].0]
00046e1a: R18 := pad:64[31:0[R18] & 31:0[R7]]
00046e21: R15 := pad:64[31:0[R17] | 31:0[R19]]
00046e28: R3 := pad:64[31:0[R3] | 31:0[R5]]
00046e2f: R4 := pad:64[31:0[R4] | 31:0[R15]]
00046e35: R5 := pad:64[0.9:9[R2].0]
00046e3c: R18 := pad:64[31:0[R14] | 31:0[R18]]
00046e42: R0 := pad:64[0.1:1[R0].0]
00046e4a: mem := mem with [R1, el]:u32 <- 31:0[R4]
00046e4e: R1 := R1 + 8
00046e55: R3 := pad:64[31:0[R3] | 31:0[R18]]
00046e5c: R0 := pad:64[31:0[R0] | 31:0[R5]]
00046e62: R2 := pad:64[0.27:0[R2]]
00046e69: R3 := pad:64[31:0[R3] | 31:0[R0]]
00046e71: mem := mem with [R1 - 4, el]:u32 <- 31:0[R3]
00046e77: #66 := ~R1
00046e7c: #67 := R12 + ~R1 + 1
00046e82: VF := extend:65[#67] <> extend:65[R12] + extend:65[#66] + 1
00046e88: CF := pad:65[#67] <> pad:65[R12] + pad:65[#66] + 1
00046e8c: ZF := #67 = 0
00046e90: NF := 63:63[#67]
00046e95: when ZF <> 1 goto %00046afb
0006cac0: goto %00046e99

00046e99:
00046e9d: #68 := R31 + 0x10
00046ea2: R19 := mem[#68, el]:u64
00046ea7: R20 := mem[#68 + 8, el]:u64
00046ead: #69 := R31 + 0x20
00046eb2: R21 := mem[#69, el]:u64
00046eb7: R22 := mem[#69 + 8, el]:u64
00046ebd: #70 := R31 + 0x30
00046ec2: R23 := mem[#70, el]:u64
00046ec7: R24 := mem[#70 + 8, el]:u64
00046ece: R25 := mem[R31 + 0x40, el]:u64
00046ed5: R29 := mem[R31, el]:u64
00046eda: R30 := mem[R31 + 8, el]:u64
00046ede: R31 := R31 + 0x50
00046ee3: call R30 with noreturn

0006cac1: sub direct_request(direct_request_result)
0006d0c5: direct_request_result :: out u32 = low:32[R0]

0005676d:
00056771: #1035 := R31 - 0x110
00056777: mem := mem with [#1035, el]:u64 <- R29
0005677d: mem := mem with [#1035 + 8, el]:u64 <- R30
00056781: R31 := #1035
00056786: R2 := 0x27000
0005678c: R29 := R31
00056792: #1036 := R31 + 0x30
00056798: mem := mem with [#1036, el]:u64 <- R23
0005679e: mem := mem with [#1036 + 8, el]:u64 <- R24
000567a3: R24 := 0x27000
000567aa: R3 := mem[R24 + 0xF78, el]:u64
000567b0: #1037 := R31 + 0x10
000567b6: mem := mem with [#1037, el]:u64 <- R19
000567bc: mem := mem with [#1037 + 8, el]:u64 <- R20
000567c2: R19 := R1
000567c9: R2 := mem[R2 + 0xFB8, el]:u64
000567cf: #1038 := R31 + 0x20
000567d5: mem := mem with [#1038, el]:u64 <- R21
000567db: mem := mem with [#1038 + 8, el]:u64 <- R22
000567e2: R1 := pad:64[mem[R3, el]:u32]
000567e9: R3 := mem[R2, el]:u64
000567f1: mem := mem with [R31 + 0x108, el]:u64 <- R3
000567f6: R3 := 0
000567fd: R2 := pad:64[mem[R0, el]:u32]
00056804: R0 := mem[R0 + 0x10, el]:u64
0005680a: #1039 := R31 + 0x40
00056810: mem := mem with [#1039, el]:u64 <- R25
00056816: mem := mem with [#1039 + 8, el]:u64 <- R26
0005681c: #1040 := R31 + 0x50
00056822: mem := mem with [#1040, el]:u64 <- R27
00056828: mem := mem with [#1040 + 8, el]:u64 <- R28
00056830: mem := mem with [R31 + 0x7C, el]:u32 <- 31:0[R2]
00056838: mem := mem with [R31 + 0xB0, el]:u64 <- R0
00056840: mem := mem with [R31 + 0xD4, el]:u32 <- 31:0[R2]
00056847: when 31:0[R1] <> 0 goto %00056845
0006cac2: goto %00056862

00056845:
0005684d: R1 := 0x13000
00056852: R0 := 1
00056858: R1 := R1 + 0x578
0005685d: R30 := 0xF250
0005685f: call @__printf_chk with return %00056861

00056861:
00056864: goto %00056862

00056862:
00056868: R30 := 0xED84
0005686a: call @__errno_location with return %0005686c

0005686c:
00056871: R20 := pad:64[mem[R19 + 0x20, el]:u32]
00056878: R1 := mem[R19 + 0x40, el]:u64
0005687f: mem := mem with [R0, el]:u32 <- 0
00056885: R28 := R31 + 0xD0
0005688a: R25 := 0xFFFFFFFF
00056892: mem := mem with [R31 + 0xB8, el]:u64 <- R0
00056898: R0 := R28
0005689d: R30 := 0xEDA4
0005689f: call @so_resolv with return %000568a1

000568a1:
000568a5: when 31:0[R0] = 0 goto %000568a3
0006cac3: goto %0005b6db

0005b6db:
0005b6e0: R0 := pad:64[mem[R31 + 0xD0, el]:u32]
0005b6e6: R1 := pad:64[31:0[R20]]
0005b6eb: R30 := 0xEDB4
0005b6ed: call @so_connect with return %0005b6ef

0005b6ef:
0005b6f5: mem := mem with [R31 + 0xD0, el]:u32 <- 31:0[R0]
0005b6fb: R25 := pad:64[31:0[R0]]
0005b700: when 31:31[R0] goto %000568a3
0006cac4: goto %0005b704

000568a3:
000568ad: R22 := mem[R31 + 0xB8, el]:u64
000568b2: R1 := 0xFFFFFFFFFFFFFFFF
000568b9: R20 := mem[R19 + 0x40, el]:u64
000568c1: mem := mem with [R31 + 0x80, el]:u64 <- R1
000568c8: R0 := pad:64[mem[R22, el]:u32]
000568cf: R21 := pad:64[mem[R19 + 0x20, el]:u32]
000568d4: R30 := 0xF270
000568d6: call @strerror with return %000568d8

000568d8:
000568dc: R5 := R0
000568e2: R4 := pad:64[31:0[R21]]
000568e8: R3 := R20
000568ed: R1 := 1
000568f2: R0 := 4
000568f7: R2 := 0x13000
000568fd: R2 := R2 + 0x598
00056902: R30 := 0xF290
00056904: call @__syslog_chk with return %00056906

00056906:
0005690b: R0 := pad:64[mem[R22, el]:u32]
00056912: R19 := mem[R19 + 0x48, el]:u64
00056917: R30 := 0xF29C
00056919: call @strerror with return %0005691b

0005691b:
0005691f: R1 := R0
00056925: R0 := R19
0005692a: R30 := 0xF2A8
0005692d: call @gen_502_page with return %0005aa45

0005aa45:
0005aa49: R19 := R0
0005aa4e: R30 := 0xF2B0
0005aa50: call @strlen with return %0005aa52

0005aa52:
0005aa56: R2 := R0
0005aa5d: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0005aa63: R1 := R19
0005aa68: R30 := 0xF2C0
0005aa6a: call @write with return %0005aa6c

0005aa6c:
0005aa70: R0 := R19
0005aa75: R30 := 0xF2C8
0005aa77: call @free with return %0005aa79

0005aa79:
0005aa7c: goto %0005aa7a

0005b704:
0005b707: R0 := 0x27000
0005b70c: R1 := 1
0005b713: R0 := mem[R0 + 0xF80, el]:u64
0005b71a: R0 := mem[R0, el]:u64
0005b71f: R30 := 0xEDD4
0005b722: call @dup_auth with return %0005baf2

0005baf2:
0005baf6: R1 := R0
0005bafd: R0 := mem[R19 + 0x40, el]:u64
0005bb05: mem := mem with [R31 + 0xA0, el]:u64 <- R1
0005bb0a: when R0 = 0 goto %0005b135
0006cac5: goto %0005bb0e

0005b135:
0005b13a: R0 := mem[R19 + 0x48, el]:u64
0005b13f: R1 := 0x13000
0005b145: R1 := R1 + 0x5C0
0005b14a: R30 := 0xF488
0005b14c: call @gen_502_page with return %0005b14e

0005b14e:
0005b152: R19 := R0
0005b157: R30 := 0xF490
0005b159: call @strlen with return %0005b15b

0005b15b:
0005b15f: R2 := R0
0005b166: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0005b16c: R1 := R19
0005b171: R30 := 0xF4A0
0005b173: call @write with return %0005b175

0005b175:
0005b179: R0 := R19
0005b17e: R30 := 0xF4A8
0005b180: call @free with return %0005b182

0005b182:
0005b187: R0 := mem[R31 + 0xA0, el]:u64
0005b18d: when R0 = 0 goto %0005b18b
0006cac6: goto %0005b1a1

0005b18b:
0005b193: R0 := 0xFFFFFFFFFFFFFFFF
0005b19b: mem := mem with [R31 + 0x80, el]:u64 <- R0
0005b19f: goto %0005aa7a

0005b1a1:
0005b1a4: R1 := 0xFFFFFFFFFFFFFFFF
0005b1ac: mem := mem with [R31 + 0x80, el]:u64 <- R1
0005b1b1: R30 := 0xF4BC
0005b1b3: call @free with return %0005b1b5

0005b1b5:
0005b1b7: goto %0005aa7a

0005bb0e:
0005bb11: R30 := 0xEDE8
0005bb13: call @strdup with return %0005bb15

0005bb15:
0005bb19: R23 := R0
0005bb20: R1 := pad:64[mem[R19 + 0x20, el]:u32]
0005bb26: R0 := R19
0005bb2e: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R1]
0005bb33: R30 := 0xEDFC
0005bb35: call @dup_rr_data with return %0005bb37

0005bb37:
0005bb3b: R19 := R0
0005bb40: R0 := 0x13000
0005bb46: R0 := R0 + 0x5D8
0005bb4e: mem := mem with [R31 + 0x98, el]:u64 <- R0
0005bb54: R0 := R31 + 0xD4
0005bb5c: mem := mem with [R31 + 0x68, el]:u64 <- R0
0005bb62: R0 := R31 + 0xE8
0005bb6a: mem := mem with [R31 + 0x70, el]:u64 <- R0
0005bb70: R0 := R31 + 0xD8
0005bb78: mem := mem with [R31 + 0x60, el]:u64 <- R0
0005bb7e: R0 := R31 + 0xC8
0005bb85: mem := mem with [R31 + 0x80, el]:u64 <- 0
0005bb8d: mem := mem with [R31 + 0xA8, el]:u64 <- R0
0005bb95: mem := mem with [R31 + 0xD8, el]:u64 <- R19
0006cac7: goto %0005ae4e

0005ae4e:
0005ae54: R30 := 0xEE38
0005ae56: call @new_rr_data with return %0005ae58

0005ae58:
0005ae5b: R26 := 0x12000
0005ae61: R21 := R0
0005ae67: R0 := R26 + 0xD80
0005ae6e: R22 := mem[R31 + 0x70, el]:u64
0005ae76: mem := mem with [R31 + 0x88, el]:u64 <- R0
0005ae7d: R0 := mem[R31 + 0x68, el]:u64
0005ae82: R20 := 0
0005ae87: R27 := 0
0005ae8f: mem := mem with [R31 + 0xE0, el]:u64 <- R21
0005ae97: mem := mem with [R31 + 0xE8, el]:u64 <- R0
0005ae9d: #1275 := R31 + 0xF0
0005aea3: mem := mem with [#1275, el]:u64 <- R28
0005aea9: mem := mem with [#1275 + 8, el]:u64 <- R28
0005aeb1: mem := mem with [R31 + 0x100, el]:u64 <- R0
0006cac8: goto %0005ab4e

0005ab4e:
0005ab56: R0 := mem[R31 + 0x60, el]:u64
0005ab5c: R25 := pad:64[31:0[R20]]
0005ab64: R26 := mem[R0 + (60:0[R20].0), el]:u64
0005ab6b: R0 := mem[R24 + 0xF78, el]:u64
0005ab72: R1 := pad:64[mem[R26 + 0x1C, el]:u32]
0005ab79: R2 := pad:64[mem[R0, el]:u32]
0005ab7f: when 31:0[R1] = 0 goto %0005ab7d
0006cac9: goto %0005b63b

0005b63b:
0005b640: R0 := mem[R22, el]:u64
0005b647: R5 := pad:64[mem[R0, el]:u32]
0005b64e: when 31:0[R2] <> 0 goto %0005b64c
0006caca: goto %0005b6b0

0005b64c:
0005b656: R3 := pad:64[mem[R31 + 0x7C, el]:u32]
0005b65c: R2 := pad:64[31:0[R20] + 1]
0005b663: R4 := pad:64[mem[R31 + 0xD0, el]:u32]
0005b668: R0 := 1
0005b66f: R1 := mem[R31 + 0x98, el]:u64
0005b677: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R5]
0005b67c: R30 := 0xF0E8
0005b67e: call @__printf_chk with return %0005b680

0005b680:
0005b685: R5 := pad:64[mem[R31 + 0x94, el]:u32]
0005b68a: R0 := 1
0005b691: R1 := mem[R31 + 0x88, el]:u64
0005b697: R2 := pad:64[31:0[R5]]
0005b69f: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R5]
0005b6a4: R30 := 0xF100
0005b6a6: call @__printf_chk with return %0005b6a8

0005b6a8:
0005b6ad: R5 := pad:64[mem[R31 + 0x94, el]:u32]
0005b6b2: goto %0005b6b0

0005b6b0:
0005b6b7: R0 := pad:64[31:0[R5]]
0005b6bd: R1 := R26
0005b6c2: R30 := 0xEE9C
0005b6c4: call @headers_recv with return %0005b6c6

0005b6c6:
0005b6c9: when 31:0[R0] = 0 goto %0005ad5b
0006cacb: goto %0005b6cd

0005b6cd:
0005b6d2: R0 := mem[R24 + 0xF78, el]:u64
0005b6d9: R2 := pad:64[mem[R0, el]:u32]
0006cacc: goto %0005ab7d

0005ab7d:
0005ab86: R25 := pad:64[31:0[R25] ^ 1]
0005ab8c: #1272 := R23 + 0
0005ab91: VF := extend:65[#1272] <> extend:65[R23] + 0
0005ab96: CF := pad:65[#1272] <> pad:65[R23] - 0x10000000000000000
0005ab9a: ZF := #1272 = 0
0005ab9e: NF := 63:63[#1272]
0005abab: when ZF <> 1 goto %0005aba4
0005abac: goto %0005aba7

0005aba7:
0005aba8: R25 := 0
0005abae: goto %0005abaa

0005aba4:
0005aba5: R25 := pad:64[31:0[R25]]
0005abad: goto %0005abaa

0005abaa:
0005abb4: when 31:0[R25] = 0 goto %0005abb2
0006cacd: goto %0005b5d5

0005b5d5:
0005b5da: R1 := mem[R19 + 0x40, el]:u64
0005b5df: when R1 = 0 goto %0005abb2
0006cace: goto %0005b5e3

0005b5e3:
0005b5e7: R0 := R23
0005b5ef: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R2]
0005b5f4: R30 := 0xEECC
0005b5f6: call @strcasecmp with return %0005b5f8

0005b5f8:
0005b5fd: R2 := pad:64[mem[R31 + 0x94, el]:u32]
0005b603: when 31:0[R0] <> 0 goto %0005b0bc
0006cacf: goto %0005b607

0005b607:
0005b60c: R0 := pad:64[mem[R19 + 0x20, el]:u32]
0005b613: R1 := pad:64[mem[R31 + 0x90, el]:u32]
0005b619: #1280 := ~31:0[R1]
0005b61e: #1281 := 31:0[R0] + ~31:0[R1] + 1
0005b624: VF := extend:33[#1281] <> extend:33[31:0[R0]] + extend:33[#1280] +
          1
0005b62a: CF := pad:33[#1281] <> pad:33[31:0[R0]] + pad:33[#1280] + 1
0005b62e: ZF := #1281 = 0
0005b632: NF := 31:31[#1281]
0005b637: when ZF <> 1 goto %0005b0bc
0006cad0: goto %0005abb2

0005b0bc:
0005b0c1: when 31:0[R2] <> 0 goto %0005b0bf
0006cad1: goto %0005b0e3

0005b0bf:
0005b0c9: R2 := mem[R19 + 0x30, el]:u64
0005b0ce: R1 := 0x13000
0005b0d3: R0 := 1
0005b0d9: R1 := R1 + 0x600
0005b0de: R30 := 0xF4F0
0005b0e0: call @__printf_chk with return %0005b0e2

0005b0e2:
0005b0e5: goto %0005b0e3

0005b0e3:
0005b0ea: R0 := R19
0005b0ef: R30 := 0xF450
0005b0f1: call @dup_rr_data with return %0005b0f3

0005b0f3:
0005b0f7: R1 := R0
0005b0fd: R0 := R19
0005b105: mem := mem with [R31 + 0x80, el]:u64 <- R1
0005b10a: R30 := 0xF460
0005b10c: call @free_rr_data with return %0005b10e

0005b10e:
0005b112: R0 := R21
0005b117: R30 := 0xF468
0005b119: call @free_rr_data with return %0005b11b

0005b11b:
0005b120: R0 := mem[R31 + 0xA0, el]:u64
0005b127: R25 := pad:64[mem[R31 + 0xD0, el]:u32]
0005b12d: when R0 <> 0 goto %0005adb0
0006cad2: goto %0005b131

0005b131:
0005b133: goto %0005ada3

0005abb2:
0005abbc: when 31:0[R2] <> 0 goto %0005abba
0006cad3: goto %0005b5cd

0005abba:
0005abc4: R0 := mem[R26 + 8, el]:u64
0005abc9: R30 := 0xEF98
0005abcb: call @hlist_dump with return %0005abcd

0005abcd:
0005abd1: when R20 = 0 goto %0005abcf
0006cad4: goto %0005b571

0005b5cd:
0005b5d1: when R20 <> 0 goto %0005b571
0006cad5: goto %0005abcf

0005b571:
0005b576: R0 := pad:64[mem[R21 + 0x10, el]:u32]
0005b57b: R25 := 0x12000
0005b580: R27 := 0x12000
0005b586: #1279 := 31:0[R0] - 0x191
0005b58b: VF := extend:33[#1279] <> extend:33[31:0[R0]] - 0x191
0005b590: CF := pad:33[#1279] <> pad:33[31:0[R0]] + 0xFFFFFE6F
0005b594: ZF := #1279 = 0
0005b598: NF := 31:31[#1279]
0005b59f: R0 := mem[R21 + 8, el]:u64
0005b5a5: when ZF goto %0005b5a3
0006cad6: goto %0005b338

0005b5a3:
0005b5ab: R2 := 0x12000
0005b5b0: R1 := 0x13000
0005b5b6: R2 := R2 + 0xA80
0005b5bc: R1 := R1 + 0x460
0005b5c1: R30 := 0xF2E0
0005b5c3: call @hlist_subcmp_all with return %0005b5c5

0005b5c5:
0005b5c9: when 31:0[R0] <> 0 goto %0005b4a8
0006cad7: goto %0005b32b

0005b4a8:
0005b4ad: R0 := mem[R21 + 8, el]:u64
0005b4b3: R2 := R27 + 0x950
0005b4b9: R1 := R25 + 0x958
0005b4be: R30 := 0xF370
0005b4c0: call @hlist_subcmp with return %0005b4c2

0005b4c2:
0005b4c7: R4 := pad:64[mem[R31 + 0xD0, el]:u32]
0005b4cc: when 31:0[R0] = 0 goto %0005b2d4
0006cad8: goto %0005b4d0

0005b4d0:
0005b4d5: R0 := mem[R24 + 0xF78, el]:u64
0005b4dc: R0 := pad:64[mem[R0, el]:u32]
0005b4e2: when 31:0[R0] <> 0 goto %0005b1b9
0006cad9: goto %0005b1e0

0005b1b9:
0005b1bc: R1 := 0x13000
0005b1c1: R0 := 1
0005b1c7: R1 := R1 + 0x648
0005b1cf: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R4]
0005b1d4: R30 := 0xF4D4
0005b1d6: call @__printf_chk with return %0005b1d8

0005b1d8:
0005b1dd: R4 := pad:64[mem[R31 + 0x94, el]:u32]
0005b1e2: goto %0005b1e0

0005b1e0:
0005b1e7: R0 := pad:64[31:0[R4]]
0005b1ec: R30 := 0xF38C
0005b1ee: call @close with return %0005b1f0

0005b1f0:
0005b1f5: R2 := pad:64[mem[R19 + 0x20, el]:u32]
0005b1fd: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R2]
0005b204: R2 := mem[R31 + 0xB8, el]:u64
0005b20b: R1 := mem[R19 + 0x40, el]:u64
0005b212: R0 := mem[R31 + 0xA8, el]:u64
0005b219: mem := mem with [R2, el]:u32 <- 0
0005b21e: R30 := 0xF3A8
0005b220: call @so_resolv with return %0005b222

0005b222:
0005b227: R2 := pad:64[mem[R31 + 0x94, el]:u32]
0005b22d: when 31:0[R0] = 0 goto %0005b22b
0006cada: goto %0005b2a1

0005b22b:
0005b233: R0 := 0xFFFFFFFF
0005b239: R25 := pad:64[31:0[R0]]
0005b241: mem := mem with [R31 + 0xD0, el]:u32 <- 31:0[R0]
0006cadb: goto %0005b243

0005b2a1:
0005b2a6: R0 := pad:64[mem[R31 + 0xC8, el]:u32]
0005b2ac: R1 := pad:64[31:0[R2]]
0005b2b1: R30 := 0xF3BC
0005b2b3: call @so_connect with return %0005b2b5

0005b2b5:
0005b2bb: mem := mem with [R31 + 0xD0, el]:u32 <- 31:0[R0]
0005b2c1: R4 := pad:64[31:0[R0]]
0005b2c7: when 31:31[R0] goto %0005b2c5
0006cadc: goto %0005b2d4

0005b2c5:
0005b2ce: R25 := pad:64[31:0[R0]]
0005b2d2: goto %0005b243

0005b243:
0005b248: R0 := mem[R19 + 0x48, el]:u64
0005b24d: R1 := 0x13000
0005b253: R1 := R1 + 0x668
0005b258: R2 := 0xFFFFFFFFFFFFFFFF
0005b260: mem := mem with [R31 + 0x80, el]:u64 <- R2
0005b265: R30 := 0xF580
0005b267: call @gen_502_page with return %0005b269

0005b269:
0005b26d: R19 := R0
0005b272: R30 := 0xF588
0005b274: call @strlen with return %0005b276

0005b276:
0005b27a: R2 := R0
0005b281: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0005b287: R1 := R19
0005b28c: R30 := 0xF598
0005b28e: call @write with return %0005b290

0005b290:
0005b294: R0 := R19
0005b299: R30 := 0xF5A0
0005b29b: call @free with return %0005b29d

0005b29d:
0005b29f: goto %0005ad8e

0005b2d4:
0005b2d9: R3 := mem[R31 + 0xA0, el]:u64
0005b2df: R0 := pad:64[31:0[R4]]
0005b2e5: R2 := R21
0005b2eb: R1 := R19
0005b2f3: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R4]
0005b2f8: R30 := 0xF3E0
0005b2fa: call @www_authenticate with return %0005b2fc

0005b2fc:
0005b301: R4 := pad:64[mem[R31 + 0x94, el]:u32]
0005b306: when 31:0[R0] = 0 goto %0005afd9
0006cadd: goto %0005b30a

0005afd9:
0005afde: R24 := mem[R24 + 0xF78, el]:u64
0005afe4: R25 := pad:64[31:0[R4]]
0005afeb: R0 := pad:64[mem[R24, el]:u32]
0005aff2: when 31:0[R0] <> 0 goto %0005aff0
0006cade: goto %0005b00d

0005aff0:
0005aff8: R1 := 0x13000
0005affd: R0 := 1
0005b003: R1 := R1 + 0x690
0005b008: R30 := 0xF5B4
0005b00a: call @__printf_chk with return %0005b00c

0005b00c:
0005b00f: goto %0005b00d

0005b00d:
0005b015: R2 := mem[R21 + 0x60, el]:u64
0005b01a: R3 := 0xFFFFFFFFFFFFFFFF
0005b021: R0 := mem[R21 + 0x48, el]:u64
0005b027: #1276 := R2 + 0
0005b02c: VF := extend:65[#1276] <> extend:65[R2] + 0
0005b031: CF := pad:65[#1276] <> pad:65[R2] - 0x10000000000000000
0005b035: ZF := #1276 = 0
0005b039: NF := 63:63[#1276]
0005b03e: R1 := 0x13000
0005b044: R1 := R1 + 0x558
0005b052: when ZF goto %0005b04a
0005b053: goto %0005b04e

0005b04e:
0005b04f: R1 := R2
0005b055: goto %0005b051

0005b04a:
0005b04b: R1 := R1
0005b054: goto %0005b051

0005b051:
0005b05d: mem := mem with [R31 + 0x80, el]:u64 <- R3
0005b062: R30 := 0xF558
0005b064: call @gen_502_page with return %0005b066

0005b066:
0005b069: goto %0005b067

0005b30a:
0005b30f: R0 := pad:64[mem[R21 + 0x10, el]:u32]
0005b315: #1277 := 31:0[R0] - 0x191
0005b31a: VF := extend:33[#1277] <> extend:33[31:0[R0]] - 0x191
0005b31f: CF := pad:33[#1277] <> pad:33[31:0[R0]] + 0xFFFFFE6F
0005b323: ZF := #1277 = 0
0005b327: NF := 31:31[#1277]
0005b32d: when ZF <> 1 goto %0005b32b
0006cadf: goto %0005b4e6

0005b4e6:
0005b4e9: R0 := 0xFFFFFFFFFFFFFFFF
0005b4f0: R2 := pad:64[mem[R19 + 0x20, el]:u32]
0005b4f8: mem := mem with [R31 + 0x80, el]:u64 <- R0
0005b4fe: R25 := pad:64[31:0[R4]]
0005b505: R1 := mem[R19 + 0x40, el]:u64
0005b50c: R0 := mem[R21 + 0x48, el]:u64
0005b511: R30 := 0xF410
0005b513: call @gen_401_page with return %0005b067

0005b067:
0005b06e: R20 := R0
0005b073: R30 := 0xF418
0005b075: call @strlen with return %0005b077

0005b077:
0005b07b: R2 := R0
0005b082: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0005b088: R1 := R20
0005b08d: R30 := 0xF428
0005b08f: call @write with return %0005b091

0005b091:
0005b095: R0 := R20
0005b09a: R30 := 0xF430
0005b09c: call @free with return %0005b09e

0005b09e:
0005b0a2: R0 := R19
0005b0a7: R30 := 0xF438
0005b0a9: call @free_rr_data with return %0005b0ab

0005b0ab:
0005b0af: R0 := R21
0005b0b4: R30 := 0xF440
0005b0b6: call @free_rr_data with return %0005b0b8

0005b0b8:
0005b0ba: goto %0005ad8e

0005b32b:
0005b335: R0 := mem[R21 + 8, el]:u64
0005b33a: goto %0005b338

0005b338:
0005b33f: R25 := R25 + 0x958
0005b345: R2 := R27 + 0x950
0005b34b: R1 := R25
0005b350: R30 := 0xEFC4
0005b352: call @hlist_subcmp with return %0005b354

0005b354:
0005b359: when 31:0[R0] <> 0 goto %0005b357
0006cae0: goto %0005b3c6

0005b3c6:
0005b3ca: R1 := R21
0005b3d0: R0 := R19
0005b3d5: R30 := 0xEFD4
0005b3d7: call @http_has_body with return %0005b3d9

0005b3d9:
0005b3dd: #1278 := R0 + 1
0005b3e2: VF := extend:65[#1278] <> extend:65[R0] + 1
0005b3e7: CF := pad:65[#1278] <> pad:65[R0] + 1
0005b3eb: ZF := #1278 = 0
0005b3ef: NF := 63:63[#1278]
0005b3f5: when ZF <> 1 goto %0005b3f3
0006cae1: goto %0005b357

0005b3f3:
0005b3fd: R0 := mem[R21 + 8, el]:u64
0005b402: R27 := 0x12000
0005b408: R27 := R27 + 0xE30
0005b40d: R3 := 1
0005b413: R2 := R27
0005b418: R1 := 0x12000
0005b41e: R1 := R1 + 0xE40
0005b423: R30 := 0xF30C
0005b425: call @hlist_mod with return %0005b427

0005b427:
0005b42d: mem := mem with [R21 + 8, el]:u64 <- R0
0005b433: R2 := R27
0005b439: R1 := R25
0005b43e: R3 := 1
0005b443: R30 := 0xF320
0005b445: call @hlist_mod with return %0005b447

0005b447:
0005b44a: R27 := 1
0005b451: R1 := mem[R24 + 0xF78, el]:u64
0005b459: mem := mem with [R21 + 8, el]:u64 <- R0
0005b460: R2 := pad:64[mem[R1, el]:u32]
0005b464: goto %0005acd8

0005b357:
0005b361: R0 := mem[R21 + 8, el]:u64
0005b367: R2 := R27 + 0x950
0005b36c: R1 := 0x12000
0005b371: R3 := 1
0005b377: R1 := R1 + 0xE40
0005b37c: R27 := 0
0005b381: R30 := 0xEFF8
0005b383: call @hlist_mod with return %0005b385

0005b385:
0005b38b: mem := mem with [R21 + 8, el]:u64 <- R0
0005b392: R1 := mem[R24 + 0xF78, el]:u64
0005b398: R0 := R31 + 0xF8
0005b39d: R2 := 0xFFFFFFFFFFFFFFFF
0005b3a5: mem := mem with [R31 + 0x80, el]:u64 <- R2
0005b3ac: R2 := pad:64[mem[R1, el]:u32]
0005b3b4: R0 := mem[R0 + (60:0[R20].0), el]:u64
0005b3bb: R25 := pad:64[mem[R0, el]:u32]
0005b3c0: when 31:0[R2] = 0 goto %0005aeb5
0006cae2: goto %0005b3c4

0005b3c4:
0006cae3: goto %0005acf5

0005abcf:
0005abd9: R0 := pad:64[mem[R19, el]:u32]
0005abe0: when 31:0[R0] <> 0 goto %0005abde
0006cae4: goto %0005b563

0005abde:
0005abe8: R0 := mem[R31 + 0xB0, el]:u64
0005abef: R0 := 0.31:0[R0 >> 0x20 | R0 << 0x20]
0005abf4: R30 := 0xF114
0005abf6: call @inet_ntoa with return %0005abf8

0005abf8:
0005abfc: #1273 := R19 + 0x28
0005ac01: R4 := mem[#1273, el]:u64
0005ac06: R5 := mem[#1273 + 8, el]:u64
0005ac0c: R3 := R0
0005ac11: R2 := 0x12000
0005ac16: R0 := 7
0005ac1c: R2 := R2 + 0xDC0
0005ac21: R1 := 1
0005ac26: R30 := 0xF130
0005ac28: call @__syslog_chk with return %0005ac2a

0005ac2a:
0005ac2f: R0 := mem[R19 + 0x38, el]:u64
0005ac35: when R0 = 0 goto %0005ac33
0006cae5: goto %0005b532

0005b532:
0005b537: R1 := mem[R19 + 0x30, el]:u64
0005b53d: when R1 = 0 goto %0005b53b
0006cae6: goto %0005b54f

0005b54f:
0005b553: R0 := R1
0005b558: R30 := 0xF148
0005b55a: call @free with return %0005b55c

0005b55c:
0005b561: R0 := mem[R19 + 0x38, el]:u64
0006cae7: goto %0005b53b

0005b53b:
0005b543: R30 := 0xF150
0005b545: call @strdup with return %0005b547

0005b547:
0005b54d: mem := mem with [R19 + 0x30, el]:u64 <- R0
0006cae8: goto %0005ac33

0005ac33:
0005ac3d: R0 := mem[R19 + 8, el]:u64
0005ac42: R2 := 0x12000
0005ac48: R2 := R2 + 0xE30
0005ac4d: R3 := 1
0005ac52: R25 := 0x12000
0005ac58: R1 := R25 + 0x958
0005ac5d: R30 := 0xF170
0005ac5f: call @hlist_mod with return %0005ac61

0005ac61:
0005ac67: mem := mem with [R19 + 8, el]:u64 <- R0
0005ac6c: R1 := 0x12000
0005ac72: R1 := R1 + 0xB58
0005ac77: R30 := 0xF180
0005ac79: call @hlist_del with return %0005ac7b

0005ac7b:
0005ac81: mem := mem with [R19 + 8, el]:u64 <- R0
0005ac88: R2 := mem[R31 + 0xA0, el]:u64
0005ac8d: R1 := 0x13000
0005ac93: R1 := R1 + 0x410
0005ac98: R30 := 0xF194
0005ac9a: call @http_parse_basic with return %0005ac9c

0005ac9c:
0005aca0: #1274 := 31:0[R0] + 0
0005aca5: VF := extend:33[#1274] <> extend:33[31:0[R0]] + 0
0005acaa: CF := pad:33[#1274] <> pad:33[31:0[R0]] - 0x100000000
0005acae: ZF := #1274 = 0
0005acb2: NF := 31:31[#1274]
0005acba: when ~(NF = VF & ~ZF) goto %0005acb8
0006cae9: goto %0005b515

0005acb8:
0005acc2: R1 := mem[R24 + 0xF78, el]:u64
0005acc9: R0 := pad:64[mem[R19, el]:u32]
0005acd0: R2 := pad:64[mem[R1, el]:u32]
0005acd5: goto %0005acd3

0005b515:
0005b51a: R25 := mem[R24 + 0xF78, el]:u64
0005b521: R2 := pad:64[mem[R25, el]:u32]
0005b527: when 31:0[R2] <> 0 goto %0005b466
0006caea: goto %0005b52b

0005b466:
0005b46b: R0 := mem[R31 + 0xA0, el]:u64
0005b470: R1 := 0x12000
0005b476: R1 := R1 + 0xDD0
0005b47c: R2 := R0 + 0x32
0005b482: R4 := R0 + 0x64
0005b488: R3 := R0
0005b48d: R0 := 1
0005b492: R30 := 0xF354
0005b494: call @__printf_chk with return %0005b496

0005b496:
0005b49b: R2 := pad:64[mem[R25, el]:u32]
0005b4a2: R0 := pad:64[mem[R19, el]:u32]
0005b4a6: goto %0005acd3

0005b52b:
0005b530: R0 := pad:64[mem[R19, el]:u32]
0006caeb: goto %0005acd3

0005acd3:
0005acda: when 31:0[R0] = 0 goto %0005acd8
0006caec: goto %0005aecf

0005aecf:
0005aed4: R1 := mem[R19 + 0x28, el]:u64
0005aed9: R0 := 0x12000
0005aedf: R0 := R0 + 0xF00
0005aee7: mem := mem with [R31 + 0x94, el]:u32 <- 31:0[R2]
0005aeec: R30 := 0xF1C4
0005aeee: call @strcasecmp with return %0005aef0

0005aef0:
0005aef5: R2 := pad:64[mem[R31 + 0x94, el]:u32]
0005aefb: when 31:0[R0] <> 0 goto %0005acd8
0006caed: goto %0005aeff

0005aeff:
0005af04: when 31:0[R2] <> 0 goto %0005af02
0006caee: goto %0005af1f

0005af02:
0005af0a: R1 := 0x13000
0005af0f: R0 := 1
0005af15: R1 := R1 + 0x620
0005af1a: R30 := 0xF520
0005af1c: call @__printf_chk with return %0005af1e

0005af1e:
0005af21: goto %0005af1f

0005af1f:
0005af25: R0 := 0xC8
0005af2c: mem := mem with [R21, el]:u32 <- 0
0005af34: mem := mem with [R21 + 0x10, el]:u32 <- 31:0[R0]
0005af39: R0 := 0x13000
0005af40: mem := mem with [R21 + 0x1C, el]:u32 <- 0
0005af46: R0 := R0 + 0x630
0005af4b: R30 := 0xF1EC
0005af4d: call @strdup with return %0005af4f

0005af4f:
0005af53: R1 := R0
0005af5a: R0 := mem[R19 + 0x48, el]:u64
0005af62: mem := mem with [R21 + 0x50, el]:u64 <- R1
0005af67: R30 := 0xF1FC
0005af69: call @strdup with return %0005af6b

0005af6b:
0005af71: mem := mem with [R21 + 0x48, el]:u64 <- R0
0005af78: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0005af7e: R1 := R21
0005af83: R30 := 0xF20C
0005af85: call @headers_send with return %0005af87

0005af87:
0005af8c: R25 := pad:64[mem[R31 + 0xD0, el]:u32]
0005af93: when 31:0[R0] <> 0 goto %0005af91
0006caef: goto %0005afab

0005af91:
0005af9b: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0005afa1: R1 := pad:64[31:0[R25]]
0005afa6: R30 := 0xF50C
0005afa8: call @tunnel with return %0005afaa

0005afaa:
0005afad: goto %0005afab

0005afab:
0005afb1: R1 := 0xFFFFFFFFFFFFFFFF
0005afb7: R0 := R19
0005afbf: mem := mem with [R31 + 0x80, el]:u64 <- R1
0005afc4: R30 := 0xF224
0005afc6: call @free_rr_data with return %0005afc8

0005afc8:
0005afcc: R0 := R21
0005afd1: R30 := 0xF22C
0005afd3: call @free_rr_data with return %0005afd5

0005afd5:
0005afd7: goto %0005ad8e

0005b563:
0005b568: R0 := mem[R24 + 0xF78, el]:u64
0005b56f: R2 := pad:64[mem[R0, el]:u32]
0006caf0: goto %0005acd8

0005acd8:
0005ace1: R0 := R31 + 0xF8
0005ace9: R0 := mem[R0 + (60:0[R20].0), el]:u64
0005acf0: R25 := pad:64[mem[R0, el]:u32]
0005acf7: when 31:0[R2] <> 0 goto %0005acf5
0006caf1: goto %0005aeb5

0005acf5:
0005acfe: R2 := pad:64[31:0[R25]]
0005ad03: R1 := 0x12000
0005ad08: R0 := 1
0005ad0e: R1 := R1 + 0xFD8
0005ad13: R30 := 0xF034
0005ad15: call @__printf_chk with return %0005ad17

0005ad17:
0005ad1b: R1 := R26
0005ad21: R0 := pad:64[31:0[R25]]
0005ad26: R30 := 0xF040
0005ad28: call @headers_send with return %0005ad2a

0005ad2a:
0005ad2f: when 31:0[R0] <> 0 goto %0005ad2d
0006caf2: goto %0005aeb3

0005aeb3:
0006caf3: goto %0005ad5b

0005aeb5:
0005aeb9: R1 := R26
0005aebf: R0 := pad:64[31:0[R25]]
0005aec4: R30 := 0xEF18
0005aec6: call @headers_send with return %0005aec8

0005aec8:
0005aecb: when 31:0[R0] = 0 goto %0005ad5b
0006caf4: goto %0005ad2d

0005ad2d:
0005ad37: R1 := mem[R22, el]:u64
0005ad3d: R0 := pad:64[31:0[R25]]
0005ad43: R3 := R21
0005ad49: R2 := R19
0005ad50: R1 := pad:64[mem[R1, el]:u32]
0005ad55: R30 := 0xEF34
0005ad57: call @http_body_send with return %0005ad59

0005ad59:
0005ad5d: when 31:0[R0] = 0 goto %0005ad5b
0006caf5: goto %0005adbe

0005ad5b:
0005ad63: R1 := 0xFFFFFFFFFFFFFFFF
0005ad69: R0 := R19
0005ad71: mem := mem with [R31 + 0x80, el]:u64 <- R1
0005ad76: R30 := 0xF058
0005ad78: call @free_rr_data with return %0005ad7a

0005ad7a:
0005ad7e: R0 := R21
0005ad83: R30 := 0xF060
0005ad85: call @free_rr_data with return %0005ad87

0005ad87:
0005ad8c: R25 := pad:64[mem[R31 + 0xD0, el]:u32]
0006caf6: goto %0005ad8e

0005adbe:
0005adc2: R22 := R22 + 8
0005adc7: when R20 = 0 goto %0005ab48
0006caf7: goto %0005adcb

0005ab48:
0005ab4b: R20 := 1
0005ab50: goto %0005ab4e

0005adcb:
0005adcf: R0 := R19
0005add4: R30 := 0xEF48
0005add6: call @free_rr_data with return %0005add8

0005add8:
0005addc: R0 := R21
0005ade1: R30 := 0xEF50
0005ade3: call @free_rr_data with return %0005ade5

0005ade5:
0005adea: R25 := pad:64[mem[R31 + 0xD0, el]:u32]
0005adef: when 31:0[R27] = 0 goto %0005ad8e
0006caf8: goto %0005adf3

0005adf3:
0005adf7: R0 := pad:64[31:0[R25]]
0005adfc: R30 := 0xEF60
0005adfe: call @so_closed with return %0005ae00

0005ae00:
0005ae04: when 31:0[R0] <> 0 goto %0005ad8e
0006caf9: goto %0005ae08

0005ae08:
0005ae0d: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0005ae12: R30 := 0xEF6C
0005ae14: call @so_closed with return %0005ae16

0005ae16:
0005ae19: R1 := 0x27000
0005ae20: R1 := mem[R1 + 0xFD0, el]:u64
0005ae27: R1 := pad:64[mem[R1, el]:u32]
0005ae2e: R0 := pad:64[31:0[R0] | 31:0[R1]]
0005ae34: when 31:0[R0] <> 0 goto %0005ad8e
0006cafa: goto %0005ae38

0005ad8e:
0005ad93: R0 := mem[R31 + 0xA0, el]:u64
0005ad99: when R0 = 0 goto %0005ad97
0006cafb: goto %0005adb0

0005adb0:
0005adb5: R0 := mem[R31 + 0xA0, el]:u64
0005adba: R30 := 0xF074
0005adbc: call @free with return %0005ad97

0005ad97:
0005ad9f: when R23 = 0 goto %0005aa7a
0006cafc: goto %0005ada3

0005ada3:
0005ada7: R0 := R23
0005adac: R30 := 0xF080
0005adae: call @free with return %0005aa7a

0005aa7a:
0005aa81: R0 := pad:64[31:0[R25]]
0005aa86: R30 := 0xF088
0005aa88: call @close with return %0005aa8a

0005aa8a:
0005aa8d: R0 := 0x27000
0005aa94: R0 := mem[R0 + 0xFB8, el]:u64
0005aa9b: R1 := mem[R31 + 0x108, el]:u64
0005aaa2: R2 := mem[R0, el]:u64
0005aaa8: #1265 := ~R2
0005aaad: #1266 := R1 + ~R2 + 1
0005aab3: VF := extend:65[#1266] <> extend:65[R1] + extend:65[#1265] + 1
0005aab9: CF := pad:65[#1266] <> pad:65[R1] + pad:65[#1265] + 1
0005aabd: ZF := #1266 = 0
0005aac1: NF := 63:63[#1266]
0005aac5: R1 := #1266
0005aaca: R2 := 0
0005aad0: when ZF <> 1 goto %0005aace
0006cafd: goto %0005aadc

0005aace:
0005aad6: R30 := 0xF5C4
0005aad8: call @__stack_chk_fail with return %0005aada

0005aada:
0006cafe: call @direct_tunnel with noreturn

0005aadc:
0005aae0: #1267 := R31 + 0x10
0005aae5: R19 := mem[#1267, el]:u64
0005aaea: R20 := mem[#1267 + 8, el]:u64
0005aaf0: #1268 := R31 + 0x20
0005aaf5: R21 := mem[#1268, el]:u64
0005aafa: R22 := mem[#1268 + 8, el]:u64
0005ab00: #1269 := R31 + 0x30
0005ab05: R23 := mem[#1269, el]:u64
0005ab0a: R24 := mem[#1269 + 8, el]:u64
0005ab10: #1270 := R31 + 0x40
0005ab15: R25 := mem[#1270, el]:u64
0005ab1a: R26 := mem[#1270 + 8, el]:u64
0005ab20: #1271 := R31 + 0x50
0005ab25: R27 := mem[#1271, el]:u64
0005ab2a: R28 := mem[#1271 + 8, el]:u64
0005ab31: R0 := mem[R31 + 0x80, el]:u64
0005ab38: R29 := mem[R31, el]:u64
0005ab3d: R30 := mem[R31 + 8, el]:u64
0005ab41: R31 := R31 + 0x110
0005ab46: call R30 with noreturn

0005ae38:
0005ae3b: R30 := 0xEF84
0005ae3d: call @new_rr_data with return %0005ae3f

0005ae3f:
0005ae43: R19 := R0
0005ae4b: mem := mem with [R31 + 0xD8, el]:u64 <- R0
0005ae50: goto %0005ae4e

0006caff: sub direct_tunnel(direct_tunnel_result)
0006d0c6: direct_tunnel_result :: out u32 = low:32[R0]

000585b8:
000585bf: #1156 := R31 - 0x50
000585c5: mem := mem with [#1156, el]:u64 <- R29
000585cb: mem := mem with [#1156 + 8, el]:u64 <- R30
000585cf: R31 := #1156
000585d5: R1 := R0
000585db: R29 := R31
000585e1: #1157 := R31 + 0x10
000585e7: mem := mem with [#1157, el]:u64 <- R19
000585ed: mem := mem with [#1157 + 8, el]:u64 <- R20
000585f2: R20 := 0x27000
000585f7: R19 := 0
000585fe: R0 := mem[R20 + 0xFB8, el]:u64
00058604: #1158 := R31 + 0x30
0005860a: mem := mem with [#1158, el]:u64 <- R23
00058610: mem := mem with [#1158 + 8, el]:u64 <- R24
00058616: #1159 := R1 + 8
0005861b: R23 := mem[#1159, el]:u64
00058620: R24 := mem[#1159 + 8, el]:u64
00058627: R2 := mem[R0, el]:u64
0005862f: mem := mem with [R31 + 0x48, el]:u64 <- R2
00058634: R2 := 0
0005863a: #1160 := R31 + 0x20
00058640: mem := mem with [#1160, el]:u64 <- R21
00058646: mem := mem with [#1160 + 8, el]:u64 <- R22
0005864d: R22 := pad:64[mem[R1, el]:u32]
00058653: R0 := R23
00058658: R30 := 0xF608
0005865a: call @strdup with return %0005865c

0005865c:
0005865f: R1 := 0x3A
00058665: R21 := R0
0005866a: R30 := 0xF614
0005866c: call @strchr with return %0005866e

0005866e:
00058672: when R0 = 0 goto %00058670
0006cb00: goto %0005a071

0005a071:
0005a076: mem := mem with [R0] <- 0
0005a07a: R0 := R0 + 1
0005a07f: R2 := 0xA
0005a084: R1 := 0
0005a089: R30 := 0xF628
0005a08b: call @strtol with return %0005a08d

0005a08d:
0005a091: R19 := pad:64[31:0[R0]]
0006cb01: goto %00058670

00058670:
00058678: R30 := 0xF630
0005867a: call @__errno_location with return %0005867c

0005867c:
00058680: R2 := R0
00058686: R1 := R21
0005868c: R0 := R31 + 0x40
00058693: mem := mem with [R2, el]:u32 <- 0
00058698: R30 := 0xF644
0005869a: call @so_resolv with return %0005869c

0005869c:
000586a0: when 31:0[R0] = 0 goto %0005869e
0006cb02: goto %00059fe5

0005869e:
000586a6: R19 := 0xFFFFFFFF
000586ab: goto %000586a9

00059fe5:
00059fea: R0 := pad:64[mem[R31 + 0x40, el]:u32]
00059ff0: R1 := pad:64[31:0[R19]]
00059ff5: R30 := 0xF654
00059ff7: call @so_connect with return %00059ff9

00059ff9:
00059ffd: R19 := pad:64[31:0[R0]]
0005a003: #1226 := 31:0[R0] + 0
0005a008: VF := extend:33[#1226] <> extend:33[31:0[R0]] + 0
0005a00d: CF := pad:33[#1226] <> pad:33[31:0[R0]] - 0x100000000
0005a011: ZF := #1226 = 0
0005a015: NF := 31:31[#1226]
0005a01c: when ~(NF = VF & ~ZF) goto %000586a9
0006cb03: goto %0005a020

0005a020:
0005a025: R0 := 0.31:0[R24 >> 0x20 | R24 << 0x20]
0005a02a: R30 := 0xF668
0005a02c: call @inet_ntoa with return %0005a02e

0005a02e:
0005a032: R4 := R23
0005a038: R3 := R0
0005a03d: R2 := 0x13000
0005a042: R0 := 7
0005a048: R2 := R2 + 0x6B0
0005a04d: R1 := 1
0005a052: R30 := 0xF684
0005a054: call @__syslog_chk with return %0005a056

0005a056:
0005a059: R0 := 0x27000
0005a060: R0 := mem[R0 + 0xF78, el]:u64
0005a067: R0 := pad:64[mem[R0, el]:u32]
0005a06d: when 31:0[R0] <> 0 goto %00059fab
0006cb04: goto %00059fcf

00059fab:
00059faf: R2 := R23
00059fb5: R3 := pad:64[31:0[R22]]
00059fba: R1 := 0x13000
00059fbf: R0 := 1
00059fc5: R1 := R1 + 0x6C0
00059fca: R30 := 0xF6FC
00059fcc: call @__printf_chk with return %00059fce

00059fce:
00059fd1: goto %00059fcf

00059fcf:
00059fd6: R1 := pad:64[31:0[R19]]
00059fdc: R0 := pad:64[31:0[R22]]
00059fe1: R30 := 0xF6A0
00059fe3: call @tunnel with return %000586a9

000586a9:
000586b0: R0 := R21
000586b5: R30 := 0xF6A8
000586b7: call @free with return %000586b9

000586b9:
000586bd: R0 := pad:64[31:0[R19]]
000586c2: R30 := 0xF6B0
000586c4: call @close with return %000586c6

000586c6:
000586ca: R0 := pad:64[31:0[R22]]
000586cf: R30 := 0xF6B8
000586d1: call @close with return %000586d3

000586d3:
000586d8: R20 := mem[R20 + 0xFB8, el]:u64
000586df: R0 := mem[R31 + 0x48, el]:u64
000586e6: R1 := mem[R20, el]:u64
000586ec: #1161 := ~R1
000586f1: #1162 := R0 + ~R1 + 1
000586f7: VF := extend:65[#1162] <> extend:65[R0] + extend:65[#1161] + 1
000586fd: CF := pad:65[#1162] <> pad:65[R0] + pad:65[#1161] + 1
00058701: ZF := #1162 = 0
00058705: NF := 63:63[#1162]
00058709: R0 := #1162
0005870e: R1 := 0
00058714: when ZF <> 1 goto %00058712
0006cb05: goto %00059f66

00058712:
0005871a: R30 := 0xF70C
0005871c: call @__stack_chk_fail with return %0005871e

0005871e:
0006cb06: call @scanner_hook with noreturn

00059f66:
00059f6a: #1223 := R31 + 0x10
00059f6f: R19 := mem[#1223, el]:u64
00059f74: R20 := mem[#1223 + 8, el]:u64
00059f7a: #1224 := R31 + 0x20
00059f7f: R21 := mem[#1224, el]:u64
00059f84: R22 := mem[#1224 + 8, el]:u64
00059f8a: #1225 := R31 + 0x30
00059f8f: R23 := mem[#1225, el]:u64
00059f94: R24 := mem[#1225 + 8, el]:u64
00059f9b: R29 := mem[R31, el]:u64
00059fa0: R30 := mem[R31 + 8, el]:u64
00059fa4: R31 := R31 + 0x50
00059fa9: call R30 with noreturn

0006cb07: sub dump_auth(dump_auth_result)
0006d0c7: dump_auth_result :: out u32 = low:32[R0]

00052e9d:
00052ea4: #770 := R31 - 0x30
00052eaa: mem := mem with [#770, el]:u64 <- R29
00052eb0: mem := mem with [#770 + 8, el]:u64 <- R30
00052eb4: R31 := #770
00052eb9: R1 := 0x12000
00052ebf: R1 := R1 + 0x5A0
00052ec5: R29 := R31
00052ecb: #771 := R31 + 0x10
00052ed1: mem := mem with [#771, el]:u64 <- R19
00052ed7: mem := mem with [#771 + 8, el]:u64 <- R20
00052edd: R19 := R0
00052ee2: R0 := 1
00052ee7: R30 := 0xB3D0
00052ee9: call @__printf_chk with return %00052eeb

00052eeb:
00052eef: when R19 = 0 goto %00052eed
0006cb08: goto %0005f2a5

00052eed:
00052ef6: #772 := R31 + 0x10
00052efb: R19 := mem[#772, el]:u64
00052f00: R20 := mem[#772 + 8, el]:u64
00052f05: R1 := 0x12000
00052f0c: R29 := mem[R31, el]:u64
00052f11: R30 := mem[R31 + 8, el]:u64
00052f15: R31 := R31 + 0x30
00052f1b: R1 := R1 + 0x5C0
00052f20: R0 := 1
00052f24: call @__printf_chk with noreturn

0005f2a5:
0005f2a9: R2 := R19
0005f2ae: R1 := 0x12000
0005f2b3: R0 := 1
0005f2b9: R1 := R1 + 0x5E0
0005f2be: R30 := 0xB3E8
0005f2c0: call @__printf_chk with return %0005f2c2

0005f2c2:
0005f2c6: R2 := R19 + 0x32
0005f2cb: R1 := 0x12000
0005f2d0: R0 := 1
0005f2d6: R1 := R1 + 0x5F0
0005f2db: R30 := 0xB3FC
0005f2dd: call @__printf_chk with return %0005f2df

0005f2df:
0005f2e3: R2 := R19 + 0x64
0005f2e8: R1 := 0x12000
0005f2ed: R0 := 1
0005f2f3: R1 := R1 + 0x600
0005f2f8: R30 := 0xB410
0005f2fa: call @__printf_chk with return %0005f2fc

0005f2fc:
0005f301: R2 := pad:64[mem[R19 + 0x12C, el]:u32]
0005f306: R1 := 0x12000
0005f30b: R0 := 1
0005f311: R1 := R1 + 0x610
0005f316: R30 := 0xB424
0005f318: call @__printf_chk with return %0005f31a

0005f31a:
0005f31f: R2 := pad:64[mem[R19 + 0x130, el]:u32]
0005f324: R1 := 0x12000
0005f329: R0 := 1
0005f32f: R1 := R1 + 0x620
0005f334: R30 := 0xB438
0005f336: call @__printf_chk with return %0005f338

0005f338:
0005f33d: R2 := pad:64[mem[R19 + 0x134, el]:u32]
0005f342: R1 := 0x12000
0005f347: R0 := 1
0005f34d: R1 := R1 + 0x630
0005f352: R30 := 0xB44C
0005f354: call @__printf_chk with return %0005f356

0005f356:
0005f35b: R2 := pad:64[mem[R19 + 0x138, el]:u32]
0005f360: R1 := 0x12000
0005f365: R0 := 1
0005f36b: R1 := R1 + 0x640
0005f370: R30 := 0xB460
0005f372: call @__printf_chk with return %0005f374

0005f374:
0005f378: R0 := R19 + 0xFA
0005f37d: R2 := 8
0005f382: R1 := 0x10
0005f387: R30 := 0xB470
0005f389: call @printmem with return %0005f38b

0005f38b:
0005f38e: R1 := 0x12000
0005f394: R2 := R0
0005f39a: R1 := R1 + 0x650
0005f3a0: R20 := R0
0005f3a5: R0 := 1
0005f3aa: R30 := 0xB488
0005f3ac: call @__printf_chk with return %0005f3ae

0005f3ae:
0005f3b2: R0 := R20
0005f3b7: R30 := 0xB490
0005f3b9: call @free with return %0005f3bb

0005f3bb:
0005f3bf: R0 := R19 + 0xC8
0005f3c4: R2 := 8
0005f3c9: R1 := 0x10
0005f3ce: R30 := 0xB4A0
0005f3d0: call @printmem with return %0005f3d2

0005f3d2:
0005f3d5: R1 := 0x12000
0005f3db: R2 := R0
0005f3e1: R1 := R1 + 0x660
0005f3e7: R20 := R0
0005f3ec: R0 := 1
0005f3f1: R30 := 0xB4B8
0005f3f3: call @__printf_chk with return %0005f3f5

0005f3f5:
0005f3f9: R0 := R20
0005f3fe: R30 := 0xB4C0
0005f400: call @free with return %0005f402

0005f402:
0005f406: R0 := R19 + 0x96
0005f40b: R2 := 8
0005f410: R1 := 0x10
0005f415: R30 := 0xB4D0
0005f417: call @printmem with return %0005f419

0005f419:
0005f41c: R1 := 0x12000
0005f422: R19 := R0
0005f428: R2 := R0
0005f42e: R1 := R1 + 0x670
0005f436: mem := mem with [R31 + 0x28, el]:u64 <- R0
0005f43b: R0 := 1
0005f440: R30 := 0xB4EC
0005f442: call @__printf_chk with return %0005f444

0005f444:
0005f448: R0 := R19
0005f44e: #1436 := R31 + 0x10
0005f453: R19 := mem[#1436, el]:u64
0005f458: R20 := mem[#1436 + 8, el]:u64
0005f45f: R29 := mem[R31, el]:u64
0005f464: R30 := mem[R31 + 8, el]:u64
0005f468: R31 := R31 + 0x30
0005f46c: call @free with noreturn

0006cb09: sub dup2(dup2_fd, dup2_fd2, dup2_result)
0006d0c8: dup2_fd :: in u32 = low:32[R0]
0006d0c9: dup2_fd2 :: in u32 = low:32[R1]
0006d0ca: dup2_result :: out u32 = low:32[R0]

00060fe3:
00064e01: R16 := 0x27000
00064e08: R17 := mem[R16 + 0xEE0, el]:u64
00064e0e: R16 := R16 + 0xEE0
00064e13: call R17 with noreturn

0006cb0a: sub dup_auth(dup_auth_result)
0006d0cb: dup_auth_result :: out u32 = low:32[R0]

0005b720:
0005b727: #1282 := R31 - 0x40
0005b72d: mem := mem with [#1282, el]:u64 <- R29
0005b733: mem := mem with [#1282 + 8, el]:u64 <- R30
0005b737: R31 := #1282
0005b73d: R29 := R31
0005b743: #1283 := R31 + 0x10
0005b749: mem := mem with [#1283, el]:u64 <- R19
0005b74f: mem := mem with [#1283 + 8, el]:u64 <- R20
0005b755: R20 := R0
0005b75b: #1284 := R31 + 0x30
0005b761: mem := mem with [#1284, el]:u64 <- R23
0005b767: mem := mem with [#1284 + 8, el]:u64 <- R24
0005b76d: R24 := pad:64[31:0[R1]]
0005b772: R30 := 0xB26C
0005b774: call @new_auth with return %0005b776

0005b776:
0005b77a: R19 := R0
0005b780: when R0 = 0 goto %0005b77e
0006cb0b: goto %0005b8d9

0005b8d9:
0005b8dd: R3 := R20 + 0x200
0005b8e3: R4 := R0 + 0x200
0005b8e9: #1299 := R31 + 0x20
0005b8ef: mem := mem with [#1299, el]:u64 <- R21
0005b8f5: mem := mem with [#1299 + 8, el]:u64 <- R22
0005b8fa: R2 := 0x32
0005b901: R1 := R20 + R2
0005b908: V0 := pad:128[mem[R3 - 0xD4, el]:u64]
0005b90f: R0 := R0 + R2
0005b915: R22 := R19 + 0xFA
0005b91b: R23 := R19 + 0xC8
0005b921: R21 := R19 + 0x96
0005b929: mem := mem with [R4 - 0xD4, el]:u64 <- 63:0[V0]
0005b930: R4 := pad:64[mem[R20 + 0x134, el]:u32]
0005b937: R3 := pad:64[mem[R20 + 0x138, el]:u32]
0005b93f: mem := mem with [R19 + 0x134, el]:u32 <- 31:0[R4]
0005b947: mem := mem with [R19 + 0x138, el]:u32 <- 31:0[R3]
0005b94c: R30 := 0xB2B4
0005b94e: call @strlcpy with return %0005b950

0005b950:
0005b954: R1 := R20 + 0x64
0005b95a: R0 := R19 + 0x64
0005b95f: R2 := 0x32
0005b964: R30 := 0xB2C4
0005b966: call @strlcpy with return %0005b968

0005b968:
0005b96b: when 31:0[R24] = 0 goto %0005b7be
0006cb0c: goto %0005b96f

0005b7be:
0005b7c3: mem := mem with [R19, el]:u64 <- 0
0005b7c8: mem := mem with [R19 + 8, el]:u64 <- 0
0005b7ce: R0 := R19
0005b7d4: #1287 := R19 + 0x10
0005b7d9: mem := mem with [#1287, el]:u64 <- 0
0005b7de: mem := mem with [#1287 + 8, el]:u64 <- 0
0005b7e4: #1288 := R19 + 0x20
0005b7e9: mem := mem with [#1288, el]:u64 <- 0
0005b7ee: mem := mem with [#1288 + 8, el]:u64 <- 0
0005b7f5: mem := mem with [R19 + 0x30, el]:u16 <- 0
0005b7fc: mem := mem with [R22, el]:u64 <- 0
0005b801: mem := mem with [R22 + 8, el]:u64 <- 0
0005b807: #1289 := R22 + 0x10
0005b80c: mem := mem with [#1289, el]:u64 <- 0
0005b811: mem := mem with [#1289 + 8, el]:u64 <- 0
0005b817: #1290 := R22 + 0x20
0005b81c: mem := mem with [#1290, el]:u64 <- 0
0005b821: mem := mem with [#1290 + 8, el]:u64 <- 0
0005b828: mem := mem with [R22 + 0x30, el]:u16 <- 0
0005b82e: #1291 := R19 + 0xC8
0005b833: mem := mem with [#1291, el]:u64 <- 0
0005b838: mem := mem with [#1291 + 8, el]:u64 <- 0
0005b83e: #1292 := R23 + 0x10
0005b843: mem := mem with [#1292, el]:u64 <- 0
0005b848: mem := mem with [#1292 + 8, el]:u64 <- 0
0005b84e: #1293 := R23 + 0x20
0005b853: mem := mem with [#1293, el]:u64 <- 0
0005b858: mem := mem with [#1293 + 8, el]:u64 <- 0
0005b85f: mem := mem with [R23 + 0x30, el]:u16 <- 0
0005b866: mem := mem with [R21, el]:u64 <- 0
0005b86b: mem := mem with [R21 + 8, el]:u64 <- 0
0005b871: #1294 := R21 + 0x10
0005b876: mem := mem with [#1294, el]:u64 <- 0
0005b87b: mem := mem with [#1294 + 8, el]:u64 <- 0
0005b881: #1295 := R21 + 0x20
0005b886: mem := mem with [#1295, el]:u64 <- 0
0005b88b: mem := mem with [#1295 + 8, el]:u64 <- 0
0005b892: mem := mem with [R21 + 0x30, el]:u16 <- 0
0005b898: #1296 := R31 + 0x10
0005b89d: R19 := mem[#1296, el]:u64
0005b8a2: R20 := mem[#1296 + 8, el]:u64
0005b8a8: #1297 := R31 + 0x20
0005b8ad: R21 := mem[#1297, el]:u64
0005b8b2: R22 := mem[#1297 + 8, el]:u64
0005b8b8: #1298 := R31 + 0x30
0005b8bd: R23 := mem[#1298, el]:u64
0005b8c2: R24 := mem[#1298 + 8, el]:u64
0005b8c9: R29 := mem[R31, el]:u64
0005b8ce: R30 := mem[R31 + 8, el]:u64
0005b8d2: R31 := R31 + 0x40
0005b8d7: call R30 with noreturn

0005b96f:
0005b973: R1 := R20
0005b978: R2 := 0x32
0005b97e: R0 := R19
0005b983: R30 := 0xB2D8
0005b985: call @strlcpy with return %0005b987

0005b987:
0005b98b: R1 := R20 + 0xFA
0005b991: R0 := R20 + 0x96
0005b998: R2 := mem[R1, el]:u64
0005b99d: R3 := mem[R1 + 8, el]:u64
0005b9a5: mem := mem with [R22, el]:u64 <- R2
0005b9ab: mem := mem with [R22 + 8, el]:u64 <- R3
0005b9b1: #1300 := R1 + 0x10
0005b9b6: R2 := mem[#1300, el]:u64
0005b9bb: R3 := mem[#1300 + 8, el]:u64
0005b9c1: #1301 := R22 + 0x10
0005b9c7: mem := mem with [#1301, el]:u64 <- R2
0005b9cd: mem := mem with [#1301 + 8, el]:u64 <- R3
0005b9d3: #1302 := R1 + 0x20
0005b9d8: R2 := mem[#1302, el]:u64
0005b9dd: R3 := mem[#1302 + 8, el]:u64
0005b9e3: #1303 := R22 + 0x20
0005b9e9: mem := mem with [#1303, el]:u64 <- R2
0005b9ef: mem := mem with [#1303 + 8, el]:u64 <- R3
0005b9f6: R1 := pad:64[mem[R20 + 0x12A, el]:u16]
0005b9fe: mem := mem with [R22 + 0x30, el]:u16 <- 15:0[R1]
0005ba04: #1304 := R20 + 0xC8
0005ba09: R2 := mem[#1304, el]:u64
0005ba0e: R3 := mem[#1304 + 8, el]:u64
0005ba14: #1305 := R19 + 0xC8
0005ba1a: mem := mem with [#1305, el]:u64 <- R2
0005ba20: mem := mem with [#1305 + 8, el]:u64 <- R3
0005ba26: #1306 := R20 + 0xD8
0005ba2b: R2 := mem[#1306, el]:u64
0005ba30: R3 := mem[#1306 + 8, el]:u64
0005ba36: #1307 := R23 + 0x10
0005ba3c: mem := mem with [#1307, el]:u64 <- R2
0005ba42: mem := mem with [#1307 + 8, el]:u64 <- R3
0005ba48: #1308 := R20 + 0xE8
0005ba4d: R2 := mem[#1308, el]:u64
0005ba52: R3 := mem[#1308 + 8, el]:u64
0005ba58: #1309 := R23 + 0x20
0005ba5e: mem := mem with [#1309, el]:u64 <- R2
0005ba64: mem := mem with [#1309 + 8, el]:u64 <- R3
0005ba6b: R1 := pad:64[mem[R20 + 0xF8, el]:u16]
0005ba73: mem := mem with [R23 + 0x30, el]:u16 <- 15:0[R1]
0005ba7a: R2 := mem[R0, el]:u64
0005ba7f: R3 := mem[R0 + 8, el]:u64
0005ba87: mem := mem with [R21, el]:u64 <- R2
0005ba8d: mem := mem with [R21 + 8, el]:u64 <- R3
0005ba93: #1310 := R0 + 0x10
0005ba98: R2 := mem[#1310, el]:u64
0005ba9d: R3 := mem[#1310 + 8, el]:u64
0005baa3: #1311 := R21 + 0x10
0005baa9: mem := mem with [#1311, el]:u64 <- R2
0005baaf: mem := mem with [#1311 + 8, el]:u64 <- R3
0005bab5: #1312 := R0 + 0x20
0005baba: R2 := mem[#1312, el]:u64
0005babf: R3 := mem[#1312 + 8, el]:u64
0005bac5: #1313 := R21 + 0x20
0005bacb: mem := mem with [#1313, el]:u64 <- R2
0005bad1: mem := mem with [#1313 + 8, el]:u64 <- R3
0005bad8: R0 := pad:64[mem[R20 + 0xC6, el]:u16]
0005bae0: mem := mem with [R21 + 0x30, el]:u16 <- 15:0[R0]
0005bae6: #1314 := R31 + 0x20
0005baeb: R21 := mem[#1314, el]:u64
0005baf0: R22 := mem[#1314 + 8, el]:u64
0006cb0d: goto %0005b77e

0005b77e:
0005b787: R0 := R19
0005b78d: #1285 := R31 + 0x10
0005b792: R19 := mem[#1285, el]:u64
0005b797: R20 := mem[#1285 + 8, el]:u64
0005b79d: #1286 := R31 + 0x30
0005b7a2: R23 := mem[#1286, el]:u64
0005b7a7: R24 := mem[#1286 + 8, el]:u64
0005b7ae: R29 := mem[R31, el]:u64
0005b7b3: R30 := mem[R31 + 8, el]:u64
0005b7b7: R31 := R31 + 0x40
0005b7bc: call R30 with noreturn

0006cb0e: sub dup_rr_data(dup_rr_data_result)
0006d0cc: dup_rr_data_result :: out u32 = low:32[R0]

0004a676:
0004a67a: when R0 = 0 goto %0004a678
0006cb0f: goto %0004a901

0004a678:
0004a680: call R30 with noreturn

0004a901:
0004a905: #303 := R31 - 0x20
0004a90b: mem := mem with [#303, el]:u64 <- R29
0004a911: mem := mem with [#303 + 8, el]:u64 <- R30
0004a915: R31 := #303
0004a91b: R29 := R31
0004a923: mem := mem with [R31 + 0x10, el]:u64 <- R19
0004a929: R19 := R0
0004a92e: R0 := 0x68
0004a933: R30 := 0x55DC
0004a935: call @malloc with return %0004a937

0004a937:
0004a93a: R2 := 0x11000
0004a940: R1 := R19
0004a945: V0 := 0
0004a94c: V1 := mem[R2 + 0x6F0, el]:u128
0004a953: R19 := mem[R31 + 0x10, el]:u64
0004a95a: mem := mem with [R0, el]:u32 <- 0
0004a961: mem := mem with [R0 + 8, el]:u64 <- 0
0004a968: mem := mem with [R0 + 0x20, el]:u32 <- 0
0004a970: mem := mem with [R0 + 0x10, el]:u128 <- V1
0004a978: mem := mem with [R0 + 0x28, el]:u128 <- V0
0004a980: mem := mem with [R0 + 0x38, el]:u128 <- V0
0004a988: mem := mem with [R0 + 0x48, el]:u128 <- V0
0004a990: mem := mem with [R0 + 0x58, el]:u128 <- V0
0004a997: R29 := mem[R31, el]:u64
0004a99c: R30 := mem[R31 + 8, el]:u64
0004a9a0: R31 := R31 + 0x20
0004a9a4: call @copy_rr_data with noreturn

0006cb10: sub exit(exit_code)
0006d0cd: exit_code :: in u32 = low:32[R0]

00056c61:
00064763: R16 := 0x27000
0006476a: R17 := mem[R16 + 0xC78, el]:u64
00064770: R16 := R16 + 0xC78
00064775: call R17 with noreturn

0006cb11: sub fclose(fclose_fp, fclose_result)
0006d0ce: fclose_fp :: in out u64 = R0
0006d0cf: fclose_result :: out u32 = low:32[R0]

0004d513:
000648ad: R16 := 0x27000
000648b4: R17 := mem[R16 + 0xCF0, el]:u64
000648ba: R16 := R16 + 0xCF0
000648bf: call R17 with noreturn

0006cb12: sub fcntl(fcntl_result)
0006d0d0: fcntl_result :: out u32 = low:32[R0]

0004d1b8:
00064cf9: R16 := 0x27000
00064d00: R17 := mem[R16 + 0xE80, el]:u64
00064d06: R16 := R16 + 0xE80
00064d0b: call R17 with noreturn

0006cb13: sub feof(feof_stream, feof_result)
0006d0d1: feof_stream :: in out u64 = R0
0006d0d2: feof_result :: out u32 = low:32[R0]

0004d4db:
00064bc5: R16 := 0x27000
00064bcc: R17 := mem[R16 + 0xE10, el]:u64
00064bd2: R16 := R16 + 0xE10
00064bd7: call R17 with noreturn

0006cb14: sub ferror(ferror_stream, ferror_result)
0006d0d3: ferror_stream :: in out u64 = R0
0006d0d4: ferror_result :: out u32 = low:32[R0]

00048aa4:
00064edd: R16 := 0x27000
00064ee4: R17 := mem[R16 + 0xF30, el]:u64
00064eea: R16 := R16 + 0xF30
00064eef: call R17 with noreturn

0006cb15: sub fgets(fgets_s, fgets_size, fgets_stream, fgets_result)
0006d0d5: fgets_s :: in out u64 = R0
0006d0d6: fgets_size :: in u32 = low:32[R1]
0006d0d7: fgets_stream :: in out u64 = R2
0006d0d8: fgets_result :: out u64 = R0

0004d55c:
00064ec7: R16 := 0x27000
00064ece: R17 := mem[R16 + 0xF28, el]:u64
00064ed4: R16 := R16 + 0xF28
00064ed9: call R17 with noreturn

0006cb16: sub fnmatch(fnmatch_result)
0006d0d9: fnmatch_result :: out u32 = low:32[R0]

000573c5:
00064ce3: R16 := 0x27000
00064cea: R17 := mem[R16 + 0xE78, el]:u64
00064cf0: R16 := R16 + 0xE78
00064cf5: call R17 with noreturn

0006cb17: sub fopen(fopen_path, fopen_mode, fopen_result)
0006d0da: fopen_path :: in u64 = R0
0006d0db: fopen_mode :: in u64 = R1
0006d0dc: fopen_result :: out u64 = R0

00049c2b:
000648ef: R16 := 0x27000
000648f6: R17 := mem[R16 + 0xD08, el]:u64
000648fc: R16 := R16 + 0xD08
00064901: call R17 with noreturn

0006cb18: sub fork(fork_result)
0006d0dd: fork_result :: out u32 = low:32[R0]

00063a25:
0006483f: R16 := 0x27000
00064846: R17 := mem[R16 + 0xCC8, el]:u64
0006484c: R16 := R16 + 0xCC8
00064851: call R17 with noreturn

0006cb19: sub forward_request(forward_request_result)
0006d0de: forward_request_result :: out u32 = low:32[R0]

0005589a:
0005589e: #974 := R31 - 0xE0
000558a4: mem := mem with [#974, el]:u64 <- R29
000558aa: mem := mem with [#974 + 8, el]:u64 <- R30
000558ae: R31 := #974
000558b3: R2 := 0x27000
000558b9: R29 := R31
000558c0: R2 := mem[R2 + 0xFB8, el]:u64
000558c6: #975 := R31 + 0x10
000558cc: mem := mem with [#975, el]:u64 <- R19
000558d2: mem := mem with [#975 + 8, el]:u64 <- R20
000558d8: R20 := R1
000558df: R1 := mem[R0 + 0x10, el]:u64
000558e7: mem := mem with [R31 + 0x90, el]:u64 <- R1
000558ee: R1 := mem[R2, el]:u64
000558f6: mem := mem with [R31 + 0xD8, el]:u64 <- R1
000558fb: R1 := 0
00055901: R2 := R31 + 0xBC
00055906: R1 := 0x14000
0005590c: R1 := R1 + 0xD00
00055914: mem := mem with [R31 + 0xA0, el]:u64 <- R1
0005591a: R1 := R31 + 0xC0
00055922: mem := mem with [R31 + 0x80, el]:u64 <- R1
00055928: R1 := R31 + 0xC8
0005592f: R0 := pad:64[mem[R0, el]:u32]
00055935: #976 := R31 + 0x30
0005593b: mem := mem with [#976, el]:u64 <- R23
00055941: mem := mem with [#976 + 8, el]:u64 <- R24
00055947: R23 := R31 + 0xB8
0005594d: #977 := R31 + 0x40
00055953: mem := mem with [#977, el]:u64 <- R25
00055959: mem := mem with [#977 + 8, el]:u64 <- R26
0005595e: R25 := 0
00055964: #978 := R31 + 0x50
0005596a: mem := mem with [#978, el]:u64 <- R27
00055970: mem := mem with [#978 + 8, el]:u64 <- R28
00055975: R27 := 0
0005597b: R26 := pad:64[31:0[R27]]
00055983: mem := mem with [R31 + 0x70, el]:u64 <- R1
00055989: R1 := R2
0005598f: #979 := R31 + 0x20
00055995: mem := mem with [#979, el]:u64 <- R21
0005599b: mem := mem with [#979 + 8, el]:u64 <- R22
000559a0: R21 := 0x27000
000559a8: mem := mem with [R31 + 0x78, el]:u64 <- R2
000559b0: mem := mem with [R31 + 0xBC, el]:u32 <- 31:0[R0]
000559b7: mem := mem with [R31 + 0xC0, el]:u64 <- 0
0006cb1a: goto %000559b9

000559b9:
000559be: R0 := mem[R21 + 0xF78, el]:u64
000559c5: mem := mem with [R31 + 0xB8, el]:u32 <- 0
000559cb: #980 := R31 + 0xC8
000559d1: mem := mem with [#980, el]:u64 <- R1
000559d7: mem := mem with [#980 + 8, el]:u64 <- R23
000559de: R0 := pad:64[mem[R0, el]:u32]
000559e4: when 31:0[R0] = 0 goto %000559e2
0006cb1b: goto %0005d8a4

0005d8a4:
0005d8a8: #1372 := 31:0[R26] + 0
0005d8ad: VF := extend:33[#1372] <> extend:33[31:0[R26]] + 0
0005d8b2: CF := pad:33[#1372] <> pad:33[31:0[R26]] - 0x100000000
0005d8b6: ZF := #1372 = 0
0005d8ba: NF := 31:31[#1372]
0005d8bf: R2 := 0x12000
0005d8c6: R0 := mem[R31 + 0xA0, el]:u64
0005d8cc: R2 := R2 + 0xCD0
0005d8d1: R1 := 0x12000
0005d8d7: R1 := R1 + 0xCE0
0005d8e5: when ZF <> 1 goto %0005d8dd
0005d8e6: goto %0005d8e1

0005d8e1:
0005d8e2: R2 := R0
0005d8e8: goto %0005d8e4

0005d8dd:
0005d8de: R2 := R2
0005d8e7: goto %0005d8e4

0005d8e4:
0005d8ed: R0 := 1
0005d8f2: R30 := 0xD5F4
0005d8f4: call @__printf_chk with return %0005d8f6

0005d8f6:
0005d8f9: R0 := 0x27000
0005d900: R19 := mem[R0 + 0xF60, el]:u64
0005d906: R0 := R19
0005d90b: R30 := 0xD604
0005d90d: call @pthread_mutex_lock with return %0005d90f

0005d90f:
0005d912: R0 := 0x27000
0005d919: R0 := mem[R0 + 0xFC0, el]:u64
0005d920: R0 := mem[R0, el]:u64
0005d925: R30 := 0xD614
0005d927: call @plist_dump with return %0005d929

0005d929:
0005d92d: R0 := R19
0005d932: R30 := 0xD61C
0005d934: call @pthread_mutex_unlock with return %000559e2

000559e2:
000559ea: R0 := 0x27000
000559f1: R19 := mem[R0 + 0xF60, el]:u64
000559f7: R0 := R19
000559fc: R30 := 0xD62C
000559fe: call @pthread_mutex_lock with return %00055a00

00055a00:
00055a03: R0 := 0x27000
00055a0a: R1 := mem[R31 + 0x80, el]:u64
00055a11: R0 := mem[R0 + 0xFC0, el]:u64
00055a16: R30 := 0xD63C
00055a18: call @plist_pop with return %00055a1a

00055a1a:
00055a1e: R22 := pad:64[31:0[R0]]
00055a24: R0 := R19
00055a2c: mem := mem with [R31 + 0x6C, el]:u32 <- 31:0[R22]
00055a31: R30 := 0xD64C
00055a33: call @pthread_mutex_unlock with return %00055a35

00055a35:
00055a39: when 31:0[R22] = 0 goto %00055a37
0006cb1c: goto %0005d872

00055a37:
00055a3f: R30 := 0xDC1C
00055a41: call @new_auth with return %00055a43

00055a43:
00055a49: mem := mem with [R31 + 0xC0, el]:u64 <- R0
00055a4e: R30 := 0xDC24
00055a50: call @proxy_connect with return %00055a52

00055a52:
00055a58: mem := mem with [R31 + 0xB8, el]:u32 <- 31:0[R0]
00055a5e: #981 := 31:0[R0] + 0
00055a63: VF := extend:33[#981] <> extend:33[31:0[R0]] + 0
00055a68: CF := pad:33[#981] <> pad:33[31:0[R0]] - 0x100000000
00055a6c: ZF := #981 = 0
00055a70: NF := 31:31[#981]
00055a78: when NF = VF & ~ZF goto %00055a76
0006cb1d: goto %0005d80d

0005d80d:
0005d812: R0 := mem[R20 + 0x48, el]:u64
0005d817: R1 := 0x12000
0005d81d: R1 := R1 + 0xD20
0005d822: R22 := 0
0005d827: R28 := 0
0005d82c: R23 := 0
0005d831: R30 := 0xDC4C
0005d833: call @gen_502_page with return %0005d835

0005d835:
0005d839: R19 := R0
0005d83e: R30 := 0xDC54
0005d840: call @strlen with return %0005d842

0005d842:
0005d846: R2 := R0
0005d84d: R0 := pad:64[mem[R31 + 0xBC, el]:u32]
0005d853: R1 := R19
0005d858: R24 := 0xFFFFFFFFFFFFFFFF
0005d85d: R30 := 0xDC68
0005d85f: call @write with return %0005d861

0005d861:
0005d865: R0 := R19
0005d86a: R30 := 0xDC70
0005d86c: call @free with return %0005d86e

0005d86e:
0005d870: goto %00055c81

0005d872:
0005d877: R0 := mem[R21 + 0xF78, el]:u64
0005d87e: R0 := pad:64[mem[R0, el]:u32]
0005d884: when 31:0[R0] <> 0 goto %0005d159
0006cb1e: goto %0005d888

0005d159:
0005d15e: R2 := pad:64[mem[R31 + 0x6C, el]:u32]
0005d163: R1 := 0x12000
0005d168: R0 := 1
0005d16e: R1 := R1 + 0xCF8
0005d173: R30 := 0xDB24
0005d175: call @__printf_chk with return %0005d177

0005d177:
0005d17c: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
0005d184: mem := mem with [R31 + 0xB8, el]:u32 <- 31:0[R0]
0005d189: R0 := 1
0005d191: mem := mem with [R31 + 0x6C, el]:u32 <- 31:0[R0]
0005d195: goto %00055a76

0005d888:
0005d88d: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
0005d895: mem := mem with [R31 + 0xB8, el]:u32 <- 31:0[R0]
0005d89a: R0 := 1
0005d8a2: mem := mem with [R31 + 0x6C, el]:u32 <- 31:0[R0]
0006cb1f: goto %00055a76

00055a76:
00055a7f: when R25 = 0 goto %00055a7d
0006cb20: goto %00055a8b

00055a7d:
00055a87: R25 := mem[R20 + 0x40, el]:u64
00055a8d: when R25 = 0 goto %00055a8b
0006cb21: goto %0005d7d3

0005d7d3:
0005d7d7: R0 := R25
0005d7dc: R30 := 0xDC84
0005d7de: call @strdup with return %0005d7e0

0005d7e0:
0005d7e4: R25 := R0
0005d7e9: R0 := 0x12000
0005d7ef: R0 := R0 + 0xD40
0005d7f7: mem := mem with [R31 + 0x98, el]:u64 <- R0
0005d7fe: R22 := pad:64[mem[R31 + 0x6C, el]:u32]
0005d803: R27 := 0
0005d809: when R20 <> 0 goto %0005d7cc
0006cb22: goto %00055ab1

00055a8b:
00055a93: R0 := 0x12000
00055a99: R0 := R0 + 0xD40
00055aa1: mem := mem with [R31 + 0x98, el]:u64 <- R0
00055aa6: R27 := 0
00055aad: R22 := pad:64[mem[R31 + 0x6C, el]:u32]
00055ab3: when R20 = 0 goto %00055ab1
0006cb23: goto %0005d7cc

0005d7cc:
0005d7cf: when 31:0[R26] = 0 goto %0005d7b5
0006cb24: goto %00055ac4

0005d7b5:
0005d7b9: R0 := R20
0005d7be: R30 := 0xDCB4
0005d7c0: call @dup_rr_data with return %0005d7c2

0005d7c2:
0005d7c6: R20 := R0
0005d7ca: goto %00055ac4

00055ac4:
00055aca: R30 := 0xD690
00055acc: call @new_rr_data with return %00055ace

00055ace:
00055ad2: R24 := R20
00055ad8: R19 := R0
00055add: R28 := 0x12000
00055ae2: R26 := 0
00055ae8: R0 := R28 + 0xD80
00055af0: mem := mem with [R31 + 0x88, el]:u64 <- R0
0006cb25: goto %00055af2

00055af2:
00055af7: R0 := mem[R21 + 0xF78, el]:u64
00055afe: R1 := pad:64[mem[R24 + 0x1C, el]:u32]
00055b05: R28 := pad:64[mem[R0, el]:u32]
00055b0b: when 31:0[R1] = 0 goto %00055b09
0006cb26: goto %0005d797

0005d797:
0005d79c: R1 := mem[R31 + 0x70, el]:u64
0005d7a3: R0 :=

0005d7ab: R7 := mem[R1 + (60:0[R0].0), el]:u64
0005d7b1: when 31:0[R28] <> 0 goto %0005cc30
0006cb27: goto %0005cc96

0005cc30:
0005cc34: #1361 := R31 + 0xB8
0005cc39: R4 := pad:64[mem[#1361, el]:u32]
0005cc3e: R3 := pad:64[mem[#1361 + 4, el]:u32]
0005cc44: R6 := pad:64[31:0[R27]]
0005cc4b: R1 := mem[R31 + 0x98, el]:u64
0005cc51: R5 := pad:64[31:0[R22]]
0005cc57: R2 := pad:64[31:0[R26] + 1]
0005cc5c: R0 := 1
0005cc64: mem := mem with [R31 + 0xA8, el]:u64 <- R7
0005cc69: R30 := 0xD914
0005cc6b: call @__printf_chk with return %0005cc6d

0005cc6d:
0005cc72: R7 := mem[R31 + 0xA8, el]:u64
0005cc77: R0 := 1
0005cc7e: R1 := mem[R31 + 0x88, el]:u64
0005cc85: R2 := pad:64[mem[R7, el]:u32]
0005cc8a: R30 := 0xD928
0005cc8c: call @__printf_chk with return %0005cc8e

0005cc8e:
0005cc93: R7 := mem[R31 + 0xA8, el]:u64
0005cc98: goto %0005cc96

0005cc96:
0005cc9e: R0 := pad:64[mem[R7, el]:u32]
0005cca4: R1 := R24
0005cca9: R30 := 0xD6D4
0005ccab: call @headers_recv with return %0005ccad

0005ccad:
0005ccb1: when 31:0[R0] = 0 goto %0005ccaf
0006cb28: goto %0005d686

0005ccaf:
0005ccb8: R28 := pad:64[31:0[R0]]
0005ccbd: goto %0005ccbb

0005d686:
0005d68b: R0 := mem[R21 + 0xF78, el]:u64
0005d692: R28 := pad:64[mem[R0, el]:u32]
0006cb29: goto %00055b09

00055b09:
00055b12: #982 := R25 + 0
00055b17: VF := extend:65[#982] <> extend:65[R25] + 0
00055b1c: CF := pad:65[#982] <> pad:65[R25] - 0x10000000000000000
00055b20: ZF := #982 = 0
00055b24: NF := 63:63[#982]
00055b2a: R0 := pad:64[31:0[R26] ^ 1]
00055b37: when ZF <> 1 goto %00055b30
00055b38: goto %00055b33

00055b33:
00055b34: R0 := 0
00055b3a: goto %00055b36

00055b30:
00055b31: R0 := pad:64[31:0[R0]]
00055b39: goto %00055b36

00055b36:
00055b40: when 31:0[R0] = 0 goto %00055b3e
0006cb2a: goto %0005d774

0005d774:
0005d779: R1 := mem[R20 + 0x40, el]:u64
0005d77e: when R1 = 0 goto %00055b3e
0006cb2b: goto %0005d782

0005d782:
0005d786: R0 := R25
0005d78b: R30 := 0xD700
0005d78d: call @strcasecmp with return %0005d78f

0005d78f:
0005d793: when 31:0[R0] <> 0 goto %0005d67e
0006cb2c: goto %00055b3e

0005d67e:
0005d682: when 31:0[R28] <> 0 goto %0005d5b5
0006cb2d: goto %0005d5d4

0005d5b5:
0005d5ba: R2 := mem[R20 + 0x30, el]:u64
0005d5bf: R1 := 0x12000
0005d5c4: R0 := 1
0005d5ca: R1 := R1 + 0xDA0
0005d5cf: R30 := 0xDF00
0005d5d1: call @__printf_chk with return %0005d5d3

0005d5d3:
0005d5d6: goto %0005d5d4

0005d5d4:
0005d5db: R0 := R20
0005d5e0: R30 := 0xDE48
0005d5e2: call @dup_rr_data with return %0005d5e4

0005d5e4:
0005d5e8: R24 := R0
0005d5ee: R0 := R20
0005d5f3: R30 := 0xDE54
0005d5f5: call @free_rr_data with return %0005d5f7

0005d5f7:
0005d5fb: R23 := pad:64[0.0:0[R22]]
0005d601: R28 := pad:64[31:0[R22]]
0005d607: R0 := R19
0005d60c: R30 := 0xDE64
0005d60e: call @free_rr_data with return %0005d610

0005d610:
0005d613: goto %0005d611

00055b3e:
00055b48: when 31:0[R28] <> 0 goto %00055b46
0006cb2e: goto %0005d76c

00055b46:
00055b50: R0 := mem[R24 + 8, el]:u64
00055b55: R30 := 0xD760
00055b57: call @hlist_dump with return %00055b59

00055b59:
00055b5d: when 31:0[R26] = 0 goto %00055b5b
0006cb2f: goto %0005d746

0005d76c:
0005d770: when 31:0[R26] <> 0 goto %0005d746
0006cb30: goto %00055b5b

0005d746:
0005d74b: R0 := pad:64[mem[R19 + 0x10, el]:u32]
0005d751: #1371 := 31:0[R0] - 0x197
0005d756: VF := extend:33[#1371] <> extend:33[31:0[R0]] - 0x197
0005d75b: CF := pad:33[#1371] <> pad:33[31:0[R0]] + 0xFFFFFE69
0005d75f: ZF := #1371 = 0
0005d763: NF := 31:31[#1371]
0005d768: when ZF goto %0005d52d
0006cb31: goto %0005d1fc

00055b5b:
00055b65: R0 := pad:64[mem[R20, el]:u32]
00055b6c: when 31:0[R0] <> 0 goto %00055b6a
0006cb32: goto %00055bbf

00055b6a:
00055b74: R0 := mem[R31 + 0x90, el]:u64
00055b7b: R0 := 0.31:0[R0 >> 0x20 | R0 << 0x20]
00055b80: R30 := 0xD93C
00055b82: call @inet_ntoa with return %00055b84

00055b84:
00055b88: #983 := R20 + 0x28
00055b8d: R4 := mem[#983, el]:u64
00055b92: R5 := mem[#983 + 8, el]:u64
00055b98: R3 := R0
00055b9d: R2 := 0x12000
00055ba2: R0 := 7
00055ba8: R2 := R2 + 0xDC0
00055bad: R1 := 1
00055bb2: R30 := 0xD958
00055bb4: call @__syslog_chk with return %00055bb6

00055bb6:
00055bbb: R0 := pad:64[mem[R20, el]:u32]
00055bc1: when 31:0[R0] = 0 goto %00055bbf
0006cb33: goto %0005d6ef

0005d6ef:
0005d6f4: R0 := mem[R24 + 8, el]:u64
0005d6f9: R26 := 0x12000
0005d700: R2 := mem[R31 + 0xC0, el]:u64
0005d706: R1 := R26 + 0xB58
0005d70b: R30 := 0xD974
0005d70d: call @http_parse_basic with return %0005d70f

0005d70f:
0005d713: #1370 := 31:0[R0] + 0
0005d718: VF := extend:33[#1370] <> extend:33[31:0[R0]] + 0
0005d71d: CF := pad:33[#1370] <> pad:33[31:0[R0]] - 0x100000000
0005d721: ZF := #1370 = 0
0005d725: NF := 31:31[#1370]
0005d72c: when ~(NF = VF & ~ZF) goto %0005d2e8
0006cb34: goto %0005d730

0005d2e8:
0005d2eb: R0 := 0x27000
0005d2f2: R0 := mem[R0 + 0xF90, el]:u64
0005d2f9: R0 := pad:64[mem[R0, el]:u32]
0005d2ff: when 31:0[R0] = 0 goto %0005d2fd
0006cb35: goto %0005d517

0005d517:
0005d51c: R0 := mem[R21 + 0xF78, el]:u64
0005d523: R0 := pad:64[mem[R0, el]:u32]
0005d529: when 31:0[R0] <> 0 goto %0005d0cf
0006cb36: goto %0005d0e7

0005d0cf:
0005d0d2: R1 := 0x12000
0005d0d7: R0 := 1
0005d0dd: R1 := R1 + 0xE00
0005d0e2: R30 := 0xDF44
0005d0e4: call @__printf_chk with return %0005d0e6

0005d0e6:
0005d0e9: goto %0005d0e7

0005d0e7:
0005d0ef: R0 := mem[R24 + 0x48, el]:u64
0005d0f4: R28 := 0
0005d0f9: R23 := 0
0005d0fe: R24 := 0xFFFFFFFFFFFFFFFF
0005d103: R30 := 0xDADC
0005d105: call @gen_407_page with return %0005d107

0005d107:
0005d10b: R26 := R0
0005d110: R30 := 0xDAE4
0005d112: call @strlen with return %0005d114

0005d114:
0005d118: R2 := R0
0005d11f: R0 := pad:64[mem[R31 + 0xBC, el]:u32]
0005d125: R1 := R26
0005d12a: R30 := 0xDAF4
0005d12c: call @write with return %0005d12e

0005d12e:
0005d132: R0 := R26
0005d137: R30 := 0xDAFC
0005d139: call @free with return %0005d13b

0005d13b:
0005d13f: R0 := R20
0005d144: R30 := 0xDB04
0005d146: call @free_rr_data with return %0005d148

0005d148:
0005d14c: R0 := R19
0005d151: R30 := 0xDB0C
0005d153: call @free_rr_data with return %0005d155

0005d155:
0005d157: goto %00055c81

0005d730:
0005d735: R0 := mem[R21 + 0xF78, el]:u64
0005d73c: R0 := pad:64[mem[R0, el]:u32]
0005d742: when 31:0[R0] <> 0 goto %0005d6ae
0006cb37: goto %0005d2fd

0005d6ae:
0005d6b3: R3 := mem[R31 + 0xC0, el]:u64
0005d6b8: R1 := 0x12000
0005d6bd: R0 := 1
0005d6c3: R1 := R1 + 0xDD0
0005d6c9: R4 := R3 + 0x64
0005d6cf: R2 := R3 + 0x32
0005d6d4: R30 := 0xDDA0
0005d6d6: call @__printf_chk with return %0005d6d8

0005d6d8:
0005d6da: goto %0005d2fd

0005d2fd:
0005d305: R1 := 0x27000
0005d30c: R0 := mem[R20 + 8, el]:u64
0005d313: R1 := mem[R1 + 0xF50, el]:u64
0005d31a: R28 := mem[R1, el]:u64
0005d320: when R28 = 0 goto %0005d31e
0006cb38: goto %0005d4e6

0005d4e6:
0006cb39: goto %0005d4e8

0005d4e8:
0005d4ed: R1 := mem[R28, el]:u64
0005d4f2: R2 := mem[R28 + 8, el]:u64
0005d4f7: R3 := 0
0005d4fc: R30 := 0xD9AC
0005d4fe: call @hlist_mod with return %0005d500

0005d500:
0005d505: R28 := mem[R28 + 0x18, el]:u64
0005d50d: mem := mem with [R20 + 8, el]:u64 <- R0
0005d513: when R28 <> 0 goto %0005d4e8
0006cb3a: goto %0005d31e

0005d31e:
0005d326: R2 := 0x12000
0005d32b: R1 := 0x12000
0005d331: R2 := R2 + 0xE30
0005d337: R1 := R1 + 0xE40
0005d33c: R3 := 1
0005d341: R30 := 0xD9D0
0005d343: call @hlist_mod with return %0005d345

0005d345:
0005d34b: mem := mem with [R20 + 8, el]:u64 <- R0
0005d351: R26 := R26 + 0xB58
0005d358: R0 := mem[R24 + 8, el]:u64
0005d35d: goto %0005d35b

0005d35b:
0005d362: R1 := R26
0005d367: R30 := 0xD9F8
0005d369: call @hlist_get with return %0005d36b

0005d36b:
0005d370: when R0 <> 0 goto %0005d36e
0006cb3b: goto %0005d38f

0005d38f:
0005d394: R0 := pad:64[mem[R20, el]:u32]
0005d399: when 31:0[R0] = 0 goto %00055bbf
0006cb3c: goto %0005d39d

0005d39d:
0005d3a2: R0 := pad:64[31:0[R22] | 31:0[R27]]
0005d3a8: when 31:0[R0] <> 0 goto %00055bbf
0006cb3d: goto %0005d3ac

0005d3ac:
0005d3b1: R3 := mem[R31 + 0xC0, el]:u64
0005d3b7: R2 := R19
0005d3bd: R1 := R20
0005d3c3: R0 := R23
0005d3c8: R30 := 0xDA20
0005d3ca: call @proxy_authenticate with return %0005d3cc

0005d3cc:
0005d3d0: when 31:0[R0] = 0 goto %0005d3ce
0006cb3e: goto %0005d463

0005d3ce:
0005d3d7: R28 := pad:64[31:0[R0]]
0005d3de: R0 := mem[R21 + 0xF78, el]:u64
0005d3e5: R0 := pad:64[mem[R0, el]:u32]
0005d3ec: when 31:0[R0] <> 0 goto %0005d3ea
0006cb3f: goto %0005d407

0005d3ea:
0005d3f2: R1 := 0x12000
0005d3f7: R0 := 1
0005d3fd: R1 := R1 + 0xE58
0005d402: R30 := 0xDCCC
0005d404: call @__printf_chk with return %0005d406

0005d406:
0005d409: goto %0005d407

0005d407:
0005d40e: R0 := R20
0005d413: R30 := 0xDB68
0005d415: call @free_rr_data with return %0005d417

0005d417:
0005d41b: R0 := R19
0005d420: R22 := 0
0005d425: R23 := 0
0005d42a: R24 := 0xFFFFFFFFFFFFFFFF
0005d42f: R30 := 0xDB7C
0005d431: call @free_rr_data with return %0005d433

0005d433:
0005d435: goto %00055c81

0005d463:
0005d468: R0 := pad:64[mem[R19 + 0x10, el]:u32]
0005d46e: #1369 := 31:0[R0] - 0x197
0005d473: VF := extend:33[#1369] <> extend:33[31:0[R0]] - 0x197
0005d478: CF := pad:33[#1369] <> pad:33[31:0[R0]] + 0xFFFFFE69
0005d47c: ZF := #1369 = 0
0005d480: NF := 31:31[#1369]
0005d486: when ZF goto %0005d484
0006cb40: goto %0005d4d0

0005d484:
0005d48d: R0 := R19
0005d492: R30 := 0xDBD0
0005d494: call @reset_rr_data with return %0005d496

0005d496:
0005d49b: R1 := mem[R21 + 0xF78, el]:u64
0005d4a0: R22 := 0
0005d4a7: R0 := pad:64[mem[R23, el]:u32]
0005d4ac: R27 := 0
0005d4b3: R1 := pad:64[mem[R1, el]:u32]
0005d4b9: when 31:0[R1] = 0 goto %0005d4b7
0006cb41: goto %00055bdc

0005d4d0:
0005d4d5: R1 := mem[R21 + 0xF78, el]:u64
0005d4dc: R1 := pad:64[mem[R1, el]:u32]
0005d4e2: when 31:0[R1] <> 0 goto %0005d197
0006cb42: goto %0005d1b6

0005d197:
0005d19a: R1 := 0x12000
0005d19f: R0 := 1
0005d1a5: R1 := R1 + 0xE78
0005d1aa: R30 := 0xDB48
0005d1ac: call @__printf_chk with return %0005d1ae

0005d1ae:
0005d1b3: R0 := pad:64[mem[R19 + 0x10, el]:u32]
0005d1b8: goto %0005d1b6

0005d1b6:
0005d1bd: #1366 := 31:0[R0] - 0x18F
0005d1c2: VF := extend:33[#1366] <> extend:33[31:0[R0]] - 0x18F
0005d1c7: CF := pad:33[#1366] <> pad:33[31:0[R0]] + 0xFFFFFE71
0005d1cb: ZF := #1366 = 0
0005d1cf: NF := 31:31[#1366]
0005d1dd: when NF = VF & ~ZF goto %0005d1d6
0005d1de: goto %0005d1d9

0005d1d9:
0005d1da: R27 := 1
0005d1e0: goto %0005d1dc

0005d1d6:
0005d1d7: R27 := 0
0005d1df: goto %0005d1dc

0005d1dc:
0005d1e6: #1367 := 31:0[R0] - 0x197
0005d1eb: VF := extend:33[#1367] <> extend:33[31:0[R0]] - 0x197
0005d1f0: CF := pad:33[#1367] <> pad:33[31:0[R0]] + 0xFFFFFE69
0005d1f4: ZF := #1367 = 0
0005d1f8: NF := 31:31[#1367]
0005d1fe: when ZF <> 1 goto %0005d1fc
0006cb43: goto %0005d52d

0005d52d:
0005d532: R0 := pad:64[mem[R31 + 0x6C, el]:u32]
0005d539: R26 := pad:64[31:0[R0] | 31:0[R27]]
0005d540: when 31:0[R26] <> 0 goto %0005d53e
0006cb44: goto %0005d628

0005d53e:
0005d548: R0 := mem[R21 + 0xF78, el]:u64
0005d54f: R0 := pad:64[mem[R0, el]:u32]
0005d556: when 31:0[R0] <> 0 goto %0005d554
0006cb45: goto %0005d57e

0005d554:
0005d55e: R2 := pad:64[mem[R31 + 0x6C, el]:u32]
0005d564: R3 := pad:64[31:0[R27]]
0005d569: R1 := 0x12000
0005d56e: R0 := 1
0005d574: R1 := R1 + 0xEA8
0005d579: R30 := 0xDF1C
0005d57b: call @__printf_chk with return %0005d57d

0005d57d:
0005d580: goto %0005d57e

0005d57e:
0005d586: R0 := mem[R31 + 0xC0, el]:u64
0005d58c: when R0 = 0 goto %0005d58a
0006cb46: goto %0005d621

0005d621:
0005d624: R30 := 0xDED4
0005d626: call @free with return %0005d58a

0005d58a:
0005d593: R0 := R19
0005d598: R30 := 0xDEDC
0005d59a: call @free_rr_data with return %0005d59c

0005d59c:
0005d5a1: R0 := pad:64[mem[R31 + 0xB8, el]:u32]
0005d5a6: R30 := 0xDEE4
0005d5a8: call @close with return %0005d5aa

0005d5aa:
0005d5af: R1 := mem[R31 + 0x78, el]:u64
0005d5b3: goto %000559b9

0005d628:
0005d62b: R0 := 0x27000
0005d630: R1 := 1
0005d638: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R1]
0005d63d: R27 := 0
0005d644: R0 := mem[R0 + 0xFF0, el]:u64
0005d649: R26 := 0x7FFF
0005d650: R0 := pad:64[mem[R0, el]:u32]
0005d655: when 31:0[R0] = 0 goto %0005d2a5
0006cb47: goto %0005d251

0005d1fc:
0005d204: R0 := 0x27000
0005d209: R1 := 1
0005d211: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R1]
0005d217: #1368 := 31:0[R27] - 1
0005d21c: VF := extend:33[#1368] <> extend:33[31:0[R27]] - 1
0005d221: CF := pad:33[#1368] <> pad:33[31:0[R27]] + 0xFFFFFFFF
0005d225: ZF := #1368 = 0
0005d229: NF := 31:31[#1368]
0005d230: R0 := mem[R0 + 0xFF0, el]:u64
0005d23d: when ZF goto %0005d236
0005d23e: goto %0005d239

0005d239:
0005d23a: R22 := 1
0005d240: goto %0005d23c

0005d236:
0005d237: R22 := pad:64[31:0[R22]]
0005d23f: goto %0005d23c

0005d23c:
0005d245: R26 := 0x7FFF
0005d24c: R0 := pad:64[mem[R0, el]:u32]
0005d253: when 31:0[R0] <> 0 goto %0005d251
0006cb48: goto %0005d2a5

0005d251:
0005d259: R5 := 0x27000
0005d260: R3 := pad:64[mem[R31 + 0xBC, el]:u32]
0005d267: R2 := mem[R31 + 0xC0, el]:u64
0005d26d: R4 := R23
0005d274: R5 := mem[R5 + 0xF98, el]:u64
0005d27a: R1 := R19
0005d280: R0 := R20
0005d287: R5 := mem[R5, el]:u64
0005d28c: R30 := 0xDA9C
0005d28e: call @scanner_hook with return %0005d290

0005d290:
0005d294: R26 := pad:64[31:0[R0]]
0005d29a: R0 := pad:64[0.0:0[R0]]
0005d2a2: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
0005d2a7: goto %0005d2a5

0005d2a5:
0005d2ad: R0 := mem[R19 + 8, el]:u64
0005d2b2: R1 := 0x12000
0005d2b8: R24 := R1 + 0x958
0005d2bd: R2 := 0x12000
0005d2c3: R1 := R24
0005d2c9: R2 := R2 + 0xE30
0005d2ce: R30 := 0xD7B0
0005d2d0: call @hlist_subcmp with return %0005d2d2

0005d2d2:
0005d2d8: mem := mem with [R31 + 0xA8, el]:u32 <- 31:0[R0]
0005d2dd: when 31:0[R0] = 0 goto %0005cd6d
0006cb49: goto %0005d2e1

0005cd6d:
0005cd72: R0 := mem[R19 + 8, el]:u64
0005cd78: R1 := R24
0005cd7d: R2 := 0x12000
0005cd82: R3 := 1
0005cd88: R2 := R2 + 0x950
0005cd8d: R30 := 0xDD3C
0005cd8f: call @hlist_mod with return %0005cd91

0005cd91:
0005cd97: mem := mem with [R19 + 8, el]:u64 <- R0
0005cd9c: goto %0005cd9a

0005d2e1:
0005d2e6: R0 := mem[R19 + 8, el]:u64
0006cb4a: goto %0005cd9a

0005cd9a:
0005cda0: R1 := 0x12000
0005cda6: R28 := R1 + 0xBC0
0005cdab: goto %0005cda9

0005cda9:
0005cdb0: R1 := R28
0005cdb5: R30 := 0xD7E0
0005cdb7: call @hlist_get with return %0005cdb9

0005cdb9:
0005cdbe: when R0 <> 0 goto %0005cdbc
0006cb4b: goto %0005cddd

0005cddd:
0005cde1: R24 := R0
0005cde8: R0 := pad:64[mem[R19 + 0x10, el]:u32]
0005cdee: #1363 := 31:0[R0] - 0x197
0005cdf3: VF := extend:33[#1363] <> extend:33[31:0[R0]] - 0x197
0005cdf8: CF := pad:33[#1363] <> pad:33[31:0[R0]] + 0xFFFFFE69
0005cdfc: ZF := #1363 = 0
0005ce00: NF := 31:31[#1363]
0005ce06: when ZF goto %0005ce04
0006cb4c: goto %0005ce36

0005ce04:
0005ce0e: R0 := mem[R19 + 8, el]:u64
0005ce14: R1 := R28
0005ce19: R2 := 0x12000
0005ce1e: R3 := 1
0005ce24: R2 := R2 + 0xEE0
0005ce29: R30 := 0xDE34
0005ce2b: call @hlist_mod with return %0005ce2d

0005ce2d:
0005ce33: mem := mem with [R19 + 8, el]:u64 <- R0
0005ce38: goto %0005ce36

0005ce36:
0005ce3e: R0 := pad:64[mem[R31 + 0x88, el]:u32]
0005ce45: when 31:0[R0] <> 0 goto %0005ce43
0006cb4d: goto %0005cea1

0005ce43:
0005ce4d: R0 := mem[R21 + 0xF78, el]:u64
0005ce54: R1 := mem[R31 + 0x78, el]:u64
0005ce5b: R0 := pad:64[mem[R0, el]:u32]
0005ce62: R2 := pad:64[mem[R1, el]:u32]
0005ce69: when 31:0[R0] <> 0 goto %0005ce67
0006cb4e: goto %0005d65f

0005ce67:
0005ce6f: R1 := 0x12000
0005ce74: R0 := 1
0005ce7a: R1 := R1 + 0xFD8
0005ce7f: R30 := 0xDF80
0005ce81: call @__printf_chk with return %0005ce83

0005ce83:
0005ce88: R0 := mem[R31 + 0x78, el]:u64
0005ce8e: R1 := R19
0005ce95: R0 := pad:64[mem[R0, el]:u32]
0005ce9a: R30 := 0xDF90
0005ce9c: call @headers_send with return %0005ce9e

0005ce9e:
0005cea3: when 31:0[R0] <> 0 goto %0005cea1
0006cb4f: goto %0005d65b

0005d65b:
0005d65d: goto %00055c52

0005d65f:
0005d663: R0 := pad:64[31:0[R2]]
0005d669: R1 := R19
0005d66e: R30 := 0xDF68
0005d670: call @headers_send with return %0005d672

0005d672:
0005d676: when 31:0[R0] <> 0 goto %0005cea1
0006cb50: goto %0005d67a

0005d67a:
0005d67c: goto %00055c52

0005cea1:
0005ceaa: when R20 = 0 goto %0005cea8
0006cb51: goto %0005cffe

0005cffe:
0005d003: R0 := pad:64[mem[R20, el]:u32]
0005d008: when 31:0[R0] = 0 goto %0005cea8
0006cb52: goto %0005d00c

0005d00c:
0005d011: R1 := mem[R20 + 0x28, el]:u64
0005d016: R0 := 0x12000
0005d01c: R0 := R0 + 0xF00
0005d021: R30 := 0xD818
0005d023: call @strcasecmp with return %0005d025

0005d025:
0005d029: R1 := pad:64[31:0[R0]]
0005d02f: when 31:0[R0] <> 0 goto %0005cea8
0006cb53: goto %0005d033

0005d033:
0005d038: R0 := pad:64[mem[R19 + 0x10, el]:u32]
0005d03e: #1364 := 31:0[R0] - 0xC8
0005d043: VF := extend:33[#1364] <> extend:33[31:0[R0]] - 0xC8
0005d048: CF := pad:33[#1364] <> pad:33[31:0[R0]] + 0xFFFFFF38
0005d04c: ZF := #1364 = 0
0005d050: NF := 31:31[#1364]
0005d056: when ZF goto %0005d054
0006cb54: goto %0005d659

0005d054:
0005d05e: R0 := mem[R21 + 0xF78, el]:u64
0005d064: R28 := pad:64[31:0[R1]]
0005d06b: R0 := pad:64[mem[R0, el]:u32]
0005d072: when 31:0[R0] <> 0 goto %0005d070
0006cb55: goto %0005d08d

0005d070:
0005d078: R1 := 0x12000
0005d07d: R0 := 1
0005d083: R1 := R1 + 0xF08
0005d088: R30 := 0xDF30
0005d08a: call @__printf_chk with return %0005d08c

0005d08c:
0005d08f: goto %0005d08d

0005d08d:
0005d094: #1365 := R31 + 0xB8
0005d099: R1 := pad:64[mem[#1365, el]:u32]
0005d09e: R0 := pad:64[mem[#1365 + 4, el]:u32]
0005d0a3: R23 := 0
0005d0a8: R24 := 0xFFFFFFFFFFFFFFFF
0005d0ad: R30 := 0xDE88
0005d0af: call @tunnel with return %0005d0b1

0005d0b1:
0005d0b5: R0 := R20
0005d0ba: R30 := 0xDE90
0005d0bc: call @free_rr_data with return %0005d0be

0005d0be:
0005d0c2: R0 := R19
0005d0c7: R30 := 0xDE98
0005d0c9: call @free_rr_data with return %0005d0cb

0005d0cb:
0005d0cd: goto %00055c81

0005d659:
0006cb56: goto %0005cea8

0005cea8:
0005ceb1: when 1:1[R26] goto %0005ceaf
0006cb57: goto %0005cee6

0005ceaf:
0005ceb9: R0 := mem[R31 + 0x78, el]:u64
0005cebf: R3 := R19
0005cec6: R1 := mem[R31 + 0xD0, el]:u64
0005cecc: R2 := R20
0005ced3: R0 := pad:64[mem[R0, el]:u32]
0005ceda: R1 := pad:64[mem[R1, el]:u32]
0005cedf: R30 := 0xDD60
0005cee1: call @http_body_send with return %0005cee3

0005cee3:
0005cee8: when 31:0[R0] <> 0 goto %0005cee6
0006cb58: goto %00055c52

0005cee6:
0005cef0: R0 := mem[R19 + 8, el]:u64
0005cef5: R1 := 0x12000
0005cefb: R2 := R1 + 0xE30
0005cf00: R1 := 0x12000
0005cf06: R1 := R1 + 0xE40
0005cf0b: R30 := 0xD84C
0005cf0d: call @hlist_subcmp with return %0005cf0f

0005cf0f:
0005cf13: R1 := pad:64[31:0[R0]]
0005cf1a: when 31:0[R0] <> 0 goto %0005cf18
0006cb59: goto %0005cfc7

0005cf18:
0005cf21: R0 := R20
0005cf29: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R1]
0005cf2e: R30 := 0xDDC4
0005cf30: call @free_rr_data with return %0005cf32

0005cf32:
0005cf36: R0 := R19
0005cf3b: R30 := 0xDDCC
0005cf3d: call @free_rr_data with return %0005cf3f

0005cf3f:
0005cf44: R0 := pad:64[mem[R31 + 0xA8, el]:u32]
0005cf4b: R1 := pad:64[mem[R31 + 0x88, el]:u32]
0005cf51: when 31:0[R0] = 0 goto %0005cf4f
0006cb5a: goto %0005cf64

0005cf64:
0005cf69: R0 := pad:64[mem[R31 + 0xB8, el]:u32]
0005cf71: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R1]
0005cf76: R30 := 0xDDE4
0005cf78: call @so_closed with return %0005cf7a

0005cf7a:
0005cf7f: R1 := pad:64[mem[R31 + 0x88, el]:u32]
0005cf85: when 31:0[R0] <> 0 goto %0005cf4f
0006cb5b: goto %0005cf89

0005cf89:
0005cf8e: R0 := pad:64[mem[R31 + 0xBC, el]:u32]
0005cf96: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R1]
0005cf9b: R30 := 0xDDF8
0005cf9d: call @so_closed with return %0005cf9f

0005cf9f:
0005cfa2: R2 := 0x27000
0005cfa9: R1 := pad:64[mem[R31 + 0x88, el]:u32]
0005cfb0: R2 := mem[R2 + 0xFD0, el]:u64
0005cfb7: R2 := pad:64[mem[R2, el]:u32]
0005cfbe: R26 := pad:64[31:0[R0] | 31:0[R2]]
0005cfc3: when 31:0[R26] = 0 goto %00055ab1
0006cb5c: goto %0005cf4f

0005cf4f:
0005cf58: R28 := pad:64[31:0[R1]]
0005cf5e: R23 := pad:64[0.0:0[R22]]
0005cf62: goto %00055c81

00055ab1:
00055ab9: R30 := 0xDCA4
00055abb: call @new_rr_data with return %00055abd

00055abd:
00055ac1: R20 := R0
00055ac6: goto %00055ac4

0005cfc7:
0005cfcc: R0 := mem[R21 + 0xF78, el]:u64
0005cfd2: R28 := pad:64[31:0[R1]]
0005cfd9: R0 := pad:64[mem[R0, el]:u32]
0005cfe0: when 31:0[R0] <> 0 goto %0005cfde
0006cb5d: goto %0005ccbb

0005cfde:
0005cfe6: R1 := 0x12000
0005cfeb: R0 := 1
0005cff1: R1 := R1 + 0xF30
0005cff6: R30 := 0xDDB4
0005cff8: call @__printf_chk with return %0005cffa

0005cffa:
0005cffc: goto %0005ccbb

0005ccbb:
0005ccc2: R0 := R20
0005ccc7: R30 := 0xD86C
0005ccc9: call @free_rr_data with return %0005cccb

0005cccb:
0005cccf: R0 := R19
0005ccd4: R23 := 0
0005ccd9: R24 := 0xFFFFFFFFFFFFFFFF
0005ccde: R30 := 0xD87C
0005cce0: call @free_rr_data with return %00055c81

0005cdbc:
0005cdc6: R0 := mem[R19 + 8, el]:u64
0005cdcc: R1 := R28
0005cdd1: R30 := 0xD7D4
0005cdd3: call @hlist_del with return %0005cdd5

0005cdd5:
0005cddb: mem := mem with [R19 + 8, el]:u64 <- R0
0006cb5e: goto %0005cda9

0005d36e:
0005d378: R0 := mem[R24 + 8, el]:u64
0005d37e: R1 := R26
0005d383: R30 := 0xD9EC
0005d385: call @hlist_del with return %0005d387

0005d387:
0005d38d: mem := mem with [R24 + 8, el]:u64 <- R0
0006cb5f: goto %0005d35b

00055bbf:
00055bc9: R1 := mem[R21 + 0xF78, el]:u64
00055bd0: R0 := pad:64[mem[R23, el]:u32]
00055bd7: R1 := pad:64[mem[R1, el]:u32]
00055bde: when 31:0[R1] <> 0 goto %00055bdc
0006cb60: goto %0005d4b7

00055bdc:
00055be5: R2 := pad:64[31:0[R0]]
00055bea: R1 := 0x12000
00055bef: R0 := 1
00055bf5: R1 := R1 + 0xFD8
00055bfa: R30 := 0xDBFC
00055bfc: call @__printf_chk with return %00055bfe

00055bfe:
00055c03: R0 := mem[R20 + 8, el]:u64
00055c08: R30 := 0xDC04
00055c0a: call @hlist_dump with return %00055c0c

00055c0c:
00055c11: R0 := pad:64[mem[R23, el]:u32]
00055c17: R1 := R20
00055c1c: R30 := 0xDC10
00055c1e: call @headers_send with return %00055c20

00055c20:
00055c25: when 31:0[R0] <> 0 goto %00055c23
0006cb61: goto %0005d6eb

0005d6eb:
0005d6ed: goto %00055c52

0005d4b7:
0005d4c0: R1 := R20
0005d4c5: R30 := 0xD72C
0005d4c7: call @headers_send with return %0005d4c9

0005d4c9:
0005d4cc: when 31:0[R0] = 0 goto %00055c52
0006cb62: goto %00055c23

00055c23:
00055c2d: R1 := mem[R31 + 0xC8, el]:u64
00055c33: R3 := R19
00055c3a: R0 := pad:64[mem[R23, el]:u32]
00055c40: R2 := R20
00055c47: R1 := pad:64[mem[R1, el]:u32]
00055c4c: R30 := 0xD748
00055c4e: call @http_body_send with return %00055c50

00055c50:
00055c54: when 31:0[R0] = 0 goto %00055c52
0006cb63: goto %0005d6dc

00055c52:
00055c5b: R0 := R20
00055c60: R30 := 0xDD6C
00055c62: call @free_rr_data with return %00055c64

00055c64:
00055c68: R0 := R19
00055c6d: R23 := 0
00055c72: R28 := 0
00055c77: R24 := 0xFFFFFFFFFFFFFFFF
00055c7c: R30 := 0xDD80
00055c7e: call @free_rr_data with return %00055c80

00055c80:
00055c83: goto %00055c81

00055c81:
00055c88: when R25 = 0 goto %00055c86
0006cb64: goto %0005d611

0005d611:
0005d618: R0 := R25
0005d61d: R30 := 0xD888
0005d61f: call @free with return %00055c86

00055c86:
00055c90: R0 := mem[R21 + 0xF78, el]:u64
00055c97: R0 := pad:64[mem[R0, el]:u32]
00055c9e: when 31:0[R0] <> 0 goto %00055c9c
0006cb65: goto %00055d09

00055c9c:
00055ca4: R1 := 0x27000
00055cab: R0 := pad:64[mem[R31 + 0xB8, el]:u32]
00055cb2: R1 := mem[R1 + 0xF90, el]:u64
00055cb9: R19 := pad:64[mem[R1, el]:u32]
00055cbe: R30 := 0xDB94
00055cc0: call @so_closed with return %00055cc2

00055cc2:
00055cc6: R3 := pad:64[31:0[R22]]
00055ccc: R5 := pad:64[31:0[R0]]
00055cd2: R4 := pad:64[31:0[R19]]
00055cd8: R2 := pad:64[31:0[R28]]
00055cdd: R1 := 0x12000
00055ce2: R0 := 1
00055ce8: R1 := R1 + 0xF50
00055ced: R30 := 0xDBB4
00055cef: call @__printf_chk with return %00055cf1

00055cf1:
00055cf4: R1 := 0x12000
00055cf9: R0 := 1
00055cff: R1 := R1 + 0xF90
00055d04: R30 := 0xDBC4
00055d06: call @__printf_chk with return %00055d08

00055d08:
00055d0b: goto %00055d09

00055d09:
00055d10: when 31:0[R23] = 0 goto %00055d0e
0006cb66: goto %0005d694

0005d694:
0005d697: R0 := 0x27000
0005d69e: R0 := mem[R0 + 0xF90, el]:u64
0005d6a5: R0 := pad:64[mem[R0, el]:u32]
0005d6aa: when 31:0[R0] = 0 goto %0005d437
0006cb67: goto %00055d0e

0005d437:
0005d43c: R0 := pad:64[mem[R31 + 0xB8, el]:u32]
0005d441: R30 := 0xDCD8
0005d443: call @so_closed with return %0005d445

0005d445:
0005d449: when 31:0[R0] <> 0 goto %00055d0e
0006cb68: goto %0005d44d

0005d44d:
0005d452: R21 := mem[R21 + 0xF78, el]:u64
0005d459: R0 := pad:64[mem[R21, el]:u32]
0005d45f: when 31:0[R0] <> 0 goto %0005cce2
0006cb69: goto %0005cd0a

0005cce2:
0005cce6: #1362 := R31 + 0xB8
0005cceb: R3 := pad:64[mem[#1362, el]:u32]
0005ccf0: R2 := pad:64[mem[#1362 + 4, el]:u32]
0005ccf5: R1 := 0x12000
0005ccfa: R0 := 1
0005cd00: R1 := R1 + 0xFA8
0005cd05: R30 := 0xDEB8
0005cd07: call @__printf_chk with return %0005cd09

0005cd09:
0005cd0c: goto %0005cd0a

0005cd0a:
0005cd10: R0 := 0x27000
0005cd17: R20 := mem[R0 + 0xF60, el]:u64
0005cd1d: R0 := R20
0005cd22: R30 := 0xDCF8
0005cd24: call @pthread_mutex_lock with return %0005cd26

0005cd26:
0005cd29: R0 := 0x27000
0005cd30: R1 := extend:64[mem[R31 + 0xB8, el]:u32]
0005cd37: R2 := mem[R31 + 0xC0, el]:u64
0005cd3e: R19 := mem[R0 + 0xFC0, el]:u64
0005cd45: R0 := mem[R19, el]:u64
0005cd4a: R30 := 0xDD10
0005cd4c: call @plist_add with return %0005cd4e

0005cd4e:
0005cd52: R1 := R0
0005cd58: R0 := R20
0005cd60: mem := mem with [R19, el]:u64 <- R1
0005cd65: R30 := 0xDD20
0005cd67: call @pthread_mutex_unlock with return %0005cd69

0005cd69:
0005cd6b: goto %00055d2f

00055d0e:
00055d18: R0 := mem[R31 + 0xC0, el]:u64
00055d1d: R30 := 0xD8B0
00055d1f: call @free with return %00055d21

00055d21:
00055d26: R0 := pad:64[mem[R31 + 0xB8, el]:u32]
00055d2b: R30 := 0xD8B8
00055d2d: call @close with return %00055d2f

00055d2f:
00055d32: R0 := 0x27000
00055d39: R0 := mem[R0 + 0xFB8, el]:u64
00055d40: R1 := mem[R31 + 0xD8, el]:u64
00055d47: R2 := mem[R0, el]:u64
00055d4d: #984 := ~R2
00055d52: #985 := R1 + ~R2 + 1
00055d58: VF := extend:65[#985] <> extend:65[R1] + extend:65[#984] + 1
00055d5e: CF := pad:65[#985] <> pad:65[R1] + pad:65[#984] + 1
00055d62: ZF := #985 = 0
00055d66: NF := 63:63[#985]
00055d6a: R1 := #985
00055d6f: R2 := 0
00055d75: when ZF <> 1 goto %00055d73
0006cb6a: goto %0005cbc5

00055d73:
00055d7b: R30 := 0xDF9C
00055d7d: call @__stack_chk_fail with return %00055d7f

00055d7f:
0006cb6b: call @prepare_http_connect with noreturn

0005cbc5:
0005cbc9: R0 := R24
0005cbcf: #1356 := R31 + 0x10
0005cbd4: R19 := mem[#1356, el]:u64
0005cbd9: R20 := mem[#1356 + 8, el]:u64
0005cbdf: #1357 := R31 + 0x20
0005cbe4: R21 := mem[#1357, el]:u64
0005cbe9: R22 := mem[#1357 + 8, el]:u64
0005cbef: #1358 := R31 + 0x30
0005cbf4: R23 := mem[#1358, el]:u64
0005cbf9: R24 := mem[#1358 + 8, el]:u64
0005cbff: #1359 := R31 + 0x40
0005cc04: R25 := mem[#1359, el]:u64
0005cc09: R26 := mem[#1359 + 8, el]:u64
0005cc0f: #1360 := R31 + 0x50
0005cc14: R27 := mem[#1360, el]:u64
0005cc19: R28 := mem[#1360 + 8, el]:u64
0005cc20: R29 := mem[R31, el]:u64
0005cc25: R30 := mem[R31 + 8, el]:u64
0005cc29: R31 := R31 + 0xE0
0005cc2e: call R30 with noreturn

0005d6dc:
0005d6e0: R24 := R19
0005d6e5: R26 := 1
0005d6e9: goto %00055af2

0006cb6c: sub forward_tunnel(forward_tunnel_result)
0006d0df: forward_tunnel_result :: out u32 = low:32[R0]

00056070:
00056074: #995 := R31 - 0x50
0005607a: mem := mem with [#995, el]:u64 <- R29
00056080: mem := mem with [#995 + 8, el]:u64 <- R30
00056084: R31 := #995
0005608a: R29 := R31
00056090: #996 := R31 + 0x10
00056096: mem := mem with [#996, el]:u64 <- R19
0005609c: mem := mem with [#996 + 8, el]:u64 <- R20
000560a1: R20 := 0x27000
000560a8: R1 := mem[R20 + 0xFB8, el]:u64
000560ae: #997 := R31 + 0x20
000560b4: mem := mem with [#997, el]:u64 <- R21
000560ba: mem := mem with [#997 + 8, el]:u64 <- R22
000560c1: R22 := pad:64[mem[R0, el]:u32]
000560c8: R2 := mem[R1, el]:u64
000560d0: mem := mem with [R31 + 0x48, el]:u64 <- R2
000560d5: R2 := 0
000560db: #998 := R31 + 0x30
000560e1: mem := mem with [#998, el]:u64 <- R23
000560e7: mem := mem with [#998 + 8, el]:u64 <- R24
000560ed: #999 := R0 + 8
000560f2: R23 := mem[#999, el]:u64
000560f7: R24 := mem[#999 + 8, el]:u64
000560fc: R30 := 0xE294
000560fe: call @new_auth with return %00056100

00056100:
00056104: R21 := R0
00056109: R30 := 0xE29C
0005610b: call @proxy_connect with return %0005610d

0005610d:
00056111: R19 := pad:64[31:0[R0]]
00056117: #1000 := 31:0[R0] + 0
0005611c: VF := extend:33[#1000] <> extend:33[31:0[R0]] + 0
00056121: CF := pad:33[#1000] <> pad:33[31:0[R0]] - 0x100000000
00056125: ZF := #1000 = 0
00056129: NF := 31:31[#1000]
00056131: when ~(NF = VF & ~ZF) goto %0005612f
0006cb6d: goto %0005c8f4

0005c8f4:
0005c8f9: R0 := 0.31:0[R24 >> 0x20 | R24 << 0x20]
0005c8fe: R30 := 0xE2B0
0005c900: call @inet_ntoa with return %0005c902

0005c902:
0005c906: R4 := R23
0005c90c: R3 := R0
0005c911: R2 := 0x13000
0005c916: R0 := 7
0005c91c: R2 := R2 + 0x110
0005c921: R1 := 1
0005c926: R30 := 0xE2CC
0005c928: call @__syslog_chk with return %0005c92a

0005c92a:
0005c92d: R0 := 0x27000
0005c934: R0 := mem[R0 + 0xF78, el]:u64
0005c93b: R0 := pad:64[mem[R0, el]:u32]
0005c941: when 31:0[R0] <> 0 goto %0005c8ad
0006cb6e: goto %0005c945

0005c8ad:
0005c8b1: R3 := pad:64[31:0[R22]]
0005c8b7: R2 := R23
0005c8bc: R1 := 0x13000
0005c8c1: R0 := 1
0005c8c7: R1 := R1 + 0x120
0005c8cc: R30 := 0xE358
0005c8ce: call @__printf_chk with return %0005c8d0

0005c8d0:
0005c8d4: R2 := R23
0005c8da: R1 := R21
0005c8e0: R0 := pad:64[31:0[R19]]
0005c8e5: R30 := 0xE368
0005c8e7: call @prepare_http_connect with return %0005c8e9

0005c8e9:
0005c8ec: when 31:0[R0] = 0 goto %0005612f
0006cb6f: goto %0005c8f0

0005c8f0:
0005c8f2: goto %0005c896

0005c945:
0005c949: R2 := R23
0005c94f: R1 := R21
0005c955: R0 := pad:64[31:0[R19]]
0005c95a: R30 := 0xE2EC
0005c95c: call @prepare_http_connect with return %0005c95e

0005c95e:
0005c962: when 31:0[R0] <> 0 goto %0005c896
0006cb70: goto %0005612f

0005c896:
0005c89a: R1 := pad:64[31:0[R19]]
0005c8a0: R0 := pad:64[31:0[R22]]
0005c8a5: R30 := 0xE33C
0005c8a7: call @tunnel with return %0005c8a9

0005c8a9:
0005c8ab: goto %0005612f

0005612f:
00056138: R0 := pad:64[31:0[R19]]
0005613d: R30 := 0xE2F8
0005613f: call @close with return %00056141

00056141:
00056145: R0 := pad:64[31:0[R22]]
0005614a: R30 := 0xE300
0005614c: call @close with return %0005614e

0005614e:
00056153: R20 := mem[R20 + 0xFB8, el]:u64
0005615a: R0 := mem[R31 + 0x48, el]:u64
00056161: R1 := mem[R20, el]:u64
00056167: #1001 := ~R1
0005616c: #1002 := R0 + ~R1 + 1
00056172: VF := extend:65[#1002] <> extend:65[R0] + extend:65[#1001] + 1
00056178: CF := pad:65[#1002] <> pad:65[R0] + pad:65[#1001] + 1
0005617c: ZF := #1002 = 0
00056180: NF := 63:63[#1002]
00056184: R0 := #1002
00056189: R1 := 0
0005618f: when ZF <> 1 goto %0005618d
0006cb71: goto %0005c84c

0005618d:
00056195: R30 := 0xE374
00056197: call @__stack_chk_fail with return %00056199

00056199:
0006cb72: call @magic_auth_detect with noreturn

0005c84c:
0005c850: R0 := R21
0005c856: #1346 := R31 + 0x10
0005c85b: R19 := mem[#1346, el]:u64
0005c860: R20 := mem[#1346 + 8, el]:u64
0005c866: #1347 := R31 + 0x20
0005c86b: R21 := mem[#1347, el]:u64
0005c870: R22 := mem[#1347 + 8, el]:u64
0005c876: #1348 := R31 + 0x30
0005c87b: R23 := mem[#1348, el]:u64
0005c880: R24 := mem[#1348 + 8, el]:u64
0005c887: R29 := mem[R31, el]:u64
0005c88c: R30 := mem[R31 + 8, el]:u64
0005c890: R31 := R31 + 0x50
0005c894: call @free with noreturn

0006cb73: sub frame_dummy(frame_dummy_result)
0006d0e0: frame_dummy_result :: out u32 = low:32[R0]

000631bf:
000631c1: call @register_tm_clones with noreturn

0006cb74: sub fread(fread_ptr, fread_size, fread_nmemb, fread_stream, fread_result)
0006d0e1: fread_ptr :: in out u64 = R0
0006d0e2: fread_size :: in u64 = R1
0006d0e3: fread_nmemb :: in u64 = R2
0006d0e4: fread_stream :: in out u64 = R3
0006d0e5: fread_result :: out u64 = R0

00048a69:
00064c49: R16 := 0x27000
00064c50: R17 := mem[R16 + 0xE40, el]:u64
00064c56: R16 := R16 + 0xE40
00064c5b: call R17 with noreturn

0006cb75: sub free(free_ptr)
0006d0e6: free_ptr :: in out u64 = R0

00049faa:
00064c75: R16 := 0x27000
00064c7c: R17 := mem[R16 + 0xE50, el]:u64
00064c82: R16 := R16 + 0xE50
00064c87: call R17 with noreturn

0006cb76: sub free_rr_data(free_rr_data_result)
0006d0e7: free_rr_data_result :: out u32 = low:32[R0]

0004a684:
0004a688: when R0 = 0 goto %0004a686
0006cb77: goto %0004a7b5

0004a686:
0004a68e: call R30 with noreturn

0004a7b5:
0004a7b9: #300 := R31 - 0x30
0004a7bf: mem := mem with [#300, el]:u64 <- R29
0004a7c5: mem := mem with [#300 + 8, el]:u64 <- R30
0004a7c9: R31 := #300
0004a7cf: R29 := R31
0004a7d5: #301 := R31 + 0x10
0004a7db: mem := mem with [#301, el]:u64 <- R19
0004a7e1: mem := mem with [#301 + 8, el]:u64 <- R20
0004a7e7: R19 := R0
0004a7ee: R20 := mem[R0 + 8, el]:u64
0004a7f4: when R20 = 0 goto %0004a7f2
0006cb78: goto %0004a8b4

0004a8b4:
0004a8ba: mem := mem with [R31 + 0x20, el]:u64 <- R21
0006cb79: goto %0004a8bc

0004a8bc:
0004a8c0: R21 := R20
0004a8c7: R20 := mem[R20 + 0x18, el]:u64
0004a8ce: R0 := mem[R21, el]:u64
0004a8d3: R30 := 0x5650
0004a8d5: call @free with return %0004a8d7

0004a8d7:
0004a8dc: R0 := mem[R21 + 8, el]:u64
0004a8e1: R30 := 0x5658
0004a8e3: call @free with return %0004a8e5

0004a8e5:
0004a8e9: R0 := R21
0004a8ee: R30 := 0x5660
0004a8f0: call @free with return %0004a8f2

0004a8f2:
0004a8f6: when R20 <> 0 goto %0004a8bc
0006cb7a: goto %0004a8fa

0004a8fa:
0004a8ff: R21 := mem[R31 + 0x20, el]:u64
0006cb7b: goto %0004a7f2

0004a7f2:
0004a7fc: R0 := mem[R19 + 0x28, el]:u64
0004a802: when R0 = 0 goto %0004a800
0006cb7c: goto %0004a8ad

0004a8ad:
0004a8b0: R30 := 0x5674
0004a8b2: call @free with return %0004a800

0004a800:
0004a80a: R0 := mem[R19 + 0x30, el]:u64
0004a810: when R0 = 0 goto %0004a80e
0006cb7d: goto %0004a8a6

0004a8a6:
0004a8a9: R30 := 0x5680
0004a8ab: call @free with return %0004a80e

0004a80e:
0004a818: R0 := mem[R19 + 0x38, el]:u64
0004a81e: when R0 = 0 goto %0004a81c
0006cb7e: goto %0004a89f

0004a89f:
0004a8a2: R30 := 0x568C
0004a8a4: call @free with return %0004a81c

0004a81c:
0004a826: R0 := mem[R19 + 0x40, el]:u64
0004a82c: when R0 = 0 goto %0004a82a
0006cb7f: goto %0004a898

0004a898:
0004a89b: R30 := 0x5698
0004a89d: call @free with return %0004a82a

0004a82a:
0004a834: R0 := mem[R19 + 0x48, el]:u64
0004a83a: when R0 = 0 goto %0004a838
0006cb80: goto %0004a891

0004a891:
0004a894: R30 := 0x56A4
0004a896: call @free with return %0004a838

0004a838:
0004a842: R0 := mem[R19 + 0x50, el]:u64
0004a848: when R0 = 0 goto %0004a846
0006cb81: goto %0004a88a

0004a88a:
0004a88d: R30 := 0x56B0
0004a88f: call @free with return %0004a846

0004a846:
0004a850: R0 := mem[R19 + 0x58, el]:u64
0004a856: when R0 = 0 goto %0004a854
0006cb82: goto %0004a883

0004a883:
0004a886: R30 := 0x56BC
0004a888: call @free with return %0004a854

0004a854:
0004a85d: R0 := R19
0004a863: #302 := R31 + 0x10
0004a868: R19 := mem[#302, el]:u64
0004a86d: R20 := mem[#302 + 8, el]:u64
0004a874: R29 := mem[R31, el]:u64
0004a879: R30 := mem[R31 + 8, el]:u64
0004a87d: R31 := R31 + 0x30
0004a881: call @free with noreturn

0006cb83: sub freeaddrinfo(freeaddrinfo_result)
0006d0e8: freeaddrinfo_result :: out u32 = low:32[R0]

0004d25c:
000646f5: R16 := 0x27000
000646fc: R17 := mem[R16 + 0xC50, el]:u64
00064702: R16 := R16 + 0xC50
00064707: call R17 with noreturn

0006cb84: sub from_base64(from_base64_result)
0006d0e9: from_base64_result :: out u32 = low:32[R0]

000466da:
000466dd: R3 := 0x28000
000466e3: R3 := R3 + 0x10
000466e9: R7 := R0
000466ef: R3 := R3 + 0x260
000466f4: R8 := 0
000466f9: goto %000466f7

000466f7:
000466ff: R2 := pad:64[mem[R1]]
00046705: when 7:7[R2] goto %00046703
0006cb85: goto %0005f56b

0005f56b:
0005f571: R0 := pad:64[mem[R3 + (61:0[R2].0), el]:u32]
0005f577: #1443 := 31:0[R0] + 1
0005f57c: VF := extend:33[#1443] <> extend:33[31:0[R0]] + 1
0005f581: CF := pad:33[#1443] <> pad:33[31:0[R0]] + 1
0005f585: ZF := #1443 = 0
0005f589: NF := 31:31[#1443]
0005f58f: when ZF goto %0005f58d
0006cb86: goto %0005f597

0005f597:
0005f59c: R2 := pad:64[mem[R1 + 1]]
0005f5a1: when 7:7[R2] goto %00046703
0006cb87: goto %0005f5a5

0005f5a5:
0005f5a9: R4 := pad:64[31:0[R2]]
0005f5b1: R6 := pad:64[mem[R3 + (61:0[R4].0), el]:u32]
0005f5b7: #1444 := 31:0[R6] + 1
0005f5bc: VF := extend:33[#1444] <> extend:33[31:0[R6]] + 1
0005f5c1: CF := pad:33[#1444] <> pad:33[31:0[R6]] + 1
0005f5c5: ZF := #1444 = 0
0005f5c9: NF := 31:31[#1444]
0005f5ce: when ZF goto %00046703
0006cb88: goto %0005f5d2

0005f5d2:
0005f5d7: R2 := pad:64[mem[R1 + 2]]
0005f5dc: when 7:7[R2] goto %00046703
0006cb89: goto %0005f5e0

0005f5e0:
0005f5e4: #1445 := 31:0[R2] - 0x3D
0005f5e9: VF := extend:33[#1445] <> extend:33[31:0[R2]] - 0x3D
0005f5ee: CF := pad:33[#1445] <> pad:33[31:0[R2]] + 0xFFFFFFC3
0005f5f2: ZF := #1445 = 0
0005f5f6: NF := 31:31[#1445]
0005f5fc: when ZF goto %0005f5fa
0006cb8a: goto %0005f774

0005f774:
0005f778: R5 := pad:64[31:0[R2]]
0005f780: R5 := pad:64[mem[R3 + (61:0[R5].0), el]:u32]
0005f786: #1452 := 31:0[R5] + 1
0005f78b: VF := extend:33[#1452] <> extend:33[31:0[R5]] + 1
0005f790: CF := pad:33[#1452] <> pad:33[31:0[R5]] + 1
0005f794: ZF := #1452 = 0
0005f798: NF := 31:31[#1452]
0005f79d: when ZF goto %00046703
0006cb8b: goto %0005f5fa

0005f5fa:
0005f604: R5 := pad:64[mem[R1 + 3]]
0005f609: when 7:7[R5] goto %00046703
0006cb8c: goto %0005f60d

00046703:
0004670b: R0 := 0xFFFFFFFF
00046710: call R30 with noreturn

0005f60d:
0005f611: #1446 := 31:0[R5] - 0x3D
0005f616: VF := extend:33[#1446] <> extend:33[31:0[R5]] - 0x3D
0005f61b: CF := pad:33[#1446] <> pad:33[31:0[R5]] + 0xFFFFFFC3
0005f61f: ZF := #1446 = 0
0005f623: NF := 31:31[#1446]
0005f629: when ZF goto %0005f627
0006cb8d: goto %0005f747

0005f747:
0005f74b: R9 := pad:64[31:0[R5]]
0005f753: R9 := pad:64[mem[R3 + (61:0[R9].0), el]:u32]
0005f759: #1451 := 31:0[R9] + 1
0005f75e: VF := extend:33[#1451] <> extend:33[31:0[R9]] + 1
0005f763: CF := pad:33[#1451] <> pad:33[31:0[R9]] + 1
0005f767: ZF := #1451 = 0
0005f76b: NF := 31:31[#1451]
0005f770: when ZF goto %00046712
0006cb8e: goto %0005f627

00046712:
00046716: R0 := pad:64[31:0[R9]]
0004671b: call R30 with noreturn

0005f627:
0005f632: R6 :=
          pad:64[31:28[31:31[R6].31:31[R6].31:31[R6].31:31[R6].31:31[R6].31:31[R6].31:31[R6].31:31[R6].31:31[R6].31:31[R6].31:31[R6].31:31[R6].31:31[R6].31:31[R6].31:31[R6].31:31[R6].31:31[R6].31:31[R6].31:31[R6].31:31[R6].31:31[R6].31:31[R6].31:31[R6].31:31[R6].31:31[R6].31:31[R6].31:31[R6].31:31[R6].31:31[R6].31:31[R6].31:31[R6].31:31[R6]].27:0[31:0[R6]
          >> 4 | 31:0[R6] << 0x1C]]
0005f638: R1 := R1 + 4
0005f63f: R0 := pad:64[31:0[R6] | 31:0[R0] << 2]
0005f647: mem := mem with [R7] <- 7:0[R0]
0005f64d: #1447 := 31:0[R2] - 0x3D
0005f652: VF := extend:33[#1447] <> extend:33[31:0[R2]] - 0x3D
0005f657: CF := pad:33[#1447] <> pad:33[31:0[R2]] + 0xFFFFFFC3
0005f65b: ZF := #1447 = 0
0005f65f: NF := 31:31[#1447]
0005f665: when ZF <> 1 goto %0005f663
0006cb8f: goto %0005f737

0005f737:
0005f73b: R7 := R7 + 1
0005f741: R8 := pad:64[31:0[R8] + 1]
0005f745: goto %0005f6e5

0005f663:
0005f66e: R0 := pad:64[mem[R3 + (61:0[R4].0), el]:u32]
0005f674: #1448 := 31:0[R5] - 0x3D
0005f679: VF := extend:33[#1448] <> extend:33[31:0[R5]] - 0x3D
0005f67e: CF := pad:33[#1448] <> pad:33[31:0[R5]] + 0xFFFFFFC3
0005f682: ZF := #1448 = 0
0005f686: NF := 31:31[#1448]
0005f68e: R4 := pad:64[mem[R3 + (61:0[R2].0), el]:u32]
0005f696: R4 :=
          pad:64[31:30[31:31[R4].31:31[R4].31:31[R4].31:31[R4].31:31[R4].31:31[R4].31:31[R4].31:31[R4].31:31[R4].31:31[R4].31:31[R4].31:31[R4].31:31[R4].31:31[R4].31:31[R4].31:31[R4].31:31[R4].31:31[R4].31:31[R4].31:31[R4].31:31[R4].31:31[R4].31:31[R4].31:31[R4].31:31[R4].31:31[R4].31:31[R4].31:31[R4].31:31[R4].31:31[R4].31:31[R4].31:31[R4]].29:0[31:0[R4]
          >> 2 | 31:0[R4] << 0x1E]]
0005f69d: R0 := pad:64[31:0[R4] | 31:0[R0] << 4]
0005f6a5: mem := mem with [R7 + 1] <- 7:0[R0]
0005f6ab: when ZF goto %0005f6a9
0006cb90: goto %0005f6b4

0005f6a9:
0005f6b2: R0 := pad:64[31:0[R8] + 2]
0006cb91: goto %0005f58d

0005f58d:
0005f595: call R30 with noreturn

0005f6b4:
0005f6b8: R4 := pad:64[31:0[R5]]
0005f6c0: R0 := pad:64[mem[R3 + (61:0[R2].0), el]:u32]
0005f6c6: R8 := pad:64[31:0[R8] + 3]
0005f6cc: R7 := R7 + 3
0005f6d4: R2 := pad:64[mem[R3 + (61:0[R4].0), el]:u32]
0005f6db: R0 := pad:64[31:0[R2] | 31:0[R0] << 6]
0005f6e3: mem := mem with [R7 - 1] <- 7:0[R0]
0006cb92: goto %0005f6e5

0005f6e5:
0005f6ea: R0 := pad:64[mem[R1]]
0005f6f0: #1449 := 31:0[R5] - 0x3D
0005f6f5: VF := extend:33[#1449] <> extend:33[31:0[R5]] - 0x3D
0005f6fa: CF := pad:33[#1449] <> pad:33[31:0[R5]] + 0xFFFFFFC3
0005f6fe: ZF := #1449 = 0
0005f702: NF := 31:31[#1449]
0005f708: #1450 := 31:0[R0] + 0
0005f72e: goto %0005f728

0005f728:
0005f72a: when ZF <> 1 goto %0005f70d
0005f72b: goto %0005f71d

0005f71d:
0005f71e: VF := 0
0005f721: CF := 0
0005f724: ZF := 1
0005f727: NF := 0
0005f72d: goto %0005f729

0005f70d:
0005f70e: VF := extend:33[#1450] <> extend:33[31:0[R0]] + 0
0005f713: CF := pad:33[#1450] <> pad:33[31:0[R0]] - 0x100000000
0005f717: ZF := #1450 = 0
0005f71b: NF := 31:31[#1450]
0005f72c: goto %0005f729

0005f729:
0005f733: when ZF goto %0004671d
0006cb93: goto %000466f7

0004671d:
00046721: R0 := pad:64[31:0[R8]]
00046726: call R30 with noreturn

0006cb94: sub gai_strerror(gai_strerror_result)
0006d0ea: gai_strerror_result :: out u32 = low:32[R0]

0004b3c1:
000646df: R16 := 0x27000
000646e6: R17 := mem[R16 + 0xC48, el]:u64
000646ec: R16 := R16 + 0xC48
000646f1: call R17 with noreturn

0006cb95: sub gen_401_page(gen_401_page_result)
0006d0eb: gen_401_page_result :: out u32 = low:32[R0]

00059153:
00059157: #1193 := R31 - 0x30
0005915d: mem := mem with [#1193, el]:u64 <- R29
00059163: mem := mem with [#1193 + 8, el]:u64 <- R30
00059167: R31 := #1193
0005916d: #1194 := R0 + 0
00059172: VF := extend:65[#1194] <> extend:65[R0] + 0
00059177: CF := pad:65[#1194] <> pad:65[R0] - 0x10000000000000000
0005917b: ZF := #1194 = 0
0005917f: NF := 63:63[#1194]
00059185: R29 := R31
0005918b: #1195 := R31 + 0x10
00059191: mem := mem with [#1195, el]:u64 <- R19
00059197: mem := mem with [#1195 + 8, el]:u64 <- R20
0005919d: R19 := R0
000591a2: R0 := 0x13000
000591a8: R0 := R0 + 0xAD0
000591ae: R20 := R1
000591bc: when ZF goto %000591b4
000591bd: goto %000591b8

000591b8:
000591b9: R19 := R19
000591bf: goto %000591bb

000591b4:
000591b5: R19 := R0
000591be: goto %000591bb

000591bb:
000591c4: R0 := 0x1000
000591cc: mem := mem with [R31 + 0x20, el]:u64 <- R21
000591d2: R21 := pad:64[31:0[R2]]
000591d7: R30 := 0x1038C
000591d9: call @new with return %000591db

000591db:
000591df: R5 := R19
000591e5: R7 := pad:64[31:0[R21]]
000591eb: R6 := R20
000591f1: R19 := R0
000591f6: R3 := 0xFFFFFFFFFFFFFFFF
000591fb: R2 := 1
00059200: R1 := 0xFFF
00059205: R4 := 0x13000
0005920b: R4 := R4 + 0xBD0
00059210: R30 := 0x103B4
00059212: call @__snprintf_chk with return %00059214

00059214:
00059218: R0 := R19
0005921e: #1196 := R31 + 0x10
00059223: R19 := mem[#1196, el]:u64
00059228: R20 := mem[#1196 + 8, el]:u64
0005922f: R21 := mem[R31 + 0x20, el]:u64
00059236: R29 := mem[R31, el]:u64
0005923b: R30 := mem[R31 + 8, el]:u64
0005923f: R31 := R31 + 0x30
00059244: call R30 with noreturn

0006cb96: sub gen_407_page(gen_407_page_result)
0006d0ec: gen_407_page_result :: out u32 = low:32[R0]

0005909a:
0005909e: #1191 := R31 - 0x20
000590a4: mem := mem with [#1191, el]:u64 <- R29
000590aa: mem := mem with [#1191 + 8, el]:u64 <- R30
000590ae: R31 := #1191
000590b4: #1192 := R0 + 0
000590b9: VF := extend:65[#1192] <> extend:65[R0] + 0
000590be: CF := pad:65[#1192] <> pad:65[R0] - 0x10000000000000000
000590c2: ZF := #1192 = 0
000590c6: NF := 63:63[#1192]
000590cb: R1 := 0x13000
000590d1: R1 := R1 + 0xAD0
000590d7: R29 := R31
000590df: mem := mem with [R31 + 0x10, el]:u64 <- R19
000590e5: R19 := R0
000590f3: when ZF goto %000590eb
000590f4: goto %000590ef

000590ef:
000590f0: R19 := R19
000590f6: goto %000590f2

000590eb:
000590ec: R19 := R1
000590f5: goto %000590f2

000590f2:
000590fb: R0 := 0x1000
00059100: R30 := 0x10328
00059102: call @new with return %00059104

00059104:
00059108: R5 := R19
0005910d: R3 := 0xFFFFFFFFFFFFFFFF
00059113: R19 := R0
00059118: R2 := 1
0005911d: R1 := 0xFFF
00059122: R4 := 0x13000
00059128: R4 := R4 + 0xAE0
0005912d: R30 := 0x10348
0005912f: call @__snprintf_chk with return %00059131

00059131:
00059135: R0 := R19
0005913c: R19 := mem[R31 + 0x10, el]:u64
00059143: R29 := mem[R31, el]:u64
00059148: R30 := mem[R31 + 8, el]:u64
0005914c: R31 := R31 + 0x20
00059151: call R30 with noreturn

0006cb97: sub gen_502_page(gen_502_page_result)
0006d0ed: gen_502_page_result :: out u32 = low:32[R0]

0005692b:
00056932: #1041 := R31 - 0x20
00056938: mem := mem with [#1041, el]:u64 <- R29
0005693e: mem := mem with [#1041 + 8, el]:u64 <- R30
00056942: R31 := #1041
00056948: #1042 := R0 + 0
0005694d: VF := extend:65[#1042] <> extend:65[R0] + 0
00056952: CF := pad:65[#1042] <> pad:65[R0] - 0x10000000000000000
00056956: ZF := #1042 = 0
0005695a: NF := 63:63[#1042]
00056960: R29 := R31
00056966: #1043 := R31 + 0x10
0005696c: mem := mem with [#1043, el]:u64 <- R19
00056972: mem := mem with [#1043 + 8, el]:u64 <- R20
00056978: R19 := R1
0005697e: R20 := R0
00056983: R0 := 0x13000
00056989: R0 := R0 + 0xAD0
00056997: when ZF goto %0005698f
00056998: goto %00056993

00056993:
00056994: R20 := R20
0005699a: goto %00056996

0005698f:
00056990: R20 := R0
00056999: goto %00056996

00056996:
0005699f: R1 := 0x13000
000569a5: #1044 := R19 + 0
000569aa: VF := extend:65[#1044] <> extend:65[R19] + 0
000569af: CF := pad:65[#1044] <> pad:65[R19] - 0x10000000000000000
000569b3: ZF := #1044 = 0
000569b7: NF := 63:63[#1044]
000569bd: R1 := R1 + 0xD78
000569cb: when ZF goto %000569c3
000569cc: goto %000569c7

000569c7:
000569c8: R19 := R19
000569ce: goto %000569ca

000569c3:
000569c4: R19 := R1
000569cd: goto %000569ca

000569ca:
000569d3: R0 := 0x1000
000569d8: R30 := 0x1045C
000569da: call @new with return %000569dc

000569dc:
000569e0: R5 := R20
000569e6: R7 := R19
000569ec: R6 := R19
000569f1: R3 := 0xFFFFFFFFFFFFFFFF
000569f7: R19 := R0
000569fc: R2 := 1
00056a01: R1 := 0xFFF
00056a06: R4 := 0x13000
00056a0c: R4 := R4 + 0xD88
00056a11: R30 := 0x10484
00056a14: call @__snprintf_chk with return %00056a16

00056a16:
00056a1a: R0 := R19
00056a20: #1045 := R31 + 0x10
00056a25: R19 := mem[#1045, el]:u64
00056a2a: R20 := mem[#1045 + 8, el]:u64
00056a31: R29 := mem[R31, el]:u64
00056a36: R30 := mem[R31 + 8, el]:u64
00056a3a: R31 := R31 + 0x20
00056a3f: call R30 with noreturn

0006cb98: sub gen_denied_page(gen_denied_page_result)
0006d0ee: gen_denied_page_result :: out u32 = low:32[R0]

00059246:
0005924a: #1197 := R31 - 0x20
00059250: mem := mem with [#1197, el]:u64 <- R29
00059256: mem := mem with [#1197 + 8, el]:u64 <- R30
0005925a: R31 := #1197
00059260: #1198 := R0 + 0
00059265: VF := extend:65[#1198] <> extend:65[R0] + 0
0005926a: CF := pad:65[#1198] <> pad:65[R0] - 0x10000000000000000
0005926e: ZF := #1198 = 0
00059272: NF := 63:63[#1198]
00059277: R1 := 0x13000
0005927d: R1 := R1 + 0xCC0
00059283: R29 := R31
0005928b: mem := mem with [R31 + 0x10, el]:u64 <- R19
00059291: R19 := R0
0005929f: when ZF goto %00059297
000592a0: goto %0005929b

0005929b:
0005929c: R19 := R19
000592a2: goto %0005929e

00059297:
00059298: R19 := R1
000592a1: goto %0005929e

0005929e:
000592a7: R0 := 0x1000
000592ac: R30 := 0x103F0
000592ae: call @new with return %000592b0

000592b0:
000592b4: R5 := R19
000592b9: R3 := 0xFFFFFFFFFFFFFFFF
000592bf: R19 := R0
000592c4: R2 := 1
000592c9: R1 := 0xFFF
000592ce: R4 := 0x13000
000592d4: R4 := R4 + 0xCC8
000592d9: R30 := 0x10410
000592db: call @__snprintf_chk with return %000592dd

000592dd:
000592e1: R0 := R19
000592e8: R19 := mem[R31 + 0x10, el]:u64
000592ef: R29 := mem[R31, el]:u64
000592f4: R30 := mem[R31 + 8, el]:u64
000592f8: R31 := R31 + 0x20
000592fd: call R30 with noreturn

0006cb99: sub get_http_header_name(get_http_header_name_result)
0006d0ef: get_http_header_name_result :: out u32 = low:32[R0]

000534b2:
000534b6: #816 := R31 - 0x20
000534bc: mem := mem with [#816, el]:u64 <- R29
000534c2: mem := mem with [#816 + 8, el]:u64 <- R30
000534c6: R31 := #816
000534cb: R1 := 0x12000
000534d1: R1 := R1 + 0x728
000534d7: R29 := R31
000534dd: #817 := R31 + 0x10
000534e3: mem := mem with [#817, el]:u64 <- R19
000534e9: mem := mem with [#817 + 8, el]:u64 <- R20
000534ef: R19 := R0
000534f4: R30 := 0xB7F4
000534f6: call @strcspn with return %000534f8

000534f8:
000534fc: R20 := R0
00053502: R0 := R19
00053507: R30 := 0xB800
00053509: call @strlen with return %0005350b

0005350b:
0005350f: #818 := ~extend:64[31:0[R20]]
00053514: #819 := R0 + ~extend:64[31:0[R20]] + 1
0005351a: VF := extend:65[#819] <> extend:65[R0] + extend:65[#818] + 1
00053520: CF := pad:65[#819] <> pad:65[R0] + pad:65[#818] + 1
00053524: ZF := #819 = 0
00053528: NF := 63:63[#819]
0005352e: when ZF goto %0005352c
0006cb9a: goto %0005f0bf

0005352c:
00053534: R0 := 0
0005353a: #820 := R31 + 0x10
0005353f: R19 := mem[#820, el]:u64
00053544: R20 := mem[#820 + 8, el]:u64
0005354b: R29 := mem[R31, el]:u64
00053550: R30 := mem[R31 + 8, el]:u64
00053554: R31 := R31 + 0x20
00053559: call R30 with noreturn

0005f0bf:
0005f0c3: R2 := pad:64[31:0[R20]]
0005f0c9: R0 := R19
0005f0cf: #1430 := R31 + 0x10
0005f0d4: R19 := mem[#1430, el]:u64
0005f0d9: R20 := mem[#1430 + 8, el]:u64
0005f0de: R1 := 0
0005f0e5: R29 := mem[R31, el]:u64
0005f0ea: R30 := mem[R31 + 8, el]:u64
0005f0ee: R31 := R31 + 0x20
0005f0f2: call @substr with noreturn

0006cb9b: sub get_http_header_value(get_http_header_value_result)
0006d0f0: get_http_header_value_result :: out u32 = low:32[R0]

0005355b:
0005355f: #821 := R31 - 0x10
00053565: mem := mem with [#821, el]:u64 <- R29
0005356b: mem := mem with [#821 + 8, el]:u64 <- R30
0005356f: R31 := #821
00053574: R1 := 0x3A
0005357a: R29 := R31
0005357f: R30 := 0xB840
00053582: call @strchr with return %00053584

00053584:
00053588: when R0 = 0 goto %00053586
0006cb9c: goto %0005f04f

00053586:
00053590: R29 := mem[R31, el]:u64
00053595: R30 := mem[R31 + 8, el]:u64
00053599: R31 := R31 + 0x10
0005359e: call R30 with noreturn

0005f04f:
0005f054: R2 := pad:64[mem[R0 + 1]]
0005f05a: R0 := R0 + 1
0005f060: #1427 := 31:0[R2] - 0x20
0005f065: VF := extend:33[#1427] <> extend:33[31:0[R2]] - 0x20
0005f06a: CF := pad:33[#1427] <> pad:33[31:0[R2]] + 0xFFFFFFE0
0005f06e: ZF := #1427 = 0
0005f072: NF := 31:31[#1427]
0005f078: when ZF <> 1 goto %0005f076
0006cb9d: goto %0005f08f

0005f08f:
0006cb9e: goto %0005f091

0005f091:
0005f095: #1428 := R0 + 1
0005f09a: R1 := pad:64[mem[#1428]]
0005f09e: R0 := #1428
0005f0a4: #1429 := 31:0[R1] - 0x20
0005f0a9: VF := extend:33[#1429] <> extend:33[31:0[R1]] - 0x20
0005f0ae: CF := pad:33[#1429] <> pad:33[31:0[R1]] + 0xFFFFFFE0
0005f0b2: ZF := #1429 = 0
0005f0b6: NF := 31:31[#1429]
0005f0bb: when ZF goto %0005f091
0006cb9f: goto %0005f076

0005f076:
0005f080: R29 := mem[R31, el]:u64
0005f085: R30 := mem[R31 + 8, el]:u64
0005f089: R31 := R31 + 0x10
0005f08d: call @strdup with noreturn

0006cba0: sub getaddrinfo(getaddrinfo_result)
0006d0f1: getaddrinfo_result :: out u32 = low:32[R0]

0004b390:
00064d51: R16 := 0x27000
00064d58: R17 := mem[R16 + 0xEA0, el]:u64
00064d5e: R16 := R16 + 0xEA0
00064d63: call R17 with noreturn

0006cba1: sub geteuid(geteuid_result)
0006d0f2: geteuid_result :: out u32 = low:32[R0]

00061097:
000647bb: R16 := 0x27000
000647c2: R17 := mem[R16 + 0xC98, el]:u64
000647c8: R16 := R16 + 0xC98
000647cd: call R17 with noreturn

0006cba2: sub getgid(getgid_result)
0006d0f3: getgid_result :: out u32 = low:32[R0]

00063e7b:
00064c8b: R16 := 0x27000
00064c92: R17 := mem[R16 + 0xE58, el]:u64
00064c98: R16 := R16 + 0xE58
00064c9d: call R17 with noreturn

0006cba3: sub gethostname(gethostname_buf, gethostname_len, gethostname_result)
0006d0f4: gethostname_buf :: in out u64 = R0
0006d0f5: gethostname_len :: in u64 = R1
0006d0f6: gethostname_result :: out u32 = low:32[R0]

00063982:
00064d93: R16 := 0x27000
00064d9a: R17 := mem[R16 + 0xEB8, el]:u64
00064da0: R16 := R16 + 0xEB8
00064da5: call R17 with noreturn

0006cba4: sub getpid(getpid_result)
0006d0f7: getpid_result :: out u32 = low:32[R0]

00061232:
000648c3: R16 := 0x27000
000648ca: R17 := mem[R16 + 0xCF8, el]:u64
000648d0: R16 := R16 + 0xCF8
000648d5: call R17 with noreturn

0006cba5: sub getpwnam(getpwnam_result)
0006d0f8: getpwnam_result :: out u32 = low:32[R0]

000610d8:
000649e1: R16 := 0x27000
000649e8: R17 := mem[R16 + 0xD60, el]:u64
000649ee: R16 := R16 + 0xD60
000649f3: call R17 with noreturn

0006cba6: sub getuid(getuid_result)
0006d0f9: getuid_result :: out u32 = low:32[R0]

00061087:
000647fd: R16 := 0x27000
00064804: R17 := mem[R16 + 0xCB0, el]:u64
0006480a: R16 := R16 + 0xCB0
0006480f: call R17 with noreturn

0006cba7: sub gl_des_ecb_crypt(gl_des_ecb_crypt_result)
0006d0fa: gl_des_ecb_crypt_result :: out u32 = low:32[R0]

000474a2:
000474a6: #112 := R31 - 0x30
000474ac: mem := mem with [#112, el]:u64 <- R29
000474b2: mem := mem with [#112 + 8, el]:u64 <- R30
000474b6: R31 := #112
000474bc: R29 := R31
000474c2: #113 := R31 + 0x10
000474c8: mem := mem with [#113, el]:u64 <- R19
000474ce: mem := mem with [#113 + 8, el]:u64 <- R20
000474d4: #114 := R31 + 0x20
000474da: mem := mem with [#114, el]:u64 <- R21
000474e0: mem := mem with [#114 + 8, el]:u64 <- R22
000474e6: when 31:0[R3] = 0 goto %000474e4
0006cba8: goto %00050b65

000474e4:
000474ee: R18 := pad:64[mem[R0, el]:u32]
000474f4: R3 := R0
000474f9: goto %000474f7

00050b65:
00050b6a: R18 := pad:64[mem[R0 + 0x80, el]:u32]
00050b70: R3 := R0 + 0x80
0006cba9: goto %000474f7

000474f7:
000474ff: R12 := pad:64[mem[R1, el]:u32]
00047504: R4 := pad:64[mem[R1 + 4, el]:u32]
00047509: R0 := 0x11000
0004750f: #115 := R3 + 4
00047514: R30 := pad:64[mem[#115, el]:u32]
00047519: R17 := pad:64[mem[#115 + 4, el]:u32]
00047522: R12 := pad:64[7:0[R12].15:8[R12].23:16[R12].31:24[R12]]
0004752b: R4 := pad:64[7:0[R4].15:8[R4].23:16[R4].31:24[R4]]
00047531: R0 := R0 + 0x8E0
00047538: R1 := pad:64[31:0[R4] ^ 31:0[R12] >> 4]
0004753e: R10 := R0 + 0x290
00047544: R1 := pad:64[31:0[R1] & 0xF0F0F0F]
0004754a: R9 := R0 + 0x390
00047551: R4 := pad:64[31:0[R4] ^ 31:0[R1]]
00047557: R11 := R0 + 0x490
0004755e: R12 := pad:64[31:0[R12] ^ 31:0[R1] << 4]
00047564: R8 := R0 + 0x590
0004756a: R7 := R0 + 0x690
00047570: R6 := R0 + 0x790
00047577: R1 := pad:64[31:0[R4] ^ 31:0[R12] >> 0x10]
0004757d: R5 := R0 + 0x890
00047583: R1 := pad:64[0.15:0[R1]]
00047589: R0 := R0 + 0x990
00047590: R4 := pad:64[31:0[R4] ^ 31:0[R1]]
00047597: R1 := pad:64[31:0[R12] ^ 31:0[R1] << 0x10]
0004759e: R13 := pad:64[31:0[R1] ^ 31:0[R4] >> 2]
000475a4: R13 := pad:64[31:0[R13] & 0x33333333]
000475ab: R1 := pad:64[31:0[R1] ^ 31:0[R13]]
000475b2: R4 := pad:64[31:0[R4] ^ 31:0[R13] << 2]
000475b8: #116 := R3 + 0xC
000475bd: R16 := pad:64[mem[#116, el]:u32]
000475c2: R15 := pad:64[mem[#116 + 4, el]:u32]
000475c9: R13 := pad:64[31:0[R1] ^ 31:0[R4] >> 8]
000475cf: R13 := pad:64[31:0[R13] & 0xFF00FF]
000475d6: R1 := pad:64[31:0[R1] ^ 31:0[R13]]
000475dd: R13 := pad:64[31:0[R4] ^ 31:0[R13] << 8]
000475e3: #117 := R3 + 0x14
000475e8: R14 := pad:64[mem[#117, el]:u32]
000475ed: R12 := pad:64[mem[#117 + 4, el]:u32]
000475f4: R13 := pad:64[30:0[R13].31:31[R13]]
000475fb: R4 := pad:64[31:0[R1] ^ 31:0[R13]]
00047601: R4 := pad:64[31:0[R4] & 0xAAAAAAAA]
00047608: R13 := pad:64[31:0[R13] ^ 31:0[R4]]
0004760f: R1 := pad:64[31:0[R1] ^ 31:0[R4]]
00047616: R18 := pad:64[31:0[R18] ^ 31:0[R13]]
0004761c: R19 := 0.5:0[R18]
00047624: R30 := pad:64[31:0[R30] ^ (31:0[R13] >> 4 | 31:0[R13] << 0x1C)]
0004762b: R4 := 0.5:0[R18 >> 8 | R18 << 0x38]
00047632: R20 := 0.5:0[R18 >> 0x10 | R18 << 0x30]
00047638: R21 := 0.5:0[R30]
0004763f: R18 := 0.5:0[R18 >> 0x18 | R18 << 0x28]
00047647: R19 := pad:64[mem[R11 + (61:0[R19].0), el]:u32]
0004764e: R22 := 0.5:0[R30 >> 8 | R30 << 0x38]
00047656: R20 := pad:64[mem[R9 + (61:0[R20].0), el]:u32]
0004765e: R4 := pad:64[mem[R10 + (61:0[R4].0), el]:u32]
00047666: R21 := pad:64[mem[R7 + (61:0[R21].0), el]:u32]
0004766e: R19 := pad:64[31:0[R19] ^ (31:0[R1] >> 0x1F | 31:0[R1] << 1)]
00047675: R4 := pad:64[31:0[R4] ^ 31:0[R20]]
0004767c: R20 := 0.5:0[R30 >> 0x10 | R30 << 0x30]
00047684: R18 := pad:64[mem[R8 + (61:0[R18].0), el]:u32]
0004768b: R30 := 0.5:0[R30 >> 0x18 | R30 << 0x28]
00047693: R1 := pad:64[mem[R6 + (61:0[R22].0), el]:u32]
0004769a: R4 := pad:64[31:0[R4] ^ 31:0[R19]]
000476a2: R19 := pad:64[mem[R5 + (61:0[R20].0), el]:u32]
000476a9: R18 := pad:64[31:0[R18] ^ 31:0[R21]]
000476b0: R4 := pad:64[31:0[R4] ^ 31:0[R18]]
000476b8: R18 := pad:64[mem[R0 + (61:0[R30].0), el]:u32]
000476bf: R1 := pad:64[31:0[R1] ^ 31:0[R19]]
000476c6: R4 := pad:64[31:0[R4] ^ 31:0[R1]]
000476cd: R18 := pad:64[31:0[R4] ^ 31:0[R18]]
000476d4: R17 := pad:64[31:0[R18] ^ 31:0[R17]]
000476da: R4 := 0.5:0[R17]
000476e2: R16 := pad:64[31:0[R16] ^ (31:0[R18] >> 4 | 31:0[R18] << 0x1C)]
000476e9: R1 := 0.5:0[R17 >> 8 | R17 << 0x38]
000476f0: R21 := 0.5:0[R17 >> 0x10 | R17 << 0x30]
000476f6: R20 := 0.5:0[R16]
000476fd: R17 := 0.5:0[R17 >> 0x18 | R17 << 0x28]
00047705: R30 := pad:64[mem[R11 + (61:0[R4].0), el]:u32]
0004770c: R19 := 0.5:0[R16 >> 0x10 | R16 << 0x30]
00047713: R4 := 0.5:0[R16 >> 8 | R16 << 0x38]
0004771b: R21 := pad:64[mem[R9 + (61:0[R21].0), el]:u32]
00047723: R1 := pad:64[mem[R10 + (61:0[R1].0), el]:u32]
0004772a: R16 := 0.5:0[R16 >> 0x18 | R16 << 0x28]
00047732: R17 := pad:64[mem[R8 + (61:0[R17].0), el]:u32]
00047739: R13 := pad:64[31:0[R13] ^ 31:0[R30]]
00047741: R20 := pad:64[mem[R7 + (61:0[R20].0), el]:u32]
00047748: R1 := pad:64[31:0[R1] ^ 31:0[R21]]
00047750: R19 := pad:64[mem[R5 + (61:0[R19].0), el]:u32]
00047757: R1 := pad:64[31:0[R1] ^ 31:0[R13]]
0004775f: R4 := pad:64[mem[R6 + (61:0[R4].0), el]:u32]
00047766: R13 := pad:64[31:0[R17] ^ 31:0[R20]]
0004776d: R1 := pad:64[31:0[R1] ^ 31:0[R13]]
00047775: R17 := pad:64[mem[R0 + (61:0[R16].0), el]:u32]
0004777c: R4 := pad:64[31:0[R4] ^ 31:0[R19]]
00047783: R1 := pad:64[31:0[R1] ^ 31:0[R4]]
0004778a: R17 := pad:64[31:0[R1] ^ 31:0[R17]]
00047791: R15 := pad:64[31:0[R17] ^ 31:0[R15]]
00047797: R13 := 0.5:0[R15]
0004779f: R14 := pad:64[31:0[R14] ^ (31:0[R17] >> 4 | 31:0[R17] << 0x1C)]
000477a6: R4 := 0.5:0[R15 >> 8 | R15 << 0x38]
000477ad: R20 := 0.5:0[R15 >> 0x10 | R15 << 0x30]
000477b3: R16 := 0.5:0[R14]
000477ba: R15 := 0.5:0[R15 >> 0x18 | R15 << 0x28]
000477c2: R13 := pad:64[mem[R11 + (61:0[R13].0), el]:u32]
000477c9: R19 := 0.5:0[R14 >> 0x10 | R14 << 0x30]
000477d0: R1 := 0.5:0[R14 >> 8 | R14 << 0x38]
000477d8: R20 := pad:64[mem[R9 + (61:0[R20].0), el]:u32]
000477e0: R4 := pad:64[mem[R10 + (61:0[R4].0), el]:u32]
000477e7: R18 := pad:64[31:0[R18] ^ 31:0[R13]]
000477ef: R16 := pad:64[mem[R7 + (61:0[R16].0), el]:u32]
000477f6: R14 := 0.5:0[R14 >> 0x18 | R14 << 0x28]
000477fe: R13 := pad:64[mem[R8 + (61:0[R15].0), el]:u32]
00047805: R4 := pad:64[31:0[R4] ^ 31:0[R20]]
0004780d: R15 := pad:64[mem[R5 + (61:0[R19].0), el]:u32]
00047814: R4 := pad:64[31:0[R4] ^ 31:0[R18]]
0004781c: R1 := pad:64[mem[R6 + (61:0[R1].0), el]:u32]
00047823: R13 := pad:64[31:0[R13] ^ 31:0[R16]]
0004782b: R18 := pad:64[mem[R0 + (61:0[R14].0), el]:u32]
00047832: R4 := pad:64[31:0[R4] ^ 31:0[R13]]
00047839: R1 := pad:64[31:0[R1] ^ 31:0[R15]]
00047840: R4 := pad:64[31:0[R4] ^ 31:0[R1]]
00047846: #118 := R3 + 0x1C
0004784b: R16 := pad:64[mem[#118, el]:u32]
00047850: R15 := pad:64[mem[#118 + 4, el]:u32]
00047857: R18 := pad:64[31:0[R4] ^ 31:0[R18]]
0004785e: R12 := pad:64[31:0[R18] ^ 31:0[R12]]
00047864: R4 := 0.5:0[R12]
0004786c: R16 := pad:64[31:0[R16] ^ (31:0[R18] >> 4 | 31:0[R18] << 0x1C)]
00047873: R1 := 0.5:0[R12 >> 8 | R12 << 0x38]
0004787a: R21 := 0.5:0[R12 >> 0x10 | R12 << 0x30]
00047880: R20 := 0.5:0[R16]
00047887: R12 := 0.5:0[R12 >> 0x18 | R12 << 0x28]
0004788f: R30 := pad:64[mem[R11 + (61:0[R4].0), el]:u32]
00047896: R19 := 0.5:0[R16 >> 0x10 | R16 << 0x30]
0004789d: R4 := 0.5:0[R16 >> 8 | R16 << 0x38]
000478a5: R21 := pad:64[mem[R9 + (61:0[R21].0), el]:u32]
000478ac: R16 := 0.5:0[R16 >> 0x18 | R16 << 0x28]
000478b4: R1 := pad:64[mem[R10 + (61:0[R1].0), el]:u32]
000478bb: R17 := pad:64[31:0[R17] ^ 31:0[R30]]
000478c3: R20 := pad:64[mem[R7 + (61:0[R20].0), el]:u32]
000478cb: R12 := pad:64[mem[R8 + (61:0[R12].0), el]:u32]
000478d2: R1 := pad:64[31:0[R1] ^ 31:0[R21]]
000478da: R19 := pad:64[mem[R5 + (61:0[R19].0), el]:u32]
000478e1: R1 := pad:64[31:0[R1] ^ 31:0[R17]]
000478e9: R4 := pad:64[mem[R6 + (61:0[R4].0), el]:u32]
000478f0: R12 := pad:64[31:0[R12] ^ 31:0[R20]]
000478f8: R17 := pad:64[mem[R0 + (61:0[R16].0), el]:u32]
000478ff: R1 := pad:64[31:0[R1] ^ 31:0[R12]]
00047906: R4 := pad:64[31:0[R4] ^ 31:0[R19]]
0004790d: R16 := pad:64[mem[R3 + 0x34, el]:u32]
00047914: R1 := pad:64[31:0[R1] ^ 31:0[R4]]
0004791b: R17 := pad:64[31:0[R1] ^ 31:0[R17]]
00047922: R15 := pad:64[31:0[R17] ^ 31:0[R15]]
00047928: #119 := R3 + 0x24
0004792d: R14 := pad:64[mem[#119, el]:u32]
00047932: R13 := pad:64[mem[#119 + 4, el]:u32]
00047938: R1 := 0.5:0[R15]
0004793f: R4 := 0.5:0[R15 >> 8 | R15 << 0x38]
00047946: R21 := 0.5:0[R15 >> 0x10 | R15 << 0x30]
0004794d: R15 := 0.5:0[R15 >> 0x18 | R15 << 0x28]
00047955: R19 := pad:64[mem[R11 + (61:0[R1].0), el]:u32]
0004795d: R14 := pad:64[31:0[R14] ^ (31:0[R17] >> 4 | 31:0[R17] << 0x1C)]
00047963: R20 := 0.5:0[R14]
0004796b: R21 := pad:64[mem[R9 + (61:0[R21].0), el]:u32]
00047972: R18 := pad:64[31:0[R18] ^ 31:0[R19]]
00047979: R1 := 0.5:0[R14 >> 8 | R14 << 0x38]
00047980: R19 := 0.5:0[R14 >> 0x10 | R14 << 0x30]
00047988: R4 := pad:64[mem[R10 + (61:0[R4].0), el]:u32]
00047990: R15 := pad:64[mem[R8 + (61:0[R15].0), el]:u32]
00047997: R14 := 0.5:0[R14 >> 0x18 | R14 << 0x28]
0004799f: R20 := pad:64[mem[R7 + (61:0[R20].0), el]:u32]
000479a6: R4 := pad:64[31:0[R4] ^ 31:0[R21]]
000479ae: R19 := pad:64[mem[R5 + (61:0[R19].0), el]:u32]
000479b5: R4 := pad:64[31:0[R4] ^ 31:0[R18]]
000479bd: R1 := pad:64[mem[R6 + (61:0[R1].0), el]:u32]
000479c4: R18 := pad:64[31:0[R15] ^ 31:0[R20]]
000479cb: R4 := pad:64[31:0[R4] ^ 31:0[R18]]
000479d3: R15 := pad:64[mem[R0 + (61:0[R14].0), el]:u32]
000479da: R1 := pad:64[31:0[R1] ^ 31:0[R19]]
000479e0: #120 := R3 + 0x2C
000479e5: R30 := pad:64[mem[#120, el]:u32]
000479ea: R12 := pad:64[mem[#120 + 4, el]:u32]
000479f1: R4 := pad:64[31:0[R4] ^ 31:0[R1]]
000479f8: R15 := pad:64[31:0[R4] ^ 31:0[R15]]
000479ff: R13 := pad:64[31:0[R15] ^ 31:0[R13]]
00047a05: R18 := 0.5:0[R13]
00047a0d: R14 := pad:64[31:0[R30] ^ (31:0[R15] >> 4 | 31:0[R15] << 0x1C)]
00047a14: R1 := 0.5:0[R13 >> 8 | R13 << 0x38]
00047a1b: R20 := 0.5:0[R13 >> 0x10 | R13 << 0x30]
00047a21: R19 := 0.5:0[R14]
00047a28: R13 := 0.5:0[R13 >> 0x18 | R13 << 0x28]
00047a30: R21 := pad:64[mem[R11 + (61:0[R18].0), el]:u32]
00047a37: R4 := 0.5:0[R14 >> 8 | R14 << 0x38]
00047a3e: R18 := 0.5:0[R14 >> 0x10 | R14 << 0x30]
00047a46: R20 := pad:64[mem[R9 + (61:0[R20].0), el]:u32]
00047a4e: R1 := pad:64[mem[R10 + (61:0[R1].0), el]:u32]
00047a55: R14 := 0.5:0[R14 >> 0x18 | R14 << 0x28]
00047a5d: R19 := pad:64[mem[R7 + (61:0[R19].0), el]:u32]
00047a64: R17 := pad:64[31:0[R17] ^ 31:0[R21]]
00047a6c: R13 := pad:64[mem[R8 + (61:0[R13].0), el]:u32]
00047a73: R1 := pad:64[31:0[R1] ^ 31:0[R20]]
00047a7b: R18 := pad:64[mem[R5 + (61:0[R18].0), el]:u32]
00047a82: R1 := pad:64[31:0[R1] ^ 31:0[R17]]
00047a8a: R4 := pad:64[mem[R6 + (61:0[R4].0), el]:u32]
00047a91: R13 := pad:64[31:0[R13] ^ 31:0[R19]]
00047a99: R17 := pad:64[mem[R0 + (61:0[R14].0), el]:u32]
00047aa0: R1 := pad:64[31:0[R1] ^ 31:0[R13]]
00047aa7: R4 := pad:64[31:0[R4] ^ 31:0[R18]]
00047aae: R1 := pad:64[31:0[R1] ^ 31:0[R4]]
00047ab5: R17 := pad:64[31:0[R1] ^ 31:0[R17]]
00047abc: R12 := pad:64[31:0[R17] ^ 31:0[R12]]
00047ac4: R13 := pad:64[31:0[R16] ^ (31:0[R17] >> 4 | 31:0[R17] << 0x1C)]
00047aca: R18 := 0.5:0[R12]
00047ad1: R19 := 0.5:0[R12 >> 0x10 | R12 << 0x30]
00047ad8: R4 := 0.5:0[R12 >> 8 | R12 << 0x38]
00047ade: R16 := 0.5:0[R13]
00047ae5: R12 := 0.5:0[R12 >> 0x18 | R12 << 0x28]
00047aec: R1 := 0.5:0[R13 >> 8 | R13 << 0x38]
00047af3: R14 := 0.5:0[R13 >> 0x10 | R13 << 0x30]
00047afb: R4 := pad:64[mem[R10 + (61:0[R4].0), el]:u32]
00047b02: R13 := 0.5:0[R13 >> 0x18 | R13 << 0x28]
00047b0a: R19 := pad:64[mem[R9 + (61:0[R19].0), el]:u32]
00047b12: R18 := pad:64[mem[R11 + (61:0[R18].0), el]:u32]
00047b1a: R16 := pad:64[mem[R7 + (61:0[R16].0), el]:u32]
00047b21: R4 := pad:64[31:0[R4] ^ 31:0[R19]]
00047b29: R12 := pad:64[mem[R8 + (61:0[R12].0), el]:u32]
00047b30: R15 := pad:64[31:0[R15] ^ 31:0[R18]]
00047b38: R14 := pad:64[mem[R5 + (61:0[R14].0), el]:u32]
00047b3f: R4 := pad:64[31:0[R4] ^ 31:0[R15]]
00047b47: R1 := pad:64[mem[R6 + (61:0[R1].0), el]:u32]
00047b4e: R12 := pad:64[31:0[R12] ^ 31:0[R16]]
00047b55: R4 := pad:64[31:0[R4] ^ 31:0[R12]]
00047b5d: R16 := pad:64[mem[R0 + (61:0[R13].0), el]:u32]
00047b64: R1 := pad:64[31:0[R1] ^ 31:0[R14]]
00047b6a: #121 := R3 + 0x38
00047b6f: R12 := pad:64[mem[#121, el]:u32]
00047b74: R14 := pad:64[mem[#121 + 4, el]:u32]
00047b7b: R4 := pad:64[31:0[R4] ^ 31:0[R1]]
00047b82: R16 := pad:64[31:0[R4] ^ 31:0[R16]]
00047b89: R12 := pad:64[31:0[R16] ^ 31:0[R12]]
00047b8f: R18 := 0.5:0[R12]
00047b97: R14 := pad:64[31:0[R14] ^ (31:0[R16] >> 4 | 31:0[R16] << 0x1C)]
00047b9e: R1 := 0.5:0[R12 >> 8 | R12 << 0x38]
00047ba5: R20 := 0.5:0[R12 >> 0x10 | R12 << 0x30]
00047bab: R19 := 0.5:0[R14]
00047bb2: R12 := 0.5:0[R12 >> 0x18 | R12 << 0x28]
00047bba: R21 := pad:64[mem[R11 + (61:0[R18].0), el]:u32]
00047bc1: R4 := 0.5:0[R14 >> 8 | R14 << 0x38]
00047bc8: R18 := 0.5:0[R14 >> 0x10 | R14 << 0x30]
00047bd0: R20 := pad:64[mem[R9 + (61:0[R20].0), el]:u32]
00047bd8: R1 := pad:64[mem[R10 + (61:0[R1].0), el]:u32]
00047bdf: R14 := 0.5:0[R14 >> 0x18 | R14 << 0x28]
00047be7: R19 := pad:64[mem[R7 + (61:0[R19].0), el]:u32]
00047bee: R17 := pad:64[31:0[R17] ^ 31:0[R21]]
00047bf6: R12 := pad:64[mem[R8 + (61:0[R12].0), el]:u32]
00047bfd: R1 := pad:64[31:0[R1] ^ 31:0[R20]]
00047c05: R18 := pad:64[mem[R5 + (61:0[R18].0), el]:u32]
00047c0c: R1 := pad:64[31:0[R1] ^ 31:0[R17]]
00047c14: R4 := pad:64[mem[R6 + (61:0[R4].0), el]:u32]
00047c1b: R12 := pad:64[31:0[R12] ^ 31:0[R19]]
00047c23: R17 := pad:64[mem[R0 + (61:0[R14].0), el]:u32]
00047c2a: R1 := pad:64[31:0[R1] ^ 31:0[R12]]
00047c30: #122 := R3 + 0x40
00047c35: R13 := pad:64[mem[#122, el]:u32]
00047c3a: R15 := pad:64[mem[#122 + 4, el]:u32]
00047c41: R4 := pad:64[31:0[R4] ^ 31:0[R18]]
00047c48: R1 := pad:64[31:0[R1] ^ 31:0[R4]]
00047c4f: R1 := pad:64[31:0[R1] ^ 31:0[R17]]
00047c56: R13 := pad:64[31:0[R1] ^ 31:0[R13]]
00047c5c: R18 := 0.5:0[R13]
00047c64: R15 := pad:64[31:0[R15] ^ (31:0[R1] >> 4 | 31:0[R1] << 0x1C)]
00047c6b: R17 := 0.5:0[R13 >> 0x10 | R13 << 0x30]
00047c72: R4 := 0.5:0[R13 >> 8 | R13 << 0x38]
00047c78: R19 := 0.5:0[R15]
00047c7f: R13 := 0.5:0[R13 >> 0x18 | R13 << 0x28]
00047c87: R30 := pad:64[mem[R11 + (61:0[R18].0), el]:u32]
00047c8e: R20 := 0.5:0[R15 >> 8 | R15 << 0x38]
00047c95: R18 := 0.5:0[R15 >> 0x10 | R15 << 0x30]
00047c9d: R21 := pad:64[mem[R9 + (61:0[R17].0), el]:u32]
00047ca5: R4 := pad:64[mem[R10 + (61:0[R4].0), el]:u32]
00047cac: R15 := 0.5:0[R15 >> 0x18 | R15 << 0x28]
00047cb4: R17 := pad:64[mem[R8 + (61:0[R13].0), el]:u32]
00047cbb: R16 := pad:64[31:0[R16] ^ 31:0[R30]]
00047cc3: R19 := pad:64[mem[R7 + (61:0[R19].0), el]:u32]
00047cca: R4 := pad:64[31:0[R4] ^ 31:0[R21]]
00047cd2: R13 := pad:64[mem[R6 + (61:0[R20].0), el]:u32]
00047cd9: R4 := pad:64[31:0[R4] ^ 31:0[R16]]
00047ce1: R18 := pad:64[mem[R5 + (61:0[R18].0), el]:u32]
00047ce8: R16 := pad:64[31:0[R17] ^ 31:0[R19]]
00047cee: #123 := R3 + 0x48
00047cf3: R12 := pad:64[mem[#123, el]:u32]
00047cf8: R14 := pad:64[mem[#123 + 4, el]:u32]
00047cff: R13 := pad:64[31:0[R13] ^ 31:0[R18]]
00047d07: R17 := pad:64[mem[R0 + (61:0[R15].0), el]:u32]
00047d0e: R4 := pad:64[31:0[R4] ^ 31:0[R16]]
00047d15: R4 := pad:64[31:0[R4] ^ 31:0[R13]]
00047d1c: R17 := pad:64[31:0[R4] ^ 31:0[R17]]
00047d23: R12 := pad:64[31:0[R17] ^ 31:0[R12]]
00047d29: R20 := 0.5:0[R12]
00047d31: R13 := pad:64[31:0[R14] ^ (31:0[R17] >> 4 | 31:0[R17] << 0x1C)]
00047d38: R4 := 0.5:0[R12 >> 8 | R12 << 0x38]
00047d3f: R19 := 0.5:0[R12 >> 0x10 | R12 << 0x30]
00047d45: R15 := 0.5:0[R13]
00047d4c: R12 := 0.5:0[R12 >> 0x18 | R12 << 0x28]
00047d54: R14 := pad:64[mem[R11 + (61:0[R20].0), el]:u32]
00047d5b: R18 := 0.5:0[R13 >> 8 | R13 << 0x38]
00047d63: R19 := pad:64[mem[R9 + (61:0[R19].0), el]:u32]
00047d6a: R16 := 0.5:0[R13 >> 0x10 | R13 << 0x30]
00047d72: R4 := pad:64[mem[R10 + (61:0[R4].0), el]:u32]
00047d79: R1 := pad:64[31:0[R1] ^ 31:0[R14]]
00047d80: R13 := 0.5:0[R13 >> 0x18 | R13 << 0x28]
00047d88: R14 := pad:64[mem[R8 + (61:0[R12].0), el]:u32]
00047d8f: R4 := pad:64[31:0[R4] ^ 31:0[R19]]
00047d97: R15 := pad:64[mem[R7 + (61:0[R15].0), el]:u32]
00047d9f: R12 := pad:64[mem[R6 + (61:0[R18].0), el]:u32]
00047da6: R4 := pad:64[31:0[R4] ^ 31:0[R1]]
00047dae: R1 := pad:64[mem[R5 + (61:0[R16].0), el]:u32]
00047db5: R14 := pad:64[31:0[R14] ^ 31:0[R15]]
00047dbd: R16 := pad:64[mem[R0 + (61:0[R13].0), el]:u32]
00047dc4: R4 := pad:64[31:0[R4] ^ 31:0[R14]]
00047dcb: R1 := pad:64[31:0[R12] ^ 31:0[R1]]
00047dd1: #124 := R3 + 0x50
00047dd6: R12 := pad:64[mem[#124, el]:u32]
00047ddb: R14 := pad:64[mem[#124 + 4, el]:u32]
00047de2: R4 := pad:64[31:0[R4] ^ 31:0[R1]]
00047de9: R16 := pad:64[31:0[R4] ^ 31:0[R16]]
00047df0: R12 := pad:64[31:0[R16] ^ 31:0[R12]]
00047df6: R4 := 0.5:0[R12]
00047dfe: R14 := pad:64[31:0[R14] ^ (31:0[R16] >> 4 | 31:0[R16] << 0x1C)]
00047e05: R18 := 0.5:0[R12 >> 0x10 | R12 << 0x30]
00047e0c: R1 := 0.5:0[R12 >> 8 | R12 << 0x38]
00047e12: R30 := 0.5:0[R14]
00047e19: R12 := 0.5:0[R12 >> 0x18 | R12 << 0x28]
00047e21: R4 := pad:64[mem[R11 + (61:0[R4].0), el]:u32]
00047e28: R20 := 0.5:0[R14 >> 8 | R14 << 0x38]
00047e30: R21 := pad:64[mem[R9 + (61:0[R18].0), el]:u32]
00047e37: R19 := 0.5:0[R14 >> 0x10 | R14 << 0x30]
00047e3f: R1 := pad:64[mem[R10 + (61:0[R1].0), el]:u32]
00047e46: R4 := pad:64[31:0[R17] ^ 31:0[R4]]
00047e4e: R18 := pad:64[mem[R8 + (61:0[R12].0), el]:u32]
00047e55: R14 := 0.5:0[R14 >> 0x18 | R14 << 0x28]
00047e5d: R17 := pad:64[mem[R7 + (61:0[R30].0), el]:u32]
00047e64: R1 := pad:64[31:0[R1] ^ 31:0[R21]]
00047e6c: R12 := pad:64[mem[R6 + (61:0[R20].0), el]:u32]
00047e73: R1 := pad:64[31:0[R1] ^ 31:0[R4]]
00047e7b: R4 := pad:64[mem[R5 + (61:0[R19].0), el]:u32]
00047e82: R17 := pad:64[31:0[R18] ^ 31:0[R17]]
00047e88: #125 := R3 + 0x58
00047e8d: R13 := pad:64[mem[#125, el]:u32]
00047e92: R15 := pad:64[mem[#125 + 4, el]:u32]
00047e99: R4 := pad:64[31:0[R12] ^ 31:0[R4]]
00047ea0: R1 := pad:64[31:0[R1] ^ 31:0[R17]]
00047ea8: R17 := pad:64[mem[R0 + (61:0[R14].0), el]:u32]
00047eaf: R1 := pad:64[31:0[R1] ^ 31:0[R4]]
00047eb6: R1 := pad:64[31:0[R1] ^ 31:0[R17]]
00047ebd: R13 := pad:64[31:0[R1] ^ 31:0[R13]]
00047ec3: R18 := 0.5:0[R13]
00047ecb: R15 := pad:64[31:0[R15] ^ (31:0[R1] >> 4 | 31:0[R1] << 0x1C)]
00047ed2: R17 := 0.5:0[R13 >> 0x10 | R13 << 0x30]
00047ed9: R4 := 0.5:0[R13 >> 8 | R13 << 0x38]
00047edf: R19 := 0.5:0[R15]
00047ee6: R13 := 0.5:0[R13 >> 0x18 | R13 << 0x28]
00047eee: R30 := pad:64[mem[R11 + (61:0[R18].0), el]:u32]
00047ef5: R20 := 0.5:0[R15 >> 8 | R15 << 0x38]
00047efc: R18 := 0.5:0[R15 >> 0x10 | R15 << 0x30]
00047f04: R21 := pad:64[mem[R9 + (61:0[R17].0), el]:u32]
00047f0c: R4 := pad:64[mem[R10 + (61:0[R4].0), el]:u32]
00047f13: R15 := 0.5:0[R15 >> 0x18 | R15 << 0x28]
00047f1b: R17 := pad:64[mem[R8 + (61:0[R13].0), el]:u32]
00047f22: R16 := pad:64[31:0[R16] ^ 31:0[R30]]
00047f2a: R19 := pad:64[mem[R7 + (61:0[R19].0), el]:u32]
00047f31: R4 := pad:64[31:0[R4] ^ 31:0[R21]]
00047f39: R13 := pad:64[mem[R6 + (61:0[R20].0), el]:u32]
00047f40: R4 := pad:64[31:0[R4] ^ 31:0[R16]]
00047f48: R18 := pad:64[mem[R5 + (61:0[R18].0), el]:u32]
00047f4f: R16 := pad:64[31:0[R17] ^ 31:0[R19]]
00047f55: #126 := R3 + 0x60
00047f5a: R12 := pad:64[mem[#126, el]:u32]
00047f5f: R14 := pad:64[mem[#126 + 4, el]:u32]
00047f66: R13 := pad:64[31:0[R13] ^ 31:0[R18]]
00047f6e: R17 := pad:64[mem[R0 + (61:0[R15].0), el]:u32]
00047f75: R4 := pad:64[31:0[R4] ^ 31:0[R16]]
00047f7c: R4 := pad:64[31:0[R4] ^ 31:0[R13]]
00047f83: R17 := pad:64[31:0[R4] ^ 31:0[R17]]
00047f8a: R12 := pad:64[31:0[R17] ^ 31:0[R12]]
00047f90: R4 := 0.5:0[R12]
00047f98: R14 := pad:64[31:0[R14] ^ (31:0[R17] >> 4 | 31:0[R17] << 0x1C)]
00047f9f: R20 := 0.5:0[R12 >> 8 | R12 << 0x38]
00047fa6: R19 := 0.5:0[R12 >> 0x10 | R12 << 0x30]
00047fad: R13 := 0.5:0[R12 >> 0x18 | R12 << 0x28]
00047fb3: R15 := 0.5:0[R14]
00047fbb: R4 := pad:64[mem[R11 + (61:0[R4].0), el]:u32]
00047fc2: R18 := 0.5:0[R14 >> 8 | R14 << 0x38]
00047fca: R12 := pad:64[mem[R10 + (61:0[R20].0), el]:u32]
00047fd1: R16 := 0.5:0[R14 >> 0x10 | R14 << 0x30]
00047fd9: R19 := pad:64[mem[R9 + (61:0[R19].0), el]:u32]
00047fe0: R4 := pad:64[31:0[R1] ^ 31:0[R4]]
00047fe8: R15 := pad:64[mem[R7 + (61:0[R15].0), el]:u32]
00047fef: R14 := 0.5:0[R14 >> 0x18 | R14 << 0x28]
00047ff7: R13 := pad:64[mem[R8 + (61:0[R13].0), el]:u32]
00047ffe: R1 := pad:64[31:0[R12] ^ 31:0[R19]]
00048005: R1 := pad:64[31:0[R1] ^ 31:0[R4]]
0004800d: R12 := pad:64[mem[R6 + (61:0[R18].0), el]:u32]
00048015: R4 := pad:64[mem[R5 + (61:0[R16].0), el]:u32]
0004801c: R13 := pad:64[31:0[R13] ^ 31:0[R15]]
00048024: R16 := pad:64[mem[R0 + (61:0[R14].0), el]:u32]
0004802b: R1 := pad:64[31:0[R1] ^ 31:0[R13]]
00048032: R4 := pad:64[31:0[R12] ^ 31:0[R4]]
00048038: #127 := R3 + 0x68
0004803d: R12 := pad:64[mem[#127, el]:u32]
00048042: R15 := pad:64[mem[#127 + 4, el]:u32]
00048049: R1 := pad:64[31:0[R1] ^ 31:0[R4]]
00048050: R16 := pad:64[31:0[R1] ^ 31:0[R16]]
00048057: R12 := pad:64[31:0[R16] ^ 31:0[R12]]
0004805d: R19 := 0.5:0[R12]
00048065: R15 := pad:64[31:0[R15] ^ (31:0[R16] >> 4 | 31:0[R16] << 0x1C)]
0004806c: R1 := 0.5:0[R12 >> 0x10 | R12 << 0x30]
00048073: R4 := 0.5:0[R12 >> 8 | R12 << 0x38]
00048079: R18 := 0.5:0[R15]
00048080: R12 := 0.5:0[R12 >> 0x18 | R12 << 0x28]
00048088: R21 := pad:64[mem[R11 + (61:0[R19].0), el]:u32]
0004808f: R30 := 0.5:0[R15 >> 8 | R15 << 0x38]
00048097: R20 := pad:64[mem[R9 + (61:0[R1].0), el]:u32]
0004809e: R19 := 0.5:0[R15 >> 0x10 | R15 << 0x30]
000480a6: R4 := pad:64[mem[R10 + (61:0[R4].0), el]:u32]
000480ad: R17 := pad:64[31:0[R17] ^ 31:0[R21]]
000480b5: R1 := pad:64[mem[R8 + (61:0[R12].0), el]:u32]
000480bc: R15 := 0.5:0[R15 >> 0x18 | R15 << 0x28]
000480c4: R18 := pad:64[mem[R7 + (61:0[R18].0), el]:u32]
000480cb: R4 := pad:64[31:0[R4] ^ 31:0[R20]]
000480d3: R12 := pad:64[mem[R6 + (61:0[R30].0), el]:u32]
000480da: R4 := pad:64[31:0[R4] ^ 31:0[R17]]
000480e2: R17 := pad:64[mem[R5 + (61:0[R19].0), el]:u32]
000480e9: R1 := pad:64[31:0[R1] ^ 31:0[R18]]
000480ef: #128 := R3 + 0x70
000480f4: R13 := pad:64[mem[#128, el]:u32]
000480f9: R14 := pad:64[mem[#128 + 4, el]:u32]
00048100: R12 := pad:64[31:0[R12] ^ 31:0[R17]]
00048108: R15 := pad:64[mem[R0 + (61:0[R15].0), el]:u32]
0004810f: R4 := pad:64[31:0[R4] ^ 31:0[R1]]
00048116: R4 := pad:64[31:0[R4] ^ 31:0[R12]]
0004811d: R4 := pad:64[31:0[R4] ^ 31:0[R15]]
00048124: R13 := pad:64[31:0[R4] ^ 31:0[R13]]
0004812a: #129 := R3 + 0x78
0004812f: R1 := pad:64[mem[#129, el]:u32]
00048134: R12 := pad:64[mem[#129 + 4, el]:u32]
0004813a: R15 := 0.5:0[R13]
00048141: R30 := 0.5:0[R13 >> 0x10 | R13 << 0x30]
00048148: R3 := 0.5:0[R13 >> 8 | R13 << 0x38]
00048150: R14 := pad:64[31:0[R14] ^ (31:0[R4] >> 4 | 31:0[R4] << 0x1C)]
00048157: R13 := 0.5:0[R13 >> 0x18 | R13 << 0x28]
0004815d: R17 := 0.5:0[R14]
00048165: R15 := pad:64[mem[R11 + (61:0[R15].0), el]:u32]
0004816d: R30 := pad:64[mem[R9 + (61:0[R30].0), el]:u32]
00048174: R19 := 0.5:0[R14 >> 8 | R14 << 0x38]
0004817c: R3 := pad:64[mem[R10 + (61:0[R3].0), el]:u32]
00048183: R18 := 0.5:0[R14 >> 0x10 | R14 << 0x30]
0004818b: R17 := pad:64[mem[R7 + (61:0[R17].0), el]:u32]
00048192: R16 := pad:64[31:0[R16] ^ 31:0[R15]]
00048199: R3 := pad:64[31:0[R3] ^ 31:0[R30]]
000481a1: R15 := pad:64[mem[R8 + (61:0[R13].0), el]:u32]
000481a8: R14 := 0.5:0[R14 >> 0x18 | R14 << 0x28]
000481b0: R13 := pad:64[mem[R6 + (61:0[R19].0), el]:u32]
000481b7: R3 := pad:64[31:0[R3] ^ 31:0[R16]]
000481bf: R16 := pad:64[mem[R5 + (61:0[R18].0), el]:u32]
000481c6: R15 := pad:64[31:0[R15] ^ 31:0[R17]]
000481ce: R14 := pad:64[mem[R0 + (61:0[R14].0), el]:u32]
000481d5: R13 := pad:64[31:0[R13] ^ 31:0[R16]]
000481dc: R3 := pad:64[31:0[R3] ^ 31:0[R15]]
000481e3: R3 := pad:64[31:0[R3] ^ 31:0[R13]]
000481ea: R3 := pad:64[31:0[R3] ^ 31:0[R14]]
000481f1: R1 := pad:64[31:0[R3] ^ 31:0[R1]]
000481f9: R12 := pad:64[31:0[R12] ^ (31:0[R3] >> 4 | 31:0[R3] << 0x1C)]
000481ff: R19 := 0.5:0[R1]
00048206: R17 := 0.5:0[R1 >> 0x10 | R1 << 0x30]
0004820d: R18 := 0.5:0[R1 >> 8 | R1 << 0x38]
00048214: R13 := 0.5:0[R1 >> 0x18 | R1 << 0x28]
0004821a: R16 := 0.5:0[R12]
00048221: R15 := 0.5:0[R12 >> 8 | R12 << 0x38]
00048228: R14 := 0.5:0[R12 >> 0x10 | R12 << 0x30]
00048230: R11 := pad:64[mem[R11 + (61:0[R19].0), el]:u32]
00048237: R12 := 0.5:0[R12 >> 0x18 | R12 << 0x28]
0004823f: R1 := pad:64[mem[R10 + (61:0[R18].0), el]:u32]
00048247: R9 := pad:64[mem[R9 + (61:0[R17].0), el]:u32]
0004824e: R4 := pad:64[31:0[R4] ^ 31:0[R11]]
00048256: R8 := pad:64[mem[R8 + (61:0[R13].0), el]:u32]
0004825e: R7 := pad:64[mem[R7 + (61:0[R16].0), el]:u32]
00048265: R1 := pad:64[31:0[R1] ^ 31:0[R9]]
0004826d: R6 := pad:64[mem[R6 + (61:0[R15].0), el]:u32]
00048274: R1 := pad:64[31:0[R1] ^ 31:0[R4]]
0004827c: R5 := pad:64[mem[R5 + (61:0[R14].0), el]:u32]
00048283: R4 := pad:64[31:0[R8] ^ 31:0[R7]]
0004828a: R1 := pad:64[31:0[R1] ^ 31:0[R4]]
00048292: R4 := pad:64[mem[R0 + (61:0[R12].0), el]:u32]
00048299: R0 := pad:64[31:0[R6] ^ 31:0[R5]]
000482a0: R0 := pad:64[31:0[R1] ^ 31:0[R0]]
000482a7: R0 := pad:64[31:0[R0] ^ 31:0[R4]]
000482ad: #130 := R31 + 0x10
000482b2: R19 := mem[#130, el]:u64
000482b7: R20 := mem[#130 + 8, el]:u64
000482be: R0 := pad:64[0:0[R0].31:1[R0]]
000482c5: R1 := pad:64[31:0[R3] ^ 31:0[R0]]
000482cb: R1 := pad:64[31:0[R1] & 0xAAAAAAAA]
000482d2: R3 := pad:64[31:0[R3] ^ 31:0[R1]]
000482d9: R0 := pad:64[31:0[R0] ^ 31:0[R1]]
000482df: #131 := R31 + 0x20
000482e4: R21 := mem[#131, el]:u64
000482e9: R22 := mem[#131 + 8, el]:u64
000482f0: R3 := pad:64[0:0[R3].31:1[R3]]
000482f7: R29 := mem[R31, el]:u64
000482fc: R30 := mem[R31 + 8, el]:u64
00048300: R31 := R31 + 0x30
00048307: R1 := pad:64[31:0[R0] ^ 31:0[R3] >> 8]
0004830d: R1 := pad:64[31:0[R1] & 0xFF00FF]
00048314: R0 := pad:64[31:0[R0] ^ 31:0[R1]]
0004831b: R3 := pad:64[31:0[R3] ^ 31:0[R1] << 8]
00048322: R1 := pad:64[31:0[R0] ^ 31:0[R3] >> 2]
00048328: R1 := pad:64[31:0[R1] & 0x33333333]
0004832f: R0 := pad:64[31:0[R0] ^ 31:0[R1]]
00048336: R1 := pad:64[31:0[R3] ^ 31:0[R1] << 2]
0004833d: R3 := pad:64[31:0[R1] ^ 31:0[R0] >> 0x10]
00048343: R3 := pad:64[0.15:0[R3]]
0004834a: R1 := pad:64[31:0[R1] ^ 31:0[R3]]
00048351: R0 := pad:64[31:0[R0] ^ 31:0[R3] << 0x10]
00048358: R3 := pad:64[31:0[R1] ^ 31:0[R0] >> 4]
0004835e: R3 := pad:64[31:0[R3] & 0xF0F0F0F]
00048365: R1 := pad:64[31:0[R1] ^ 31:0[R3]]
0004836c: R3 := pad:64[31:0[R0] ^ 31:0[R3] << 4]
00048375: R1 := pad:64[7:0[R1].15:8[R1].23:16[R1].31:24[R1]]
0004837e: R3 := pad:64[7:0[R3].15:8[R3].23:16[R3].31:24[R3]]
00048386: mem := mem with [R2, el]:u32 <- 31:0[R3]
0004838c: mem := mem with [R2 + 4, el]:u32 <- 31:0[R1]
00048391: call R30 with noreturn

0006cbaa: sub gl_des_is_weak_key(gl_des_is_weak_key_result)
0006d0fb: gl_des_is_weak_key_result :: out u32 = low:32[R0]

00046ee7:
00046eeb: #71 := R31 - 0x50
00046ef1: mem := mem with [#71, el]:u64 <- R29
00046ef7: mem := mem with [#71 + 8, el]:u64 <- R30
00046efb: R31 := #71
00046f00: V1 := 0xFEFEFEFEFEFEFEFE
00046f06: R29 := R31
00046f0c: #72 := R31 + 0x10
00046f12: mem := mem with [#72, el]:u64 <- R19
00046f18: mem := mem with [#72 + 8, el]:u64 <- R20
00046f1d: R20 := 0
00046f23: #73 := R31 + 0x20
00046f29: mem := mem with [#73, el]:u64 <- R21
00046f2f: mem := mem with [#73 + 8, el]:u64 <- R22
00046f34: R22 := 0x11000
00046f3a: R22 := R22 + 0x8E0
00046f40: #74 := R31 + 0x30
00046f46: mem := mem with [#74, el]:u64 <- R23
00046f4c: mem := mem with [#74 + 8, el]:u64 <- R24
00046f51: R23 := 0x27000
00046f57: R24 := R31 + 0x40
00046f5e: V0 := pad:128[mem[R0, el]:u64]
00046f64: R22 := R22 + 0x90
00046f6b: R0 := mem[R23 + 0xFB8, el]:u64
00046f70: R21 := 0x3F
00046f77: V0 := pad:128[63:0[V0] & 63:0[V1]]
00046f7e: R1 := mem[R0, el]:u64
00046f86: mem := mem with [R31 + 0x48, el]:u64 <- R1
00046f8b: R1 := 0
00046f93: mem := mem with [R31 + 0x40, el]:u64 <- 63:0[V0]
0006cbab: goto %00046f95

00046f95:
00046f9a: R19 := pad:64[31:0[R20] + 31:0[R21]]
00046fa0: R0 := R24
00046fa5: R2 := 8
00046fad: R19 :=
          pad:64[31:31[31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19]].30:0[31:0[R19]
          >> 1 | 31:0[R19] << 0x1F]]
00046fb4: R1 := R22 + extend:64[31:0[R19].0]
00046fb9: R30 := 0x7488
00046fbc: call @memcmp with return %00046fbe

00046fbe:
00046fc2: #75 := 31:0[R0] + 0
00046fc7: VF := extend:33[#75] <> extend:33[31:0[R0]] + 0
00046fcc: CF := pad:33[#75] <> pad:33[31:0[R0]] - 0x100000000
00046fd0: ZF := #75 = 0
00046fd4: NF := 31:31[#75]
00046fda: when 31:0[R0] = 0 goto %00046fd8
0006cbac: goto %000470ec

000470ec:
000470f6: when ~(NF = VF & ~ZF) goto %00047077
0006cbad: goto %000470fa

00047077:
0004707b: R21 := pad:64[31:0[R19] - 1]
00047081: #81 := ~31:0[R20]
00047086: #82 := 31:0[R21] + ~31:0[R20] + 1
0004708c: VF := extend:33[#82] <> extend:33[31:0[R21]] + extend:33[#81] + 1
00047092: CF := pad:33[#82] <> pad:33[31:0[R21]] + pad:33[#81] + 1
00047096: ZF := #82 = 0
0004709a: NF := 31:31[#82]
000470a1: when NF <> VF goto %0004709f
0006cbae: goto %000470a9

000470a9:
000470ae: R19 := pad:64[31:0[R20] + 31:0[R21]]
000470b4: R0 := R24
000470b9: R2 := 8
000470c1: R19 :=
          pad:64[31:31[31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19]].30:0[31:0[R19]
          >> 1 | 31:0[R19] << 0x1F]]
000470c8: R1 := R22 + extend:64[31:0[R19].0]
000470cd: R30 := 0x74F4
000470cf: call @memcmp with return %000470d1

000470d1:
000470d5: #83 := 31:0[R0] + 0
000470da: VF := extend:33[#83] <> extend:33[31:0[R0]] + 0
000470df: CF := pad:33[#83] <> pad:33[31:0[R0]] - 0x100000000
000470e3: ZF := #83 = 0
000470e7: NF := 31:31[#83]
000470ee: when 31:0[R0] <> 0 goto %000470ec
0006cbaf: goto %00046fd8

00046fd8:
00046fe0: R0 := 1
00046fe5: goto %00046fe3

000470fa:
000470fe: R20 := pad:64[31:0[R19] + 1]
00047104: #84 := ~31:0[R21]
00047109: #85 := 31:0[R20] + ~31:0[R21] + 1
0004710f: VF := extend:33[#85] <> extend:33[31:0[R20]] + extend:33[#84] + 1
00047115: CF := pad:33[#85] <> pad:33[31:0[R20]] + pad:33[#84] + 1
00047119: ZF := #85 = 0
0004711d: NF := 31:31[#85]
00047124: when ~(NF = VF & ~ZF) goto %00046f95
0006cbb0: goto %0004709f

0004709f:
000470a7: R0 := 0
0006cbb1: goto %00046fe3

00046fe3:
00046feb: R23 := mem[R23 + 0xFB8, el]:u64
00046ff2: R1 := mem[R31 + 0x48, el]:u64
00046ff9: R2 := mem[R23, el]:u64
00046fff: #76 := ~R2
00047004: #77 := R1 + ~R2 + 1
0004700a: VF := extend:65[#77] <> extend:65[R1] + extend:65[#76] + 1
00047010: CF := pad:65[#77] <> pad:65[R1] + pad:65[#76] + 1
00047014: ZF := #77 = 0
00047018: NF := 63:63[#77]
0004701c: R1 := #77
00047021: R2 := 0
00047027: when ZF <> 1 goto %00047025
0006cbb2: goto %00047032

00047025:
0004702d: R30 := 0x7508
00047030: call @__stack_chk_fail with return %0006cbb3

0006cbb3:
0006cbb4: call @gl_des_setkey with noreturn

00047032:
00047036: #78 := R31 + 0x10
0004703b: R19 := mem[#78, el]:u64
00047040: R20 := mem[#78 + 8, el]:u64
00047046: #79 := R31 + 0x20
0004704b: R21 := mem[#79, el]:u64
00047050: R22 := mem[#79 + 8, el]:u64
00047056: #80 := R31 + 0x30
0004705b: R23 := mem[#80, el]:u64
00047060: R24 := mem[#80 + 8, el]:u64
00047067: R29 := mem[R31, el]:u64
0004706c: R30 := mem[R31 + 8, el]:u64
00047070: R31 := R31 + 0x50
00047075: call R30 with noreturn

0006cbb5: sub gl_des_makekey(gl_des_makekey_result)
0006d0fc: gl_des_makekey_result :: out u32 = low:32[R0]

00047200:
00047204: #93 := R31 - 0x60
0004720a: mem := mem with [#93, el]:u64 <- R29
00047210: mem := mem with [#93 + 8, el]:u64 <- R30
00047214: R31 := #93
0004721a: #94 := R2 - 8
0004721f: VF := extend:65[#94] <> extend:65[R2] - 8
00047224: CF := pad:65[#94] <> pad:65[R2] + 0xFFFFFFFFFFFFFFF8
00047228: ZF := #94 = 0
0004722c: NF := 63:63[#94]
00047232: R29 := R31
00047238: #95 := R31 + 0x10
0004723e: mem := mem with [#95, el]:u64 <- R19
00047244: mem := mem with [#95 + 8, el]:u64 <- R20
00047249: R20 := 0x27000
0004724f: R19 := R0
00047256: R3 := mem[R20 + 0xFB8, el]:u64
0004725d: R0 := mem[R3, el]:u64
00047265: mem := mem with [R31 + 0x58, el]:u64 <- R0
0004726a: R0 := 0
00047270: when ZF goto %0004726e
0006cbb6: goto %00047426

0004726e:
00047277: #96 := R31 + 0x30
0004727d: mem := mem with [#96, el]:u64 <- R23
00047283: mem := mem with [#96 + 8, el]:u64 <- R24
00047289: R23 := R1
0004728f: R0 := R23
00047295: R1 := R19
0004729b: #97 := R31 + 0x20
000472a1: mem := mem with [#97, el]:u64 <- R21
000472a7: mem := mem with [#97 + 8, el]:u64 <- R22
000472ac: R24 := 0x11000
000472b4: mem := mem with [R31 + 0x40, el]:u64 <- R25
000472b9: R30 := 0x75E0
000472bb: call @des_key_schedule with return %000472bd

000472bd:
000472c2: V7 := mem[R19, el]:u128
000472c7: V0 := mem[R19 + 0x10, el]:u128
000472cc: V16 := 0xFEFEFEFEFEFEFEFE
000472d2: #98 := R19 + 0x20
000472d7: V6 := mem[#98, el]:u128
000472dc: V1 := mem[#98 + 0x10, el]:u128
000472e2: R24 := R24 + 0x8E0
000472e8: #99 := R19 + 0x40
000472ed: V5 := mem[#99, el]:u128
000472f2: V4 := mem[#99 + 0x10, el]:u128
000472f8: R24 := R24 + 0x90
000472fe: #100 := R19 + 0x60
00047303: V3 := mem[#100, el]:u128
00047308: V2 := mem[#100 + 0x10, el]:u128
0004730e: R25 := R31 + 0x50
00047315: V0 := 63:0[V0].127:64[V0]
0004731a: R22 := 0x3F
00047321: V7 := 63:0[V7].127:64[V7]
00047326: R21 := 0
0004732d: V6 := 63:0[V6].127:64[V6]
00047334: V1 := 63:0[V1].127:64[V1]
0004733b: V5 := 63:0[V5].127:64[V5]
00047342: V4 := 63:0[V4].127:64[V4]
00047348: #101 := R19 + 0xE0
0004734e: mem := mem with [#101, el]:u128 <- V0
00047354: mem := mem with [#101 + 0x10, el]:u128 <- V7
0004735b: V3 := 63:0[V3].127:64[V3]
00047361: #102 := R19 + 0xC0
00047367: mem := mem with [#102, el]:u128 <- V1
0004736d: mem := mem with [#102 + 0x10, el]:u128 <- V6
00047374: V2 := 63:0[V2].127:64[V2]
0004737a: #103 := R19 + 0xA0
00047380: mem := mem with [#103, el]:u128 <- V4
00047386: mem := mem with [#103 + 0x10, el]:u128 <- V5
0004738c: #104 := R19 + 0x80
00047392: mem := mem with [#104, el]:u128 <- V2
00047398: mem := mem with [#104 + 0x10, el]:u128 <- V3
0004739f: V0 := pad:128[mem[R23, el]:u64]
000473a6: V0 := pad:128[63:0[V0] & 63:0[V16]]
000473ae: mem := mem with [R31 + 0x50, el]:u64 <- 63:0[V0]
0006cbb7: goto %000473b2

000473b2:
000473b7: R19 := pad:64[31:0[R21] + 31:0[R22]]
000473bd: R0 := R25
000473c2: R2 := 8
000473ca: R19 :=
          pad:64[31:31[31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19]].30:0[31:0[R19]
          >> 1 | 31:0[R19] << 0x1F]]
000473d1: R1 := R24 + extend:64[31:0[R19].0]
000473d6: R30 := 0x7660
000473d8: call @memcmp with return %000473da

000473da:
000473de: #105 := 31:0[R0] + 0
000473e3: VF := extend:33[#105] <> extend:33[31:0[R0]] + 0
000473e8: CF := pad:33[#105] <> pad:33[31:0[R0]] - 0x100000000
000473ec: ZF := #105 = 0
000473f0: NF := 31:31[#105]
000473f6: when 31:0[R0] = 0 goto %000473f4
0006cbb8: goto %00050b97

00050b97:
00050b9d: when ~(NF = VF & ~ZF) goto %00050b9b
0006cbb9: goto %00050c45

00050b9b:
00050ba4: R22 := pad:64[31:0[R19] - 1]
00050baa: #661 := ~31:0[R21]
00050baf: #662 := 31:0[R22] + ~31:0[R21] + 1
00050bb5: VF := extend:33[#662] <> extend:33[31:0[R22]] + extend:33[#661] + 1
00050bbb: CF := pad:33[#662] <> pad:33[31:0[R22]] + pad:33[#661] + 1
00050bbf: ZF := #662 = 0
00050bc3: NF := 31:31[#662]
00050bca: when NF <> VF goto %00050bc8
0006cbba: goto %00050bfd

00050bfd:
00050c02: R19 := pad:64[31:0[R21] + 31:0[R22]]
00050c08: R0 := R25
00050c0d: R2 := 8
00050c15: R19 :=
          pad:64[31:31[31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19].31:31[R19]].30:0[31:0[R19]
          >> 1 | 31:0[R19] << 0x1F]]
00050c1c: R1 := R24 + extend:64[31:0[R19].0]
00050c21: R30 := 0x76B0
00050c23: call @memcmp with return %00050c25

00050c25:
00050c29: #665 := 31:0[R0] + 0
00050c2e: VF := extend:33[#665] <> extend:33[31:0[R0]] + 0
00050c33: CF := pad:33[#665] <> pad:33[31:0[R0]] - 0x100000000
00050c37: ZF := #665 = 0
00050c3b: NF := 31:31[#665]
00050c41: when 31:0[R0] <> 0 goto %00050b97
0006cbbb: goto %000473f4

000473f4:
000473fc: R0 := 0
00047402: #106 := R31 + 0x20
00047407: R21 := mem[#106, el]:u64
0004740c: R22 := mem[#106 + 8, el]:u64
00047412: #107 := R31 + 0x30
00047417: R23 := mem[#107, el]:u64
0004741c: R24 := mem[#107 + 8, el]:u64
00047423: R25 := mem[R31 + 0x40, el]:u64
00047428: goto %00047426

00050c45:
00050c49: R21 := pad:64[31:0[R19] + 1]
00050c4f: #666 := ~31:0[R22]
00050c54: #667 := 31:0[R21] + ~31:0[R22] + 1
00050c5a: VF := extend:33[#667] <> extend:33[31:0[R21]] + extend:33[#666] + 1
00050c60: CF := pad:33[#667] <> pad:33[31:0[R21]] + pad:33[#666] + 1
00050c64: ZF := #667 = 0
00050c68: NF := 31:31[#667]
00050c6f: when ~(NF = VF & ~ZF) goto %000473b2
0006cbbc: goto %00050bc8

00050bc8:
00050bd0: R0 := 1
00050bd6: #663 := R31 + 0x20
00050bdb: R21 := mem[#663, el]:u64
00050be0: R22 := mem[#663 + 8, el]:u64
00050be6: #664 := R31 + 0x30
00050beb: R23 := mem[#664, el]:u64
00050bf0: R24 := mem[#664 + 8, el]:u64
00050bf7: R25 := mem[R31 + 0x40, el]:u64
00050bfb: goto %00047426

00047426:
0004742e: R20 := mem[R20 + 0xFB8, el]:u64
00047435: R1 := mem[R31 + 0x58, el]:u64
0004743c: R2 := mem[R20, el]:u64
00047442: #108 := ~R2
00047447: #109 := R1 + ~R2 + 1
0004744d: VF := extend:65[#109] <> extend:65[R1] + extend:65[#108] + 1
00047453: CF := pad:65[#109] <> pad:65[R1] + pad:65[#108] + 1
00047457: ZF := #109 = 0
0004745b: NF := 63:63[#109]
0004745f: R1 := #109
00047464: R2 := 0
0004746a: when ZF <> 1 goto %00047468
0006cbbd: goto %00050b72

00047468:
00047471: #110 := R31 + 0x20
00047477: mem := mem with [#110, el]:u64 <- R21
0004747d: mem := mem with [#110 + 8, el]:u64 <- R22
00047483: #111 := R31 + 0x30
00047489: mem := mem with [#111, el]:u64 <- R23
0004748f: mem := mem with [#111 + 8, el]:u64 <- R24
00047497: mem := mem with [R31 + 0x40, el]:u64 <- R25
0004749c: R30 := 0x76DC
0004749e: call @__stack_chk_fail with return %000474a0

000474a0:
0006cbbe: call @gl_des_ecb_crypt with noreturn

00050b72:
00050b76: #660 := R31 + 0x10
00050b7b: R19 := mem[#660, el]:u64
00050b80: R20 := mem[#660 + 8, el]:u64
00050b87: R29 := mem[R31, el]:u64
00050b8c: R30 := mem[R31 + 8, el]:u64
00050b90: R31 := R31 + 0x60
00050b95: call R30 with noreturn

0006cbbf: sub gl_des_setkey(gl_des_setkey_result)
0006d0fd: gl_des_setkey_result :: out u32 = low:32[R0]

0004684e:
00046855: #61 := R31 - 0x20
0004685b: mem := mem with [#61, el]:u64 <- R29
00046861: mem := mem with [#61 + 8, el]:u64 <- R30
00046865: R31 := #61
0004686b: R29 := R31
00046873: mem := mem with [R31 + 0x10, el]:u64 <- R19
00046879: R19 := R0
0004687f: R0 := R1
00046885: R1 := R19
0004688a: R30 := 0x7524
0004688d: call @des_key_schedule with return %00047128

00047128:
0004712d: V0 := mem[R19, el]:u128
00047132: V1 := mem[R19 + 0x10, el]:u128
00047138: #86 := R19 + 0x20
0004713d: V2 := mem[#86, el]:u128
00047142: V3 := mem[#86 + 0x10, el]:u128
00047148: #87 := R19 + 0x40
0004714d: V4 := mem[#87, el]:u128
00047152: V5 := mem[#87 + 0x10, el]:u128
00047158: #88 := R19 + 0x60
0004715d: V7 := mem[#88, el]:u128
00047162: V6 := mem[#88 + 0x10, el]:u128
00047169: V5 := 63:0[V5].127:64[V5]
00047170: V4 := 63:0[V4].127:64[V4]
00047177: V7 := 63:0[V7].127:64[V7]
0004717e: V6 := 63:0[V6].127:64[V6]
00047185: V3 := 63:0[V3].127:64[V3]
0004718c: V2 := 63:0[V2].127:64[V2]
00047192: #89 := R19 + 0xA0
00047198: mem := mem with [#89, el]:u128 <- V5
0004719e: mem := mem with [#89 + 0x10, el]:u128 <- V4
000471a5: V1 := 63:0[V1].127:64[V1]
000471ab: #90 := R19 + 0x80
000471b1: mem := mem with [#90, el]:u128 <- V6
000471b7: mem := mem with [#90 + 0x10, el]:u128 <- V7
000471be: V0 := 63:0[V0].127:64[V0]
000471c4: #91 := R19 + 0xC0
000471ca: mem := mem with [#91, el]:u128 <- V3
000471d0: mem := mem with [#91 + 0x10, el]:u128 <- V2
000471d6: #92 := R19 + 0xE0
000471dc: mem := mem with [#92, el]:u128 <- V1
000471e2: mem := mem with [#92 + 0x10, el]:u128 <- V0
000471e9: R19 := mem[R31 + 0x10, el]:u64
000471f0: R29 := mem[R31, el]:u64
000471f5: R30 := mem[R31 + 8, el]:u64
000471f9: R31 := R31 + 0x20
000471fe: call R30 with noreturn

0006cbc0: sub headers_recv(headers_recv_result)
0006d0fe: headers_recv_result :: out u32 = low:32[R0]

000535a2:
000535a6: #822 := R31 - 0xA0
000535ac: mem := mem with [#822, el]:u64 <- R29
000535b2: mem := mem with [#822 + 8, el]:u64 <- R30
000535b6: R31 := #822
000535bc: R29 := R31
000535c2: #823 := R31 + 0x20
000535c8: mem := mem with [#823, el]:u64 <- R21
000535ce: mem := mem with [#823 + 8, el]:u64 <- R22
000535d3: R22 := 0x27000
000535d9: R21 := pad:64[31:0[R0]]
000535e0: R2 := mem[R22 + 0xFB8, el]:u64
000535e6: #824 := R31 + 0x10
000535ec: mem := mem with [#824, el]:u64 <- R19
000535f2: mem := mem with [#824 + 8, el]:u64 <- R20
000535f8: R20 := R1
000535ff: R3 := mem[R2, el]:u64
00053607: mem := mem with [R31 + 0x98, el]:u64 <- R3
0005360c: R3 := 0
00053611: R1 := 0x1000
00053616: R0 := 0x1000
0005361c: #825 := R31 + 0x30
00053622: mem := mem with [#825, el]:u64 <- R23
00053628: mem := mem with [#825 + 8, el]:u64 <- R24
0005362e: R23 := R31 + 0x84
00053634: #826 := R31 + 0x40
0005363a: mem := mem with [#826, el]:u64 <- R25
00053640: mem := mem with [#826 + 8, el]:u64 <- R26
00053646: R24 := R31 + 0x88
0005364e: mem := mem with [R31 + 0x84, el]:u32 <- 31:0[R1]
00053655: mem := mem with [R31 + 0x90, el]:u64 <- 0
0005365a: R30 := 0xB8C8
0005365c: call @new with return %0005365e

0005365e:
00053662: R3 := R0
00053668: R2 := R23
0005366e: R0 := pad:64[31:0[R21]]
00053674: R1 := R24
0005367c: mem := mem with [R31 + 0x88, el]:u64 <- R3
00053681: R30 := 0xB8E0
00053683: call @so_recvln with return %00053685

00053685:
00053689: #827 := 31:0[R0] + 0
0005368e: VF := extend:33[#827] <> extend:33[31:0[R0]] + 0
00053693: CF := pad:33[#827] <> pad:33[31:0[R0]] - 0x100000000
00053697: ZF := #827 = 0
0005369b: NF := 31:31[#827]
000536a3: when ~(NF = VF & ~ZF) goto %000536a1
0006cbc1: goto %0005f00d

000536a1:
000536aa: R19 := pad:64[31:0[R0]]
000536af: R0 := 0x27000
000536b7: mem := mem with [R31 + 0x68, el]:u64 <- R0
0006cbc2: goto %000536b9

0005f00d:
0005f010: R0 := 0x27000
0005f016: R1 := R0
0005f01e: mem := mem with [R31 + 0x68, el]:u64 <- R1
0005f024: #1426 := R31 + 0x50
0005f02a: mem := mem with [#1426, el]:u64 <- R27
0005f030: mem := mem with [#1426 + 8, el]:u64 <- R28
0005f037: R1 := mem[R1 + 0xF78, el]:u64
0005f03e: R0 := mem[R31 + 0x88, el]:u64
0005f045: R1 := pad:64[mem[R1, el]:u32]
0005f04b: when 31:0[R1] <> 0 goto %0005ec48
0006cbc3: goto %0005ec6d

0005ec48:
0005ec4c: R2 := R0
0005ec51: R1 := 0x12000
0005ec56: R0 := 1
0005ec5c: R1 := R1 + 0x730
0005ec61: R30 := 0xBB70
0005ec63: call @__printf_chk with return %0005ec65

0005ec65:
0005ec6a: R0 := mem[R31 + 0x88, el]:u64
0005ec6f: goto %0005ec6d

0005ec6d:
0005ec73: R30 := 0xB90C
0005ec75: call @trimr with return %0005ec77

0005ec77:
0005ec7b: R19 := R31 + 0x90
0005ec82: R0 := mem[R31 + 0x88, el]:u64
0005ec87: R26 := 0x13000
0005ec8d: R28 := R26 + 0x178
0005ec92: R30 := 0xB920
0005ec94: call @strdup with return %0005ec96

0005ec96:
0005ec9a: R25 := R0
0005eca1: R27 := mem[R31 + 0x88, el]:u64
0005eca7: R0 := R27
0005ecac: R30 := 0xB930
0005ecae: call @strlen with return %0005ecb0

0005ecb0:
0005ecb4: R1 := R28
0005ecba: R2 := R19
0005ecc2: mem := mem with [R31 + 0x60, el]:u64 <- R0
0005ecc8: R0 := R27
0005eccd: R30 := 0xB944
0005eccf: call @strtok_r with return %0005ecd1

0005ecd1:
0005ecd5: R27 := R0
0005ecda: when R0 = 0 goto %00053b12
0006cbc4: goto %0005ecde

0005ecde:
0005ece3: R0 := mem[R31 + 0x88, el]:u64
0005ece8: R1 := 0x12000
0005eced: R2 := 5
0005ecf3: R1 := R1 + 0x740
0005ecf8: R30 := 0xB960
0005ecfa: call @strncasecmp with return %0005ecfc

0005ecfc:
0005ed00: when 31:0[R0] = 0 goto %0005ecfe
0006cbc5: goto %0005ee31

0005ee31:
0005ee34: R1 := 0x12000
0005ee3a: R0 := R27
0005ee40: R1 := R1 + 0x748
0005ee45: R2 := 3
0005ee4a: R30 := 0xB978
0005ee4c: call @strncasecmp with return %0005ee4e

0005ee4e:
0005ee51: when 31:0[R0] = 0 goto %0005ecfe
0006cbc6: goto %0005ee55

0005ecfe:
0005ed08: mem := mem with [R20, el]:u32 <- 0
0005ed0e: R0 := R27
0005ed15: mem := mem with [R20 + 0x1C, el]:u32 <- 0
0005ed1a: R30 := 0xBB88
0005ed1c: call @strdup with return %0005ed1e

0005ed1e:
0005ed22: #1420 := R20 + 0x48
0005ed28: mem := mem with [#1420, el]:u64 <- R0
0005ed2d: mem := mem with [#1420 + 8, el]:u64 <- 0
0005ed33: R2 := R19
0005ed39: R1 := R26 + 0x178
0005ed3e: R0 := 0
0005ed43: R30 := 0xBB9C
0005ed45: call @strtok_r with return %0005ed47

0005ed47:
0005ed4b: R19 := R0
0005ed51: when R0 = 0 goto %0005ed4f
0006cbc7: goto %0005eda4

0005ed4f:
0005ed59: R0 := mem[R20 + 0x50, el]:u64
0005ed60: when R0 <> 0 goto %0005ed5e
0006cbc8: goto %0005ed8a

0005ed8a:
0005ed8d: R0 := 0x14000
0005ed93: R0 := R0 + 0xD00
0005ed98: R30 := 0xBC7C
0005ed9a: call @strdup with return %0005ed9c

0005ed9c:
0005eda2: mem := mem with [R20 + 0x50, el]:u64 <- R0
0006cbc9: goto %0005ed5e

0005ed5e:
0005ed67: R0 := R25
0005ed6d: when R25 <> 0 goto %00053d85
0006cbca: goto %0005ed71

0005ed71:
0005ed74: R19 := 0xFFFFFFFE
0005ed7a: #1421 := R31 + 0x50
0005ed7f: R27 := mem[#1421, el]:u64
0005ed84: R28 := mem[#1421 + 8, el]:u64
0005ed88: goto %000536b9

0005eda4:
0005eda7: R30 := 0xBBA8
0005eda9: call @strdup with return %0005edab

0005edab:
0005edaf: R27 := R0
0005edb4: R30 := 0xBBB0
0005edb6: call @strlen with return %0005edb8

0005edb8:
0005edbd: R0 := R19 + R0
0005edc4: R3 := mem[R31 + 0x88, el]:u64
0005edcb: R1 := pad:64[mem[R31 + 0x60, el]:u32]
0005edd2: R3 := R3 + extend:64[31:0[R1]]
0005edd7: goto %0005edd5

0005edd5:
0005eddd: R1 := pad:64[mem[R0]]
0005ede3: #1422 := ~R0
0005ede8: #1423 := R3 + ~R0 + 1
0005edee: VF := extend:65[#1423] <> extend:65[R3] + extend:65[#1422] + 1
0005edf4: CF := pad:65[#1423] <> pad:65[R3] + pad:65[#1422] + 1
0005edf8: ZF := #1423 = 0
0005edfc: NF := 63:63[#1423]
0005ee03: when CF & ~ZF goto %0005ee01
0006cbcb: goto %00053ba6

0005ee01:
0005ee0a: #1424 := 31:0[R1] - 0x20
0005ee0f: VF := extend:33[#1424] <> extend:33[31:0[R1]] - 0x20
0005ee14: CF := pad:33[#1424] <> pad:33[31:0[R1]] + 0xFFFFFFE0
0005ee18: ZF := #1424 = 0
0005ee1c: NF := 31:31[#1424]
0005ee22: R2 := R0 + 1
0005ee27: when ZF <> 1 goto %00053b98
0006cbcc: goto %0005ee2b

00053b98:
00053b9d: R1 := pad:64[mem[R0 + 1]]
00053ba3: R0 := R2
00053ba8: goto %00053ba6

00053ba6:
00053bae: when 31:0[R1] <> 0 goto %00053bac
0006cbcd: goto %00053bcb

00053bac:
00053bb4: R30 := 0xBD68
00053bb6: call @strdup with return %00053bb8

00053bb8:
00053bbe: mem := mem with [R20 + 0x50, el]:u64 <- R0
00053bc3: goto %00053bc1

00053bcb:
00053bd0: R0 := mem[R20 + 0x50, el]:u64
0006cbce: goto %00053bc1

00053bc1:
00053bc7: when R0 = 0 goto %00053740
0006cbcf: goto %0005375b

0005ee2b:
0005ee2f: R0 := R2
0006cbd0: goto %0005edd5

0005ee55:
0005ee58: R1 := 0x12000
0005ee5e: R0 := R25
0005ee64: R1 := R1 + 0x7D8
0005ee69: R30 := 0xB98C
0005ee6b: call @strstr with return %0005ee6d

0005ee6d:
0005ee70: when R0 = 0 goto %00053b12
0006cbd1: goto %0005ee74

00053b12:
00053b17: R0 := mem[R31 + 0x68, el]:u64
00053b1e: R0 := mem[R0 + 0xF78, el]:u64
00053b25: R0 := pad:64[mem[R0, el]:u32]
00053b2c: when 31:0[R0] <> 0 goto %00053b2a
0006cbd2: goto %00053b72

00053b2a:
00053b33: R2 := R25
00053b38: R1 := 0x12000
00053b3e: R1 := R1 + 0x758
00053b43: R0 := 1
00053b48: R30 := 0xBD84
00053b4a: call @__printf_chk with return %00053b4c

00053b4c:
00053b4f: R19 := 0xFFFFFFFC
00053b55: R0 := R25
00053b5a: R30 := 0xBD90
00053b5c: call @free with return %00053b5e

00053b5e:
00053b62: #840 := R31 + 0x50
00053b67: R27 := mem[#840, el]:u64
00053b6c: R28 := mem[#840 + 8, el]:u64
00053b70: goto %000536b9

00053b72:
00053b76: R0 := R25
00053b7b: R19 := 0xFFFFFFFC
00053b80: R30 := 0xBD50
00053b82: call @free with return %00053b84

00053b84:
00053b88: #841 := R31 + 0x50
00053b8d: R27 := mem[#841, el]:u64
00053b92: R28 := mem[#841 + 8, el]:u64
00053b96: goto %000536b9

0005ee74:
0005ee77: V0 := 0
0005ee7c: R0 := 1
0005ee84: mem := mem with [R20, el]:u32 <- 31:0[R0]
0005ee8a: R0 := R27
0005ee91: mem := mem with [R20 + 0x1C, el]:u32 <- 0
0005ee98: mem := mem with [R20 + 0x48, el]:u64 <- 0
0005eea0: mem := mem with [R20 + 0x28, el]:u128 <- V0
0005eea8: mem := mem with [R20 + 0x38, el]:u128 <- V0
0005eead: R30 := 0xB9B4
0005eeaf: call @strdup with return %0005eeb1

0005eeb1:
0005eeb5: R1 := R28
0005eebd: mem := mem with [R20 + 0x28, el]:u64 <- R0
0005eec3: R2 := R19
0005eec8: R0 := 0
0005eecd: R30 := 0xB9C8
0005eecf: call @strtok_r with return %0005eed1

0005eed1:
0005eed5: when R0 = 0 goto %0005eed3
0006cbd3: goto %0005efd2

0005efd2:
0005efd5: R30 := 0xB9D0
0005efd7: call @strdup with return %0005efd9

0005efd9:
0005efdf: mem := mem with [R20 + 0x30, el]:u64 <- R0
0006cbd4: goto %0005eed3

0005eed3:
0005eedc: R2 := R19
0005eee2: R1 := R26 + 0x178
0005eee7: R0 := 0
0005eeec: R30 := 0xB9E4
0005eeee: call @strtok_r with return %0005eef0

0005eef0:
0005eef4: when R0 = 0 goto %0005eef2
0006cbd5: goto %0005efc3

0005efc3:
0005efc6: R30 := 0xB9EC
0005efc8: call @strdup with return %0005efca

0005efca:
0005efd0: mem := mem with [R20 + 0x48, el]:u64 <- R0
0006cbd6: goto %0005eef2

0005eef2:
0005eefc: R19 := mem[R20 + 0x30, el]:u64
0005ef01: when R19 = 0 goto %00053c5a
0006cbd7: goto %0005ef05

00053c5a:
00053c5e: R0 := R25
00053c63: R19 := 0xFFFFFFFD
00053c68: R30 := 0xBE6C
00053c6a: call @free with return %00053c6c

00053c6c:
00053c70: #845 := R31 + 0x50
00053c75: R27 := mem[#845, el]:u64
00053c7a: R28 := mem[#845 + 8, el]:u64
00053c7e: goto %000536b9

0005ef05:
0005ef0a: R0 := mem[R20 + 0x48, el]:u64
0005ef0f: when R0 = 0 goto %00053c80
0006cbd8: goto %0005ef13

00053c80:
00053c84: R0 := R25
00053c89: R30 := 0xBE7C
00053c8b: call @free with return %00053c8d

00053c8d:
00053c92: R0 := mem[R31 + 0x88, el]:u64
00053c97: R19 := 0xFFFFFFFD
00053c9c: R30 := 0xBE88
00053c9e: call @free with return %00053ca0

00053ca0:
00053ca4: #846 := R31 + 0x50
00053ca9: R27 := mem[#846, el]:u64
00053cae: R28 := mem[#846 + 8, el]:u64
00053cb2: goto %000536c7

0005ef13:
0005ef17: R0 := R19
0005ef1c: R1 := 0x12000
0005ef22: R1 := R1 + 0x750
0005ef27: R30 := 0xBA10
0005ef29: call @strstr with return %0005ef2b

0005ef2b:
0005ef2f: #1425 := R0 + 0
0005ef34: VF := extend:65[#1425] <> extend:65[R0] + 0
0005ef39: CF := pad:65[#1425] <> pad:65[R0] - 0x10000000000000000
0005ef3d: ZF := #1425 = 0
0005ef41: NF := 63:63[#1425]
0005ef47: R0 := R0 + 3
0005ef55: when ZF <> 1 goto %0005ef4d
0005ef56: goto %0005ef51

0005ef51:
0005ef52: R19 := R19
0005ef58: goto %0005ef54

0005ef4d:
0005ef4e: R19 := R0
0005ef57: goto %0005ef54

0005ef54:
0005ef5d: R1 := 0x2F
0005ef63: R0 := R19
0005ef68: R30 := 0xBA28
0005ef6a: call @strchr with return %0005ef6c

0005ef6c:
0005ef72: mem := mem with [R31 + 0x90, el]:u64 <- R0
0005ef78: R27 := R0
0005ef7d: when R0 = 0 goto %0005391f
0006cbd9: goto %0005ef81

0005391f:
00053923: R0 := R19
00053928: R30 := 0xBE38
0005392a: call @strlen with return %0005392c

0005392c:
00053930: R2 := pad:64[31:0[R0]]
00053935: R1 := 0
0005393b: R0 := R19
00053940: R30 := 0xBE48
00053942: call @substr with return %00053944

00053944:
0005394a: mem := mem with [R31 + 0x78, el]:u64 <- R0
0005394f: R0 := 0x12000
00053955: R0 := R0 + 0x508
0005395a: R30 := 0xBE58
0005395c: call @strdup with return %0005395e

0005395e:
00053964: mem := mem with [R20 + 0x38, el]:u64 <- R0
00053969: goto %00053967

0005ef81:
0005ef86: R2 := pad:64[31:0[R0] + ~31:0[R19] + 1]
0005ef8b: R1 := 0
0005ef91: R0 := R19
0005ef96: R30 := 0xBA44
0005ef98: call @substr with return %0005ef9a

0005ef9a:
0005ef9e: R1 := R0
0005efa3: R27 := 0
0005efaa: R0 := mem[R31 + 0x90, el]:u64
0005efb2: mem := mem with [R31 + 0x78, el]:u64 <- R1
0005efb7: R30 := 0xBA58
0005efb9: call @strdup with return %0005efbb

0005efbb:
0005efc1: mem := mem with [R20 + 0x38, el]:u64 <- R0
0006cbda: goto %00053967

00053967:
0005396d: R28 := 0x12000
00053973: R28 := R28 + 0x728
0006cbdb: goto %00053977

00053977:
0005397b: R2 := R23
00053981: R1 := R24
00053987: R0 := pad:64[31:0[R21]]
0005398c: R30 := 0xBA78
0005398e: call @so_recvln with return %00053990

00053990:
00053994: R19 := pad:64[31:0[R0]]
0005399b: R0 := mem[R31 + 0x88, el]:u64
000539a0: R30 := 0xBA84
000539a2: call @trimr with return %000539a4

000539a4:
000539a8: #835 := 31:0[R19] + 0
000539ad: VF := extend:33[#835] <> extend:33[31:0[R19]] + 0
000539b2: CF := pad:33[#835] <> pad:33[31:0[R19]] - 0x100000000
000539b6: ZF := #835 = 0
000539ba: NF := 31:31[#835]
000539c2: when ~(NF = VF & ~ZF) goto %000539c0
0006cbdc: goto %00053a14

00053a14:
00053a19: R26 := mem[R31 + 0x88, el]:u64
00053a1f: R1 := R28
00053a25: R0 := R26
00053a2a: R30 := 0xBA9C
00053a2c: call @strcspn with return %00053a2e

00053a2e:
00053a32: R2 := R0
00053a38: R0 := R26
00053a40: mem := mem with [R31 + 0x60, el]:u64 <- R2
00053a45: R30 := 0xBAAC
00053a47: call @strlen with return %00053a49

00053a49:
00053a4e: R2 := mem[R31 + 0x60, el]:u64
00053a54: #836 := ~R0
00053a59: #837 := R2 + ~R0 + 1
00053a5f: VF := extend:65[#837] <> extend:65[R2] + extend:65[#836] + 1
00053a65: CF := pad:65[#837] <> pad:65[R2] + pad:65[#836] + 1
00053a69: ZF := #837 = 0
00053a6d: NF := 63:63[#837]
00053a73: when ZF <> 1 goto %00053a71
0006cbdd: goto %00053b00

00053a71:
00053a7a: #838 := ~extend:64[31:0[R2]]
00053a7f: #839 := R0 + ~extend:64[31:0[R2]] + 1
00053a85: VF := extend:65[#839] <> extend:65[R0] + extend:65[#838] + 1
00053a8b: CF := pad:65[#839] <> pad:65[R0] + pad:65[#838] + 1
00053a8f: ZF := #839 = 0
00053a93: NF := 63:63[#839]
00053a9a: mem := mem with [R31 + 0x60, el]:u64 <- 0
00053aa1: R0 := mem[R20 + 8, el]:u64
00053aa9: mem := mem with [R31 + 0x70, el]:u64 <- R0
00053aaf: when ZF goto %00053aad
0006cbde: goto %00053c39

00053c39:
00053c3d: R0 := R26
00053c42: R1 := 0
00053c47: R30 := 0xBCD4
00053c49: call @substr with return %00053c4b

00053c4b:
00053c51: mem := mem with [R31 + 0x60, el]:u64 <- R0
00053c58: R26 := mem[R31 + 0x88, el]:u64
0006cbdf: goto %00053aad

00053aad:
00053ab6: R0 := R26
00053abb: R1 := 0x3A
00053ac0: R30 := 0xBCE8
00053ac2: call @strchr with return %00053ac4

00053ac4:
00053ac8: R2 := R0
00053ace: when R0 = 0 goto %00053acc
0006cbe0: goto %00053bd2

00053bd2:
00053bd7: R1 := pad:64[mem[R0 + 1]]
00053bdd: R0 := R0 + 1
00053be3: #842 := 31:0[R1] - 0x20
00053be8: VF := extend:33[#842] <> extend:33[31:0[R1]] - 0x20
00053bed: CF := pad:33[#842] <> pad:33[31:0[R1]] + 0xFFFFFFE0
00053bf1: ZF := #842 = 0
00053bf5: NF := 31:31[#842]
00053bfb: when ZF <> 1 goto %00053bf9
0006cbe1: goto %00053c0b

00053c0b:
00053c0f: #843 := R0 + 1
00053c14: R1 := pad:64[mem[#843]]
00053c18: R0 := #843
00053c1e: #844 := 31:0[R1] - 0x20
00053c23: VF := extend:33[#844] <> extend:33[31:0[R1]] - 0x20
00053c28: CF := pad:33[#844] <> pad:33[31:0[R1]] + 0xFFFFFFE0
00053c2c: ZF := #844 = 0
00053c30: NF := 31:31[#844]
00053c35: when ZF goto %00053c0b
0006cbe2: goto %00053bf9

00053bf9:
00053c01: R30 := 0xBD10
00053c03: call @strdup with return %00053c05

00053c05:
00053c09: R2 := R0
0006cbe3: goto %00053acc

00053acc:
00053ad6: R1 := mem[R31 + 0x60, el]:u64
00053adb: R4 := 0
00053ae2: R0 := mem[R31 + 0x70, el]:u64
00053ae7: R3 := 0
00053aec: R30 := 0xBD28
00053aee: call @hlist_add with return %00053af0

00053af0:
00053af6: mem := mem with [R20 + 8, el]:u64 <- R0
00053afd: R26 := mem[R31 + 0x88, el]:u64
00053b02: goto %00053b00

00053b00:
00053b08: R0 := pad:64[mem[R26]]
00053b0e: when 31:0[R0] <> 0 goto %00053977
0006cbe4: goto %000539c0

000539c0:
000539ca: R0 := pad:64[mem[R20, el]:u32]
000539cf: when 31:0[R0] = 0 goto %0005387a
0006cbe5: goto %000539d3

000539d3:
000539d8: R1 := mem[R31 + 0x78, el]:u64
000539de: when R1 = 0 goto %000539dc
0006cbe6: goto %00053a05

00053a05:
00053a0a: R0 := pad:64[mem[R1]]
00053a10: when 31:0[R0] <> 0 goto %000537dd
0006cbe7: goto %000539dc

000537dd:
000537e1: R0 := R1
000537e6: R30 := 0xBDB4
000537e8: call @strdup with return %000537ea

000537ea:
000537f0: mem := mem with [R20 + 0x40, el]:u64 <- R0
000537f5: R23 := 0x12000
000537fc: R0 := mem[R20 + 8, el]:u64
00053802: R23 := R23 + 0x780
00053808: R1 := R23
0005380d: R30 := 0xBDCC
0005380f: call @hlist_get with return %00053811

00053811:
00053815: when R0 = 0 goto %00053813
0006cbe8: goto %00053847

00053813:
0005381d: R0 := mem[R20 + 8, el]:u64
00053822: R4 := 1
00053829: R2 := mem[R31 + 0x78, el]:u64
0005382f: R1 := R23
00053835: R3 := pad:64[31:0[R4]]
0005383a: R30 := 0xBEE4
0005383c: call @hlist_add with return %0005383e

0005383e:
00053844: mem := mem with [R20 + 8, el]:u64 <- R0
00053849: goto %00053847

00053847:
0005384f: R23 := mem[R20 + 0x40, el]:u64
00053855: when R23 = 0 goto %00053853
0006cbe9: goto %00053d2e

00053d2e:
00053d32: R0 := R23
00053d37: R1 := 0x3A
00053d3c: R30 := 0xBDE4
00053d3e: call @strchr with return %00053d40

00053d40:
00053d43: when R0 = 0 goto %00053853
0006cbea: goto %00053d47

00053853:
0005385d: R0 := mem[R20 + 0x30, el]:u64
00053863: when R0 = 0 goto %00053861
0006cbeb: goto %00053cc3

00053cc3:
00053cc6: R1 := 0x12000
00053ccb: R2 := 5
00053cd1: R1 := R1 + 0x7B0
00053cd6: R30 := 0xBEA8
00053cd9: call @strncasecmp with return %00053cdb

00053cdb:
00053cdf: #847 := 31:0[R0] + 0
00053ce4: VF := extend:33[#847] <> extend:33[31:0[R0]] + 0
00053ce9: CF := pad:33[#847] <> pad:33[31:0[R0]] - 0x100000000
00053ced: ZF := #847 = 0
00053cf1: NF := 31:31[#847]
00053cf6: R1 := 0x50
00053cfb: R0 := 0x1BB
00053d09: when ZF goto %00053d01
00053d0a: goto %00053d05

00053d05:
00053d06: R0 := pad:64[31:0[R1]]
00053d0c: goto %00053d08

00053d01:
00053d02: R0 := pad:64[31:0[R0]]
00053d0b: goto %00053d08

00053d08:
00053d14: mem := mem with [R20 + 0x20, el]:u32 <- 31:0[R0]
00053d1b: R0 := pad:64[mem[R23]]
00053d21: when 31:0[R0] <> 0 goto %0005387a
0006cbec: goto %00053d25

00053d25:
00053d28: R19 := 0xFFFFFFFB
00053d2c: goto %0005387a

00053d47:
00053d4c: mem := mem with [R0] <- 0
00053d50: R0 := R0 + 1
00053d55: R2 := 0xA
00053d5a: R1 := 0
00053d5f: R30 := 0xBDF8
00053d61: call @strtol with return %00053d63

00053d63:
00053d69: mem := mem with [R20 + 0x20, el]:u32 <- 31:0[R0]
00053d70: R23 := mem[R20 + 0x40, el]:u64
0006cbed: goto %00053861

00053861:
0005386b: R0 := pad:64[mem[R23]]
00053871: when 31:0[R0] = 0 goto %0005386f
0006cbee: goto %00053cb4

00053cb4:
00053cb9: R0 := pad:64[mem[R20 + 0x20, el]:u32]
00053cbf: when 31:0[R0] <> 0 goto %0005387a
0006cbef: goto %0005386f

0005386f:
00053877: R19 := 0xFFFFFFFB
0005387c: goto %0005387a

000539dc:
000539e6: R0 := mem[R31 + 0x68, el]:u64
000539eb: R19 := 0xFFFFFFFA
000539f2: R0 := mem[R0 + 0xF78, el]:u64
000539f9: R0 := pad:64[mem[R0, el]:u32]
000539ff: when 31:0[R0] <> 0 goto %000538fe
0006cbf0: goto %00053a03

000538fe:
00053902: R2 := R25
00053907: R1 := 0x12000
0005390c: R0 := 1
00053912: R1 := R1 + 0x788
00053917: R30 := 0xBE2C
00053919: call @__printf_chk with return %0005391b

0005391b:
0005391d: goto %0005387a

00053a03:
0006cbf1: goto %0005387a

0005387a:
00053881: when R25 = 0 goto %0005387f
0006cbf2: goto %000538f1

000538f1:
000538f5: R0 := R25
000538fa: R30 := 0xBAFC
000538fc: call @free with return %0005387f

0005387f:
00053888: when R27 = 0 goto %00053886
0006cbf3: goto %000538e4

000538e4:
000538e8: R0 := R27
000538ed: R30 := 0xBB08
000538ef: call @free with return %00053886

00053886:
00053890: R0 := mem[R31 + 0x78, el]:u64
00053896: when R0 = 0 goto %00053894
0006cbf4: goto %000538dd

000538dd:
000538e0: R30 := 0xBB14
000538e2: call @free with return %00053894

00053894:
0005389e: R0 := mem[R31 + 0x88, el]:u64
000538a3: R30 := 0xBB1C
000538a5: call @free with return %000538a7

000538a7:
000538ab: #833 := 31:0[R19] + 0
000538b0: VF := extend:33[#833] <> extend:33[31:0[R19]] + 0
000538b5: CF := pad:33[#833] <> pad:33[31:0[R19]] - 0x100000000
000538b9: ZF := #833 = 0
000538bd: NF := 31:31[#833]
000538c2: R0 := 1
000538c8: #834 := R31 + 0x50
000538cd: R27 := mem[#834, el]:u64
000538d2: R28 := mem[#834 + 8, el]:u64
000538d9: when ~(NF = VF & ~ZF) goto %000536c7
0006cbf5: goto %000536de

000536de:
000536e8: R22 := mem[R22 + 0xFB8, el]:u64
000536ef: R1 := mem[R31 + 0x98, el]:u64
000536f6: R2 := mem[R22, el]:u64
000536fc: #828 := ~R2
00053701: #829 := R1 + ~R2 + 1
00053707: VF := extend:65[#829] <> extend:65[R1] + extend:65[#828] + 1
0005370d: CF := pad:65[#829] <> pad:65[R1] + pad:65[#828] + 1
00053711: ZF := #829 = 0
00053715: NF := 63:63[#829]
00053719: R1 := #829
0005371e: R2 := 0
00053724: when ZF <> 1 goto %00053722
0006cbf6: goto %0005ebf3

00053722:
0005372b: #830 := R31 + 0x50
00053731: mem := mem with [#830, el]:u64 <- R27
00053737: mem := mem with [#830 + 8, el]:u64 <- R28
0005373c: R30 := 0xBEF4
0005373e: call @__stack_chk_fail with return %00053740

00053740:
00053743: R0 := 0x14000
00053749: R0 := R0 + 0xD00
0005374e: R30 := 0xBF00
00053750: call @strdup with return %00053752

00053752:
00053758: mem := mem with [R20 + 0x50, el]:u64 <- R0
0005375d: goto %0005375b

0005375b:
00053762: R0 := R27
00053767: R30 := 0xBBF4
00053769: call @strlen with return %0005376b

0005376b:
0005376f: #831 := R0 - 3
00053774: VF := extend:65[#831] <> extend:65[R0] - 3
00053779: CF := pad:65[#831] <> pad:65[R0] + 0xFFFFFFFFFFFFFFFD
0005377d: ZF := #831 = 0
00053781: NF := 63:63[#831]
00053787: when ZF goto %00053785
0006cbf7: goto %000537ab

00053785:
0005378e: R0 := R27
00053793: R2 := 0xA
00053798: R1 := 0
0005379d: R30 := 0xBCA4
0005379f: call @strtol with return %000537a1

000537a1:
000537a7: mem := mem with [R20 + 0x10, el]:u32 <- 31:0[R0]
000537ad: when 31:0[R0] = 0 goto %000537ab
0006cbf8: goto %00053db3

00053db3:
00053db8: mem := mem with [R31 + 0x78, el]:u64 <- 0
00053dbc: goto %00053967

000537ab:
000537b4: when R25 = 0 goto %000537b2
0006cbf9: goto %00053d72

000537b2:
000537bb: R0 := R27
000537c0: R19 := 0xFFFFFFFE
000537c5: R30 := 0xBDA4
000537c7: call @free with return %000537c9

000537c9:
000537cd: #832 := R31 + 0x50
000537d2: R27 := mem[#832, el]:u64
000537d7: R28 := mem[#832 + 8, el]:u64
000537db: goto %000536b9

000536b9:
000536be: R0 := mem[R31 + 0x88, el]:u64
000536c3: R30 := 0xBC38
000536c5: call @free with return %000536c7

00053d72:
00053d76: R0 := R25
00053d7b: R30 := 0xBC08
00053d7d: call @free with return %00053d7f

00053d7f:
00053d83: R0 := R27
0006cbfa: goto %00053d85

00053d85:
00053d88: R30 := 0xBC10
00053d8a: call @free with return %00053d8c

00053d8c:
00053d8f: R19 := 0xFFFFFFFE
00053d96: R0 := mem[R31 + 0x88, el]:u64
00053d9b: R30 := 0xBC1C
00053d9d: call @free with return %00053d9f

00053d9f:
00053da3: #848 := R31 + 0x50
00053da8: R27 := mem[#848, el]:u64
00053dad: R28 := mem[#848 + 8, el]:u64
00053db1: goto %000536c7

000536c7:
000536cc: R0 := mem[R31 + 0x68, el]:u64
000536d3: R26 := mem[R0 + 0xF78, el]:u64
000536da: R0 := pad:64[mem[R26, el]:u32]
000536e0: when 31:0[R0] = 0 goto %000536de
0006cbfb: goto %0005efe1

0005efe1:
0005efe5: R3 := pad:64[31:0[R19]]
0005efeb: R2 := pad:64[31:0[R21]]
0005eff0: R1 := 0x12000
0005eff5: R0 := 1
0005effb: R1 := R1 + 0x7B8
0005f000: R30 := 0xBC60
0005f002: call @__printf_chk with return %0005f004

0005f004:
0005f007: R0 := 0
0005f00b: goto %000536de

0005ebf3:
0005ebf7: #1416 := R31 + 0x10
0005ebfc: R19 := mem[#1416, el]:u64
0005ec01: R20 := mem[#1416 + 8, el]:u64
0005ec07: #1417 := R31 + 0x20
0005ec0c: R21 := mem[#1417, el]:u64
0005ec11: R22 := mem[#1417 + 8, el]:u64
0005ec17: #1418 := R31 + 0x30
0005ec1c: R23 := mem[#1418, el]:u64
0005ec21: R24 := mem[#1418 + 8, el]:u64
0005ec27: #1419 := R31 + 0x40
0005ec2c: R25 := mem[#1419, el]:u64
0005ec31: R26 := mem[#1419 + 8, el]:u64
0005ec38: R29 := mem[R31, el]:u64
0005ec3d: R30 := mem[R31 + 8, el]:u64
0005ec41: R31 := R31 + 0xA0
0005ec46: call R30 with noreturn

0006cbfc: sub headers_send(headers_send_result)
0006d0ff: headers_send_result :: out u32 = low:32[R0]

00053dbe:
00053dc2: #849 := R31 - 0x40
00053dc8: mem := mem with [#849, el]:u64 <- R29
00053dce: mem := mem with [#849 + 8, el]:u64 <- R30
00053dd2: R31 := #849
00053dd8: R29 := R31
00053dde: #850 := R31 + 0x20
00053de4: mem := mem with [#850, el]:u64 <- R21
00053dea: mem := mem with [#850 + 8, el]:u64 <- R22
00053df0: R22 := pad:64[31:0[R0]]
00053df7: R0 := pad:64[mem[R1, el]:u32]
00053dfd: #851 := R31 + 0x10
00053e03: mem := mem with [#851, el]:u64 <- R19
00053e09: mem := mem with [#851 + 8, el]:u64 <- R20
00053e11: mem := mem with [R31 + 0x30, el]:u64 <- R23
00053e17: R23 := R1
00053e1d: when 31:0[R0] = 0 goto %00053e1b
0006cbfd: goto %0005ebaf

00053e1b:
00053e25: R0 := mem[R1 + 0x48, el]:u64
00053e2a: R30 := 0xC048
00053e2c: call @strlen with return %00053e2e

00053e2e:
00053e32: R21 := R0
00053e39: R0 := mem[R23 + 0x50, el]:u64
00053e3e: R30 := 0xC054
00053e40: call @strlen with return %00053e42

00053e42:
00053e47: R21 := pad:64[31:0[R21] + 31:0[R0]]
00053e4d: R21 := pad:64[31:0[R21] + 0x14]
00053e52: goto %00053e50

0005ebaf:
0005ebb4: R0 := mem[R1 + 0x28, el]:u64
0005ebb9: R30 := 0xBF34
0005ebbb: call @strlen with return %0005ebbd

0005ebbd:
0005ebc1: R19 := R0
0005ebc8: R0 := mem[R23 + 0x30, el]:u64
0005ebcd: R30 := 0xBF40
0005ebcf: call @strlen with return %0005ebd1

0005ebd1:
0005ebd6: R19 := pad:64[31:0[R19] + 31:0[R0]]
0005ebdd: R0 := mem[R23 + 0x48, el]:u64
0005ebe2: R30 := 0xBF4C
0005ebe4: call @strlen with return %0005ebe6

0005ebe6:
0005ebea: R21 := pad:64[31:0[R0] + 0x14]
0005ebf1: R21 := pad:64[31:0[R21] + 31:0[R19]]
0006cbfe: goto %00053e50

00053e50:
00053e58: R20 := mem[R23 + 8, el]:u64
00053e5e: when R20 = 0 goto %00053e5c
0006cbff: goto %0005eb68

0005eb68:
0006cc00: goto %0005eb6a

0005eb6a:
0005eb6f: R0 := mem[R20, el]:u64
0005eb75: R21 := pad:64[31:0[R21] + 0x14]
0005eb7a: R30 := 0xBF6C
0005eb7c: call @strlen with return %0005eb7e

0005eb7e:
0005eb82: R19 := R0
0005eb89: R0 := mem[R20 + 8, el]:u64
0005eb8e: R30 := 0xBF78
0005eb90: call @strlen with return %0005eb92

0005eb92:
0005eb97: R19 := pad:64[31:0[R19] + 31:0[R0]]
0005eb9e: R20 := mem[R20 + 0x18, el]:u64
0005eba5: R21 := pad:64[31:0[R19] + 31:0[R21]]
0005ebab: when R20 <> 0 goto %0005eb6a
0006cc01: goto %00053e5c

00053e5c:
00053e66: R0 :=

00053e6b: R30 := 0xBF90
00053e6d: call @new with return %00053e6f

00053e6f:
00053e74: R20 := pad:64[mem[R23, el]:u32]
00053e7a: R21 := R0
00053e81: when 31:0[R20] <> 0 goto %00053e7f
0006cc02: goto %0005eb1d

00053e7f:
00053e88: #852 := R23 + 0x28
00053e8d: R4 := mem[#852, el]:u64
00053e92: R5 := mem[#852 + 8, el]:u64
00053e97: R3 := 0x12000
00053e9e: R6 := mem[R23 + 0x48, el]:u64
00053ea4: R3 := R3 + 0x7E0
00053ea9: R2 := 0xFFFFFFFFFFFFFFFF
00053eae: R1 := 1
00053eb3: R30 := 0xC0D0
00053eb5: call @__sprintf_chk with return %00053eb7

00053eb7:
00053ebb: R20 := pad:64[31:0[R0]]
00053ec0: goto %00053ebe

0005eb1d:
0005eb22: R1 := pad:64[mem[R23 + 0x14, el]:u32]
0005eb28: when 31:0[R1] = 0 goto %0005eb26
0006cc03: goto %00053ebe

0005eb26:
0005eb2f: #1415 := R23 + 0x48
0005eb34: R4 := mem[#1415, el]:u64
0005eb39: R6 := mem[#1415 + 8, el]:u64
0005eb3e: R3 := 0x12000
0005eb45: R5 := pad:64[mem[R23 + 0x10, el]:u32]
0005eb4b: R3 := R3 + 0x7F0
0005eb50: R2 := 0xFFFFFFFFFFFFFFFF
0005eb55: R1 := 1
0005eb5a: R30 := 0xC07C
0005eb5c: call @__sprintf_chk with return %0005eb5e

0005eb5e:
0005eb62: R20 := pad:64[31:0[R0]]
0005eb66: goto %00053ebe

00053ebe:
00053ec6: R19 := mem[R23 + 8, el]:u64
00053ecc: when R19 = 0 goto %00053eca
0006cc04: goto %0005ead0

0005ead0:
0005ead3: R23 := 0x12000
0005ead9: R23 := R23 + 0x800
0006cc05: goto %0005eadd

0005eadd:
0005eae2: R4 := mem[R19, el]:u64
0005eae7: R5 := mem[R19 + 8, el]:u64
0005eaee: R0 := R21 + extend:64[31:0[R20]]
0005eaf4: R3 := R23
0005eaf9: R2 := 0xFFFFFFFFFFFFFFFF
0005eafe: R1 := 1
0005eb03: R30 := 0xBFD0
0005eb05: call @__sprintf_chk with return %0005eb07

0005eb07:
0005eb0c: R20 := pad:64[31:0[R20] + 31:0[R0]]
0005eb13: R19 := mem[R19 + 0x18, el]:u64
0005eb19: when R19 <> 0 goto %0005eadd
0006cc06: goto %00053eca

00053eca:
00053ed3: R0 := R21
00053ed8: R30 := 0xBFE4
00053eda: call @strlen with return %00053edc

00053edc:
00053edf: R1 := 0x12000
00053ee5: R1 := R1 + 0x7E8
00053eeb: R2 := R0
00053ef2: R3 := R21 + R0
00053ef8: R0 := pad:64[31:0[R22]]
00053eff: R4 := pad:64[mem[R1, el]:u16]
00053f06: R1 := pad:64[mem[R1 + 2]]
00053f0f: mem := mem with [R21 + R2, el]:u16 <- 15:0[R4]
00053f17: mem := mem with [R3 + 2] <- 7:0[R1]
00053f1c: R30 := 0xC00C
00053f1e: call @so_closed with return %00053f20

00053f20:
00053f24: when 31:0[R0] = 0 goto %00053f22
0006cc07: goto %0005eabe

00053f22:
00053f2b: R20 := pad:64[31:0[R20] + 2]
00053f31: R1 := R21
00053f37: R0 := pad:64[31:0[R22]]
00053f3e: R2 :=

00053f43: R30 := 0xC0EC
00053f46: call @write with return %00053f48

00053f48:
00053f4c: R19 := R0
00053f52: R0 := R21
00053f58: R21 := pad:64[31:0[R19]]
00053f5d: R30 := 0xC0FC
00053f5f: call @free with return %00053f61

00053f61:
00053f65: #853 := 31:0[R19] + 0
00053f6a: VF := extend:33[#853] <> extend:33[31:0[R19]] + 0
00053f6f: CF := pad:33[#853] <> pad:33[31:0[R19]] - 0x100000000
00053f73: ZF := #853 = 0
00053f77: NF := 31:31[#853]
00053f7f: when ~(NF = VF & ~ZF) goto %00053f7d
0006cc08: goto %0005403d

0005403d:
00054041: #858 := ~31:0[R19]
00054046: #859 := 31:0[R20] + ~31:0[R19] + 1
0005404c: VF := extend:33[#859] <> extend:33[31:0[R20]] + extend:33[#858] + 1
00054052: CF := pad:33[#859] <> pad:33[31:0[R20]] + pad:33[#858] + 1
00054056: ZF := #859 = 0
0005405a: NF := 31:31[#859]
0005405f: R0 := 1
00054064: when ZF <> 1 goto %00053f7d
0006cc09: goto %00054068

00054068:
0005406c: #860 := R31 + 0x10
00054071: R19 := mem[#860, el]:u64
00054076: R20 := mem[#860 + 8, el]:u64
0005407c: #861 := R31 + 0x20
00054081: R21 := mem[#861, el]:u64
00054086: R22 := mem[#861 + 8, el]:u64
0005408d: R23 := mem[R31 + 0x30, el]:u64
00054094: R29 := mem[R31, el]:u64
00054099: R30 := mem[R31 + 8, el]:u64
0005409d: R31 := R31 + 0x40
000540a2: call R30 with noreturn

0005eabe:
0005eac2: R0 := R21
0005eac7: R21 := 0xFFFFFC19
0005eacc: R30 := 0xC01C
0005eace: call @free with return %00053f7d

00053f7d:
00053f85: R0 := 0x27000
00053f8c: R0 := mem[R0 + 0xF78, el]:u64
00053f93: R0 := pad:64[mem[R0, el]:u32]
00053f9a: when 31:0[R0] <> 0 goto %00053f98
0006cc0a: goto %00054001

00053f98:
00053fa1: R3 := pad:64[31:0[R21]]
00053fa7: R2 := pad:64[31:0[R22]]
00053fac: R1 := 0x12000
00053fb1: R0 := 1
00053fb7: R1 := R1 + 0x810
00053fbc: R30 := 0xC09C
00053fbe: call @__printf_chk with return %00053fc0

00053fc0:
00053fc3: R0 := 0
00053fc9: #854 := R31 + 0x10
00053fce: R19 := mem[#854, el]:u64
00053fd3: R20 := mem[#854 + 8, el]:u64
00053fd9: #855 := R31 + 0x20
00053fde: R21 := mem[#855, el]:u64
00053fe3: R22 := mem[#855 + 8, el]:u64
00053fea: R23 := mem[R31 + 0x30, el]:u64
00053ff1: R29 := mem[R31, el]:u64
00053ff6: R30 := mem[R31 + 8, el]:u64
00053ffa: R31 := R31 + 0x40
00053fff: call R30 with noreturn

00054001:
00054005: #856 := R31 + 0x10
0005400a: R19 := mem[#856, el]:u64
0005400f: R20 := mem[#856 + 8, el]:u64
00054015: #857 := R31 + 0x20
0005401a: R21 := mem[#857, el]:u64
0005401f: R22 := mem[#857 + 8, el]:u64
00054026: R23 := mem[R31 + 0x30, el]:u64
0005402d: R29 := mem[R31, el]:u64
00054032: R30 := mem[R31 + 8, el]:u64
00054036: R31 := R31 + 0x40
0005403b: call R30 with noreturn

0006cc0b: sub hlist_add(hlist_add_result)
0006d100: hlist_add_result :: out u32 = low:32[R0]

0004bfd9:
0004bfdd: #409 := R31 - 0x40
0004bfe3: mem := mem with [#409, el]:u64 <- R29
0004bfe9: mem := mem with [#409 + 8, el]:u64 <- R30
0004bfed: R31 := #409
0004bff3: #410 := R1 + 0
0004bff8: VF := extend:65[#410] <> extend:65[R1] + 0
0004bffd: CF := pad:65[#410] <> pad:65[R1] - 0x10000000000000000
0004c001: ZF := #410 = 0
0004c005: NF := 63:63[#410]
0004c00b: #411 := R2 + 0
0004c031: goto %0004c02b

0004c02b:
0004c02d: when ZF <> 1 goto %0004c010
0004c02e: goto %0004c020

0004c020:
0004c021: VF := 0
0004c024: CF := 0
0004c027: ZF := 1
0004c02a: NF := 0
0004c030: goto %0004c02c

0004c010:
0004c011: VF := extend:65[#411] <> extend:65[R2] + 0
0004c016: CF := pad:65[#411] <> pad:65[R2] - 0x10000000000000000
0004c01a: ZF := #411 = 0
0004c01e: NF := 63:63[#411]
0004c02f: goto %0004c02c

0004c02c:
0004c037: R29 := R31
0004c03d: #412 := R31 + 0x10
0004c043: mem := mem with [#412, el]:u64 <- R19
0004c049: mem := mem with [#412 + 8, el]:u64 <- R20
0004c04f: R19 := R0
0004c055: when ZF <> 1 goto %0004c053
0006cc0c: goto %0004c14b

0004c053:
0004c05c: R20 := R2
0004c061: R0 := 0x20
0004c067: #413 := R31 + 0x20
0004c06d: mem := mem with [#413, el]:u64 <- R21
0004c073: mem := mem with [#413 + 8, el]:u64 <- R22
0004c079: R22 := pad:64[31:0[R3]]
0004c07f: R21 := R1
0004c087: mem := mem with [R31 + 0x30, el]:u64 <- R23
0004c08d: R23 := pad:64[31:0[R4]]
0004c092: R30 := 0x4BF4
0004c094: call @malloc with return %0004c096

0004c096:
0004c09a: #414 := 31:0[R22] - 1
0004c09f: VF := extend:33[#414] <> extend:33[31:0[R22]] - 1
0004c0a4: CF := pad:33[#414] <> pad:33[31:0[R22]] + 0xFFFFFFFF
0004c0a8: ZF := #414 = 0
0004c0ac: NF := 31:31[#414]
0004c0b2: R22 := R0
0004c0b8: when ZF goto %0004c0b6
0006cc0d: goto %0004c0cf

0004c0b6:
0004c0bf: R0 := R21
0004c0c4: R30 := 0x4C50
0004c0c6: call @strdup with return %0004c0c8

0004c0c8:
0004c0cc: R21 := R0
0004c0d1: goto %0004c0cf

0004c0cf:
0004c0d8: mem := mem with [R22, el]:u64 <- R21
0004c0de: #415 := 31:0[R23] - 1
0004c0e3: VF := extend:33[#415] <> extend:33[31:0[R23]] - 1
0004c0e8: CF := pad:33[#415] <> pad:33[31:0[R23]] + 0xFFFFFFFF
0004c0ec: ZF := #415 = 0
0004c0f0: NF := 31:31[#415]
0004c0f6: when ZF goto %0004c0f4
0006cc0e: goto %0004c10d

0004c0f4:
0004c0fd: R0 := R20
0004c102: R30 := 0x4C60
0004c104: call @strdup with return %0004c106

0004c106:
0004c10a: R20 := R0
0004c10f: goto %0004c10d

0004c10d:
0004c116: mem := mem with [R22 + 8, el]:u64 <- R20
0004c11d: mem := mem with [R22 + 0x10, el]:u32 <- 0
0004c124: mem := mem with [R22 + 0x18, el]:u64 <- 0
0004c12a: when R19 = 0 goto %0004c128
0006cc0f: goto %0004c484

0004c128:
0004c131: R19 := R22
0004c137: #416 := R31 + 0x20
0004c13c: R21 := mem[#416, el]:u64
0004c141: R22 := mem[#416 + 8, el]:u64
0004c148: R23 := mem[R31 + 0x30, el]:u64
0004c14d: goto %0004c14b

0004c484:
0004c488: R1 := R19
0006cc10: goto %0004c48a

0004c48a:
0004c48e: R2 := R1
0004c495: R1 := mem[R1 + 0x18, el]:u64
0004c49b: when R1 <> 0 goto %0004c48a
0006cc11: goto %0004c49f

0004c49f:
0004c4a4: R23 := mem[R31 + 0x30, el]:u64
0004c4ac: mem := mem with [R2 + 0x18, el]:u64 <- R22
0004c4b2: R0 := R19
0004c4b8: #434 := R31 + 0x10
0004c4bd: R19 := mem[#434, el]:u64
0004c4c2: R20 := mem[#434 + 8, el]:u64
0004c4c8: #435 := R31 + 0x20
0004c4cd: R21 := mem[#435, el]:u64
0004c4d2: R22 := mem[#435 + 8, el]:u64
0004c4d9: R29 := mem[R31, el]:u64
0004c4de: R30 := mem[R31 + 8, el]:u64
0004c4e2: R31 := R31 + 0x40
0004c4e7: call R30 with noreturn

0004c14b:
0004c152: R0 := R19
0004c158: #417 := R31 + 0x10
0004c15d: R19 := mem[#417, el]:u64
0004c162: R20 := mem[#417 + 8, el]:u64
0004c169: R29 := mem[R31, el]:u64
0004c16e: R30 := mem[R31 + 8, el]:u64
0004c172: R31 := R31 + 0x40
0004c177: call R30 with noreturn

0006cc12: sub hlist_count(hlist_count_result)
0006d101: hlist_count_result :: out u32 = low:32[R0]

00049e6f:
00049e73: R1 := R0
00049e78: R0 := 0
00049e7e: when R1 = 0 goto %00049e7c
0006cc13: goto %0004b0a4

0004b0a4:
0006cc14: goto %0004b0a6

0004b0a6:
0004b0ab: R1 := mem[R1 + 0x18, el]:u64
0004b0b1: R0 := pad:64[31:0[R0] + 1]
0004b0b7: when R1 <> 0 goto %0004b0a6
0006cc15: goto %00049e7c

00049e7c:
00049e84: call R30 with noreturn

0006cc16: sub hlist_del(hlist_del_result)
0006d102: hlist_del_result :: out u32 = low:32[R0]

0004c1cd:
0004c1d1: #419 := R31 - 0x40
0004c1d7: mem := mem with [#419, el]:u64 <- R29
0004c1dd: mem := mem with [#419 + 8, el]:u64 <- R30
0004c1e1: R31 := #419
0004c1e7: R29 := R31
0004c1ed: #420 := R31 + 0x30
0004c1f3: mem := mem with [#420, el]:u64 <- R23
0004c1f9: mem := mem with [#420 + 8, el]:u64 <- R24
0004c1ff: R24 := R0
0004c205: when R0 = 0 goto %0004c203
0006cc17: goto %0004c25d

0004c25d:
0004c260: R23 := 0
0004c266: #424 := R31 + 0x10
0004c26c: mem := mem with [#424, el]:u64 <- R19
0004c272: mem := mem with [#424 + 8, el]:u64 <- R20
0004c278: R19 := R0
0004c27e: #425 := R31 + 0x20
0004c284: mem := mem with [#425, el]:u64 <- R21
0004c28a: mem := mem with [#425 + 8, el]:u64 <- R22
0004c290: R22 := R1
0004c295: goto %0004c293

0004c293:
0004c29b: R21 := mem[R19, el]:u64
0004c2a1: R1 := R22
0004c2a7: R20 := R19
0004c2ad: R0 := R21
0004c2b2: R30 := 0x4D78
0004c2b4: call @strcasecmp with return %0004c2b6

0004c2b6:
0004c2bb: R19 := mem[R19 + 0x18, el]:u64
0004c2c2: when 31:0[R0] <> 0 goto %0004c2c0
0006cc18: goto %0004c2f2

0004c2f2:
0004c2f6: R0 := R21
0004c2fb: R30 := 0x4D88
0004c2fd: call @free with return %0004c2ff

0004c2ff:
0004c304: R0 := mem[R20 + 8, el]:u64
0004c309: R30 := 0x4D90
0004c30b: call @free with return %0004c30d

0004c30d:
0004c311: R0 := R20
0004c316: R30 := 0x4D98
0004c318: call @free with return %0004c31a

0004c31a:
0004c31d: when R23 = 0 goto %0004c233
0006cc19: goto %0004c321

0004c233:
0004c237: R24 := R19
0004c23d: #422 := R31 + 0x10
0004c242: R19 := mem[#422, el]:u64
0004c247: R20 := mem[#422 + 8, el]:u64
0004c24d: #423 := R31 + 0x20
0004c252: R21 := mem[#423, el]:u64
0004c257: R22 := mem[#423 + 8, el]:u64
0004c25b: goto %0004c203

0004c321:
0004c327: mem := mem with [R23 + 0x18, el]:u64 <- R19
0006cc1a: goto %0004c2cd

0004c2c0:
0004c2c9: R23 := R20
0004c2cf: when R19 = 0 goto %0004c2cd
0006cc1b: goto %0004c293

0004c2cd:
0004c2d6: #426 := R31 + 0x10
0004c2db: R19 := mem[#426, el]:u64
0004c2e0: R20 := mem[#426 + 8, el]:u64
0004c2e6: #427 := R31 + 0x20
0004c2eb: R21 := mem[#427, el]:u64
0004c2f0: R22 := mem[#427 + 8, el]:u64
0006cc1c: goto %0004c203

0004c203:
0004c20c: R0 := R24
0004c212: #421 := R31 + 0x30
0004c217: R23 := mem[#421, el]:u64
0004c21c: R24 := mem[#421 + 8, el]:u64
0004c223: R29 := mem[R31, el]:u64
0004c228: R30 := mem[R31 + 8, el]:u64
0004c22c: R31 := R31 + 0x40
0004c231: call R30 with noreturn

0006cc1d: sub hlist_dump(hlist_dump_result)
0006d103: hlist_dump_result :: out u32 = low:32[R0]

0004a13d:
0004a141: when R0 = 0 goto %0004a13f
0006cc1e: goto %0004ac26

0004a13f:
0004a147: call R30 with noreturn

0004ac26:
0004ac2a: #309 := R31 - 0x20
0004ac30: mem := mem with [#309, el]:u64 <- R29
0004ac36: mem := mem with [#309 + 8, el]:u64 <- R30
0004ac3a: R31 := #309
0004ac40: R29 := R31
0004ac46: #310 := R31 + 0x10
0004ac4c: mem := mem with [#310, el]:u64 <- R19
0004ac52: mem := mem with [#310 + 8, el]:u64 <- R20
0004ac57: R20 := 0x11000
0004ac5d: R19 := R0
0004ac63: R20 := R20 + 0x6D8
0006cc1f: goto %0004ac67

0004ac67:
0004ac6c: R2 := mem[R19, el]:u64
0004ac71: R3 := mem[R19 + 8, el]:u64
0004ac77: R1 := R20
0004ac7c: R0 := 1
0004ac81: R30 := 0x5250
0004ac84: call @__printf_chk with return %0004ac86

0004ac86:
0004ac8b: R19 := mem[R19 + 0x18, el]:u64
0004ac91: when R19 <> 0 goto %0004ac67
0006cc20: goto %0004ac95

0004ac95:
0004ac99: #311 := R31 + 0x10
0004ac9e: R19 := mem[#311, el]:u64
0004aca3: R20 := mem[#311 + 8, el]:u64
0004acaa: R29 := mem[R31, el]:u64
0004acaf: R30 := mem[R31 + 8, el]:u64
0004acb3: R31 := R31 + 0x20
0004acb8: call R30 with noreturn

0006cc21: sub hlist_dup(hlist_dup_result)
0006d104: hlist_dup_result :: out u32 = low:32[R0]

0004c179:
0004c17d: #418 := R31 - 0x40
0004c183: mem := mem with [#418, el]:u64 <- R29
0004c189: mem := mem with [#418 + 8, el]:u64 <- R30
0004c18d: R31 := #418
0004c193: R29 := R31
0004c19b: mem := mem with [R31 + 0x30, el]:u64 <- R23
0004c1a1: when R0 = 0 goto %0004c19f
0006cc22: goto %0004c329

0004c19f:
0004c1a7: R23 := 0
0004c1ad: R0 := R23
0004c1b4: R23 := mem[R31 + 0x30, el]:u64
0004c1bb: R29 := mem[R31, el]:u64
0004c1c0: R30 := mem[R31 + 8, el]:u64
0004c1c4: R31 := R31 + 0x40
0004c1c9: call R30 with noreturn

0004c329:
0004c32d: #428 := R31 + 0x10
0004c333: mem := mem with [#428, el]:u64 <- R19
0004c339: mem := mem with [#428 + 8, el]:u64 <- R20
0004c33f: R19 := R0
0004c344: R23 := 0
0004c34a: #429 := R31 + 0x20
0004c350: mem := mem with [#429, el]:u64 <- R21
0004c356: mem := mem with [#429 + 8, el]:u64 <- R22
0006cc23: goto %0004c358

0004c358:
0004c35d: R22 := mem[R19, el]:u64
0004c362: R21 := mem[R19 + 8, el]:u64
0004c368: #430 := R22 + 0
0004c36d: VF := extend:65[#430] <> extend:65[R22] + 0
0004c372: CF := pad:65[#430] <> pad:65[R22] - 0x10000000000000000
0004c376: ZF := #430 = 0
0004c37a: NF := 63:63[#430]
0004c380: #431 := R21 + 0
0004c3a6: goto %0004c3a0

0004c3a0:
0004c3a2: when ZF <> 1 goto %0004c385
0004c3a3: goto %0004c395

0004c395:
0004c396: VF := 0
0004c399: CF := 0
0004c39c: ZF := 1
0004c39f: NF := 0
0004c3a5: goto %0004c3a1

0004c385:
0004c386: VF := extend:65[#431] <> extend:65[R21] + 0
0004c38b: CF := pad:65[#431] <> pad:65[R21] - 0x10000000000000000
0004c38f: ZF := #431 = 0
0004c393: NF := 63:63[#431]
0004c3a4: goto %0004c3a1

0004c3a1:
0004c3ac: when ZF goto %0004c3aa
0006cc24: goto %0004c40a

0004c40a:
0004c40d: R0 := 0x20
0004c412: R30 := 0x4CB0
0004c414: call @malloc with return %0004c416

0004c416:
0004c41a: R20 := R0
0004c420: R0 := R22
0004c425: R30 := 0x4CBC
0004c427: call @strdup with return %0004c429

0004c429:
0004c42d: R1 := R0
0004c433: R0 := R21
0004c43b: mem := mem with [R20, el]:u64 <- R1
0004c440: R30 := 0x4CCC
0004c442: call @strdup with return %0004c444

0004c444:
0004c44a: mem := mem with [R20 + 8, el]:u64 <- R0
0004c451: mem := mem with [R20 + 0x10, el]:u32 <- 0
0004c458: mem := mem with [R20 + 0x18, el]:u64 <- 0
0004c45d: when R23 = 0 goto %0004c400
0006cc25: goto %0004c461

0004c400:
0004c404: R23 := R20
0004c408: goto %0004c3aa

0004c461:
0004c465: R1 := R23
0006cc26: goto %0004c467

0004c467:
0004c46b: R0 := R1
0004c472: R1 := mem[R1 + 0x18, el]:u64
0004c478: when R1 <> 0 goto %0004c467
0006cc27: goto %0004c47c

0004c47c:
0004c482: mem := mem with [R0 + 0x18, el]:u64 <- R20
0006cc28: goto %0004c3aa

0004c3aa:
0004c3b4: R19 := mem[R19 + 0x18, el]:u64
0004c3ba: when R19 <> 0 goto %0004c358
0006cc29: goto %0004c3be

0004c3be:
0004c3c2: R0 := R23
0004c3c8: #432 := R31 + 0x10
0004c3cd: R19 := mem[#432, el]:u64
0004c3d2: R20 := mem[#432 + 8, el]:u64
0004c3d8: #433 := R31 + 0x20
0004c3dd: R21 := mem[#433, el]:u64
0004c3e2: R22 := mem[#433 + 8, el]:u64
0004c3e9: R23 := mem[R31 + 0x30, el]:u64
0004c3f0: R29 := mem[R31, el]:u64
0004c3f5: R30 := mem[R31 + 8, el]:u64
0004c3f9: R31 := R31 + 0x40
0004c3fe: call R30 with noreturn

0006cc2a: sub hlist_free(hlist_free_result)
0006d105: hlist_free_result :: out u32 = low:32[R0]

0004a12a:
0004a12e: when R0 = 0 goto %0004a12c
0006cc2b: goto %0004acba

0004a12c:
0004a134: R0 := 0
0004a139: call R30 with noreturn

0004acba:
0004acbe: #312 := R31 - 0x20
0004acc4: mem := mem with [#312, el]:u64 <- R29
0004acca: mem := mem with [#312 + 8, el]:u64 <- R30
0004acce: R31 := #312
0004acd4: R29 := R31
0004acda: #313 := R31 + 0x10
0004ace0: mem := mem with [#313, el]:u64 <- R19
0004ace6: mem := mem with [#313 + 8, el]:u64 <- R20
0004acec: R19 := R0
0006cc2c: goto %0004acf0

0004acf0:
0004acf4: R20 := R19
0004acfb: R19 := mem[R19 + 0x18, el]:u64
0004ad02: R0 := mem[R20, el]:u64
0004ad07: R30 := 0x51F0
0004ad09: call @free with return %0004ad0b

0004ad0b:
0004ad10: R0 := mem[R20 + 8, el]:u64
0004ad15: R30 := 0x51F8
0004ad17: call @free with return %0004ad19

0004ad19:
0004ad1d: R0 := R20
0004ad22: R30 := 0x5200
0004ad24: call @free with return %0004ad26

0004ad26:
0004ad2a: when R19 <> 0 goto %0004acf0
0006cc2d: goto %0004ad2e

0004ad2e:
0004ad31: R0 := 0
0004ad37: #314 := R31 + 0x10
0004ad3c: R19 := mem[#314, el]:u64
0004ad41: R20 := mem[#314 + 8, el]:u64
0004ad48: R29 := mem[R31, el]:u64
0004ad4d: R30 := mem[R31 + 8, el]:u64
0004ad51: R31 := R31 + 0x20
0004ad56: call R30 with noreturn

0006cc2e: sub hlist_get(hlist_get_result)
0006d106: hlist_get_result :: out u32 = low:32[R0]

00049e86:
00049e8a: when R0 = 0 goto %00049e88
0006cc2f: goto %0004afe6

00049e88:
00049e90: R0 := 0
00049e95: call R30 with noreturn

0004afe6:
0004afea: #326 := R31 - 0x20
0004aff0: mem := mem with [#326, el]:u64 <- R29
0004aff6: mem := mem with [#326 + 8, el]:u64 <- R30
0004affa: R31 := #326
0004b000: R29 := R31
0004b006: #327 := R31 + 0x10
0004b00c: mem := mem with [#327, el]:u64 <- R19
0004b012: mem := mem with [#327 + 8, el]:u64 <- R20
0004b018: R19 := R0
0004b01e: R20 := R1
0004b023: goto %0004b021

0004b021:
0004b029: R0 := mem[R19, el]:u64
0004b02f: R1 := R20
0004b034: R30 := 0x4F58
0004b036: call @strcasecmp with return %0004b038

0004b038:
0004b03d: when 31:0[R0] <> 0 goto %0004b03b
0006cc30: goto %0004b078

0004b078:
0004b07d: R0 := mem[R19 + 8, el]:u64
0004b083: #329 := R31 + 0x10
0004b088: R19 := mem[#329, el]:u64
0004b08d: R20 := mem[#329 + 8, el]:u64
0004b094: R29 := mem[R31, el]:u64
0004b099: R30 := mem[R31 + 8, el]:u64
0004b09d: R31 := R31 + 0x20
0004b0a2: call R30 with noreturn

0004b03b:
0004b045: R19 := mem[R19 + 0x18, el]:u64
0004b04b: when R19 = 0 goto %0004b049
0006cc31: goto %0004b021

0004b049:
0004b051: R0 := 0
0004b057: #328 := R31 + 0x10
0004b05c: R19 := mem[#328, el]:u64
0004b061: R20 := mem[#328 + 8, el]:u64
0004b068: R29 := mem[R31, el]:u64
0004b06d: R30 := mem[R31 + 8, el]:u64
0004b071: R31 := R31 + 0x20
0004b076: call R30 with noreturn

0006cc32: sub hlist_in(hlist_in_result)
0006d107: hlist_in_result :: out u32 = low:32[R0]

00049e5c:
00049e60: when R0 = 0 goto %00049e5e
0006cc33: goto %0004b0bb

00049e5e:
00049e66: R0 := 0
00049e6b: call R30 with noreturn

0004b0bb:
0004b0bf: #330 := R31 - 0x20
0004b0c5: mem := mem with [#330, el]:u64 <- R29
0004b0cb: mem := mem with [#330 + 8, el]:u64 <- R30
0004b0cf: R31 := #330
0004b0d5: R29 := R31
0004b0db: #331 := R31 + 0x10
0004b0e1: mem := mem with [#331, el]:u64 <- R19
0004b0e7: mem := mem with [#331 + 8, el]:u64 <- R20
0004b0ed: R19 := R0
0004b0f3: R20 := R1
0004b0f8: goto %0004b0f6

0004b0f6:
0004b0fe: R0 := mem[R19, el]:u64
0004b104: R1 := R20
0004b109: R30 := 0x4ED8
0004b10b: call @strcasecmp with return %0004b10d

0004b10d:
0004b112: when 31:0[R0] <> 0 goto %0004b110
0006cc34: goto %0004b14d

0004b14d:
0004b150: R0 := 1
0004b156: #333 := R31 + 0x10
0004b15b: R19 := mem[#333, el]:u64
0004b160: R20 := mem[#333 + 8, el]:u64
0004b167: R29 := mem[R31, el]:u64
0004b16c: R30 := mem[R31 + 8, el]:u64
0004b170: R31 := R31 + 0x20
0004b175: call R30 with noreturn

0004b110:
0004b11a: R19 := mem[R19 + 0x18, el]:u64
0004b120: when R19 = 0 goto %0004b11e
0006cc35: goto %0004b0f6

0004b11e:
0004b126: R0 := 0
0004b12c: #332 := R31 + 0x10
0004b131: R19 := mem[#332, el]:u64
0004b136: R20 := mem[#332 + 8, el]:u64
0004b13d: R29 := mem[R31, el]:u64
0004b142: R30 := mem[R31 + 8, el]:u64
0004b146: R31 := R31 + 0x20
0004b14b: call R30 with noreturn

0006cc36: sub hlist_mod(hlist_mod_result)
0006d108: hlist_mod_result :: out u32 = low:32[R0]

00049cfa:
00049d01: #247 := R31 - 0x40
00049d07: mem := mem with [#247, el]:u64 <- R29
00049d0d: mem := mem with [#247 + 8, el]:u64 <- R30
00049d11: R31 := #247
00049d17: R29 := R31
00049d1d: #248 := R31 + 0x10
00049d23: mem := mem with [#248, el]:u64 <- R19
00049d29: mem := mem with [#248 + 8, el]:u64 <- R20
00049d2f: R20 := R1
00049d35: #249 := R31 + 0x20
00049d3b: mem := mem with [#249, el]:u64 <- R21
00049d41: mem := mem with [#249 + 8, el]:u64 <- R22
00049d47: R21 := R0
00049d4d: R22 := R2
00049d55: mem := mem with [R31 + 0x30, el]:u64 <- R23
00049d5b: R23 := pad:64[31:0[R3]]
00049d61: when R0 = 0 goto %00049d5f
0006cc37: goto %0004b1a0

0004b1a0:
0004b1a4: R19 := R0
0004b1a9: goto %0004b1a7

0004b1a7:
0004b1af: R0 := mem[R19, el]:u64
0004b1b5: R1 := R20
0004b1ba: R30 := 0x4E0C
0004b1bc: call @strcasecmp with return %0004b1be

0004b1be:
0004b1c3: when 31:0[R0] <> 0 goto %0004b1c1
0006cc38: goto %0004b1d4

0004b1d4:
0004b1d9: R0 := mem[R19 + 8, el]:u64
0004b1de: R30 := 0x4E18
0004b1e0: call @free with return %0004b1e2

0004b1e2:
0004b1e6: R0 := R22
0004b1eb: R30 := 0x4E20
0004b1ed: call @strdup with return %0004b1ef

0004b1ef:
0004b1f5: mem := mem with [R19 + 8, el]:u64 <- R0
0006cc39: goto %00049d66

0004b1c1:
0004b1cb: R19 := mem[R19 + 0x18, el]:u64
0004b1d0: when R19 = 0 goto %00049d5f
0006cc3a: goto %0004b1a7

00049d5f:
00049d68: when 31:0[R23] = 0 goto %00049d66
0006cc3b: goto %00049dad

00049dad:
00049db1: #252 := R20 + 0
00049db6: VF := extend:65[#252] <> extend:65[R20] + 0
00049dbb: CF := pad:65[#252] <> pad:65[R20] - 0x10000000000000000
00049dbf: ZF := #252 = 0
00049dc3: NF := 63:63[#252]
00049dc9: #253 := R22 + 0
00049def: goto %00049de9

00049de9:
00049deb: when ZF <> 1 goto %00049dce
00049dec: goto %00049dde

00049dde:
00049ddf: VF := 0
00049de2: CF := 0
00049de5: ZF := 1
00049de8: NF := 0
00049dee: goto %00049dea

00049dce:
00049dcf: VF := extend:65[#253] <> extend:65[R22] + 0
00049dd4: CF := pad:65[#253] <> pad:65[R22] - 0x10000000000000000
00049dd8: ZF := #253 = 0
00049ddc: NF := 63:63[#253]
00049ded: goto %00049dea

00049dea:
00049df4: when ZF goto %00049d66
0006cc3c: goto %00049df8

00049df8:
00049dfb: R0 := 0x20
00049e00: R30 := 0x4E54
00049e02: call @malloc with return %00049e04

00049e04:
00049e08: R19 := R0
00049e0e: R0 := R20
00049e13: R30 := 0x4E60
00049e16: call @strdup with return %00049e18

00049e18:
00049e1c: R1 := R0
00049e22: R0 := R22
00049e2a: mem := mem with [R19, el]:u64 <- R1
00049e2f: R30 := 0x4E70
00049e31: call @strdup with return %00049e33

00049e33:
00049e39: mem := mem with [R19 + 8, el]:u64 <- R0
00049e40: mem := mem with [R19 + 0x10, el]:u32 <- 0
00049e47: mem := mem with [R19 + 0x18, el]:u64 <- 0
00049e4d: when R21 = 0 goto %00049e4b
0006cc3d: goto %0004b177

00049e4b:
00049e54: R21 := R19
00049e58: goto %00049d66

0004b177:
0004b17b: R1 := R21
0006cc3e: goto %0004b17f

0004b17f:
0004b183: R2 := R1
0004b18a: R1 := mem[R1 + 0x18, el]:u64
0004b190: when R1 <> 0 goto %0004b17f
0006cc3f: goto %0004b194

0004b194:
0004b19a: mem := mem with [R2 + 0x18, el]:u64 <- R19
0004b19e: goto %00049d66

00049d66:
00049d6f: R0 := R21
00049d75: #250 := R31 + 0x10
00049d7a: R19 := mem[#250, el]:u64
00049d7f: R20 := mem[#250 + 8, el]:u64
00049d85: #251 := R31 + 0x20
00049d8a: R21 := mem[#251, el]:u64
00049d8f: R22 := mem[#251 + 8, el]:u64
00049d96: R23 := mem[R31 + 0x30, el]:u64
00049d9d: R29 := mem[R31, el]:u64
00049da2: R30 := mem[R31 + 8, el]:u64
00049da6: R31 := R31 + 0x40
00049dab: call R30 with noreturn

0006cc40: sub hlist_subcmp(hlist_subcmp_result)
0006d109: hlist_subcmp_result :: out u32 = low:32[R0]

00049e99:
00049e9d: #254 := R31 - 0x30
00049ea3: mem := mem with [#254, el]:u64 <- R29
00049ea9: mem := mem with [#254 + 8, el]:u64 <- R30
00049ead: R31 := #254
00049eb3: R29 := R31
00049eb9: #255 := R31 + 0x10
00049ebf: mem := mem with [#255, el]:u64 <- R19
00049ec5: mem := mem with [#255 + 8, el]:u64 <- R20
00049ecb: R19 := R0
00049ed0: R20 := 0
00049ed6: R0 := R2
00049edc: #256 := R31 + 0x20
00049ee2: mem := mem with [#256, el]:u64 <- R21
00049ee8: mem := mem with [#256 + 8, el]:u64 <- R22
00049eee: R21 := R1
00049ef3: R30 := 0x4FAC
00049ef5: call @strdup with return %00049ef7

00049ef7:
00049efb: R22 := R0
00049f00: goto %00049efe

00049efe:
00049f05: R0 := R22
00049f0a: R30 := 0x4FD4
00049f0c: call @strlen with return %00049f0e

00049f0e:
00049f12: #257 := ~R20
00049f17: #258 := R0 + ~R20 + 1
00049f1d: VF := extend:65[#258] <> extend:65[R0] + extend:65[#257] + 1
00049f23: CF := pad:65[#258] <> pad:65[R0] + pad:65[#257] + 1
00049f27: ZF := #258 = 0
00049f2b: NF := 63:63[#258]
00049f32: when CF & ~ZF goto %00049f30
0006cc41: goto %00049f62

00049f62:
00049f67: when R19 <> 0 goto %00049f65
0006cc42: goto %0004afe2

00049f65:
00049f6f: R0 := mem[R19, el]:u64
00049f75: R1 := R21
00049f7a: R30 := 0x4FF8
00049f7d: call @strcasecmp with return %00049f7f

00049f7f:
00049f83: R20 := pad:64[31:0[R0]]
00049f8a: when 31:0[R0] <> 0 goto %00049f88
0006cc43: goto %0004aece

0004aece:
0004aed3: R0 := mem[R19 + 8, el]:u64
0004aed9: when R0 = 0 goto %0004aed7
0006cc44: goto %0004af24

0004af24:
0004af27: R30 := 0x500C
0004af29: call @strdup with return %0004af2b

0004af2b:
0004af2e: R20 := 0
0004af34: R19 := R0
0004af39: goto %0004af37

0004af37:
0004af3e: R0 := R19
0004af43: R30 := 0x5038
0004af45: call @strlen with return %0004af47

0004af47:
0004af4b: #323 := ~R20
0004af50: #324 := R0 + ~R20 + 1
0004af56: VF := extend:65[#324] <> extend:65[R0] + extend:65[#323] + 1
0004af5c: CF := pad:65[#324] <> pad:65[R0] + pad:65[#323] + 1
0004af60: ZF := #324 = 0
0004af64: NF := 63:63[#324]
0004af6b: when CF & ~ZF goto %0004af69
0006cc45: goto %0004af9b

0004af9b:
0004af9f: R1 := R22
0004afa5: R0 := R19
0004afaa: R30 := 0x504C
0004afac: call @strstr with return %0004afae

0004afae:
0004afb2: #325 := R0 + 0
0004afb7: VF := extend:65[#325] <> extend:65[R0] + 0
0004afbc: CF := pad:65[#325] <> pad:65[R0] - 0x10000000000000000
0004afc0: ZF := #325 = 0
0004afc4: NF := 63:63[#325]
0004afd0: when ZF goto %0004afc9
0004afd1: goto %0004afcc

0004afcc:
0004afcd: R20 := 1
0004afd3: goto %0004afcf

0004afc9:
0004afca: R20 := 0
0004afd2: goto %0004afcf

0004afcf:
0004afd9: R0 := R19
0004afde: R30 := 0x505C
0004afe0: call @free with return %0004aed7

0004aed7:
0004aee0: R0 := R22
0004aee5: R30 := 0x5064
0004aee7: call @free with return %0004aee9

0004aee9:
0004aeed: R0 := pad:64[31:0[R20]]
0004aef3: #321 := R31 + 0x10
0004aef8: R19 := mem[#321, el]:u64
0004aefd: R20 := mem[#321 + 8, el]:u64
0004af03: #322 := R31 + 0x20
0004af08: R21 := mem[#322, el]:u64
0004af0d: R22 := mem[#322 + 8, el]:u64
0004af14: R29 := mem[R31, el]:u64
0004af19: R30 := mem[R31 + 8, el]:u64
0004af1d: R31 := R31 + 0x30
0004af22: call R30 with noreturn

0004af69:
0004af71: R30 := 0x501C
0004af73: call @__ctype_tolower_loc with return %0004af75

0004af75:
0004af7b: R1 := pad:64[mem[R19 + R20]]
0004af82: R0 := mem[R0, el]:u64
0004af8a: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0004af93: mem := mem with [R19 + R20] <- 7:0[R0]
0004af99: R20 := R20 + 1
0006cc46: goto %0004af37

00049f88:
00049f92: R19 := mem[R19 + 0x18, el]:u64
00049f98: when R19 = 0 goto %00049f96
0006cc47: goto %00049f65

0004afe2:
0004afe4: goto %00049f96

00049f96:
00049f9f: R0 := R22
00049fa4: R20 := 0
00049fa9: R30 := 0x5084
00049fac: call @free with return %00049fae

00049fae:
00049fb2: R0 := pad:64[31:0[R20]]
00049fb8: #259 := R31 + 0x10
00049fbd: R19 := mem[#259, el]:u64
00049fc2: R20 := mem[#259 + 8, el]:u64
00049fc8: #260 := R31 + 0x20
00049fcd: R21 := mem[#260, el]:u64
00049fd2: R22 := mem[#260 + 8, el]:u64
00049fd9: R29 := mem[R31, el]:u64
00049fde: R30 := mem[R31 + 8, el]:u64
00049fe2: R31 := R31 + 0x30
00049fe7: call R30 with noreturn

00049f30:
00049f38: R30 := 0x4FB8
00049f3a: call @__ctype_tolower_loc with return %00049f3c

00049f3c:
00049f42: R1 := pad:64[mem[R22 + R20]]
00049f49: R0 := mem[R0, el]:u64
00049f51: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
00049f5a: mem := mem with [R22 + R20] <- 7:0[R0]
00049f60: R20 := R20 + 1
0006cc48: goto %00049efe

0006cc49: sub hlist_subcmp_all(hlist_subcmp_all_result)
0006d10a: hlist_subcmp_all_result :: out u32 = low:32[R0]

00049fe9:
00049fed: #261 := R31 - 0x50
00049ff3: mem := mem with [#261, el]:u64 <- R29
00049ff9: mem := mem with [#261 + 8, el]:u64 <- R30
00049ffd: R31 := #261
0004a003: R29 := R31
0004a009: #262 := R31 + 0x10
0004a00f: mem := mem with [#262, el]:u64 <- R19
0004a015: mem := mem with [#262 + 8, el]:u64 <- R20
0004a01a: R19 := 0
0004a020: #263 := R31 + 0x20
0004a026: mem := mem with [#263, el]:u64 <- R21
0004a02c: mem := mem with [#263 + 8, el]:u64 <- R22
0004a032: R21 := R0
0004a038: R0 := R2
0004a03e: #264 := R31 + 0x30
0004a044: mem := mem with [#264, el]:u64 <- R23
0004a04a: mem := mem with [#264 + 8, el]:u64 <- R24
0004a050: R23 := R1
0004a055: R30 := 0x50C0
0004a057: call @strdup with return %0004a059

0004a059:
0004a05d: R22 := R0
0004a062: goto %0004a060

0004a060:
0004a067: R0 := R22
0004a06c: R30 := 0x50E8
0004a06e: call @strlen with return %0004a070

0004a070:
0004a074: #265 := ~R19
0004a079: #266 := R0 + ~R19 + 1
0004a07f: VF := extend:65[#266] <> extend:65[R0] + extend:65[#265] + 1
0004a085: CF := pad:65[#266] <> pad:65[R0] + pad:65[#265] + 1
0004a089: ZF := #266 = 0
0004a08d: NF := 63:63[#266]
0004a094: when CF & ~ZF goto %0004a092
0006cc4a: goto %0004a0c4

0004a0c4:
0004a0c8: when R21 = 0 goto %0004a0c6
0006cc4b: goto %0004ad58

0004a0c6:
0004a0cf: R0 := R22
0004a0d4: R24 := 0
0004a0d9: R30 := 0x51AC
0004a0db: call @free with return %0004a0dd

0004a0dd:
0004a0e1: R0 := pad:64[31:0[R24]]
0004a0e7: #267 := R31 + 0x10
0004a0ec: R19 := mem[#267, el]:u64
0004a0f1: R20 := mem[#267 + 8, el]:u64
0004a0f7: #268 := R31 + 0x20
0004a0fc: R21 := mem[#268, el]:u64
0004a101: R22 := mem[#268 + 8, el]:u64
0004a107: #269 := R31 + 0x30
0004a10c: R23 := mem[#269, el]:u64
0004a111: R24 := mem[#269 + 8, el]:u64
0004a118: R29 := mem[R31, el]:u64
0004a11d: R30 := mem[R31 + 8, el]:u64
0004a121: R31 := R31 + 0x50
0004a126: call R30 with noreturn

0004ad58:
0004ad5b: R24 := 0
0004ad63: mem := mem with [R31 + 0x40, el]:u64 <- R25
0004ad68: R25 := 1
0004ad6d: goto %0004ad6b

0004ad6b:
0004ad73: R0 := mem[R21, el]:u64
0004ad79: R1 := R23
0004ad7e: R30 := 0x5118
0004ad80: call @strcasecmp with return %0004ad82

0004ad82:
0004ad87: when 31:0[R0] <> 0 goto %0004ad85
0006cc4c: goto %0004adf7

0004adf7:
0004adfc: R0 := mem[R21 + 8, el]:u64
0004ae01: R19 := 0
0004ae06: R30 := 0x5128
0004ae08: call @strdup with return %0004ae0a

0004ae0a:
0004ae0e: R20 := R0
0004ae13: goto %0004ae11

0004ae11:
0004ae18: R0 := R20
0004ae1d: R30 := 0x5150
0004ae1f: call @strlen with return %0004ae21

0004ae21:
0004ae25: #318 := ~R19
0004ae2a: #319 := R0 + ~R19 + 1
0004ae30: VF := extend:65[#319] <> extend:65[R0] + extend:65[#318] + 1
0004ae36: CF := pad:65[#319] <> pad:65[R0] + pad:65[#318] + 1
0004ae3a: ZF := #319 = 0
0004ae3e: NF := 63:63[#319]
0004ae45: when CF & ~ZF goto %0004ae43
0006cc4d: goto %0004ae75

0004ae75:
0004ae79: R1 := R22
0004ae7f: R0 := R20
0004ae84: R30 := 0x5164
0004ae87: call @strstr with return %0004ae89

0004ae89:
0004ae8d: #320 := R0 + 0
0004ae92: VF := extend:65[#320] <> extend:65[R0] + 0
0004ae97: CF := pad:65[#320] <> pad:65[R0] - 0x10000000000000000
0004ae9b: ZF := #320 = 0
0004ae9f: NF := 63:63[#320]
0004aead: when ZF goto %0004aea5
0004aeae: goto %0004aea9

0004aea9:
0004aeaa: R24 := pad:64[31:0[R25]]
0004aeb0: goto %0004aeac

0004aea5:
0004aea6: R24 := pad:64[31:0[R24]]
0004aeaf: goto %0004aeac

0004aeac:
0004aeb6: R0 := R20
0004aebb: R30 := 0x5174
0004aebd: call @free with return %0004aebf

0004aebf:
0004aec4: R21 := mem[R21 + 0x18, el]:u64
0004aeca: when R21 <> 0 goto %0004ad6b
0006cc4e: goto %0004ad93

0004ae43:
0004ae4b: R30 := 0x5134
0004ae4d: call @__ctype_tolower_loc with return %0004ae4f

0004ae4f:
0004ae55: R1 := pad:64[mem[R20 + R19]]
0004ae5c: R0 := mem[R0, el]:u64
0004ae64: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0004ae6d: mem := mem with [R20 + R19] <- 7:0[R0]
0004ae73: R19 := R19 + 1
0006cc4f: goto %0004ae11

0004ad85:
0004ad8f: R21 := mem[R21 + 0x18, el]:u64
0004ad95: when R21 = 0 goto %0004ad93
0006cc50: goto %0004ad6b

0004ad93:
0004ad9c: R0 := R22
0004ada3: R25 := mem[R31 + 0x40, el]:u64
0004ada8: R30 := 0x5188
0004adaa: call @free with return %0004adac

0004adac:
0004adb0: R0 := pad:64[31:0[R24]]
0004adb6: #315 := R31 + 0x10
0004adbb: R19 := mem[#315, el]:u64
0004adc0: R20 := mem[#315 + 8, el]:u64
0004adc6: #316 := R31 + 0x20
0004adcb: R21 := mem[#316, el]:u64
0004add0: R22 := mem[#316 + 8, el]:u64
0004add6: #317 := R31 + 0x30
0004addb: R23 := mem[#317, el]:u64
0004ade0: R24 := mem[#317 + 8, el]:u64
0004ade7: R29 := mem[R31, el]:u64
0004adec: R30 := mem[R31 + 8, el]:u64
0004adf0: R31 := R31 + 0x50
0004adf5: call R30 with noreturn

0004a092:
0004a09a: R30 := 0x50CC
0004a09c: call @__ctype_tolower_loc with return %0004a09e

0004a09e:
0004a0a4: R1 := pad:64[mem[R22 + R19]]
0004a0ab: R0 := mem[R0, el]:u64
0004a0b3: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0004a0bc: mem := mem with [R22 + R19] <- 7:0[R0]
0004a0c2: R19 := R19 + 1
0006cc51: goto %0004a060

0006cc52: sub hmac_md5(hmac_md5_result)
0006d10b: hmac_md5_result :: out u32 = low:32[R0]

000493ca:
000493ce: R31 := R31 - 0x210
000493d4: #205 := R1 - 0x40
000493d9: VF := extend:65[#205] <> extend:65[R1] - 0x40
000493de: CF := pad:65[#205] <> pad:65[R1] + 0xFFFFFFFFFFFFFFC0
000493e2: ZF := #205 = 0
000493e6: NF := 63:63[#205]
000493ee: mem := mem with [R31, el]:u64 <- R29
000493f4: mem := mem with [R31 + 8, el]:u64 <- R30
000493fa: R29 := R31
00049400: #206 := R31 + 0x10
00049406: mem := mem with [#206, el]:u64 <- R19
0004940c: mem := mem with [#206 + 8, el]:u64 <- R20
00049411: R20 := 0x27000
00049418: R5 := mem[R20 + 0xFB8, el]:u64
0004941e: #207 := R31 + 0x20
00049424: mem := mem with [#207, el]:u64 <- R21
0004942a: mem := mem with [#207 + 8, el]:u64 <- R22
00049430: R22 := R2
00049437: R6 := mem[R5, el]:u64
0004943f: mem := mem with [R31 + 0x208, el]:u64 <- R6
00049444: R6 := 0
0004944a: #208 := R31 + 0x30
00049450: mem := mem with [#208, el]:u64 <- R23
00049456: mem := mem with [#208 + 8, el]:u64 <- R24
0004945c: R21 := R4
00049462: #209 := R31 + 0x40
00049468: mem := mem with [#209, el]:u64 <- R25
0004946e: mem := mem with [#209 + 8, el]:u64 <- R26
00049474: R25 := R3
0004947a: #210 := R31 + 0x50
00049480: mem := mem with [#210, el]:u64 <- R27
00049486: mem := mem with [#210 + 8, el]:u64 <- R28
0004948d: when CF & ~ZF goto %0004948b
0006cc53: goto %0004e639

0004948b:
00049493: R2 := 0x11000
00049499: R28 := R31 + 0x100
0004949f: R19 := R31 + 0x1A0
000494a6: mem := mem with [R31 + 0x110, el]:u64 <- 0
000494ad: V0 := mem[R2 + 0x8D0, el]:u128
000494b3: R2 := R28
000494ba: mem := mem with [R31 + 0x118, el]:u32 <- 0
000494c0: R27 := R31 + 0x1C0
000494c6: R23 := R19
000494cb: R24 := 0xF
000494d3: mem := mem with [R31 + 0x100, el]:u128 <- V0
000494d8: R30 := 0x9E14
000494da: call @md5_process_bytes with return %000494dc

000494dc:
000494e0: R1 := R19
000494e6: R0 := R28
000494eb: R30 := 0x9E20
000494ed: call @md5_finish_ctx with return %000494ef

000494ef:
000494f2: R3 := 0x11000
000494f8: R0 := R27
000494fd: R26 := 0x10
00049502: R2 := 0x40
00049509: V0 := mem[R3 + 0x8D0, el]:u128
0004950e: R1 := 0x36
00049515: mem := mem with [R31 + 0x70, el]:u64 <- 0
0004951c: mem := mem with [R31 + 0x78, el]:u32 <- 0
00049524: mem := mem with [R31 + 0x60, el]:u128 <- V0
00049529: R30 := 0x9E48
0004952c: call @memset with return %0004952e

0004952e:
00049531: goto %0004952f

0004e639:
0004e63c: R3 := 0x11000
0004e642: R27 := R31 + 0x1C0
0004e648: R26 := R1
0004e64e: R23 := R0
0004e655: V0 := mem[R3 + 0x8D0, el]:u128
0004e65b: R0 := R27
0004e660: R2 := 0x40
0004e665: R1 := 0x36
0004e66c: mem := mem with [R31 + 0x70, el]:u64 <- 0
0004e674: mem := mem with [R31 + 0x60, el]:u128 <- V0
0004e67b: mem := mem with [R31 + 0x78, el]:u32 <- 0
0004e680: R30 := 0x99B8
0004e682: call @memset with return %0004e684

0004e684:
0004e687: when R26 = 0 goto %0004e5ac
0006cc54: goto %0004e68b

0004e5ac:
0004e5b0: R19 := R31 + 0x60
0004e5b6: R0 := R27
0004e5bc: R2 := R19
0004e5c1: R1 := 0x40
0004e5c6: R30 := 0x9E74
0004e5c8: call @md5_process_block with return %0004e5ca

0004e5ca:
0004e5ce: R28 := R31 + 0x100
0004e5d4: R1 := R25
0004e5da: R0 := R22
0004e5e0: R22 := R31 + 0x1B0
0004e5e5: R30 := 0x9E88
0004e5e7: call @md5_process_bytes with return %0004e5e9

0004e5e9:
0004e5ed: R1 := R22
0004e5f3: R0 := R19
0004e5f8: R30 := 0x9E94
0004e5fa: call @md5_finish_ctx with return %0004e5fc

0004e5fc:
0004e601: mem := mem with [R31 + 0x110, el]:u64 <- 0
0004e606: R3 := 0x11000
0004e60c: R0 := R27
0004e611: R2 := 0x40
0004e616: R1 := 0x5C
0004e61d: V0 := mem[R3 + 0x8D0, el]:u128
0004e624: mem := mem with [R31 + 0x118, el]:u32 <- 0
0004e62c: mem := mem with [R31 + 0x100, el]:u128 <- V0
0004e631: R30 := 0x9EB8
0004e633: call @memset with return %0004e635

0004e635:
0004e637: goto %00049719

0004e68b:
0004e68f: R24 := R26 - 1
0004e695: #578 := R24 - 0xE
0004e69a: VF := extend:65[#578] <> extend:65[R24] - 0xE
0004e69f: CF := pad:65[#578] <> pad:65[R24] + 0xFFFFFFFFFFFFFFF2
0004e6a3: ZF := #578 = 0
0004e6a7: NF := 63:63[#578]
0004e6ad: when ~(CF & ~ZF) goto %0004e590
0006cc55: goto %0004e6b1

0004e590:
0004e594: R0 := R26
0004e59a: R2 := R23
0004e5a0: R1 := R27
0004e5a6: R28 := R31 + 0x100
0004e5aa: goto %0004e178

0004e6b1:
0004e6b5: R28 := R31 + 0x100
0006cc56: goto %0004952f

0004952f:
00049536: R19 := R26 - 0x10
0004953c: R6 := R27
00049541: R5 := 0
00049548: R0 := 0.59:0[R19 >> 4 | R19 << 0x3C]
0004954e: R0 := R0 + 1
0006cc57: goto %00049550

00049550:
00049555: R1 := 63:4[R5 >> 0x3C | R5 << 4].0
0004955b: R5 := R5 + 1
00049562: V0 := mem[R6, el]:u128
00049568: #211 := ~R0
0004956d: #212 := R5 + ~R0 + 1
00049573: VF := extend:65[#212] <> extend:65[R5] + extend:65[#211] + 1
00049579: CF := pad:65[#212] <> pad:65[R5] + pad:65[#211] + 1
0004957d: ZF := #212 = 0
00049581: NF := 63:63[#212]
00049589: V1 := mem[R23 + R1, el]:u128
00049590: V0 := V1 ^ V0
00049598: mem := mem with [R6, el]:u128 <- V0
0004959c: R6 := R6 + 0x10
000495a1: when CF <> 1 goto %00049550
0006cc58: goto %000495a5

000495a5:
000495aa: R0 := 63:4[R0 >> 0x3C | R0 << 4].0
000495b0: #213 := ~R0
000495b5: #214 := R26 + ~R0 + 1
000495bb: VF := extend:65[#214] <> extend:65[R26] + extend:65[#213] + 1
000495c1: CF := pad:65[#214] <> pad:65[R26] + pad:65[#213] + 1
000495c5: ZF := #214 = 0
000495c9: NF := 63:63[#214]
000495d0: R2 := R23 + R0
000495d7: R1 := R27 + R0
000495de: R0 := R26 + ~R0 + 1
000495e4: when ZF goto %000495e2
0006cc59: goto %0004e178

000495e2:
000495eb: R24 := R31 + 0x60
000495f1: R0 := R27
000495f7: R2 := R24
000495fc: R1 := 0x40
00049601: R30 := 0x9ED8
00049603: call @md5_process_block with return %00049605

00049605:
00049609: R1 := R25
0004960f: R0 := R22
00049615: R22 := R31 + 0x1B0
0004961a: R30 := 0x9EE8
0004961c: call @md5_process_bytes with return %0004961e

0004961e:
00049622: R1 := R22
00049628: R0 := R24
0004962d: R30 := 0x9EF4
0004962f: call @md5_finish_ctx with return %00049631

00049631:
00049636: mem := mem with [R31 + 0x110, el]:u64 <- 0
0004963b: R0 := 0x11000
00049640: R2 := 0x40
00049645: R1 := 0x5C
0004964c: mem := mem with [R31 + 0x118, el]:u32 <- 0
00049653: V0 := mem[R0 + 0x8D0, el]:u128
00049659: R0 := R27
00049661: mem := mem with [R31 + 0x100, el]:u128 <- V0
00049666: R30 := 0x9F18
00049668: call @memset with return %0004966a

0004966a:
0004966d: goto %0004966b

0004e178:
0004e17d: R3 := pad:64[mem[R2]]
0004e183: #563 := R0 - 1
0004e188: VF := extend:65[#563] <> extend:65[R0] - 1
0004e18d: CF := pad:65[#563] <> pad:65[R0] + 0xFFFFFFFFFFFFFFFF
0004e191: ZF := #563 = 0
0004e195: NF := 63:63[#563]
0004e19c: R4 := pad:64[mem[R1]]
0004e1a3: R3 := pad:64[31:0[R3] ^ 31:0[R4]]
0004e1ab: mem := mem with [R1] <- 7:0[R3]
0004e1b1: when ZF goto %0004e1af
0006cc5a: goto %0004e267

0004e267:
0004e26c: R3 := pad:64[mem[R2 + 1]]
0004e272: #565 := R0 - 2
0004e277: VF := extend:65[#565] <> extend:65[R0] - 2
0004e27c: CF := pad:65[#565] <> pad:65[R0] + 0xFFFFFFFFFFFFFFFE
0004e280: ZF := #565 = 0
0004e284: NF := 63:63[#565]
0004e28b: R4 := pad:64[mem[R1 + 1]]
0004e292: R3 := pad:64[31:0[R3] ^ 31:0[R4]]
0004e29a: mem := mem with [R1 + 1] <- 7:0[R3]
0004e29f: when ZF goto %0004e1af
0006cc5b: goto %0004e2a3

0004e2a3:
0004e2a8: R3 := pad:64[mem[R2 + 2]]
0004e2ae: #566 := R0 - 3
0004e2b3: VF := extend:65[#566] <> extend:65[R0] - 3
0004e2b8: CF := pad:65[#566] <> pad:65[R0] + 0xFFFFFFFFFFFFFFFD
0004e2bc: ZF := #566 = 0
0004e2c0: NF := 63:63[#566]
0004e2c7: R4 := pad:64[mem[R1 + 2]]
0004e2ce: R3 := pad:64[31:0[R3] ^ 31:0[R4]]
0004e2d6: mem := mem with [R1 + 2] <- 7:0[R3]
0004e2db: when ZF goto %0004e1af
0006cc5c: goto %0004e2df

0004e2df:
0004e2e4: R3 := pad:64[mem[R2 + 3]]
0004e2ea: #567 := R0 - 4
0004e2ef: VF := extend:65[#567] <> extend:65[R0] - 4
0004e2f4: CF := pad:65[#567] <> pad:65[R0] + 0xFFFFFFFFFFFFFFFC
0004e2f8: ZF := #567 = 0
0004e2fc: NF := 63:63[#567]
0004e303: R4 := pad:64[mem[R1 + 3]]
0004e30a: R3 := pad:64[31:0[R3] ^ 31:0[R4]]
0004e312: mem := mem with [R1 + 3] <- 7:0[R3]
0004e317: when ZF goto %0004e1af
0006cc5d: goto %0004e31b

0004e31b:
0004e320: R3 := pad:64[mem[R2 + 4]]
0004e326: #568 := R0 - 5
0004e32b: VF := extend:65[#568] <> extend:65[R0] - 5
0004e330: CF := pad:65[#568] <> pad:65[R0] + 0xFFFFFFFFFFFFFFFB
0004e334: ZF := #568 = 0
0004e338: NF := 63:63[#568]
0004e33f: R4 := pad:64[mem[R1 + 4]]
0004e346: R3 := pad:64[31:0[R3] ^ 31:0[R4]]
0004e34e: mem := mem with [R1 + 4] <- 7:0[R3]
0004e353: when ZF goto %0004e1af
0006cc5e: goto %0004e357

0004e357:
0004e35c: R3 := pad:64[mem[R2 + 5]]
0004e362: #569 := R0 - 6
0004e367: VF := extend:65[#569] <> extend:65[R0] - 6
0004e36c: CF := pad:65[#569] <> pad:65[R0] + 0xFFFFFFFFFFFFFFFA
0004e370: ZF := #569 = 0
0004e374: NF := 63:63[#569]
0004e37b: R4 := pad:64[mem[R1 + 5]]
0004e382: R3 := pad:64[31:0[R3] ^ 31:0[R4]]
0004e38a: mem := mem with [R1 + 5] <- 7:0[R3]
0004e38f: when ZF goto %0004e1af
0006cc5f: goto %0004e393

0004e393:
0004e398: R3 := pad:64[mem[R2 + 6]]
0004e39e: #570 := R0 - 7
0004e3a3: VF := extend:65[#570] <> extend:65[R0] - 7
0004e3a8: CF := pad:65[#570] <> pad:65[R0] + 0xFFFFFFFFFFFFFFF9
0004e3ac: ZF := #570 = 0
0004e3b0: NF := 63:63[#570]
0004e3b7: R4 := pad:64[mem[R1 + 6]]
0004e3be: R3 := pad:64[31:0[R3] ^ 31:0[R4]]
0004e3c6: mem := mem with [R1 + 6] <- 7:0[R3]
0004e3cb: when ZF goto %0004e1af
0006cc60: goto %0004e3cf

0004e3cf:
0004e3d4: R3 := pad:64[mem[R2 + 7]]
0004e3da: #571 := R0 - 8
0004e3df: VF := extend:65[#571] <> extend:65[R0] - 8
0004e3e4: CF := pad:65[#571] <> pad:65[R0] + 0xFFFFFFFFFFFFFFF8
0004e3e8: ZF := #571 = 0
0004e3ec: NF := 63:63[#571]
0004e3f3: R4 := pad:64[mem[R1 + 7]]
0004e3fa: R3 := pad:64[31:0[R3] ^ 31:0[R4]]
0004e402: mem := mem with [R1 + 7] <- 7:0[R3]
0004e407: when ZF goto %0004e1af
0006cc61: goto %0004e40b

0004e40b:
0004e410: R3 := pad:64[mem[R2 + 8]]
0004e416: #572 := R0 - 9
0004e41b: VF := extend:65[#572] <> extend:65[R0] - 9
0004e420: CF := pad:65[#572] <> pad:65[R0] + 0xFFFFFFFFFFFFFFF7
0004e424: ZF := #572 = 0
0004e428: NF := 63:63[#572]
0004e42f: R4 := pad:64[mem[R1 + 8]]
0004e436: R3 := pad:64[31:0[R3] ^ 31:0[R4]]
0004e43e: mem := mem with [R1 + 8] <- 7:0[R3]
0004e443: when ZF goto %0004e1af
0006cc62: goto %0004e447

0004e447:
0004e44c: R3 := pad:64[mem[R2 + 9]]
0004e452: #573 := R0 - 0xA
0004e457: VF := extend:65[#573] <> extend:65[R0] - 0xA
0004e45c: CF := pad:65[#573] <> pad:65[R0] + 0xFFFFFFFFFFFFFFF6
0004e460: ZF := #573 = 0
0004e464: NF := 63:63[#573]
0004e46b: R4 := pad:64[mem[R1 + 9]]
0004e472: R3 := pad:64[31:0[R3] ^ 31:0[R4]]
0004e47a: mem := mem with [R1 + 9] <- 7:0[R3]
0004e47f: when ZF goto %0004e1af
0006cc63: goto %0004e483

0004e483:
0004e488: R3 := pad:64[mem[R2 + 0xA]]
0004e48e: #574 := R0 - 0xB
0004e493: VF := extend:65[#574] <> extend:65[R0] - 0xB
0004e498: CF := pad:65[#574] <> pad:65[R0] + 0xFFFFFFFFFFFFFFF5
0004e49c: ZF := #574 = 0
0004e4a0: NF := 63:63[#574]
0004e4a7: R4 := pad:64[mem[R1 + 0xA]]
0004e4ae: R3 := pad:64[31:0[R3] ^ 31:0[R4]]
0004e4b6: mem := mem with [R1 + 0xA] <- 7:0[R3]
0004e4bb: when ZF goto %0004e1af
0006cc64: goto %0004e4bf

0004e4bf:
0004e4c4: R3 := pad:64[mem[R2 + 0xB]]
0004e4ca: #575 := R0 - 0xC
0004e4cf: VF := extend:65[#575] <> extend:65[R0] - 0xC
0004e4d4: CF := pad:65[#575] <> pad:65[R0] + 0xFFFFFFFFFFFFFFF4
0004e4d8: ZF := #575 = 0
0004e4dc: NF := 63:63[#575]
0004e4e3: R4 := pad:64[mem[R1 + 0xB]]
0004e4ea: R3 := pad:64[31:0[R3] ^ 31:0[R4]]
0004e4f2: mem := mem with [R1 + 0xB] <- 7:0[R3]
0004e4f7: when ZF goto %0004e1af
0006cc65: goto %0004e4fb

0004e4fb:
0004e500: R3 := pad:64[mem[R2 + 0xC]]
0004e506: #576 := R0 - 0xD
0004e50b: VF := extend:65[#576] <> extend:65[R0] - 0xD
0004e510: CF := pad:65[#576] <> pad:65[R0] + 0xFFFFFFFFFFFFFFF3
0004e514: ZF := #576 = 0
0004e518: NF := 63:63[#576]
0004e51f: R4 := pad:64[mem[R1 + 0xC]]
0004e526: R3 := pad:64[31:0[R3] ^ 31:0[R4]]
0004e52e: mem := mem with [R1 + 0xC] <- 7:0[R3]
0004e533: when ZF goto %0004e1af
0006cc66: goto %0004e537

0004e537:
0004e53c: R3 := pad:64[mem[R2 + 0xD]]
0004e542: #577 := R0 - 0xE
0004e547: VF := extend:65[#577] <> extend:65[R0] - 0xE
0004e54c: CF := pad:65[#577] <> pad:65[R0] + 0xFFFFFFFFFFFFFFF2
0004e550: ZF := #577 = 0
0004e554: NF := 63:63[#577]
0004e55b: R0 := pad:64[mem[R1 + 0xD]]
0004e562: R0 := pad:64[31:0[R3] ^ 31:0[R0]]
0004e56a: mem := mem with [R1 + 0xD] <- 7:0[R0]
0004e56f: when ZF goto %0004e1af
0006cc67: goto %0004e573

0004e573:
0004e578: R0 := pad:64[mem[R2 + 0xE]]
0004e57f: R2 := pad:64[mem[R1 + 0xE]]
0004e586: R0 := pad:64[31:0[R0] ^ 31:0[R2]]
0004e58e: mem := mem with [R1 + 0xE] <- 7:0[R0]
0006cc68: goto %0004e1af

0004e1af:
0004e1b8: R19 := R31 + 0x60
0004e1be: R0 := R27
0004e1c4: R2 := R19
0004e1c9: R1 := 0x40
0004e1ce: R30 := 0x9B8C
0004e1d0: call @md5_process_block with return %0004e1d2

0004e1d2:
0004e1d6: R0 := R22
0004e1dc: R1 := R25
0004e1e2: R22 := R31 + 0x1B0
0004e1e7: R30 := 0x9B9C
0004e1e9: call @md5_process_bytes with return %0004e1eb

0004e1eb:
0004e1ef: R1 := R22
0004e1f5: R0 := R19
0004e1fa: R30 := 0x9BA8
0004e1fc: call @md5_finish_ctx with return %0004e1fe

0004e1fe:
0004e203: mem := mem with [R31 + 0x110, el]:u64 <- 0
0004e208: R0 := 0x11000
0004e20d: R2 := 0x40
0004e212: R1 := 0x5C
0004e219: mem := mem with [R31 + 0x118, el]:u32 <- 0
0004e220: V0 := mem[R0 + 0x8D0, el]:u128
0004e226: R0 := R27
0004e22e: mem := mem with [R31 + 0x100, el]:u128 <- V0
0004e233: R30 := 0x9BCC
0004e235: call @memset with return %0004e237

0004e237:
0004e23b: #564 := R24 - 0xE
0004e240: VF := extend:65[#564] <> extend:65[R24] - 0xE
0004e245: CF := pad:65[#564] <> pad:65[R24] + 0xFFFFFFFFFFFFFFF2
0004e249: ZF := #564 = 0
0004e24d: NF := 63:63[#564]
0004e254: when ~(CF & ~ZF) goto %0004e252
0006cc69: goto %0004e261

0004e252:
0004e25b: R1 := R27
0004e25f: goto %0004de13

0004e261:
0004e265: R19 := R26 - 0x10
0006cc6a: goto %0004966b

0004966b:
00049673: R5 := 0.59:0[R19 >> 4 | R19 << 0x3C]
00049679: R3 := R27
0004967f: R5 := R5 + 1
00049684: R2 := 0
0006cc6b: goto %00049686

00049686:
0004968b: R0 := 63:4[R2 >> 0x3C | R2 << 4].0
00049691: R2 := R2 + 1
00049698: V0 := mem[R3, el]:u128
0004969e: #215 := ~R2
000496a3: #216 := R5 + ~R2 + 1
000496a9: VF := extend:65[#216] <> extend:65[R5] + extend:65[#215] + 1
000496af: CF := pad:65[#216] <> pad:65[R5] + pad:65[#215] + 1
000496b3: ZF := #216 = 0
000496b7: NF := 63:63[#216]
000496bf: V1 := mem[R23 + R0, el]:u128
000496c6: V0 := V1 ^ V0
000496ce: mem := mem with [R3, el]:u128 <- V0
000496d2: R3 := R3 + 0x10
000496d8: when CF & ~ZF goto %00049686
0006cc6c: goto %000496dc

000496dc:
000496e1: R5 := 63:4[R5 >> 0x3C | R5 << 4].0
000496e7: #217 := ~R26
000496ec: #218 := R5 + ~R26 + 1
000496f2: VF := extend:65[#218] <> extend:65[R5] + extend:65[#217] + 1
000496f8: CF := pad:65[#218] <> pad:65[R5] + pad:65[#217] + 1
000496fc: ZF := #218 = 0
00049700: NF := 63:63[#218]
00049707: R23 := R23 + R5
0004970e: R26 := R26 + ~R5 + 1
00049715: R1 := R27 + R5
0004971b: when ZF goto %00049719
0006cc6d: goto %0004de13

0004de13:
0004de18: R0 := pad:64[mem[R23]]
0004de1e: #549 := R26 - 1
0004de23: VF := extend:65[#549] <> extend:65[R26] - 1
0004de28: CF := pad:65[#549] <> pad:65[R26] + 0xFFFFFFFFFFFFFFFF
0004de2c: ZF := #549 = 0
0004de30: NF := 63:63[#549]
0004de37: R2 := pad:64[mem[R1]]
0004de3e: R0 := pad:64[31:0[R0] ^ 31:0[R2]]
0004de46: mem := mem with [R1] <- 7:0[R0]
0004de4b: when ZF goto %00049719
0006cc6e: goto %0004de4f

0004de4f:
0004de54: R0 := pad:64[mem[R23 + 1]]
0004de5a: #550 := R26 - 2
0004de5f: VF := extend:65[#550] <> extend:65[R26] - 2
0004de64: CF := pad:65[#550] <> pad:65[R26] + 0xFFFFFFFFFFFFFFFE
0004de68: ZF := #550 = 0
0004de6c: NF := 63:63[#550]
0004de73: R2 := pad:64[mem[R1 + 1]]
0004de7a: R0 := pad:64[31:0[R0] ^ 31:0[R2]]
0004de82: mem := mem with [R1 + 1] <- 7:0[R0]
0004de87: when ZF goto %00049719
0006cc6f: goto %0004de8b

0004de8b:
0004de90: R0 := pad:64[mem[R23 + 2]]
0004de96: #551 := R26 - 3
0004de9b: VF := extend:65[#551] <> extend:65[R26] - 3
0004dea0: CF := pad:65[#551] <> pad:65[R26] + 0xFFFFFFFFFFFFFFFD
0004dea4: ZF := #551 = 0
0004dea8: NF := 63:63[#551]
0004deaf: R2 := pad:64[mem[R1 + 2]]
0004deb6: R0 := pad:64[31:0[R0] ^ 31:0[R2]]
0004debe: mem := mem with [R1 + 2] <- 7:0[R0]
0004dec3: when ZF goto %00049719
0006cc70: goto %0004dec7

0004dec7:
0004decc: R0 := pad:64[mem[R23 + 3]]
0004ded2: #552 := R26 - 4
0004ded7: VF := extend:65[#552] <> extend:65[R26] - 4
0004dedc: CF := pad:65[#552] <> pad:65[R26] + 0xFFFFFFFFFFFFFFFC
0004dee0: ZF := #552 = 0
0004dee4: NF := 63:63[#552]
0004deeb: R2 := pad:64[mem[R1 + 3]]
0004def2: R0 := pad:64[31:0[R0] ^ 31:0[R2]]
0004defa: mem := mem with [R1 + 3] <- 7:0[R0]
0004deff: when ZF goto %00049719
0006cc71: goto %0004df03

0004df03:
0004df08: R0 := pad:64[mem[R23 + 4]]
0004df0e: #553 := R26 - 5
0004df13: VF := extend:65[#553] <> extend:65[R26] - 5
0004df18: CF := pad:65[#553] <> pad:65[R26] + 0xFFFFFFFFFFFFFFFB
0004df1c: ZF := #553 = 0
0004df20: NF := 63:63[#553]
0004df27: R2 := pad:64[mem[R1 + 4]]
0004df2e: R0 := pad:64[31:0[R0] ^ 31:0[R2]]
0004df36: mem := mem with [R1 + 4] <- 7:0[R0]
0004df3b: when ZF goto %00049719
0006cc72: goto %0004df3f

0004df3f:
0004df44: R0 := pad:64[mem[R23 + 5]]
0004df4a: #554 := R26 - 6
0004df4f: VF := extend:65[#554] <> extend:65[R26] - 6
0004df54: CF := pad:65[#554] <> pad:65[R26] + 0xFFFFFFFFFFFFFFFA
0004df58: ZF := #554 = 0
0004df5c: NF := 63:63[#554]
0004df63: R2 := pad:64[mem[R1 + 5]]
0004df6a: R0 := pad:64[31:0[R0] ^ 31:0[R2]]
0004df72: mem := mem with [R1 + 5] <- 7:0[R0]
0004df77: when ZF goto %00049719
0006cc73: goto %0004df7b

0004df7b:
0004df80: R0 := pad:64[mem[R23 + 6]]
0004df86: #555 := R26 - 7
0004df8b: VF := extend:65[#555] <> extend:65[R26] - 7
0004df90: CF := pad:65[#555] <> pad:65[R26] + 0xFFFFFFFFFFFFFFF9
0004df94: ZF := #555 = 0
0004df98: NF := 63:63[#555]
0004df9f: R2 := pad:64[mem[R1 + 6]]
0004dfa6: R0 := pad:64[31:0[R0] ^ 31:0[R2]]
0004dfae: mem := mem with [R1 + 6] <- 7:0[R0]
0004dfb3: when ZF goto %00049719
0006cc74: goto %0004dfb7

0004dfb7:
0004dfbc: R0 := pad:64[mem[R23 + 7]]
0004dfc2: #556 := R26 - 8
0004dfc7: VF := extend:65[#556] <> extend:65[R26] - 8
0004dfcc: CF := pad:65[#556] <> pad:65[R26] + 0xFFFFFFFFFFFFFFF8
0004dfd0: ZF := #556 = 0
0004dfd4: NF := 63:63[#556]
0004dfdb: R2 := pad:64[mem[R1 + 7]]
0004dfe2: R0 := pad:64[31:0[R0] ^ 31:0[R2]]
0004dfea: mem := mem with [R1 + 7] <- 7:0[R0]
0004dfef: when ZF goto %00049719
0006cc75: goto %0004dff3

0004dff3:
0004dff8: R0 := pad:64[mem[R23 + 8]]
0004dffe: #557 := R26 - 9
0004e003: VF := extend:65[#557] <> extend:65[R26] - 9
0004e008: CF := pad:65[#557] <> pad:65[R26] + 0xFFFFFFFFFFFFFFF7
0004e00c: ZF := #557 = 0
0004e010: NF := 63:63[#557]
0004e017: R2 := pad:64[mem[R1 + 8]]
0004e01e: R0 := pad:64[31:0[R0] ^ 31:0[R2]]
0004e026: mem := mem with [R1 + 8] <- 7:0[R0]
0004e02b: when ZF goto %00049719
0006cc76: goto %0004e02f

0004e02f:
0004e034: R0 := pad:64[mem[R23 + 9]]
0004e03a: #558 := R26 - 0xA
0004e03f: VF := extend:65[#558] <> extend:65[R26] - 0xA
0004e044: CF := pad:65[#558] <> pad:65[R26] + 0xFFFFFFFFFFFFFFF6
0004e048: ZF := #558 = 0
0004e04c: NF := 63:63[#558]
0004e053: R2 := pad:64[mem[R1 + 9]]
0004e05a: R0 := pad:64[31:0[R0] ^ 31:0[R2]]
0004e062: mem := mem with [R1 + 9] <- 7:0[R0]
0004e067: when ZF goto %00049719
0006cc77: goto %0004e06b

0004e06b:
0004e070: R0 := pad:64[mem[R23 + 0xA]]
0004e076: #559 := R26 - 0xB
0004e07b: VF := extend:65[#559] <> extend:65[R26] - 0xB
0004e080: CF := pad:65[#559] <> pad:65[R26] + 0xFFFFFFFFFFFFFFF5
0004e084: ZF := #559 = 0
0004e088: NF := 63:63[#559]
0004e08f: R2 := pad:64[mem[R1 + 0xA]]
0004e096: R0 := pad:64[31:0[R0] ^ 31:0[R2]]
0004e09e: mem := mem with [R1 + 0xA] <- 7:0[R0]
0004e0a3: when ZF goto %00049719
0006cc78: goto %0004e0a7

0004e0a7:
0004e0ac: R0 := pad:64[mem[R23 + 0xB]]
0004e0b2: #560 := R26 - 0xC
0004e0b7: VF := extend:65[#560] <> extend:65[R26] - 0xC
0004e0bc: CF := pad:65[#560] <> pad:65[R26] + 0xFFFFFFFFFFFFFFF4
0004e0c0: ZF := #560 = 0
0004e0c4: NF := 63:63[#560]
0004e0cb: R2 := pad:64[mem[R1 + 0xB]]
0004e0d2: R0 := pad:64[31:0[R0] ^ 31:0[R2]]
0004e0da: mem := mem with [R1 + 0xB] <- 7:0[R0]
0004e0df: when ZF goto %00049719
0006cc79: goto %0004e0e3

0004e0e3:
0004e0e8: R0 := pad:64[mem[R23 + 0xC]]
0004e0ee: #561 := R26 - 0xD
0004e0f3: VF := extend:65[#561] <> extend:65[R26] - 0xD
0004e0f8: CF := pad:65[#561] <> pad:65[R26] + 0xFFFFFFFFFFFFFFF3
0004e0fc: ZF := #561 = 0
0004e100: NF := 63:63[#561]
0004e107: R2 := pad:64[mem[R1 + 0xC]]
0004e10e: R0 := pad:64[31:0[R0] ^ 31:0[R2]]
0004e116: mem := mem with [R1 + 0xC] <- 7:0[R0]
0004e11b: when ZF goto %00049719
0006cc7a: goto %0004e11f

0004e11f:
0004e124: R0 := pad:64[mem[R23 + 0xD]]
0004e12a: #562 := R26 - 0xE
0004e12f: VF := extend:65[#562] <> extend:65[R26] - 0xE
0004e134: CF := pad:65[#562] <> pad:65[R26] + 0xFFFFFFFFFFFFFFF2
0004e138: ZF := #562 = 0
0004e13c: NF := 63:63[#562]
0004e143: R2 := pad:64[mem[R1 + 0xD]]
0004e14a: R0 := pad:64[31:0[R0] ^ 31:0[R2]]
0004e152: mem := mem with [R1 + 0xD] <- 7:0[R0]
0004e157: when ZF goto %00049719
0006cc7b: goto %0004e15b

0004e15b:
0004e160: R2 := pad:64[mem[R23 + 0xE]]
0004e167: R0 := pad:64[mem[R1 + 0xE]]
0004e16e: R0 := pad:64[31:0[R0] ^ 31:0[R2]]
0004e176: mem := mem with [R1 + 0xE] <- 7:0[R0]
0006cc7c: goto %00049719

00049719:
00049722: R2 := R28
00049728: R0 := R27
0004972d: R1 := 0x40
00049732: R30 := 0x9D90
00049734: call @md5_process_block with return %00049736

00049736:
0004973a: R0 := R22
0004973f: R1 := 0x10
00049744: R30 := 0x9D9C
00049746: call @md5_process_bytes with return %00049748

00049748:
0004974c: R1 := R21
00049752: R0 := R28
00049757: R30 := 0x9DA8
00049759: call @md5_finish_ctx with return %0004975b

0004975b:
00049760: R20 := mem[R20 + 0xFB8, el]:u64
00049767: R0 := mem[R31 + 0x208, el]:u64
0004976e: R1 := mem[R20, el]:u64
00049774: #219 := ~R1
00049779: #220 := R0 + ~R1 + 1
0004977f: VF := extend:65[#220] <> extend:65[R0] + extend:65[#219] + 1
00049785: CF := pad:65[#220] <> pad:65[R0] + pad:65[#219] + 1
00049789: ZF := #220 = 0
0004978d: NF := 63:63[#220]
00049791: R0 := #220
00049796: R1 := 0
0004979c: when ZF <> 1 goto %0004979a
0006cc7d: goto %0004dda7

0004979a:
000497a2: R30 := 0x9F20
000497a4: call @__stack_chk_fail with return %0006cc7e

0006cc7e:
0006cc7f: call @md5_stream with noreturn

0004dda7:
0004ddaa: R0 := 0
0004ddb1: R29 := mem[R31, el]:u64
0004ddb6: R30 := mem[R31 + 8, el]:u64
0004ddbc: #544 := R31 + 0x10
0004ddc1: R19 := mem[#544, el]:u64
0004ddc6: R20 := mem[#544 + 8, el]:u64
0004ddcc: #545 := R31 + 0x20
0004ddd1: R21 := mem[#545, el]:u64
0004ddd6: R22 := mem[#545 + 8, el]:u64
0004dddc: #546 := R31 + 0x30
0004dde1: R23 := mem[#546, el]:u64
0004dde6: R24 := mem[#546 + 8, el]:u64
0004ddec: #547 := R31 + 0x40
0004ddf1: R25 := mem[#547, el]:u64
0004ddf6: R26 := mem[#547 + 8, el]:u64
0004ddfc: #548 := R31 + 0x50
0004de01: R27 := mem[#548, el]:u64
0004de06: R28 := mem[#548 + 8, el]:u64
0004de0c: R31 := R31 + 0x210
0004de11: call R30 with noreturn

0006cc80: sub host_connect(host_connect_result)
0006d10c: host_connect_result :: out u32 = low:32[R0]

0005641a:
0005641e: #1023 := R31 - 0x40
00056424: mem := mem with [#1023, el]:u64 <- R29
0005642a: mem := mem with [#1023 + 8, el]:u64 <- R30
0005642e: R31 := #1023
00056434: R29 := R31
0005643a: #1024 := R31 + 0x10
00056440: mem := mem with [#1024, el]:u64 <- R19
00056446: mem := mem with [#1024 + 8, el]:u64 <- R20
0005644b: R19 := 0x27000
00056451: R20 := R0
00056458: R0 := mem[R19 + 0xFB8, el]:u64
00056460: mem := mem with [R31 + 0x20, el]:u64 <- R21
00056466: R21 := pad:64[31:0[R1]]
0005646d: R1 := mem[R0, el]:u64
00056475: mem := mem with [R31 + 0x38, el]:u64 <- R1
0005647a: R1 := 0
0005647f: R30 := 0xE8F8
00056481: call @__errno_location with return %00056483

00056483:
00056487: R2 := R0
0005648d: R1 := R20
00056493: R0 := R31 + 0x30
0005649a: mem := mem with [R2, el]:u32 <- 0
0005649f: R30 := 0xE90C
000564a1: call @so_resolv with return %000564a3

000564a3:
000564a7: when 31:0[R0] = 0 goto %000564a5
0006cc81: goto %0005c04c

000564a5:
000564ad: R0 := 0xFFFFFFFF
000564b2: goto %000564b0

0005c04c:
0005c051: R0 := pad:64[mem[R31 + 0x30, el]:u32]
0005c057: R1 := pad:64[31:0[R21]]
0005c05c: R30 := 0xE91C
0005c05e: call @so_connect with return %000564b0

000564b0:
000564b8: R19 := mem[R19 + 0xFB8, el]:u64
000564bf: R1 := mem[R31 + 0x38, el]:u64
000564c6: R2 := mem[R19, el]:u64
000564cc: #1025 := ~R2
000564d1: #1026 := R1 + ~R2 + 1
000564d7: VF := extend:65[#1026] <> extend:65[R1] + extend:65[#1025] + 1
000564dd: CF := pad:65[#1026] <> pad:65[R1] + pad:65[#1025] + 1
000564e1: ZF := #1026 = 0
000564e5: NF := 63:63[#1026]
000564e9: R1 := #1026
000564ee: R2 := 0
000564f4: when ZF <> 1 goto %000564f2
0006cc82: goto %0005c020

000564f2:
000564fa: R30 := 0xE950
000564fc: call @__stack_chk_fail with return %0006cc83

0006cc83:
0006cc84: call @www_authenticate with noreturn

0005c020:
0005c024: #1324 := R31 + 0x10
0005c029: R19 := mem[#1324, el]:u64
0005c02e: R20 := mem[#1324 + 8, el]:u64
0005c035: R21 := mem[R31 + 0x20, el]:u64
0005c03c: R29 := mem[R31, el]:u64
0005c041: R30 := mem[R31 + 8, el]:u64
0005c045: R31 := R31 + 0x40
0005c04a: call R30 with noreturn

0006cc85: sub http_body_drop(http_body_drop_result)
0006d10d: http_body_drop_result :: out u32 = low:32[R0]

00054ae1:
00054ae5: #914 := R31 - 0x40
00054aeb: mem := mem with [#914, el]:u64 <- R29
00054af1: mem := mem with [#914 + 8, el]:u64 <- R30
00054af5: R31 := #914
00054afb: R29 := R31
00054b01: #915 := R31 + 0x10
00054b07: mem := mem with [#915, el]:u64 <- R19
00054b0d: mem := mem with [#915 + 8, el]:u64 <- R20
00054b13: R19 := R1
00054b19: #916 := R31 + 0x20
00054b1f: mem := mem with [#916, el]:u64 <- R21
00054b25: mem := mem with [#916 + 8, el]:u64 <- R22
00054b2b: R21 := pad:64[31:0[R0]]
00054b31: when R1 = 0 goto %00054b2f
0006cc86: goto %0005e2cf

00054b2f:
00054b37: R20 := 0
00054b3c: goto %00054b3a

0005e2cf:
0005e2d4: R0 := pad:64[mem[R1 + 0x1C, el]:u32]
0005e2da: when 31:0[R0] <> 0 goto %00054d64
0006cc87: goto %0005e2de

00054d64:
00054d67: R0 := 0
00054d6e: R0 := mem[R0 + 8, el]:u64
00054d76: mem := mem with [R31 + 0x30, el]:u64 <- R23
0006cc88: call @http_parse_basic with noreturn

0005e2de:
0005e2e2: R20 := R1
0006cc89: goto %00054b3a

00054b3a:
00054b42: R0 := pad:64[mem[R19 + 0x10, el]:u32]
00054b47: R3 := 0xCC
00054b4c: R1 := 0x63
00054b52: #917 := 31:0[R0] - 0x130
00054b57: VF := extend:33[#917] <> extend:33[31:0[R0]] - 0x130
00054b5c: CF := pad:33[#917] <> pad:33[31:0[R0]] + 0xFFFFFED0
00054b60: ZF := #917 = 0
00054b64: NF := 31:31[#917]
00054b6a: R2 := pad:64[31:0[R0] - 0x64]
00054b70: #918 := ~31:0[R3]
00054b75: #919 := 31:0[R0] + ~31:0[R3] + 1
00054b9d: goto %00054b97

00054b97:
00054b99: when ZF <> 1 goto %00054b7b
00054b9a: goto %00054b8c

00054b8c:
00054b8d: VF := 0
00054b90: CF := 0
00054b93: ZF := 1
00054b96: NF := 0
00054b9c: goto %00054b98

00054b7b:
00054b7c: VF := extend:33[#919] <> extend:33[31:0[R0]] + extend:33[#918] + 1
00054b82: CF := pad:33[#919] <> pad:33[31:0[R0]] + pad:33[#918] + 1
00054b86: ZF := #919 = 0
00054b8a: NF := 31:31[#919]
00054b9b: goto %00054b98

00054b98:
00054ba4: #920 := ~31:0[R1]
00054ba9: #921 := 31:0[R2] + ~31:0[R1] + 1
00054bd1: goto %00054bcb

00054bcb:
00054bcd: when ZF <> 1 goto %00054baf
00054bce: goto %00054bc0

00054bc0:
00054bc1: VF := 0
00054bc4: CF := 0
00054bc7: ZF := 0
00054bca: NF := 0
00054bd0: goto %00054bcc

00054baf:
00054bb0: VF := extend:33[#921] <> extend:33[31:0[R2]] + extend:33[#920] + 1
00054bb6: CF := pad:33[#921] <> pad:33[31:0[R2]] + pad:33[#920] + 1
00054bba: ZF := #921 = 0
00054bbe: NF := 31:31[#921]
00054bcf: goto %00054bcc

00054bcc:
00054bd9: R0 := mem[R20 + 8, el]:u64
00054be0: when CF & ~ZF goto %00054bde
0006cc8a: goto %0005e2bd

00054bde:
00054be6: R1 := 0x12000
00054bec: R1 := R1 + 0x918
00054bf4: mem := mem with [R31 + 0x30, el]:u64 <- R23
00054bf9: R30 := 0xC9AC
00054bfb: call @hlist_get with return %00054bfd

00054bfd:
00054c01: when R0 = 0 goto %00054bff
0006cc8b: goto %0005e295

00054bff:
00054c09: R0 := mem[R20 + 8, el]:u64
00054c0e: R1 := 0x12000
00054c13: R22 := 0x12000
00054c19: R1 := R1 + 0x928
00054c1e: R30 := 0xCA20
00054c20: call @hlist_in with return %00054c22

00054c22:
00054c27: when 31:0[R0] <> 0 goto %00054c25
0006cc8c: goto %0005e275

0005e275:
0005e27a: R0 := mem[R20 + 8, el]:u64
0005e27f: R22 := 0x12000
0005e285: R1 := R22 + 0x938
0005e28a: R30 := 0xCA34
0005e28c: call @hlist_in with return %0005e28e

0005e28e:
0005e291: when 31:0[R0] = 0 goto %0005e1b2
0006cc8d: goto %00054c25

0005e1b2:
0005e1b7: R0 := mem[R20 + 8, el]:u64
0005e1bc: R2 := 0x12000
0005e1c1: R1 := 0x12000
0005e1c7: R2 := R2 + 0x950
0005e1cd: R1 := R1 + 0x958
0005e1d2: R30 := 0xCAD4
0005e1d4: call @hlist_subcmp with return %0005e1d6

0005e1d6:
0005e1da: when 31:0[R0] <> 0 goto %00054c25
0006cc8e: goto %0005e1de

00054c25:
00054c2f: R0 := mem[R20 + 8, el]:u64
00054c35: R23 := R22 + 0x938
00054c3b: R1 := R23
00054c40: R30 := 0xCA48
00054c42: call @hlist_in with return %00054c44

00054c44:
00054c48: when 31:0[R0] = 0 goto %00054c46
0006cc8f: goto %0005e223

00054c46:
00054c4e: R23 := 0x12000
00054c53: R20 := 0xFFFFFFFFFFFFFFFF
00054c58: goto %00054c56

0005e223:
0005e228: R0 := mem[R20 + 8, el]:u64
0005e22e: R1 := R23
0005e233: R20 := 1
0005e238: R23 := 0x12000
0005e23e: R2 := R23 + 0x968
0005e243: R30 := 0xCA64
0005e245: call @hlist_subcmp with return %0005e247

0005e247:
0005e24c: when 31:0[R0] <> 0 goto %0005e24a
0006cc90: goto %0005e270

0005e270:
0005e273: R20 := 0xFFFFFFFFFFFFFFFF
0006cc91: goto %00054c56

00054c56:
00054c5e: R0 := mem[R19 + 8, el]:u64
00054c64: R2 := R23 + 0x968
00054c6a: R1 := R22 + 0x938
00054c6f: R30 := 0xCA7C
00054c71: call @hlist_subcmp with return %00054c73

00054c73:
00054c78: when 31:0[R0] <> 0 goto %00054c76
0006cc92: goto %0005e197

0005e295:
0005e298: R2 := 0xA
0005e29d: R1 := 0
0005e2a2: R22 := 0x12000
0005e2a7: R30 := 0xC9C0
0005e2a9: call @strtoll with return %0005e2ab

0005e2ab:
0005e2ae: R23 := 0x12000
0005e2b4: R20 := R0
0005e2b9: when R0 = 0 goto %0005e1de
0006cc93: goto %0005e24a

0005e1de:
0005e1e3: R23 := mem[R31 + 0x30, el]:u64
0005e1e8: goto %0005e1e6

0005e24a:
0005e254: R0 := mem[R19 + 8, el]:u64
0005e25a: R2 := R23 + 0x968
0005e260: R1 := R22 + 0x938
0005e265: R30 := 0xC9DC
0005e267: call @hlist_subcmp with return %0005e269

0005e269:
0005e26c: when 31:0[R0] = 0 goto %0005e197
0006cc94: goto %00054c76

0005e197:
0005e19a: R0 := 0x27000
0005e1a1: R0 := mem[R0 + 0xF78, el]:u64
0005e1a8: R0 := pad:64[mem[R0, el]:u32]
0005e1ae: when 31:0[R0] <> 0 goto %00054cf7
0006cc95: goto %00054d15

00054cf7:
00054cfb: R2 := R20
00054d00: R1 := 0x12000
00054d05: R0 := 1
00054d0b: R1 := R1 + 0xA48
00054d10: R30 := 0xCB08
00054d12: call @__printf_chk with return %00054d14

00054d14:
00054d17: goto %00054d15

00054d15:
00054d1c: R2 := R20
00054d22: R1 := pad:64[31:0[R21]]
00054d28: #924 := R31 + 0x10
00054d2d: R19 := mem[#924, el]:u64
00054d32: R20 := mem[#924 + 8, el]:u64
00054d37: R0 := 0xFFFFFFFF
00054d3d: #925 := R31 + 0x20
00054d42: R21 := mem[#925, el]:u64
00054d47: R22 := mem[#925 + 8, el]:u64
00054d4e: R23 := mem[R31 + 0x30, el]:u64
00054d55: R29 := mem[R31, el]:u64
00054d5a: R30 := mem[R31 + 8, el]:u64
00054d5e: R31 := R31 + 0x40
00054d62: call @data_send.part.0 with noreturn

00054c76:
00054c7e: R0 := 0x27000
00054c85: R0 := mem[R0 + 0xF78, el]:u64
00054c8c: R0 := pad:64[mem[R0, el]:u32]
00054c93: when 31:0[R0] <> 0 goto %00054c91
0006cc96: goto %00054cae

00054c91:
00054c99: R1 := 0x12000
00054c9e: R0 := 1
00054ca4: R1 := R1 + 0xA28
00054ca9: R30 := 0xCAF0
00054cab: call @__printf_chk with return %00054cad

00054cad:
00054cb0: goto %00054cae

00054cae:
00054cb5: R1 := pad:64[31:0[R21]]
00054cba: R0 := 0xFFFFFFFF
00054cc0: #922 := R31 + 0x10
00054cc5: R19 := mem[#922, el]:u64
00054cca: R20 := mem[#922 + 8, el]:u64
00054cd0: #923 := R31 + 0x20
00054cd5: R21 := mem[#923, el]:u64
00054cda: R22 := mem[#923 + 8, el]:u64
00054ce1: R23 := mem[R31 + 0x30, el]:u64
00054ce8: R29 := mem[R31, el]:u64
00054ced: R30 := mem[R31 + 8, el]:u64
00054cf1: R31 := R31 + 0x40
00054cf5: call @chunked_data_send with noreturn

0005e2bd:
0005e2c0: R1 := 0x12000
0005e2c6: R1 := R1 + 0x918
0005e2cb: R30 := 0xC980
0005e2cd: call @hlist_get with return %0005e1e6

0005e1e6:
0005e1ec: R0 := 1
0005e1f2: #1385 := R31 + 0x10
0005e1f7: R19 := mem[#1385, el]:u64
0005e1fc: R20 := mem[#1385 + 8, el]:u64
0005e202: #1386 := R31 + 0x20
0005e207: R21 := mem[#1386, el]:u64
0005e20c: R22 := mem[#1386 + 8, el]:u64
0005e213: R29 := mem[R31, el]:u64
0005e218: R30 := mem[R31 + 8, el]:u64
0005e21c: R31 := R31 + 0x40
0005e221: call R30 with noreturn

0006cc97: sub http_body_send(http_body_send_result)
0006d10e: http_body_send_result :: out u32 = low:32[R0]

00054832:
00054836: #904 := R31 - 0x30
0005483c: mem := mem with [#904, el]:u64 <- R29
00054842: mem := mem with [#904 + 8, el]:u64 <- R30
00054846: R31 := #904
0005484c: R29 := R31
00054853: R4 := pad:64[mem[R3 + 0x1C, el]:u32]
00054859: #905 := R31 + 0x10
0005485f: mem := mem with [#905, el]:u64 <- R19
00054865: mem := mem with [#905 + 8, el]:u64 <- R20
0005486b: #906 := 31:0[R4] + 0
00054870: VF := extend:33[#906] <> extend:33[31:0[R4]] + 0
00054875: CF := pad:33[#906] <> pad:33[31:0[R4]] - 0x100000000
00054879: ZF := #906 = 0
0005487d: NF := 31:31[#906]
0005488b: when ZF <> 1 goto %00054883
0005488c: goto %00054887

00054887:
00054888: R19 := R3
0005488e: goto %0005488a

00054883:
00054884: R19 := R2
0005488d: goto %0005488a

0005488a:
00054894: #907 := R31 + 0x20
0005489a: mem := mem with [#907, el]:u64 <- R21
000548a0: mem := mem with [#907 + 8, el]:u64 <- R22
000548a6: R22 := pad:64[31:0[R0]]
000548ac: R21 := pad:64[31:0[R1]]
000548b2: R0 := R2
000548b8: R1 := R3
000548bd: R30 := 0xC7E8
000548bf: call @http_has_body with return %000548c1

000548c1:
000548c6: when R0 <> 0 goto %000548c4
0006cc98: goto %0005e2fa

000548c4:
000548cd: R20 := R0
000548d2: R2 := 0x12000
000548d9: R0 := mem[R19 + 8, el]:u64
000548df: R2 := R2 + 0x968
000548e4: R1 := 0x12000
000548e9: R19 := 0x27000
000548ef: R1 := R1 + 0x938
000548f4: R30 := 0xC858
000548f6: call @hlist_subcmp with return %000548f8

000548f8:
000548fc: when 31:0[R0] = 0 goto %000548fa
0006cc99: goto %0005e2e4

000548fa:
00054904: R0 := mem[R19 + 0xF78, el]:u64
0005490b: R0 := pad:64[mem[R0, el]:u32]
00054912: when 31:0[R0] <> 0 goto %00054910
0006cc9a: goto %00054933

00054910:
00054919: R2 := R20
0005491e: R1 := 0x12000
00054923: R0 := 1
00054929: R1 := R1 + 0x9F8
0005492e: R30 := 0xC90C
00054930: call @__printf_chk with return %00054932

00054932:
00054935: goto %00054933

00054933:
0005493a: R1 := pad:64[31:0[R21]]
00054940: R2 := R20
00054946: R0 := pad:64[31:0[R22]]
0005494b: R30 := 0xC8C4
0005494d: call @data_send.part.0 with return %0005494f

0005494f:
00054954: R1 := mem[R19 + 0xF78, el]:u64
0005495a: R19 := pad:64[31:0[R0]]
00054961: R0 := pad:64[mem[R1, el]:u32]
00054967: when 31:0[R0] = 0 goto %00054965
0006cc9b: goto %000549f8

000549f8:
000549fc: #912 := 31:0[R19] + 0
00054a01: VF := extend:33[#912] <> extend:33[31:0[R19]] + 0
00054a06: CF := pad:33[#912] <> pad:33[31:0[R19]] - 0x100000000
00054a0a: ZF := #912 = 0
00054a0e: NF := 31:31[#912]
00054a13: R2 := 0x12000
00054a19: R2 := R2 + 0x9B0
00054a1e: R1 := 0x12000
00054a24: R1 := R1 + 0x9C0
00054a29: R0 := 1
00054a37: when ZF <> 1 goto %00054a2f
00054a38: goto %00054a33

00054a33:
00054a34: R1 := R1
00054a3a: goto %00054a36

00054a2f:
00054a30: R1 := R2
00054a39: goto %00054a36

00054a36:
00054a3f: R30 := 0xC8F4
00054a41: call @__printf_chk with return %00054a43

00054a43:
00054a45: goto %00054965

0005e2e4:
0005e2e9: R0 := mem[R19 + 0xF78, el]:u64
0005e2f0: R0 := pad:64[mem[R0, el]:u32]
0005e2f6: when 31:0[R0] <> 0 goto %00054a47
0006cc9c: goto %00054a5f

00054a47:
00054a4a: R1 := 0x12000
00054a4f: R0 := 1
00054a55: R1 := R1 + 0x9E0
00054a5a: R30 := 0xC920
00054a5c: call @__printf_chk with return %00054a5e

00054a5e:
00054a61: goto %00054a5f

00054a5f:
00054a66: R1 := pad:64[31:0[R21]]
00054a6c: R0 := pad:64[31:0[R22]]
00054a71: R30 := 0xC874
00054a73: call @chunked_data_send with return %00054a75

00054a75:
00054a7a: R1 := mem[R19 + 0xF78, el]:u64
00054a80: R19 := pad:64[31:0[R0]]
00054a87: R0 := pad:64[mem[R1, el]:u32]
00054a8c: when 31:0[R0] = 0 goto %00054965
0006cc9d: goto %00054a90

00054a90:
00054a94: #913 := 31:0[R19] + 0
00054a99: VF := extend:33[#913] <> extend:33[31:0[R19]] + 0
00054a9e: CF := pad:33[#913] <> pad:33[31:0[R19]] - 0x100000000
00054aa2: ZF := #913 = 0
00054aa6: NF := 31:31[#913]
00054aab: R2 := 0x12000
00054ab1: R2 := R2 + 0x970
00054ab6: R1 := 0x12000
00054abc: R1 := R1 + 0x988
00054ac1: R0 := 1
00054acf: when ZF <> 1 goto %00054ac7
00054ad0: goto %00054acb

00054acb:
00054acc: R1 := R1
00054ad2: goto %00054ace

00054ac7:
00054ac8: R1 := R2
00054ad1: goto %00054ace

00054ace:
00054ad7: R30 := 0xC8A4
00054ad9: call @__printf_chk with return %00054adb

00054adb:
00054add: goto %00054965

0005e2fa:
0005e2fd: R0 := 0x27000
0005e302: R19 := 1
0005e309: R0 := mem[R0 + 0xF78, el]:u64
0005e310: R0 := pad:64[mem[R0, el]:u32]
0005e316: when 31:0[R0] <> 0 goto %000549a5
0006cc9e: goto %00054965

000549a5:
000549a9: R0 := pad:64[31:0[R19]]
000549ae: R1 := 0x12000
000549b4: R1 := R1 + 0xA18
000549b9: R30 := 0xC824
000549bb: call @__printf_chk with return %000549bd

000549bd:
000549c1: R0 := pad:64[31:0[R19]]
000549c7: #910 := R31 + 0x10
000549cc: R19 := mem[#910, el]:u64
000549d1: R20 := mem[#910 + 8, el]:u64
000549d7: #911 := R31 + 0x20
000549dc: R21 := mem[#911, el]:u64
000549e1: R22 := mem[#911 + 8, el]:u64
000549e8: R29 := mem[R31, el]:u64
000549ed: R30 := mem[R31 + 8, el]:u64
000549f1: R31 := R31 + 0x30
000549f6: call R30 with noreturn

00054965:
0005496e: R0 := pad:64[31:0[R19]]
00054974: #908 := R31 + 0x10
00054979: R19 := mem[#908, el]:u64
0005497e: R20 := mem[#908 + 8, el]:u64
00054984: #909 := R31 + 0x20
00054989: R21 := mem[#909, el]:u64
0005498e: R22 := mem[#909 + 8, el]:u64
00054995: R29 := mem[R31, el]:u64
0005499a: R30 := mem[R31 + 8, el]:u64
0005499e: R31 := R31 + 0x30
000549a3: call R30 with noreturn

0006cc9f: sub http_has_body(http_has_body_result)
0006d10f: http_has_body_result :: out u32 = low:32[R0]

0005453c:
00054540: #887 := R31 - 0x30
00054546: mem := mem with [#887, el]:u64 <- R29
0005454c: mem := mem with [#887 + 8, el]:u64 <- R30
00054550: R31 := #887
00054556: R29 := R31
0005455c: #888 := R31 + 0x10
00054562: mem := mem with [#888, el]:u64 <- R19
00054568: mem := mem with [#888 + 8, el]:u64 <- R20
0005456e: R19 := R0
00054574: R20 := R1
0005457c: mem := mem with [R31 + 0x20, el]:u64 <- R21
00054582: when R1 = 0 goto %00054580
0006cca0: goto %0005e453

0005e453:
0005e458: R0 := pad:64[mem[R1 + 0x1C, el]:u32]
0005e45d: when 31:0[R0] = 0 goto %000545a6
0006cca1: goto %00054580

00054580:
00054589: #889 := ~R19
0005458e: #890 := R20 + ~R19 + 1
00054594: VF := extend:65[#890] <> extend:65[R20] + extend:65[#889] + 1
0005459a: CF := pad:65[#890] <> pad:65[R20] + pad:65[#889] + 1
0005459e: ZF := #890 = 0
000545a2: NF := 63:63[#890]
000545a8: when ZF goto %000545a6
0006cca2: goto %0005e437

000545a6:
000545af: R21 := R20
000545b5: when R19 = 0 goto %000545b3
0006cca3: goto %0005e408

0005e408:
0005e40d: R0 := pad:64[mem[R19, el]:u32]
0005e412: when 31:0[R0] = 0 goto %000545b3
0006cca4: goto %0005e416

0005e416:
0005e41b: R1 := mem[R19 + 0x28, el]:u64
0005e420: R0 := 0x12000
0005e426: R0 := R0 + 0x908
0005e42b: R30 := 0xC6A4
0005e42d: call @strcasecmp with return %0005e42f

0005e42f:
0005e433: when 31:0[R0] <> 0 goto %000545b3
0006cca5: goto %0005e33a

000545b3:
000545bd: R0 := pad:64[mem[R20 + 0x10, el]:u32]
000545c2: R3 := 0xCC
000545c7: R1 := 0x63
000545cd: #891 := 31:0[R0] - 0x130
000545d2: VF := extend:33[#891] <> extend:33[31:0[R0]] - 0x130
000545d7: CF := pad:33[#891] <> pad:33[31:0[R0]] + 0xFFFFFED0
000545db: ZF := #891 = 0
000545df: NF := 31:31[#891]
000545e5: R2 := pad:64[31:0[R0] - 0x64]
000545eb: #892 := ~31:0[R3]
000545f0: #893 := 31:0[R0] + ~31:0[R3] + 1
00054618: goto %00054612

00054612:
00054614: when ZF <> 1 goto %000545f6
00054615: goto %00054607

00054607:
00054608: VF := 0
0005460b: CF := 0
0005460e: ZF := 1
00054611: NF := 0
00054617: goto %00054613

000545f6:
000545f7: VF := extend:33[#893] <> extend:33[31:0[R0]] + extend:33[#892] + 1
000545fd: CF := pad:33[#893] <> pad:33[31:0[R0]] + pad:33[#892] + 1
00054601: ZF := #893 = 0
00054605: NF := 31:31[#893]
00054616: goto %00054613

00054613:
0005461f: #894 := ~31:0[R1]
00054624: #895 := 31:0[R2] + ~31:0[R1] + 1
0005464c: goto %00054646

00054646:
00054648: when ZF <> 1 goto %0005462a
00054649: goto %0005463b

0005463b:
0005463c: VF := 0
0005463f: CF := 0
00054642: ZF := 0
00054645: NF := 0
0005464b: goto %00054647

0005462a:
0005462b: VF := extend:33[#895] <> extend:33[31:0[R2]] + extend:33[#894] + 1
00054631: CF := pad:33[#895] <> pad:33[31:0[R2]] + pad:33[#894] + 1
00054635: ZF := #895 = 0
00054639: NF := 31:31[#895]
0005464a: goto %00054647

00054647:
00054654: when CF & ~ZF goto %00054652
0006cca6: goto %0005e3eb

0005e3eb:
0005e3f0: R0 := mem[R21 + 8, el]:u64
0005e3f5: R1 := 0x12000
0005e3fb: R1 := R1 + 0x918
0005e400: R30 := 0xC71C
0005e402: call @hlist_get with return %0005e404

0005e404:
0005e406: goto %000546ff

0005e437:
0005e43a: when R19 = 0 goto %00054827
0006cca7: goto %0005e43e

00054827:
0005482c: R0 := mem[R19 + 8, el]:u64
0006cca8: call @http_body_send with noreturn

0005e43e:
0005e443: R0 := pad:64[mem[R19, el]:u32]
0005e449: when 31:0[R0] <> 0 goto %0005e35c
0006cca9: goto %0005e44d

0005e35c:
0005e361: R20 := mem[R19 + 0x28, el]:u64
0005e366: R0 := 0x12000
0005e36c: R0 := R0 + 0x910
0005e372: R1 := R20
0005e377: R30 := 0xC6D0
0005e379: call @strcasecmp with return %0005e37b

0005e37b:
0005e37f: when 31:0[R0] <> 0 goto %0005e31a
0006ccaa: goto %0005e383

0005e31a:
0005e31e: R1 := R20
0005e323: R0 := 0x12000
0005e329: R21 := R19
0005e32f: R0 := R0 + 0x908
0005e334: R30 := 0xC760
0005e336: call @strcasecmp with return %0005e338

0005e338:
0005e33c: when 31:0[R0] = 0 goto %0005e33a
0006ccab: goto %0005e3a6

0005e3a6:
0005e3a8: goto %00054652

0005e33a:
0005e344: R0 := mem[R21 + 8, el]:u64
0005e349: R1 := 0x12000
0005e34f: R1 := R1 + 0x918
0005e354: R30 := 0xC6B8
0005e356: call @hlist_get with return %0005e358

0005e358:
0005e35a: goto %000546ff

0005e383:
0005e387: R21 := R19
0005e38c: R1 := 0x12000
0005e392: R1 := R1 + 0x918
0005e399: R0 := mem[R21 + 8, el]:u64
0005e39e: R30 := 0xC6E8
0005e3a0: call @hlist_get with return %0005e3a2

0005e3a2:
0005e3a4: goto %000546ff

0005e44d:
0005e451: R21 := R19
0006ccac: goto %00054652

00054652:
0005465c: R0 := mem[R21 + 8, el]:u64
00054661: R1 := 0x12000
00054667: R1 := R1 + 0x918
0005466c: R30 := 0xC61C
0005466e: call @hlist_get with return %00054670

00054670:
00054675: when R0 <> 0 goto %00054673
0006ccad: goto %0005e3aa

00054673:
0005467b: R1 := 0
00054680: R2 := 0xA
00054685: R30 := 0xC72C
00054688: call @strtoll with return %0005468a

0005468a:
0005468e: #896 := R0 + 1
00054693: VF := extend:65[#896] <> extend:65[R0] + 1
00054698: CF := pad:65[#896] <> pad:65[R0] + 1
0005469c: ZF := #896 = 0
000546a0: NF := 63:63[#896]
000546ac: when ZF <> 1 goto %000546a5
000546ad: goto %000546a8

000546a8:
000546a9: R1 := 1
000546af: goto %000546ab

000546a5:
000546a6: R1 := 0
000546ae: goto %000546ab

000546ab:
000546b5: #897 := 31:0[R1] + 0
000546ba: VF := extend:33[#897] <> extend:33[31:0[R1]] + 0
000546bf: CF := pad:33[#897] <> pad:33[31:0[R1]] - 0x100000000
000546c3: ZF := #897 = 0
000546c7: NF := 31:31[#897]
000546cd: #898 := ~R21
000546d2: #899 := R19 + ~R21 + 1
000546fa: goto %000546f4

000546f4:
000546f6: when ZF <> 1 goto %000546d8
000546f7: goto %000546e9

000546e9:
000546ea: VF := 0
000546ed: CF := 0
000546f0: ZF := 0
000546f3: NF := 0
000546f9: goto %000546f5

000546d8:
000546d9: VF := extend:65[#899] <> extend:65[R19] + extend:65[#898] + 1
000546df: CF := pad:65[#899] <> pad:65[R19] + pad:65[#898] + 1
000546e3: ZF := #899 = 0
000546e7: NF := 63:63[#899]
000546f8: goto %000546f5

000546f5:
00054701: when ZF goto %000546ff
0006ccae: goto %00054735

00054735:
00054737: goto %00054709

0005e3aa:
0005e3af: R0 := mem[R21 + 8, el]:u64
0005e3b4: R1 := 0x12000
0005e3ba: R1 := R1 + 0x928
0005e3bf: R30 := 0xC630
0005e3c1: call @hlist_in with return %0005e3c3

0005e3c3:
0005e3c7: when 31:0[R0] <> 0 goto %00054739
0006ccaf: goto %0005e3cb

00054739:
0005473c: R20 := 0x12000
00054741: goto %0005473f

0005e3cb:
0005e3d0: R0 := mem[R21 + 8, el]:u64
0005e3d5: R20 := 0x12000
0005e3db: R1 := R20 + 0x938
0005e3e0: R30 := 0xC644
0005e3e2: call @hlist_in with return %0005e3e4

0005e3e4:
0005e3e7: when 31:0[R0] = 0 goto %000547f7
0006ccb0: goto %0005473f

000547f7:
000547fc: R0 := mem[R21 + 8, el]:u64
00054801: R2 := 0x12000
00054806: R1 := 0x12000
0005480c: R2 := R2 + 0x950
00054812: R1 := R1 + 0x958
00054817: R30 := 0xC7A4
00054819: call @hlist_subcmp with return %0005481b

0005481b:
0005481f: when 31:0[R0] <> 0 goto %0005473f
0006ccb1: goto %00054823

00054823:
00054825: goto %000546ff

0005473f:
00054747: R0 := mem[R21 + 8, el]:u64
0005474d: R20 := R20 + 0x938
00054753: R1 := R20
00054758: R30 := 0xC658
0005475a: call @hlist_in with return %0005475c

0005475c:
00054761: when 31:0[R0] <> 0 goto %0005475f
0006ccb2: goto %00054797

0005475f:
00054769: R0 := mem[R21 + 8, el]:u64
0005476f: R1 := R20
00054774: R2 := 0x12000
0005477a: R2 := R2 + 0x968
0005477f: R30 := 0xC77C
00054781: call @hlist_subcmp with return %00054783

00054783:
00054787: R1 := pad:64[31:0[R0]]
0005478c: R0 := 1
00054792: when 31:0[R1] <> 0 goto %00054709
0006ccb3: goto %00054796

00054796:
00054799: goto %00054797

00054797:
0005479d: R1 := 1
000547a3: #901 := 31:0[R1] + 0
000547a8: VF := extend:33[#901] <> extend:33[31:0[R1]] + 0
000547ad: CF := pad:33[#901] <> pad:33[31:0[R1]] - 0x100000000
000547b1: ZF := #901 = 0
000547b5: NF := 31:31[#901]
000547bb: #902 := ~R21
000547c0: #903 := R19 + ~R21 + 1
000547e8: goto %000547e2

000547e2:
000547e4: when ZF <> 1 goto %000547c6
000547e5: goto %000547d7

000547d7:
000547d8: VF := 0
000547db: CF := 0
000547de: ZF := 0
000547e1: NF := 0
000547e7: goto %000547e3

000547c6:
000547c7: VF := extend:65[#903] <> extend:65[R19] + extend:65[#902] + 1
000547cd: CF := pad:65[#903] <> pad:65[R19] + pad:65[#902] + 1
000547d1: ZF := #903 = 0
000547d5: NF := 63:63[#903]
000547e6: goto %000547e3

000547e3:
000547ee: R0 := 0xFFFFFFFFFFFFFFFF
000547f3: when ZF <> 1 goto %00054709
0006ccb4: goto %000546ff

000546ff:
00054707: R0 := 0
0006ccb5: goto %00054709

00054709:
0005470d: #900 := R31 + 0x10
00054712: R19 := mem[#900, el]:u64
00054717: R20 := mem[#900 + 8, el]:u64
0005471e: R21 := mem[R31 + 0x20, el]:u64
00054725: R29 := mem[R31, el]:u64
0005472a: R30 := mem[R31 + 8, el]:u64
0005472e: R31 := R31 + 0x30
00054733: call R30 with noreturn

0006ccb6: sub http_parse_basic(http_parse_basic_result)
0006d110: http_parse_basic_result :: out u32 = low:32[R0]

00054d7c:
00054d80: #926 := R31 - 0x30
00054d86: mem := mem with [#926, el]:u64 <- R29
00054d8c: mem := mem with [#926 + 8, el]:u64 <- R30
00054d90: R31 := #926
00054d96: R29 := R31
00054d9c: #927 := R31 + 0x10
00054da2: mem := mem with [#927, el]:u64 <- R19
00054da8: mem := mem with [#927 + 8, el]:u64 <- R20
00054dae: R20 := R2
00054db4: R19 := R0
00054db9: R2 := 0x12000
00054dbf: R2 := R2 + 0xA60
00054dc5: #928 := R31 + 0x20
00054dcb: mem := mem with [#928, el]:u64 <- R21
00054dd1: mem := mem with [#928 + 8, el]:u64 <- R22
00054dd7: R21 := R1
00054ddc: R30 := 0xCB48
00054dde: call @hlist_subcmp with return %00054de0

00054de0:
00054de5: when 31:0[R0] <> 0 goto %00054de3
0006ccb7: goto %00054ed1

00054de3:
00054dec: R1 := R21
00054df2: R0 := R19
00054df7: R30 := 0xCB68
00054df9: call @hlist_get with return %00054dfb

00054dfb:
00054dff: R19 := R0
00054e04: R30 := 0xCB70
00054e06: call @strlen with return %00054e08

00054e08:
00054e0c: R0 := R0 + 1
00054e11: R30 := 0xCB78
00054e13: call @new with return %00054e15

00054e15:
00054e19: R21 := R0
00054e1f: R0 := R19
00054e24: R30 := 0xCB84
00054e26: call @strlen with return %00054e28

00054e28:
00054e2c: R2 := R19 + 1
00054e31: R3 := 5
00054e36: goto %00054e34

00054e34:
00054e3c: R1 := R2 + R3
00054e42: #929 := ~R3
00054e47: #930 := R0 + ~R3 + 1
00054e4d: VF := extend:65[#930] <> extend:65[R0] + extend:65[#929] + 1
00054e53: CF := pad:65[#930] <> pad:65[R0] + pad:65[#929] + 1
00054e57: ZF := #930 = 0
00054e5b: NF := 63:63[#930]
00054e62: when CF & ~ZF goto %00054e60
0006ccb8: goto %0005e190

0005e190:
0005e195: R1 := R19 + R3
0006ccb9: goto %00054e8d

00054e60:
00054e69: R3 := R3 + 1
00054e71: R4 := pad:64[mem[R19 + R3]]
00054e77: #931 := 31:0[R4] - 0x20
00054e7c: VF := extend:33[#931] <> extend:33[31:0[R4]] - 0x20
00054e81: CF := pad:33[#931] <> pad:33[31:0[R4]] + 0xFFFFFFE0
00054e85: ZF := #931 = 0
00054e89: NF := 31:31[#931]
00054e8f: when ZF <> 1 goto %00054e8d
0006ccba: goto %00054e34

00054e8d:
00054e96: R0 := R21
00054e9b: R30 := 0xCBB8
00054e9d: call @from_base64 with return %00054e9f

00054e9f:
00054ea3: R0 := R21
00054ea8: R1 := 0x3A
00054ead: R30 := 0xCBC4
00054eaf: call @strchr with return %00054eb1

00054eb1:
00054eb5: R19 := R0
00054ebb: when R0 = 0 goto %00054eb9
0006ccbb: goto %0005df77

00054eb9:
00054ec2: R0 := R21
00054ec7: R30 := 0xCCF4
00054ec9: call @free with return %00054ecb

00054ecb:
00054ece: R0 := 0xFFFFFFFF
00054ed3: goto %00054ed1

0005df77:
0005df7c: mem := mem with [R0] <- 0
0005df81: R1 := 0x5C
0005df87: R0 := R21
0005df8c: R30 := 0xCBDC
0005df8e: call @strchr with return %0005df90

0005df90:
0005df94: R22 := R0
0005df9a: when R0 = 0 goto %0005df98
0006ccbc: goto %0005e151

0005df98:
0005dfa1: when R20 = 0 goto %0005df9f
0006ccbd: goto %0005e135

0005e135:
0005e139: R1 := R21
0005e13f: R0 := R20
0005e144: R2 := 0x32
0005e149: R30 := 0xCCA0
0005e14b: call @strlcpy with return %0005e14d

0005e14d:
0005e14f: goto %0005df9f

0005e151:
0005e156: mem := mem with [R0] <- 0
0005e15b: when R20 = 0 goto %0005df9f
0006ccbe: goto %0005e15f

0005e15f:
0005e162: R2 := 0x32
0005e168: R1 := R21
0005e16f: R0 := R20 + R2
0005e174: R30 := 0xCBFC
0005e176: call @strlcpy with return %0005e178

0005e178:
0005e17c: R1 := R22 + 1
0005e182: R0 := R20
0005e187: R2 := 0x32
0005e18c: R30 := 0xCC0C
0005e18e: call @strlcpy with return %0005df9f

0005df9f:
0005dfa9: R0 := pad:64[mem[R20 + 0x12C, el]:u32]
0005dfb0: when 31:0[R0] <> 0 goto %0005dfae
0006ccbf: goto %0005e126

0005dfae:
0005dfb7: R2 := R19 + 1
0005dfbd: R1 := R20 + 0x32
0005dfc3: R0 := R20
0005dfc8: R30 := 0xCC50
0005dfca: call @ntlm2_hash_password with return %0005dfcc

0005dfcc:
0005dfd1: when R0 <> 0 goto %0005dfcf
0006ccc0: goto %0005e11f

0005dfcf:
0005dfd9: R2 := mem[R0, el]:u64
0005dfde: R3 := mem[R0 + 8, el]:u64
0005dfe4: R1 := R20 + 0xFA
0005dfec: mem := mem with [R1, el]:u64 <- R2
0005dff2: mem := mem with [R1 + 8, el]:u64 <- R3
0005dff7: R30 := 0xCCE8
0005dff9: call @free with return %0005dffb

0005dffb:
0005dffe: goto %0005dffc

0005e11f:
0005e122: R30 := 0xCC58
0005e124: call @free with return %0005dffc

0005dffc:
0005e004: R0 := pad:64[mem[R20 + 0x130, el]:u32]
0005e00a: when 31:0[R0] = 0 goto %0005e008
0006ccc1: goto %0005e0bd

0005e126:
0005e12b: R0 := pad:64[mem[R20 + 0x130, el]:u32]
0005e131: when 31:0[R0] <> 0 goto %0005e0bd
0006ccc2: goto %0005e008

0005e0bd:
0005e0c1: R0 := R19 + 1
0005e0c6: R30 := 0xCC68
0005e0c8: call @ntlm_hash_nt_password with return %0005e0ca

0005e0ca:
0005e0cf: when R0 <> 0 goto %0005e0cd
0006ccc3: goto %0005e118

0005e0cd:
0005e0d7: R2 := mem[R0, el]:u64
0005e0dc: R3 := mem[R0 + 8, el]:u64
0005e0e2: #1384 := R20 + 0xC8
0005e0e8: mem := mem with [#1384, el]:u64 <- R2
0005e0ee: mem := mem with [#1384 + 8, el]:u64 <- R3
0005e0f5: R1 := mem[R0 + 0xD, el]:u64
0005e0fd: mem := mem with [R20 + 0xD5, el]:u64 <- R1
0005e102: R30 := 0xCCB8
0005e104: call @free with return %0005e106

0005e106:
0005e109: goto %0005e107

0005e118:
0005e11b: R30 := 0xCC70
0005e11d: call @free with return %0005e107

0005e107:
0005e10f: R0 := pad:64[mem[R20 + 0x134, el]:u32]
0005e114: when 31:0[R0] = 0 goto %0005e068
0006ccc4: goto %0005e017

0005e008:
0005e012: R0 := pad:64[mem[R20 + 0x134, el]:u32]
0005e019: when 31:0[R0] <> 0 goto %0005e017
0006ccc5: goto %0005e068

0005e017:
0005e020: R0 := R19 + 1
0005e025: R30 := 0xCC80
0005e027: call @ntlm_hash_lm_password with return %0005e029

0005e029:
0005e02e: when R0 <> 0 goto %0005e02c
0006ccc6: goto %0005e0b2

0005e02c:
0005e035: R1 := R20 + 0x96
0005e03c: R2 := mem[R0, el]:u64
0005e041: R3 := mem[R0 + 8, el]:u64
0005e049: mem := mem with [R1, el]:u64 <- R2
0005e04f: mem := mem with [R1 + 8, el]:u64 <- R3
0005e056: R1 := mem[R0 + 0xD, el]:u64
0005e05e: mem := mem with [R20 + 0xA3, el]:u64 <- R1
0005e063: R30 := 0xCCD4
0005e065: call @free with return %0005e067

0005e067:
0005e06a: goto %0005e068

0005e0b2:
0005e0b5: R30 := 0xCC88
0005e0b7: call @free with return %0005e0b9

0005e0b9:
0005e0bb: goto %0005e068

0005e068:
0005e06f: R0 := R21
0005e074: R30 := 0xCC2C
0005e076: call @free with return %0005e078

0005e078:
0005e07b: R0 := 1
0005e081: #1382 := R31 + 0x10
0005e086: R19 := mem[#1382, el]:u64
0005e08b: R20 := mem[#1382 + 8, el]:u64
0005e091: #1383 := R31 + 0x20
0005e096: R21 := mem[#1383, el]:u64
0005e09b: R22 := mem[#1383 + 8, el]:u64
0005e0a2: R29 := mem[R31, el]:u64
0005e0a7: R30 := mem[R31 + 8, el]:u64
0005e0ab: R31 := R31 + 0x30
0005e0b0: call R30 with noreturn

00054ed1:
00054ed8: #932 := R31 + 0x10
00054edd: R19 := mem[#932, el]:u64
00054ee2: R20 := mem[#932 + 8, el]:u64
00054ee8: #933 := R31 + 0x20
00054eed: R21 := mem[#933, el]:u64
00054ef2: R22 := mem[#933 + 8, el]:u64
00054ef9: R29 := mem[R31, el]:u64
00054efe: R30 := mem[R31 + 8, el]:u64
00054f02: R31 := R31 + 0x30
00054f07: call R30 with noreturn

0006ccc7: sub inet_ntoa(inet_ntoa_result)
0006d111: inet_ntoa_result :: out u32 = low:32[R0]

0004bcc9:
00064829: R16 := 0x27000
00064830: R17 := mem[R16 + 0xCC0, el]:u64
00064836: R16 := R16 + 0xCC0
0006483b: call R17 with noreturn

0006ccc8: sub is_http_header(is_http_header_result)
0006d112: is_http_header_result :: out u32 = low:32[R0]

00053404:
00053408: #811 := R31 - 0x20
0005340e: mem := mem with [#811, el]:u64 <- R29
00053414: mem := mem with [#811 + 8, el]:u64 <- R30
00053418: R31 := #811
0005341d: R1 := 0x12000
00053423: R1 := R1 + 0x728
00053429: R29 := R31
0005342f: #812 := R31 + 0x10
00053435: mem := mem with [#812, el]:u64 <- R19
0005343b: mem := mem with [#812 + 8, el]:u64 <- R20
00053441: R20 := R0
00053446: R30 := 0xB7B4
00053448: call @strcspn with return %0005344a

0005344a:
0005344e: R19 := R0
00053454: R0 := R20
00053459: R30 := 0xB7C0
0005345b: call @strlen with return %0005345d

0005345d:
00053461: #813 := ~R0
00053466: #814 := R19 + ~R0 + 1
0005346c: VF := extend:65[#814] <> extend:65[R19] + extend:65[#813] + 1
00053472: CF := pad:65[#814] <> pad:65[R19] + pad:65[#813] + 1
00053476: ZF := #814 = 0
0005347a: NF := 63:63[#814]
00053486: when ZF goto %0005347f
00053487: goto %00053482

00053482:
00053483: R0 := 1
00053489: goto %00053485

0005347f:
00053480: R0 := 0
00053488: goto %00053485

00053485:
0005348f: #815 := R31 + 0x10
00053494: R19 := mem[#815, el]:u64
00053499: R20 := mem[#815 + 8, el]:u64
000534a0: R29 := mem[R31, el]:u64
000534a5: R30 := mem[R31 + 8, el]:u64
000534a9: R31 := R31 + 0x20
000534ae: call R30 with noreturn

0006ccc9: sub listen(listen_fd, listen_n, listen_result)
0006d113: listen_fd :: in u32 = low:32[R0]
0006d114: listen_n :: in u32 = low:32[R1]
0006d115: listen_result :: out u32 = low:32[R0]

0004cfde:
0006478f: R16 := 0x27000
00064796: R17 := mem[R16 + 0xC88, el]:u64
0006479c: R16 := R16 + 0xC88
000647a1: call R17 with noreturn

0006ccca: sub listen_add(listen_add_result)
0006d116: listen_add_result :: out u32 = low:32[R0]

00056de9:
00056ded: #1059 := R31 - 0x60
00056df3: mem := mem with [#1059, el]:u64 <- R29
00056df9: mem := mem with [#1059 + 8, el]:u64 <- R30
00056dfd: R31 := #1059
00056e03: R29 := R31
00056e09: #1060 := R31 + 0x20
00056e0f: mem := mem with [#1060, el]:u64 <- R21
00056e15: mem := mem with [#1060 + 8, el]:u64 <- R22
00056e1a: R22 := 0x27000
00056e20: #1061 := R31 + 0x10
00056e26: mem := mem with [#1061, el]:u64 <- R19
00056e2c: mem := mem with [#1061 + 8, el]:u64 <- R20
00056e32: R19 := R2
00056e39: R2 := mem[R22 + 0xFB8, el]:u64
00056e3f: #1062 := R31 + 0x30
00056e45: mem := mem with [#1062, el]:u64 <- R23
00056e4b: mem := mem with [#1062 + 8, el]:u64 <- R24
00056e51: R23 := R1
00056e58: R1 := mem[R2, el]:u64
00056e60: mem := mem with [R31 + 0x58, el]:u64 <- R1
00056e65: R1 := 0
00056e6b: R24 := R0
00056e71: R0 := R19
00056e79: mem := mem with [R31 + 0x40, el]:u64 <- R25
00056e7f: R25 := pad:64[31:0[R3]]
00056e84: R30 := 0x106A4
00056e86: call @strlen with return %00056e88

00056e88:
00056e8c: R20 := R0
00056e92: R20 := pad:64[31:0[R20] - 1]
00056e98: R0 := R19
00056e9d: R1 := 0x12000
00056ea3: R1 := R1 + 0x728
00056ea8: R30 := 0x106BC
00056eaa: call @strcspn with return %00056eac

00056eac:
00056eb0: #1063 := ~31:0[R0]
00056eb5: #1064 := 31:0[R20] + ~31:0[R0] + 1
00056ebb: VF := extend:33[#1064] <> extend:33[31:0[R20]] + extend:33[#1063] +
          1
00056ec1: CF := pad:33[#1064] <> pad:33[31:0[R20]] + pad:33[#1063] + 1
00056ec5: ZF := #1064 = 0
00056ec9: NF := 31:31[#1064]
00056ed1: when NF = VF & ~ZF goto %00056ecf
0006cccb: goto %0005a8d3

00056ecf:
00056ed8: R2 := pad:64[31:0[R0]]
00056edd: R1 := 0
00056ee3: R21 := R0
00056ee9: R0 := R19
00056eee: R30 := 0x107AC
00056ef0: call @substr with return %00056ef2

00056ef2:
00056ef6: R20 := R0
00056efc: R1 := R20
00056f02: R0 := R31 + 0x50
00056f07: R30 := 0x107BC
00056f09: call @so_resolv with return %00056f0b

00056f0b:
00056f0f: when 31:0[R0] = 0 goto %00056f0d
0006cccc: goto %00056f41

00056f0d:
00056f16: R3 := R20
00056f1b: R2 := 0x13000
00056f21: R2 := R2 + 0xEB0
00056f26: R1 := 1
00056f2b: R0 := 3
00056f30: R30 := 0x10804
00056f32: call @__syslog_chk with return %00056f34

00056f34:
00056f37: R0 := 1
00056f3c: R30 := 0x1080C
00056f3e: call @myexit with return %00056f40

00056f40:
00056f43: goto %00056f41

00056f41:
00056f49: R21 :=

00056f4f: R0 := R20
00056f55: R21 := R21 + 1
00056f5a: R30 := 0x107D0
00056f5c: call @free with return %00056f5e

00056f5e:
00056f63: R19 := R19 + R21
00056f68: R2 := 0xA
00056f6e: R0 := R19
00056f73: R1 := 0
00056f78: R30 := 0x107E4
00056f7a: call @strtol with return %00056f7c

00056f7c:
00056f80: R20 := pad:64[31:0[R0]]
00056f85: goto %00056f83

0005a8d3:
0005a8d7: #1258 := 31:0[R25] + 0
0005a8dc: VF := extend:33[#1258] <> extend:33[31:0[R25]] + 0
0005a8e1: CF := pad:33[#1258] <> pad:33[31:0[R25]] - 0x100000000
0005a8e5: ZF := #1258 = 0
0005a8e9: NF := 31:31[#1258]
0005a8ee: R3 := 0x7F
0005a8f4: R3 := pad:64[0x100.15:0[R3]]
0005a901: when ZF <> 1 goto %0005a8f9
0005a902: goto %0005a8fd

0005a8fd:
0005a8fe: R3 := pad:64[31:0[R3]]
0005a904: goto %0005a900

0005a8f9:
0005a8fa: R3 := 0
0005a903: goto %0005a900

0005a900:
0005a90a: R0 := R19
0005a90f: R2 := 0xA
0005a914: R1 := 0
0005a91c: mem := mem with [R31 + 0x50, el]:u32 <- 31:0[R3]
0005a921: R30 := 0x106E8
0005a923: call @strtol with return %0005a925

0005a925:
0005a929: R20 := pad:64[31:0[R0]]
0006cccd: goto %00056f83

00056f83:
00056f8a: when 31:0[R20] = 0 goto %00056f88
0006ccce: goto %00056fbc

00056f88:
00056f91: R3 := R19
00056f96: R2 := 0x13000
00056f9c: R2 := R2 + 0xED8
00056fa1: R1 := 1
00056fa6: R0 := 3
00056fab: R30 := 0x1078C
00056fad: call @__syslog_chk with return %00056faf

00056faf:
00056fb2: R0 := 1
00056fb7: R30 := 0x10794
00056fb9: call @myexit with return %00056fbb

00056fbb:
00056fbe: goto %00056fbc

00056fbc:
00056fc4: R1 := pad:64[mem[R31 + 0x50, el]:u32]
00056fca: R0 := pad:64[31:0[R20]]
00056fcf: R30 := 0x106FC
00056fd1: call @so_listen with return %00056fd3

00056fd3:
00056fd8: R1 :=

00056fde: #1065 := 31:0[R1] + 0
00056fe3: VF := extend:33[#1065] <> extend:33[31:0[R1]] + 0
00056fe8: CF := pad:33[#1065] <> pad:33[31:0[R1]] - 0x100000000
00056fec: ZF := #1065 = 0
00056ff0: NF := 31:31[#1065]
00056ff8: when ~(NF = VF & ~ZF) goto %00056ff6
0006cccf: goto %0005a876

0005a876:
0005a87b: R0 := mem[R23, el]:u64
0005a880: R2 := 0
0005a885: R30 := 0x10714
0005a887: call @plist_add with return %0005a889

0005a889:
0005a88d: R1 := R0
0005a894: R0 := pad:64[mem[R31 + 0x50, el]:u32]
0005a89c: mem := mem with [R23, el]:u64 <- R1
0005a8a1: R30 := 0x10724
0005a8a3: call @inet_ntoa with return %0005a8a5

0005a8a5:
0005a8a9: R4 := R0
0005a8ae: R2 := 0x13000
0005a8b4: R5 := pad:64[31:0[R20]]
0005a8ba: R3 := R24
0005a8c0: R2 := R2 + 0xEF8
0005a8c5: R1 := 1
0005a8ca: R0 := 6
0005a8cf: R30 := 0x10744
0005a8d1: call @__syslog_chk with return %00056ff6

00056ff6:
00057000: R22 := mem[R22 + 0xFB8, el]:u64
00057007: R0 := mem[R31 + 0x58, el]:u64
0005700e: R1 := mem[R22, el]:u64
00057014: #1066 := ~R1
00057019: #1067 := R0 + ~R1 + 1
0005701f: VF := extend:65[#1067] <> extend:65[R0] + extend:65[#1066] + 1
00057025: CF := pad:65[#1067] <> pad:65[R0] + pad:65[#1066] + 1
00057029: ZF := #1067 = 0
0005702d: NF := 63:63[#1067]
00057031: R0 := #1067
00057036: R1 := 0
0005703c: when ZF <> 1 goto %0005703a
0006ccd0: goto %0005a82a

0005703a:
00057042: R30 := 0x10814
00057044: call @__stack_chk_fail with return %00057046

00057046:
0006ccd1: call @tunnel_add with noreturn

0005a82a:
0005a82e: #1255 := R31 + 0x10
0005a833: R19 := mem[#1255, el]:u64
0005a838: R20 := mem[#1255 + 8, el]:u64
0005a83e: #1256 := R31 + 0x20
0005a843: R21 := mem[#1256, el]:u64
0005a848: R22 := mem[#1256 + 8, el]:u64
0005a84e: #1257 := R31 + 0x30
0005a853: R23 := mem[#1257, el]:u64
0005a858: R24 := mem[#1257 + 8, el]:u64
0005a85f: R25 := mem[R31 + 0x40, el]:u64
0005a866: R29 := mem[R31, el]:u64
0005a86b: R30 := mem[R31 + 8, el]:u64
0005a86f: R31 := R31 + 0x60
0005a874: call R30 with noreturn

0006ccd2: sub lowercase(lowercase_result)
0006d117: lowercase_result :: out u32 = low:32[R0]

00045f97:
00045f9b: #14 := R31 - 0x20
00045fa1: mem := mem with [#14, el]:u64 <- R29
00045fa7: mem := mem with [#14 + 8, el]:u64 <- R30
00045fab: R31 := #14
00045fb1: R29 := R31
00045fb7: #15 := R31 + 0x10
00045fbd: mem := mem with [#15, el]:u64 <- R19
00045fc3: mem := mem with [#15 + 8, el]:u64 <- R20
00045fc9: R20 := R0
00045fce: R19 := 0
00045fd3: goto %00045fd1

00045fd1:
00045fd8: R0 := R20
00045fdd: R30 := 0x58C0
00045fdf: call @strlen with return %00045fe1

00045fe1:
00045fe5: #16 := ~R19
00045fea: #17 := R0 + ~R19 + 1
00045ff0: VF := extend:65[#17] <> extend:65[R0] + extend:65[#16] + 1
00045ff6: CF := pad:65[#17] <> pad:65[R0] + pad:65[#16] + 1
00045ffa: ZF := #17 = 0
00045ffe: NF := 63:63[#17]
00046005: when CF & ~ZF goto %00046003
0006ccd3: goto %00046036

00046036:
0004603a: R0 := R20
00046040: #18 := R31 + 0x10
00046045: R19 := mem[#18, el]:u64
0004604a: R20 := mem[#18 + 8, el]:u64
00046051: R29 := mem[R31, el]:u64
00046056: R30 := mem[R31 + 8, el]:u64
0004605a: R31 := R31 + 0x20
0004605f: call R30 with noreturn

00046003:
0004600b: R30 := 0x58A4
0004600e: call @__ctype_tolower_loc with return %00046010

00046010:
00046016: R1 := pad:64[mem[R20 + R19]]
0004601d: R0 := mem[R0, el]:u64
00046025: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
0004602e: mem := mem with [R20 + R19] <- 7:0[R0]
00046034: R19 := R19 + 1
0006ccd4: goto %00045fd1

0006ccd5: sub magic_auth_detect(magic_auth_detect_result)
0006d118: magic_auth_detect_result :: out u32 = low:32[R0]

0005619b:
0005619f: #1003 := R31 - 0x120
000561a5: mem := mem with [#1003, el]:u64 <- R29
000561ab: mem := mem with [#1003 + 8, el]:u64 <- R30
000561af: R31 := #1003
000561b4: R3 := 0x27000
000561b9: R2 := 0x28000
000561bf: R29 := R31
000561c5: R2 := R2 + 0x470
000561cc: R3 := mem[R3 + 0xFB8, el]:u64
000561d1: R1 := 0x13000
000561d7: R1 := R1 + 0x3C0
000561dd: #1004 := R31 + 0x40
000561e3: mem := mem with [#1004, el]:u64 <- R25
000561e9: mem := mem with [#1004 + 8, el]:u64 <- R26
000561ef: R26 := R0
000561f6: R0 := mem[R3, el]:u64
000561fe: mem := mem with [R31 + 0x118, el]:u64 <- R0
00056203: R0 := 0
00056209: #1005 := R31 + 0x20
0005620f: mem := mem with [#1005, el]:u64 <- R21
00056215: mem := mem with [#1005 + 8, el]:u64 <- R22
0005621c: R6 := mem[R2, el]:u64
00056221: R7 := mem[R2 + 8, el]:u64
00056227: #1006 := R31 + 0xA0
0005622d: mem := mem with [#1006, el]:u64 <- R6
00056233: mem := mem with [#1006 + 8, el]:u64 <- R7
0005623a: R4 := mem[R1, el]:u64
0005623f: R5 := mem[R1 + 8, el]:u64
00056245: #1007 := R31 + 0xC8
0005624b: mem := mem with [#1007, el]:u64 <- R4
00056251: mem := mem with [#1007 + 8, el]:u64 <- R5
00056257: #1008 := R2 + 0x10
0005625c: R6 := mem[#1008, el]:u64
00056261: R7 := mem[#1008 + 8, el]:u64
00056267: #1009 := R31 + 0xB0
0005626d: mem := mem with [#1009, el]:u64 <- R6
00056273: mem := mem with [#1009 + 8, el]:u64 <- R7
0005627a: R0 := mem[R2 + 0x20, el]:u64
00056282: mem := mem with [R31 + 0xC0, el]:u64 <- R0
00056288: #1010 := R1 + 0x10
0005628d: R6 := mem[#1010, el]:u64
00056292: R7 := mem[#1010 + 8, el]:u64
00056298: #1011 := R31 + 0xD8
0005629e: mem := mem with [#1011, el]:u64 <- R6
000562a4: mem := mem with [#1011 + 8, el]:u64 <- R7
000562aa: #1012 := R1 + 0x20
000562af: R4 := mem[#1012, el]:u64
000562b4: R5 := mem[#1012 + 8, el]:u64
000562ba: #1013 := R31 + 0xE8
000562c0: mem := mem with [#1013, el]:u64 <- R4
000562c6: mem := mem with [#1013 + 8, el]:u64 <- R5
000562cc: #1014 := R1 + 0x30
000562d1: R2 := mem[#1014, el]:u64
000562d6: R3 := mem[#1014 + 8, el]:u64
000562dc: #1015 := R31 + 0xF8
000562e2: mem := mem with [#1015, el]:u64 <- R2
000562e8: mem := mem with [#1015 + 8, el]:u64 <- R3
000562ee: #1016 := R1 + 0x40
000562f3: R0 := mem[#1016, el]:u64
000562f8: R1 := mem[#1016 + 8, el]:u64
000562fe: R2 := R31 + 0x200
00056304: #1017 := R2 - 0xF8
0005630a: mem := mem with [#1017, el]:u64 <- R0
00056310: mem := mem with [#1017 + 8, el]:u64 <- R1
00056315: R30 := 0xE3F8
00056317: call @new_auth with return %00056319

00056319:
0005631d: R22 := R0
00056322: R1 := 0x27000
00056327: R2 := 1
0005632e: R1 := mem[R1 + 0xF80, el]:u64
00056335: R1 := mem[R1, el]:u64
0005633a: R30 := 0xE410
0005633c: call @copy_auth with return %0005633e

0005633e:
00056341: R1 := 0x12000
00056347: R0 := R26
0005634d: R1 := R1 + 0x750
00056352: R30 := 0xE420
00056354: call @strstr with return %00056356

00056356:
0005635a: when R0 = 0 goto %00056358
0006ccd6: goto %0005c75f

00056358:
00056360: R0 := 0x27000
00056366: R3 := R26
0005636b: R2 := 0x13000
00056370: R1 := 1
00056377: R0 := mem[R0 + 0xF68, el]:u64
0005637d: R2 := R2 + 0x148
00056384: R0 := mem[R0, el]:u64
00056389: R30 := 0xE8B0
0005638c: call @__fprintf_chk with return %0005638e

0005638e:
00056391: goto %0005638f

0005c75f:
0005c763: #1342 := R31 + 0x10
0005c769: mem := mem with [#1342, el]:u64 <- R19
0005c76f: mem := mem with [#1342 + 8, el]:u64 <- R20
0005c775: R20 := R0 + 3
0005c77b: R19 := R0
0005c780: R1 := 0x2F
0005c786: R0 := R20
0005c78c: #1343 := R31 + 0x30
0005c792: mem := mem with [#1343, el]:u64 <- R23
0005c798: mem := mem with [#1343 + 8, el]:u64 <- R24
0005c79e: R21 := R31 + 0xC8
0005c7a3: R25 := 0
0005c7a9: #1344 := R31 + 0x50
0005c7af: mem := mem with [#1344, el]:u64 <- R27
0005c7b5: mem := mem with [#1344 + 8, el]:u64 <- R28
0005c7ba: R30 := 0xE44C
0005c7bc: call @strchr with return %0005c7be

0005c7be:
0005c7c2: R2 := R0
0005c7c8: #1345 := R2 + 0
0005c7cd: VF := extend:65[#1345] <> extend:65[R2] + 0
0005c7d2: CF := pad:65[#1345] <> pad:65[R2] - 0x10000000000000000
0005c7d6: ZF := #1345 = 0
0005c7da: NF := 63:63[#1345]
0005c7e1: R2 := R2 + ~R19 + 1
0005c7e7: R2 := pad:64[31:0[R2] - 3]
0005c7ec: R1 := 0
0005c7f2: R0 := R20
0005c7ff: when ZF <> 1 goto %0005c7f8
0005c800: goto %0005c7fb

0005c7fb:
0005c7fc: R2 := 0
0005c802: goto %0005c7fe

0005c7f8:
0005c7f9: R2 := pad:64[31:0[R2]]
0005c801: goto %0005c7fe

0005c7fe:
0005c809: mem := mem with [R31 + 0x84, el]:u32 <- 0
0005c80e: R30 := 0xE470
0005c810: call @substr with return %0005c812

0005c812:
0005c816: R24 := R0
0005c81b: R0 := 0x12000
0005c821: R0 := R0 + 0x780
0005c826: R1 := 0x12000
0005c82c: R1 := R1 + 0x910
0005c834: mem := mem with [R31 + 0x68, el]:u64 <- R1
0005c83c: mem := mem with [R31 + 0x88, el]:u64 <- R0
0005c842: R0 := R31 + 0x9C
0005c84a: mem := mem with [R31 + 0x70, el]:u64 <- R0
0006ccd7: goto %0005c3f7

0005c3f7:
0005c3fd: R30 := 0xE498
0005c3ff: call @new_rr_data with return %0005c401

0005c401:
0005c405: R20 := R0
0005c40a: R30 := 0xE4A0
0005c40c: call @new_rr_data with return %0005c40e

0005c40e:
0005c412: R19 := R0
0005c419: R0 := mem[R31 + 0x68, el]:u64
0005c41e: R1 := 1
0005c426: mem := mem with [R19, el]:u32 <- 31:0[R1]
0005c42b: R30 := 0xE4B4
0005c42d: call @strdup with return %0005c42f

0005c42f:
0005c435: mem := mem with [R19 + 0x28, el]:u64 <- R0
0005c43b: R0 := R26
0005c440: R30 := 0xE4C0
0005c442: call @strdup with return %0005c444

0005c444:
0005c44a: mem := mem with [R19 + 0x30, el]:u64 <- R0
0005c44f: R0 := 0x12000
0005c455: R0 := R0 + 0xFF8
0005c45a: R30 := 0xE4D0
0005c45c: call @strdup with return %0005c45e

0005c45e:
0005c462: R1 := R0
0005c469: R0 := mem[R19 + 8, el]:u64
0005c471: mem := mem with [R19 + 0x48, el]:u64 <- R1
0005c476: R1 := 0x12000
0005c47b: R4 := 1
0005c481: R2 := R1 + 0xE30
0005c487: R3 := pad:64[31:0[R4]]
0005c48c: R1 := 0x12000
0005c492: R1 := R1 + 0xE40
0005c497: R30 := 0xE4F8
0005c499: call @hlist_add with return %0005c49b

0005c49b:
0005c4a1: mem := mem with [R19 + 8, el]:u64 <- R0
0005c4a7: when R24 = 0 goto %0005c4a5
0006ccd8: goto %0005c71d

0005c71d:
0005c722: R1 := mem[R31 + 0x88, el]:u64
0005c727: R4 := 1
0005c72d: R2 := R24
0005c733: R3 := pad:64[31:0[R4]]
0005c738: R30 := 0xE514
0005c73a: call @hlist_add with return %0005c73c

0005c73c:
0005c742: mem := mem with [R19 + 8, el]:u64 <- R0
0006ccd9: goto %0005c4a5

0005c4a5:
0005c4ae: R5 := R22 + 0x134
0005c4b4: R23 := pad:64[31:0[R25] + 1]
0005c4bb: R28 := pad:64[mem[R21, el]:u32]
0005c4c0: R4 := pad:64[mem[R21 + 4, el]:u32]
0005c4c6: R2 := pad:64[31:0[R23]]
0005c4cc: #1335 := R21 + 8
0005c4d1: R0 := pad:64[mem[#1335, el]:u32]
0005c4d6: R27 := pad:64[mem[#1335 + 4, el]:u32]
0005c4db: R1 := 0x13000
0005c4e1: R1 := R1 + 0x160
0005c4e7: #1336 := R5 - 8
0005c4ed: mem := mem with [#1336, el]:u32 <- 31:0[R0]
0005c4f3: mem := mem with [#1336 + 4, el]:u32 <- 31:0[R28]
0005c4fb: mem := mem with [R5, el]:u32 <- 31:0[R4]
0005c501: mem := mem with [R5 + 4, el]:u32 <- 31:0[R27]
0005c506: R3 := 4
0005c50c: #1337 := R31 + 0x7C
0005c512: mem := mem with [#1337, el]:u32 <- 31:0[R4]
0005c518: mem := mem with [#1337 + 4, el]:u32 <- 31:0[R0]
0005c51d: R0 := 1
0005c522: R30 := 0xE54C
0005c524: call @__printf_chk with return %0005c526

0005c526:
0005c529: R0 := 0
0005c52e: R30 := 0xE554
0005c530: call @proxy_connect with return %0005c532

0005c532:
0005c538: mem := mem with [R31 + 0x9C, el]:u32 <- 31:0[R0]
0005c53e: #1338 := 31:0[R0] + 0
0005c543: VF := extend:33[#1338] <> extend:33[31:0[R0]] + 0
0005c548: CF := pad:33[#1338] <> pad:33[31:0[R0]] - 0x100000000
0005c54c: ZF := #1338 = 0
0005c550: NF := 31:31[#1338]
0005c558: when ~(NF = VF & ~ZF) goto %0005c556
0006ccda: goto %0005c5a2

0005c556:
0005c55e: R1 := 0x13000
0005c564: R1 := R1 + 0x180
0005c569: R0 := 1
0005c56e: R30 := 0xE704
0005c570: call @__printf_chk with return %0005c572

0005c572:
0005c576: R0 := R20
0005c57b: R30 := 0xE70C
0005c57d: call @free_rr_data with return %0005c57f

0005c57f:
0005c583: R0 := R19
0005c588: R30 := 0xE714
0005c58a: call @free_rr_data with return %0005c58c

0005c58c:
0005c591: R0 := pad:64[mem[R31 + 0x9C, el]:u32]
0005c596: R30 := 0xE71C
0005c598: call @close with return %0005c59a

0005c59a:
0005c59e: when R24 <> 0 goto %0005c39c
0006ccdb: goto %0005c163

0005c5a2:
0005c5a7: R0 := mem[R31 + 0x70, el]:u64
0005c5ad: R3 := R22
0005c5b3: R2 := R20
0005c5b9: R1 := R19
0005c5be: R30 := 0xE574
0005c5c0: call @proxy_authenticate with return %0005c5c2

0005c5c2:
0005c5c6: when 31:0[R0] = 0 goto %0005c5c4
0006ccdc: goto %0005c6f7

0005c6f7:
0005c6fc: R2 := pad:64[mem[R20 + 0x10, el]:u32]
0005c702: #1341 := 31:0[R2] - 0x197
0005c707: VF := extend:33[#1341] <> extend:33[31:0[R2]] - 0x197
0005c70c: CF := pad:33[#1341] <> pad:33[31:0[R2]] + 0xFFFFFE69
0005c710: ZF := #1341 = 0
0005c714: NF := 31:31[#1341]
0005c719: when ZF <> 1 goto %0005c60c
0006ccdd: goto %0005c5c4

0005c60c:
0005c60f: R1 := 0x13000
0005c614: R0 := 1
0005c61a: R1 := R1 + 0x1B0
0005c61f: R30 := 0xE638
0005c621: call @__printf_chk with return %0005c623

0005c623:
0005c628: R1 := pad:64[mem[R31 + 0x84, el]:u32]
0005c62e: R0 := R20
0005c634: R21 := R21 + 0x14
0005c63a: R1 := pad:64[31:0[R1] + 1]
0005c642: mem := mem with [R31 + 0x84, el]:u32 <- 31:0[R1]
0005c647: R30 := 0xE650
0005c649: call @free_rr_data with return %0005c64b

0005c64b:
0005c64f: R0 := R19
0005c654: R30 := 0xE658
0005c656: call @free_rr_data with return %0005c658

0005c658:
0005c65d: R0 := pad:64[mem[R31 + 0x9C, el]:u32]
0005c662: R30 := 0xE660
0005c664: call @close with return %0005c666

0005c666:
0005c66a: #1339 := 31:0[R23] - 4
0005c66f: VF := extend:33[#1339] <> extend:33[31:0[R23]] - 4
0005c674: CF := pad:33[#1339] <> pad:33[31:0[R23]] + 0xFFFFFFFC
0005c678: ZF := #1339 = 0
0005c67c: NF := 31:31[#1339]
0005c681: when ZF <> 1 goto %0005c3f0
0006ccde: goto %0005c11b

0005c5c4:
0005c5cd: R0 := R20
0005c5d2: R30 := 0xE58C
0005c5d4: call @reset_rr_data with return %0005c5d6

0005c5d6:
0005c5db: R0 := pad:64[mem[R31 + 0x9C, el]:u32]
0005c5e1: R1 := R19
0005c5e6: R30 := 0xE598
0005c5e8: call @headers_send with return %0005c5ea

0005c5ea:
0005c5ee: when 31:0[R0] = 0 goto %0005c5ec
0006ccdf: goto %0005c685

0005c685:
0005c68a: R0 := pad:64[mem[R31 + 0x9C, el]:u32]
0005c690: R1 := R20
0005c695: R30 := 0xE5A8
0005c697: call @headers_recv with return %0005c699

0005c699:
0005c69c: when 31:0[R0] = 0 goto %0005c5ec
0006cce0: goto %0005c6a0

0005c5ec:
0005c5f4: R1 := 0x13000
0005c5f9: R0 := 1
0005c5ff: R1 := R1 + 0x1D8
0005c604: R30 := 0xE624
0005c606: call @__printf_chk with return %0005c608

0005c608:
0005c60a: goto %0005c0d3

0005c6a0:
0005c6a5: R2 := pad:64[mem[R20 + 0x10, el]:u32]
0005c6ab: #1340 := 31:0[R2] - 0x197
0005c6b0: VF := extend:33[#1340] <> extend:33[31:0[R2]] - 0x197
0005c6b5: CF := pad:33[#1340] <> pad:33[31:0[R2]] + 0xFFFFFE69
0005c6b9: ZF := #1340 = 0
0005c6bd: NF := 31:31[#1340]
0005c6c2: when ZF <> 1 goto %0005c19c
0006cce1: goto %0005c6c6

0005c19c:
0005c19f: R1 := 0x13000
0005c1a5: R1 := R1 + 0x238
0005c1aa: R0 := 1
0005c1af: R30 := 0xE740
0005c1b1: call @__printf_chk with return %0005c1b3

0005c1b3:
0005c1b7: R0 := R20
0005c1bc: R30 := 0xE748
0005c1be: call @free_rr_data with return %0005c1c0

0005c1c0:
0005c1c4: R0 := R19
0005c1c9: R30 := 0xE750
0005c1cb: call @free_rr_data with return %0005c1cd

0005c1cd:
0005c1d2: R0 := pad:64[mem[R31 + 0x9C, el]:u32]
0005c1d7: R30 := 0xE758
0005c1d9: call @close with return %0005c1db

0005c1db:
0005c1df: R2 := pad:64[31:0[R25]]
0005c1e4: R1 := 0x13000
0005c1e9: R0 := 1
0005c1ef: R1 := R1 + 0x250
0005c1f4: R30 := 0xE76C
0005c1f6: call @__printf_chk with return %0005c1f8

0005c1f8:
0005c1fe: R0 :=

          >> 0x3E | R25 << 2].0
0005c204: R3 := R31 + 0xD8
0005c20b: R25 := R0 + extend:64[31:0[R25]]
0005c211: R2 := R31 + 0xA0
0005c216: R1 := 0x13000
0005c21b: R0 := 1
0005c221: R1 := R1 + 0x288
0005c229: R3 := extend:64[mem[R3 + (61:0[R25].0), el]:u32]
0005c231: R2 := mem[R2 + (60:0[R3].0), el]:u64
0005c236: R30 := 0xE794
0005c238: call @__printf_chk with return %0005c23a

0005c23a:
0005c23f: when 31:0[R27] <> 0 goto %0005c23d
0006cce2: goto %0005c394

0005c23d:
0005c245: R1 := 0x13000
0005c24b: R2 := pad:64[31:0[R27]]
0005c251: R1 := R1 + 0x2A0
0005c256: R0 := 1
0005c25b: R30 := 0xE7D4
0005c25d: call @__printf_chk with return %0005c25f

0005c25f:
0005c263: when 31:0[R28] = 0 goto %0005c261
0006cce3: goto %0005c33f

0005c394:
0005c398: when 31:0[R28] <> 0 goto %0005c33f
0006cce4: goto %0005c261

0005c33f:
0005c342: R2 := 8
0005c347: R1 := 0x10
0005c34d: R0 := R22 + 0xC8
0005c352: R30 := 0xE7E8
0005c354: call @printmem with return %0005c356

0005c356:
0005c359: R1 := 0x13000
0005c35f: R2 := R0
0005c365: R1 := R1 + 0x2B8
0005c36b: R19 := R0
0005c370: R0 := 1
0005c375: R30 := 0xE800
0005c377: call @__printf_chk with return %0005c379

0005c379:
0005c37d: R0 := R19
0005c382: R30 := 0xE808
0005c384: call @free with return %0005c386

0005c386:
0005c38b: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0005c390: when 31:0[R0] = 0 goto %0005c330
0006cce5: goto %0005c270

0005c261:
0005c26b: R0 := pad:64[mem[R31 + 0x7C, el]:u32]
0005c272: when 31:0[R0] <> 0 goto %0005c270
0006cce6: goto %0005c330

0005c270:
0005c278: R2 := 8
0005c27d: R1 := 0x10
0005c283: R0 := R22 + 0x96
0005c288: R30 := 0xE820
0005c28a: call @printmem with return %0005c28c

0005c28c:
0005c28f: R1 := 0x13000
0005c295: R2 := R0
0005c29b: R1 := R1 + 0x2D0
0005c2a1: R19 := R0
0005c2a6: R0 := 1
0005c2ab: R30 := 0xE838
0005c2ad: call @__printf_chk with return %0005c2af

0005c2af:
0005c2b3: R0 := R19
0005c2b8: R30 := 0xE840
0005c2ba: call @free with return %0005c2bc

0005c2bc:
0005c2c1: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0005c2c7: when 31:0[R0] = 0 goto %0005c2c5
0006cce7: goto %0005c2e5

0005c330:
0005c335: R0 := pad:64[mem[R31 + 0x80, el]:u32]
0005c33b: when 31:0[R0] <> 0 goto %0005c2e5
0006cce8: goto %0005c2c5

0005c2e5:
0005c2e9: R0 := R22 + 0xFA
0005c2ee: R2 := 8
0005c2f3: R1 := 0x10
0005c2f8: R30 := 0xE858
0005c2fa: call @printmem with return %0005c2fc

0005c2fc:
0005c2ff: R1 := 0x13000
0005c305: R2 := R0
0005c30b: R1 := R1 + 0x2E8
0005c311: R19 := R0
0005c316: R0 := 1
0005c31b: R30 := 0xE870
0005c31d: call @__printf_chk with return %0005c31f

0005c31f:
0005c323: R0 := R19
0005c328: R30 := 0xE878
0005c32a: call @free with return %0005c32c

0005c32c:
0005c32e: goto %0005c2c5

0005c2c5:
0005c2cd: R1 := 0x13000
0005c2d2: R0 := 1
0005c2d8: R1 := R1 + 0x300
0005c2dd: R30 := 0xE7BC
0005c2df: call @__printf_chk with return %0005c2e1

0005c2e1:
0005c2e3: goto %0005c15e

0005c6c6:
0005c6cb: R0 := mem[R20 + 8, el]:u64
0005c6d0: R25 := 0x12000
0005c6d6: R25 := R25 + 0xBC0
0005c6db: R2 := 0x12000
0005c6e1: R1 := R25
0005c6e7: R2 := R2 + 0xA80
0005c6ec: R30 := 0xE5D4
0005c6ee: call @hlist_subcmp_all with return %0005c6f0

0005c6f0:
0005c6f3: when 31:0[R0] = 0 goto %0005c095
0006cce9: goto %0005c0b7

0005c095:
0005c09a: R0 := mem[R20 + 8, el]:u64
0005c09f: R2 := 0x13000
0005c0a5: R1 := R25
0005c0ab: R2 := R2 + 0x208
0005c0b0: R30 := 0xE6DC
0005c0b2: call @hlist_subcmp_all with return %0005c0b4

0005c0b4:
0005c0b9: when 31:0[R0] <> 0 goto %0005c0b7
0006ccea: goto %0005c744

0005c744:
0005c747: R1 := 0x13000
0005c74c: R0 := 1
0005c752: R1 := R1 + 0x210
0005c757: R30 := 0xE6F0
0005c759: call @__printf_chk with return %0005c75b

0005c75b:
0005c75d: goto %0005c11b

0005c0b7:
0005c0bf: R1 := 0x13000
0005c0c4: R0 := 1
0005c0ca: R1 := R1 + 0x1F0
0005c0cf: R30 := 0xE5E8
0005c0d1: call @__printf_chk with return %0005c0d3

0005c0d3:
0005c0d7: R0 := R20
0005c0dc: R30 := 0xE5F0
0005c0de: call @free_rr_data with return %0005c0e0

0005c0e0:
0005c0e4: R0 := R19
0005c0e9: R30 := 0xE5F8
0005c0eb: call @free_rr_data with return %0005c0ed

0005c0ed:
0005c0f2: R0 := pad:64[mem[R31 + 0x9C, el]:u32]
0005c0f8: R21 := R21 + 0x14
0005c0fd: R30 := 0xE604
0005c0ff: call @close with return %0005c101

0005c101:
0005c105: #1327 := 31:0[R23] - 4
0005c10a: VF := extend:33[#1327] <> extend:33[31:0[R23]] - 4
0005c10f: CF := pad:33[#1327] <> pad:33[31:0[R23]] + 0xFFFFFFFC
0005c113: ZF := #1327 = 0
0005c117: NF := 31:31[#1327]
0005c11d: when ZF goto %0005c11b
0006cceb: goto %0005c3f0

0005c11b:
0005c125: R0 := pad:64[mem[R31 + 0x84, el]:u32]
0005c12b: #1328 := 31:0[R0] - 4
0005c130: VF := extend:33[#1328] <> extend:33[31:0[R0]] - 4
0005c135: CF := pad:33[#1328] <> pad:33[31:0[R0]] + 0xFFFFFFFC
0005c139: ZF := #1328 = 0
0005c13d: NF := 31:31[#1328]
0005c143: when ZF goto %0005c141
0006ccec: goto %0005c3d9

0005c141:
0005c149: R1 := 0x13000
0005c14e: R0 := 1
0005c154: R1 := R1 + 0x338
0005c159: R30 := 0xE88C
0005c15b: call @__printf_chk with return %0005c15d

0005c15d:
0005c160: goto %0005c15e

0005c3d9:
0005c3dc: R1 := 0x13000
0005c3e1: R0 := 1
0005c3e7: R1 := R1 + 0x370
0005c3ec: R30 := 0xE684
0005c3ee: call @__printf_chk with return %0005c15e

0005c15e:
0005c165: when R24 = 0 goto %0005c163
0006cced: goto %0005c39c

0005c163:
0005c16c: #1329 := R31 + 0x10
0005c171: R19 := mem[#1329, el]:u64
0005c176: R20 := mem[#1329 + 8, el]:u64
0005c17c: #1330 := R31 + 0x30
0005c181: R23 := mem[#1330, el]:u64
0005c186: R24 := mem[#1330 + 8, el]:u64
0005c18c: #1331 := R31 + 0x50
0005c191: R27 := mem[#1331, el]:u64
0005c196: R28 := mem[#1331 + 8, el]:u64
0005c19a: goto %0005638f

0005c39c:
0005c3a0: R0 := R24
0005c3a5: R30 := 0xE690
0005c3a7: call @free with return %0005c3a9

0005c3a9:
0005c3ad: #1332 := R31 + 0x10
0005c3b2: R19 := mem[#1332, el]:u64
0005c3b7: R20 := mem[#1332 + 8, el]:u64
0005c3bd: #1333 := R31 + 0x30
0005c3c2: R23 := mem[#1333, el]:u64
0005c3c7: R24 := mem[#1333 + 8, el]:u64
0005c3cd: #1334 := R31 + 0x50
0005c3d2: R27 := mem[#1334, el]:u64
0005c3d7: R28 := mem[#1334 + 8, el]:u64
0006ccee: goto %0005638f

0005638f:
00056395: R0 := 0x27000
0005639c: R0 := mem[R0 + 0xFB8, el]:u64
000563a3: R1 := mem[R31 + 0x118, el]:u64
000563aa: R2 := mem[R0, el]:u64
000563b0: #1018 := ~R2
000563b5: #1019 := R1 + ~R2 + 1
000563bb: VF := extend:65[#1019] <> extend:65[R1] + extend:65[#1018] + 1
000563c1: CF := pad:65[#1019] <> pad:65[R1] + pad:65[#1018] + 1
000563c5: ZF := #1019 = 0
000563c9: NF := 63:63[#1019]
000563cd: R1 := #1019
000563d2: R2 := 0
000563d8: when ZF <> 1 goto %000563d6
0006ccef: goto %0005c060

000563d6:
000563df: #1020 := R31 + 0x10
000563e5: mem := mem with [#1020, el]:u64 <- R19
000563eb: mem := mem with [#1020 + 8, el]:u64 <- R20
000563f1: #1021 := R31 + 0x30
000563f7: mem := mem with [#1021, el]:u64 <- R23
000563fd: mem := mem with [#1021 + 8, el]:u64 <- R24
00056403: #1022 := R31 + 0x50
00056409: mem := mem with [#1022, el]:u64 <- R27
0005640f: mem := mem with [#1022 + 8, el]:u64 <- R28
00056414: R30 := 0xE8C4
00056416: call @__stack_chk_fail with return %00056418

00056418:
0006ccf0: call @host_connect with noreturn

0005c060:
0005c064: #1325 := R31 + 0x20
0005c069: R21 := mem[#1325, el]:u64
0005c06e: R22 := mem[#1325 + 8, el]:u64
0005c074: #1326 := R31 + 0x40
0005c079: R25 := mem[#1326, el]:u64
0005c07e: R26 := mem[#1326 + 8, el]:u64
0005c085: R29 := mem[R31, el]:u64
0005c08a: R30 := mem[R31 + 8, el]:u64
0005c08e: R31 := R31 + 0x120
0005c093: call R30 with noreturn

0005c3f0:
0005c3f4: R25 := pad:64[31:0[R23]]
0005c3f9: goto %0005c3f7

0006ccf1: sub main(main_argc, main_argv, main_result)
0006d119: main_argc :: in u32 = low:32[R0]
0006d11a: main_argv :: in out u64 = R1
0006d11b: main_result :: out u32 = low:32[R0]

00045cf4:
00045cf8: R31 := R31 - 0x2A0
00045cfd: R2 := 0x27000
00045d05: mem := mem with [R31, el]:u64 <- R29
00045d0b: mem := mem with [R31 + 8, el]:u64 <- R30
00045d11: R29 := R31
00045d18: R2 := mem[R2 + 0xFB8, el]:u64
00045d1e: #1 := R31 + 0x30
00045d24: mem := mem with [#1, el]:u64 <- R23
00045d2a: mem := mem with [#1 + 8, el]:u64 <- R24
00045d30: R23 := pad:64[31:0[R0]]
00045d37: R0 := mem[R2, el]:u64
00045d3f: mem := mem with [R31 + 0x298, el]:u64 <- R0
00045d44: R0 := 0
00045d4a: R24 := R1
00045d50: #2 := R31 + 0x10
00045d56: mem := mem with [#2, el]:u64 <- R19
00045d5c: mem := mem with [#2 + 8, el]:u64 <- R20
00045d61: R20 := 0x28000
00045d67: #3 := R31 + 0x20
00045d6d: mem := mem with [#3, el]:u64 <- R21
00045d73: mem := mem with [#3 + 8, el]:u64 <- R22
00045d78: R21 := 0
00045d7d: R22 := 0
00045d83: #4 := R31 + 0x40
00045d89: mem := mem with [#4, el]:u64 <- R25
00045d8f: mem := mem with [#4 + 8, el]:u64 <- R26
00045d94: R25 := 0x14000
00045d9a: #5 := R31 + 0x50
00045da0: mem := mem with [#5, el]:u64 <- R27
00045da6: mem := mem with [#5 + 8, el]:u64 <- R28
00045dab: R28 := 0
00045db1: #6 := R31 + 0x110
00045db6: mem := mem with [#6, el]:u64 <- 0
00045dbb: mem := mem with [#6 + 8, el]:u64 <- 0
00045dc1: #7 := R31 + 0x120
00045dc6: mem := mem with [#7, el]:u64 <- 0
00045dcb: mem := mem with [#7 + 8, el]:u64 <- 0
00045dd0: R30 := 0x245C
00045dd3: call @new_auth with return %000602bd

000602bd:
000602c1: R1 := R20 + 0x4D8
000602c7: R2 := R0
000602cc: R0 := 0x32
000602d3: mem := mem with [R31 + 0x70, el]:u64 <- 0
000602db: mem := mem with [R1 + 0x68, el]:u64 <- R2
000602e0: R30 := 0x2474
000602e2: call @new with return %000602e4

000602e4:
000602e8: R1 := R0
000602ed: R0 := 0x32
000602f5: mem := mem with [R31 + 0x90, el]:u64 <- R1
000602fa: R30 := 0x2484
000602fc: call @new with return %000602fe

000602fe:
00060302: R1 := R0
00060307: R0 := 0x32
0006030f: mem := mem with [R31 + 0x80, el]:u64 <- R1
00060314: R30 := 0x2494
00060316: call @new with return %00060318

00060318:
0006031c: R1 := R0
00060321: R0 := 0x32
00060329: mem := mem with [R31 + 0x68, el]:u64 <- R1
0006032e: R30 := 0x24A4
00060330: call @new with return %00060332

00060332:
00060336: R1 := R0
0006033b: R0 := 0x32
00060343: mem := mem with [R31 + 0xB0, el]:u64 <- R1
00060348: R30 := 0x24B4
0006034a: call @new with return %0006034c

0006034c:
00060350: R1 := R0
00060355: R0 := 0x32
0006035d: mem := mem with [R31 + 0xB8, el]:u64 <- R1
00060362: R30 := 0x24C4
00060364: call @new with return %00060366

00060366:
0006036a: R1 := R0
0006036f: R0 := 0x32
00060377: mem := mem with [R31 + 0xC0, el]:u64 <- R1
0006037c: R30 := 0x24D4
0006037e: call @new with return %00060380

00060380:
00060384: R1 := R0
00060389: R0 := 0x32
00060391: mem := mem with [R31 + 0x78, el]:u64 <- R1
00060396: R30 := 0x24E4
00060398: call @new with return %0006039a

0006039a:
0006039e: R1 := R0
000603a3: R0 := 0x32
000603ab: mem := mem with [R31 + 0x98, el]:u64 <- R1
000603b0: R30 := 0x24F4
000603b2: call @new with return %000603b4

000603b4:
000603b8: R1 := R0
000603bd: R0 := 0x32
000603c5: mem := mem with [R31 + 0xA8, el]:u64 <- R1
000603ca: R30 := 0x2504
000603cc: call @new with return %000603ce

000603ce:
000603d4: mem := mem with [R31 + 0x88, el]:u64 <- R0
000603d9: R2 := 0x18
000603de: R1 := 2
000603e3: R0 := 0x14000
000603e9: R0 := R0 + 0x88
000603ee: R30 := 0x251C
000603f1: call @openlog with return %000603f3

000603f3:
000603f6: R1 := 1
000603fb: R0 := 6
00060401: R19 := pad:64[31:0[R1]]
00060406: R2 := 0x14000
0006040c: R2 := R2 + 0x90
00060411: R30 := 0x2534
00060413: call @__syslog_chk with return %00060415

00060415:
00060418: R0 := 0x27000
0006041d: R7 := 0x15000
00060423: R26 := R7 + 0x360
0006042a: mem := mem with [R31 + 0xA0, el]:u32 <- 0
00060431: R0 := mem[R0 + 0xF70, el]:u64
00060437: #1522 := R31 + 0xC8
0006043c: mem := mem with [#1522, el]:u32 <- 0
00060441: mem := mem with [#1522 + 4, el]:u32 <- 0
00060449: mem := mem with [R31 + 0xD0, el]:u64 <- R0
0006044f: R0 := R31 + 0x120
00060457: mem := mem with [R31 + 0xD8, el]:u64 <- R0
0006ccf2: goto %00060459

00060459:
0006045d: R2 := R25 + 0x1D8
00060463: R1 := R24
00060469: R0 := pad:64[31:0[R23]]
0006046e: R30 := 0x2568
00060471: call @__posix_getopt with return %00060473

00060473:
00060479: mem := mem with [R31 + 0xF8, el]:u32 <- 31:0[R0]
0006047f: #1523 := 31:0[R0] + 1
00060484: VF := extend:33[#1523] <> extend:33[31:0[R0]] + 1
00060489: CF := pad:33[#1523] <> pad:33[31:0[R0]] + 1
0006048d: ZF := #1523 = 0
00060491: NF := 31:31[#1523]
00060497: when ZF goto %00060495
0006ccf3: goto %00063ff9

00060495:
0006049f: when 31:0[R22] <> 0 goto %0006049d
0006ccf4: goto %00063fb5

0006049d:
000604a5: R19 := 0x27000
000604aa: R1 := 0x14000
000604af: R0 := 1
000604b5: R1 := R1 + 0x210
000604ba: R30 := 0x37C0
000604bc: call @__printf_chk with return %000604be

000604be:
000604c1: R0 := 1
000604c6: R1 := 0x14000
000604cc: R1 := R1 + 0x250
000604d1: R30 := 0x37D0
000604d3: call @__printf_chk with return %000604d5

000604d5:
000604da: R19 := mem[R19 + 0xF68, el]:u64
000604df: R1 := 1
000604e6: R3 := mem[R24, el]:u64
000604eb: R2 := 0x14000
000604f2: R0 := mem[R19, el]:u64
000604f8: R2 := R2 + 0x398
000604fd: R30 := 0x37EC
000604ff: call @__fprintf_chk with return %00060501

00060501:
00060506: R0 := mem[R19, el]:u64
0006050b: R1 := 1
00060510: R2 := 0x14000
00060516: R2 := R2 + 0x3E0
0006051b: R30 := 0x3800
0006051d: call @__fprintf_chk with return %0006051f

0006051f:
00060524: R0 := mem[R19, el]:u64
00060529: R1 := 1
0006052e: R2 := 0x14000
00060534: R2 := R2 + 0x448
00060539: R30 := 0x3814
0006053b: call @__fprintf_chk with return %0006053d

0006053d:
00060542: R0 := mem[R19, el]:u64
00060547: R1 := 1
0006054c: R2 := 0x14000
00060552: R2 := R2 + 0x4F0
00060557: R30 := 0x3828
00060559: call @__fprintf_chk with return %0006055b

0006055b:
00060560: R0 := mem[R19, el]:u64
00060565: R1 := 1
0006056a: R2 := 0x14000
00060570: R2 := R2 + 0x520
00060575: R30 := 0x383C
00060577: call @__fprintf_chk with return %00060579

00060579:
0006057e: R0 := mem[R19, el]:u64
00060583: R1 := 1
00060588: R2 := 0x14000
0006058e: R2 := R2 + 0x598
00060593: R30 := 0x3850
00060595: call @__fprintf_chk with return %00060597

00060597:
0006059c: R0 := mem[R19, el]:u64
000605a1: R1 := 1
000605a6: R2 := 0x14000
000605ac: R2 := R2 + 0x5D8
000605b1: R30 := 0x3864
000605b3: call @__fprintf_chk with return %000605b5

000605b5:
000605ba: R0 := mem[R19, el]:u64
000605bf: R1 := 1
000605c4: R2 := 0x14000
000605ca: R2 := R2 + 0x618
000605cf: R30 := 0x3878
000605d1: call @__fprintf_chk with return %000605d3

000605d3:
000605d8: R0 := mem[R19, el]:u64
000605dd: R1 := 1
000605e2: R2 := 0x14000
000605e8: R2 := R2 + 0x650
000605ed: R30 := 0x388C
000605ef: call @__fprintf_chk with return %000605f1

000605f1:
000605f6: R0 := mem[R19, el]:u64
000605fb: R1 := 1
00060600: R2 := 0x14000
00060606: R2 := R2 + 0x680
0006060b: R30 := 0x38A0
0006060d: call @__fprintf_chk with return %0006060f

0006060f:
00060614: R0 := mem[R19, el]:u64
00060619: R1 := 1
0006061e: R2 := 0x14000
00060624: R2 := R2 + 0x6C8
00060629: R30 := 0x38B4
0006062b: call @__fprintf_chk with return %0006062d

0006062d:
00060632: R0 := mem[R19, el]:u64
00060637: R1 := 1
0006063c: R2 := 0x14000
00060642: R2 := R2 + 0x710
00060647: R30 := 0x38C8
00060649: call @__fprintf_chk with return %0006064b

0006064b:
00060650: R0 := mem[R19, el]:u64
00060655: R1 := 1
0006065a: R2 := 0x14000
00060660: R2 := R2 + 0x760
00060665: R30 := 0x38DC
00060667: call @__fprintf_chk with return %00060669

00060669:
0006066e: R0 := mem[R19, el]:u64
00060673: R1 := 1
00060678: R2 := 0x14000
0006067e: R2 := R2 + 0x798
00060683: R30 := 0x38F0
00060685: call @__fprintf_chk with return %00060687

00060687:
0006068c: R0 := mem[R19, el]:u64
00060691: R1 := 1
00060696: R2 := 0x14000
0006069c: R2 := R2 + 0x7C8
000606a1: R30 := 0x3904
000606a3: call @__fprintf_chk with return %000606a5

000606a5:
000606aa: R0 := mem[R19, el]:u64
000606af: R1 := 1
000606b4: R2 := 0x14000
000606ba: R2 := R2 + 0x8B8
000606bf: R30 := 0x3918
000606c1: call @__fprintf_chk with return %000606c3

000606c3:
000606c8: R0 := mem[R19, el]:u64
000606cd: R1 := 1
000606d2: R2 := 0x14000
000606d8: R2 := R2 + 0x900
000606dd: R30 := 0x392C
000606df: call @__fprintf_chk with return %000606e1

000606e1:
000606e6: R0 := mem[R19, el]:u64
000606eb: R1 := 1
000606f0: R2 := 0x14000
000606f6: R2 := R2 + 0x948
000606fb: R30 := 0x3940
000606fd: call @__fprintf_chk with return %000606ff

000606ff:
00060704: R0 := mem[R19, el]:u64
00060709: R1 := 1
0006070e: R2 := 0x14000
00060714: R2 := R2 + 0x9C8
00060719: R30 := 0x3954
0006071b: call @__fprintf_chk with return %0006071d

0006071d:
00060722: R0 := mem[R19, el]:u64
00060727: R1 := 1
0006072c: R2 := 0x14000
00060732: R2 := R2 + 0xA28
00060737: R30 := 0x3968
00060739: call @__fprintf_chk with return %0006073b

0006073b:
00060740: R0 := mem[R19, el]:u64
00060745: R1 := 1
0006074a: R2 := 0x14000
00060750: R2 := R2 + 0xA68
00060755: R30 := 0x397C
00060757: call @__fprintf_chk with return %00060759

00060759:
0006075e: R0 := mem[R19, el]:u64
00060763: R1 := 1
00060768: R2 := 0x14000
0006076e: R2 := R2 + 0xAC0
00060773: R30 := 0x3990
00060775: call @__fprintf_chk with return %00060777

00060777:
0006077c: R0 := mem[R19, el]:u64
00060781: R1 := 1
00060786: R2 := 0x14000
0006078c: R2 := R2 + 0xB48
00060791: R30 := 0x39A4
00060793: call @__fprintf_chk with return %00060795

00060795:
0006079a: R0 := mem[R19, el]:u64
0006079f: R1 := 1
000607a4: R2 := 0x14000
000607aa: R2 := R2 + 0xBA8
000607af: R30 := 0x39B8
000607b1: call @__fprintf_chk with return %000607b3

000607b3:
000607b8: R0 := mem[R19, el]:u64
000607bd: R1 := 1
000607c2: R2 := 0x14000
000607c8: R2 := R2 + 0xBF0
000607cd: R30 := 0x39CC
000607cf: call @__fprintf_chk with return %000607d1

000607d1:
000607d6: R0 := mem[R19, el]:u64
000607db: R1 := 1
000607e0: R2 := 0x14000
000607e6: R2 := R2 + 0xC48
000607eb: R30 := 0x39E0
000607ed: call @__fprintf_chk with return %000607ef

000607ef:
000607f4: R0 := mem[R19, el]:u64
000607f9: R1 := 1
000607fe: R2 := 0x14000
00060804: R2 := R2 + 0xC90
00060809: R30 := 0x39F4
0006080b: call @__fprintf_chk with return %0006080d

0006080d:
00060812: R0 := mem[R19, el]:u64
00060817: R2 := 0x14000
0006081d: R2 := R2 + 0xCB8
00060822: R1 := 1
00060827: R30 := 0x3A08
00060829: call @__fprintf_chk with return %0006082b

0006082b:
0006082e: R0 := 1
00060833: R30 := 0x3A10
00060835: call @exit with return %00060837

00063fb5:
00063fb8: R0 := 0x27000
00063fbf: R0 := mem[R0 + 0xF88, el]:u64
00063fc6: R26 := pad:64[mem[R0, el]:u32]
00063fce: mem := mem with [R31 + 0xF8, el]:u32 <- 31:0[R26]
00063fd4: #1593 := ~31:0[R23]
00063fd9: #1594 := 31:0[R26] + ~31:0[R23] + 1
00063fdf: VF := extend:33[#1594] <> extend:33[31:0[R26]] + extend:33[#1593] +
          1
00063fe5: CF := pad:33[#1594] <> pad:33[31:0[R26]] + pad:33[#1593] + 1
00063fe9: ZF := #1594 = 0
00063fed: NF := 31:31[#1594]
00063ff3: when NF = VF goto %000627f1
0006ccf5: goto %00063ff7

00063ff7:
0006ccf6: goto %000628d4

000628d4:
000628df: R27 := mem[R24 + extend:64[31:0[R26].0], el]:u64
000628e4: R1 := 0x3A
000628ec: R25 :=

          >> 0x3D | R26 << 3].0
000628f2: R0 := R27
000628f7: R30 := 0x25E4
000628f9: call @strchr with return %000628fb

000628fb:
00062901: mem := mem with [R31 + 0x100, el]:u64 <- R0
00062906: R1 := 0
0006290c: when R0 = 0 goto %0006290a
0006ccf7: goto %0006287d

0006287d:
00062886: R0 := R27
0006288b: R30 := 0x25F8
0006288d: call @parent_add with return %0006288f

0006288f:
00062894: R0 := mem[R31 + 0x100, el]:u64
0006289b: R26 := pad:64[mem[R31 + 0xF8, el]:u32]
000628a0: when R0 = 0 goto %000627c0
0006ccf8: goto %000628a4

000627c0:
000627c4: R26 := pad:64[31:0[R26] + 2]
000627cc: mem := mem with [R31 + 0xF8, el]:u32 <- 31:0[R26]
000627d2: #1562 := ~31:0[R26]
000627d7: #1563 := 31:0[R23] + ~31:0[R26] + 1
000627dd: VF := extend:33[#1563] <> extend:33[31:0[R23]] + extend:33[#1562] +
          1
000627e3: CF := pad:33[#1563] <> pad:33[31:0[R23]] + pad:33[#1562] + 1
000627e7: ZF := #1563 = 0
000627eb: NF := 31:31[#1563]
000627f3: when ~(NF = VF & ~ZF) goto %000627f1
0006ccf9: goto %0006284b

0006284b:
00062851: R27 := mem[R24 + extend:64[31:0[R26].0], el]:u64
00062856: R1 := 0x3A
0006285e: R25 :=

          >> 0x3D | R26 << 3].0
00062864: R0 := R27
00062869: R30 := 0x2840
0006286b: call @strchr with return %0006286d

0006286d:
00062873: mem := mem with [R31 + 0x100, el]:u64 <- R0
00062878: R1 := 0
0006287f: when R0 <> 0 goto %0006287d
0006ccfa: goto %0006290a

0006290a:
00062913: R26 := pad:64[31:0[R26] + 1]
00062919: #1566 := ~31:0[R23]
0006291e: #1567 := 31:0[R26] + ~31:0[R23] + 1
00062924: VF := extend:33[#1567] <> extend:33[31:0[R26]] + extend:33[#1566] +
          1
0006292a: CF := pad:33[#1567] <> pad:33[31:0[R26]] + pad:33[#1566] + 1
0006292e: ZF := #1567 = 0
00062932: NF := 31:31[#1567]
00062938: when NF = VF goto %0006287d
0006ccfb: goto %0006293c

0006293c:
00062941: R25 := R24 + R25
00062946: R1 := 0
0006294b: R2 := 0xA
00062952: R0 := mem[R25 + 8, el]:u64
00062957: R30 := 0x286C
00062959: call @strtol with return %0006295b

0006295b:
0006295f: R1 := pad:64[31:0[R0]]
00062963: goto %0006287d

000628a4:
000628a8: R26 := pad:64[31:0[R26] + 1]
000628b0: mem := mem with [R31 + 0xF8, el]:u32 <- 31:0[R26]
000628b6: #1564 := ~31:0[R23]
000628bb: #1565 := 31:0[R26] + ~31:0[R23] + 1
000628c1: VF := extend:33[#1565] <> extend:33[31:0[R26]] + extend:33[#1564] +
          1
000628c7: CF := pad:33[#1565] <> pad:33[31:0[R26]] + pad:33[#1564] + 1
000628cb: ZF := #1565 = 0
000628cf: NF := 31:31[#1565]
000628d6: when NF <> VF goto %000628d4
0006ccfc: goto %000627f1

000627f1:
000627f9: when R21 = 0 goto %00061840
0006ccfd: goto %000627fd

00061840:
00061843: R0 := 0x14000
00061849: R0 := R0 + 0xD08
0006184e: R30 := 0x4054
00061850: call @config_open with return %00061852

00061852:
00061856: R21 := R0
0006185c: R1 := R20 + 0x4D8
00061863: R0 := pad:64[mem[R1 + 4, el]:u32]
00061869: when 31:0[R0] = 0 goto %00061867
0006ccfe: goto %00063adc

00061867:
00061870: when R21 = 0 goto %0006186e
0006ccff: goto %00063ad8

00063ad8:
00063ada: goto %000627fd

00063adc:
00063ae0: when R21 = 0 goto %00063ade
0006cd00: goto %00063b03

00063ade:
00063ae6: R2 := 0x14000
00063aeb: R1 := 1
00063af1: R2 := R2 + 0xD48
00063af6: R0 := 3
00063afb: R30 := 0x45D8
00063afd: call @__syslog_chk with return %00063aff

00063aff:
00063b01: goto %0006186e

00063b03:
00063b06: R1 := 0x14000
00063b0b: R0 := 1
00063b11: R1 := R1 + 0xD18
00063b16: R30 := 0x4078
00063b18: call @__printf_chk with return %00063b1a

00063b1a:
00063b1c: goto %000627fd

000627fd:
00062800: R0 := 0x32
00062805: R30 := 0x2620
00062807: call @new with return %00062809

00062809:
0006280c: R1 := 0x14000
00062812: R1 := R1 + 0xD70
0006281a: mem := mem with [R31 + 0x100, el]:u64 <- R0
00062820: R0 := R21
00062825: R30 := 0x2634
00062827: call @config_pop with return %00062829

00062829:
0006282d: R23 := R0
00062832: when R0 = 0 goto %00062342
0006cd01: goto %00062836

00062836:
0006283b: R0 := mem[R31 + 0x100, el]:u64
00062842: R1 := pad:64[mem[R0]]
00062847: when 31:0[R1] = 0 goto %0006231f
0006cd02: goto %00062332

0006231f:
00062323: R1 := R23
00062328: R2 := 0x32
0006232d: R30 := 0x3D28
0006232f: call @strlcpy with return %00062331

00062331:
00062334: goto %00062332

00062332:
00062339: R0 := R23
0006233e: R30 := 0x2650
00062340: call @free with return %00062342

00062342:
00062347: R24 := mem[R31 + 0x100, el]:u64
0006234c: R23 := 0x14000
00062352: R0 := R23 + 0xD78
00062358: R1 := R24
0006235d: R30 := 0x2664
0006235f: call @strcasecmp with return %00062361

00062361:
00062365: R1 := pad:64[31:0[R0]]
0006236b: R0 := R24
00062371: #1555 := 31:0[R1] + 0
00062376: VF := extend:33[#1555] <> extend:33[31:0[R1]] + 0
0006237b: CF := pad:33[#1555] <> pad:33[31:0[R1]] - 0x100000000
0006237f: ZF := #1555 = 0
00062383: NF := 31:31[#1555]
00062390: when ZF <> 1 goto %00062389
00062391: goto %0006238c

0006238c:
0006238d: R28 := 1
00062393: goto %0006238f

00062389:
0006238a: R28 := pad:64[31:0[R28]]
00062392: goto %0006238f

0006238f:
00062398: R30 := 0x2678
0006239a: call @free with return %0006239c

0006239c:
0006239f: R0 := 0x32
000623a4: R30 := 0x2680
000623a6: call @new with return %000623a8

000623a8:
000623ac: R2 := R0
000623b1: R1 := 0x14000
000623b7: R0 := R21
000623bd: R1 := R1 + 0xD80
000623c5: mem := mem with [R31 + 0x100, el]:u64 <- R2
000623ca: R30 := 0x2698
000623cc: call @config_pop with return %000623ce

000623ce:
000623d2: R24 := R0
000623d8: when R0 = 0 goto %000623d6
0006cd03: goto %000623fc

000623fc:
00062401: R0 := mem[R31 + 0x100, el]:u64
00062408: R1 := pad:64[mem[R0]]
0006240e: when 31:0[R1] = 0 goto %0006240c
0006cd04: goto %00062424

0006240c:
00062415: R1 := R24
0006241a: R2 := 0x32
0006241f: R30 := 0x3C8C
00062421: call @strlcpy with return %00062423

00062423:
00062426: goto %00062424

00062424:
0006242b: R0 := R24
00062430: R30 := 0x26B4
00062432: call @free with return %000623d6

000623d6:
000623e0: R24 := mem[R31 + 0x100, el]:u64
000623e6: R0 := R23 + 0xD78
000623ec: R1 := R24
000623f1: R30 := 0x26C4
000623f3: call @strcasecmp with return %000623f5

000623f5:
000623f8: when 31:0[R0] = 0 goto %00061d5a
0006cd05: goto %00061d6e

00061d5a:
00061d5e: R0 := R20 + 0x4D8
00061d63: R1 := 1
00061d6b: mem := mem with [R0 + 0x70, el]:u32 <- 31:0[R1]
00061d70: goto %00061d6e

00061d6e:
00061d75: R0 := R24
00061d7a: R23 := 0x14000
00061d80: R24 := R31 + 0x110
00061d86: R23 := R23 + 0xD90
00061d8b: R30 := 0x26DC
00061d8d: call @free with return %00061d8f

00061d8f:
00061d92: goto %00061d90

00061d90:
00061d97: R1 := R23
00061d9d: R0 := R21
00061da2: R30 := 0x2700
00061da4: call @config_pop with return %00061da6

00061da6:
00061dac: mem := mem with [R31 + 0x100, el]:u64 <- R0
00061db2: R1 := R0
00061db9: when R0 <> 0 goto %00061db7
0006cd06: goto %00061ddd

00061ddd:
00061de0: R23 := 0x14000
00061de5: R24 := 0x14000
00061deb: R26 := R23 + 0x100
00061df1: R24 := R24 + 0xD98
00061df7: R25 := R31 + 0x118
00061dfc: goto %00061dfa

00061dfa:
00061e01: R1 := R24
00061e07: R0 := R21
00061e0c: R30 := 0x2748
00061e0e: call @config_pop with return %00061e10

00061e10:
00061e16: mem := mem with [R31 + 0x100, el]:u64 <- R0
00061e1c: R2 := R0
00061e23: when R0 <> 0 goto %00061e21
0006cd07: goto %00061e4d

00061e4d:
00061e50: R24 := 0x14000
00061e55: R25 := 0x14000
00061e5b: R24 := R24 + 0xDA0
00061e61: R25 := R25 + 0x108
00061e67: R26 := R31 + 0x120
00061e6c: goto %00061e6a

00061e6a:
00061e71: R1 := R24
00061e77: R0 := R21
00061e7c: R30 := 0x2790
00061e7e: call @config_pop with return %00061e80

00061e80:
00061e86: mem := mem with [R31 + 0x100, el]:u64 <- R0
00061e8c: R2 := R0
00061e93: when R0 <> 0 goto %00061e91
0006cd08: goto %00061ebd

00061ebd:
00061ec0: R24 := 0x14000
00061ec5: R26 := 0x14000
00061ecb: R24 := R24 + 0xDD0
00061ed1: R26 := R26 + 0xDB0
00061ed6: goto %00061ed4

00061ed4:
00061edb: R1 := R24
00061ee1: R0 := R21
00061ee6: R30 := 0x27EC
00061ee8: call @config_pop with return %00061eea

00061eea:
00061ef0: mem := mem with [R31 + 0x100, el]:u64 <- R0
00061ef6: when R0 = 0 goto %00061ef4
0006cd09: goto %000626f2

00061ef4:
00061efd: R23 := R23 + 0x100
00061f02: goto %00061f00

00061f00:
00061f07: R1 := R23
00061f0d: R0 := R21
00061f12: R30 := 0x2DF0
00061f14: call @config_pop with return %00061f16

00061f16:
00061f1c: mem := mem with [R31 + 0x100, el]:u64 <- R0
00061f23: when R0 <> 0 goto %00061f21
0006cd0a: goto %00061f40

00061f40:
00061f45: R0 := mem[R31 + 0x128, el]:u64
00061f4b: when R0 = 0 goto %00061f49
0006cd0b: goto %00061fed

00061f49:
00061f53: R23 := mem[R21, el]:u64
00061f58: R0 := 0x14000
00061f60: mem := mem with [R31 + 0xD0, el]:u64 <- R0
00061f66: when R23 = 0 goto %00061f64
0006cd0c: goto %00062624

00061f64:
00061f6c: R0 := 0x14000
00061f74: mem := mem with [R31 + 0xD8, el]:u64 <- R0
0006cd0d: goto %00061f76

00062624:
00062627: R1 := 0x14000
0006262d: R26 := R0 + 0xDE0
00062633: R28 := R1 + 0xDE8
00062639: R27 := R31 + 0x128
00062641: mem := mem with [R31 + 0xD8, el]:u64 <- R1
00062646: goto %00062644

00062644:
0006264c: R25 := mem[R23, el]:u64
00062652: R0 := R26
00062658: R1 := R25
0006265d: R30 := 0x41CC
0006265f: call @strcasecmp with return %00062661

00062661:
00062667: mem := mem with [R31 + 0xF8, el]:u32 <- 31:0[R0]
0006266d: R24 := pad:64[31:0[R0]]
00062673: when 31:0[R0] = 0 goto %00062671
0006cd0e: goto %000626d7

000626d7:
000626db: R1 := R25
000626e1: R0 := R28
000626e6: R30 := 0x41E4
000626e8: call @strcasecmp with return %000626ea

000626ea:
000626ee: when 31:0[R0] <> 0 goto %000626b4
0006cd0f: goto %00062671

00062671:
0006267b: R1 := mem[R23 + 8, el]:u64
00062681: #1561 := 31:0[R24] + 0
00062686: VF := extend:33[#1561] <> extend:33[31:0[R24]] + 0
0006268b: CF := pad:33[#1561] <> pad:33[31:0[R24]] - 0x100000000
0006268f: ZF := #1561 = 0
00062693: NF := 31:31[#1561]
0006269f: when ZF goto %00062698
000626a0: goto %0006269b

0006269b:
0006269c: R2 := 1
000626a2: goto %0006269e

00062698:
00062699: R2 := 0
000626a1: goto %0006269e

0006269e:
000626a8: R0 := R27
000626ad: R30 := 0x41FC
000626af: call @acl_add with return %000626b1

000626b1:
000626b6: when 31:0[R0] <> 0 goto %000626b4
0006cd10: goto %000626c7

000626c7:
000626ca: R0 := 1
000626cf: R30 := 0x4208
000626d1: call @myexit with return %000626d3

000626d3:
000626d5: goto %000626b4

000626b4:
000626be: R23 := mem[R23 + 0x18, el]:u64
000626c3: when R23 = 0 goto %00061f76
0006cd11: goto %00062644

00061f76:
00061f7b: R0 := mem[R31 + 0xD0, el]:u64
00061f81: R25 := R0 + 0xDE0
00061f86: goto %00061f84

00061f84:
00061f8b: R1 := R25
00061f91: R0 := R21
00061f96: R30 := 0x4230
00061f98: call @config_pop with return %00061f9a

00061f9a:
00061fa0: mem := mem with [R31 + 0x100, el]:u64 <- R0
00061fa7: when R0 <> 0 goto %00061fa5
0006cd12: goto %00061fb1

00061fb1:
00061fb6: R0 := mem[R31 + 0xD8, el]:u64
00061fbc: R24 := R0 + 0xDE8
00061fc1: goto %00061fbf

00061fbf:
00061fc6: R1 := R24
00061fcc: R0 := R21
00061fd1: R30 := 0x4254
00061fd3: call @config_pop with return %00061fd5

00061fd5:
00061fdb: mem := mem with [R31 + 0x100, el]:u64 <- R0
00061fe2: when R0 <> 0 goto %00061fe0
0006cd13: goto %00061fec

00061fec:
00061fef: goto %00061fed

00061fe0:
00061fe8: R30 := 0x4248
00061fea: call @free with return %00061fbf

00061fa5:
00061fad: R30 := 0x4224
00061faf: call @free with return %00061f84

00061fed:
00061ff4: R0 := R21
00061ff9: R1 := 0x14000
00061fff: R1 := R1 + 0xDD8
00062004: R30 := 0x2E10
00062006: call @config_pop with return %00062008

00062008:
0006200c: R23 := R0
00062012: when R0 = 0 goto %00062010
0006cd14: goto %000625e5

000625e5:
000625ea: R0 := mem[R31 + 0x88, el]:u64
000625f1: R0 := pad:64[mem[R0]]
000625f7: when 31:0[R0] = 0 goto %000625f5
0006cd15: goto %00062614

000625f5:
000625ff: R0 := mem[R31 + 0x88, el]:u64
00062605: R1 := R23
0006260a: R2 := 0x32
0006260f: R30 := 0x3C7C
00062611: call @strlcpy with return %00062613

00062613:
00062616: goto %00062614

00062614:
0006261b: R0 := R23
00062620: R30 := 0x2E2C
00062622: call @free with return %00062010

00062010:
00062019: R0 := R21
0006201e: R1 := 0x14000
00062024: R1 := R1 + 0xDF0
00062029: R30 := 0x2E3C
0006202b: call @config_pop with return %0006202d

0006202d:
00062031: R23 := R0
00062037: when R0 = 0 goto %00062035
0006cd16: goto %000625d0

000625d0:
000625d5: R0 := mem[R31 + 0x80, el]:u64
000625dc: R0 := pad:64[mem[R0]]
000625e1: when 31:0[R0] = 0 goto %000621eb
0006cd17: goto %00062205

000621eb:
000621f0: R0 := mem[R31 + 0x80, el]:u64
000621f6: R1 := R23
000621fb: R2 := 0x32
00062200: R30 := 0x3D74
00062202: call @strlcpy with return %00062204

00062204:
00062207: goto %00062205

00062205:
0006220c: R0 := R23
00062211: R30 := 0x2E58
00062213: call @free with return %00062035

00062035:
0006203e: R0 := R21
00062043: R1 := 0x14000
00062049: R1 := R1 + 0xDF8
0006204e: R30 := 0x2E68
00062050: call @config_pop with return %00062052

00062052:
00062056: R23 := R0
0006205c: when R0 = 0 goto %0006205a
0006cd18: goto %000625bb

000625bb:
000625c0: R0 := mem[R31 + 0x68, el]:u64
000625c7: R0 := pad:64[mem[R0]]
000625cc: when 31:0[R0] = 0 goto %000622f5
0006cd19: goto %0006230f

000622f5:
000622fa: R0 := mem[R31 + 0x68, el]:u64
00062300: R1 := R23
00062305: R2 := 0x32
0006230a: R30 := 0x3D18
0006230c: call @strlcpy with return %0006230e

0006230e:
00062311: goto %0006230f

0006230f:
00062316: R0 := R23
0006231b: R30 := 0x2E84
0006231d: call @free with return %0006205a

0006205a:
00062063: R0 := R21
00062068: R1 := 0x14000
0006206e: R1 := R1 + 0xE08
00062073: R30 := 0x2E94
00062075: call @config_pop with return %00062077

00062077:
0006207b: R23 := R0
00062081: when R0 = 0 goto %0006207f
0006cd1a: goto %000625a6

000625a6:
000625ab: R0 := mem[R31 + 0xB0, el]:u64
000625b2: R0 := pad:64[mem[R0]]
000625b7: when 31:0[R0] = 0 goto %000622cb
0006cd1b: goto %000622e5

000622cb:
000622d0: R0 := mem[R31 + 0xB0, el]:u64
000622d6: R1 := R23
000622db: R2 := 0x32
000622e0: R30 := 0x3D04
000622e2: call @strlcpy with return %000622e4

000622e4:
000622e7: goto %000622e5

000622e5:
000622ec: R0 := R23
000622f1: R30 := 0x2EB0
000622f3: call @free with return %0006207f

0006207f:
00062088: R0 := R21
0006208d: R1 := 0x14000
00062093: R1 := R1 + 0xE18
00062098: R30 := 0x2EC0
0006209a: call @config_pop with return %0006209c

0006209c:
000620a0: R23 := R0
000620a6: when R0 = 0 goto %000620a4
0006cd1c: goto %00062591

00062591:
00062596: R0 := mem[R31 + 0xB8, el]:u64
0006259d: R0 := pad:64[mem[R0]]
000625a2: when 31:0[R0] = 0 goto %000622a1
0006cd1d: goto %000622bb

000622a1:
000622a6: R0 := mem[R31 + 0xB8, el]:u64
000622ac: R1 := R23
000622b1: R2 := 0x32
000622b6: R30 := 0x3CF0
000622b8: call @strlcpy with return %000622ba

000622ba:
000622bd: goto %000622bb

000622bb:
000622c2: R0 := R23
000622c7: R30 := 0x2EDC
000622c9: call @free with return %000620a4

000620a4:
000620ad: R0 := R21
000620b2: R1 := 0x14000
000620b8: R1 := R1 + 0xE20
000620bd: R30 := 0x2EEC
000620bf: call @config_pop with return %000620c1

000620c1:
000620c5: R23 := R0
000620cb: when R0 = 0 goto %000620c9
0006cd1e: goto %00062262

00062262:
00062267: R0 := mem[R31 + 0xC0, el]:u64
0006226e: R0 := pad:64[mem[R0]]
00062274: when 31:0[R0] = 0 goto %00062272
0006cd1f: goto %00062291

00062272:
0006227c: R0 := mem[R31 + 0xC0, el]:u64
00062282: R1 := R23
00062287: R2 := 0x32
0006228c: R30 := 0x3CDC
0006228e: call @strlcpy with return %00062290

00062290:
00062293: goto %00062291

00062291:
00062298: R0 := R23
0006229d: R30 := 0x2F08
0006229f: call @free with return %000620c9

000620c9:
000620d2: R0 := R21
000620d7: R1 := 0x14000
000620dd: R1 := R1 + 0xE28
000620e2: R30 := 0x2F18
000620e4: call @config_pop with return %000620e6

000620e6:
000620ea: R23 := R0
000620f0: when R0 = 0 goto %000620ee
0006cd20: goto %0006224d

0006224d:
00062252: R0 := mem[R31 + 0x90, el]:u64
00062259: R0 := pad:64[mem[R0]]
0006225e: when 31:0[R0] = 0 goto %000621c1
0006cd21: goto %000621db

000621c1:
000621c6: R0 := mem[R31 + 0x90, el]:u64
000621cc: R1 := R23
000621d1: R2 := 0x32
000621d6: R30 := 0x3D60
000621d8: call @strlcpy with return %000621da

000621da:
000621dd: goto %000621db

000621db:
000621e2: R0 := R23
000621e7: R30 := 0x2F34
000621e9: call @free with return %000620ee

000620ee:
000620f7: R0 := R21
000620fc: R1 := 0x14000
00062102: R1 := R1 + 0xE38
00062107: R30 := 0x2F44
00062109: call @config_pop with return %0006210b

0006210b:
0006210f: R23 := R0
00062115: when R0 = 0 goto %00062113
0006cd22: goto %00062238

00062238:
0006223d: R0 := mem[R31 + 0x78, el]:u64
00062244: R0 := pad:64[mem[R0]]
00062249: when 31:0[R0] = 0 goto %00062197
0006cd23: goto %000621b1

00062197:
0006219c: R0 := mem[R31 + 0x78, el]:u64
000621a2: R1 := R23
000621a7: R2 := 0x32
000621ac: R30 := 0x3D4C
000621ae: call @strlcpy with return %000621b0

000621b0:
000621b3: goto %000621b1

000621b1:
000621b8: R0 := R23
000621bd: R30 := 0x2F60
000621bf: call @free with return %00062113

00062113:
0006211b: R0 := 0x32
00062120: R30 := 0x2F68
00062122: call @new with return %00062124

00062124:
00062127: R1 := 0x14000
0006212d: R1 := R1 + 0xE48
00062135: mem := mem with [R31 + 0x100, el]:u64 <- R0
0006213b: R0 := R21
00062140: R30 := 0x2F7C
00062142: call @config_pop with return %00062144

00062144:
00062148: R23 := R0
0006214e: when R0 = 0 goto %0006214c
0006cd24: goto %0006215f

0006215f:
00062164: R0 := mem[R31 + 0x100, el]:u64
0006216b: R1 := pad:64[mem[R0]]
00062171: when 31:0[R1] = 0 goto %0006216f
0006cd25: goto %00062187

0006216f:
00062178: R1 := R23
0006217d: R2 := 0x32
00062182: R30 := 0x3D38
00062184: call @strlcpy with return %00062186

00062186:
00062189: goto %00062187

00062187:
0006218e: R0 := R23
00062193: R30 := 0x2F98
00062195: call @free with return %0006214c

0006214c:
00062156: R0 := pad:64[mem[R31 + 0xA0, el]:u32]
0006215b: when 31:0[R0] = 0 goto %00061955
0006cd26: goto %000619fb

00061955:
0006195a: R0 := mem[R31 + 0x100, el]:u64
0006195f: R2 := 0
00061964: R1 := 0
00061969: R30 := 0x40C0
0006196c: call @strtoul with return %0006196e

0006196e:
00061972: R24 := R0
00061979: R0 := mem[R31 + 0x100, el]:u64
0006197e: R2 := 0
00061983: R1 := 0
00061988: R30 := 0x40D4
0006198a: call @strtoul with return %0006198c

0006198c:
00061991: R23 := pad:64[31:8[31:0[R0] >> 0x18 | 31:0[R0] << 8].0]
00061998: R0 := mem[R31 + 0x100, el]:u64
0006199d: R2 := 0
000619a2: R1 := 0
000619a8: R23 := pad:64[0.23:16[R23].0]
000619ad: R30 := 0x40EC
000619af: call @strtoul with return %000619b1

000619b1:
000619b6: R1 := pad:64[0.23:0[31:0[R0] >> 8 | 31:0[R0] << 0x18]]
000619bd: R0 := mem[R31 + 0x100, el]:u64
000619c3: R1 := pad:64[0.15:8[R1].0]
000619ca: R23 := pad:64[31:0[R23] | 31:0[R1]]
000619cf: R2 := 0
000619d4: R1 := 0
000619d9: R30 := 0x4108
000619db: call @strtoul with return %000619dd

000619dd:
000619e2: R0 := pad:64[0.7:0[31:0[R0] >> 0x18 | 31:0[R0] << 8]]
000619e9: R24 := pad:64[31:0[R0] | 31:0[R24] << 0x18]
000619f0: R0 := pad:64[31:0[R24] | 31:0[R23]]
000619f8: mem := mem with [R31 + 0xA0, el]:u32 <- 31:0[R0]
000619fd: goto %000619fb

000619fb:
00061a03: R0 := mem[R31 + 0x100, el]:u64
00061a08: R30 := 0x2FA8
00061a0a: call @free with return %00061a0c

00061a0c:
00061a0f: R0 := 0x32
00061a14: R30 := 0x2FB0
00061a16: call @new with return %00061a18

00061a18:
00061a1b: R1 := 0x14000
00061a21: R1 := R1 + 0xE50
00061a29: mem := mem with [R31 + 0x100, el]:u64 <- R0
00061a2f: R0 := R21
00061a34: R30 := 0x2FC4
00061a36: call @config_pop with return %00061a38

00061a38:
00061a3c: R23 := R0
00061a42: when R0 = 0 goto %00061a40
0006cd27: goto %000637a6

000637a6:
000637ab: R0 := mem[R31 + 0x100, el]:u64
000637b2: R1 := pad:64[mem[R0]]
000637b7: when 31:0[R1] = 0 goto %00062215
0006cd28: goto %00062228

00062215:
00062219: R1 := R23
0006221e: R2 := 0x32
00062223: R30 := 0x3D84
00062225: call @strlcpy with return %00062227

00062227:
0006222a: goto %00062228

00062228:
0006222f: R0 := R23
00062234: R30 := 0x2FE0
00062236: call @free with return %00061a40

00061a40:
00061a49: R23 := R20 + 0x4D8
00061a50: R0 := mem[R23 + 0x78, el]:u64
00061a56: when R0 = 0 goto %00061a54
0006cd29: goto %00061a69

00061a54:
00061a5e: R0 := mem[R31 + 0x100, el]:u64
00061a65: R1 := pad:64[mem[R0]]
00061a6b: when 31:0[R1] = 0 goto %00061a69
0006cd2a: goto %00061d29

00061d29:
00061d2c: R1 := 1
00061d31: R2 := 0xA
00061d39: mem := mem with [R23 + 0x74, el]:u32 <- 31:0[R1]
00061d3e: R1 := 0
00061d43: R30 := 0x3B1C
00061d45: call @strtol with return %00061d47

00061d47:
00061d4c: R0 :=

00061d54: mem := mem with [R23 + 0x78, el]:u64 <- R0
00061d58: goto %00061a69

00061a69:
00061a73: R0 := mem[R31 + 0x100, el]:u64
00061a79: R24 := R20 + 0x4D8
00061a7e: R23 := 0x14000
00061a84: R23 := R23 + 0xE60
00061a89: R30 := 0x3000
00061a8b: call @free with return %00061a8d

00061a8d:
00061a90: goto %00061a8e

00061a8e:
00061a95: R1 := R23
00061a9b: R0 := R21
00061aa0: R30 := 0x3018
00061aa2: call @config_pop with return %00061aa4

00061aa4:
00061aaa: mem := mem with [R31 + 0x100, el]:u64 <- R0
00061ab0: R1 := R0
00061ab6: when R0 = 0 goto %00061ab4
0006cd2b: goto %00061ced

00061ab4:
00061abc: R24 := 0x14000
00061ac1: R25 := 0x14000
00061ac7: R24 := R24 + 0xEA0
00061acd: R25 := R25 + 0xE68
00061ad3: R23 := R20 + 0x4D8
0006cd2c: goto %00061ad5

00061ad5:
00061ad9: R1 := R24
00061adf: R0 := R21
00061ae4: R30 := 0x3060
00061ae6: call @config_pop with return %00061ae8

00061ae8:
00061aee: mem := mem with [R31 + 0x100, el]:u64 <- R0
00061af4: R26 := R0
00061afa: when R0 = 0 goto %00061af8
0006cd2d: goto %00061c78

00061c78:
00061c7b: R1 := 0x3A
00061c80: R30 := 0x3074
00061c82: call @strchr with return %00061c84

00061c84:
00061c88: R2 := R0
00061c8d: when R0 = 0 goto %00061c4a
0006cd2e: goto %00061c91

00061c4a:
00061c4e: R3 := R26
00061c54: R2 := R25
00061c59: R1 := 1
00061c5e: R0 := 3
00061c63: R30 := 0x3170
00061c65: call @__syslog_chk with return %00061c67

00061c67:
00061c69: goto %00061ad5

00061c91:
00061c96: mem := mem with [R2] <- 0
00061c9a: R2 := R2 + 1
00061c9f: R4 := 1
00061ca5: R3 := pad:64[31:0[R4]]
00061cac: R0 := mem[R23 + 0x60, el]:u64
00061cb3: R1 := mem[R31 + 0x100, el]:u64
00061cb8: R30 := 0x3094
00061cba: call @hlist_add with return %00061cbc

00061cbc:
00061cc2: mem := mem with [R23 + 0x60, el]:u64 <- R0
00061cc8: R1 := R24
00061cce: R0 := R21
00061cd3: R30 := 0x30A4
00061cd5: call @config_pop with return %00061cd7

00061cd7:
00061cdd: mem := mem with [R31 + 0x100, el]:u64 <- R0
00061ce3: R26 := R0
00061ce9: when R0 <> 0 goto %00061c78
0006cd2f: goto %00061af8

00061af8:
00061b00: R24 := 0x14000
00061b05: R26 := 0x14000
00061b0b: R24 := R24 + 0xEB0
00061b11: R26 := R26 + 0xF8
00061b17: R23 := R20 + 0x4D8
00061b1c: R25 := 1
00061b21: goto %00061b1f

00061b1f:
00061b26: R1 := R24
00061b2c: R0 := R21
00061b31: R30 := 0x30E0
00061b33: call @config_pop with return %00061b35

00061b35:
00061b3b: mem := mem with [R31 + 0x100, el]:u64 <- R0
00061b41: R27 := R0
00061b47: when R0 = 0 goto %00061b45
0006cd30: goto %00061b92

00061b45:
00061b4f: R23 := mem[R21, el]:u64
00061b54: when R23 = 0 goto %0006186e
0006cd31: goto %00061b58

00061b58:
00061b5b: R24 := 0x14000
00061b61: R24 := R24 + 0xEC0
0006cd32: goto %00061b65

00061b65:
00061b6a: R3 := mem[R23, el]:u64
00061b70: R2 := R24
00061b75: R1 := 1
00061b7a: R0 := 6
00061b7f: R30 := 0x319C
00061b81: call @__syslog_chk with return %00061b83

00061b83:
00061b88: R23 := mem[R23 + 0x18, el]:u64
00061b8e: when R23 <> 0 goto %00061b65
0006cd33: goto %0006186e

0006186e:
00061877: R0 := R21
0006187c: R30 := 0x31AC
0006187e: call @config_close with return %00061880

00061880:
00061885: R0 := mem[R31 + 0x70, el]:u64
0006188b: #1554 := R0 + 0
00061890: VF := extend:65[#1554] <> extend:65[R0] + 0
00061895: CF := pad:65[#1554] <> pad:65[R0] - 0x10000000000000000
00061899: ZF := #1554 = 0
0006189d: NF := 63:63[#1554]
000618a4: R0 := pad:64[mem[R31 + 0xC8, el]:u32]
000618b0: when ZF goto %000618a9
000618b1: goto %000618ac

000618ac:
000618ad: R21 := 1
000618b3: goto %000618af

000618a9:
000618aa: R21 := 0
000618b2: goto %000618af

000618af:
000618ba: when 31:0[R0] <> 0 goto %000618b8
0006cd34: goto %00063994

00063994:
00063998: R0 := R20 + 0x4D8
0006399f: R0 := mem[R0 + 8, el]:u64
000639a5: when R0 = 0 goto %000639a3
0006cd35: goto %000639c9

000639a3:
000639ad: R1 := pad:64[mem[R31 + 0xCC, el]:u32]
000639b2: R0 := 0x14000
000639b8: R0 := R0 + 0xEE8
000639bf: R1 := pad:64[31:0[R21] | 31:0[R1]]
000639c4: R30 := 0x454C
000639c6: call @croak with return %000639c8

000639c8:
000639cb: goto %000639c9

000639c9:
000639d1: R0 := mem[R31 + 0x70, el]:u64
000639d7: when R0 <> 0 goto %000618b8
0006cd36: goto %000639db

000639db:
000639e0: R0 := mem[R31 + 0x118, el]:u64
000639e6: when R0 = 0 goto %000639e4
0006cd37: goto %000618b8

000639e4:
000639ee: R1 := pad:64[mem[R31 + 0xCC, el]:u32]
000639f3: R0 := 0x14000
000639f9: R0 := R0 + 0xF08
000639fe: R30 := 0x4534
00063a00: call @croak with return %00063a02

00063a02:
00063a04: goto %000618b8

000618b8:
000618c2: R23 := mem[R31 + 0x78, el]:u64
000618c9: R0 := pad:64[mem[R23]]
000618d0: when 31:0[R0] <> 0 goto %000618ce
0006cd38: goto %00063973

00063973:
00063977: R0 := R23
0006397c: R1 := 0x32
00063981: R30 := 0x31F4
00063984: call @gethostname with return %00063986

00063986:
0006398b: R0 := pad:64[mem[R23]]
00063990: when 31:0[R0] = 0 goto %00063892
0006cd39: goto %000638b1

00063892:
00063895: R0 := 0x14000
0006389b: R1 := R0 + 0x88
000638a2: R0 := mem[R31 + 0x78, el]:u64
000638a7: R2 := 0x32
000638ac: R30 := 0x4164
000638ae: call @strlcpy with return %000638b0

000638b0:
000638b3: goto %000638b1

000638b1:
000638b9: R3 := mem[R31 + 0x78, el]:u64
000638be: R2 := 0x14000
000638c3: R1 := 1
000638c9: R2 := R2 + 0xF40
000638ce: R0 := 6
000638d3: R30 := 0x3214
000638d5: call @__syslog_chk with return %000618ce

000618ce:
000618d8: R1 := mem[R31 + 0x88, el]:u64
000618df: R0 := pad:64[mem[R1]]
000618e5: when 31:0[R0] = 0 goto %000618e3
0006cd3a: goto %0006390b

0006390b:
0006390e: R0 := 0x14000
00063914: R0 := R0 + 0xF60
00063919: R30 := 0x322C
0006391b: call @strcasecmp with return %0006391d

0006391d:
00063920: when 31:0[R0] = 0 goto %000636d1
0006cd3b: goto %00063924

000636d1:
000636d5: R0 := R20 + 0x4D8
000636da: R1 := 0x15000
000636df: R2 := 1
000636e6: V0 := pad:128[mem[R1 + 0x3D0, el]:u64]
000636ed: R0 := mem[R0 + 0x68, el]:u64
000636f3: R1 := R0 + 0x200
000636fb: mem := mem with [R0 + 0x134, el]:u32 <- 31:0[R2]
00063703: mem := mem with [R1 - 0xD4, el]:u64 <- 63:0[V0]
00063707: goto %000618e3

00063924:
00063929: R1 := mem[R31 + 0x88, el]:u64
0006392e: R0 := 0x13000
00063934: R0 := R0 + 0x6F0
00063939: R30 := 0x3240
0006393b: call @strcasecmp with return %0006393d

0006393d:
00063941: when 31:0[R0] <> 0 goto %00062fa7
0006cd3c: goto %00063945

00062fa7:
00062fac: R1 := mem[R31 + 0x88, el]:u64
00062fb1: R0 := 0x14000
00062fb7: R0 := R0 + 0xF68
00062fbc: R30 := 0x4408
00062fbe: call @strcasecmp with return %00062fc0

00062fc0:
00062fc4: when 31:0[R0] = 0 goto %00062fc2
0006cd3d: goto %00062ff2

00062fc2:
00062fcb: R0 := R20 + 0x4D8
00062fd0: R2 := 1
00062fd7: R0 := mem[R0 + 0x68, el]:u64
00062fdd: R1 := R0 + 0x200
00062fe5: mem := mem with [R0 + 0x134, el]:u32 <- 31:0[R2]
00062fec: mem := mem with [R1 - 0xD4, el]:u64 <- 0
00062ff0: goto %000618e3

00062ff2:
00062ff7: R1 := mem[R31 + 0x88, el]:u64
00062ffc: R0 := 0x14000
00063002: R0 := R0 + 0xF70
00063007: R30 := 0x441C
00063009: call @strcasecmp with return %0006300b

0006300b:
00063010: when 31:0[R0] <> 0 goto %0006300e
0006cd3e: goto %000632da

0006300e:
00063018: R1 := mem[R31 + 0x88, el]:u64
0006301d: R0 := 0x14000
00063023: R0 := R0 + 0xF78
00063028: R30 := 0x468C
0006302a: call @strcasecmp with return %0006302c

0006302c:
00063031: when 31:0[R0] <> 0 goto %0006302f
0006cd3f: goto %00063241

0006302f:
00063037: R2 := 0x14000
0006303d: R2 := R2 + 0xF80
00063042: R1 := 1
00063047: R0 := 3
0006304c: R30 := 0x46F0
0006304e: call @__syslog_chk with return %00063050

00063050:
00063053: R0 := 1
00063058: R30 := 0x46F8
0006305a: call @myexit with return %0006305c

0006305c:
0006305e: goto %000618e3

00063241:
00063245: R0 := R20 + 0x4D8
0006324a: R1 := 0x15000
00063251: V0 := pad:128[mem[R1 + 0x3D8, el]:u64]
00063258: R0 := mem[R0 + 0x68, el]:u64
0006325e: R1 := R0 + 0x200
00063265: mem := mem with [R0 + 0x134, el]:u32 <- 0
0006326d: mem := mem with [R1 - 0xD4, el]:u64 <- 63:0[V0]
00063271: goto %000618e3

000632da:
000632de: R0 := R20 + 0x4D8
000632e3: R1 := 0x12000
000632ea: V0 := pad:128[mem[R1 + 0x688, el]:u64]
000632f1: R0 := mem[R0 + 0x68, el]:u64
000632f7: R1 := R0 + 0x200
000632fe: mem := mem with [R0 + 0x134, el]:u32 <- 0
00063306: mem := mem with [R1 - 0xD4, el]:u64 <- 63:0[V0]
0006330a: goto %000618e3

00063945:
00063949: R0 := R20 + 0x4D8
0006394e: R1 := 0x15000
00063955: V0 := pad:128[mem[R1 + 0x3D0, el]:u64]
0006395c: R0 := mem[R0 + 0x68, el]:u64
00063962: R1 := R0 + 0x200
00063969: mem := mem with [R0 + 0x134, el]:u32 <- 0
00063971: mem := mem with [R1 - 0xD4, el]:u64 <- 63:0[V0]
0006cd40: goto %000618e3

000618e3:
000618ed: R0 := mem[R31 + 0x120, el]:u64
000618f3: when R0 = 0 goto %000618f1
0006cd41: goto %000638f7

000638f7:
000638fb: R0 := R20 + 0x4D8
00063902: R0 := mem[R0 + 0x60, el]:u64
00063907: when R0 = 0 goto %00062f87
0006cd42: goto %000618f1

00062f87:
00062f8a: R2 := 0x14000
00062f8f: R1 := 1
00062f95: R2 := R2 + 0xFA0
00062f9a: R0 := 4
00062f9f: R30 := 0x43F4
00062fa1: call @__syslog_chk with return %00062fa3

00062fa3:
00062fa5: goto %000618f1

000618f1:
000618fb: R0 := mem[R31 + 0x70, el]:u64
00061901: when R0 = 0 goto %000618ff
0006cd43: goto %00061943

000618ff:
00061908: R3 := R20 + 0x4D8
0006190d: R2 := 0x14000
00061912: R1 := 1
00061918: R2 := R2 + 0xFD8
0006191d: R0 := 6
00061924: R5 := mem[R3 + 0x68, el]:u64
0006192b: R3 := pad:64[mem[R5 + 0x12C, el]:u32]
00061932: R4 := pad:64[mem[R5 + 0x130, el]:u32]
00061939: R5 := pad:64[mem[R5 + 0x134, el]:u32]
0006193e: R30 := 0x40AC
00061940: call @__syslog_chk with return %00061942

00061942:
00061945: goto %00061943

00061943:
0006194b: R0 := pad:64[mem[R31 + 0xA0, el]:u32]
00061951: when 31:0[R0] <> 0 goto %00060977
0006cd44: goto %000609b8

000609b8:
000609c0: R0 := pad:64[mem[R31 + 0xC8, el]:u32]
000609c7: R21 := pad:64[31:0[R21] | 31:0[R0]]
000609ce: when 31:0[R21] <> 0 goto %000609cc
0006cd45: goto %00063f93

00063f93:
00063f98: R0 := pad:64[mem[R31 + 0xCC, el]:u32]
00063f9d: when 31:0[R0] = 0 goto %00060bad
0006cd46: goto %00063fa1

00063fa1:
00063fa5: R0 := R20 + 0x4D8
00063fac: R0 := pad:64[mem[R0 + 0x70, el]:u32]
00063fb1: when 31:0[R0] = 0 goto %000609cc
0006cd47: goto %00060bad

000609cc:
000609d5: R23 := R31 + 0x150
000609da: R1 := 0x15000
000609df: R0 := 1
000609e5: R1 := R1 + 0x30
000609ea: R30 := 0x3618
000609ec: call @__printf_chk with return %000609ee

000609ee:
000609f2: R1 := R23
000609f7: R0 := 0
000609fc: R30 := 0x3624
000609ff: call @tcgetattr with return %00060a01

00060a01:
00060a05: #1524 := R31 + 0x150
00060a0a: R2 := mem[#1524, el]:u64
00060a0f: R3 := mem[#1524 + 8, el]:u64
00060a15: #1525 := R31 + 0x190
00060a1b: mem := mem with [#1525, el]:u64 <- R2
00060a21: mem := mem with [#1525 + 8, el]:u64 <- R3
00060a28: R1 := pad:64[mem[R31 + 0x188, el]:u32]
00060a2e: #1526 := R31 + 0x160
00060a33: R4 := mem[#1526, el]:u64
00060a38: R5 := mem[#1526 + 8, el]:u64
00060a3e: #1527 := R31 + 0x1A0
00060a44: mem := mem with [#1527, el]:u64 <- R4
00060a4a: mem := mem with [#1527 + 8, el]:u64 <- R5
00060a51: R0 := pad:64[mem[R31 + 0x19C, el]:u32]
00060a57: #1528 := R31 + 0x170
00060a5c: R4 := mem[#1528, el]:u64
00060a61: R5 := mem[#1528 + 8, el]:u64
00060a66: R3 := 0xFFFFFFF6
00060a6d: R0 := pad:64[31:0[R0] & 31:0[R3]]
00060a73: R2 := R31 + 0x190
00060a7a: R3 := mem[R31 + 0x180, el]:u64
00060a82: mem := mem with [R31 + 0x19C, el]:u32 <- 31:0[R0]
00060a87: R0 := 0
00060a8d: #1529 := R31 + 0x1B0
00060a93: mem := mem with [#1529, el]:u64 <- R4
00060a99: mem := mem with [#1529 + 8, el]:u64 <- R5
00060aa1: mem := mem with [R31 + 0x1C0, el]:u64 <- R3
00060aa9: mem := mem with [R31 + 0x1C8, el]:u32 <- 31:0[R1]
00060aae: R1 := 1
00060ab3: R30 := 0x366C
00060ab6: call @tcsetattr with return %00060ab8

00060ab8:
00060abb: R2 := 0x27000
00060ac0: R1 := 0x32
00060ac7: R24 := mem[R31 + 0x68, el]:u64
00060ace: R2 := mem[R2 + 0xFA8, el]:u64
00060ad4: R0 := R24
00060adb: R2 := mem[R2, el]:u64
00060ae0: R30 := 0x3688
00060ae2: call @fgets with return %00060ae4

00060ae4:
00060ae8: R3 := R0
00060aee: R2 := R23
00060af3: R1 := 1
00060af8: R0 := 0
00060b00: mem := mem with [R31 + 0x100, el]:u64 <- R3
00060b05: R30 := 0x36A0
00060b07: call @tcsetattr with return %00060b09

00060b09:
00060b0d: R0 := R24
00060b12: R30 := 0x36A8
00060b14: call @strlen with return %00060b16

00060b16:
00060b1a: R0 := pad:64[31:0[R0] - 1]
00060b22: mem := mem with [R31 + 0xF8, el]:u32 <- 31:0[R0]
00060b29: R1 :=
          63:32[31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0]].31:0[R0]
00060b31: R0 := pad:64[mem[R24 + extend:64[31:0[R0]]]]
00060b37: #1530 := 31:0[R0] - 0xA
00060b3c: VF := extend:33[#1530] <> extend:33[31:0[R0]] - 0xA
00060b41: CF := pad:33[#1530] <> pad:33[31:0[R0]] + 0xFFFFFFF6
00060b45: ZF := #1530 = 0
00060b49: NF := 31:31[#1530]
00060b4f: when ZF goto %00060b4d
0006cd48: goto %00060b90

00060b4d:
00060b57: R2 := mem[R31 + 0x68, el]:u64
00060b5f: mem := mem with [R2 + R1] <- 0
00060b66: R0 := extend:64[mem[R31 + 0xF8, el]:u32]
00060b6c: R0 := R0 - 1
00060b74: R1 := pad:64[mem[R2 + R0]]
00060b7a: #1531 := 31:0[R1] - 0xD
00060b7f: VF := extend:33[#1531] <> extend:33[31:0[R1]] - 0xD
00060b84: CF := pad:33[#1531] <> pad:33[31:0[R1]] + 0xFFFFFFF3
00060b88: ZF := #1531 = 0
00060b8c: NF := 31:31[#1531]
00060b92: when ZF <> 1 goto %00060b90
0006cd49: goto %00063f87

00063f87:
00063f8d: mem := mem with [R2 + R0] <- 0
00063f91: goto %00060b90

00060b90:
00060b98: R1 := 0x13000
00060b9d: R0 := 1
00060ba3: R1 := R1 + 0x8F0
00060ba8: R30 := 0x36D0
00060baa: call @__printf_chk with return %00060bac

00060bac:
00060baf: goto %00060bad

00060bad:
00060bb5: R0 := mem[R31 + 0x68, el]:u64
00060bbc: R0 := pad:64[mem[R0]]
00060bc3: when 31:0[R0] <> 0 goto %00060bc1
0006cd4a: goto %00063f71

00060bc1:
00060bca: R23 := R20 + 0x4D8
00060bd1: R0 := mem[R23 + 0x68, el]:u64
00060bd8: R1 := pad:64[mem[R0 + 0x130, el]:u32]
00060bde: #1532 := 31:0[R1] + 0
00060be3: VF := extend:33[#1532] <> extend:33[31:0[R1]] + 0
00060be8: CF := pad:33[#1532] <> pad:33[31:0[R1]] - 0x100000000
00060bec: ZF := #1532 = 0
00060bf0: NF := 31:31[#1532]
00060bf6: #1533 := 31:0[R21] + 0
00060c1c: goto %00060c16

00060c16:
00060c18: when ZF goto %00060bfb
00060c19: goto %00060c0b

00060c0b:
00060c0c: VF := 0
00060c0f: CF := 0
00060c12: ZF := 0
00060c15: NF := 0
00060c1b: goto %00060c17

00060bfb:
00060bfc: VF := extend:33[#1533] <> extend:33[31:0[R21]] + 0
00060c01: CF := pad:33[#1533] <> pad:33[31:0[R21]] - 0x100000000
00060c05: ZF := #1533 = 0
00060c09: NF := 31:31[#1533]
00060c1a: goto %00060c17

00060c17:
00060c22: when ZF goto %00060c20
0006cd4b: goto %00063f09

00060c20:
00060c2a: R0 := pad:64[mem[R0 + 0x134, el]:u32]
00060c31: when 31:0[R0] <> 0 goto %00060c2f
0006cd4c: goto %000624c6

00063f09:
00063f0e: R0 := mem[R31 + 0x68, el]:u64
00063f13: R30 := 0x36F4
00063f15: call @ntlm_hash_nt_password with return %00063f17

00063f17:
00063f1d: mem := mem with [R31 + 0x100, el]:u64 <- R0
00063f24: R1 := mem[R23 + 0x68, el]:u64
00063f2a: #1591 := R1 + 0
00063f2f: VF := extend:65[#1591] <> extend:65[R1] + 0
00063f34: CF := pad:65[#1591] <> pad:65[R1] - 0x10000000000000000
00063f38: ZF := #1591 = 0
00063f3c: NF := 63:63[#1591]
00063f42: #1592 := R0 + 0
00063f68: goto %00063f62

00063f62:
00063f64: when ZF <> 1 goto %00063f47
00063f65: goto %00063f57

00063f57:
00063f58: VF := 0
00063f5b: CF := 0
00063f5e: ZF := 1
00063f61: NF := 0
00063f67: goto %00063f63

00063f47:
00063f48: VF := extend:65[#1592] <> extend:65[R0] + 0
00063f4d: CF := pad:65[#1592] <> pad:65[R0] - 0x10000000000000000
00063f51: ZF := #1592 = 0
00063f55: NF := 63:63[#1592]
00063f66: goto %00063f63

00063f63:
00063f6d: when ZF <> 1 goto %00062434
0006cd4d: goto %00062462

00062434:
00062439: R2 := mem[R0, el]:u64
0006243e: R3 := mem[R0 + 8, el]:u64
00062444: #1556 := R1 + 0xC8
0006244a: mem := mem with [#1556, el]:u64 <- R2
00062450: mem := mem with [#1556 + 8, el]:u64 <- R3
00062457: R2 := mem[R0 + 0xD, el]:u64
0006245f: mem := mem with [R1 + 0xD5, el]:u64 <- R2
00062464: goto %00062462

00062462:
00062468: R30 := 0x370C
0006246a: call @free with return %0006246c

0006246c:
00062470: R0 := R20 + 0x4D8
00062477: R0 := mem[R0 + 0x68, el]:u64
0006247e: R0 := pad:64[mem[R0 + 0x134, el]:u32]
00062484: #1557 := 31:0[R0] + 0
00062489: VF := extend:33[#1557] <> extend:33[31:0[R0]] + 0
0006248e: CF := pad:33[#1557] <> pad:33[31:0[R0]] - 0x100000000
00062492: ZF := #1557 = 0
00062496: NF := 31:31[#1557]
0006249c: #1558 := 31:0[R21] + 0
000624c2: goto %000624bc

000624bc:
000624be: when ZF goto %000624a1
000624bf: goto %000624b1

000624b1:
000624b2: VF := 0
000624b5: CF := 0
000624b8: ZF := 0
000624bb: NF := 0
000624c1: goto %000624bd

000624a1:
000624a2: VF := extend:33[#1558] <> extend:33[31:0[R21]] + 0
000624a7: CF := pad:33[#1558] <> pad:33[31:0[R21]] - 0x100000000
000624ab: ZF := #1558 = 0
000624af: NF := 31:31[#1558]
000624c0: goto %000624bd

000624bd:
000624c8: when ZF goto %000624c6
0006cd4e: goto %00060c2f

000624c6:
000624cf: R0 := R20 + 0x4D8
000624d6: R0 := mem[R0 + 0x68, el]:u64
000624dd: R0 := pad:64[mem[R0 + 0x12C, el]:u32]
000624e2: when 31:0[R0] = 0 goto %00060d36
0006cd4f: goto %000624e6

000624e6:
000624e9: goto %000624e7

00060c2f:
00060c39: R0 := mem[R31 + 0x68, el]:u64
00060c3e: R30 := 0x372C
00060c40: call @ntlm_hash_lm_password with return %00060c42

00060c42:
00060c48: mem := mem with [R31 + 0x100, el]:u64 <- R0
00060c4e: R1 := R20 + 0x4D8
00060c54: #1534 := R0 + 0
00060c59: VF := extend:65[#1534] <> extend:65[R0] + 0
00060c5e: CF := pad:65[#1534] <> pad:65[R0] - 0x10000000000000000
00060c62: ZF := #1534 = 0
00060c66: NF := 63:63[#1534]
00060c6d: R1 := mem[R1 + 0x68, el]:u64
00060c73: #1535 := R1 + 0
00060c99: goto %00060c93

00060c93:
00060c95: when ZF <> 1 goto %00060c78
00060c96: goto %00060c88

00060c88:
00060c89: VF := 0
00060c8c: CF := 0
00060c8f: ZF := 1
00060c92: NF := 0
00060c98: goto %00060c94

00060c78:
00060c79: VF := extend:65[#1535] <> extend:65[R1] + 0
00060c7e: CF := pad:65[#1535] <> pad:65[R1] - 0x10000000000000000
00060c82: ZF := #1535 = 0
00060c86: NF := 63:63[#1535]
00060c97: goto %00060c94

00060c94:
00060c9f: when ZF <> 1 goto %00060c9d
0006cd50: goto %00060cd2

00060c9d:
00060ca6: R2 := R1 + 0x96
00060cad: R4 := mem[R0, el]:u64
00060cb2: R5 := mem[R0 + 8, el]:u64
00060cba: mem := mem with [R2, el]:u64 <- R4
00060cc0: mem := mem with [R2 + 8, el]:u64 <- R5
00060cc7: R2 := mem[R0 + 0xD, el]:u64
00060ccf: mem := mem with [R1 + 0xA3, el]:u64 <- R2
00060cd4: goto %00060cd2

00060cd2:
00060cd8: R30 := 0x3748
00060cda: call @free with return %00060cdc

00060cdc:
00060ce0: R0 := R20 + 0x4D8
00060ce7: R0 := mem[R0 + 0x68, el]:u64
00060cee: R0 := pad:64[mem[R0 + 0x12C, el]:u32]
00060cf4: #1536 := 31:0[R0] + 0
00060cf9: VF := extend:33[#1536] <> extend:33[31:0[R0]] + 0
00060cfe: CF := pad:33[#1536] <> pad:33[31:0[R0]] - 0x100000000
00060d02: ZF := #1536 = 0
00060d06: NF := 31:31[#1536]
00060d0c: #1537 := 31:0[R21] + 0
00060d32: goto %00060d2c

00060d2c:
00060d2e: when ZF goto %00060d11
00060d2f: goto %00060d21

00060d21:
00060d22: VF := 0
00060d25: CF := 0
00060d28: ZF := 0
00060d2b: NF := 0
00060d31: goto %00060d2d

00060d11:
00060d12: VF := extend:33[#1537] <> extend:33[31:0[R21]] + 0
00060d17: CF := pad:33[#1537] <> pad:33[31:0[R21]] - 0x100000000
00060d1b: ZF := #1537 = 0
00060d1f: NF := 31:31[#1537]
00060d30: goto %00060d2d

00060d2d:
00060d38: when ZF goto %00060d36
0006cd51: goto %000624e7

000624e7:
000624ef: R2 := mem[R31 + 0x68, el]:u64
000624f6: R1 := mem[R31 + 0x80, el]:u64
000624fd: R0 := mem[R31 + 0x90, el]:u64
00062502: R30 := 0x3770
00062504: call @ntlm2_hash_password with return %00062506

00062506:
0006250c: mem := mem with [R31 + 0x100, el]:u64 <- R0
00062512: R1 := R20 + 0x4D8
00062518: #1559 := R0 + 0
0006251d: VF := extend:65[#1559] <> extend:65[R0] + 0
00062522: CF := pad:65[#1559] <> pad:65[R0] - 0x10000000000000000
00062526: ZF := #1559 = 0
0006252a: NF := 63:63[#1559]
00062531: R1 := mem[R1 + 0x68, el]:u64
00062537: #1560 := R1 + 0
0006255d: goto %00062557

00062557:
00062559: when ZF <> 1 goto %0006253c
0006255a: goto %0006254c

0006254c:
0006254d: VF := 0
00062550: CF := 0
00062553: ZF := 1
00062556: NF := 0
0006255c: goto %00062558

0006253c:
0006253d: VF := extend:65[#1560] <> extend:65[R1] + 0
00062542: CF := pad:65[#1560] <> pad:65[R1] - 0x10000000000000000
00062546: ZF := #1560 = 0
0006254a: NF := 63:63[#1560]
0006255b: goto %00062558

00062558:
00062563: when ZF <> 1 goto %00062561
0006cd52: goto %00062587

00062561:
0006256a: R1 := R1 + 0xFA
00062571: R2 := mem[R0, el]:u64
00062576: R3 := mem[R0 + 8, el]:u64
0006257e: mem := mem with [R1, el]:u64 <- R2
00062584: mem := mem with [R1 + 8, el]:u64 <- R3
00062589: goto %00062587

00062587:
0006258d: R30 := 0x378C
0006258f: call @free with return %00060d36

00060d36:
00060d40: R21 := mem[R31 + 0x68, el]:u64
00060d46: R0 := R21
00060d4b: R30 := 0x3798
00060d4d: call @strlen with return %00060d4f

00060d4f:
00060d52: R1 := 0
00060d58: R2 := R0
00060d5e: R0 := R21
00060d63: R30 := 0x37A8
00060d65: call @memset with return %00060d67

00060d67:
00060d6a: goto %00060d68

00063f71:
00063f76: R0 := mem[R31 + 0xB0, el]:u64
00063f7d: R0 := pad:64[mem[R0]]
00063f83: when 31:0[R0] <> 0 goto %000637bb
0006cd53: goto %00063804

000637bb:
000637c0: R0 := mem[R31 + 0xB0, el]:u64
000637c5: R1 := 8
000637ca: R30 := 0x4128
000637cc: call @scanmem with return %000637ce

000637ce:
000637d4: mem := mem with [R31 + 0x100, el]:u64 <- R0
000637da: when R0 = 0 goto %000637d8
0006cd54: goto %000637e8

000637d8:
000637e0: R2 := 0x15000
000637e6: R2 := R2 + 0x40
0006cd55: goto %0006327f

000637e8:
000637ec: R1 := R20 + 0x4D8
000637f3: R1 := mem[R1 + 0x68, el]:u64
000637f9: when R1 = 0 goto %000637f7
0006cd56: goto %000638d7

000638d7:
000638db: R1 := R1 + 0xFA
000638e2: R2 := mem[R0, el]:u64
000638e7: R3 := mem[R0 + 8, el]:u64
000638ef: mem := mem with [R1, el]:u64 <- R2
000638f5: mem := mem with [R1 + 8, el]:u64 <- R3
0006cd57: goto %000637f7

000637f7:
000637ff: R30 := 0x414C
00063801: call @free with return %00063803

00063803:
00063806: goto %00063804

00063804:
0006380c: R0 := mem[R31 + 0xB8, el]:u64
00063813: R0 := pad:64[mem[R0]]
0006381a: when 31:0[R0] <> 0 goto %00063818
0006cd58: goto %0006385b

00063818:
00063822: R0 := mem[R31 + 0xB8, el]:u64
00063827: R1 := 8
0006382c: R30 := 0x42F0
0006382e: call @scanmem with return %00063830

00063830:
00063836: mem := mem with [R31 + 0x100, el]:u64 <- R0
0006383b: when R0 = 0 goto %00063273
0006cd59: goto %0006383f

00063273:
00063276: R2 := 0x15000
0006327c: R2 := R2 + 0x68
00063281: goto %0006327f

0006383f:
00063843: R1 := R20 + 0x4D8
0006384a: R1 := mem[R1 + 0x68, el]:u64
00063850: when R1 = 0 goto %0006384e
0006cd5a: goto %00063874

00063874:
00063879: R2 := mem[R0, el]:u64
0006387e: R3 := mem[R0 + 8, el]:u64
00063884: #1581 := R1 + 0xC8
0006388a: mem := mem with [#1581, el]:u64 <- R2
00063890: mem := mem with [#1581 + 8, el]:u64 <- R3
0006cd5b: goto %0006384e

0006384e:
00063856: R30 := 0x4310
00063858: call @free with return %0006385a

0006385a:
0006385d: goto %0006385b

0006385b:
00063863: R0 := mem[R31 + 0xC0, el]:u64
0006386a: R0 := pad:64[mem[R0]]
00063870: when 31:0[R0] <> 0 goto %00063745
0006cd5c: goto %00060d68

00063745:
0006374a: R0 := mem[R31 + 0xC0, el]:u64
0006374f: R1 := 8
00063754: R30 := 0x3B94
00063756: call @scanmem with return %00063758

00063758:
0006375e: mem := mem with [R31 + 0x100, el]:u64 <- R0
00063763: when R0 = 0 goto %0006329f
0006cd5d: goto %00063767

0006329f:
000632a2: R2 := 0x15000
000632a8: R2 := R2 + 0x90
000632ac: goto %0006327f

0006327f:
00063285: R1 := 1
0006328a: R0 := 3
0006328f: R30 := 0x4668
00063291: call @__syslog_chk with return %00063293

00063293:
00063296: R0 := 1
0006329b: R30 := 0x4670
0006329d: call @exit with return %0006329f

00063767:
0006376b: R1 := R20 + 0x4D8
00063772: R1 := mem[R1 + 0x68, el]:u64
00063778: when R1 = 0 goto %00063776
0006cd5e: goto %00063786

00063786:
0006378a: R1 := R1 + 0x96
00063791: R2 := mem[R0, el]:u64
00063796: R3 := mem[R0 + 8, el]:u64
0006379e: mem := mem with [R1, el]:u64 <- R2
000637a4: mem := mem with [R1 + 8, el]:u64 <- R3
0006cd5f: goto %00063776

00063776:
0006377e: R30 := 0x3BB8
00063780: call @free with return %00063782

00063782:
00063784: goto %00060d68

00060d68:
00060d6f: R0 := R20 + 0x4D8
00060d76: R1 := mem[R31 + 0x90, el]:u64
00060d7d: R0 := mem[R0 + 0x68, el]:u64
00060d83: #1538 := R1 + 0
00060d88: VF := extend:65[#1538] <> extend:65[R1] + 0
00060d8d: CF := pad:65[#1538] <> pad:65[R1] - 0x10000000000000000
00060d91: ZF := #1538 = 0
00060d95: NF := 63:63[#1538]
00060d9b: #1539 := R0 + 0
00060dc1: goto %00060dbb

00060dbb:
00060dbd: when ZF <> 1 goto %00060da0
00060dbe: goto %00060db0

00060db0:
00060db1: VF := 0
00060db4: CF := 0
00060db7: ZF := 1
00060dba: NF := 0
00060dc0: goto %00060dbc

00060da0:
00060da1: VF := extend:65[#1539] <> extend:65[R0] + 0
00060da6: CF := pad:65[#1539] <> pad:65[R0] - 0x10000000000000000
00060daa: ZF := #1539 = 0
00060dae: NF := 63:63[#1539]
00060dbf: goto %00060dbc

00060dbc:
00060dc7: when ZF goto %00060dc5
0006cd60: goto %00063efd

00063efd:
00063f00: R2 := 0x32
00063f05: R30 := 0x32F4
00063f07: call @strlcpy with return %00060dc5

00060dc5:
00060dce: R0 := R20 + 0x4D8
00060dd5: R1 := mem[R31 + 0x80, el]:u64
00060ddc: R0 := mem[R0 + 0x68, el]:u64
00060de2: #1540 := R0 + 0
00060de7: VF := extend:65[#1540] <> extend:65[R0] + 0
00060dec: CF := pad:65[#1540] <> pad:65[R0] - 0x10000000000000000
00060df0: ZF := #1540 = 0
00060df4: NF := 63:63[#1540]
00060dfa: #1541 := R1 + 0
00060e20: goto %00060e1a

00060e1a:
00060e1c: when ZF <> 1 goto %00060dff
00060e1d: goto %00060e0f

00060e0f:
00060e10: VF := 0
00060e13: CF := 0
00060e16: ZF := 1
00060e19: NF := 0
00060e1f: goto %00060e1b

00060dff:
00060e00: VF := extend:65[#1541] <> extend:65[R1] + 0
00060e05: CF := pad:65[#1541] <> pad:65[R1] - 0x10000000000000000
00060e09: ZF := #1541 = 0
00060e0d: NF := 63:63[#1541]
00060e1e: goto %00060e1b

00060e1b:
00060e26: when ZF goto %00060e24
0006cd61: goto %00063eeb

00063eeb:
00063eef: R0 := R0 + 0x32
00063ef4: R2 := 0x32
00063ef9: R30 := 0x3318
00063efb: call @strlcpy with return %00060e24

00060e24:
00060e2d: R0 := R20 + 0x4D8
00060e34: R0 := mem[R0 + 0x68, el]:u64
00060e3a: when R0 = 0 goto %00060e38
0006cd62: goto %00063ed2

00063ed2:
00063ed7: R1 := mem[R31 + 0x78, el]:u64
00063edd: R0 := R0 + 0x64
00063ee2: R2 := 0x32
00063ee7: R30 := 0x3334
00063ee9: call @strlcpy with return %00060e38

00060e38:
00060e42: R0 := mem[R31 + 0x90, el]:u64
00060e47: R30 := 0x333C
00060e49: call @free with return %00060e4b

00060e4b:
00060e50: R0 := mem[R31 + 0x80, el]:u64
00060e55: R30 := 0x3344
00060e57: call @free with return %00060e59

00060e59:
00060e5e: R0 := mem[R31 + 0x78, el]:u64
00060e63: R30 := 0x334C
00060e65: call @free with return %00060e67

00060e67:
00060e6c: R0 := mem[R31 + 0x68, el]:u64
00060e71: R30 := 0x3354
00060e73: call @free with return %00060e75

00060e75:
00060e7a: R0 := mem[R31 + 0xB0, el]:u64
00060e7f: R30 := 0x335C
00060e81: call @free with return %00060e83

00060e83:
00060e88: R0 := mem[R31 + 0xB8, el]:u64
00060e8d: R30 := 0x3364
00060e8f: call @free with return %00060e91

00060e91:
00060e96: R0 := mem[R31 + 0xC0, el]:u64
00060e9b: R30 := 0x336C
00060e9d: call @free with return %00060e9f

00060e9f:
00060ea4: R0 := mem[R31 + 0x88, el]:u64
00060ea9: R30 := 0x3374
00060eab: call @free with return %00060ead

00060ead:
00060eb2: R0 := mem[R31 + 0x70, el]:u64
00060eb8: when R0 <> 0 goto %00060837
0006cd63: goto %00060ebc

00060837:
0006083a: R23 := 0
0006083f: R30 := 0x3A18
00060841: call @magic_auth_detect with return %00060843

00060ebc:
00060ec1: R0 := pad:64[mem[R31 + 0xC8, el]:u32]
00060ec8: when 31:0[R0] <> 0 goto %00060ec6
0006cd64: goto %00063eb6

00060ec6:
00060ecf: R19 := R20 + 0x4D8
00060ed4: R2 := 8
00060ed9: R1 := 0x10
00060ede: R23 := 0
00060ee5: R0 := mem[R19 + 0x68, el]:u64
00060eeb: R0 := R0 + 0x96
00060ef0: R30 := 0x445C
00060ef2: call @printmem with return %00060ef4

00060ef4:
00060ef7: R1 := 0x13000
00060efd: R2 := R0
00060f03: R1 := R1 + 0x2D0
00060f08: R0 := 1
00060f10: mem := mem with [R31 + 0x100, el]:u64 <- R2
00060f15: R30 := 0x4474
00060f17: call @__printf_chk with return %00060f19

00060f19:
00060f1e: R0 := mem[R31 + 0x100, el]:u64
00060f23: R30 := 0x447C
00060f25: call @free with return %00060f27

00060f27:
00060f2c: R0 := mem[R19 + 0x68, el]:u64
00060f31: R2 := 8
00060f36: R1 := 0x10
00060f3c: R0 := R0 + 0xC8
00060f41: R30 := 0x4490
00060f43: call @printmem with return %00060f45

00060f45:
00060f48: R1 := 0x13000
00060f4e: R2 := R0
00060f54: R1 := R1 + 0x2B8
00060f59: R0 := 1
00060f61: mem := mem with [R31 + 0x100, el]:u64 <- R2
00060f66: R30 := 0x44A8
00060f68: call @__printf_chk with return %00060f6a

00060f6a:
00060f6f: R0 := mem[R31 + 0x100, el]:u64
00060f74: R30 := 0x44B0
00060f76: call @free with return %00060f78

00060f78:
00060f7d: R0 := mem[R19 + 0x68, el]:u64
00060f82: R2 := 8
00060f87: R1 := 0x10
00060f8d: R0 := R0 + 0xFA
00060f92: R30 := 0x44C4
00060f94: call @printmem with return %00060f96

00060f96:
00060f9b: R3 := mem[R19 + 0x68, el]:u64
00060fa1: R2 := R0
00060fa6: R1 := 0x15000
00060fab: R0 := 1
00060fb1: R1 := R1 + 0xB8
00060fb7: R4 := R3 + 0x32
00060fbf: mem := mem with [R31 + 0x100, el]:u64 <- R2
00060fc4: R30 := 0x44E4
00060fc6: call @__printf_chk with return %00060fc8

00060fc8:
00060fcd: R0 := mem[R31 + 0x100, el]:u64
00060fd2: R30 := 0x44EC
00060fd4: call @free with return %00060fd6

00060fd6:
00060fd8: goto %00060843

00063eb6:
00063eb9: when 31:0[R19] = 0 goto %00063709
0006cd65: goto %00063ebd

00063709:
0006370c: R2 := 0x18
00063711: R1 := 0x23
00063716: R0 := 0x14000
0006371c: R0 := R0 + 0x88
00063721: R30 := 0x3B70
00063723: call @openlog with return %00063725

00063725:
00063728: R1 := 1
0006372d: R2 := 0x15000
00063732: R0 := 6
00063738: R2 := R2 + 0x328
0006373d: R30 := 0x3B84
0006373f: call @__syslog_chk with return %00063741

00063741:
00063743: goto %0006106d

00063ebd:
00063ec1: R0 := R20 + 0x4D8
00063ec8: R0 := pad:64[mem[R0 + 4, el]:u32]
00063ece: when 31:0[R0] <> 0 goto %00063a06
0006cd66: goto %00063a1e

00063a06:
00063a09: R1 := 0x15000
00063a0e: R0 := 1
00063a14: R1 := R1 + 0xF8
00063a19: R30 := 0x4560
00063a1b: call @__printf_chk with return %00063a1d

00063a1d:
00063a20: goto %00063a1e

00063a1e:
00063a24: R30 := 0x3398
00063a27: call @fork with return %00063a29

00063a29:
00063a2f: mem := mem with [R31 + 0xF8, el]:u32 <- 31:0[R0]
00063a35: #1582 := 31:0[R0] + 1
00063a3a: VF := extend:33[#1582] <> extend:33[31:0[R0]] + 1
00063a3f: CF := pad:33[#1582] <> pad:33[31:0[R0]] + 1
00063a43: ZF := #1582 = 0
00063a47: NF := 31:31[#1582]
00063a4d: when ZF goto %00063a4b
0006cd67: goto %00063ac0

00063a4b:
00063a53: R0 := 0x15000
00063a59: R0 := R0 + 0x120
00063a5e: R30 := 0x4648
00063a61: call @perror with return %00063a63

00063a63:
00063a66: R0 := 1
00063a6b: R30 := 0x4650
00063a6d: call @myexit with return %00063a6f

00063a6f:
00063a72: goto %00063a70

00063ac0:
00063ac5: when 31:0[R0] <> 0 goto %00063ac3
0006cd68: goto %00063a70

00063ac3:
00063acb: R0 := 0
00063ad0: R30 := 0x45E4
00063ad2: call @myexit with return %00063ad4

00063ad4:
00063ad6: goto %00063a70

00063a70:
00063a76: R30 := 0x33AC
00063a79: call @setsid with return %00063a7b

00063a7b:
00063a7e: R0 := 0
00063a83: R30 := 0x33B4
00063a85: call @umask with return %00063a87

00063a87:
00063a8a: R0 := 0x12000
00063a90: R0 := R0 + 0x508
00063a95: R30 := 0x33C0
00063a98: call @chdir with return %00063a9a

00063a9a:
00063a9d: R0 := 0x15000
00063aa2: R1 := 2
00063aa8: R0 := R0 + 0x140
00063aad: R30 := 0x33D0
00063aaf: call @open with return %00063ab1

00063ab1:
00063ab7: mem := mem with [R31 + 0xF8, el]:u32 <- 31:0[R0]
00063abc: when ~31:31[R0] goto %00060fda
0006cd69: goto %00061030

00060fda:
00060fdd: R1 := 0
00060fe2: R30 := 0x44F8
00060fe5: call @dup2 with return %00060fe7

00060fe7:
00060fec: R0 := pad:64[mem[R31 + 0xF8, el]:u32]
00060ff1: R1 := 1
00060ff6: R30 := 0x4504
00060ff8: call @dup2 with return %00060ffa

00060ffa:
00060fff: R0 := pad:64[mem[R31 + 0xF8, el]:u32]
00061004: R1 := 2
00061009: R30 := 0x4510
0006100b: call @dup2 with return %0006100d

0006100d:
00061012: R0 := pad:64[mem[R31 + 0xF8, el]:u32]
00061018: #1542 := 31:0[R0] - 2
0006101d: VF := extend:33[#1542] <> extend:33[31:0[R0]] - 2
00061022: CF := pad:33[#1542] <> pad:33[31:0[R0]] + 0xFFFFFFFE
00061026: ZF := #1542 = 0
0006102a: NF := 31:31[#1542]
00061032: when ~(NF = VF & ~ZF) goto %00061030
0006cd6a: goto %00063eab

00063eab:
00063eae: R30 := 0x4520
00063eb0: call @close with return %00063eb2

00063eb2:
00063eb4: goto %00061030

00061030:
00061038: R2 := 0x18
0006103d: R1 := 3
00061042: R0 := 0x14000
00061048: R0 := R0 + 0x88
0006104d: R30 := 0x33EC
0006104f: call @openlog with return %00061051

00061051:
00061054: R2 := 0x15000
00061059: R1 := 1
0006105f: R2 := R2 + 0x350
00061064: R0 := 6
00061069: R30 := 0x3400
0006106b: call @__syslog_chk with return %0006106d

0006106d:
00061072: R0 := mem[R31 + 0xA8, el]:u64
00061079: R0 := pad:64[mem[R0]]
00061080: when 31:0[R0] <> 0 goto %0006107e
0006cd6b: goto %0006119a

0006107e:
00061086: R30 := 0x4318
00061089: call @getuid with return %0006108b

0006108b:
00061090: when 31:0[R0] <> 0 goto %0006108e
0006cd6c: goto %0006109d

0006108e:
00061096: R30 := 0x45EC
00061099: call @geteuid with return %0006109b

0006109b:
0006109f: when 31:0[R0] = 0 goto %0006109d
0006cd6d: goto %00063e6a

00063e6a:
00063e6d: R30 := 0x45F4
00063e6f: call @getuid with return %00063e71

00063e71:
00063e75: R19 := pad:64[31:0[R0]]
00063e7a: R30 := 0x45FC
00063e7d: call @getgid with return %00063e7f

00063e7f:
00063e83: R4 := pad:64[31:0[R0]]
00063e89: R3 := pad:64[31:0[R19]]
00063e8e: R2 := 0x15000
00063e93: R1 := 1
00063e99: R2 := R2 + 0x150
00063e9e: R0 := 4
00063ea3: R30 := 0x4618
00063ea5: call @__syslog_chk with return %00063ea7

00063ea7:
00063ea9: goto %0006119a

0006109d:
000610a5: R30 := 0x4320
000610a7: call @__ctype_b_loc with return %000610a9

000610a9:
000610ae: R3 := mem[R31 + 0xA8, el]:u64
000610b5: R0 := mem[R0, el]:u64
000610bc: R1 := pad:64[mem[R3]]
000610c4: R0 := pad:64[mem[R0 + (62:0[R1].0), el]:u16]
000610ca: when ~11:11[R0] goto %000610c8
0006cd6e: goto %00063e26

000610c8:
000610d2: R0 := mem[R31 + 0xA8, el]:u64
000610d7: R30 := 0x4588
000610da: call @getpwnam with return %000610dc

000610dc:
000610e0: R19 := R0
000610e6: when R0 = 0 goto %000610e4
0006cd6f: goto %00063e17

00063e17:
00063e1c: R21 := pad:64[mem[R0 + 0x10, el]:u32]
00063e22: when 31:0[R21] <> 0 goto %0006111f
0006cd70: goto %000610e4

000610e4:
000610ee: R3 := mem[R31 + 0xA8, el]:u64
000610f3: R2 := 0x15000
000610f9: R2 := R2 + 0x1A8
000610fe: R1 := 1
00061103: R0 := 3
00061108: R30 := 0x45B0
0006110a: call @__syslog_chk with return %0006110c

0006110c:
0006110f: R0 := 1
00061114: R30 := 0x45B8
00061116: call @myexit with return %00061118

00061118:
0006111d: R21 := pad:64[mem[R19 + 0x10, el]:u32]
0006cd71: goto %0006111f

0006111f:
00061124: R19 := pad:64[mem[R19 + 0x14, el]:u32]
00061129: goto %00061127

00063e26:
00063e2a: R0 := R3
00063e2f: R2 := 0xA
00063e34: R1 := 0
00063e39: R30 := 0x4344
00063e3b: call @strtol with return %00063e3d

00063e3d:
00063e41: R19 := R0
00063e47: #1590 := 31:0[R0] + 0
00063e4c: VF := extend:33[#1590] <> extend:33[31:0[R0]] + 0
00063e51: CF := pad:33[#1590] <> pad:33[31:0[R0]] - 0x100000000
00063e55: ZF := #1590 = 0
00063e59: NF := 31:31[#1590]
00063e5f: R21 := pad:64[31:0[R0]]
00063e66: when ~(NF = VF & ~ZF) goto %000632ae
0006cd72: goto %00061127

000632ae:
000632b1: R2 := 0x15000
000632b7: R2 := R2 + 0x180
000632bc: R1 := 1
000632c1: R0 := 3
000632c6: R30 := 0x46D0
000632c8: call @__syslog_chk with return %000632ca

000632ca:
000632cd: R0 := 1
000632d2: R30 := 0x46D8
000632d4: call @myexit with return %000632d6

000632d6:
000632d8: goto %00061127

00061127:
0006112e: R0 := pad:64[31:0[R19]]
00061133: R30 := 0x435C
00061136: call @setgid with return %00061138

00061138:
0006113c: R0 := pad:64[31:0[R21]]
00061141: R30 := 0x4364
00061144: call @setuid with return %00061146

00061146:
0006114c: mem := mem with [R31 + 0xF8, el]:u32 <- 31:0[R0]
00061151: R30 := 0x436C
00061153: call @__errno_location with return %00061155

00061155:
0006115a: R0 := pad:64[mem[R0, el]:u32]
0006115f: R30 := 0x4374
00061161: call @strerror with return %00061163

00061163:
00061167: R5 := R0
0006116d: R4 := pad:64[31:0[R19]]
00061172: R0 := 6
00061178: R3 := pad:64[31:0[R21]]
0006117d: R2 := 0x15000
00061182: R1 := 1
00061188: R2 := R2 + 0x1C8
0006118d: R30 := 0x4394
0006118f: call @__syslog_chk with return %00061191

00061191:
00061196: R0 := pad:64[mem[R31 + 0xF8, el]:u32]
0006119c: when 31:0[R0] = 0 goto %0006119a
0006cd73: goto %00063deb

00063deb:
00063dee: R2 := 0x15000
00063df4: R2 := R2 + 0x1E8
00063df9: R1 := 1
00063dfe: R0 := 3
00063e03: R30 := 0x43B0
00063e05: call @__syslog_chk with return %00063e07

00063e07:
00063e0a: R0 := 1
00063e0f: R30 := 0x43B8
00063e11: call @myexit with return %00063e13

00063e13:
00063e15: goto %0006119a

0006119a:
000611a4: R0 := mem[R31 + 0x98, el]:u64
000611ab: R0 := pad:64[mem[R0]]
000611b2: when 31:0[R0] <> 0 goto %000611b0
0006cd74: goto %000612ac

000611b0:
000611b8: R0 := 0
000611bd: R30 := 0x4268
000611c0: call @umask with return %000611c2

000611c2:
000611c7: R0 := mem[R31 + 0x98, el]:u64
000611cc: R2 := 0x1A4
000611d1: R1 := 0x241
000611d6: R30 := 0x4278
000611d9: call @open with return %000611db

000611db:
000611df: R21 := pad:64[31:0[R0]]
000611e5: when 31:31[R0] goto %000611e3
0006cd75: goto %00061211

000611e3:
000611eb: R2 := 0x15000
000611f1: R2 := R2 + 0x1F8
000611f6: R1 := 1
000611fb: R0 := 3
00061200: R30 := 0x4630
00061202: call @__syslog_chk with return %00061204

00061204:
00061207: R0 := 1
0006120c: R30 := 0x4638
0006120e: call @myexit with return %00061210

00061210:
00061213: goto %00061211

00061211:
00061217: R0 := 0x32
0006121c: R30 := 0x4288
0006121e: call @new with return %00061220

00061220:
00061224: R19 := R0
0006122c: mem := mem with [R31 + 0x100, el]:u64 <- R0
00061231: R30 := 0x4294
00061234: call @getpid with return %00061236

00061236:
0006123a: R5 := pad:64[31:0[R0]]
0006123f: R3 := 0xFFFFFFFFFFFFFFFF
00061244: R2 := 1
00061249: R1 := 0x32
0006124f: R0 := R19
00061254: R4 := 0x15000
0006125a: R4 := R4 + 0x2D0
0006125f: R30 := 0x42B4
00061261: call @__snprintf_chk with return %00061263

00061263:
00061268: R19 := mem[R31 + 0x100, el]:u64
0006126e: R0 := R19
00061273: R30 := 0x42C0
00061275: call @strlen with return %00061277

00061277:
0006127b: R1 := R19
00061281: R2 := R0
00061287: R0 := pad:64[31:0[R21]]
0006128c: R30 := 0x42D0
0006128e: call @write with return %00061290

00061290:
00061295: R0 := mem[R31 + 0x100, el]:u64
0006129a: R30 := 0x42D8
0006129c: call @free with return %0006129e

0006129e:
000612a2: R0 := pad:64[31:0[R21]]
000612a7: R30 := 0x42E0
000612a9: call @close with return %000612ab

000612ab:
000612ae: goto %000612ac

000612ac:
000612b2: R1 := 1
000612b7: R0 := 0xD
000612bc: R19 := 0x10000
000612c1: R30 := 0x3428
000612c4: call @signal with return %000612c6

000612c6:
000612ca: R19 := R19 + 0x498
000612cf: R0 := 2
000612d5: R1 := R19
000612da: R30 := 0x3438
000612dc: call @signal with return %000612de

000612de:
000612e2: R1 := R19
000612e7: R0 := 0xF
000612ec: R30 := 0x3444
000612ee: call @signal with return %000612f0

000612f0:
000612f4: R27 := R31 + 0xFC
000612fa: R1 := R19
00061300: R26 := R31 + 0x140
00061306: R19 := R31 + 0x210
0006130b: R23 := 0
00061310: R22 := 0
00061315: R0 := 1
0006131a: R30 := 0x3464
0006131c: call @signal with return %0006131e

0006131e:
00061321: R0 := 0
00061326: R30 := 0x346C
00061328: call @time with return %0006132a

0006132a:
0006132d: R30 := 0x3470
00061330: call @srandom with return %00061332

00061332:
00061337: R0 := pad:64[mem[R20 + 0x4D8, el]:u32]
0006133d: when 31:0[R0] = 0 goto %0006133b
0006cd76: goto %00063d96

00063d96:
00063d9a: #1587 := 31:0[R0] - 1
00063d9f: VF := extend:33[#1587] <> extend:33[31:0[R0]] - 1
00063da4: CF := pad:33[#1587] <> pad:33[31:0[R0]] + 0xFFFFFFFF
00063da8: ZF := #1587 = 0
00063dac: NF := 31:31[#1587]
00063db2: #1588 := ~31:0[R23]
00063db7: #1589 := 31:0[R22] + ~31:0[R23] + 1
00063de1: goto %00063ddb

00063ddb:
00063ddd: when ~(NF = VF & ~ZF) goto %00063dbf
00063dde: goto %00063dd0

00063dd0:
00063dd1: VF := 0
00063dd4: CF := 0
00063dd7: ZF := 1
00063dda: NF := 0
00063de0: goto %00063ddc

00063dbf:
00063dc0: VF := extend:33[#1589] <> extend:33[31:0[R22]] + extend:33[#1588] +
          1
00063dc6: CF := pad:33[#1589] <> pad:33[31:0[R22]] + pad:33[#1588] + 1
00063dca: ZF := #1589 = 0
00063dce: NF := 31:31[#1589]
00063ddf: goto %00063ddc

00063ddc:
00063de7: when ZF goto %00060843
0006cd77: goto %0006133b

00060843:
00060848: R0 := mem[R31 + 0x98, el]:u64
0006084f: R0 := pad:64[mem[R0]]
00060856: when 31:0[R0] <> 0 goto %00060854
0006cd78: goto %00060869

00060854:
0006085e: R0 := mem[R31 + 0x98, el]:u64
00060863: R30 := 0x3AF8
00060866: call @unlink with return %00060868

00060868:
0006086b: goto %00060869

00060869:
00060871: R3 := pad:64[31:0[R22] + ~31:0[R23] + 1]
00060876: R2 := 0x15000
0006087c: R2 := R2 + 0x300
00060881: R1 := 1
00060887: R20 := R20 + 0x4D8
0006088c: R0 := 6
00060892: R19 := R20 + 0x90
00060897: R30 := 0x3A44
00060899: call @__syslog_chk with return %0006089b

0006089b:
0006089f: R0 := R19
000608a4: R30 := 0x3A4C
000608a6: call @pthread_mutex_lock with return %000608a8

000608a8:
000608ad: R0 := mem[R20 + 0xC0, el]:u64
000608b2: R30 := 0x3A54
000608b4: call @plist_free with return %000608b6

000608b6:
000608ba: R0 := R19
000608bf: R30 := 0x3A5C
000608c1: call @pthread_mutex_unlock with return %000608c3

000608c3:
000608c8: R0 := mem[R20 + 0x88, el]:u64
000608cd: R30 := 0x3A64
000608cf: call @hlist_free with return %000608d1

000608d1:
000608d6: R0 := mem[R20 + 0x80, el]:u64
000608db: R30 := 0x3A6C
000608dd: call @plist_free with return %000608df

000608df:
000608e4: R0 := mem[R20 + 0x18, el]:u64
000608e9: R30 := 0x3A74
000608eb: call @plist_free with return %000608ed

000608ed:
000608f2: R0 := mem[R31 + 0x110, el]:u64
000608f7: R30 := 0x3A7C
000608f9: call @plist_free with return %000608fb

000608fb:
00060900: R0 := mem[R31 + 0x118, el]:u64
00060905: R30 := 0x3A84
00060907: call @plist_free with return %00060909

00060909:
0006090e: R0 := mem[R31 + 0x120, el]:u64
00060913: R30 := 0x3A8C
00060915: call @plist_free with return %00060917

00060917:
0006091c: R0 := mem[R31 + 0x128, el]:u64
00060921: R30 := 0x3A94
00060923: call @plist_free with return %00060925

00060925:
0006092a: R0 := mem[R31 + 0xA8, el]:u64
0006092f: R30 := 0x3A9C
00060931: call @free with return %00060933

00060933:
00060938: R0 := mem[R31 + 0x98, el]:u64
0006093d: R30 := 0x3AA4
0006093f: call @free with return %00060941

00060941:
00060946: R0 := mem[R31 + 0x70, el]:u64
0006094b: R30 := 0x3AAC
0006094d: call @free with return %0006094f

0006094f:
00060954: R0 := mem[R20 + 0x68, el]:u64
00060959: R30 := 0x3AB4
0006095b: call @free with return %0006095d

0006095d:
00060962: R0 := mem[R20 + 8, el]:u64
00060967: R30 := 0x3ABC
00060969: call @plist_free with return %0006096b

0006096b:
0006096e: R0 := 0
00060973: R30 := 0x3AC4
00060975: call @exit with return %00060977

00060977:
0006097b: R23 := R0
00060984: R3 := pad:64[7:0[R0].15:8[R0].23:16[R0].31:24[R0]]
00060989: R2 := 0x15000
0006098e: R0 := 6
00060994: R2 := R2 + 0x10
00060999: R1 := 1
0006099e: R30 := 0x3AE0
000609a0: call @__syslog_chk with return %000609a2

000609a2:
000609a6: R0 := R20 + 0x4D8
000609ad: R0 := mem[R0 + 0x68, el]:u64
000609b5: mem := mem with [R0 + 0x138, el]:u32 <- 31:0[R23]
000609ba: goto %000609b8

0006133b:
00061343: V0 := 0
00061348: R21 := 1
0006134f: R24 := mem[R31 + 0x118, el]:u64
00061355: #1543 := R31 + 0x210
0006135b: mem := mem with [#1543, el]:u128 <- V0
00061361: mem := mem with [#1543 + 0x10, el]:u128 <- V0
00061367: #1544 := R31 + 0x230
0006136d: mem := mem with [#1544, el]:u128 <- V0
00061373: mem := mem with [#1544 + 0x10, el]:u128 <- V0
00061379: #1545 := R31 + 0x250
0006137f: mem := mem with [#1545, el]:u128 <- V0
00061385: mem := mem with [#1545 + 0x10, el]:u128 <- V0
0006138b: #1546 := R31 + 0x270
00061391: mem := mem with [#1546, el]:u128 <- V0
00061397: mem := mem with [#1546 + 0x10, el]:u128 <- V0
0006139d: when R24 = 0 goto %0006139b
0006cd79: goto %00063d51

00063d51:
0006cd7a: goto %00063d53

00063d53:
00063d58: R0 := mem[R24, el]:u64
00063d5d: R30 := 0x34B0
00063d5f: call @__fdelt_chk with return %00063d61

00063d61:
00063d66: R1 := mem[R24, el]:u64
00063d6e: R2 := mem[R19 + (60:0[R0].0), el]:u64
00063d75: R24 := mem[R24 + 0x10, el]:u64
00063d7c: R1 := R21 << pad:7[5:0[R1]]
00063d83: R1 := R1 | R2
00063d8c: mem := mem with [R19 + (60:0[R0].0), el]:u64 <- R1
00063d92: when R24 <> 0 goto %00063d53
0006cd7b: goto %0006139b

0006139b:
000613a5: R24 := mem[R31 + 0x120, el]:u64
000613aa: R21 := 1
000613b0: when R24 = 0 goto %000613ae
0006cd7c: goto %00063d0e

00063d0e:
00063d13: R0 := mem[R24, el]:u64
00063d18: R30 := 0x34E0
00063d1a: call @__fdelt_chk with return %00063d1c

00063d1c:
00063d21: R1 := mem[R24, el]:u64
00063d29: R2 := mem[R19 + (60:0[R0].0), el]:u64
00063d30: R24 := mem[R24 + 0x10, el]:u64
00063d37: R1 := R21 << pad:7[5:0[R1]]
00063d3e: R1 := R1 | R2
00063d47: mem := mem with [R19 + (60:0[R0].0), el]:u64 <- R1
00063d4d: when R24 <> 0 goto %00063d0e
0006cd7d: goto %000613ae

000613ae:
000613b8: R24 := mem[R31 + 0x110, el]:u64
000613bd: R21 := 1
000613c3: when R24 = 0 goto %000613c1
0006cd7e: goto %00063ccb

00063ccb:
00063cd0: R0 := mem[R24, el]:u64
00063cd5: R30 := 0x3510
00063cd7: call @__fdelt_chk with return %00063cd9

00063cd9:
00063cde: R1 := mem[R24, el]:u64
00063ce6: R2 := mem[R19 + (60:0[R0].0), el]:u64
00063ced: R24 := mem[R24 + 0x10, el]:u64
00063cf4: R1 := R21 << pad:7[5:0[R1]]
00063cfb: R1 := R1 | R2
00063d04: mem := mem with [R19 + (60:0[R0].0), el]:u64 <- R1
00063d0a: when R24 <> 0 goto %00063ccb
0006cd7f: goto %000613c1

000613c1:
000613c9: R0 := 0x15000
000613cf: R4 := R31 + 0x130
000613d5: R1 := R19
000613da: R3 := 0
000613e1: V0 := mem[R0 + 0x3E0, el]:u128
000613e6: R2 := 0
000613eb: R0 := 0x400
000613f3: mem := mem with [R31 + 0x130, el]:u128 <- V0
000613f8: R30 := 0x3550
000613fa: call @select with return %000613fc

000613fc:
00061400: #1547 := 31:0[R0] + 0
00061405: VF := extend:33[#1547] <> extend:33[31:0[R0]] + 0
0006140a: CF := pad:33[#1547] <> pad:33[31:0[R0]] - 0x100000000
0006140e: ZF := #1547 = 0
00061412: NF := 31:31[#1547]
0006141a: when NF = VF & ~ZF goto %00061418
0006cd80: goto %00063cb6

00061418:
00061420: R25 := 0x15000
00061426: R0 := R25 + 0x260
0006142c: R21 := R31 + 0x1D0
00061431: R24 := 0
00061439: mem := mem with [R31 + 0x78, el]:u64 <- R0
0006143e: R0 := 0
00061445: mem := mem with [R31 + 0xF8, el]:u32 <- 0
0006144a: goto %00061448

00061448:
00061450: R0 :=

00061455: R30 := 0x3E88
00061457: call @__fdelt_chk with return %00061459

00061459:
0006145e: R1 := pad:64[mem[R31 + 0xF8, el]:u32]
00061463: R25 := 1
0006146b: R0 := mem[R19 + (60:0[R0].0), el]:u64
00061471: #1548 := ~31:0[R1]
00061475: #1549 := ~31:0[R1] + 1
0006147a: VF := extend:33[#1549] <> extend:33[#1548] + 1
0006147f: CF := pad:33[#1549] <> pad:33[#1548] + 1
00061483: ZF := #1549 = 0
00061487: NF := 31:31[#1549]
0006148b: R2 := pad:64[#1549]
00061491: R3 := pad:64[0.5:0[R1]]
00061497: R2 := pad:64[0.5:0[R2]]
000614a5: when NF goto %0006149d
000614a6: goto %000614a1

000614a1:
000614a2: R2 := pad:64[~31:0[R2] + 1]
000614a8: goto %000614a4

0006149d:
0006149e: R2 := pad:64[31:0[R3]]
000614a7: goto %000614a4

000614a4:
000614af: R2 := R25 << pad:7[5:0[R2]]
000614b6: #1550 := R2 & R0
000614b9: VF := 0
000614bc: CF := 0
000614c0: ZF := #1550 = 0
000614c4: NF := 63:63[#1550]
000614ca: when ZF goto %000614c8
0006cd81: goto %00061620

00061620:
00061623: R3 := 0x10
00061629: R0 := pad:64[31:0[R1]]
0006162f: R2 := R27
00061635: R1 := R26
0006163d: mem := mem with [R31 + 0xFC, el]:u32 <- 31:0[R3]
00061642: R30 := 0x3EC8
00061645: call @accept with return %00061647

00061647:
0006164b: R28 := pad:64[31:0[R0]]
00061651: when ~31:31[R0] goto %0006164f
0006cd82: goto %00063c73

00063c73:
00063c76: R30 := 0x3ED4
00063c78: call @__errno_location with return %00063c7a

00063c7a:
00063c7f: R0 := pad:64[mem[R0, el]:u32]
00063c84: R30 := 0x3EDC
00063c86: call @strerror with return %00063c88

00063c88:
00063c8c: R3 := R0
00063c92: R1 := pad:64[31:0[R25]]
00063c97: R2 := 0x15000
00063c9c: R0 := 3
00063ca2: R2 := R2 + 0x218
00063ca7: R30 := 0x3EF4
00063ca9: call @__syslog_chk with return %00063cab

00063cab:
00063cb0: R1 := pad:64[mem[R31 + 0xF8, el]:u32]
00063cb4: goto %000614c8

0006164f:
00061659: R1 := pad:64[mem[R31 + 0x144, el]:u32]
00061660: R0 := mem[R31 + 0x128, el]:u64
00061665: R30 := 0x3DE8
00061667: call @acl_check with return %00061669

00061669:
0006166e: when 31:0[R0] <> 0 goto %0006166c
0006cd83: goto %00063b1e

0006166c:
00061676: R0 := pad:64[mem[R31 + 0x144, el]:u32]
0006167b: R30 := 0x3F6C
0006167d: call @inet_ntoa with return %0006167f

0006167f:
00061683: R3 := R0
0006168a: R5 := pad:64[mem[R31 + 0x142, el]:u16]
00061690: R1 := pad:64[31:0[R25]]
00061695: R0 := 4
0006169a: R2 := 0x15000
000616a3: R4 := pad:64[23:16[R5].31:24[R5].7:0[R5].15:8[R5]]
000616a9: R2 := R2 + 0x240
000616af: R4 := pad:64[0.15:0[R4]]
000616b4: R30 := 0x3F90
000616b6: call @__syslog_chk with return %000616b8

000616b8:
000616bd: R0 := pad:64[mem[R31 + 0x144, el]:u32]
000616c2: R30 := 0x3F98
000616c4: call @inet_ntoa with return %000616c6

000616c6:
000616c9: R30 := 0x3F9C
000616cb: call @gen_denied_page with return %000616cd

000616cd:
000616d3: mem := mem with [R31 + 0x68, el]:u64 <- R0
000616db: mem := mem with [R31 + 0x100, el]:u64 <- R0
000616e0: R30 := 0x3FA8
000616e2: call @strlen with return %000616e4

000616e4:
000616e9: R1 := mem[R31 + 0x68, el]:u64
000616ef: R2 := R0
000616f5: R0 := pad:64[31:0[R28]]
000616fa: R30 := 0x3FB8
000616fc: call @write with return %000616fe

000616fe:
00061703: R0 := mem[R31 + 0x100, el]:u64
00061708: R30 := 0x3FC0
0006170a: call @free with return %0006170c

0006170c:
00061710: R0 := pad:64[31:0[R28]]
00061715: R30 := 0x3FC8
00061717: call @close with return %00061719

00061719:
0006171e: R1 := pad:64[mem[R31 + 0xF8, el]:u32]
00061722: goto %000614c8

00063b1e:
00063b22: R0 := R21
00063b27: R30 := 0x3DF4
00063b2a: call @pthread_attr_init with return %00063b2c

00063b2c:
00063b2f: R1 := 0x10000
00063b35: R0 := R21
00063b3a: R30 := 0x3E00
00063b3d: call @pthread_attr_setstacksize with return %00063b3f

00063b3f:
00063b42: R1 := 0x100
00063b48: R0 := R21
00063b4d: R30 := 0x3E0C
00063b50: call @pthread_attr_setguardsize with return %00063b52

00063b52:
00063b57: R1 := extend:64[mem[R31 + 0xF8, el]:u32]
00063b5e: R0 := mem[R31 + 0x118, el]:u64
00063b63: R30 := 0x3E18
00063b65: call @plist_in with return %00063b67

00063b67:
00063b6b: when 31:0[R0] = 0 goto %00063b69
0006cd84: goto %00063bfe

00063b69:
00063b73: R1 := extend:64[mem[R31 + 0xF8, el]:u32]
00063b7a: R0 := mem[R31 + 0x120, el]:u64
00063b7f: R30 := 0x3F08
00063b81: call @plist_in with return %00063b83

00063b83:
00063b86: when 31:0[R0] = 0 goto %0006177d
0006cd85: goto %00063b8a

0006177d:
00061780: R0 := 0x20
00061785: R30 := 0x3FE0
00061787: call @new with return %00061789

00061789:
0006178d: #1552 := R31 + 0x140
00061792: R2 := mem[#1552, el]:u64
00061797: R3 := mem[#1552 + 8, el]:u64
0006179d: R24 := R0
000617a4: R1 := pad:64[mem[R31 + 0xF8, el]:u32]
000617aa: #1553 := R0 + 0x10
000617b0: mem := mem with [#1553, el]:u64 <- R2
000617b6: mem := mem with [#1553 + 8, el]:u64 <- R3
000617bd: R0 := mem[R31 + 0x110, el]:u64
000617c5: mem := mem with [R24, el]:u32 <- 31:0[R28]
000617ca: R30 := 0x3FFC
000617cc: call @plist_get with return %000617ce

000617ce:
000617d4: mem := mem with [R24 + 8, el]:u64 <- R0
000617da: R3 := R24
000617e0: R1 := R21
000617e6: R0 := R31 + 0x108
000617eb: R2 := 0x10000
000617f1: R2 := R2 + 0xF00
000617f6: R30 := 0x4018
000617f9: call @pthread_create with return %000617fb

000617fb:
000617ff: R24 := pad:64[31:0[R0]]
00061803: goto %0006172c

00063b8a:
00063b8d: R0 := 0x20
00063b92: R30 := 0x3F14
00063b94: call @new with return %00063b96

00063b96:
00063b9a: #1583 := R31 + 0x140
00063b9f: R4 := mem[#1583, el]:u64
00063ba4: R5 := mem[#1583 + 8, el]:u64
00063baa: R3 := R0
00063bb0: #1584 := R0 + 0x10
00063bb6: mem := mem with [#1584, el]:u64 <- R4
00063bbc: mem := mem with [#1584 + 8, el]:u64 <- R5
00063bc2: R1 := R21
00063bc7: R2 := 0x10000
00063bcd: R2 := R2 + 0xFA8
00063bd5: mem := mem with [R3, el]:u32 <- 31:0[R28]
00063bdb: R0 := R31 + 0x108
00063be0: R30 := 0x3F38
00063be2: call @pthread_create with return %00063be4

00063be4:
00063be8: R24 := pad:64[31:0[R0]]
00063bee: R0 := R21
00063bf3: R30 := 0x3F44
00063bf5: call @pthread_attr_destroy with return %00063bf7

00063bf7:
00063bfa: when 31:0[R24] = 0 goto %0006176e
0006cd86: goto %00061740

00063bfe:
00063c01: R0 := 0x20
00063c06: R30 := 0x3E24
00063c08: call @new with return %00063c0a

00063c0a:
00063c0e: R1 := R20 + 0x4D8
00063c14: R3 := R0
00063c1a: #1585 := R31 + 0x140
00063c1f: R4 := mem[#1585, el]:u64
00063c24: R5 := mem[#1585 + 8, el]:u64
00063c2a: #1586 := R0 + 0x10
00063c30: mem := mem with [#1586, el]:u64 <- R4
00063c36: mem := mem with [#1586 + 8, el]:u64 <- R5
00063c3d: R1 := pad:64[mem[R1 + 0x20, el]:u32]
00063c45: mem := mem with [R0, el]:u32 <- 31:0[R28]
00063c4b: when 31:0[R1] <> 0 goto %00061724
0006cd87: goto %00063c4f

00061724:
00061727: R30 := 0x3FD4
00061729: call @proxy_thread with return %0006172b

0006172b:
0006172e: goto %0006172c

00063c4f:
00063c53: R1 := R21
00063c59: R0 := R31 + 0x108
00063c5e: R2 := 0x10000
00063c64: R2 := R2 + 0xD28
00063c69: R30 := 0x3E54
00063c6b: call @pthread_create with return %00063c6d

00063c6d:
00063c71: R24 := pad:64[31:0[R0]]
0006cd88: goto %0006172c

0006172c:
00061733: R0 := R21
00061738: R30 := 0x3E60
0006173b: call @pthread_attr_destroy with return %0006173d

0006173d:
00061742: when 31:0[R24] <> 0 goto %00061740
0006cd89: goto %0006176e

00061740:
0006174a: R2 := mem[R31 + 0x78, el]:u64
0006174f: R1 := 1
00061755: R3 := pad:64[31:0[R24]]
0006175a: R0 := 3
0006175f: R30 := 0x3F5C
00061761: call @__syslog_chk with return %00061763

00061763:
00061768: R1 := pad:64[mem[R31 + 0xF8, el]:u32]
0006176c: goto %000614c8

0006176e:
00061773: R1 := pad:64[mem[R31 + 0xF8, el]:u32]
00061779: R22 := pad:64[31:0[R22] + 1]
0006cd8a: goto %000614c8

000614c8:
000614d1: R0 := pad:64[31:0[R1] + 1]
000614d9: mem := mem with [R31 + 0xF8, el]:u32 <- 31:0[R0]
000614df: #1551 := 31:0[R0] - 0x3FF
000614e4: VF := extend:33[#1551] <> extend:33[31:0[R0]] - 0x3FF
000614e9: CF := pad:33[#1551] <> pad:33[31:0[R0]] + 0xFFFFFC01
000614ed: ZF := #1551 = 0
000614f1: NF := 31:31[#1551]
000614f9: when NF = VF & ~ZF goto %000614f7
0006cd8b: goto %00061448

00063cb6:
00063cb9: when ZF goto %000614f7
0006cd8c: goto %00063cbd

00063cbd:
00063cc2: R0 := pad:64[mem[R20 + 0x4D8, el]:u32]
00063cc7: when 31:0[R0] = 0 goto %00061805
0006cd8d: goto %000614f7

00061805:
00061808: R30 := 0x4024
0006180a: call @__errno_location with return %0006180c

0006180c:
00061811: R0 := pad:64[mem[R0, el]:u32]
00061816: R30 := 0x402C
00061818: call @strerror with return %0006181a

0006181a:
0006181e: R3 := R0
00061823: R2 := 0x15000
00061828: R1 := 1
0006182e: R2 := R2 + 0x290
00061833: R0 := 3
00061838: R30 := 0x4044
0006183a: call @__syslog_chk with return %0006183c

0006183c:
0006183e: goto %000614f7

000614f7:
00061500: R21 := R20 + 0x4D8
00061507: R0 := mem[R21 + 0x58, el]:u64
0006150c: when R0 = 0 goto %00061332
0006cd8e: goto %00061510

00061510:
00061514: R0 := R21 + 0x28
00061519: R30 := 0x3578
0006151b: call @pthread_mutex_lock with return %0006151d

0006151d:
00061522: R21 := mem[R21 + 0x58, el]:u64
00061528: when R21 = 0 goto %00061526
0006cd8f: goto %00061549

00061549:
0006154c: R25 := 0x15000
00061551: R28 := 0x15000
00061557: R25 := R25 + 0x2D8
0006155d: R0 := R28 + 0x2B8
00061563: R24 := R31 + 0xF8
0006156b: mem := mem with [R31 + 0x68, el]:u64 <- R0
00061570: goto %0006156e

0006156e:
00061575: R28 := R21
0006157b: R1 := R24
00061582: R21 := mem[R21 + 0x10, el]:u64
00061589: R0 := mem[R28, el]:u64
0006158e: R30 := 0x35CC
00061591: call @pthread_join with return %00061593

00061593:
00061597: when 31:0[R0] = 0 goto %00061595
0006cd90: goto %000615ee

000615ee:
000615f2: R3 := pad:64[31:0[R0]]
000615f8: R2 := R25
000615fd: R1 := 1
00061602: R0 := 3
00061607: R30 := 0x35E4
00061609: call @__syslog_chk with return %0006160b

0006160b:
0006160f: R0 := R28
00061614: R30 := 0x35EC
00061616: call @free with return %00061618

00061618:
0006161c: when R21 <> 0 goto %0006156e
0006cd91: goto %00061526

00061595:
0006159e: R0 := R20 + 0x4D8
000615a4: R23 := pad:64[31:0[R23] + 1]
000615ab: R0 := pad:64[mem[R0 + 4, el]:u32]
000615b2: when 31:0[R0] <> 0 goto %000615b0
0006cd92: goto %000615d7

000615b0:
000615ba: R3 := pad:64[mem[R31 + 0xF8, el]:u32]
000615bf: R0 := 1
000615c6: R2 := mem[R28, el]:u64
000615cd: R1 := mem[R31 + 0x68, el]:u64
000615d2: R30 := 0x3DB8
000615d4: call @__printf_chk with return %000615d6

000615d6:
000615d9: goto %000615d7

000615d7:
000615de: R0 := R28
000615e3: R30 := 0x35B4
000615e5: call @free with return %000615e7

000615e7:
000615ea: when R21 = 0 goto %00061526
0006cd93: goto %0006156e

00061526:
0006152f: R1 := R20 + 0x4D8
00061535: R0 := R1 + 0x28
0006153c: mem := mem with [R1 + 0x58, el]:u64 <- 0
00061541: R30 := 0x3600
00061543: call @pthread_mutex_unlock with return %00061545

00061545:
00061547: goto %00061332

00061b92:
00061b97: R0 := mem[R23 + 0x78, el]:u64
00061b9f: mem := mem with [R23 + 0x74, el]:u32 <- 31:0[R25]
00061ba6: when R0 <> 0 goto %00061ba4
0006cd94: goto %00061c6b

00061c6b:
00061c6e: R0 := 1
00061c76: mem := mem with [R23 + 0x78, el]:u64 <- R0
0006cd95: goto %00061ba4

00061ba4:
00061bad: R0 := R27
00061bb2: R30 := 0x3108
00061bb4: call @strlen with return %00061bb6

00061bb6:
00061bbc: mem := mem with [R31 + 0xF8, el]:u32 <- 31:0[R0]
00061bc2: when 31:0[R0] = 0 goto %00061bc0
0006cd96: goto %00061bd2

00061bd2:
00061bd6: R0 := pad:64[31:0[R0] + 3]
00061bdd: R0 :=
          63:32[31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0]].31:0[R0]
00061be2: R30 := 0x311C
00061be4: call @new with return %00061be6

00061be6:
00061beb: R1 := pad:64[mem[R31 + 0xF8, el]:u32]
00061bf1: R27 := R0
00061bf8: R5 := mem[R31 + 0x100, el]:u64
00061bfe: R1 := pad:64[31:0[R1] + 3]
00061c04: R4 := R26
00061c09: R3 := 0xFFFFFFFFFFFFFFFF
00061c10: R1 :=

00061c15: R2 := 1
00061c1a: R30 := 0x3140
00061c1c: call @__snprintf_chk with return %00061c1e

00061c1e:
00061c23: R0 := mem[R23 + 0x80, el]:u64
00061c29: R2 := R27
00061c2e: R1 := 0
00061c33: R30 := 0x3150
00061c35: call @plist_add with return %00061c37

00061c37:
00061c3d: mem := mem with [R23 + 0x80, el]:u64 <- R0
00061c44: R27 := mem[R31 + 0x100, el]:u64
00061c48: goto %00061bc0

00061bc0:
00061bc9: R0 := R27
00061bce: R30 := 0x30D4
00061bd0: call @free with return %00061b1f

00061ced:
00061cf2: R0 := pad:64[mem[R1]]
00061cf8: when 31:0[R0] = 0 goto %00061cf6
0006cd97: goto %00061d08

00061d08:
00061d0d: R0 := mem[R24 + 0x18, el]:u64
00061d12: R30 := 0x3034
00061d14: call @noproxy_add with return %00061d16

00061d16:
00061d1c: mem := mem with [R24 + 0x18, el]:u64 <- R0
00061d23: R1 := mem[R31 + 0x100, el]:u64
00061d27: goto %00061cf6

00061cf6:
00061cff: R0 := R1
00061d04: R30 := 0x300C
00061d06: call @free with return %00061a8e

00061f21:
00061f29: R1 := 0
00061f2e: R30 := 0x2DDC
00061f30: call @parent_add with return %00061f32

00061f32:
00061f37: R0 := mem[R31 + 0x100, el]:u64
00061f3c: R30 := 0x2DE4
00061f3e: call @free with return %00061f00

000626f2:
000626f5: R30 := 0x27F8
000626f7: call @is_http_header with return %000626f9

000626f9:
000626fe: when 31:0[R0] <> 0 goto %000626fc
0006cd98: goto %00062795

00062795:
0006279a: R3 := mem[R31 + 0x100, el]:u64
000627a0: R2 := R26
000627a5: R1 := 1
000627aa: R0 := 3
000627af: R30 := 0x2810
000627b1: call @__syslog_chk with return %000627b3

000627b3:
000627b5: goto %00062787

000626fc:
00062706: R0 := mem[R31 + 0x100, el]:u64
0006270c: R27 := R20 + 0x4D8
00062711: R30 := 0x27BC
00062713: call @get_http_header_name with return %00062715

00062715:
00062719: R25 := R0
0006271f: R1 := R0
00062726: R0 := mem[R27 + 0x88, el]:u64
0006272b: R30 := 0x27CC
0006272d: call @hlist_in with return %0006272f

0006272f:
00062733: when 31:0[R0] = 0 goto %00062731
0006cd99: goto %00062777

00062731:
0006273b: R0 := mem[R31 + 0x100, el]:u64
00062742: R28 := mem[R27 + 0x88, el]:u64
00062747: R30 := 0x2DAC
00062749: call @get_http_header_value with return %0006274b

0006274b:
0006274f: R2 := R0
00062755: R1 := R25
0006275b: R0 := R28
00062760: R4 := 0
00062765: R3 := 1
0006276a: R30 := 0x2DC4
0006276c: call @hlist_add with return %0006276e

0006276e:
00062774: mem := mem with [R27 + 0x88, el]:u64 <- R0
00062779: goto %00062777

00062777:
0006277e: R0 := R25
00062783: R30 := 0x27D8
00062785: call @free with return %00062787

00062787:
0006278c: R0 := mem[R31 + 0x100, el]:u64
00062791: R30 := 0x27E0
00062793: call @free with return %00061ed4

00061e91:
00061e9a: R0 := R25
00061ea0: R3 := pad:64[31:0[R28]]
00061ea6: R1 := R26
00061eab: R30 := 0x277C
00061ead: call @listen_add with return %00061eaf

00061eaf:
00061eb4: R0 := mem[R31 + 0x100, el]:u64
00061eb9: R30 := 0x2784
00061ebb: call @free with return %00061e6a

00061e21:
00061e2a: R0 := R26
00061e30: R3 := pad:64[31:0[R28]]
00061e36: R1 := R25
00061e3b: R30 := 0x2734
00061e3d: call @listen_add with return %00061e3f

00061e3f:
00061e44: R0 := mem[R31 + 0x100, el]:u64
00061e49: R30 := 0x273C
00061e4b: call @free with return %00061dfa

00061db7:
00061dc0: R0 := R24
00061dc6: R2 := pad:64[31:0[R28]]
00061dcb: R30 := 0x26EC
00061dcd: call @tunnel_add with return %00061dcf

00061dcf:
00061dd4: R0 := mem[R31 + 0x100, el]:u64
00061dd9: R30 := 0x26F4
00061ddb: call @free with return %00061d90

00063ff9:
00063ffd: R1 := pad:64[31:0[R0] - 0x41]
00064003: #1595 := 31:0[R1] - 0x36
00064008: VF := extend:33[#1595] <> extend:33[31:0[R1]] - 0x36
0006400d: CF := pad:33[#1595] <> pad:33[31:0[R1]] + 0xFFFFFFCA
00064011: ZF := #1595 = 0
00064015: NF := 31:31[#1595]
0006401b: when CF & ~ZF goto %000636bb
0006cd9a: goto %0006401f

000636bb:
000636be: R22 := 1
000636c2: goto %00060459

0006401f:
00064025: R1 := pad:64[mem[R26 + pad:64[31:0[R1].0], el]:u16]
0006402a: R2 := 0x2590
00064031: R1 := R2 + extend:64[15:0[R1].0]
00064036: call R1 with noreturn

0006cd9b: sub malloc(malloc_size, malloc_result)
0006d11c: malloc_size :: in u64 = R0
0006d11d: malloc_result :: out u64 = R0

00045df9:
0006491b: R16 := 0x27000
00064922: R17 := mem[R16 + 0xD18, el]:u64
00064928: R16 := R16 + 0xD18
0006492d: call R17 with noreturn

0006cd9c: sub md4_buffer(md4_buffer_result)
0006d11e: md4_buffer_result :: out u32 = low:32[R0]

00048b08:
00048b0c: #165 := R31 - 0xF0
00048b12: mem := mem with [#165, el]:u64 <- R29
00048b18: mem := mem with [#165 + 8, el]:u64 <- R30
00048b1c: R31 := #165
00048b21: R3 := 0x11000
00048b27: R29 := R31
00048b2d: #166 := R31 + 0x20
00048b33: mem := mem with [#166, el]:u64 <- R21
00048b39: mem := mem with [#166 + 8, el]:u64 <- R22
00048b3e: R21 := 0x27000
00048b44: R22 := R2
00048b4b: V0 := mem[R3 + 0x8D0, el]:u128
00048b51: #167 := R31 + 0x30
00048b57: mem := mem with [#167, el]:u64 <- R23
00048b5d: mem := mem with [#167 + 8, el]:u64 <- R24
00048b63: R23 := R31 + 0x40
00048b6a: R3 := mem[R21 + 0xFB8, el]:u64
00048b70: R2 := R23
00048b76: #168 := R31 + 0x10
00048b7c: mem := mem with [#168, el]:u64 <- R19
00048b82: mem := mem with [#168 + 8, el]:u64 <- R20
00048b89: R4 := mem[R3, el]:u64
00048b91: mem := mem with [R31 + 0xE8, el]:u64 <- R4
00048b96: R4 := 0
00048b9e: mem := mem with [R31 + 0x40, el]:u128 <- V0
00048ba5: mem := mem with [R31 + 0x50, el]:u64 <- 0
00048bac: mem := mem with [R31 + 0x58, el]:u32 <- 0
00048bb1: R30 := 0x8934
00048bb3: call @md4_process_bytes with return %00048bb5

00048bb5:
00048bba: R0 := pad:64[mem[R31 + 0x50, el]:u32]
00048bc1: R1 := pad:64[mem[R31 + 0x58, el]:u32]
00048bc8: #169 := 31:0[R1] + 31:0[R0]
00048bce: VF := extend:33[#169] <> extend:33[31:0[R1]] + extend:33[31:0[R0]]
00048bd4: CF := pad:33[#169] <> pad:33[31:0[R1]] + pad:33[31:0[R0]]
00048bd8: ZF := #169 = 0
00048bdc: NF := 31:31[#169]
00048be0: R0 := pad:64[#169]
00048be8: mem := mem with [R31 + 0x50, el]:u32 <- 31:0[R0]
00048bee: when CF <> 1 goto %00048bec
0006cd9d: goto %0004fe4c

0004fe4c:
0004fe51: R0 := pad:64[mem[R31 + 0x54, el]:u32]
0004fe57: R0 := pad:64[31:0[R0] + 1]
0004fe5f: mem := mem with [R31 + 0x54, el]:u32 <- 31:0[R0]
0006cd9e: goto %00048bec

00048bec:
00048bf5: #170 := 31:0[R1] - 0x38
00048bfa: VF := extend:33[#170] <> extend:33[31:0[R1]] - 0x38
00048bff: CF := pad:33[#170] <> pad:33[31:0[R1]] + 0xFFFFFFC8
00048c03: ZF := #170 = 0
00048c07: NF := 31:31[#170]
00048c0c: R2 := 0x78
00048c11: R20 := 0x38
00048c18: R2 := pad:64[31:0[R2] + ~31:0[R1] + 1]
00048c1f: R20 := pad:64[31:0[R20] + ~31:0[R1] + 1]
00048c25: R19 := pad:64[31:0[R1]]
00048c33: when CF <> 1 goto %00048c2b
00048c34: goto %00048c2f

00048c2f:
00048c30: R20 := R2
00048c36: goto %00048c32

00048c2b:
00048c2c: R20 := R20
00048c35: goto %00048c32

00048c32:
00048c3c: R24 := R23 + 0x1C
00048c41: R1 := 0x11000
00048c47: R1 := R1 + 0x8E0
00048c4d: R2 := R20
00048c53: R1 := R1 + 0xA90
00048c5a: R0 := R24 + R19
00048c5f: R30 := 0x898C
00048c61: call @memcpy with return %00048c63

00048c63:
00048c67: #171 := R31 + 0x50
00048c6c: R6 := pad:64[mem[#171, el]:u32]
00048c71: R5 := pad:64[mem[#171 + 4, el]:u32]
00048c78: R1 := R19 + R20
00048c7e: R3 := R31 + 0x4C
00048c84: R0 := R24
00048c8b: R2 := 0.61:0[R1 >> 2 | R1 << 0x3E]
00048c91: R1 := R1 + 8
00048c97: R7 := R2 + 4
00048c9d: R4 := R2 + 5
00048ca4: R8 := pad:64[31:3[31:0[R6] >> 0x1D | 31:0[R6] << 3].0]
00048cab: R5 := pad:64[28:0[R5].31:29[R6]]
00048cb1: R2 := R23
00048cba: mem := mem with [R3 + (61:0[R7].0), el]:u32 <- 31:0[R8]
00048cc3: mem := mem with [R3 + (61:0[R4].0), el]:u32 <- 31:0[R5]
00048cc8: R30 := 0x89C4
00048cca: call @md4_process_block with return %00048ccc

00048ccc:
00048cd1: V0 := mem[R31 + 0x40, el]:u128
00048cd8: R21 := mem[R21 + 0xFB8, el]:u64
00048cdf: R0 := mem[R31 + 0xE8, el]:u64
00048ce6: R1 := mem[R21, el]:u64
00048cec: #172 := ~R1
00048cf1: #173 := R0 + ~R1 + 1
00048cf7: VF := extend:65[#173] <> extend:65[R0] + extend:65[#172] + 1
00048cfd: CF := pad:65[#173] <> pad:65[R0] + pad:65[#172] + 1
00048d01: ZF := #173 = 0
00048d05: NF := 63:63[#173]
00048d09: R0 := #173
00048d0e: R1 := 0
00048d16: mem := mem with [R22, el]:u128 <- V0
00048d1c: when ZF <> 1 goto %00048d1a
0006cd9f: goto %0004fe01

00048d1a:
00048d22: R30 := 0x8A00
00048d24: call @__stack_chk_fail with return %0006cda0

0006cda0:
0006cda1: call @memxor with noreturn

0004fe01:
0004fe05: R0 := R22
0004fe0b: #626 := R31 + 0x10
0004fe10: R19 := mem[#626, el]:u64
0004fe15: R20 := mem[#626 + 8, el]:u64
0004fe1b: #627 := R31 + 0x20
0004fe20: R21 := mem[#627, el]:u64
0004fe25: R22 := mem[#627 + 8, el]:u64
0004fe2b: #628 := R31 + 0x30
0004fe30: R23 := mem[#628, el]:u64
0004fe35: R24 := mem[#628 + 8, el]:u64
0004fe3c: R29 := mem[R31, el]:u64
0004fe41: R30 := mem[R31 + 8, el]:u64
0004fe45: R31 := R31 + 0xF0
0004fe4a: call R30 with noreturn

0006cda2: sub md4_finish_ctx(md4_finish_ctx_result)
0006d11f: md4_finish_ctx_result :: out u32 = low:32[R0]

000484e5:
000484e9: #138 := R31 - 0x40
000484ef: mem := mem with [#138, el]:u64 <- R29
000484f5: mem := mem with [#138 + 8, el]:u64 <- R30
000484f9: R31 := #138
000484ff: R29 := R31
00048505: #139 := R31 + 0x10
0004850b: mem := mem with [#139, el]:u64 <- R19
00048511: mem := mem with [#139 + 8, el]:u64 <- R20
00048517: R19 := R0
0004851d: #140 := R31 + 0x20
00048523: mem := mem with [#140, el]:u64 <- R21
00048529: mem := mem with [#140 + 8, el]:u64 <- R22
0004852f: R21 := R1
00048536: R1 := pad:64[mem[R0 + 0x10, el]:u32]
0004853d: R0 := pad:64[mem[R0 + 0x18, el]:u32]
00048545: mem := mem with [R31 + 0x30, el]:u64 <- R23
0004854c: #141 := 31:0[R1] + 31:0[R0]
00048552: VF := extend:33[#141] <> extend:33[31:0[R1]] + extend:33[31:0[R0]]
00048558: CF := pad:33[#141] <> pad:33[31:0[R1]] + pad:33[31:0[R0]]
0004855c: ZF := #141 = 0
00048560: NF := 31:31[#141]
00048564: R1 := pad:64[#141]
0004856c: mem := mem with [R19 + 0x10, el]:u32 <- 31:0[R1]
00048572: when CF <> 1 goto %00048570
0006cda3: goto %000500a4

000500a4:
000500a9: R1 := pad:64[mem[R19 + 0x14, el]:u32]
000500af: R1 := pad:64[31:0[R1] + 1]
000500b7: mem := mem with [R19 + 0x14, el]:u32 <- 31:0[R1]
0006cda4: goto %00048570

00048570:
00048579: #142 := 31:0[R0] - 0x38
0004857e: VF := extend:33[#142] <> extend:33[31:0[R0]] - 0x38
00048583: CF := pad:33[#142] <> pad:33[31:0[R0]] + 0xFFFFFFC8
00048587: ZF := #142 = 0
0004858b: NF := 31:31[#142]
00048590: R1 := 0x78
00048595: R22 := 0x38
0004859c: R1 := pad:64[31:0[R1] + ~31:0[R0] + 1]
000485a3: R22 := pad:64[31:0[R22] + ~31:0[R0] + 1]
000485a9: R23 := R19 + 0x1C
000485b7: when CF <> 1 goto %000485af
000485b8: goto %000485b3

000485b3:
000485b4: R22 := R1
000485ba: goto %000485b6

000485af:
000485b0: R22 := R22
000485b9: goto %000485b6

000485b6:
000485c0: R20 := pad:64[31:0[R0]]
000485c5: R1 := 0x11000
000485cb: R1 := R1 + 0x8E0
000485d1: R2 := R22
000485d8: R0 := R23 + R20
000485de: R1 := R1 + 0xA90
000485e5: R20 := R20 + R22
000485ea: R30 := 0x8590
000485ed: call @memcpy with return %000485ef

000485ef:
000485f3: R3 := 0.32:2[R20].0
000485fa: R5 := pad:64[mem[R19 + 0x10, el]:u32]
00048601: R3 := R19 + R3
00048607: R0 := R23
0004860d: R1 := R20 + 8
00048613: R2 := R19
0004861a: R4 := pad:64[31:3[31:0[R5] >> 0x1D | 31:0[R5] << 3].0]
00048622: mem := mem with [R3 + 0x1C, el]:u32 <- 31:0[R4]
00048629: R4 := pad:64[mem[R19 + 0x14, el]:u32]
00048630: R4 := pad:64[28:0[R4].31:29[R5]]
00048638: mem := mem with [R3 + 0x20, el]:u32 <- 31:0[R4]
0004863d: R30 := 0x85C0
0004863f: call @md4_process_block with return %00048641

00048641:
00048646: R0 := pad:64[mem[R19, el]:u32]
0004864d: R23 := mem[R31 + 0x30, el]:u64
00048655: mem := mem with [R21, el]:u32 <- 31:0[R0]
0004865b: R0 := R21
00048662: R1 := pad:64[mem[R19 + 4, el]:u32]
0004866a: mem := mem with [R21 + 4, el]:u32 <- 31:0[R1]
00048671: R1 := pad:64[mem[R19 + 8, el]:u32]
00048679: mem := mem with [R21 + 8, el]:u32 <- 31:0[R1]
00048680: R1 := pad:64[mem[R19 + 0xC, el]:u32]
00048686: #143 := R31 + 0x10
0004868b: R19 := mem[#143, el]:u64
00048690: R20 := mem[#143 + 8, el]:u64
00048698: mem := mem with [R21 + 0xC, el]:u32 <- 31:0[R1]
0004869e: #144 := R31 + 0x20
000486a3: R21 := mem[#144, el]:u64
000486a8: R22 := mem[#144 + 8, el]:u64
000486af: R29 := mem[R31, el]:u64
000486b4: R30 := mem[R31 + 8, el]:u64
000486b8: R31 := R31 + 0x40
000486bd: call R30 with noreturn

0006cda5: sub md4_init_ctx(md4_init_ctx_result)
0006d120: md4_init_ctx_result :: out u32 = low:32[R0]

0004846f:
00048472: R1 := 0x11000
00048479: mem := mem with [R0 + 0x10, el]:u64 <- 0
00048480: mem := mem with [R0 + 0x18, el]:u32 <- 0
00048487: V0 := mem[R1 + 0x8D0, el]:u128
0004848f: mem := mem with [R0, el]:u128 <- V0
00048494: call R30 with noreturn

0006cda6: sub md4_process_block(md4_process_block_result)
0006d121: md4_process_block_result :: out u32 = low:32[R0]

00048395:
00048399: #132 := R31 - 0x70
0004839f: mem := mem with [#132, el]:u64 <- R29
000483a5: mem := mem with [#132 + 8, el]:u64 <- R30
000483a9: R31 := #132
000483af: R4 := R2
000483b5: R5 := R2
000483bb: R29 := R31
000483c2: R2 := pad:64[mem[R2 + 0x10, el]:u32]
000483c8: R3 := 63:2[R1].0
000483ce: #133 := R4 + 4
000483d3: R8 := pad:64[mem[#133, el]:u32]
000483d8: R9 := pad:64[mem[#133 + 4, el]:u32]
000483df: R2 := pad:64[31:0[R2] + 31:0[R1]]
000483e6: R10 := pad:64[mem[R4 + 0xC, el]:u32]
000483ed: R3 := R0 + R3
000483f4: R4 := pad:64[mem[R4, el]:u32]
000483fa: #134 := ~pad:64[31:0[R2]]
000483ff: #135 := R1 + ~pad:64[31:0[R2]] + 1
00048405: VF := extend:65[#135] <> extend:65[R1] + extend:65[#134] + 1
0004840b: CF := pad:65[#135] <> pad:65[R1] + pad:65[#134] + 1
0004840f: ZF := #135 = 0
00048413: NF := 63:63[#135]
0004841b: mem := mem with [R5 + 0x10, el]:u32 <- 31:0[R2]
00048423: mem := mem with [R31 + 0x68, el]:u64 <- R3
0004842a: when ~(CF & ~ZF) goto %00048428
0006cda7: goto %00050b50

00050b50:
00050b55: R1 := pad:64[mem[R5 + 0x14, el]:u32]
00050b5b: R1 := pad:64[31:0[R1] + 1]
00050b63: mem := mem with [R5 + 0x14, el]:u32 <- 31:0[R1]
0006cda8: goto %00048428

00048428:
00048432: R1 := mem[R31 + 0x68, el]:u64
00048438: #136 := ~R1
0004843d: #137 := R0 + ~R1 + 1
00048443: VF := extend:65[#137] <> extend:65[R0] + extend:65[#136] + 1
00048449: CF := pad:65[#137] <> pad:65[R0] + pad:65[#136] + 1
0004844d: ZF := #137 = 0
00048451: NF := 63:63[#137]
00048457: when CF goto %00048455
0006cda9: goto %000500b9

000500b9:
000500bc: R3 := 0x7999
000500c1: R2 := 0xEBA1
000500c7: #644 := R31 + 0x40
000500cd: mem := mem with [#644, el]:u64 <- R25
000500d3: mem := mem with [#644 + 8, el]:u64 <- R26
000500d9: R26 := R5
000500df: R3 := pad:64[0x5A82.15:0[R3]]
000500e5: R2 := pad:64[0x6ED9.15:0[R2]]
000500eb: #645 := R31 + 0x10
000500f1: mem := mem with [#645, el]:u64 <- R19
000500f7: mem := mem with [#645 + 8, el]:u64 <- R20
000500fd: #646 := R31 + 0x20
00050103: mem := mem with [#646, el]:u64 <- R21
00050109: mem := mem with [#646 + 8, el]:u64 <- R22
0005010f: #647 := R31 + 0x30
00050115: mem := mem with [#647, el]:u64 <- R23
0005011b: mem := mem with [#647 + 8, el]:u64 <- R24
00050121: #648 := R31 + 0x50
00050127: mem := mem with [#648, el]:u64 <- R27
0005012d: mem := mem with [#648 + 8, el]:u64 <- R28
00050135: mem := mem with [R31 + 0x60, el]:u32 <- 31:0[R4]
0006cdaa: goto %00050137

00050137:
0005013c: R6 := pad:64[mem[R0, el]:u32]
00050141: R18 := pad:64[mem[R0 + 4, el]:u32]
00050148: R1 := pad:64[31:0[R9] ^ 31:0[R10]]
0005014f: R1 := pad:64[31:0[R1] & 31:0[R8]]
00050156: R5 := pad:64[mem[R31 + 0x60, el]:u32]
0005015d: R1 := pad:64[31:0[R1] ^ 31:0[R10]]
00050164: R4 := pad:64[31:0[R8] ^ 31:0[R9]]
0005016b: R1 := pad:64[31:0[R1] + 31:0[R6]]
00050172: R28 := pad:64[31:0[R6] + 31:0[R3]]
00050179: R1 := pad:64[31:0[R1] + 31:0[R5]]
00050180: R5 := pad:64[31:0[R18] + 31:0[R10]]
00050186: #649 := R0 + 8
0005018b: R22 := pad:64[mem[#649, el]:u32]
00050190: R14 := pad:64[mem[#649 + 4, el]:u32]
00050197: R1 := pad:64[28:0[R1].31:29[R1]]
0005019e: R4 := pad:64[31:0[R4] & 31:0[R1]]
000501a5: R13 := pad:64[31:0[R1] ^ 31:0[R8]]
000501ac: R4 := pad:64[31:0[R4] ^ 31:0[R9]]
000501b3: R12 := pad:64[31:0[R22] + 31:0[R9]]
000501ba: R4 := pad:64[31:0[R4] + 31:0[R5]]
000501c1: R7 := pad:64[31:0[R14] + 31:0[R8]]
000501c7: #650 := R0 + 0x14
000501cc: R16 := pad:64[mem[#650, el]:u32]
000501d1: R20 := pad:64[mem[#650 + 4, el]:u32]
000501d8: R4 := pad:64[24:0[R4].31:25[R4]]
000501df: R13 := pad:64[31:0[R13] & 31:0[R4]]
000501e6: R11 := pad:64[31:0[R1] ^ 31:0[R4]]
000501ed: R13 := pad:64[31:0[R13] ^ 31:0[R8]]
000501f4: R6 := pad:64[31:0[R6] + 31:0[R2]]
000501fb: R13 := pad:64[31:0[R13] + 31:0[R12]]
00050202: R5 := pad:64[mem[R0 + 0x10, el]:u32]
0005020a: mem := mem with [R31 + 0x64, el]:u32 <- 31:0[R6]
00050211: R19 := pad:64[31:0[R4] + 31:0[R16]]
00050218: R17 := pad:64[31:0[R1] + 31:0[R5]]
0005021f: R13 := pad:64[20:0[R13].31:21[R13]]
00050226: R11 := pad:64[31:0[R11] & 31:0[R13]]
0005022d: R6 := pad:64[31:0[R4] ^ 31:0[R13]]
00050234: R11 := pad:64[31:0[R11] ^ 31:0[R1]]
0005023b: R15 := pad:64[31:0[R13] + 31:0[R20]]
00050242: R11 := pad:64[31:0[R11] + 31:0[R7]]
00050249: R24 := pad:64[mem[R0 + 0x20, el]:u32]
00050250: R12 := pad:64[mem[R0 + 0x1C, el]:u32]
00050257: R21 := pad:64[mem[R0 + 0x28, el]:u32]
0005025e: R11 := pad:64[12:0[R11].31:13[R11]]
00050265: R6 := pad:64[31:0[R6] & 31:0[R11]]
0005026c: R1 := pad:64[31:0[R13] ^ 31:0[R11]]
00050273: R4 := pad:64[31:0[R6] ^ 31:0[R4]]
0005027a: R6 := pad:64[31:0[R11] + 31:0[R12]]
00050281: R4 := pad:64[31:0[R4] + 31:0[R17]]
00050288: R17 := pad:64[mem[R0 + 0x24, el]:u32]
0005028f: R23 := pad:64[mem[R0 + 0x30, el]:u32]
00050296: R4 := pad:64[28:0[R4].31:29[R4]]
0005029d: R1 := pad:64[31:0[R1] & 31:0[R4]]
000502a4: R7 := pad:64[31:0[R11] ^ 31:0[R4]]
000502ab: R1 := pad:64[31:0[R1] ^ 31:0[R13]]
000502b2: R27 := pad:64[31:0[R4] + 31:0[R24]]
000502b9: R1 := pad:64[31:0[R1] + 31:0[R19]]
000502c0: R13 := pad:64[mem[R0 + 0x2C, el]:u32]
000502c7: R25 := mem[R31 + 0x68, el]:u64
000502ce: R1 := pad:64[24:0[R1].31:25[R1]]
000502d5: R7 := pad:64[31:0[R7] & 31:0[R1]]
000502dc: R30 := pad:64[31:0[R4] ^ 31:0[R1]]
000502e3: R7 := pad:64[31:0[R7] ^ 31:0[R11]]
000502ea: R11 := pad:64[31:0[R1] + 31:0[R17]]
000502f1: R7 := pad:64[31:0[R7] + 31:0[R15]]
000502f7: #651 := R0 + 0x34
000502fc: R15 := pad:64[mem[#651, el]:u32]
00050301: R19 := pad:64[mem[#651 + 4, el]:u32]
00050308: R7 := pad:64[20:0[R7].31:21[R7]]
0005030f: R30 := pad:64[31:0[R30] & 31:0[R7]]
00050315: R0 := R0 + 0x40
0005031c: R4 := pad:64[31:0[R30] ^ 31:0[R4]]
00050323: R30 := pad:64[31:0[R1] ^ 31:0[R7]]
0005032a: R4 := pad:64[31:0[R4] + 31:0[R6]]
00050331: R6 := pad:64[31:0[R7] + 31:0[R21]]
00050338: R4 := pad:64[12:0[R4].31:13[R4]]
0005033f: R30 := pad:64[31:0[R30] & 31:0[R4]]
00050346: R1 := pad:64[31:0[R30] ^ 31:0[R1]]
0005034d: R30 := pad:64[31:0[R7] ^ 31:0[R4]]
00050354: R1 := pad:64[31:0[R1] + 31:0[R27]]
0005035b: R27 := pad:64[31:0[R4] + 31:0[R13]]
00050362: R1 := pad:64[28:0[R1].31:29[R1]]
00050369: R30 := pad:64[31:0[R30] & 31:0[R1]]
00050370: R7 := pad:64[31:0[R30] ^ 31:0[R7]]
00050377: R30 := pad:64[31:0[R4] ^ 31:0[R1]]
0005037e: R7 := pad:64[31:0[R7] + 31:0[R11]]
00050385: R11 := pad:64[31:0[R1] + 31:0[R23]]
0005038c: R7 := pad:64[24:0[R7].31:25[R7]]
00050393: R30 := pad:64[31:0[R30] & 31:0[R7]]
0005039a: R4 := pad:64[31:0[R30] ^ 31:0[R4]]
000503a1: R30 := pad:64[31:0[R1] ^ 31:0[R7]]
000503a8: R4 := pad:64[31:0[R4] + 31:0[R6]]
000503af: R6 := pad:64[31:0[R7] + 31:0[R15]]
000503b6: R4 := pad:64[20:0[R4].31:21[R4]]
000503bd: R30 := pad:64[31:0[R30] & 31:0[R4]]
000503c4: R1 := pad:64[31:0[R30] ^ 31:0[R1]]
000503cb: R30 := pad:64[31:0[R7] ^ 31:0[R4]]
000503d2: R1 := pad:64[31:0[R1] + 31:0[R27]]
000503d9: R27 := pad:64[31:0[R4] + 31:0[R19]]
000503e0: R1 := pad:64[12:0[R1].31:13[R1]]
000503e7: R30 := pad:64[31:0[R30] & 31:0[R1]]
000503ee: R7 := pad:64[31:0[R30] ^ 31:0[R7]]
000503f5: R30 := pad:64[31:0[R4] ^ 31:0[R1]]
000503fc: R7 := pad:64[31:0[R7] + 31:0[R11]]
00050403: R11 := pad:64[mem[R0 - 4, el]:u32]
00050409: #652 := ~R0
0005040e: #653 := R25 + ~R0 + 1
00050414: VF := extend:65[#653] <> extend:65[R25] + extend:65[#652] + 1
0005041a: CF := pad:65[#653] <> pad:65[R25] + pad:65[#652] + 1
0005041e: ZF := #653 = 0
00050422: NF := 63:63[#653]
00050429: R25 := pad:64[31:0[R5] + 31:0[R2]]
00050430: R7 := pad:64[28:0[R7].31:29[R7]]
00050437: R30 := pad:64[31:0[R30] & 31:0[R7]]
0005043e: R4 := pad:64[31:0[R30] ^ 31:0[R4]]
00050445: R30 := pad:64[31:0[R1] ^ 31:0[R7]]
0005044c: R6 := pad:64[31:0[R4] + 31:0[R6]]
00050453: R4 := pad:64[31:0[R1] + 31:0[R11]]
0005045a: R6 := pad:64[24:0[R6].31:25[R6]]
00050461: R30 := pad:64[31:0[R30] & 31:0[R6]]
00050468: R1 := pad:64[31:0[R30] ^ 31:0[R1]]
0005046f: R30 := pad:64[31:0[R7] ^ 31:0[R6]]
00050476: R1 := pad:64[31:0[R1] + 31:0[R27]]
0005047d: R27 := pad:64[31:0[R5] + 31:0[R3]]
00050484: R5 := pad:64[20:0[R1].31:21[R1]]
0005048b: R30 := pad:64[31:0[R30] & 31:0[R5]]
00050492: R1 := pad:64[31:0[R6] | 31:0[R5]]
00050499: R30 := pad:64[31:0[R30] ^ 31:0[R7]]
000504a0: R4 := pad:64[31:0[R30] + 31:0[R4]]
000504a7: R30 := pad:64[31:0[R6] & 31:0[R5]]
000504ae: R4 := pad:64[12:0[R4].31:13[R4]]
000504b5: R1 := pad:64[31:0[R1] & 31:0[R4]]
000504bc: R1 := pad:64[31:0[R1] | 31:0[R30]]
000504c3: R30 := pad:64[31:0[R5] & 31:0[R4]]
000504ca: R7 := pad:64[31:0[R1] + 31:0[R7]]
000504d1: R1 := pad:64[31:0[R5] | 31:0[R4]]
000504d8: R28 := pad:64[31:0[R7] + 31:0[R28]]
000504df: R28 := pad:64[28:0[R28].31:29[R28]]
000504e6: R7 := pad:64[31:0[R1] & 31:0[R28]]
000504ed: R1 := pad:64[31:0[R4] | 31:0[R28]]
000504f4: R7 := pad:64[31:0[R7] | 31:0[R30]]
000504fb: R30 := pad:64[31:0[R24] + 31:0[R3]]
00050502: R6 := pad:64[31:0[R7] + 31:0[R6]]
00050509: R7 := pad:64[31:0[R4] & 31:0[R28]]
00050510: R27 := pad:64[31:0[R6] + 31:0[R27]]
00050517: R24 := pad:64[31:0[R24] + 31:0[R2]]
0005051e: R27 := pad:64[26:0[R27].31:27[R27]]
00050525: R1 := pad:64[31:0[R1] & 31:0[R27]]
0005052c: R6 := pad:64[31:0[R28] | 31:0[R27]]
00050533: R7 := pad:64[31:0[R1] | 31:0[R7]]
0005053a: R1 := pad:64[31:0[R28] & 31:0[R27]]
00050541: R5 := pad:64[31:0[R7] + 31:0[R5]]
00050548: R7 := pad:64[31:0[R23] + 31:0[R3]]
0005054f: R30 := pad:64[31:0[R5] + 31:0[R30]]
00050556: R23 := pad:64[31:0[R23] + 31:0[R2]]
0005055d: R30 := pad:64[22:0[R30].31:23[R30]]
00050564: R6 := pad:64[31:0[R6] & 31:0[R30]]
0005056b: R5 := pad:64[31:0[R27] | 31:0[R30]]
00050572: R1 := pad:64[31:0[R6] | 31:0[R1]]
00050579: R6 := pad:64[31:0[R27] & 31:0[R30]]
00050580: R4 := pad:64[31:0[R1] + 31:0[R4]]
00050587: R1 := pad:64[31:0[R18] + 31:0[R3]]
0005058e: R7 := pad:64[31:0[R4] + 31:0[R7]]
00050595: R18 := pad:64[31:0[R18] + 31:0[R2]]
0005059c: R7 := pad:64[18:0[R7].31:19[R7]]
000505a3: R5 := pad:64[31:0[R5] & 31:0[R7]]
000505aa: R4 := pad:64[31:0[R30] | 31:0[R7]]
000505b1: R6 := pad:64[31:0[R5] | 31:0[R6]]
000505b8: R5 := pad:64[31:0[R30] & 31:0[R7]]
000505bf: R28 := pad:64[31:0[R6] + 31:0[R28]]
000505c6: R6 := pad:64[31:0[R16] + 31:0[R3]]
000505cd: R1 := pad:64[31:0[R28] + 31:0[R1]]
000505d4: R16 := pad:64[31:0[R16] + 31:0[R2]]
000505db: R1 := pad:64[28:0[R1].31:29[R1]]
000505e2: R4 := pad:64[31:0[R4] & 31:0[R1]]
000505e9: R28 := pad:64[31:0[R7] | 31:0[R1]]
000505f0: R5 := pad:64[31:0[R4] | 31:0[R5]]
000505f7: R4 := pad:64[31:0[R7] & 31:0[R1]]
000505fe: R27 := pad:64[31:0[R5] + 31:0[R27]]
00050605: R5 := pad:64[31:0[R17] + 31:0[R3]]
0005060c: R6 := pad:64[31:0[R27] + 31:0[R6]]
00050613: R17 := pad:64[31:0[R17] + 31:0[R2]]
0005061a: R6 := pad:64[26:0[R6].31:27[R6]]
00050621: R28 := pad:64[31:0[R28] & 31:0[R6]]
00050628: R27 := pad:64[31:0[R1] | 31:0[R6]]
0005062f: R4 := pad:64[31:0[R28] | 31:0[R4]]
00050636: R28 := pad:64[31:0[R1] & 31:0[R6]]
0005063d: R30 := pad:64[31:0[R4] + 31:0[R30]]
00050644: R4 := pad:64[31:0[R15] + 31:0[R3]]
0005064b: R5 := pad:64[31:0[R30] + 31:0[R5]]
00050652: R15 := pad:64[31:0[R15] + 31:0[R2]]
00050659: R5 := pad:64[22:0[R5].31:23[R5]]
00050660: R27 := pad:64[31:0[R27] & 31:0[R5]]
00050667: R30 := pad:64[31:0[R6] | 31:0[R5]]
0005066e: R28 := pad:64[31:0[R27] | 31:0[R28]]
00050675: R27 := pad:64[31:0[R6] & 31:0[R5]]
0005067c: R7 := pad:64[31:0[R28] + 31:0[R7]]
00050683: R28 := pad:64[31:0[R22] + 31:0[R3]]
0005068a: R4 := pad:64[31:0[R7] + 31:0[R4]]
00050691: R22 := pad:64[31:0[R22] + 31:0[R2]]
00050698: R4 := pad:64[18:0[R4].31:19[R4]]
0005069f: R30 := pad:64[31:0[R30] & 31:0[R4]]
000506a6: R7 := pad:64[31:0[R5] | 31:0[R4]]
000506ad: R27 := pad:64[31:0[R30] | 31:0[R27]]
000506b4: R30 := pad:64[31:0[R5] & 31:0[R4]]
000506bb: R1 := pad:64[31:0[R27] + 31:0[R1]]
000506c2: R27 := pad:64[31:0[R20] + 31:0[R3]]
000506c9: R28 := pad:64[31:0[R1] + 31:0[R28]]
000506d0: R20 := pad:64[31:0[R20] + 31:0[R2]]
000506d7: R28 := pad:64[28:0[R28].31:29[R28]]
000506de: R7 := pad:64[31:0[R7] & 31:0[R28]]
000506e5: R1 := pad:64[31:0[R4] | 31:0[R28]]
000506ec: R30 := pad:64[31:0[R7] | 31:0[R30]]
000506f3: R7 := pad:64[31:0[R4] & 31:0[R28]]
000506fa: R6 := pad:64[31:0[R30] + 31:0[R6]]
00050701: R30 := pad:64[31:0[R21] + 31:0[R3]]
00050708: R27 := pad:64[31:0[R6] + 31:0[R27]]
0005070f: R21 := pad:64[31:0[R21] + 31:0[R2]]
00050716: R27 := pad:64[26:0[R27].31:27[R27]]
0005071d: R1 := pad:64[31:0[R1] & 31:0[R27]]
00050724: R6 := pad:64[31:0[R28] | 31:0[R27]]
0005072b: R7 := pad:64[31:0[R1] | 31:0[R7]]
00050732: R1 := pad:64[31:0[R28] & 31:0[R27]]
00050739: R5 := pad:64[31:0[R7] + 31:0[R5]]
00050740: R7 := pad:64[31:0[R19] + 31:0[R3]]
00050747: R30 := pad:64[31:0[R5] + 31:0[R30]]
0005074e: R19 := pad:64[31:0[R19] + 31:0[R2]]
00050755: R30 := pad:64[22:0[R30].31:23[R30]]
0005075c: R6 := pad:64[31:0[R6] & 31:0[R30]]
00050763: R5 := pad:64[31:0[R27] | 31:0[R30]]
0005076a: R1 := pad:64[31:0[R6] | 31:0[R1]]
00050771: R6 := pad:64[31:0[R27] & 31:0[R30]]
00050778: R4 := pad:64[31:0[R1] + 31:0[R4]]
0005077f: R1 := pad:64[31:0[R14] + 31:0[R3]]
00050786: R7 := pad:64[31:0[R4] + 31:0[R7]]
0005078d: R14 := pad:64[31:0[R14] + 31:0[R2]]
00050794: R7 := pad:64[18:0[R7].31:19[R7]]
0005079b: R5 := pad:64[31:0[R5] & 31:0[R7]]
000507a2: R4 := pad:64[31:0[R30] | 31:0[R7]]
000507a9: R6 := pad:64[31:0[R5] | 31:0[R6]]
000507b0: R5 := pad:64[31:0[R30] & 31:0[R7]]
000507b7: R28 := pad:64[31:0[R6] + 31:0[R28]]
000507be: R6 := pad:64[31:0[R12] + 31:0[R3]]
000507c5: R1 := pad:64[31:0[R28] + 31:0[R1]]
000507cc: R12 := pad:64[31:0[R12] + 31:0[R2]]
000507d3: R1 := pad:64[28:0[R1].31:29[R1]]
000507da: R4 := pad:64[31:0[R4] & 31:0[R1]]
000507e1: R28 := pad:64[31:0[R7] | 31:0[R1]]
000507e8: R5 := pad:64[31:0[R4] | 31:0[R5]]
000507ef: R4 := pad:64[31:0[R7] & 31:0[R1]]
000507f6: R27 := pad:64[31:0[R5] + 31:0[R27]]
000507fd: R5 := pad:64[31:0[R13] + 31:0[R3]]
00050804: R6 := pad:64[31:0[R27] + 31:0[R6]]
0005080b: R13 := pad:64[31:0[R13] + 31:0[R2]]
00050812: R6 := pad:64[26:0[R6].31:27[R6]]
00050819: R28 := pad:64[31:0[R28] & 31:0[R6]]
00050820: R27 := pad:64[31:0[R1] | 31:0[R6]]
00050827: R4 := pad:64[31:0[R28] | 31:0[R4]]
0005082e: R28 := pad:64[31:0[R1] & 31:0[R6]]
00050835: R30 := pad:64[31:0[R4] + 31:0[R30]]
0005083c: R4 := pad:64[31:0[R11] + 31:0[R3]]
00050843: R5 := pad:64[31:0[R30] + 31:0[R5]]
0005084a: R11 := pad:64[31:0[R11] + 31:0[R2]]
00050851: R5 := pad:64[22:0[R5].31:23[R5]]
00050858: R27 := pad:64[31:0[R27] & 31:0[R5]]
0005085f: R30 := pad:64[31:0[R6] ^ 31:0[R5]]
00050866: R28 := pad:64[31:0[R27] | 31:0[R28]]
0005086d: R27 := pad:64[mem[R31 + 0x64, el]:u32]
00050874: R7 := pad:64[31:0[R28] + 31:0[R7]]
0005087b: R4 := pad:64[31:0[R7] + 31:0[R4]]
00050882: R4 := pad:64[18:0[R4].31:19[R4]]
00050889: R30 := pad:64[31:0[R30] ^ 31:0[R4]]
00050890: R7 := pad:64[31:0[R5] ^ 31:0[R4]]
00050897: R1 := pad:64[31:0[R30] + 31:0[R1]]
0005089e: R1 := pad:64[31:0[R1] + 31:0[R27]]
000508a5: R1 := pad:64[28:0[R1].31:29[R1]]
000508ac: R7 := pad:64[31:0[R7] ^ 31:0[R1]]
000508b3: R27 := pad:64[31:0[R4] ^ 31:0[R1]]
000508ba: R6 := pad:64[31:0[R7] + 31:0[R6]]
000508c1: R24 := pad:64[31:0[R6] + 31:0[R24]]
000508c8: R24 := pad:64[22:0[R24].31:23[R24]]
000508cf: R6 := pad:64[31:0[R27] ^ 31:0[R24]]
000508d6: R7 := pad:64[31:0[R1] ^ 31:0[R24]]
000508dd: R5 := pad:64[31:0[R6] + 31:0[R5]]
000508e4: R5 := pad:64[31:0[R5] + 31:0[R25]]
000508eb: R5 := pad:64[20:0[R5].31:21[R5]]
000508f2: R7 := pad:64[31:0[R7] ^ 31:0[R5]]
000508f9: R6 := pad:64[31:0[R24] ^ 31:0[R5]]
00050900: R4 := pad:64[31:0[R7] + 31:0[R4]]
00050907: R23 := pad:64[31:0[R4] + 31:0[R23]]
0005090e: R23 := pad:64[16:0[R23].31:17[R23]]
00050915: R6 := pad:64[31:0[R6] ^ 31:0[R23]]
0005091c: R4 := pad:64[31:0[R5] ^ 31:0[R23]]
00050923: R1 := pad:64[31:0[R6] + 31:0[R1]]
0005092a: R22 := pad:64[31:0[R1] + 31:0[R22]]
00050931: R22 := pad:64[28:0[R22].31:29[R22]]
00050938: R1 := pad:64[31:0[R4] ^ 31:0[R22]]
0005093f: R4 := pad:64[31:0[R23] ^ 31:0[R22]]
00050946: R24 := pad:64[31:0[R1] + 31:0[R24]]
0005094d: R21 := pad:64[31:0[R24] + 31:0[R21]]
00050954: R21 := pad:64[22:0[R21].31:23[R21]]
0005095b: R4 := pad:64[31:0[R4] ^ 31:0[R21]]
00050962: R1 := pad:64[31:0[R22] ^ 31:0[R21]]
00050969: R5 := pad:64[31:0[R4] + 31:0[R5]]
00050970: R20 := pad:64[31:0[R5] + 31:0[R20]]
00050977: R5 := pad:64[mem[R31 + 0x60, el]:u32]
0005097e: R20 := pad:64[20:0[R20].31:21[R20]]
00050985: R1 := pad:64[31:0[R1] ^ 31:0[R20]]
0005098c: R4 := pad:64[31:0[R21] ^ 31:0[R20]]
00050993: R23 := pad:64[31:0[R1] + 31:0[R23]]
0005099a: R19 := pad:64[31:0[R23] + 31:0[R19]]
000509a1: R19 := pad:64[16:0[R19].31:17[R19]]
000509a8: R4 := pad:64[31:0[R4] ^ 31:0[R19]]
000509af: R1 := pad:64[31:0[R20] ^ 31:0[R19]]
000509b6: R22 := pad:64[31:0[R4] + 31:0[R22]]
000509bd: R18 := pad:64[31:0[R22] + 31:0[R18]]
000509c4: R18 := pad:64[28:0[R18].31:29[R18]]
000509cb: R1 := pad:64[31:0[R1] ^ 31:0[R18]]
000509d2: R4 := pad:64[31:0[R19] ^ 31:0[R18]]
000509d9: R21 := pad:64[31:0[R1] + 31:0[R21]]
000509e0: R17 := pad:64[31:0[R21] + 31:0[R17]]
000509e7: R17 := pad:64[22:0[R17].31:23[R17]]
000509ee: R4 := pad:64[31:0[R4] ^ 31:0[R17]]
000509f5: R1 := pad:64[31:0[R18] ^ 31:0[R17]]
000509fc: R20 := pad:64[31:0[R4] + 31:0[R20]]
00050a03: R16 := pad:64[31:0[R20] + 31:0[R16]]
00050a0a: R16 := pad:64[20:0[R16].31:21[R16]]
00050a11: R1 := pad:64[31:0[R1] ^ 31:0[R16]]
00050a18: R4 := pad:64[31:0[R17] ^ 31:0[R16]]
00050a1f: R19 := pad:64[31:0[R1] + 31:0[R19]]
00050a26: R15 := pad:64[31:0[R19] + 31:0[R15]]
00050a2d: R15 := pad:64[16:0[R15].31:17[R15]]
00050a34: R4 := pad:64[31:0[R4] ^ 31:0[R15]]
00050a3b: R1 := pad:64[31:0[R16] ^ 31:0[R15]]
00050a42: R4 := pad:64[31:0[R4] + 31:0[R18]]
00050a49: R14 := pad:64[31:0[R4] + 31:0[R14]]
00050a50: R14 := pad:64[28:0[R14].31:29[R14]]
00050a57: R1 := pad:64[31:0[R1] ^ 31:0[R14]]
00050a5e: R4 := pad:64[31:0[R15] ^ 31:0[R14]]
00050a65: R1 := pad:64[31:0[R1] + 31:0[R17]]
00050a6c: R5 := pad:64[31:0[R14] + 31:0[R5]]
00050a73: R13 := pad:64[31:0[R1] + 31:0[R13]]
00050a7b: mem := mem with [R31 + 0x60, el]:u32 <- 31:0[R5]
00050a82: R13 := pad:64[22:0[R13].31:23[R13]]
00050a89: R4 := pad:64[31:0[R4] ^ 31:0[R13]]
00050a90: R1 := pad:64[31:0[R14] ^ 31:0[R13]]
00050a97: R4 := pad:64[31:0[R4] + 31:0[R16]]
00050a9e: R10 := pad:64[31:0[R13] + 31:0[R10]]
00050aa5: R12 := pad:64[31:0[R4] + 31:0[R12]]
00050aac: R12 := pad:64[20:0[R12].31:21[R12]]
00050ab3: R1 := pad:64[31:0[R1] ^ 31:0[R12]]
00050aba: R9 := pad:64[31:0[R12] + 31:0[R9]]
00050ac1: R1 := pad:64[31:0[R1] + 31:0[R15]]
00050ac7: #654 := R26 + 8
00050acd: mem := mem with [#654, el]:u32 <- 31:0[R9]
00050ad3: mem := mem with [#654 + 4, el]:u32 <- 31:0[R10]
00050ada: R11 := pad:64[31:0[R1] + 31:0[R11]]
00050ae1: R11 := pad:64[16:0[R11].31:17[R11]]
00050ae8: R8 := pad:64[31:0[R11] + 31:0[R8]]
00050af0: mem := mem with [R26, el]:u32 <- 31:0[R5]
00050af6: mem := mem with [R26 + 4, el]:u32 <- 31:0[R8]
00050afc: when CF & ~ZF goto %00050137
0006cdab: goto %00050b00

00050b00:
00050b04: #655 := R31 + 0x10
00050b09: R19 := mem[#655, el]:u64
00050b0e: R20 := mem[#655 + 8, el]:u64
00050b14: #656 := R31 + 0x20
00050b19: R21 := mem[#656, el]:u64
00050b1e: R22 := mem[#656 + 8, el]:u64
00050b24: #657 := R31 + 0x30
00050b29: R23 := mem[#657, el]:u64
00050b2e: R24 := mem[#657 + 8, el]:u64
00050b34: #658 := R31 + 0x40
00050b39: R25 := mem[#658, el]:u64
00050b3e: R26 := mem[#658 + 8, el]:u64
00050b44: #659 := R31 + 0x50
00050b49: R27 := mem[#659, el]:u64
00050b4e: R28 := mem[#659 + 8, el]:u64
0006cdac: goto %00048455

00048455:
0004845f: R29 := mem[R31, el]:u64
00048464: R30 := mem[R31 + 8, el]:u64
00048468: R31 := R31 + 0x70
0004846d: call R30 with noreturn

0006cdad: sub md4_process_bytes(md4_process_bytes_result)
0006d122: md4_process_bytes_result :: out u32 = low:32[R0]

000486bf:
000486c3: #145 := R31 - 0x40
000486c9: mem := mem with [#145, el]:u64 <- R29
000486cf: mem := mem with [#145 + 8, el]:u64 <- R30
000486d3: R31 := #145
000486d9: R29 := R31
000486df: #146 := R31 + 0x10
000486e5: mem := mem with [#146, el]:u64 <- R19
000486eb: mem := mem with [#146 + 8, el]:u64 <- R20
000486f1: R19 := R0
000486f8: R0 := pad:64[mem[R2 + 0x18, el]:u32]
000486fe: #147 := R31 + 0x20
00048704: mem := mem with [#147, el]:u64 <- R21
0004870a: mem := mem with [#147 + 8, el]:u64 <- R22
00048710: R21 := R2
00048716: R22 := R1
0004871d: when 31:0[R0] <> 0 goto %0004871b
0006cdae: goto %00048843

0004871b:
00048724: R20 := pad:64[31:0[R0]]
0004872a: #148 := R31 + 0x30
00048730: mem := mem with [#148, el]:u64 <- R23
00048736: mem := mem with [#148 + 8, el]:u64 <- R24
0004873b: R23 := 0x80
00048742: R23 := R23 + ~R20 + 1
00048748: R24 := R2 + 0x1C
0004874e: #149 := ~R1
00048753: #150 := R23 + ~R1 + 1
00048759: VF := extend:65[#150] <> extend:65[R23] + extend:65[#149] + 1
0004875f: CF := pad:65[#150] <> pad:65[R23] + pad:65[#149] + 1
00048763: ZF := #150 = 0
00048767: NF := 63:63[#150]
0004876e: R0 := R24 + R20
0004877d: when ~(CF & ~ZF) goto %00048775
0004877e: goto %00048779

00048779:
0004877a: R23 := R1
00048780: goto %0004877c

00048775:
00048776: R23 := R23
0004877f: goto %0004877c

0004877c:
00048786: R1 := R19
0004878c: R2 := R23
00048791: R30 := 0x8724
00048793: call @memcpy with return %00048795

00048795:
0004879a: R1 := pad:64[mem[R21 + 0x18, el]:u32]
000487a1: R1 := pad:64[31:0[R1] + 31:0[R23]]
000487a9: mem := mem with [R21 + 0x18, el]:u32 <- 31:0[R1]
000487af: #151 := 31:0[R1] - 0x40
000487b4: VF := extend:33[#151] <> extend:33[31:0[R1]] - 0x40
000487b9: CF := pad:33[#151] <> pad:33[31:0[R1]] + 0xFFFFFFC0
000487bd: ZF := #151 = 0
000487c1: NF := 31:31[#151]
000487c8: when CF & ~ZF goto %000487c6
0006cdaf: goto %00048821

000487c6:
000487cf: R2 := R21
000487d5: R0 := R24
000487db: R1 := 0.31:6[R1].0
000487e0: R30 := 0x8780
000487e2: call @md4_process_block with return %000487e4

000487e4:
000487e9: R2 := pad:64[mem[R21 + 0x18, el]:u32]
000487f0: R0 := R20 + R23
000487f6: R1 := 63:6[R0].0
000487fc: R0 := R24
00048802: R2 := pad:64[0.5:0[R2]]
0004880a: mem := mem with [R21 + 0x18, el]:u32 <- 31:0[R2]
00048811: R1 := R24 + R1
00048817: R2 := 0.5:0[R2]
0004881c: R30 := 0x87A4
0004881e: call @memcpy with return %00048820

00048820:
00048823: goto %00048821

00048821:
00048829: R19 := R19 + R23
00048830: R22 := R22 + ~R23 + 1
00048836: #152 := R31 + 0x30
0004883b: R23 := mem[#152, el]:u64
00048840: R24 := mem[#152 + 8, el]:u64
00048845: goto %00048843

00048843:
0004884a: #153 := R22 - 0x3F
0004884f: VF := extend:65[#153] <> extend:65[R22] - 0x3F
00048854: CF := pad:65[#153] <> pad:65[R22] + 0xFFFFFFFFFFFFFFC1
00048858: ZF := #153 = 0
0004885c: NF := 63:63[#153]
00048863: when ~(CF & ~ZF) goto %00048861
0006cdb0: goto %0004ff5f

0004ff5f:
0004ff62: VF := 0
0004ff65: CF := 0
0004ff69: ZF := (0.1:0[R19]) = 0
0004ff6c: NF := 0
0004ff71: when ZF goto %00048960
0006cdb1: goto %0004ff75

00048960:
00048964: R1 := 63:6[R22].0
0004896a: R0 := R19
00048970: R22 := 0.5:0[R22]
00048977: R19 := R19 + R1
0004897d: R2 := R21
00048982: R30 := 0x86E4
00048984: call @md4_process_block with return %00048861

00048861:
0004886b: when R22 <> 0 goto %00048869
0006cdb2: goto %0004ff2a

00048869:
00048872: R20 := R21 + 0x1C
00048878: #154 := R31 + 0x30
0004887e: mem := mem with [#154, el]:u64 <- R23
00048884: mem := mem with [#154 + 8, el]:u64 <- R24
0004888a: R23 := R19
0004888f: goto %0004888d

0004ff2a:
0004ff2e: #632 := R31 + 0x10
0004ff33: R19 := mem[#632, el]:u64
0004ff38: R20 := mem[#632 + 8, el]:u64
0004ff3e: #633 := R31 + 0x20
0004ff43: R21 := mem[#633, el]:u64
0004ff48: R22 := mem[#633 + 8, el]:u64
0004ff4f: R29 := mem[R31, el]:u64
0004ff54: R30 := mem[R31 + 8, el]:u64
0004ff58: R31 := R31 + 0x40
0004ff5d: call R30 with noreturn

0004ff75:
0004ff79: #634 := R31 + 0x30
0004ff7f: mem := mem with [#634, el]:u64 <- R23
0004ff85: mem := mem with [#634 + 8, el]:u64 <- R24
0004ff8b: #635 := R22 - 0x40
0004ff90: VF := extend:65[#635] <> extend:65[R22] - 0x40
0004ff95: CF := pad:65[#635] <> pad:65[R22] + 0xFFFFFFFFFFFFFFC0
0004ff99: ZF := #635 = 0
0004ff9d: NF := 63:63[#635]
0004ffa3: R20 := R21 + 0x1C
0004ffa9: when ZF goto %0004ffa7
0006cdb3: goto %0004ffb6

0004ffa7:
0004ffb0: R23 := R19
0004ffb4: goto %0004888d

0004ffb6:
0004ffba: R24 := R22 - 0x41
0004ffc1: R24 := 0.57:0[R24 >> 6 | R24 << 0x3A]
0004ffc7: R23 := R24 + 1
0004ffce: R23 := R19 + (R23 << 6)
0006cdb4: goto %0004ffd2

0004ffd2:
0004ffd7: R0 := mem[R19, el]:u64
0004ffdc: R1 := mem[R19 + 8, el]:u64
0004ffe4: mem := mem with [R20, el]:u64 <- R0
0004ffea: mem := mem with [R20 + 8, el]:u64 <- R1
0004fff0: R2 := R21
0004fff6: #636 := R19 + 0x10
0004fffb: R0 := mem[#636, el]:u64
00050000: R1 := mem[#636 + 8, el]:u64
00050006: #637 := R20 + 0x10
0005000c: mem := mem with [#637, el]:u64 <- R0
00050012: mem := mem with [#637 + 8, el]:u64 <- R1
00050018: #638 := R19 + 0x20
0005001d: R4 := mem[#638, el]:u64
00050022: R5 := mem[#638 + 8, el]:u64
00050028: #639 := R20 + 0x20
0005002e: mem := mem with [#639, el]:u64 <- R4
00050034: mem := mem with [#639 + 8, el]:u64 <- R5
00050039: R1 := 0x40
0005003f: #640 := R19 + 0x30
00050044: R4 := mem[#640, el]:u64
00050049: R5 := mem[#640 + 8, el]:u64
0005004f: #641 := R20 + 0x30
00050055: mem := mem with [#641, el]:u64 <- R4
0005005b: mem := mem with [#641 + 8, el]:u64 <- R5
00050062: R19 := R19 + R1
00050068: R0 := R20
0005006d: R30 := 0x8684
0005006f: call @md4_process_block with return %00050071

00050071:
00050075: #642 := ~R23
0005007a: #643 := R19 + ~R23 + 1
00050080: VF := extend:65[#643] <> extend:65[R19] + extend:65[#642] + 1
00050086: CF := pad:65[#643] <> pad:65[R19] + pad:65[#642] + 1
0005008a: ZF := #643 = 0
0005008e: NF := 63:63[#643]
00050093: when ZF <> 1 goto %0004ffd2
0006cdb5: goto %00050097

00050097:
0005009b: R22 := R22 - 0x40
000500a2: R22 := R22 + ~(R24 << 6) + 1
0006cdb6: goto %0004888d

0004888d:
00048895: R19 := pad:64[mem[R21 + 0x18, el]:u32]
0004889b: R1 := R23
000488a1: R2 := R22
000488a8: R0 := R20 + R19
000488af: R19 := R19 + R22
000488b4: R30 := 0x86AC
000488b6: call @memcpy with return %000488b8

000488b8:
000488bc: #155 := R19 - 0x3F
000488c1: VF := extend:65[#155] <> extend:65[R19] - 0x3F
000488c6: CF := pad:65[#155] <> pad:65[R19] + 0xFFFFFFFFFFFFFFC1
000488ca: ZF := #155 = 0
000488ce: NF := 63:63[#155]
000488d5: when CF & ~ZF goto %000488d3
0006cdb7: goto %00048910

000488d3:
000488dc: R2 := R21
000488e2: R0 := R20
000488e8: R19 := R19 - 0x40
000488ed: R1 := 0x40
000488f2: R30 := 0x875C
000488f4: call @md4_process_block with return %000488f6

000488f6:
000488fa: R0 := R20
00048900: R2 := R19
00048906: R1 := R21 + 0x5C
0004890b: R30 := 0x876C
0004890d: call @memcpy with return %0004890f

0004890f:
00048912: goto %00048910

00048910:
00048917: #156 := R31 + 0x30
0004891c: R23 := mem[#156, el]:u64
00048921: R24 := mem[#156 + 8, el]:u64
00048929: mem := mem with [R21 + 0x18, el]:u32 <- 31:0[R19]
0004892f: #157 := R31 + 0x10
00048934: R19 := mem[#157, el]:u64
00048939: R20 := mem[#157 + 8, el]:u64
0004893f: #158 := R31 + 0x20
00048944: R21 := mem[#158, el]:u64
00048949: R22 := mem[#158 + 8, el]:u64
00048950: R29 := mem[R31, el]:u64
00048955: R30 := mem[R31 + 8, el]:u64
00048959: R31 := R31 + 0x40
0004895e: call R30 with noreturn

0006cdb8: sub md4_read_ctx(md4_read_ctx_result)
0006d123: md4_read_ctx_result :: out u32 = low:32[R0]

00048496:
0004849a: R2 := R0
000484a0: R0 := R1
000484a7: R1 := pad:64[mem[R2, el]:u32]
000484af: mem := mem with [R0, el]:u32 <- 31:0[R1]
000484b6: R1 := pad:64[mem[R2 + 4, el]:u32]
000484be: mem := mem with [R0 + 4, el]:u32 <- 31:0[R1]
000484c5: R1 := pad:64[mem[R2 + 8, el]:u32]
000484cd: mem := mem with [R0 + 8, el]:u32 <- 31:0[R1]
000484d4: R1 := pad:64[mem[R2 + 0xC, el]:u32]
000484dc: mem := mem with [R0 + 0xC, el]:u32 <- 31:0[R1]
000484e1: call R30 with noreturn

0006cdb9: sub md4_stream(md4_stream_result)
0006d124: md4_stream_result :: out u32 = low:32[R0]

00048986:
00048989: R12 := 0x1140
00048990: R31 := R31 + ~R12 + 1
00048998: mem := mem with [R31, el]:u64 <- R29
0004899e: mem := mem with [R31 + 8, el]:u64 <- R30
000489a4: R29 := R31
000489aa: #159 := R31 + 0x30
000489b0: mem := mem with [#159, el]:u64 <- R23
000489b6: mem := mem with [#159 + 8, el]:u64 <- R24
000489bb: R23 := 0x27000
000489c1: R24 := R1
000489c6: R1 := 0x11000
000489cc: #160 := R31 + 0x10
000489d2: mem := mem with [#160, el]:u64 <- R19
000489d8: mem := mem with [#160 + 8, el]:u64 <- R20
000489de: R20 := R0
000489e5: R0 := mem[R23 + 0xFB8, el]:u64
000489eb: #161 := R31 + 0x20
000489f1: mem := mem with [#161, el]:u64 <- R21
000489f7: mem := mem with [#161 + 8, el]:u64 <- R22
000489fd: R21 := R31 + 0xF0
00048a04: V0 := mem[R1 + 0x8D0, el]:u128
00048a0b: R1 := mem[R0, el]:u64
00048a13: mem := mem with [R31 + 0x1138, el]:u64 <- R1
00048a18: R1 := 0
00048a20: mem := mem with [R31 + 0x40, el]:u64 <- R25
00048a26: R25 := R31 + 0x50
00048a2b: R22 := 0x1000
00048a32: mem := mem with [R31 + 0x60, el]:u64 <- 0
00048a39: mem := mem with [R31 + 0x68, el]:u32 <- 0
00048a41: mem := mem with [R31 + 0x50, el]:u128 <- V0
0006cdba: goto %00048a43

00048a43:
00048a46: R19 := 0
00048a4b: goto %00048a49

00048a49:
00048a51: R2 := R22 + ~R19 + 1
00048a58: R0 := R21 + R19
00048a5e: R3 := R20
00048a63: R1 := 1
00048a68: R30 := 0x8848
00048a6b: call @fread with return %00048a6d

00048a6d:
00048a72: R19 := R19 + R0
00048a78: #162 := R19 - 0x1000
00048a7d: VF := extend:65[#162] <> extend:65[R19] - 0x1000
00048a82: CF := pad:65[#162] <> pad:65[R19] + 0xFFFFFFFFFFFFF000
00048a86: ZF := #162 = 0
00048a8a: NF := 63:63[#162]
00048a90: when ZF <> 1 goto %00048a8e
0006cdbb: goto %0004ff0d

0004ff0d:
0004ff11: R1 := R19
0004ff17: R2 := R25
0004ff1d: R0 := R21
0004ff22: R30 := 0x8864
0004ff24: call @md4_process_block with return %0004ff26

0004ff26:
0004ff28: goto %00048a43

00048a8e:
00048a97: when R0 = 0 goto %00048a95
0006cdbc: goto %0004fef8

00048a95:
00048a9e: R0 := R20
00048aa3: R30 := 0x8870
00048aa6: call @ferror with return %00048aa8

00048aa8:
00048aac: R1 := pad:64[31:0[R0]]
00048ab1: R0 := 1
00048ab8: when 31:0[R1] <> 0 goto %00048ab6
0006cdbd: goto %0004feea

0004fef8:
0004fefc: R0 := R20
0004ff01: R30 := 0x8830
0004ff03: call @feof with return %0004ff05

0004ff05:
0004ff09: when 31:0[R0] <> 0 goto %0004feea
0006cdbe: goto %00048a49

0004feea:
0004feee: R20 := R31 + 0x50
0004fef4: when R19 <> 0 goto %0004feb5
0006cdbf: goto %0004fecf

0004feb5:
0004feb9: R1 := R19
0004febf: R0 := R21
0004fec5: R2 := R20
0004feca: R30 := 0x88DC
0004fecc: call @md4_process_bytes with return %0004fece

0004fece:
0004fed1: goto %0004fecf

0004fecf:
0004fed6: R1 := R24
0004fedc: R0 := R20
0004fee1: R30 := 0x8890
0004fee3: call @md4_finish_ctx with return %0004fee5

0004fee5:
0004fee8: R0 := 0
0006cdc0: goto %00048ab6

00048ab6:
00048ac0: R23 := mem[R23 + 0xFB8, el]:u64
00048ac7: R1 := mem[R31 + 0x1138, el]:u64
00048ace: R2 := mem[R23, el]:u64
00048ad4: #163 := ~R2
00048ad9: #164 := R1 + ~R2 + 1
00048adf: VF := extend:65[#164] <> extend:65[R1] + extend:65[#163] + 1
00048ae5: CF := pad:65[#164] <> pad:65[R1] + pad:65[#163] + 1
00048ae9: ZF := #164 = 0
00048aed: NF := 63:63[#164]
00048af1: R1 := #164
00048af6: R2 := 0
00048afc: when ZF <> 1 goto %00048afa
0006cdc1: goto %0004fe61

00048afa:
00048b02: R30 := 0x88E4
00048b04: call @__stack_chk_fail with return %00048b06

00048b06:
0006cdc2: call @md4_buffer with noreturn

0004fe61:
0004fe64: R12 := 0x1140
0004fe6b: R29 := mem[R31, el]:u64
0004fe70: R30 := mem[R31 + 8, el]:u64
0004fe76: #629 := R31 + 0x10
0004fe7b: R19 := mem[#629, el]:u64
0004fe80: R20 := mem[#629 + 8, el]:u64
0004fe86: #630 := R31 + 0x20
0004fe8b: R21 := mem[#630, el]:u64
0004fe90: R22 := mem[#630 + 8, el]:u64
0004fe96: #631 := R31 + 0x30
0004fe9b: R23 := mem[#631, el]:u64
0004fea0: R24 := mem[#631 + 8, el]:u64
0004fea7: R25 := mem[R31 + 0x40, el]:u64
0004feae: R31 := R31 + R12
0004feb3: call R30 with noreturn

0006cdc3: sub md5_buffer(md5_buffer_result)
0006d125: md5_buffer_result :: out u32 = low:32[R0]

00049926:
0004992a: #227 := R31 - 0xF0
00049930: mem := mem with [#227, el]:u64 <- R29
00049936: mem := mem with [#227 + 8, el]:u64 <- R30
0004993a: R31 := #227
0004993f: R3 := 0x11000
00049945: R29 := R31
0004994b: #228 := R31 + 0x10
00049951: mem := mem with [#228, el]:u64 <- R19
00049957: mem := mem with [#228 + 8, el]:u64 <- R20
0004995c: R19 := 0x27000
00049962: R20 := R2
00049969: V0 := mem[R3 + 0x8D0, el]:u128
0004996f: #229 := R31 + 0x20
00049975: mem := mem with [#229, el]:u64 <- R21
0004997b: mem := mem with [#229 + 8, el]:u64 <- R22
00049981: R22 := R31 + 0x40
00049988: R3 := mem[R19 + 0xFB8, el]:u64
0004998e: R2 := R22
00049996: mem := mem with [R31 + 0x40, el]:u128 <- V0
0004999b: R21 := 0x40
000499a2: R4 := mem[R3, el]:u64
000499aa: mem := mem with [R31 + 0xE8, el]:u64 <- R4
000499af: R4 := 0
000499b7: mem := mem with [R31 + 0x30, el]:u64 <- R23
000499be: mem := mem with [R31 + 0x50, el]:u64 <- 0
000499c5: mem := mem with [R31 + 0x58, el]:u32 <- 0
000499ca: R30 := 0xA098
000499cc: call @md5_process_bytes with return %000499ce

000499ce:
000499d2: #230 := R31 + 0x54
000499d7: R6 := pad:64[mem[#230, el]:u32]
000499dc: R0 := pad:64[mem[#230 + 4, el]:u32]
000499e1: R3 := 0x80
000499e6: R1 := 0x78
000499eb: R2 := 0x38
000499f1: #231 := 31:0[R0] - 0x38
000499f6: VF := extend:33[#231] <> extend:33[31:0[R0]] - 0x38
000499fb: CF := pad:33[#231] <> pad:33[31:0[R0]] + 0xFFFFFFC8
000499ff: ZF := #231 = 0
00049a03: NF := 31:31[#231]
00049a08: R4 := 0xF
00049a16: when CF <> 1 goto %00049a0e
00049a17: goto %00049a12

00049a12:
00049a13: R21 := R3
00049a19: goto %00049a15

00049a0e:
00049a0f: R21 := R21
00049a18: goto %00049a15

00049a15:
00049a20: R3 := pad:64[mem[R31 + 0x50, el]:u32]
00049a2e: when CF <> 1 goto %00049a26
00049a2f: goto %00049a2a

00049a2a:
00049a2b: R2 := R1
00049a31: goto %00049a2d

00049a26:
00049a27: R2 := R2
00049a30: goto %00049a2d

00049a2d:
00049a36: R1 := 0x1F
00049a3b: R5 := 0xE
00049a49: when CF <> 1 goto %00049a41
00049a4a: goto %00049a45

00049a45:
00049a46: R4 := R1
00049a4c: goto %00049a48

00049a41:
00049a42: R4 := R4
00049a4b: goto %00049a48

00049a48:
00049a51: R1 := 0x1E
00049a5f: when CF <> 1 goto %00049a57
00049a60: goto %00049a5b

00049a5b:
00049a5c: R5 := R1
00049a62: goto %00049a5e

00049a57:
00049a58: R5 := R5
00049a61: goto %00049a5e

00049a5e:
00049a69: #232 := 31:0[R0] + 31:0[R3]
00049a6f: VF := extend:33[#232] <> extend:33[31:0[R0]] + extend:33[31:0[R3]]
00049a75: CF := pad:33[#232] <> pad:33[31:0[R0]] + pad:33[31:0[R3]]
00049a79: ZF := #232 = 0
00049a7d: NF := 31:31[#232]
00049a81: R3 := pad:64[#232]
00049a89: mem := mem with [R31 + 0x50, el]:u32 <- 31:0[R3]
00049a8f: when CF <> 1 goto %00049a8d
0006cdc4: goto %0004dcd0

0004dcd0:
0004dcd4: R6 := pad:64[31:0[R6] + 1]
0004dcdc: mem := mem with [R31 + 0x54, el]:u32 <- 31:0[R6]
0006cdc5: goto %00049a8d

00049a8d:
00049a96: R7 := R31 + 0x4C
00049a9c: R5 := R5 + 4
00049aa3: R8 := pad:64[31:3[31:0[R3] >> 0x1D | 31:0[R3] << 3].0]
00049aa9: R4 := R4 + 4
00049aaf: R0 := pad:64[31:0[R0]]
00049ab6: R3 := pad:64[28:0[R6].31:29[R3]]
00049abc: R23 := R22 + 0x1C
00049ac1: R1 := 0x11000
00049ac7: R1 := R1 + 0x8E0
00049ad0: mem := mem with [R7 + (61:0[R5].0), el]:u32 <- 31:0[R8]
00049ad7: R2 := R2 + ~R0 + 1
00049add: R1 := R1 + 0xA90
00049ae4: R0 := R23 + R0
00049aed: mem := mem with [R7 + (61:0[R4].0), el]:u32 <- 31:0[R3]
00049af2: R30 := 0xA120
00049af4: call @memcpy with return %00049af6

00049af6:
00049afa: R1 := R21
00049b00: R0 := R23
00049b06: R2 := R22
00049b0b: R30 := 0xA130
00049b0d: call @md5_process_block with return %00049b0f

00049b0f:
00049b14: V0 := mem[R31 + 0x40, el]:u128
00049b1b: R19 := mem[R19 + 0xFB8, el]:u64
00049b22: R0 := mem[R31 + 0xE8, el]:u64
00049b29: R1 := mem[R19, el]:u64
00049b2f: #233 := ~R1
00049b34: #234 := R0 + ~R1 + 1
00049b3a: VF := extend:65[#234] <> extend:65[R0] + extend:65[#233] + 1
00049b40: CF := pad:65[#234] <> pad:65[R0] + pad:65[#233] + 1
00049b44: ZF := #234 = 0
00049b48: NF := 63:63[#234]
00049b4c: R0 := #234
00049b51: R1 := 0
00049b59: mem := mem with [R20, el]:u128 <- V0
00049b5f: when ZF <> 1 goto %00049b5d
0006cdc6: goto %0004dc8e

00049b5d:
00049b65: R30 := 0xA16C
00049b67: call @__stack_chk_fail with return %00049b69

00049b69:
0006cdc7: call @config_open with noreturn

0004dc8e:
0004dc92: R0 := R20
0004dc98: #539 := R31 + 0x10
0004dc9d: R19 := mem[#539, el]:u64
0004dca2: R20 := mem[#539 + 8, el]:u64
0004dca8: #540 := R31 + 0x20
0004dcad: R21 := mem[#540, el]:u64
0004dcb2: R22 := mem[#540 + 8, el]:u64
0004dcb9: R23 := mem[R31 + 0x30, el]:u64
0004dcc0: R29 := mem[R31, el]:u64
0004dcc5: R30 := mem[R31 + 8, el]:u64
0004dcc9: R31 := R31 + 0xF0
0004dcce: call R30 with noreturn

0006cdc8: sub md5_finish_ctx(md5_finish_ctx_result)
0006d126: md5_finish_ctx_result :: out u32 = low:32[R0]

00048f02:
00048f06: #184 := R31 - 0x30
00048f0c: mem := mem with [#184, el]:u64 <- R29
00048f12: mem := mem with [#184 + 8, el]:u64 <- R30
00048f16: R31 := #184
00048f1b: R9 := 0x80
00048f20: R2 := 0x38
00048f26: R29 := R31
00048f2d: R3 := pad:64[mem[R0 + 0x18, el]:u32]
00048f32: R8 := 0x78
00048f38: #185 := R31 + 0x10
00048f3e: mem := mem with [#185, el]:u64 <- R19
00048f44: mem := mem with [#185 + 8, el]:u64 <- R20
00048f4a: R19 := R0
00048f51: R0 := pad:64[mem[R0 + 0x10, el]:u32]
00048f57: #186 := 31:0[R3] - 0x38
00048f5c: VF := extend:33[#186] <> extend:33[31:0[R3]] - 0x38
00048f61: CF := pad:33[#186] <> pad:33[31:0[R3]] + 0xFFFFFFC8
00048f65: ZF := #186 = 0
00048f69: NF := 31:31[#186]
00048f6f: #187 := R31 + 0x20
00048f75: mem := mem with [#187, el]:u64 <- R21
00048f7b: mem := mem with [#187 + 8, el]:u64 <- R22
00048f89: when CF <> 1 goto %00048f81
00048f8a: goto %00048f85

00048f85:
00048f86: R2 := R8
00048f8c: goto %00048f88

00048f81:
00048f82: R2 := R2
00048f8b: goto %00048f88

00048f88:
00048f91: R21 := 0x40
00048f96: R4 := 0xF
00048fa4: when CF <> 1 goto %00048f9c
00048fa5: goto %00048fa0

00048fa0:
00048fa1: R21 := R9
00048fa7: goto %00048fa3

00048f9c:
00048f9d: R21 := R21
00048fa6: goto %00048fa3

00048fa3:
00048fac: R7 := 0x1F
00048fb1: R5 := 0xE
00048fbf: when CF <> 1 goto %00048fb7
00048fc0: goto %00048fbb

00048fbb:
00048fbc: R4 := R7
00048fc2: goto %00048fbe

00048fb7:
00048fb8: R4 := R4
00048fc1: goto %00048fbe

00048fbe:
00048fc7: R6 := 0x1E
00048fd5: when CF <> 1 goto %00048fcd
00048fd6: goto %00048fd1

00048fd1:
00048fd2: R5 := R6
00048fd8: goto %00048fd4

00048fcd:
00048fce: R5 := R5
00048fd7: goto %00048fd4

00048fd4:
00048fdf: #188 := 31:0[R0] + 31:0[R3]
00048fe5: VF := extend:33[#188] <> extend:33[31:0[R0]] + extend:33[31:0[R3]]
00048feb: CF := pad:33[#188] <> pad:33[31:0[R0]] + pad:33[31:0[R3]]
00048fef: ZF := #188 = 0
00048ff3: NF := 31:31[#188]
00048ff7: R0 := pad:64[#188]
00048fff: mem := mem with [R19 + 0x10, el]:u32 <- 31:0[R0]
00049005: R20 := R1
0004900c: R1 := pad:64[mem[R19 + 0x14, el]:u32]
00049012: when CF <> 1 goto %00049010
0006cdc9: goto %0004e831

0004e831:
0004e835: R1 := pad:64[31:0[R1] + 1]
0004e83d: mem := mem with [R19 + 0x14, el]:u32 <- 31:0[R1]
0006cdca: goto %00049010

00049010:
0004901a: R5 := R19 + (R5 << 2)
00049021: R4 := R19 + (R4 << 2)
00049028: R7 := pad:64[31:3[31:0[R0] >> 0x1D | 31:0[R0] << 3].0]
0004902f: R6 := pad:64[28:0[R1].31:29[R0]]
00049035: R22 := R19 + 0x1C
0004903b: R0 := pad:64[31:0[R3]]
00049043: mem := mem with [R5 + 0x1C, el]:u32 <- 31:0[R7]
00049048: R1 := 0x11000
00049050: mem := mem with [R4 + 0x1C, el]:u32 <- 31:0[R6]
00049056: R1 := R1 + 0x8E0
0004905d: R2 := R2 + ~R0 + 1
00049063: R1 := R1 + 0xA90
0004906a: R0 := R22 + R0
0004906f: R30 := 0x9734
00049071: call @memcpy with return %00049073

00049073:
00049077: R2 := R19
0004907d: R1 := R21
00049083: R0 := R22
00049088: R30 := 0x9744
0004908a: call @md5_process_block with return %0004908c

0004908c:
00049091: R1 := pad:64[mem[R19, el]:u32]
00049097: R0 := R20
0004909d: #189 := R31 + 0x20
000490a2: R21 := mem[#189, el]:u64
000490a7: R22 := mem[#189 + 8, el]:u64
000490af: mem := mem with [R20, el]:u32 <- 31:0[R1]
000490b6: R1 := pad:64[mem[R19 + 4, el]:u32]
000490be: mem := mem with [R20 + 4, el]:u32 <- 31:0[R1]
000490c5: R1 := pad:64[mem[R19 + 8, el]:u32]
000490cd: mem := mem with [R20 + 8, el]:u32 <- 31:0[R1]
000490d4: R1 := pad:64[mem[R19 + 0xC, el]:u32]
000490dc: mem := mem with [R20 + 0xC, el]:u32 <- 31:0[R1]
000490e2: #190 := R31 + 0x10
000490e7: R19 := mem[#190, el]:u64
000490ec: R20 := mem[#190 + 8, el]:u64
000490f3: R29 := mem[R31, el]:u64
000490f8: R30 := mem[R31 + 8, el]:u64
000490fc: R31 := R31 + 0x30
00049101: call R30 with noreturn

0006cdcb: sub md5_init_ctx(md5_init_ctx_result)
0006d127: md5_init_ctx_result :: out u32 = low:32[R0]

00048d8a:
00048d8d: R1 := 0x11000
00048d94: mem := mem with [R0 + 0x10, el]:u64 <- 0
00048d9b: mem := mem with [R0 + 0x18, el]:u32 <- 0
00048da2: V0 := mem[R1 + 0x8D0, el]:u128
00048daa: mem := mem with [R0, el]:u128 <- V0
00048daf: call R30 with noreturn

0006cdcc: sub md5_process_block(md5_process_block_result)
0006d128: md5_process_block_result :: out u32 = low:32[R0]

00048e00:
00048e04: #176 := R31 - 0x60
00048e0a: mem := mem with [#176, el]:u64 <- R29
00048e10: mem := mem with [#176 + 8, el]:u64 <- R30
00048e14: R31 := #176
00048e1a: R29 := R31
00048e21: R3 := pad:64[mem[R2 + 0x10, el]:u32]
00048e27: #177 := R31 + 0x40
00048e2d: mem := mem with [#177, el]:u64 <- R25
00048e33: mem := mem with [#177 + 8, el]:u64 <- R26
00048e39: R26 := 63:2[R1].0
00048e40: R3 := pad:64[31:0[R3] + 31:0[R1]]
00048e48: mem := mem with [R2 + 0x10, el]:u32 <- 31:0[R3]
00048e4f: R26 := R0 + R26
00048e56: R10 := pad:64[mem[R2 + 4, el]:u32]
00048e5c: #178 := ~pad:64[31:0[R3]]
00048e61: #179 := R1 + ~pad:64[31:0[R3]] + 1
00048e67: VF := extend:65[#179] <> extend:65[R1] + extend:65[#178] + 1
00048e6d: CF := pad:65[#179] <> pad:65[R1] + pad:65[#178] + 1
00048e71: ZF := #179 = 0
00048e75: NF := 63:63[#179]
00048e7b: #180 := R2 + 8
00048e80: V0 := pad:128[mem[#180, el]:u32]
00048e85: V1 := pad:128[mem[#180 + 4, el]:u32]
00048e8c: V2 := pad:128[mem[R2, el]:u32]
00048e93: when ~(CF & ~ZF) goto %00048e91
0006cdcd: goto %0004f98b

0004f98b:
0004f990: R1 := pad:64[mem[R2 + 0x14, el]:u32]
0004f996: R1 := pad:64[31:0[R1] + 1]
0004f99e: mem := mem with [R2 + 0x14, el]:u32 <- 31:0[R1]
0006cdce: goto %00048e91

00048e91:
00048e9a: #181 := ~R26
00048e9f: #182 := R0 + ~R26 + 1
00048ea5: VF := extend:65[#182] <> extend:65[R0] + extend:65[#181] + 1
00048eab: CF := pad:65[#182] <> pad:65[R0] + pad:65[#181] + 1
00048eaf: ZF := #182 = 0
00048eb3: NF := 63:63[#182]
00048eb9: when CF goto %00048eb7
0006cdcf: goto %0004e83f

0004e83f:
0004e843: #591 := R31 + 0x50
0004e849: mem := mem with [#591, el]:u64 <- R27
0004e84f: mem := mem with [#591 + 8, el]:u64 <- R28
0004e854: R28 := 0xA478
0004e859: R27 := 0xB756
0004e85f: R28 := pad:64[0xD76A.15:0[R28]]
0004e865: R27 := pad:64[0xE8C7.15:0[R27]]
0004e86b: #592 := R31 + 0x10
0004e871: mem := mem with [#592, el]:u64 <- R19
0004e877: mem := mem with [#592 + 8, el]:u64 <- R20
0004e87d: #593 := R31 + 0x20
0004e883: mem := mem with [#593, el]:u64 <- R21
0004e889: mem := mem with [#593 + 8, el]:u64 <- R22
0004e88f: #594 := R31 + 0x30
0004e895: mem := mem with [#594, el]:u64 <- R23
0004e89b: mem := mem with [#594 + 8, el]:u64 <- R24
0006cdd0: goto %0004e89d

0004e89d:
0004e8a2: V3 := pad:128[63:0[V1] ^ 63:0[V0]]
0004e8a8: R3 := pad:64[31:0[V1]]
0004e8ae: R1 := pad:64[31:0[V2]]
0004e8b5: R19 := pad:64[mem[R0, el]:u32]
0004e8ba: R15 := pad:64[mem[R0 + 4, el]:u32]
0004e8c0: R7 := pad:64[31:0[V0]]
0004e8c6: R4 := pad:64[31:0[V3]]
0004e8cb: R6 := 0x70DB
0004e8d2: R1 := pad:64[31:0[R1] + 31:0[R28]]
0004e8d8: R6 := pad:64[0x2420.15:0[R6]]
0004e8de: #595 := R0 + 8
0004e8e3: R8 := pad:64[mem[#595, el]:u32]
0004e8e8: R16 := pad:64[mem[#595 + 4, el]:u32]
0004e8ef: R6 := pad:64[31:0[R7] + 31:0[R6]]
0004e8f6: R4 := pad:64[31:0[R4] & 31:0[R10]]
0004e8fd: R14 := pad:64[mem[R0 + 0x20, el]:u32]
0004e904: R4 := pad:64[31:0[R4] ^ 31:0[R3]]
0004e90a: R3 := pad:64[31:0[V0]]
0004e911: R4 := pad:64[31:0[R4] + 31:0[R19]]
0004e918: R4 := pad:64[31:0[R4] + 31:0[R1]]
0004e91e: R1 := pad:64[31:0[V1]]
0004e924: #596 := R0 + 0x10
0004e929: R11 := pad:64[mem[#596, el]:u32]
0004e92e: R17 := pad:64[mem[#596 + 4, el]:u32]
0004e935: R4 := pad:64[24:0[R4].31:25[R4]]
0004e93c: R4 := pad:64[31:0[R4] + 31:0[R10]]
0004e943: R3 := pad:64[31:0[R10] ^ 31:0[R3]]
0004e94a: R3 := pad:64[31:0[R3] & 31:0[R4]]
0004e951: R5 := pad:64[31:0[R1] + 31:0[R27]]
0004e958: R3 := pad:64[31:0[R3] ^ 31:0[R7]]
0004e95f: R1 := pad:64[31:0[R4] ^ 31:0[R10]]
0004e966: R3 := pad:64[31:0[R3] + 31:0[R15]]
0004e96b: R7 := 0xCEEE
0004e972: R3 := pad:64[31:0[R3] + 31:0[R5]]
0004e977: R5 := 0xFAF
0004e97d: R5 := pad:64[0xF57C.15:0[R5]]
0004e984: R25 := pad:64[31:0[R11] + 31:0[R5]]
0004e989: R5 := 0xC62A
0004e990: R3 := pad:64[19:0[R3].31:20[R3]]
0004e997: R3 := pad:64[31:0[R4] + 31:0[R3]]
0004e99d: R5 := pad:64[0x4787.15:0[R5]]
0004e9a4: R1 := pad:64[31:0[R1] & 31:0[R3]]
0004e9ab: R23 := pad:64[31:0[R17] + 31:0[R5]]
0004e9b2: R1 := pad:64[31:0[R1] ^ 31:0[R10]]
0004e9b9: R5 := pad:64[31:0[R4] ^ 31:0[R3]]
0004e9c0: R1 := pad:64[31:0[R1] + 31:0[R8]]
0004e9c6: R7 := pad:64[0xC1BD.15:0[R7]]
0004e9cd: R1 := pad:64[31:0[R1] + 31:0[R6]]
0004e9d4: R9 := pad:64[31:0[R10] + 31:0[R7]]
0004e9da: #597 := R0 + 0x18
0004e9df: R13 := pad:64[mem[#597, el]:u32]
0004e9e4: R18 := pad:64[mem[#597 + 4, el]:u32]
0004e9eb: R1 := pad:64[14:0[R1].31:15[R1]]
0004e9f2: R1 := pad:64[31:0[R3] + 31:0[R1]]
0004e9f7: R7 := 0x4613
0004e9fe: R5 := pad:64[31:0[R5] & 31:0[R1]]
0004ea05: R21 := pad:64[31:0[R3] ^ 31:0[R1]]
0004ea0c: R5 := pad:64[31:0[R5] ^ 31:0[R4]]
0004ea12: R7 := pad:64[0xA830.15:0[R7]]
0004ea19: R5 := pad:64[31:0[R5] + 31:0[R16]]
0004ea20: R20 := pad:64[31:0[R13] + 31:0[R7]]
0004ea27: R5 := pad:64[31:0[R5] + 31:0[R9]]
0004ea2c: R6 := 0x9501
0004ea32: R6 := pad:64[0xFD46.15:0[R6]]
0004ea39: R22 := pad:64[31:0[R18] + 31:0[R6]]
0004ea3e: R6 := 0x98D8
0004ea45: R5 := pad:64[9:0[R5].31:10[R5]]
0004ea4c: R5 := pad:64[31:0[R1] + 31:0[R5]]
0004ea52: R6 := pad:64[0x6980.15:0[R6]]
0004ea59: R21 := pad:64[31:0[R21] & 31:0[R5]]
0004ea60: R30 := pad:64[31:0[R1] ^ 31:0[R5]]
0004ea67: R21 := pad:64[31:0[R21] ^ 31:0[R3]]
0004ea6e: R12 := pad:64[31:0[R14] + 31:0[R6]]
0004ea75: R4 := pad:64[31:0[R21] + 31:0[R4]]
0004ea7c: R7 := pad:64[mem[R0 + 0x24, el]:u32]
0004ea83: R4 := pad:64[31:0[R25] + 31:0[R4]]
0004ea88: R6 := 0xF7AF
0004ea8e: R6 := pad:64[0x8B44.15:0[R6]]
0004ea95: R24 := pad:64[31:0[R7] + 31:0[R6]]
0004ea9c: R6 := pad:64[mem[R0 + 0x28, el]:u32]
0004eaa3: R4 := pad:64[24:0[R4].31:25[R4]]
0004eaaa: R4 := pad:64[31:0[R5] + 31:0[R4]]
0004eaaf: R21 := 0xFFFF5BB1
0004eab6: R25 := pad:64[31:0[R30] & 31:0[R4]]
0004eabd: R21 := pad:64[31:0[R6] + 31:0[R21]]
0004eac4: R25 := pad:64[31:0[R25] ^ 31:0[R1]]
0004eacb: R3 := pad:64[31:0[R25] + 31:0[R3]]
0004ead2: R25 := pad:64[31:0[R5] ^ 31:0[R4]]
0004ead9: R3 := pad:64[31:0[R23] + 31:0[R3]]
0004eade: R23 := 0xD7BE
0004eae4: R23 := pad:64[0x895C.15:0[R23]]
0004eaeb: R3 := pad:64[19:0[R3].31:20[R3]]
0004eaf2: R3 := pad:64[31:0[R4] + 31:0[R3]]
0004eaf9: R25 := pad:64[31:0[R25] & 31:0[R3]]
0004eb00: R25 := pad:64[31:0[R25] ^ 31:0[R5]]
0004eb07: R1 := pad:64[31:0[R25] + 31:0[R1]]
0004eb0e: R25 := pad:64[31:0[R4] ^ 31:0[R3]]
0004eb15: R1 := pad:64[31:0[R20] + 31:0[R1]]
0004eb1b: #598 := R0 + 0x2C
0004eb20: R9 := pad:64[mem[#598, el]:u32]
0004eb25: R20 := pad:64[mem[#598 + 4, el]:u32]
0004eb2c: R1 := pad:64[14:0[R1].31:15[R1]]
0004eb33: R1 := pad:64[31:0[R3] + 31:0[R1]]
0004eb3a: R25 := pad:64[31:0[R25] & 31:0[R1]]
0004eb41: R23 := pad:64[31:0[R9] + 31:0[R23]]
0004eb48: R25 := pad:64[31:0[R25] ^ 31:0[R4]]
0004eb4f: R5 := pad:64[31:0[R25] + 31:0[R5]]
0004eb56: R25 := pad:64[31:0[R3] ^ 31:0[R1]]
0004eb5d: R5 := pad:64[31:0[R22] + 31:0[R5]]
0004eb62: R22 := 0x1122
0004eb68: R22 := pad:64[0x6B90.15:0[R22]]
0004eb6f: R22 := pad:64[31:0[R20] + 31:0[R22]]
0004eb76: R5 := pad:64[9:0[R5].31:10[R5]]
0004eb7d: R5 := pad:64[31:0[R1] + 31:0[R5]]
0004eb84: R25 := pad:64[31:0[R25] & 31:0[R5]]
0004eb8b: R25 := pad:64[31:0[R25] ^ 31:0[R3]]
0004eb92: R4 := pad:64[31:0[R25] + 31:0[R4]]
0004eb99: R25 := pad:64[31:0[R1] ^ 31:0[R5]]
0004eba0: R4 := pad:64[31:0[R12] + 31:0[R4]]
0004eba7: R12 := pad:64[mem[R0 + 0x34, el]:u32]
0004ebae: R4 := pad:64[24:0[R4].31:25[R4]]
0004ebb5: R4 := pad:64[31:0[R5] + 31:0[R4]]
0004ebbc: R25 := pad:64[31:0[R25] & 31:0[R4]]
0004ebc3: R30 := pad:64[31:0[R5] ^ 31:0[R4]]
0004ebca: R25 := pad:64[31:0[R25] ^ 31:0[R1]]
0004ebd1: R3 := pad:64[31:0[R25] + 31:0[R3]]
0004ebd8: R24 := pad:64[31:0[R24] + 31:0[R3]]
0004ebdd: R3 := 0x7193
0004ebe3: R3 := pad:64[0xFD98.15:0[R3]]
0004ebea: R25 := pad:64[31:0[R12] + 31:0[R3]]
0004ebef: R3 := 0x438E
0004ebf6: R24 := pad:64[19:0[R24].31:20[R24]]
0004ebfd: R24 := pad:64[31:0[R4] + 31:0[R24]]
0004ec03: R3 := pad:64[0xA679.15:0[R3]]
0004ec0a: R30 := pad:64[31:0[R30] & 31:0[R24]]
0004ec11: R30 := pad:64[31:0[R30] ^ 31:0[R5]]
0004ec18: R30 := pad:64[31:0[R30] + 31:0[R1]]
0004ec1f: R1 := pad:64[31:0[R4] ^ 31:0[R24]]
0004ec26: R30 := pad:64[31:0[R21] + 31:0[R30]]
0004ec2d: R30 := pad:64[14:0[R30].31:15[R30]]
0004ec34: R30 := pad:64[31:0[R24] + 31:0[R30]]
0004ec3b: R1 := pad:64[31:0[R1] & 31:0[R30]]
0004ec42: R1 := pad:64[31:0[R1] ^ 31:0[R4]]
0004ec49: R5 := pad:64[31:0[R1] + 31:0[R5]]
0004ec50: R1 := pad:64[31:0[R24] ^ 31:0[R30]]
0004ec57: R23 := pad:64[31:0[R23] + 31:0[R5]]
0004ec5e: R23 := pad:64[9:0[R23].31:10[R23]]
0004ec65: R23 := pad:64[31:0[R30] + 31:0[R23]]
0004ec6c: R1 := pad:64[31:0[R1] & 31:0[R23]]
0004ec73: R1 := pad:64[31:0[R1] ^ 31:0[R24]]
0004ec7a: R1 := pad:64[31:0[R1] + 31:0[R4]]
0004ec81: R4 := pad:64[31:0[R30] ^ 31:0[R23]]
0004ec88: R22 := pad:64[31:0[R22] + 31:0[R1]]
0004ec8e: #599 := R0 + 0x38
0004ec93: R21 := pad:64[mem[#599, el]:u32]
0004ec98: R1 := pad:64[mem[#599 + 4, el]:u32]
0004ec9f: R22 := pad:64[24:0[R22].31:25[R22]]
0004eca6: R22 := pad:64[31:0[R23] + 31:0[R22]]
0004ecac: R0 := R0 + 0x40
0004ecb3: R4 := pad:64[31:0[R4] & 31:0[R22]]
0004ecba: R5 := pad:64[31:0[R23] ^ 31:0[R22]]
0004ecc1: R4 := pad:64[31:0[R4] ^ 31:0[R30]]
0004ecc8: R3 := pad:64[31:0[R21] + 31:0[R3]]
0004eccf: R24 := pad:64[31:0[R4] + 31:0[R24]]
0004ecd4: R4 := 0x821
0004ecdb: R25 := pad:64[31:0[R25] + 31:0[R24]]
0004ece1: R4 := pad:64[0x49B4.15:0[R4]]
0004ece8: R4 := pad:64[31:0[R1] + 31:0[R4]]
0004ecee: #600 := ~R0
0004ecf3: #601 := R26 + ~R0 + 1
0004ecf9: VF := extend:65[#601] <> extend:65[R26] + extend:65[#600] + 1
0004ecff: CF := pad:65[#601] <> pad:65[R26] + pad:65[#600] + 1
0004ed03: ZF := #601 = 0
0004ed07: NF := 63:63[#601]
0004ed0e: R25 := pad:64[19:0[R25].31:20[R25]]
0004ed15: R25 := pad:64[31:0[R22] + 31:0[R25]]
0004ed1c: R5 := pad:64[31:0[R5] & 31:0[R25]]
0004ed23: R5 := pad:64[31:0[R5] ^ 31:0[R23]]
0004ed2a: R30 := pad:64[31:0[R5] + 31:0[R30]]
0004ed31: R5 := pad:64[31:0[R22] ^ 31:0[R25]]
0004ed38: R30 := pad:64[31:0[R3] + 31:0[R30]]
0004ed3d: R3 := 0x2562
0004ed43: R3 := pad:64[0xF61E.15:0[R3]]
0004ed4a: R24 := pad:64[31:0[R15] + 31:0[R3]]
0004ed51: R30 := pad:64[14:0[R30].31:15[R30]]
0004ed58: R30 := pad:64[31:0[R25] + 31:0[R30]]
0004ed5f: R3 := pad:64[31:0[R5] & 31:0[R30]]
0004ed66: R3 := pad:64[31:0[R3] ^ 31:0[R22]]
0004ed6d: R23 := pad:64[31:0[R3] + 31:0[R23]]
0004ed72: R3 := 0xB340
0004ed79: R23 := pad:64[31:0[R4] + 31:0[R23]]
0004ed7f: R3 := pad:64[0xC040.15:0[R3]]
0004ed86: R5 := pad:64[31:0[R13] + 31:0[R3]]
0004ed8b: R3 := 0x5A51
0004ed91: R3 := pad:64[0x265E.15:0[R3]]
0004ed98: R23 := pad:64[9:0[R23].31:10[R23]]
0004ed9f: R23 := pad:64[31:0[R30] + 31:0[R23]]
0004eda6: R4 := pad:64[31:0[R9] + 31:0[R3]]
0004edad: R3 := pad:64[31:0[R30] ^ 31:0[R23]]
0004edb4: R3 := pad:64[31:0[R3] & 31:0[R25]]
0004edbb: R3 := pad:64[31:0[R3] ^ 31:0[R30]]
0004edc2: R22 := pad:64[31:0[R3] + 31:0[R22]]
0004edc7: R3 := 0xC7AA
0004edce: R24 := pad:64[31:0[R24] + 31:0[R22]]
0004edd4: R3 := pad:64[0xE9B6.15:0[R3]]
0004eddb: R22 := pad:64[31:0[R19] + 31:0[R3]]
0004ede2: R24 := pad:64[26:0[R24].31:27[R24]]
0004ede9: R24 := pad:64[31:0[R23] + 31:0[R24]]
0004edf0: R3 := pad:64[31:0[R23] ^ 31:0[R24]]
0004edf7: R3 := pad:64[31:0[R3] & 31:0[R30]]
0004edfe: R3 := pad:64[31:0[R3] ^ 31:0[R23]]
0004ee05: R25 := pad:64[31:0[R3] + 31:0[R25]]
0004ee0a: R3 := 0x105D
0004ee11: R5 := pad:64[31:0[R5] + 31:0[R25]]
0004ee17: R3 := pad:64[0xD62F.15:0[R3]]
0004ee1e: R3 := pad:64[31:0[R17] + 31:0[R3]]
0004ee25: R5 := pad:64[22:0[R5].31:23[R5]]
0004ee2c: R5 := pad:64[31:0[R24] + 31:0[R5]]
0004ee33: R25 := pad:64[31:0[R24] ^ 31:0[R5]]
0004ee3a: R25 := pad:64[31:0[R25] & 31:0[R23]]
0004ee41: R25 := pad:64[31:0[R25] ^ 31:0[R24]]
0004ee48: R30 := pad:64[31:0[R25] + 31:0[R30]]
0004ee4f: R30 := pad:64[31:0[R4] + 31:0[R30]]
0004ee54: R4 := 0x1453
0004ee5a: R4 := pad:64[0x244.15:0[R4]]
0004ee61: R25 := pad:64[31:0[R6] + 31:0[R4]]
0004ee68: R30 := pad:64[17:0[R30].31:18[R30]]
0004ee6f: R30 := pad:64[31:0[R5] + 31:0[R30]]
0004ee76: R4 := pad:64[31:0[R5] ^ 31:0[R30]]
0004ee7d: R4 := pad:64[31:0[R4] & 31:0[R24]]
0004ee84: R4 := pad:64[31:0[R4] ^ 31:0[R5]]
0004ee8b: R23 := pad:64[31:0[R4] + 31:0[R23]]
0004ee90: R4 := 0xE681
0004ee97: R22 := pad:64[31:0[R22] + 31:0[R23]]
0004ee9d: R4 := pad:64[0xD8A1.15:0[R4]]
0004eea4: R4 := pad:64[31:0[R1] + 31:0[R4]]
0004eeab: R22 := pad:64[11:0[R22].31:12[R22]]
0004eeb2: R22 := pad:64[31:0[R30] + 31:0[R22]]
0004eeb9: R23 := pad:64[31:0[R30] ^ 31:0[R22]]
0004eec0: R23 := pad:64[31:0[R23] & 31:0[R5]]
0004eec7: R23 := pad:64[31:0[R23] ^ 31:0[R30]]
0004eece: R24 := pad:64[31:0[R23] + 31:0[R24]]
0004eed5: R24 := pad:64[31:0[R3] + 31:0[R24]]
0004eeda: R3 := 0xFBC8
0004eee0: R3 := pad:64[0xE7D3.15:0[R3]]
0004eee7: R23 := pad:64[31:0[R11] + 31:0[R3]]
0004eeee: R24 := pad:64[26:0[R24].31:27[R24]]
0004eef5: R24 := pad:64[31:0[R22] + 31:0[R24]]
0004eefc: R3 := pad:64[31:0[R22] ^ 31:0[R24]]
0004ef03: R3 := pad:64[31:0[R3] & 31:0[R30]]
0004ef0a: R3 := pad:64[31:0[R3] ^ 31:0[R22]]
0004ef11: R5 := pad:64[31:0[R3] + 31:0[R5]]
0004ef16: R3 := 0xCDE6
0004ef1d: R25 := pad:64[31:0[R25] + 31:0[R5]]
0004ef23: R3 := pad:64[0x21E1.15:0[R3]]
0004ef2a: R3 := pad:64[31:0[R7] + 31:0[R3]]
0004ef31: R25 := pad:64[22:0[R25].31:23[R25]]
0004ef38: R25 := pad:64[31:0[R24] + 31:0[R25]]
0004ef3f: R5 := pad:64[31:0[R24] ^ 31:0[R25]]
0004ef46: R5 := pad:64[31:0[R5] & 31:0[R22]]
0004ef4d: R5 := pad:64[31:0[R5] ^ 31:0[R24]]
0004ef54: R30 := pad:64[31:0[R5] + 31:0[R30]]
0004ef5b: R30 := pad:64[31:0[R4] + 31:0[R30]]
0004ef60: R4 := 0x7D6
0004ef66: R4 := pad:64[0xC337.15:0[R4]]
0004ef6d: R5 := pad:64[31:0[R21] + 31:0[R4]]
0004ef74: R30 := pad:64[17:0[R30].31:18[R30]]
0004ef7b: R30 := pad:64[31:0[R25] + 31:0[R30]]
0004ef82: R4 := pad:64[31:0[R25] ^ 31:0[R30]]
0004ef89: R4 := pad:64[31:0[R4] & 31:0[R24]]
0004ef90: R4 := pad:64[31:0[R4] ^ 31:0[R25]]
0004ef97: R22 := pad:64[31:0[R4] + 31:0[R22]]
0004ef9c: R4 := 0xD87
0004efa3: R23 := pad:64[31:0[R23] + 31:0[R22]]
0004efa9: R4 := pad:64[0xF4D5.15:0[R4]]
0004efb0: R4 := pad:64[31:0[R16] + 31:0[R4]]
0004efb7: R23 := pad:64[11:0[R23].31:12[R23]]
0004efbe: R23 := pad:64[31:0[R30] + 31:0[R23]]
0004efc5: R22 := pad:64[31:0[R30] ^ 31:0[R23]]
0004efcc: R22 := pad:64[31:0[R22] & 31:0[R25]]
0004efd3: R22 := pad:64[31:0[R22] ^ 31:0[R30]]
0004efda: R24 := pad:64[31:0[R22] + 31:0[R24]]
0004efdf: R22 := 0x14ED
0004efe6: R24 := pad:64[31:0[R3] + 31:0[R24]]
0004efec: R22 := pad:64[0x455A.15:0[R22]]
0004eff3: R22 := pad:64[31:0[R14] + 31:0[R22]]
0004effa: R24 := pad:64[26:0[R24].31:27[R24]]
0004f001: R24 := pad:64[31:0[R23] + 31:0[R24]]
0004f008: R3 := pad:64[31:0[R23] ^ 31:0[R24]]
0004f00f: R3 := pad:64[31:0[R3] & 31:0[R30]]
0004f016: R3 := pad:64[31:0[R3] ^ 31:0[R23]]
0004f01d: R25 := pad:64[31:0[R3] + 31:0[R25]]
0004f022: R3 := 0xE905
0004f029: R5 := pad:64[31:0[R5] + 31:0[R25]]
0004f02f: R3 := pad:64[0xA9E3.15:0[R3]]
0004f036: R3 := pad:64[31:0[R12] + 31:0[R3]]
0004f03d: R5 := pad:64[22:0[R5].31:23[R5]]
0004f044: R5 := pad:64[31:0[R24] + 31:0[R5]]
0004f04b: R25 := pad:64[31:0[R24] ^ 31:0[R5]]
0004f052: R25 := pad:64[31:0[R25] & 31:0[R23]]
0004f059: R25 := pad:64[31:0[R25] ^ 31:0[R24]]
0004f060: R30 := pad:64[31:0[R25] + 31:0[R30]]
0004f065: R25 := 0xA3F8
0004f06c: R4 := pad:64[31:0[R4] + 31:0[R30]]
0004f072: R25 := pad:64[0xFCEF.15:0[R25]]
0004f079: R25 := pad:64[31:0[R8] + 31:0[R25]]
0004f080: R4 := pad:64[17:0[R4].31:18[R4]]
0004f087: R4 := pad:64[31:0[R5] + 31:0[R4]]
0004f08e: R30 := pad:64[31:0[R5] ^ 31:0[R4]]
0004f095: R30 := pad:64[31:0[R30] & 31:0[R24]]
0004f09c: R30 := pad:64[31:0[R30] ^ 31:0[R5]]
0004f0a3: R23 := pad:64[31:0[R30] + 31:0[R23]]
0004f0a8: R30 := 0x2D9
0004f0af: R23 := pad:64[31:0[R22] + 31:0[R23]]
0004f0b5: R30 := pad:64[0x676F.15:0[R30]]
0004f0bc: R30 := pad:64[31:0[R18] + 31:0[R30]]
0004f0c3: R23 := pad:64[11:0[R23].31:12[R23]]
0004f0ca: R23 := pad:64[31:0[R4] + 31:0[R23]]
0004f0d1: R22 := pad:64[31:0[R4] ^ 31:0[R23]]
0004f0d8: R22 := pad:64[31:0[R22] & 31:0[R5]]
0004f0df: R22 := pad:64[31:0[R22] ^ 31:0[R4]]
0004f0e6: R24 := pad:64[31:0[R22] + 31:0[R24]]
0004f0eb: R22 := 0x4C8A
0004f0f2: R3 := pad:64[31:0[R3] + 31:0[R24]]
0004f0f8: R22 := pad:64[0x8D2A.15:0[R22]]
0004f0ff: R22 := pad:64[31:0[R20] + 31:0[R22]]
0004f106: R3 := pad:64[26:0[R3].31:27[R3]]
0004f10d: R3 := pad:64[31:0[R23] + 31:0[R3]]
0004f114: R24 := pad:64[31:0[R23] ^ 31:0[R3]]
0004f11b: R24 := pad:64[31:0[R24] & 31:0[R4]]
0004f122: R24 := pad:64[31:0[R24] ^ 31:0[R23]]
0004f129: R5 := pad:64[31:0[R24] + 31:0[R5]]
0004f130: R25 := pad:64[31:0[R25] + 31:0[R5]]
0004f136: R5 := pad:64[31:0[R17] - 0x5C000]
0004f13c: R5 := pad:64[31:0[R5] - 0x6BE]
0004f143: R25 := pad:64[22:0[R25].31:23[R25]]
0004f14a: R25 := pad:64[31:0[R3] + 31:0[R25]]
0004f151: R24 := pad:64[31:0[R3] ^ 31:0[R25]]
0004f158: R24 := pad:64[31:0[R24] & 31:0[R23]]
0004f15f: R24 := pad:64[31:0[R24] ^ 31:0[R3]]
0004f166: R4 := pad:64[31:0[R24] + 31:0[R4]]
0004f16d: R4 := pad:64[31:0[R30] + 31:0[R4]]
0004f174: R24 := pad:64[17:0[R4].31:18[R4]]
0004f17b: R24 := pad:64[31:0[R25] + 31:0[R24]]
0004f182: R4 := pad:64[31:0[R25] ^ 31:0[R24]]
0004f189: R30 := pad:64[31:0[R4] & 31:0[R3]]
0004f190: R30 := pad:64[31:0[R30] ^ 31:0[R25]]
0004f197: R23 := pad:64[31:0[R30] + 31:0[R23]]
0004f19c: R30 := 0xF681
0004f1a3: R22 := pad:64[31:0[R22] + 31:0[R23]]
0004f1a9: R30 := pad:64[0x8771.15:0[R30]]
0004f1b0: R30 := pad:64[31:0[R14] + 31:0[R30]]
0004f1b7: R22 := pad:64[11:0[R22].31:12[R22]]
0004f1be: R22 := pad:64[31:0[R24] + 31:0[R22]]
0004f1c5: R4 := pad:64[31:0[R4] ^ 31:0[R22]]
0004f1cc: R3 := pad:64[31:0[R4] + 31:0[R3]]
0004f1d3: R4 := pad:64[31:0[R24] ^ 31:0[R22]]
0004f1da: R23 := pad:64[31:0[R5] + 31:0[R3]]
0004f1df: R3 := 0x6122
0004f1e5: R3 := pad:64[0x6D9D.15:0[R3]]
0004f1ec: R3 := pad:64[31:0[R9] + 31:0[R3]]
0004f1f1: R5 := 0x380C
0004f1f8: R23 := pad:64[27:0[R23].31:28[R23]]
0004f1ff: R23 := pad:64[31:0[R22] + 31:0[R23]]
0004f205: R5 := pad:64[0xFDE5.15:0[R5]]
0004f20c: R4 := pad:64[31:0[R4] ^ 31:0[R23]]
0004f213: R5 := pad:64[31:0[R21] + 31:0[R5]]
0004f21a: R25 := pad:64[31:0[R4] + 31:0[R25]]
0004f221: R4 := pad:64[31:0[R22] ^ 31:0[R23]]
0004f228: R30 := pad:64[31:0[R30] + 31:0[R25]]
0004f22d: R25 := 0xEA44
0004f233: R25 := pad:64[0xA4BE.15:0[R25]]
0004f23a: R25 := pad:64[31:0[R15] + 31:0[R25]]
0004f241: R30 := pad:64[20:0[R30].31:21[R30]]
0004f248: R30 := pad:64[31:0[R23] + 31:0[R30]]
0004f24f: R4 := pad:64[31:0[R4] ^ 31:0[R30]]
0004f256: R4 := pad:64[31:0[R4] + 31:0[R24]]
0004f25d: R24 := pad:64[31:0[R23] ^ 31:0[R30]]
0004f264: R4 := pad:64[31:0[R3] + 31:0[R4]]
0004f26b: R4 := pad:64[15:0[R4].31:16[R4]]
0004f272: R4 := pad:64[31:0[R30] + 31:0[R4]]
0004f279: R3 := pad:64[31:0[R24] ^ 31:0[R4]]
0004f27e: R24 := 0x4B60
0004f285: R3 := pad:64[31:0[R3] + 31:0[R22]]
0004f28c: R22 := pad:64[31:0[R30] ^ 31:0[R4]]
0004f293: R5 := pad:64[31:0[R5] + 31:0[R3]]
0004f298: R3 := 0xCFA9
0004f29e: R3 := pad:64[0x4BDE.15:0[R3]]
0004f2a5: R3 := pad:64[31:0[R11] + 31:0[R3]]
0004f2ab: R24 := pad:64[0xF6BB.15:0[R24]]
0004f2b2: R5 := pad:64[8:0[R5].31:9[R5]]
0004f2b9: R5 := pad:64[31:0[R4] + 31:0[R5]]
0004f2c0: R24 := pad:64[31:0[R18] + 31:0[R24]]
0004f2c7: R22 := pad:64[31:0[R22] ^ 31:0[R5]]
0004f2ce: R23 := pad:64[31:0[R22] + 31:0[R23]]
0004f2d5: R22 := pad:64[31:0[R4] ^ 31:0[R5]]
0004f2dc: R25 := pad:64[31:0[R25] + 31:0[R23]]
0004f2e1: R23 := 0xBC70
0004f2e7: R23 := pad:64[0xBEBF.15:0[R23]]
0004f2ee: R23 := pad:64[31:0[R6] + 31:0[R23]]
0004f2f4: R6 := pad:64[31:0[R6] - 0x100000]
0004f2fb: R25 := pad:64[27:0[R25].31:28[R25]]
0004f302: R25 := pad:64[31:0[R5] + 31:0[R25]]
0004f308: R6 := pad:64[31:0[R6] - 0xB83]
0004f30f: R22 := pad:64[31:0[R22] ^ 31:0[R25]]
0004f316: R30 := pad:64[31:0[R22] + 31:0[R30]]
0004f31d: R22 := pad:64[31:0[R5] ^ 31:0[R25]]
0004f324: R3 := pad:64[31:0[R3] + 31:0[R30]]
0004f329: R30 := 0x27FA
0004f32f: R30 := pad:64[0xEAA1.15:0[R30]]
0004f336: R30 := pad:64[31:0[R19] + 31:0[R30]]
0004f33d: R3 := pad:64[20:0[R3].31:21[R3]]
0004f344: R3 := pad:64[31:0[R25] + 31:0[R3]]
0004f34b: R22 := pad:64[31:0[R22] ^ 31:0[R3]]
0004f352: R22 := pad:64[31:0[R22] + 31:0[R4]]
0004f359: R4 := pad:64[31:0[R25] ^ 31:0[R3]]
0004f360: R24 := pad:64[31:0[R24] + 31:0[R22]]
0004f365: R22 := 0x7EC6
0004f36b: R22 := pad:64[0x289B.15:0[R22]]
0004f372: R22 := pad:64[31:0[R12] + 31:0[R22]]
0004f379: R24 := pad:64[15:0[R24].31:16[R24]]
0004f380: R24 := pad:64[31:0[R3] + 31:0[R24]]
0004f387: R4 := pad:64[31:0[R4] ^ 31:0[R24]]
0004f38e: R5 := pad:64[31:0[R4] + 31:0[R5]]
0004f395: R4 := pad:64[31:0[R3] ^ 31:0[R24]]
0004f39c: R23 := pad:64[31:0[R23] + 31:0[R5]]
0004f3a3: R23 := pad:64[8:0[R23].31:9[R23]]
0004f3aa: R23 := pad:64[31:0[R24] + 31:0[R23]]
0004f3b1: R4 := pad:64[31:0[R4] ^ 31:0[R23]]
0004f3b8: R5 := pad:64[31:0[R24] ^ 31:0[R23]]
0004f3bf: R25 := pad:64[31:0[R4] + 31:0[R25]]
0004f3c4: R4 := 0x3085
0004f3cb: R22 := pad:64[31:0[R22] + 31:0[R25]]
0004f3d1: R4 := pad:64[0xD4EF.15:0[R4]]
0004f3d8: R4 := pad:64[31:0[R16] + 31:0[R4]]
0004f3dd: R25 := 0xD039
0004f3e3: R25 := pad:64[0xD9D4.15:0[R25]]
0004f3ea: R22 := pad:64[27:0[R22].31:28[R22]]
0004f3f1: R22 := pad:64[31:0[R23] + 31:0[R22]]
0004f3f8: R25 := pad:64[31:0[R7] + 31:0[R25]]
0004f3ff: R5 := pad:64[31:0[R5] ^ 31:0[R22]]
0004f406: R5 := pad:64[31:0[R5] + 31:0[R3]]
0004f40d: R3 := pad:64[31:0[R23] ^ 31:0[R22]]
0004f414: R5 := pad:64[31:0[R30] + 31:0[R5]]
0004f419: R30 := 0x1D05
0004f41f: R30 := pad:64[0x488.15:0[R30]]
0004f426: R30 := pad:64[31:0[R13] + 31:0[R30]]
0004f42d: R5 := pad:64[20:0[R5].31:21[R5]]
0004f434: R5 := pad:64[31:0[R22] + 31:0[R5]]
0004f43b: R3 := pad:64[31:0[R3] ^ 31:0[R5]]
0004f442: R24 := pad:64[31:0[R3] + 31:0[R24]]
0004f449: R3 := pad:64[31:0[R22] ^ 31:0[R5]]
0004f450: R4 := pad:64[31:0[R4] + 31:0[R24]]
0004f455: R24 := 0x99E5
0004f45b: R24 := pad:64[0xE6DB.15:0[R24]]
0004f462: R24 := pad:64[31:0[R20] + 31:0[R24]]
0004f469: R4 := pad:64[15:0[R4].31:16[R4]]
0004f470: R4 := pad:64[31:0[R5] + 31:0[R4]]
0004f477: R3 := pad:64[31:0[R3] ^ 31:0[R4]]
0004f47e: R23 := pad:64[31:0[R3] + 31:0[R23]]
0004f485: R3 := pad:64[31:0[R5] ^ 31:0[R4]]
0004f48c: R23 := pad:64[31:0[R30] + 31:0[R23]]
0004f491: R30 := 0xFF97
0004f497: R30 := pad:64[0x432A.15:0[R30]]
0004f49e: R18 := pad:64[31:0[R18] + 31:0[R30]]
0004f4a5: R23 := pad:64[8:0[R23].31:9[R23]]
0004f4ac: R23 := pad:64[31:0[R4] + 31:0[R23]]
0004f4b3: R3 := pad:64[31:0[R3] ^ 31:0[R23]]
0004f4ba: R22 := pad:64[31:0[R3] + 31:0[R22]]
0004f4c1: R3 := pad:64[31:0[R4] ^ 31:0[R23]]
0004f4c8: R22 := pad:64[31:0[R25] + 31:0[R22]]
0004f4cd: R25 := 0x7CF8
0004f4d3: R25 := pad:64[0x1FA2.15:0[R25]]
0004f4da: R25 := pad:64[31:0[R1] + 31:0[R25]]
0004f4e1: R22 := pad:64[27:0[R22].31:28[R22]]
0004f4e8: R22 := pad:64[31:0[R23] + 31:0[R22]]
0004f4ef: R3 := pad:64[31:0[R3] ^ 31:0[R22]]
0004f4f6: R5 := pad:64[31:0[R3] + 31:0[R5]]
0004f4fd: R3 := pad:64[31:0[R23] ^ 31:0[R22]]
0004f504: R5 := pad:64[31:0[R24] + 31:0[R5]]
0004f509: R24 := 0x5665
0004f50f: R24 := pad:64[0xC4AC.15:0[R24]]
0004f516: R24 := pad:64[31:0[R8] + 31:0[R24]]
0004f51d: R5 := pad:64[20:0[R5].31:21[R5]]
0004f524: R5 := pad:64[31:0[R22] + 31:0[R5]]
0004f52b: R3 := pad:64[31:0[R3] ^ 31:0[R5]]
0004f532: R3 := pad:64[31:0[R3] + 31:0[R4]]
0004f539: R4 := pad:64[31:0[R22] ^ 31:0[R5]]
0004f540: R3 := pad:64[31:0[R25] + 31:0[R3]]
0004f545: R25 := 0x2244
0004f54b: R25 := pad:64[0xF429.15:0[R25]]
0004f552: R19 := pad:64[31:0[R19] + 31:0[R25]]
0004f557: R25 := 0x23A7
0004f55e: R3 := pad:64[15:0[R3].31:16[R3]]
0004f565: R3 := pad:64[31:0[R5] + 31:0[R3]]
0004f56b: R25 := pad:64[0xAB94.15:0[R25]]
0004f572: R4 := pad:64[31:0[R4] ^ 31:0[R3]]
0004f579: R21 := pad:64[31:0[R21] + 31:0[R25]]
0004f580: R23 := pad:64[31:0[R4] + 31:0[R23]]
0004f585: R4 := 0xA039
0004f58c: R24 := pad:64[31:0[R24] + 31:0[R23]]
0004f592: R4 := pad:64[0xFC93.15:0[R4]]
0004f599: R17 := pad:64[31:0[R17] + 31:0[R4]]
0004f59e: R4 := 0x59C3
0004f5a4: R4 := pad:64[0x655B.15:0[R4]]
0004f5ab: R24 := pad:64[8:0[R24].31:9[R24]]
0004f5b2: R24 := pad:64[31:0[R3] + 31:0[R24]]
0004f5b9: R20 := pad:64[31:0[R20] + 31:0[R4]]
0004f5c0: R4 := pad:64[31:0[R24] | ~31:0[R5]]
0004f5c5: R23 := 0xCC92
0004f5cc: R4 := pad:64[31:0[R4] ^ 31:0[R3]]
0004f5d2: R23 := pad:64[0x8F0C.15:0[R23]]
0004f5d9: R22 := pad:64[31:0[R4] + 31:0[R22]]
0004f5de: R4 := 0x5DD1
0004f5e5: R19 := pad:64[31:0[R19] + 31:0[R22]]
0004f5eb: R4 := pad:64[0x8584.15:0[R4]]
0004f5f2: R15 := pad:64[31:0[R15] + 31:0[R4]]
0004f5f7: R4 := 0x7E4F
0004f5fd: R4 := pad:64[0x6FA8.15:0[R4]]
0004f604: R19 := pad:64[25:0[R19].31:26[R19]]
0004f60b: R19 := pad:64[31:0[R24] + 31:0[R19]]
0004f612: R14 := pad:64[31:0[R14] + 31:0[R4]]
0004f619: R22 := pad:64[31:0[R19] | ~31:0[R3]]
0004f61e: R4 := 0xE6E0
0004f624: R4 := pad:64[0xFE2C.15:0[R4]]
0004f62b: R4 := pad:64[31:0[R1] + 31:0[R4]]
0004f632: R1 := pad:64[31:0[R22] ^ 31:0[R24]]
0004f639: R16 := pad:64[31:0[R16] + 31:0[R23]]
0004f640: R5 := pad:64[31:0[R1] + 31:0[R5]]
0004f645: R22 := 0x4314
0004f64c: R18 := pad:64[31:0[R18] + 31:0[R5]]
0004f652: R22 := pad:64[0xA301.15:0[R22]]
0004f659: R13 := pad:64[31:0[R13] + 31:0[R22]]
0004f65e: R1 := 0x11A1
0004f664: R1 := pad:64[0x4E08.15:0[R1]]
0004f66b: R18 := pad:64[21:0[R18].31:22[R18]]
0004f672: R18 := pad:64[31:0[R19] + 31:0[R18]]
0004f679: R12 := pad:64[31:0[R12] + 31:0[R1]]
0004f680: R5 := pad:64[31:0[R18] | ~31:0[R24]]
0004f685: R1 := 0x7E82
0004f68c: R5 := pad:64[31:0[R5] ^ 31:0[R19]]
0004f692: R1 := pad:64[0xF753.15:0[R1]]
0004f699: R3 := pad:64[31:0[R5] + 31:0[R3]]
0004f6a0: R1 := pad:64[31:0[R11] + 31:0[R1]]
0004f6a7: R21 := pad:64[31:0[R21] + 31:0[R3]]
0004f6ac: R3 := 0xD391
0004f6b2: R3 := pad:64[0xEB86.15:0[R3]]
0004f6b9: R7 := pad:64[31:0[R7] + 31:0[R3]]
0004f6be: R11 := 0xF235
0004f6c5: R21 := pad:64[16:0[R21].31:17[R21]]
0004f6cc: R21 := pad:64[31:0[R18] + 31:0[R21]]
0004f6d2: R11 := pad:64[0xBD3A.15:0[R11]]
0004f6d9: R3 := pad:64[31:0[R21] | ~31:0[R19]]
0004f6e0: R9 := pad:64[31:0[R9] + 31:0[R11]]
0004f6e7: R3 := pad:64[31:0[R3] ^ 31:0[R18]]
0004f6ec: R5 := 0xD2BB
0004f6f3: R24 := pad:64[31:0[R3] + 31:0[R24]]
0004f6f9: R5 := pad:64[0x2AD7.15:0[R5]]
0004f700: R17 := pad:64[31:0[R17] + 31:0[R24]]
0004f707: R8 := pad:64[31:0[R8] + 31:0[R5]]
0004f70e: R17 := pad:64[10:0[R17].31:11[R17]]
0004f715: R17 := pad:64[31:0[R21] + 31:0[R17]]
0004f71c: R3 := pad:64[31:0[R17] | ~31:0[R18]]
0004f723: R3 := pad:64[31:0[R3] ^ 31:0[R21]]
0004f72a: R19 := pad:64[31:0[R3] + 31:0[R19]]
0004f731: R20 := pad:64[31:0[R20] + 31:0[R19]]
0004f738: R20 := pad:64[25:0[R20].31:26[R20]]
0004f73f: R20 := pad:64[31:0[R17] + 31:0[R20]]
0004f746: R3 := pad:64[31:0[R20] | ~31:0[R21]]
0004f74d: R3 := pad:64[31:0[R3] ^ 31:0[R17]]
0004f754: R18 := pad:64[31:0[R3] + 31:0[R18]]
0004f75b: R16 := pad:64[31:0[R16] + 31:0[R18]]
0004f762: R16 := pad:64[21:0[R16].31:22[R16]]
0004f769: R16 := pad:64[31:0[R20] + 31:0[R16]]
0004f770: R3 := pad:64[31:0[R16] | ~31:0[R17]]
0004f777: R3 := pad:64[31:0[R3] ^ 31:0[R20]]
0004f77e: R21 := pad:64[31:0[R3] + 31:0[R21]]
0004f785: R6 := pad:64[31:0[R6] + 31:0[R21]]
0004f78c: R6 := pad:64[16:0[R6].31:17[R6]]
0004f793: R6 := pad:64[31:0[R16] + 31:0[R6]]
0004f79a: R3 := pad:64[31:0[R6] | ~31:0[R20]]
0004f7a1: R3 := pad:64[31:0[R3] ^ 31:0[R16]]
0004f7a8: R17 := pad:64[31:0[R3] + 31:0[R17]]
0004f7af: R15 := pad:64[31:0[R15] + 31:0[R17]]
0004f7b6: R15 := pad:64[10:0[R15].31:11[R15]]
0004f7bd: R15 := pad:64[31:0[R6] + 31:0[R15]]
0004f7c4: R3 := pad:64[31:0[R15] | ~31:0[R16]]
0004f7cb: R3 := pad:64[31:0[R3] ^ 31:0[R6]]
0004f7d2: R20 := pad:64[31:0[R3] + 31:0[R20]]
0004f7d9: R14 := pad:64[31:0[R14] + 31:0[R20]]
0004f7e0: R14 := pad:64[25:0[R14].31:26[R14]]
0004f7e7: R14 := pad:64[31:0[R15] + 31:0[R14]]
0004f7ee: R3 := pad:64[31:0[R14] | ~31:0[R6]]
0004f7f5: R3 := pad:64[31:0[R3] ^ 31:0[R15]]
0004f7fc: R16 := pad:64[31:0[R3] + 31:0[R16]]
0004f803: R4 := pad:64[31:0[R4] + 31:0[R16]]
0004f80a: R4 := pad:64[21:0[R4].31:22[R4]]
0004f811: R4 := pad:64[31:0[R14] + 31:0[R4]]
0004f818: R3 := pad:64[31:0[R4] | ~31:0[R15]]
0004f81f: R3 := pad:64[31:0[R3] ^ 31:0[R14]]
0004f826: R6 := pad:64[31:0[R3] + 31:0[R6]]
0004f82d: R13 := pad:64[31:0[R13] + 31:0[R6]]
0004f834: R13 := pad:64[16:0[R13].31:17[R13]]
0004f83b: R13 := pad:64[31:0[R4] + 31:0[R13]]
0004f842: R3 := pad:64[31:0[R13] | ~31:0[R14]]
0004f849: R3 := pad:64[31:0[R3] ^ 31:0[R4]]
0004f850: R15 := pad:64[31:0[R3] + 31:0[R15]]
0004f857: R12 := pad:64[31:0[R12] + 31:0[R15]]
0004f85e: R12 := pad:64[10:0[R12].31:11[R12]]
0004f865: R12 := pad:64[31:0[R13] + 31:0[R12]]
0004f86c: R3 := pad:64[31:0[R12] | ~31:0[R4]]
0004f873: R3 := pad:64[31:0[R3] ^ 31:0[R13]]
0004f87a: R14 := pad:64[31:0[R3] + 31:0[R14]]
0004f881: R1 := pad:64[31:0[R1] + 31:0[R14]]
0004f888: R1 := pad:64[25:0[R1].31:26[R1]]
0004f88f: R1 := pad:64[31:0[R12] + 31:0[R1]]
0004f895: V3 := pad:128[31:0[R1]]
0004f89c: R3 := pad:64[31:0[R1] | ~31:0[R13]]
0004f8a3: R3 := pad:64[31:0[R3] ^ 31:0[R12]]
0004f8ac: V2 := pad:128[63:32[V2] + 63:32[V3].31:0[V2] + 31:0[V3]]
0004f8b3: R4 := pad:64[31:0[R3] + 31:0[R4]]
0004f8ba: R9 := pad:64[31:0[R9] + 31:0[R4]]
0004f8c1: R9 := pad:64[21:0[R9].31:22[R9]]
0004f8c8: R9 := pad:64[31:0[R1] + 31:0[R9]]
0004f8ce: V3 := pad:128[31:0[R9]]
0004f8d5: R3 := pad:64[31:0[R9] | ~31:0[R12]]
0004f8dc: R3 := pad:64[31:0[R3] ^ 31:0[R1]]
0004f8e5: V1 := pad:128[63:32[V1] + 63:32[V3].31:0[V1] + 31:0[V3]]
0004f8ec: R13 := pad:64[31:0[R3] + 31:0[R13]]
0004f8f3: R8 := pad:64[31:0[R8] + 31:0[R13]]
0004f8fa: R8 := pad:64[16:0[R8].31:17[R8]]
0004f901: R8 := pad:64[31:0[R9] + 31:0[R8]]
0004f907: V3 := pad:128[31:0[R8]]
0004f90e: R1 := pad:64[31:0[R8] | ~31:0[R1]]
0004f915: R1 := pad:64[31:0[R1] ^ 31:0[R9]]
0004f91e: V0 := pad:128[63:32[V0] + 63:32[V3].31:0[V0] + 31:0[V3]]
0004f925: R1 := pad:64[31:0[R1] + 31:0[R12]]
0004f92c: R7 := pad:64[31:0[R7] + 31:0[R1]]
0004f933: R7 := pad:64[10:0[R7].31:11[R7]]
0004f93a: R8 := pad:64[31:0[R8] + 31:0[R7]]
0004f941: R10 := pad:64[31:0[R10] + 31:0[R8]]
0004f947: when CF & ~ZF goto %0004e89d
0006cdd1: goto %0004f94b

0004f94b:
0004f94f: #602 := R31 + 0x10
0004f954: R19 := mem[#602, el]:u64
0004f959: R20 := mem[#602 + 8, el]:u64
0004f95f: #603 := R31 + 0x20
0004f964: R21 := mem[#603, el]:u64
0004f969: R22 := mem[#603 + 8, el]:u64
0004f96f: #604 := R31 + 0x30
0004f974: R23 := mem[#604, el]:u64
0004f979: R24 := mem[#604 + 8, el]:u64
0004f97f: #605 := R31 + 0x50
0004f984: R27 := mem[#605, el]:u64
0004f989: R28 := mem[#605 + 8, el]:u64
0006cdd2: goto %00048eb7

00048eb7:
00048ec2: V2 := 127:64[V2].31:0[R10].31:0[V2]
00048ec8: #183 := R31 + 0x40
00048ecd: R25 := mem[#183, el]:u64
00048ed2: R26 := mem[#183 + 8, el]:u64
00048ed9: R29 := mem[R31, el]:u64
00048ede: R30 := mem[R31 + 8, el]:u64
00048ee2: R31 := R31 + 0x60
00048eea: V2 := 127:96[V2].31:0[V0].63:0[V2]
00048ef1: V2 := 31:0[V1].95:0[V2]
00048ef9: mem := mem with [R2, el]:u128 <- V2
00048efe: call R30 with noreturn

0006cdd3: sub md5_process_bytes(md5_process_bytes_result)
0006d129: md5_process_bytes_result :: out u32 = low:32[R0]

00049103:
00049107: #191 := R31 - 0x40
0004910d: mem := mem with [#191, el]:u64 <- R29
00049113: mem := mem with [#191 + 8, el]:u64 <- R30
00049117: R31 := #191
0004911d: R29 := R31
00049123: #192 := R31 + 0x10
00049129: mem := mem with [#192, el]:u64 <- R19
0004912f: mem := mem with [#192 + 8, el]:u64 <- R20
00049135: R19 := R0
0004913c: R0 := pad:64[mem[R2 + 0x18, el]:u32]
00049142: #193 := R31 + 0x20
00049148: mem := mem with [#193, el]:u64 <- R21
0004914e: mem := mem with [#193 + 8, el]:u64 <- R22
00049154: R21 := R2
0004915a: R22 := R1
00049161: when 31:0[R0] <> 0 goto %0004915f
0006cdd4: goto %00049287

0004915f:
00049168: R20 := pad:64[31:0[R0]]
0004916e: #194 := R31 + 0x30
00049174: mem := mem with [#194, el]:u64 <- R23
0004917a: mem := mem with [#194 + 8, el]:u64 <- R24
0004917f: R23 := 0x80
00049186: R23 := R23 + ~R20 + 1
0004918c: R24 := R2 + 0x1C
00049192: #195 := ~R1
00049197: #196 := R23 + ~R1 + 1
0004919d: VF := extend:65[#196] <> extend:65[R23] + extend:65[#195] + 1
000491a3: CF := pad:65[#196] <> pad:65[R23] + pad:65[#195] + 1
000491a7: ZF := #196 = 0
000491ab: NF := 63:63[#196]
000491b2: R0 := R24 + R20
000491c1: when ~(CF & ~ZF) goto %000491b9
000491c2: goto %000491bd

000491bd:
000491be: R23 := R1
000491c4: goto %000491c0

000491b9:
000491ba: R23 := R23
000491c3: goto %000491c0

000491c0:
000491ca: R1 := R19
000491d0: R2 := R23
000491d5: R30 := 0x98A4
000491d7: call @memcpy with return %000491d9

000491d9:
000491de: R1 := pad:64[mem[R21 + 0x18, el]:u32]
000491e5: R1 := pad:64[31:0[R1] + 31:0[R23]]
000491ed: mem := mem with [R21 + 0x18, el]:u32 <- 31:0[R1]
000491f3: #197 := 31:0[R1] - 0x40
000491f8: VF := extend:33[#197] <> extend:33[31:0[R1]] - 0x40
000491fd: CF := pad:33[#197] <> pad:33[31:0[R1]] + 0xFFFFFFC0
00049201: ZF := #197 = 0
00049205: NF := 31:31[#197]
0004920c: when CF & ~ZF goto %0004920a
0006cdd5: goto %00049265

0004920a:
00049213: R2 := R21
00049219: R0 := R24
0004921f: R1 := 0.31:6[R1].0
00049224: R30 := 0x9900
00049226: call @md5_process_block with return %00049228

00049228:
0004922d: R2 := pad:64[mem[R21 + 0x18, el]:u32]
00049234: R0 := R20 + R23
0004923a: R1 := 63:6[R0].0
00049240: R0 := R24
00049246: R2 := pad:64[0.5:0[R2]]
0004924e: mem := mem with [R21 + 0x18, el]:u32 <- 31:0[R2]
00049255: R1 := R24 + R1
0004925b: R2 := 0.5:0[R2]
00049260: R30 := 0x9924
00049262: call @memcpy with return %00049264

00049264:
00049267: goto %00049265

00049265:
0004926d: R19 := R19 + R23
00049274: R22 := R22 + ~R23 + 1
0004927a: #198 := R31 + 0x30
0004927f: R23 := mem[#198, el]:u64
00049284: R24 := mem[#198 + 8, el]:u64
00049289: goto %00049287

00049287:
0004928e: #199 := R22 - 0x3F
00049293: VF := extend:65[#199] <> extend:65[R22] - 0x3F
00049298: CF := pad:65[#199] <> pad:65[R22] + 0xFFFFFFFFFFFFFFC1
0004929c: ZF := #199 = 0
000492a0: NF := 63:63[#199]
000492a7: when ~(CF & ~ZF) goto %000492a5
0006cdd6: goto %0004e6ec

0004e6ec:
0004e6ef: VF := 0
0004e6f2: CF := 0
0004e6f6: ZF := (0.1:0[R19]) = 0
0004e6f9: NF := 0
0004e6fe: when ZF goto %000493a4
0006cdd7: goto %0004e702

000493a4:
000493a8: R1 := 63:6[R22].0
000493ae: R0 := R19
000493b4: R22 := 0.5:0[R22]
000493bb: R19 := R19 + R1
000493c1: R2 := R21
000493c6: R30 := 0x9864
000493c8: call @md5_process_block with return %000492a5

000492a5:
000492af: when R22 <> 0 goto %000492ad
0006cdd8: goto %0004e6b7

000492ad:
000492b6: R20 := R21 + 0x1C
000492bc: #200 := R31 + 0x30
000492c2: mem := mem with [#200, el]:u64 <- R23
000492c8: mem := mem with [#200 + 8, el]:u64 <- R24
000492ce: R23 := R19
000492d3: goto %000492d1

0004e6b7:
0004e6bb: #579 := R31 + 0x10
0004e6c0: R19 := mem[#579, el]:u64
0004e6c5: R20 := mem[#579 + 8, el]:u64
0004e6cb: #580 := R31 + 0x20
0004e6d0: R21 := mem[#580, el]:u64
0004e6d5: R22 := mem[#580 + 8, el]:u64
0004e6dc: R29 := mem[R31, el]:u64
0004e6e1: R30 := mem[R31 + 8, el]:u64
0004e6e5: R31 := R31 + 0x40
0004e6ea: call R30 with noreturn

0004e702:
0004e706: #581 := R31 + 0x30
0004e70c: mem := mem with [#581, el]:u64 <- R23
0004e712: mem := mem with [#581 + 8, el]:u64 <- R24
0004e718: #582 := R22 - 0x40
0004e71d: VF := extend:65[#582] <> extend:65[R22] - 0x40
0004e722: CF := pad:65[#582] <> pad:65[R22] + 0xFFFFFFFFFFFFFFC0
0004e726: ZF := #582 = 0
0004e72a: NF := 63:63[#582]
0004e730: R20 := R21 + 0x1C
0004e736: when ZF goto %0004e734
0006cdd9: goto %0004e743

0004e734:
0004e73d: R23 := R19
0004e741: goto %000492d1

0004e743:
0004e747: R24 := R22 - 0x41
0004e74e: R24 := 0.57:0[R24 >> 6 | R24 << 0x3A]
0004e754: R23 := R24 + 1
0004e75b: R23 := R19 + (R23 << 6)
0006cdda: goto %0004e75f

0004e75f:
0004e764: R0 := mem[R19, el]:u64
0004e769: R1 := mem[R19 + 8, el]:u64
0004e771: mem := mem with [R20, el]:u64 <- R0
0004e777: mem := mem with [R20 + 8, el]:u64 <- R1
0004e77d: R2 := R21
0004e783: #583 := R19 + 0x10
0004e788: R0 := mem[#583, el]:u64
0004e78d: R1 := mem[#583 + 8, el]:u64
0004e793: #584 := R20 + 0x10
0004e799: mem := mem with [#584, el]:u64 <- R0
0004e79f: mem := mem with [#584 + 8, el]:u64 <- R1
0004e7a5: #585 := R19 + 0x20
0004e7aa: R4 := mem[#585, el]:u64
0004e7af: R5 := mem[#585 + 8, el]:u64
0004e7b5: #586 := R20 + 0x20
0004e7bb: mem := mem with [#586, el]:u64 <- R4
0004e7c1: mem := mem with [#586 + 8, el]:u64 <- R5
0004e7c6: R1 := 0x40
0004e7cc: #587 := R19 + 0x30
0004e7d1: R4 := mem[#587, el]:u64
0004e7d6: R5 := mem[#587 + 8, el]:u64
0004e7dc: #588 := R20 + 0x30
0004e7e2: mem := mem with [#588, el]:u64 <- R4
0004e7e8: mem := mem with [#588 + 8, el]:u64 <- R5
0004e7ef: R19 := R19 + R1
0004e7f5: R0 := R20
0004e7fa: R30 := 0x9804
0004e7fc: call @md5_process_block with return %0004e7fe

0004e7fe:
0004e802: #589 := ~R23
0004e807: #590 := R19 + ~R23 + 1
0004e80d: VF := extend:65[#590] <> extend:65[R19] + extend:65[#589] + 1
0004e813: CF := pad:65[#590] <> pad:65[R19] + pad:65[#589] + 1
0004e817: ZF := #590 = 0
0004e81b: NF := 63:63[#590]
0004e820: when ZF <> 1 goto %0004e75f
0006cddb: goto %0004e824

0004e824:
0004e828: R22 := R22 - 0x40
0004e82f: R22 := R22 + ~(R24 << 6) + 1
0006cddc: goto %000492d1

000492d1:
000492d9: R19 := pad:64[mem[R21 + 0x18, el]:u32]
000492df: R1 := R23
000492e5: R2 := R22
000492ec: R0 := R20 + R19
000492f3: R19 := R19 + R22
000492f8: R30 := 0x982C
000492fa: call @memcpy with return %000492fc

000492fc:
00049300: #201 := R19 - 0x3F
00049305: VF := extend:65[#201] <> extend:65[R19] - 0x3F
0004930a: CF := pad:65[#201] <> pad:65[R19] + 0xFFFFFFFFFFFFFFC1
0004930e: ZF := #201 = 0
00049312: NF := 63:63[#201]
00049319: when CF & ~ZF goto %00049317
0006cddd: goto %00049354

00049317:
00049320: R2 := R21
00049326: R0 := R20
0004932c: R19 := R19 - 0x40
00049331: R1 := 0x40
00049336: R30 := 0x98DC
00049338: call @md5_process_block with return %0004933a

0004933a:
0004933e: R0 := R20
00049344: R2 := R19
0004934a: R1 := R21 + 0x5C
0004934f: R30 := 0x98EC
00049351: call @memcpy with return %00049353

00049353:
00049356: goto %00049354

00049354:
0004935b: #202 := R31 + 0x30
00049360: R23 := mem[#202, el]:u64
00049365: R24 := mem[#202 + 8, el]:u64
0004936d: mem := mem with [R21 + 0x18, el]:u32 <- 31:0[R19]
00049373: #203 := R31 + 0x10
00049378: R19 := mem[#203, el]:u64
0004937d: R20 := mem[#203 + 8, el]:u64
00049383: #204 := R31 + 0x20
00049388: R21 := mem[#204, el]:u64
0004938d: R22 := mem[#204 + 8, el]:u64
00049394: R29 := mem[R31, el]:u64
00049399: R30 := mem[R31 + 8, el]:u64
0004939d: R31 := R31 + 0x40
000493a2: call R30 with noreturn

0006cdde: sub md5_read_ctx(md5_read_ctx_result)
0006d12a: md5_read_ctx_result :: out u32 = low:32[R0]

00048db1:
00048db5: R2 := R0
00048dbb: R0 := R1
00048dc2: R1 := pad:64[mem[R2, el]:u32]
00048dca: mem := mem with [R0, el]:u32 <- 31:0[R1]
00048dd1: R1 := pad:64[mem[R2 + 4, el]:u32]
00048dd9: mem := mem with [R0 + 4, el]:u32 <- 31:0[R1]
00048de0: R1 := pad:64[mem[R2 + 8, el]:u32]
00048de8: mem := mem with [R0 + 8, el]:u32 <- 31:0[R1]
00048def: R1 := pad:64[mem[R2 + 0xC, el]:u32]
00048df7: mem := mem with [R0 + 0xC, el]:u32 <- 31:0[R1]
00048dfc: call R30 with noreturn

0006cddf: sub md5_stream(md5_stream_result)
0006d12b: md5_stream_result :: out u32 = low:32[R0]

000497a6:
000497a9: R12 := 0x1140
000497b0: R31 := R31 + ~R12 + 1
000497b8: mem := mem with [R31, el]:u64 <- R29
000497be: mem := mem with [R31 + 8, el]:u64 <- R30
000497c4: R29 := R31
000497ca: #221 := R31 + 0x30
000497d0: mem := mem with [#221, el]:u64 <- R23
000497d6: mem := mem with [#221 + 8, el]:u64 <- R24
000497db: R23 := 0x27000
000497e1: R24 := R1
000497e6: R1 := 0x11000
000497ec: #222 := R31 + 0x10
000497f2: mem := mem with [#222, el]:u64 <- R19
000497f8: mem := mem with [#222 + 8, el]:u64 <- R20
000497fe: R20 := R0
00049805: R0 := mem[R23 + 0xFB8, el]:u64
0004980b: #223 := R31 + 0x20
00049811: mem := mem with [#223, el]:u64 <- R21
00049817: mem := mem with [#223 + 8, el]:u64 <- R22
0004981d: R21 := R31 + 0xF0
00049824: V0 := mem[R1 + 0x8D0, el]:u128
0004982b: R1 := mem[R0, el]:u64
00049833: mem := mem with [R31 + 0x1138, el]:u64 <- R1
00049838: R1 := 0
00049840: mem := mem with [R31 + 0x40, el]:u64 <- R25
00049846: R25 := R31 + 0x50
0004984b: R22 := 0x1000
00049852: mem := mem with [R31 + 0x60, el]:u64 <- 0
00049859: mem := mem with [R31 + 0x68, el]:u32 <- 0
00049861: mem := mem with [R31 + 0x50, el]:u128 <- V0
0006cde0: goto %00049863

00049863:
00049866: R19 := 0
0004986b: goto %00049869

00049869:
00049871: R2 := R22 + ~R19 + 1
00049878: R0 := R21 + R19
0004987e: R3 := R20
00049883: R1 := 1
00049888: R30 := 0x9FA8
0004988a: call @fread with return %0004988c

0004988c:
00049891: R19 := R19 + R0
00049897: #224 := R19 - 0x1000
0004989c: VF := extend:65[#224] <> extend:65[R19] - 0x1000
000498a1: CF := pad:65[#224] <> pad:65[R19] + 0xFFFFFFFFFFFFF000
000498a5: ZF := #224 = 0
000498a9: NF := 63:63[#224]
000498af: when ZF <> 1 goto %000498ad
0006cde1: goto %0004dd8a

0004dd8a:
0004dd8e: R1 := R19
0004dd94: R2 := R25
0004dd9a: R0 := R21
0004dd9f: R30 := 0x9FC4
0004dda1: call @md5_process_block with return %0004dda3

0004dda3:
0004dda5: goto %00049863

000498ad:
000498b6: when R0 = 0 goto %000498b4
0006cde2: goto %0004dd75

000498b4:
000498bd: R0 := R20
000498c2: R30 := 0x9FD0
000498c4: call @ferror with return %000498c6

000498c6:
000498ca: R1 := pad:64[31:0[R0]]
000498cf: R0 := 1
000498d6: when 31:0[R1] <> 0 goto %000498d4
0006cde3: goto %0004dd67

0004dd75:
0004dd79: R0 := R20
0004dd7e: R30 := 0x9F90
0004dd80: call @feof with return %0004dd82

0004dd82:
0004dd86: when 31:0[R0] <> 0 goto %0004dd67
0006cde4: goto %00049869

0004dd67:
0004dd6b: R20 := R31 + 0x50
0004dd71: when R19 <> 0 goto %0004dd32
0006cde5: goto %0004dd4c

0004dd32:
0004dd36: R1 := R19
0004dd3c: R0 := R21
0004dd42: R2 := R20
0004dd47: R30 := 0xA03C
0004dd49: call @md5_process_bytes with return %0004dd4b

0004dd4b:
0004dd4e: goto %0004dd4c

0004dd4c:
0004dd53: R1 := R24
0004dd59: R0 := R20
0004dd5e: R30 := 0x9FF0
0004dd60: call @md5_finish_ctx with return %0004dd62

0004dd62:
0004dd65: R0 := 0
0006cde6: goto %000498d4

000498d4:
000498de: R23 := mem[R23 + 0xFB8, el]:u64
000498e5: R1 := mem[R31 + 0x1138, el]:u64
000498ec: R2 := mem[R23, el]:u64
000498f2: #225 := ~R2
000498f7: #226 := R1 + ~R2 + 1
000498fd: VF := extend:65[#226] <> extend:65[R1] + extend:65[#225] + 1
00049903: CF := pad:65[#226] <> pad:65[R1] + pad:65[#225] + 1
00049907: ZF := #226 = 0
0004990b: NF := 63:63[#226]
0004990f: R1 := #226
00049914: R2 := 0
0004991a: when ZF <> 1 goto %00049918
0006cde7: goto %0004dcde

00049918:
00049920: R30 := 0xA044
00049922: call @__stack_chk_fail with return %00049924

00049924:
0006cde8: call @md5_buffer with noreturn

0004dcde:
0004dce1: R12 := 0x1140
0004dce8: R29 := mem[R31, el]:u64
0004dced: R30 := mem[R31 + 8, el]:u64
0004dcf3: #541 := R31 + 0x10
0004dcf8: R19 := mem[#541, el]:u64
0004dcfd: R20 := mem[#541 + 8, el]:u64
0004dd03: #542 := R31 + 0x20
0004dd08: R21 := mem[#542, el]:u64
0004dd0d: R22 := mem[#542 + 8, el]:u64
0004dd13: #543 := R31 + 0x30
0004dd18: R23 := mem[#543, el]:u64
0004dd1d: R24 := mem[#543 + 8, el]:u64
0004dd24: R25 := mem[R31 + 0x40, el]:u64
0004dd2b: R31 := R31 + R12
0004dd30: call R30 with noreturn

0006cde9: sub memcmp(memcmp_s1, memcmp_s2, memcmp_n, memcmp_result)
0006d12c: memcmp_s1 :: in out u64 = R0
0006d12d: memcmp_s2 :: in out u64 = R1
0006d12e: memcmp_n :: in u64 = R2
0006d12f: memcmp_result :: out u32 = low:32[R0]

00046fba:
00064bdb: R16 := 0x27000
00064be2: R17 := mem[R16 + 0xE18, el]:u64
00064be8: R16 := R16 + 0xE18
00064bed: call R17 with noreturn

0006cdea: sub memcpy(memcpy_dst, memcpy_src, memcpy_n, memcpy_result)
0006d130: memcpy_dst :: in out u64 = R0
0006d131: memcpy_src :: in out u64 = R1
0006d132: memcpy_n :: in u64 = R2
0006d133: memcpy_result :: out u64 = R0

000485eb:
000646c9: R16 := 0x27000
000646d0: R17 := mem[R16 + 0xC40, el]:u64
000646d6: R16 := R16 + 0xC40
000646db: call R17 with noreturn

0006cdeb: sub memset(memset_buf, memset_c, memset_n, memset_result)
0006d134: memset_buf :: in out u64 = R0
0006d135: memset_c :: in u32 = low:32[R1]
0006d136: memset_n :: in u64 = R2
0006d137: memset_result :: out u64 = R0

0004952a:
000649cb: R16 := 0x27000
000649d2: R17 := mem[R16 + 0xD58, el]:u64
000649d8: R16 := R16 + 0xD58
000649dd: call R17 with noreturn

0006cdec: sub memxor(memxor_result)
0006d138: memxor_result :: out u32 = low:32[R0]

00048d26:
00048d2a: when R2 = 0 goto %00048d28
0006cded: goto %0004f9a0

0004f9a0:
0004f9a4: R3 := R1 + 0xF
0004f9aa: R4 := R2 - 1
0004f9b1: R3 := R3 + ~R0 + 1
0004f9b7: #606 := R3 - 0x1E
0004f9bc: VF := extend:65[#606] <> extend:65[R3] - 0x1E
0004f9c1: CF := pad:65[#606] <> pad:65[R3] + 0xFFFFFFFFFFFFFFE2
0004f9c5: ZF := #606 = 0
0004f9c9: NF := 63:63[#606]
0004f9cf: #607 := R4 - 0xE
0004f9f6: goto %0004f9f0

0004f9f0:
0004f9f2: when CF & ~ZF goto %0004f9d5
0004f9f3: goto %0004f9e5

0004f9e5:
0004f9e6: VF := 0
0004f9e9: CF := 0
0004f9ec: ZF := 0
0004f9ef: NF := 0
0004f9f5: goto %0004f9f1

0004f9d5:
0004f9d6: VF := extend:65[#607] <> extend:65[R4] - 0xE
0004f9db: CF := pad:65[#607] <> pad:65[R4] + 0xFFFFFFFFFFFFFFF2
0004f9df: ZF := #607 = 0
0004f9e3: NF := 63:63[#607]
0004f9f4: goto %0004f9f1

0004f9f1:
0004f9fc: when ~(CF & ~ZF) goto %00048d32
0006cdee: goto %0004fa00

00048d32:
00048d35: R3 := 0
0006cdef: goto %00048d39

00048d39:
00048d3f: R4 := pad:64[mem[R1 + R3]]
00048d47: R5 := pad:64[mem[R0 + R3]]
00048d4e: R4 := pad:64[31:0[R4] ^ 31:0[R5]]
00048d57: mem := mem with [R0 + R3] <- 7:0[R4]
00048d5d: R3 := R3 + 1
00048d63: #174 := ~R3
00048d68: #175 := R2 + ~R3 + 1
00048d6e: VF := extend:65[#175] <> extend:65[R2] + extend:65[#174] + 1
00048d74: CF := pad:65[#175] <> pad:65[R2] + pad:65[#174] + 1
00048d78: ZF := #175 = 0
00048d7c: NF := 63:63[#175]
00048d81: when ZF <> 1 goto %00048d39
0006cdf0: goto %00048d85

00048d85:
00048d88: call R30 with noreturn

0004fa00:
0004fa04: R4 := 63:4[R2].0
0004fa09: R3 := 0
0006cdf1: goto %0004fa0d

0004fa0d:
0004fa13: V0 := mem[R1 + R3, el]:u128
0004fa1b: V1 := mem[R0 + R3, el]:u128
0004fa22: V0 := V1 ^ V0
0004fa2b: mem := mem with [R0 + R3, el]:u128 <- V0
0004fa31: R3 := R3 + 0x10
0004fa37: #608 := ~R4
0004fa3c: #609 := R3 + ~R4 + 1
0004fa42: VF := extend:65[#609] <> extend:65[R3] + extend:65[#608] + 1
0004fa48: CF := pad:65[#609] <> pad:65[R3] + pad:65[#608] + 1
0004fa4c: ZF := #609 = 0
0004fa50: NF := 63:63[#609]
0004fa55: when ZF <> 1 goto %0004fa0d
0006cdf2: goto %0004fa59

0004fa59:
0004fa5d: R5 := 63:4[R2].0
0004fa63: R3 := 0.3:0[R2]
0004fa69: #610 := ~R5
0004fa6e: #611 := R2 + ~R5 + 1
0004fa74: VF := extend:65[#611] <> extend:65[R2] + extend:65[#610] + 1
0004fa7a: CF := pad:65[#611] <> pad:65[R2] + pad:65[#610] + 1
0004fa7e: ZF := #611 = 0
0004fa82: NF := 63:63[#611]
0004fa89: R4 := R1 + R5
0004fa90: R2 := R0 + R5
0004fa95: when ZF goto %00048d28
0006cdf3: goto %0004fa99

0004fa99:
0004fa9f: R6 := pad:64[mem[R1 + R5]]
0004faa5: #612 := R3 - 1
0004faaa: VF := extend:65[#612] <> extend:65[R3] - 1
0004faaf: CF := pad:65[#612] <> pad:65[R3] + 0xFFFFFFFFFFFFFFFF
0004fab3: ZF := #612 = 0
0004fab7: NF := 63:63[#612]
0004fabf: R1 := pad:64[mem[R0 + R5]]
0004fac6: R1 := pad:64[31:0[R1] ^ 31:0[R6]]
0004facf: mem := mem with [R0 + R5] <- 7:0[R1]
0004fad4: when ZF goto %00048d28
0006cdf4: goto %0004fad8

0004fad8:
0004fadd: R1 := pad:64[mem[R4 + 1]]
0004fae3: #613 := R3 - 2
0004fae8: VF := extend:65[#613] <> extend:65[R3] - 2
0004faed: CF := pad:65[#613] <> pad:65[R3] + 0xFFFFFFFFFFFFFFFE
0004faf1: ZF := #613 = 0
0004faf5: NF := 63:63[#613]
0004fafc: R5 := pad:64[mem[R2 + 1]]
0004fb03: R1 := pad:64[31:0[R1] ^ 31:0[R5]]
0004fb0b: mem := mem with [R2 + 1] <- 7:0[R1]
0004fb10: when ZF goto %00048d28
0006cdf5: goto %0004fb14

0004fb14:
0004fb19: R1 := pad:64[mem[R4 + 2]]
0004fb1f: #614 := R3 - 3
0004fb24: VF := extend:65[#614] <> extend:65[R3] - 3
0004fb29: CF := pad:65[#614] <> pad:65[R3] + 0xFFFFFFFFFFFFFFFD
0004fb2d: ZF := #614 = 0
0004fb31: NF := 63:63[#614]
0004fb38: R5 := pad:64[mem[R2 + 2]]
0004fb3f: R1 := pad:64[31:0[R1] ^ 31:0[R5]]
0004fb47: mem := mem with [R2 + 2] <- 7:0[R1]
0004fb4c: when ZF goto %00048d28
0006cdf6: goto %0004fb50

0004fb50:
0004fb55: R1 := pad:64[mem[R4 + 3]]
0004fb5b: #615 := R3 - 4
0004fb60: VF := extend:65[#615] <> extend:65[R3] - 4
0004fb65: CF := pad:65[#615] <> pad:65[R3] + 0xFFFFFFFFFFFFFFFC
0004fb69: ZF := #615 = 0
0004fb6d: NF := 63:63[#615]
0004fb74: R5 := pad:64[mem[R2 + 3]]
0004fb7b: R1 := pad:64[31:0[R1] ^ 31:0[R5]]
0004fb83: mem := mem with [R2 + 3] <- 7:0[R1]
0004fb88: when ZF goto %00048d28
0006cdf7: goto %0004fb8c

0004fb8c:
0004fb91: R1 := pad:64[mem[R4 + 4]]
0004fb97: #616 := R3 - 5
0004fb9c: VF := extend:65[#616] <> extend:65[R3] - 5
0004fba1: CF := pad:65[#616] <> pad:65[R3] + 0xFFFFFFFFFFFFFFFB
0004fba5: ZF := #616 = 0
0004fba9: NF := 63:63[#616]
0004fbb0: R5 := pad:64[mem[R2 + 4]]
0004fbb7: R1 := pad:64[31:0[R1] ^ 31:0[R5]]
0004fbbf: mem := mem with [R2 + 4] <- 7:0[R1]
0004fbc4: when ZF goto %00048d28
0006cdf8: goto %0004fbc8

0004fbc8:
0004fbcd: R1 := pad:64[mem[R4 + 5]]
0004fbd3: #617 := R3 - 6
0004fbd8: VF := extend:65[#617] <> extend:65[R3] - 6
0004fbdd: CF := pad:65[#617] <> pad:65[R3] + 0xFFFFFFFFFFFFFFFA
0004fbe1: ZF := #617 = 0
0004fbe5: NF := 63:63[#617]
0004fbec: R5 := pad:64[mem[R2 + 5]]
0004fbf3: R1 := pad:64[31:0[R1] ^ 31:0[R5]]
0004fbfb: mem := mem with [R2 + 5] <- 7:0[R1]
0004fc00: when ZF goto %00048d28
0006cdf9: goto %0004fc04

0004fc04:
0004fc09: R1 := pad:64[mem[R4 + 6]]
0004fc0f: #618 := R3 - 7
0004fc14: VF := extend:65[#618] <> extend:65[R3] - 7
0004fc19: CF := pad:65[#618] <> pad:65[R3] + 0xFFFFFFFFFFFFFFF9
0004fc1d: ZF := #618 = 0
0004fc21: NF := 63:63[#618]
0004fc28: R5 := pad:64[mem[R2 + 6]]
0004fc2f: R1 := pad:64[31:0[R1] ^ 31:0[R5]]
0004fc37: mem := mem with [R2 + 6] <- 7:0[R1]
0004fc3c: when ZF goto %00048d28
0006cdfa: goto %0004fc40

0004fc40:
0004fc45: R1 := pad:64[mem[R4 + 7]]
0004fc4b: #619 := R3 - 8
0004fc50: VF := extend:65[#619] <> extend:65[R3] - 8
0004fc55: CF := pad:65[#619] <> pad:65[R3] + 0xFFFFFFFFFFFFFFF8
0004fc59: ZF := #619 = 0
0004fc5d: NF := 63:63[#619]
0004fc64: R5 := pad:64[mem[R2 + 7]]
0004fc6b: R1 := pad:64[31:0[R1] ^ 31:0[R5]]
0004fc73: mem := mem with [R2 + 7] <- 7:0[R1]
0004fc78: when ZF goto %00048d28
0006cdfb: goto %0004fc7c

0004fc7c:
0004fc81: R1 := pad:64[mem[R4 + 8]]
0004fc87: #620 := R3 - 9
0004fc8c: VF := extend:65[#620] <> extend:65[R3] - 9
0004fc91: CF := pad:65[#620] <> pad:65[R3] + 0xFFFFFFFFFFFFFFF7
0004fc95: ZF := #620 = 0
0004fc99: NF := 63:63[#620]
0004fca0: R5 := pad:64[mem[R2 + 8]]
0004fca7: R1 := pad:64[31:0[R1] ^ 31:0[R5]]
0004fcaf: mem := mem with [R2 + 8] <- 7:0[R1]
0004fcb4: when ZF goto %00048d28
0006cdfc: goto %0004fcb8

0004fcb8:
0004fcbd: R1 := pad:64[mem[R4 + 9]]
0004fcc3: #621 := R3 - 0xA
0004fcc8: VF := extend:65[#621] <> extend:65[R3] - 0xA
0004fccd: CF := pad:65[#621] <> pad:65[R3] + 0xFFFFFFFFFFFFFFF6
0004fcd1: ZF := #621 = 0
0004fcd5: NF := 63:63[#621]
0004fcdc: R5 := pad:64[mem[R2 + 9]]
0004fce3: R1 := pad:64[31:0[R1] ^ 31:0[R5]]
0004fceb: mem := mem with [R2 + 9] <- 7:0[R1]
0004fcf0: when ZF goto %00048d28
0006cdfd: goto %0004fcf4

0004fcf4:
0004fcf9: R1 := pad:64[mem[R4 + 0xA]]
0004fcff: #622 := R3 - 0xB
0004fd04: VF := extend:65[#622] <> extend:65[R3] - 0xB
0004fd09: CF := pad:65[#622] <> pad:65[R3] + 0xFFFFFFFFFFFFFFF5
0004fd0d: ZF := #622 = 0
0004fd11: NF := 63:63[#622]
0004fd18: R5 := pad:64[mem[R2 + 0xA]]
0004fd1f: R1 := pad:64[31:0[R1] ^ 31:0[R5]]
0004fd27: mem := mem with [R2 + 0xA] <- 7:0[R1]
0004fd2c: when ZF goto %00048d28
0006cdfe: goto %0004fd30

0004fd30:
0004fd35: R1 := pad:64[mem[R4 + 0xB]]
0004fd3b: #623 := R3 - 0xC
0004fd40: VF := extend:65[#623] <> extend:65[R3] - 0xC
0004fd45: CF := pad:65[#623] <> pad:65[R3] + 0xFFFFFFFFFFFFFFF4
0004fd49: ZF := #623 = 0
0004fd4d: NF := 63:63[#623]
0004fd54: R5 := pad:64[mem[R2 + 0xB]]
0004fd5b: R1 := pad:64[31:0[R1] ^ 31:0[R5]]
0004fd63: mem := mem with [R2 + 0xB] <- 7:0[R1]
0004fd68: when ZF goto %00048d28
0006cdff: goto %0004fd6c

0004fd6c:
0004fd71: R1 := pad:64[mem[R4 + 0xC]]
0004fd77: #624 := R3 - 0xD
0004fd7c: VF := extend:65[#624] <> extend:65[R3] - 0xD
0004fd81: CF := pad:65[#624] <> pad:65[R3] + 0xFFFFFFFFFFFFFFF3
0004fd85: ZF := #624 = 0
0004fd89: NF := 63:63[#624]
0004fd90: R5 := pad:64[mem[R2 + 0xC]]
0004fd97: R1 := pad:64[31:0[R1] ^ 31:0[R5]]
0004fd9f: mem := mem with [R2 + 0xC] <- 7:0[R1]
0004fda4: when ZF goto %00048d28
0006ce00: goto %0004fda8

0004fda8:
0004fdad: R1 := pad:64[mem[R4 + 0xD]]
0004fdb3: #625 := R3 - 0xE
0004fdb8: VF := extend:65[#625] <> extend:65[R3] - 0xE
0004fdbd: CF := pad:65[#625] <> pad:65[R3] + 0xFFFFFFFFFFFFFFF2
0004fdc1: ZF := #625 = 0
0004fdc5: NF := 63:63[#625]
0004fdcc: R3 := pad:64[mem[R2 + 0xD]]
0004fdd3: R1 := pad:64[31:0[R1] ^ 31:0[R3]]
0004fddb: mem := mem with [R2 + 0xD] <- 7:0[R1]
0004fde0: when ZF goto %00048d28
0006ce01: goto %0004fde4

0004fde4:
0004fde9: R1 := pad:64[mem[R4 + 0xE]]
0004fdf0: R3 := pad:64[mem[R2 + 0xE]]
0004fdf7: R1 := pad:64[31:0[R1] ^ 31:0[R3]]
0004fdff: mem := mem with [R2 + 0xE] <- 7:0[R1]
0006ce02: goto %00048d28

00048d28:
00048d30: call R30 with noreturn

0006ce03: sub myexit(myexit_result)
0006d139: myexit_result :: out u32 = low:32[R0]

00056bf4:
00056bfb: #1053 := R31 - 0x20
00056c01: mem := mem with [#1053, el]:u64 <- R29
00056c07: mem := mem with [#1053 + 8, el]:u64 <- R30
00056c0b: R31 := #1053
00056c11: R29 := R31
00056c19: mem := mem with [R31 + 0x10, el]:u64 <- R19
00056c1f: R19 := pad:64[31:0[R0]]
00056c26: when 31:0[R0] <> 0 goto %00056c24
0006ce04: goto %00056c54

00056c54:
00056c5b: R0 := pad:64[31:0[R19]]
00056c60: R30 := 0x4824
00056c63: call @exit with return %00056c24

00056c24:
00056c2c: R0 := 0x27000
00056c31: R2 := 0x11000
00056c36: R1 := 1
00056c3c: R2 := R2 + 0x678
00056c43: R0 := mem[R0 + 0xF68, el]:u64
00056c4a: R0 := mem[R0, el]:u64
00056c4f: R30 := 0x4840
00056c51: call @__fprintf_chk with return %00056c53

00056c53:
00056c56: goto %00056c54

0006ce05: sub new(new_result)
0006d13a: new_result :: out u32 = low:32[R0]

00045f8d:
00045f90: R1 := 1
00045f95: call @calloc with noreturn

0006ce06: sub new_auth(new_auth_result)
0006d13b: new_auth_result :: out u32 = low:32[R0]

00045dd1:
00045dd8: #8 := R31 - 0x10
00045dde: mem := mem with [#8, el]:u64 <- R29
00045de4: mem := mem with [#8 + 8, el]:u64 <- R30
00045de8: R31 := #8
00045ded: R0 := 0x13C
00045df3: R29 := R31
00045df8: R30 := 0xB060
00045dfb: call @malloc with return %00045dfd

00045dfd:
00045e01: when R0 = 0 goto %00045dff
0006ce07: goto %00060148

00060148:
0006014c: R4 := R0 + 0x32
00060152: R3 := R0 + 0x64
00060159: mem := mem with [R0, el]:u64 <- 0
0006015e: mem := mem with [R0 + 8, el]:u64 <- 0
00060164: R2 := R0 + 0xFA
0006016a: R5 := R0 + 0xC8
00060170: #1509 := R0 + 0x10
00060175: mem := mem with [#1509, el]:u64 <- 0
0006017a: mem := mem with [#1509 + 8, el]:u64 <- 0
00060180: R1 := R0 + 0x96
00060186: R6 := R0 + 0x200
0006018c: #1510 := R0 + 0x20
00060191: mem := mem with [#1510, el]:u64 <- 0
00060196: mem := mem with [#1510 + 8, el]:u64 <- 0
0006019b: R7 := 0x12000
000601a2: mem := mem with [R0 + 0x30, el]:u16 <- 0
000601a9: mem := mem with [R4, el]:u64 <- 0
000601ae: mem := mem with [R4 + 8, el]:u64 <- 0
000601b5: V0 := pad:128[mem[R7 + 0x688, el]:u64]
000601bb: #1511 := R4 + 0x10
000601c0: mem := mem with [#1511, el]:u64 <- 0
000601c5: mem := mem with [#1511 + 8, el]:u64 <- 0
000601cb: #1512 := R4 + 0x20
000601d0: mem := mem with [#1512, el]:u64 <- 0
000601d5: mem := mem with [#1512 + 8, el]:u64 <- 0
000601dc: mem := mem with [R0 + 0x62, el]:u16 <- 0
000601e3: mem := mem with [R3, el]:u64 <- 0
000601e8: mem := mem with [R3 + 8, el]:u64 <- 0
000601ee: #1513 := R3 + 0x10
000601f3: mem := mem with [#1513, el]:u64 <- 0
000601f8: mem := mem with [#1513 + 8, el]:u64 <- 0
000601fe: #1514 := R3 + 0x20
00060203: mem := mem with [#1514, el]:u64 <- 0
00060208: mem := mem with [#1514 + 8, el]:u64 <- 0
0006020f: mem := mem with [R0 + 0x94, el]:u16 <- 0
00060216: mem := mem with [R2, el]:u64 <- 0
0006021b: mem := mem with [R2 + 8, el]:u64 <- 0
00060221: #1515 := R2 + 0x10
00060226: mem := mem with [#1515, el]:u64 <- 0
0006022b: mem := mem with [#1515 + 8, el]:u64 <- 0
00060231: #1516 := R2 + 0x20
00060236: mem := mem with [#1516, el]:u64 <- 0
0006023b: mem := mem with [#1516 + 8, el]:u64 <- 0
00060241: #1517 := R0 + 0xC8
00060246: mem := mem with [#1517, el]:u64 <- 0
0006024b: mem := mem with [#1517 + 8, el]:u64 <- 0
00060252: mem := mem with [R0 + 0x12A, el]:u16 <- 0
00060258: #1518 := R5 + 0x10
0006025d: mem := mem with [#1518, el]:u64 <- 0
00060262: mem := mem with [#1518 + 8, el]:u64 <- 0
00060268: #1519 := R5 + 0x20
0006026d: mem := mem with [#1519, el]:u64 <- 0
00060272: mem := mem with [#1519 + 8, el]:u64 <- 0
00060279: mem := mem with [R5 + 0x30, el]:u16 <- 0
00060280: mem := mem with [R1, el]:u64 <- 0
00060285: mem := mem with [R1 + 8, el]:u64 <- 0
0006028b: #1520 := R1 + 0x10
00060290: mem := mem with [#1520, el]:u64 <- 0
00060295: mem := mem with [#1520 + 8, el]:u64 <- 0
0006029b: #1521 := R1 + 0x20
000602a0: mem := mem with [#1521, el]:u64 <- 0
000602a5: mem := mem with [#1521 + 8, el]:u64 <- 0
000602ac: mem := mem with [R0 + 0xC6, el]:u16 <- 0
000602b3: mem := mem with [R6 - 0xCC, el]:u64 <- 0
000602bb: mem := mem with [R6 - 0xD4, el]:u64 <- 63:0[V0]
0006ce08: goto %00045dff

00045dff:
00045e09: R29 := mem[R31, el]:u64
00045e0e: R30 := mem[R31 + 8, el]:u64
00045e12: R31 := R31 + 0x10
00045e17: call R30 with noreturn

0006ce09: sub new_rr_data(new_rr_data_result)
0006d13c: new_rr_data_result :: out u32 = low:32[R0]

0004a26b:
0004a26f: #279 := R31 - 0x10
0004a275: mem := mem with [#279, el]:u64 <- R29
0004a27b: mem := mem with [#279 + 8, el]:u64 <- R30
0004a27f: R31 := #279
0004a284: R0 := 0x68
0004a28a: R29 := R31
0004a28f: R30 := 0x5320
0004a291: call @malloc with return %0004a293

0004a293:
0004a298: mem := mem with [R0, el]:u32 <- 0
0004a29d: R1 := 0x11000
0004a2a4: mem := mem with [R0 + 8, el]:u64 <- 0
0004a2a9: V0 := 0
0004a2b0: mem := mem with [R0 + 0x20, el]:u32 <- 0
0004a2b7: V1 := mem[R1 + 0x6F0, el]:u128
0004a2bf: mem := mem with [R0 + 0x28, el]:u128 <- V0
0004a2c7: mem := mem with [R0 + 0x10, el]:u128 <- V1
0004a2cf: mem := mem with [R0 + 0x38, el]:u128 <- V0
0004a2d7: mem := mem with [R0 + 0x48, el]:u128 <- V0
0004a2df: mem := mem with [R0 + 0x58, el]:u128 <- V0
0004a2e6: R29 := mem[R31, el]:u64
0004a2eb: R30 := mem[R31 + 8, el]:u64
0004a2ef: R31 := R31 + 0x10
0004a2f4: call R30 with noreturn

0006ce0a: sub noproxy_add(noproxy_add_result)
0006d13d: noproxy_add_result :: out u32 = low:32[R0]

000571b8:
000571bc: #1076 := R31 - 0x60
000571c2: mem := mem with [#1076, el]:u64 <- R29
000571c8: mem := mem with [#1076 + 8, el]:u64 <- R30
000571cc: R31 := #1076
000571d2: R29 := R31
000571d8: #1077 := R31 + 0x30
000571de: mem := mem with [#1077, el]:u64 <- R23
000571e4: mem := mem with [#1077 + 8, el]:u64 <- R24
000571e9: R23 := 0x27000
000571f0: R2 := mem[R23 + 0xFB8, el]:u64
000571f6: #1078 := R31 + 0x10
000571fc: mem := mem with [#1078, el]:u64 <- R19
00057202: mem := mem with [#1078 + 8, el]:u64 <- R20
00057208: R20 := R0
0005720e: R0 := R1
00057215: R1 := mem[R2, el]:u64
0005721d: mem := mem with [R31 + 0x58, el]:u64 <- R1
00057222: R1 := 0
00057228: #1079 := R31 + 0x20
0005722e: mem := mem with [#1079, el]:u64 <- R21
00057234: mem := mem with [#1079 + 8, el]:u64 <- R22
0005723a: R22 := R31 + 0x50
0005723f: R21 := 0x13000
00057245: R21 := R21 + 0xFE0
0005724b: R2 := R22
00057251: R1 := R21
00057256: R30 := 0x10B60
00057259: call @strtok_r with return %0005725b

0005725b:
0005725f: when R0 = 0 goto %0005725d
0006ce0b: goto %0005a21e

0005a21e:
0005a221: R24 := 0x13000
0005a227: R19 := R0
0005a22d: R24 := R24 + 0xFE8
0005a235: mem := mem with [R31 + 0x40, el]:u64 <- R25
0005a23a: R25 := 0x28000
0005a240: R25 := R25 + 0x4D8
0005a245: goto %0005a243

0005a243:
0005a24b: R0 := pad:64[mem[R25 + 4, el]:u32]
0005a251: when 31:0[R0] = 0 goto %0005a24f
0006ce0c: goto %0005a2ab

0005a2ab:
0005a2af: R2 := R19
0005a2b5: R1 := R24
0005a2ba: R0 := 1
0005a2bf: R30 := 0x10BCC
0005a2c1: call @__printf_chk with return %0005a2c3

0005a2c3:
0005a2c7: R0 := R19
0005a2cc: R30 := 0x10BD4
0005a2ce: call @strdup with return %0005a2d0

0005a2d0:
0005a2d4: R2 := R0
0005a2d9: R1 := 0
0005a2df: R0 := R20
0005a2e4: R30 := 0x10BE4
0005a2e6: call @plist_add with return %0005a2e8

0005a2e8:
0005a2ec: R20 := R0
0005a2f2: R2 := R22
0005a2f8: R1 := R21
0005a2fd: R0 := 0
0005a302: R30 := 0x10BF8
0005a304: call @strtok_r with return %0005a306

0005a306:
0005a30a: R19 := R0
0005a310: when R0 <> 0 goto %0005a243
0006ce0d: goto %0005a29f

0005a24f:
0005a258: R0 := R19
0005a25d: R30 := 0x10B88
0005a25f: call @strdup with return %0005a261

0005a261:
0005a264: R1 := 0
0005a26a: R2 := R0
0005a270: R0 := R20
0005a275: R30 := 0x10B98
0005a277: call @plist_add with return %0005a279

0005a279:
0005a27d: R2 := R22
0005a283: R20 := R0
0005a289: R1 := R21
0005a28e: R0 := 0
0005a293: R30 := 0x10BAC
0005a295: call @strtok_r with return %0005a297

0005a297:
0005a29b: R19 := R0
0005a2a1: when R0 = 0 goto %0005a29f
0006ce0e: goto %0005a243

0005a29f:
0005a2a9: R25 := mem[R31 + 0x40, el]:u64
0006ce0f: goto %0005725d

0005725d:
00057267: R23 := mem[R23 + 0xFB8, el]:u64
0005726e: R0 := mem[R31 + 0x58, el]:u64
00057275: R1 := mem[R23, el]:u64
0005727b: #1080 := ~R1
00057280: #1081 := R0 + ~R1 + 1
00057286: VF := extend:65[#1081] <> extend:65[R0] + extend:65[#1080] + 1
0005728c: CF := pad:65[#1081] <> pad:65[R0] + pad:65[#1080] + 1
00057290: ZF := #1081 = 0
00057294: NF := 63:63[#1081]
00057298: R0 := #1081
0005729d: R1 := 0
000572a3: when ZF <> 1 goto %000572a1
0006ce10: goto %0005a1d3

000572a1:
000572ac: mem := mem with [R31 + 0x40, el]:u64 <- R25
000572b1: R30 := 0x10C3C
000572b3: call @__stack_chk_fail with return %000572b5

000572b5:
0006ce11: call @noproxy_match with noreturn

0005a1d3:
0005a1d7: R0 := R20
0005a1dd: #1232 := R31 + 0x10
0005a1e2: R19 := mem[#1232, el]:u64
0005a1e7: R20 := mem[#1232 + 8, el]:u64
0005a1ed: #1233 := R31 + 0x20
0005a1f2: R21 := mem[#1233, el]:u64
0005a1f7: R22 := mem[#1233 + 8, el]:u64
0005a1fd: #1234 := R31 + 0x30
0005a202: R23 := mem[#1234, el]:u64
0005a207: R24 := mem[#1234 + 8, el]:u64
0005a20e: R29 := mem[R31, el]:u64
0005a213: R30 := mem[R31 + 8, el]:u64
0005a217: R31 := R31 + 0x60
0005a21c: call R30 with noreturn

0006ce12: sub noproxy_match(noproxy_match_result)
0006d13e: noproxy_match_result :: out u32 = low:32[R0]

000572b7:
000572bb: #1082 := R31 - 0x40
000572c1: mem := mem with [#1082, el]:u64 <- R29
000572c7: mem := mem with [#1082 + 8, el]:u64 <- R30
000572cb: R31 := #1082
000572d1: R29 := R31
000572d7: #1083 := R31 + 0x10
000572dd: mem := mem with [#1083, el]:u64 <- R19
000572e3: mem := mem with [#1083 + 8, el]:u64 <- R20
000572eb: mem := mem with [R31 + 0x30, el]:u64 <- R23
000572f0: R23 := 0x28000
000572f6: R20 := R23 + 0x4D8
000572fd: R19 := mem[R20 + 0x18, el]:u64
00057303: when R19 = 0 goto %00057301
0006ce13: goto %0005a1b0

0005a1b0:
0005a1b4: #1231 := R31 + 0x20
0005a1ba: mem := mem with [#1231, el]:u64 <- R21
0005a1c0: mem := mem with [#1231 + 8, el]:u64 <- R22
0005a1c5: R22 := 0x14000
0005a1cb: R21 := R0
0005a1d1: R22 := R22 + 0x18
0006ce14: goto %00057366

00057366:
00057370: R0 := mem[R19 + 8, el]:u64
00057376: when R0 = 0 goto %00057374
0006ce15: goto %000573a7

000573a7:
000573ac: R1 := pad:64[mem[R0]]
000573b3: when 31:0[R1] <> 0 goto %000573b1
0006ce16: goto %00057374

000573b1:
000573ba: R1 := R21
000573bf: R2 := 0
000573c4: R30 := 0x10CDC
000573c7: call @fnmatch with return %000573c9

000573c9:
000573cd: when 31:0[R0] <> 0 goto %00057374
0006ce17: goto %000573d1

000573d1:
000573d5: R23 := R23 + 0x4D8
000573da: R20 := 1
000573e1: R0 := pad:64[mem[R23 + 4, el]:u32]
000573e8: when 31:0[R0] <> 0 goto %000573e6
0006ce18: goto %0005a15a

000573e6:
000573f0: R3 := mem[R19 + 8, el]:u64
000573f6: R2 := R21
000573fc: R0 := pad:64[31:0[R20]]
00057401: R1 := 0x14000
00057407: R1 := R1 + 8
0005740c: R30 := 0x10D20
0005740e: call @__printf_chk with return %00057410

00057410:
00057414: #1086 := R31 + 0x20
00057419: R21 := mem[#1086, el]:u64
0005741e: R22 := mem[#1086 + 8, el]:u64
00057422: goto %0005730b

0005a15a:
0005a15e: R0 := pad:64[31:0[R20]]
0005a164: #1228 := R31 + 0x10
0005a169: R19 := mem[#1228, el]:u64
0005a16e: R20 := mem[#1228 + 8, el]:u64
0005a174: #1229 := R31 + 0x20
0005a179: R21 := mem[#1229, el]:u64
0005a17e: R22 := mem[#1229 + 8, el]:u64
0005a185: R23 := mem[R31 + 0x30, el]:u64
0005a18c: R29 := mem[R31, el]:u64
0005a191: R30 := mem[R31 + 8, el]:u64
0005a195: R31 := R31 + 0x40
0005a19a: call R30 with noreturn

00057374:
0005737e: R1 := pad:64[mem[R20 + 4, el]:u32]
00057384: when 31:0[R1] <> 0 goto %0005733d
0006ce19: goto %00057388

0005733d:
00057342: R3 := mem[R19 + 8, el]:u64
00057348: R2 := R21
0005734e: R1 := R22
00057353: R0 := 1
00057358: R30 := 0x10CC0
0005735a: call @__printf_chk with return %0005735c

0005735c:
00057361: R19 := mem[R19 + 0x10, el]:u64
00057368: when R19 <> 0 goto %00057366
0006ce1a: goto %0005a19c

0005a19c:
0005a1a0: #1230 := R31 + 0x20
0005a1a5: R21 := mem[#1230, el]:u64
0005a1aa: R22 := mem[#1230 + 8, el]:u64
0005a1ae: goto %00057301

00057388:
0005738d: R19 := mem[R19 + 0x10, el]:u64
00057393: when R19 <> 0 goto %00057366
0006ce1b: goto %00057397

00057397:
0005739b: #1085 := R31 + 0x20
000573a0: R21 := mem[#1085, el]:u64
000573a5: R22 := mem[#1085 + 8, el]:u64
0006ce1c: goto %00057301

00057301:
00057309: R20 := 0
0006ce1d: goto %0005730b

0005730b:
0005730f: R0 := pad:64[31:0[R20]]
00057315: #1084 := R31 + 0x10
0005731a: R19 := mem[#1084, el]:u64
0005731f: R20 := mem[#1084 + 8, el]:u64
00057326: R23 := mem[R31 + 0x30, el]:u64
0005732d: R29 := mem[R31, el]:u64
00057332: R30 := mem[R31 + 8, el]:u64
00057336: R31 := R31 + 0x40
0005733b: call R30 with noreturn

0006ce1e: sub ntlm2_hash_password(ntlm2_hash_password_result)
0006d13f: ntlm2_hash_password_result :: out u32 = low:32[R0]

00050fb8:
00050fbc: #681 := R31 - 0x50
00050fc2: mem := mem with [#681, el]:u64 <- R29
00050fc8: mem := mem with [#681 + 8, el]:u64 <- R30
00050fcc: R31 := #681
00050fd2: R29 := R31
00050fd8: #682 := R31 + 0x20
00050fde: mem := mem with [#682, el]:u64 <- R21
00050fe4: mem := mem with [#682 + 8, el]:u64 <- R22
00050fe9: R21 := 0x27000
00050fef: R22 := R31 + 0x40
00050ff6: R21 := mem[R21 + 0xFB8, el]:u64
00050ffc: #683 := R31 + 0x30
00051002: mem := mem with [#683, el]:u64 <- R23
00051008: mem := mem with [#683 + 8, el]:u64 <- R24
0005100e: R24 := R0
00051015: R0 := mem[R21, el]:u64
0005101d: mem := mem with [R31 + 0x48, el]:u64 <- R0
00051022: R0 := 0
00051028: R23 := R1
0005102d: R0 := 0x16
00051033: #684 := R31 + 0x10
00051039: mem := mem with [#684, el]:u64 <- R19
0005103f: mem := mem with [#684 + 8, el]:u64 <- R20
00051045: R19 := R2
0005104a: R30 := 0x6130
0005104c: call @new with return %0005104e

0005104e:
00051052: R1 := R19
00051058: R19 := R0
0005105e: R0 := R22
00051063: R30 := 0x6140
00051065: call @unicode with return %00051067

00051067:
0005106c: R20 :=

00051072: R2 := R19
00051079: R0 := mem[R31 + 0x40, el]:u64
0005107f: R1 := R20
00051084: R30 := 0x6154
00051086: call @md4_buffer with return %00051088

00051088:
0005108d: mem := mem with [R19 + 0x10, el]:u32 <- 0
00051094: mem := mem with [R19 + 0x14] <- 0
0005109a: R2 := R20
0005109f: R1 := 0
000510a6: R0 := mem[R31 + 0x40, el]:u64
000510ab: R30 := 0x616C
000510ad: call @memset with return %000510af

000510af:
000510b4: R0 := mem[R31 + 0x40, el]:u64
000510b9: R30 := 0x6174
000510bb: call @free with return %000510bd

000510bd:
000510c1: R0 := R24
000510c6: R30 := 0x617C
000510c8: call @strlen with return %000510ca

000510ca:
000510ce: R20 := R0
000510d4: R0 := R23
000510d9: R30 := 0x6188
000510db: call @strlen with return %000510dd

000510dd:
000510e2: R0 := R20 + R0
000510e8: R0 := R0 + 1
000510ed: R30 := 0x6194
000510ef: call @new with return %000510f1

000510f1:
000510f5: R1 := R24
000510fb: R20 := R0
00051100: R30 := 0x61A0
00051103: call @strcat with return %00051105

00051105:
00051109: R1 := R23
0005110f: R0 := R20
00051114: R30 := 0x61AC
00051116: call @strcat with return %00051118

00051118:
0005111c: R0 := R20
00051121: R30 := 0x61B4
00051123: call @uppercase with return %00051125

00051125:
00051129: R1 := R20
0005112f: R0 := R22
00051134: R30 := 0x61C0
00051136: call @unicode with return %00051138

00051138:
0005113c: R23 := pad:64[31:0[R0]]
00051141: R0 := 0x11
00051146: R30 := 0x61CC
00051148: call @new with return %0005114a

0005114a:
0005114e: R4 := R0
00051155: R2 := mem[R31 + 0x40, el]:u64
0005115c: R3 :=

00051161: R1 := 0x10
00051167: R22 := R0
0005116d: R0 := R19
00051172: R30 := 0x61E8
00051174: call @hmac_md5 with return %00051176

00051176:
0005117a: R0 := R19
0005117f: R30 := 0x61F0
00051181: call @free with return %00051183

00051183:
00051188: R0 := mem[R31 + 0x40, el]:u64
0005118d: R30 := 0x61F8
0005118f: call @free with return %00051191

00051191:
00051195: R0 := R20
0005119a: R30 := 0x6200
0005119c: call @free with return %0005119e

0005119e:
000511a3: R0 := mem[R31 + 0x48, el]:u64
000511aa: R1 := mem[R21, el]:u64
000511b0: #685 := ~R1
000511b5: #686 := R0 + ~R1 + 1
000511bb: VF := extend:65[#686] <> extend:65[R0] + extend:65[#685] + 1
000511c1: CF := pad:65[#686] <> pad:65[R0] + pad:65[#685] + 1
000511c5: ZF := #686 = 0
000511c9: NF := 63:63[#686]
000511cd: R0 := #686
000511d2: R1 := 0
000511d8: when ZF <> 1 goto %000511d6
0006ce1f: goto %0005f490

000511d6:
000511de: R30 := 0x6230
000511e0: call @__stack_chk_fail with return %0006ce20

0006ce20:
0006ce21: call @ntlm_request with noreturn

0005f490:
0005f494: R0 := R22
0005f49a: #1437 := R31 + 0x10
0005f49f: R19 := mem[#1437, el]:u64
0005f4a4: R20 := mem[#1437 + 8, el]:u64
0005f4aa: #1438 := R31 + 0x20
0005f4af: R21 := mem[#1438, el]:u64
0005f4b4: R22 := mem[#1438 + 8, el]:u64
0005f4ba: #1439 := R31 + 0x30
0005f4bf: R23 := mem[#1439, el]:u64
0005f4c4: R24 := mem[#1439 + 8, el]:u64
0005f4cb: R29 := mem[R31, el]:u64
0005f4d0: R30 := mem[R31 + 8, el]:u64
0005f4d4: R31 := R31 + 0x50
0005f4d9: call R30 with noreturn

0006ce22: sub ntlm_hash_lm_password(ntlm_hash_lm_password_result)
0006d140: ntlm_hash_lm_password_result :: out u32 = low:32[R0]

00050cb9:
00050cbd: #670 := R31 - 0x150
00050cc3: mem := mem with [#670, el]:u64 <- R29
00050cc9: mem := mem with [#670 + 8, el]:u64 <- R30
00050ccd: R31 := #670
00050cd2: R1 := 0x474B
00050cd9: R1 := 63:32[R1].0x2153.15:0[R1]
00050cdf: R29 := R31
00050ce5: #671 := R31 + 0x20
00050ceb: mem := mem with [#671, el]:u64 <- R21
00050cf1: mem := mem with [#671 + 8, el]:u64 <- R22
00050cf6: R22 := 0x27000
00050cfd: R1 := 63:48[R1].0x2340.31:0[R1]
00050d04: R22 := mem[R22 + 0xFB8, el]:u64
00050d0a: R1 := 0x2524.47:0[R1]
00050d12: mem := mem with [R31 + 0x140, el]:u64 <- R1
00050d18: R21 := R31 + 0x40
00050d1f: R1 := mem[R22, el]:u64
00050d27: mem := mem with [R31 + 0x148, el]:u64 <- R1
00050d2c: R1 := 0
00050d32: #672 := R31 + 0x10
00050d38: mem := mem with [#672, el]:u64 <- R19
00050d3e: mem := mem with [#672 + 8, el]:u64 <- R20
00050d46: mem := mem with [R31 + 0x30, el]:u64 <- R23
00050d4c: R23 := R0
00050d51: R0 := 0x16
00050d56: R30 := 0x5F94
00050d58: call @new with return %00050d5a

00050d5a:
00050d5e: R19 := R0
00050d63: R0 := 0xF
00050d68: R30 := 0x5FA0
00050d6a: call @new with return %00050d6c

00050d6c:
00050d70: R20 := R0
00050d76: R0 := R23
00050d7b: R30 := 0x5FAC
00050d7d: call @strlen with return %00050d7f

00050d7f:
00050d82: R3 := 0xE
00050d88: R2 := R0
00050d8e: #673 := ~R3
00050d93: #674 := R0 + ~R3 + 1
00050d99: VF := extend:65[#674] <> extend:65[R0] + extend:65[#673] + 1
00050d9f: CF := pad:65[#674] <> pad:65[R0] + pad:65[#673] + 1
00050da3: ZF := #674 = 0
00050da7: NF := 63:63[#674]
00050dad: R1 := R23
00050dbc: when ~(CF & ~ZF) goto %00050db4
00050dbd: goto %00050db8

00050db8:
00050db9: R2 := R3
00050dbf: goto %00050dbb

00050db4:
00050db5: R2 := R2
00050dbe: goto %00050dbb

00050dbb:
00050dc5: R0 := R20
00050dcb: R23 := R31 + 0x140
00050dd0: R30 := 0x5FCC
00050dd3: call @strncpy with return %00050dd5

00050dd5:
00050dd8: R30 := 0x5FD0
00050dda: call @uppercase with return %00050ddc

00050ddc:
00050de0: R0 := R20
00050de6: R1 := R21
00050deb: R30 := 0x5FDC
00050ded: call @ntlm_set_key with return %00050def

00050def:
00050df3: R2 := R19
00050df8: R3 := 0
00050dfe: R0 := R21
00050e04: R1 := R23
00050e09: R30 := 0x5FF0
00050e0b: call @gl_des_ecb_crypt with return %00050e0d

00050e0d:
00050e11: R1 := R21
00050e17: R0 := R20 + 7
00050e1c: R30 := 0x5FFC
00050e1e: call @ntlm_set_key with return %00050e20

00050e20:
00050e24: R1 := R23
00050e2a: R2 := R19 + 8
00050e30: R0 := R21
00050e35: R3 := 0
00050e3a: R30 := 0x6010
00050e3c: call @gl_des_ecb_crypt with return %00050e3e

00050e3e:
00050e43: mem := mem with [R19 + 0x10, el]:u32 <- 0
00050e4a: mem := mem with [R19 + 0x14] <- 0
00050e50: R0 := R20
00050e55: R30 := 0x6020
00050e57: call @free with return %00050e59

00050e59:
00050e5e: R0 := mem[R31 + 0x148, el]:u64
00050e65: R1 := mem[R22, el]:u64
00050e6b: #675 := ~R1
00050e70: #676 := R0 + ~R1 + 1
00050e76: VF := extend:65[#676] <> extend:65[R0] + extend:65[#675] + 1
00050e7c: CF := pad:65[#676] <> pad:65[R0] + pad:65[#675] + 1
00050e80: ZF := #676 = 0
00050e84: NF := 63:63[#676]
00050e88: R0 := #676
00050e8d: R1 := 0
00050e93: when ZF <> 1 goto %00050e91
0006ce23: goto %0005f50d

00050e91:
00050e99: R30 := 0x6050
00050e9b: call @__stack_chk_fail with return %0006ce24

0006ce24:
0006ce25: call @ntlm_hash_nt_password with noreturn

0005f50d:
0005f511: R0 := R19
0005f517: #1441 := R31 + 0x10
0005f51c: R19 := mem[#1441, el]:u64
0005f521: R20 := mem[#1441 + 8, el]:u64
0005f527: #1442 := R31 + 0x20
0005f52c: R21 := mem[#1442, el]:u64
0005f531: R22 := mem[#1442 + 8, el]:u64
0005f538: R23 := mem[R31 + 0x30, el]:u64
0005f53f: R29 := mem[R31, el]:u64
0005f544: R30 := mem[R31 + 8, el]:u64
0005f548: R31 := R31 + 0x150
0005f54d: call R30 with noreturn

0006ce26: sub ntlm_hash_nt_password(ntlm_hash_nt_password_result)
0006d141: ntlm_hash_nt_password_result :: out u32 = low:32[R0]

00050e9d:
00050ea1: #677 := R31 - 0x40
00050ea7: mem := mem with [#677, el]:u64 <- R29
00050ead: mem := mem with [#677 + 8, el]:u64 <- R30
00050eb1: R31 := #677
00050eb7: R29 := R31
00050ebd: #678 := R31 + 0x10
00050ec3: mem := mem with [#678, el]:u64 <- R19
00050ec9: mem := mem with [#678 + 8, el]:u64 <- R20
00050ece: R20 := 0x27000
00050ed4: R19 := R0
00050edb: R20 := mem[R20 + 0xFB8, el]:u64
00050ee0: R0 := 0x16
00050ee7: R1 := mem[R20, el]:u64
00050eef: mem := mem with [R31 + 0x38, el]:u64 <- R1
00050ef4: R1 := 0
00050efc: mem := mem with [R31 + 0x20, el]:u64 <- R21
00050f01: R30 := 0x6080
00050f03: call @new with return %00050f05

00050f05:
00050f09: R1 := R19
00050f0f: R19 := R0
00050f15: R0 := R31 + 0x30
00050f1a: R30 := 0x6090
00050f1c: call @unicode with return %00050f1e

00050f1e:
00050f23: R21 :=

00050f29: R2 := R19
00050f30: R0 := mem[R31 + 0x30, el]:u64
00050f36: R1 := R21
00050f3b: R30 := 0x60A4
00050f3d: call @md4_buffer with return %00050f3f

00050f3f:
00050f44: mem := mem with [R19 + 0x10, el]:u32 <- 0
00050f4b: mem := mem with [R19 + 0x14] <- 0
00050f50: R1 := 0
00050f56: R2 := R21
00050f5d: R0 := mem[R31 + 0x30, el]:u64
00050f62: R30 := 0x60BC
00050f64: call @memset with return %00050f66

00050f66:
00050f6b: R0 := mem[R31 + 0x30, el]:u64
00050f70: R30 := 0x60C4
00050f72: call @free with return %00050f74

00050f74:
00050f79: R0 := mem[R31 + 0x38, el]:u64
00050f80: R1 := mem[R20, el]:u64
00050f86: #679 := ~R1
00050f8b: #680 := R0 + ~R1 + 1
00050f91: VF := extend:65[#680] <> extend:65[R0] + extend:65[#679] + 1
00050f97: CF := pad:65[#680] <> pad:65[R0] + pad:65[#679] + 1
00050f9b: ZF := #680 = 0
00050f9f: NF := 63:63[#680]
00050fa3: R0 := #680
00050fa8: R1 := 0
00050fae: when ZF <> 1 goto %00050fac
0006ce27: goto %0005f4db

00050fac:
00050fb4: R30 := 0x60F0
00050fb6: call @__stack_chk_fail with return %0006ce28

0006ce28:
0006ce29: call @ntlm2_hash_password with noreturn

0005f4db:
0005f4df: R0 := R19
0005f4e5: #1440 := R31 + 0x10
0005f4ea: R19 := mem[#1440, el]:u64
0005f4ef: R20 := mem[#1440 + 8, el]:u64
0005f4f6: R21 := mem[R31 + 0x20, el]:u64
0005f4fd: R29 := mem[R31, el]:u64
0005f502: R30 := mem[R31 + 8, el]:u64
0005f506: R31 := R31 + 0x40
0005f50b: call R30 with noreturn

0006ce2a: sub ntlm_request(ntlm_request_result)
0006d142: ntlm_request_result :: out u32 = low:32[R0]

000511e2:
000511e6: #687 := R31 - 0x50
000511ec: mem := mem with [#687, el]:u64 <- R29
000511f2: mem := mem with [#687 + 8, el]:u64 <- R30
000511f6: R31 := #687
000511fc: R29 := R31
00051202: #688 := R31 + 0x20
00051208: mem := mem with [#688, el]:u64 <- R21
0005120e: mem := mem with [#688 + 8, el]:u64 <- R22
00051214: R22 := R0
0005121a: #689 := R31 + 0x10
00051220: mem := mem with [#689, el]:u64 <- R19
00051226: mem := mem with [#689 + 8, el]:u64 <- R20
0005122c: R19 := R1
00051232: #690 := R31 + 0x30
00051238: mem := mem with [#690, el]:u64 <- R23
0005123e: mem := mem with [#690 + 8, el]:u64 <- R24
00051244: R23 := R1 + 0x64
0005124a: #691 := R31 + 0x40
00051250: mem := mem with [#691, el]:u64 <- R25
00051256: mem := mem with [#691 + 8, el]:u64 <- R26
0005125c: R25 := R1 + 0x32
00051262: R0 := R25
00051269: mem := mem with [R22, el]:u64 <- 0
0005126e: R30 := 0x6264
00051270: call @strlen with return %00051272

00051272:
00051276: R20 := R0
0005127c: R0 := R23
00051281: R30 := 0x6270
00051283: call @strlen with return %00051285

00051285:
00051288: R1 := 0x27000
0005128f: R26 := pad:64[mem[R19 + 0x138, el]:u32]
00051295: R21 := R0
0005129c: R1 := mem[R1 + 0xF78, el]:u64
000512a3: R0 := pad:64[mem[R1, el]:u32]
000512aa: when 31:0[R26] <> 0 goto %000512a8
0006ce2b: goto %0005f477

0005f477:
0005f47c: R1 := pad:64[mem[R19 + 0x12C, el]:u32]
0005f481: when 31:0[R1] = 0 goto %000514b1
0006ce2c: goto %0005f485

000514b1:
000514b6: R1 := pad:64[mem[R19 + 0x130, el]:u32]
000514bc: #697 := 31:0[R1] - 2
000514c1: VF := extend:33[#697] <> extend:33[31:0[R1]] - 2
000514c6: CF := pad:33[#697] <> pad:33[31:0[R1]] + 0xFFFFFFFE
000514ca: ZF := #697 = 0
000514ce: NF := 31:31[#697]
000514d4: when ZF goto %000514d2
0006ce2d: goto %00052e59

000514d2:
000514da: R26 := 0xB207
000514e0: R26 := pad:64[0xA208.15:0[R26]]
000514e4: goto %000512a8

00052e59:
00052e5e: R2 := pad:64[mem[R19 + 0x134, el]:u32]
00052e64: when 31:0[R1] <> 0 goto %000514e6
0006ce2e: goto %00052e68

000514e6:
000514ea: #698 := 31:0[R2] + 0
000514ef: VF := extend:33[#698] <> extend:33[31:0[R2]] + 0
000514f4: CF := pad:33[#698] <> pad:33[31:0[R2]] - 0x100000000
000514f8: ZF := #698 = 0
000514fc: NF := 31:31[#698]
00051501: R26 := 0xB207
00051506: R1 := 0xB205
00051514: when ZF <> 1 goto %0005150c
00051515: goto %00051510

00051510:
00051511: R26 := pad:64[31:0[R1]]
00051517: goto %00051513

0005150c:
0005150d: R26 := pad:64[31:0[R26]]
00051516: goto %00051513

00051513:
0005151b: goto %000512a8

00052e68:
00052e6b: R26 := 0xB206
00052e71: when 31:0[R2] <> 0 goto %000512a8
0006ce2f: goto %00052e75

00052e75:
00052e78: when 31:0[R0] = 0 goto %0005145c
0006ce30: goto %00052e7c

00052e7c:
00052e7f: R1 := 0x11000
00052e85: R1 := R1 + 0x700
00052e8a: R0 := 1
00052e8f: R30 := 0x6398
00052e91: call @__printf_chk with return %00052e93

00052e93:
00052e97: R0 := R19
00052e9c: R30 := 0x63A0
00052e9f: call @dump_auth with return %0005f46e

0005f46e:
0005f471: R0 := 0
0005f475: goto %0005145c

0005f485:
0005f488: R26 := 0xB205
0005f48e: R26 := pad:64[0xA208.15:0[R26]]
0006ce31: goto %000512a8

000512a8:
000512b2: when 31:0[R0] <> 0 goto %000512b0
0006ce32: goto %00051324

000512b0:
000512b8: R1 := 0x11000
000512bd: R0 := 1
000512c3: R1 := R1 + 0x728
000512c8: R30 := 0x63B8
000512ca: call @__printf_chk with return %000512cc

000512cc:
000512d0: R2 := R25
000512d5: R1 := 0x11000
000512da: R0 := 1
000512e0: R1 := R1 + 0x738
000512e5: R30 := 0x63CC
000512e7: call @__printf_chk with return %000512e9

000512e9:
000512ed: R2 := R23
000512f2: R1 := 0x11000
000512f7: R0 := 1
000512fd: R1 := R1 + 0x748
00051302: R30 := 0x63E0
00051304: call @__printf_chk with return %00051306

00051306:
0005130a: R2 := pad:64[31:0[R26]]
0005130f: R1 := 0x11000
00051314: R0 := 1
0005131a: R1 := R1 + 0x758
0005131f: R30 := 0x63F4
00051321: call @__printf_chk with return %00051323

00051323:
00051326: goto %00051324

00051324:
0005132a: R0 := 0x400
0005132f: R30 := 0x62A4
00051331: call @new with return %00051333

00051333:
00051336: R6 := 0x544E
0005133c: R19 := R0
00051343: R6 := 63:32[R6].0x4D4C.15:0[R6]
00051349: R4 := pad:64[31:0[R21] + 0x20]
0005134f: R2 := pad:64[0.15:0[R20]]
00051355: R1 := pad:64[0.15:0[R21]]
0005135c: R6 := 63:48[R6].0x5353.31:0[R6]
00051361: R5 := 1
00051367: R6 := 0x50.47:0[R6]
0005136c: R3 := 0x20
00051374: mem := mem with [R19, el]:u64 <- R6
0005137a: R0 := R23
00051380: #692 := R19 + 8
00051386: mem := mem with [#692, el]:u32 <- 31:0[R5]
0005138c: mem := mem with [#692 + 4, el]:u32 <- 31:0[R26]
00051393: R24 :=

0005139b: mem := mem with [R19 + 0x10, el]:u16 <- 15:0[R2]
000513a3: mem := mem with [R19 + 0x12, el]:u16 <- 15:0[R2]
000513ab: mem := mem with [R19 + 0x14, el]:u32 <- 31:0[R4]
000513b3: mem := mem with [R19 + 0x18, el]:u16 <- 15:0[R1]
000513bb: mem := mem with [R19 + 0x1A, el]:u16 <- 15:0[R1]
000513c3: mem := mem with [R19 + 0x1C, el]:u32 <- 31:0[R3]
000513c8: R30 := 0x62F8
000513ca: call @strdup with return %000513cc

000513cc:
000513cf: R30 := 0x62FC
000513d1: call @uppercase with return %000513d3

000513d3:
000513d7: R1 := R0
000513dd: R2 := R24
000513e3: R23 := R0
000513e9: R0 := R19 + 0x20
000513ee: R30 := 0x6310
000513f0: call @memcpy with return %000513f2

000513f2:
000513f6: R0 := R23
000513fb: R30 := 0x6318
000513fd: call @free with return %000513ff

000513ff:
00051403: R0 := R25
00051408: R30 := 0x6320
0005140a: call @strdup with return %0005140c

0005140c:
0005140f: R30 := 0x6324
00051411: call @uppercase with return %00051413

00051413:
00051417: R1 := R0
0005141e: R2 :=

00051424: R23 := R0
0005142a: R0 := R24 + 0x20
00051430: R20 := pad:64[31:0[R20] + 0x20]
00051437: R0 := R19 + R0
0005143c: R30 := 0x6340
0005143e: call @memcpy with return %00051440

00051440:
00051444: R0 := R23
00051449: R30 := 0x6348
0005144b: call @free with return %0005144d

0005144d:
00051452: R0 := pad:64[31:0[R20] + 31:0[R21]]
0005145a: mem := mem with [R22, el]:u64 <- R19
0006ce33: goto %0005145c

0005145c:
00051460: #693 := R31 + 0x10
00051465: R19 := mem[#693, el]:u64
0005146a: R20 := mem[#693 + 8, el]:u64
00051470: #694 := R31 + 0x20
00051475: R21 := mem[#694, el]:u64
0005147a: R22 := mem[#694 + 8, el]:u64
00051480: #695 := R31 + 0x30
00051485: R23 := mem[#695, el]:u64
0005148a: R24 := mem[#695 + 8, el]:u64
00051490: #696 := R31 + 0x40
00051495: R25 := mem[#696, el]:u64
0005149a: R26 := mem[#696 + 8, el]:u64
000514a1: R29 := mem[R31, el]:u64
000514a6: R30 := mem[R31 + 8, el]:u64
000514aa: R31 := R31 + 0x50
000514af: call R30 with noreturn

0006ce34: sub ntlm_response(ntlm_response_result)
0006d143: ntlm_response_result :: out u32 = low:32[R0]

0005151d:
00051521: #699 := R31 - 0x1C0
00051527: mem := mem with [#699, el]:u64 <- R29
0005152d: mem := mem with [#699 + 8, el]:u64 <- R30
00051531: R31 := #699
00051536: R5 := 0x27000
0005153c: R29 := R31
00051542: #700 := R31 + 0x30
00051548: mem := mem with [#700, el]:u64 <- R23
0005154e: mem := mem with [#700 + 8, el]:u64 <- R24
00051553: R23 := 0x27000
0005155a: R4 := mem[R23 + 0xF78, el]:u64
00051562: mem := mem with [R31 + 0x78, el]:u64 <- R0
00051569: R5 := mem[R5 + 0xFB8, el]:u64
0005156f: #701 := R31 + 0x10
00051575: mem := mem with [#701, el]:u64 <- R19
0005157b: mem := mem with [#701 + 8, el]:u64 <- R20
00051582: R4 := pad:64[mem[R4, el]:u32]
00051589: R0 := mem[R5, el]:u64
00051591: mem := mem with [R31 + 0x1B8, el]:u64 <- R0
00051596: R0 := 0
0005159c: #702 := R31 + 0x20
000515a2: mem := mem with [#702, el]:u64 <- R21
000515a8: mem := mem with [#702 + 8, el]:u64 <- R22
000515ae: R19 := R1
000515b4: #703 := R31 + 0x40
000515ba: mem := mem with [#703, el]:u64 <- R25
000515c0: mem := mem with [#703 + 8, el]:u64 <- R26
000515c6: R20 := R3
000515cc: R25 := pad:64[31:0[R2]]
000515d2: #704 := R31 + 0x50
000515d8: mem := mem with [#704, el]:u64 <- R27
000515de: mem := mem with [#704 + 8, el]:u64 <- R28
000515e5: when 31:0[R4] <> 0 goto %000515e3
0006ce35: goto %0005166b

000515e3:
000515eb: R1 := 0x11000
000515f0: R0 := 1
000515f6: R1 := R1 + 0x770
000515fb: R30 := 0x6E9C
000515fd: call @__printf_chk with return %000515ff

000515ff:
00051603: R0 := R19 + 0x18
00051608: R2 := 7
0005160d: R1 := 8
00051612: R30 := 0x6EAC
00051614: call @printmem with return %00051616

00051616:
0005161a: R3 := pad:64[31:0[R25]]
00051620: R2 := R0
00051625: R1 := 0x11000
0005162b: R1 := R1 + 0x788
00051631: R21 := R0
00051636: R0 := 1
0005163b: R30 := 0x6EC8
0005163d: call @__printf_chk with return %0005163f

0005163f:
00051643: R0 := R21
00051648: R30 := 0x6ED0
0005164a: call @free with return %0005164c

0005164c:
00051651: R2 := pad:64[mem[R19 + 0x14, el]:u32]
00051656: R1 := 0x11000
0005165b: R0 := 1
00051661: R1 := R1 + 0x758
00051666: R30 := 0x6EE4
00051668: call @__printf_chk with return %0005166a

0005166a:
0005166d: goto %0005166b

0005166b:
00051672: #705 := 31:0[R25] - 0x30
00051677: VF := extend:33[#705] <> extend:33[31:0[R25]] - 0x30
0005167c: CF := pad:33[#705] <> pad:33[31:0[R25]] + 0xFFFFFFD0
00051680: ZF := #705 = 0
00051684: NF := 31:31[#705]
0005168c: when NF = VF & ~ZF goto %0005168a
0006ce36: goto %00052e4a

0005168a:
00051694: R1 := mem[R23 + 0xF78, el]:u64
00051699: R22 := 0
000516a0: R2 := pad:64[mem[R19 + 0x2C, el]:u16]
000516a8: mem := mem with [R31 + 0x80, el]:u32 <- 31:0[R2]
000516ae: R0 := pad:64[31:0[R2] + 3]
000516b4: R24 := pad:64[31:0[R2]]
000516ba: #706 := ~31:0[R25]
000516bf: #707 := 31:0[R0] + ~31:0[R25] + 1
000516c5: VF := extend:33[#707] <> extend:33[31:0[R0]] + extend:33[#706] + 1
000516cb: CF := pad:33[#707] <> pad:33[31:0[R0]] + pad:33[#706] + 1
000516cf: ZF := #707 = 0
000516d3: NF := 31:31[#707]
000516d9: R0 := pad:64[31:0[R2]]
000516e0: R2 := pad:64[mem[R1, el]:u32]
000516e7: when NF = VF goto %000516e5
0006ce37: goto %00052e22

000516e5:
000516ed: R27 := 0xFFFF
000516f2: goto %000516f0

00052e22:
00052e25: R26 := 0x13000
00052e2b: R1 := R26 + 0x298
00052e30: R27 := 0x11000
00052e38: mem := mem with [R31 + 0x70, el]:u64 <- R1
00052e3e: R1 := R27 + 0x7C8
00052e46: mem := mem with [R31 + 0x88, el]:u64 <- R1
0006ce38: goto %000525b3

000525b3:
000525bc: R21 := 0.15:0[R24]
000525c3: R26 := R19 + (0.15:0[R24])
000525cb: R27 := pad:64[mem[R19 + R21, el]:u16]
000525d0: when 31:0[R27] = 0 goto %00051fe1
0006ce39: goto %000525d4

00051fe1:
00051fe4: when 31:0[R22] = 0 goto %00051f1f
0006ce3a: goto %00051fe8

00051fe8:
00051fec: R22 := pad:64[31:0[R22] + 4]
00051ff2: R22 := pad:64[0.15:0[R22]]
00051ff7: when 31:0[R2] = 0 goto %00051726
0006ce3b: goto %000516f6

000525d4:
000525d9: R28 := pad:64[mem[R26 + 2, el]:u16]
000525df: R0 := pad:64[31:0[R0] + 4]
000525e6: R0 := pad:64[31:0[R0] + 31:0[R28]]
000525ec: #725 := ~31:0[R25]
000525f1: #726 := 31:0[R0] + ~31:0[R25] + 1
000525f7: VF := extend:33[#726] <> extend:33[31:0[R0]] + extend:33[#725] + 1
000525fd: CF := pad:33[#726] <> pad:33[31:0[R0]] + pad:33[#725] + 1
00052601: ZF := #726 = 0
00052605: NF := 31:31[#726]
0005260c: when NF = VF & ~ZF goto %000516f0
0006ce3c: goto %00052610

00052610:
00052613: when 31:0[R2] = 0 goto %00052565
0006ce3d: goto %00052617

00052617:
0005261b: #727 := 31:0[R27] - 3
00052620: VF := extend:33[#727] <> extend:33[31:0[R27]] - 3
00052625: CF := pad:33[#727] <> pad:33[31:0[R27]] + 0xFFFFFFFD
00052629: ZF := #727 = 0
0005262d: NF := 31:31[#727]
00052633: when ZF goto %00052631
0006ce3e: goto %0005268a

00052631:
0005263b: R1 := mem[R31 + 0x88, el]:u64
00052640: R0 := 1
00052645: R30 := 0x6E48
00052647: call @__printf_chk with return %00052649

00052649:
0005264b: goto %000524c4

0005268a:
0005268e: when CF & ~ZF goto %0005248d
0006ce3f: goto %00052692

0005248d:
00052491: #720 := 31:0[R27] - 4
00052496: VF := extend:33[#720] <> extend:33[31:0[R27]] - 4
0005249b: CF := pad:33[#720] <> pad:33[31:0[R27]] + 0xFFFFFFFC
0005249f: ZF := #720 = 0
000524a3: NF := 31:31[#720]
000524a9: when ZF goto %000524a7
0006ce40: goto %00052d48

000524a7:
000524af: R1 := 0x11000
000524b4: R0 := 1
000524ba: R1 := R1 + 0x7D8
000524bf: R30 := 0x6E88
000524c1: call @__printf_chk with return %000524c3

000524c3:
000524c6: goto %000524c4

00052d48:
00052d4c: #769 := 31:0[R27] - 5
00052d51: VF := extend:33[#769] <> extend:33[31:0[R27]] - 5
00052d56: CF := pad:33[#769] <> pad:33[31:0[R27]] + 0xFFFFFFFB
00052d5a: ZF := #769 = 0
00052d5e: NF := 31:31[#769]
00052d63: when ZF <> 1 goto %0005264d
0006ce41: goto %00052d67

00052d67:
00052d6a: R1 := 0x11000
00052d6f: R0 := 1
00052d75: R1 := R1 + 0x7E8
00052d7a: R30 := 0x6E10
00052d7c: call @__printf_chk with return %00052d7e

00052d7e:
00052d80: goto %000524c4

00052692:
00052696: #728 := 31:0[R27] - 1
0005269b: VF := extend:33[#728] <> extend:33[31:0[R27]] - 1
000526a0: CF := pad:33[#728] <> pad:33[31:0[R27]] + 0xFFFFFFFF
000526a4: ZF := #728 = 0
000526a8: NF := 31:31[#728]
000526ad: when ZF goto %0005266e
0006ce42: goto %000526b1

0005266e:
00052672: R0 := pad:64[31:0[R27]]
00052677: R1 := 0x11000
0005267d: R1 := R1 + 0x7A8
00052682: R30 := 0x6E74
00052684: call @__printf_chk with return %00052686

00052686:
00052688: goto %000524c4

000526b1:
000526b5: #729 := 31:0[R27] - 2
000526ba: VF := extend:33[#729] <> extend:33[31:0[R27]] - 2
000526bf: CF := pad:33[#729] <> pad:33[31:0[R27]] + 0xFFFFFFFE
000526c3: ZF := #729 = 0
000526c7: NF := 31:31[#729]
000526cc: when ZF <> 1 goto %0005264d
0006ce43: goto %000526d0

0005264d:
00052651: R2 := pad:64[31:0[R27]]
00052656: R1 := 0x11000
0005265b: R0 := 1
00052661: R1 := R1 + 0x7F8
00052666: R30 := 0x6E60
00052668: call @__printf_chk with return %0005266a

0005266a:
0005266c: goto %000524c4

000526d0:
000526d3: R1 := 0x11000
000526d8: R0 := 1
000526de: R1 := R1 + 0x7B8
000526e3: R30 := 0x679C
000526e5: call @__printf_chk with return %000526e7

000526e7:
0006ce44: goto %000524c4

000524c4:
000524cb: R0 := pad:64[31:0[R28] + 1]
000524d1: R1 := R21 + 4
000524d9: mem := mem with [R31 + 0x68, el]:u64 <- R1
000524e1: R0 :=
          pad:64[31:31[31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0]].30:0[31:0[R0]
          >> 1 | 31:0[R0] << 0x1F]]
000524e7: R0 := pad:64[31:0[R0] + 1]
000524ee: R0 :=

000524f3: R30 := 0x67BC
000524f5: call @new with return %000524f7

000524f7:
000524fb: #721 := ~(31:0[R28] ~>> 1)
000524ff: #722 := ~(31:0[R28] ~>> 1) + 1
00052504: VF := extend:33[#722] <> extend:33[#721] + 1
00052509: CF := pad:33[#722] <> pad:33[#721] + 1
0005250d: ZF := #722 = 0
00052511: NF := 31:31[#722]
00052517: R2 := R0
0005251f: R7 :=
          pad:64[31:31[31:31[R28].31:31[R28].31:31[R28].31:31[R28].31:31[R28].31:31[R28].31:31[R28].31:31[R28].31:31[R28].31:31[R28].31:31[R28].31:31[R28].31:31[R28].31:31[R28].31:31[R28].31:31[R28].31:31[R28].31:31[R28].31:31[R28].31:31[R28].31:31[R28].31:31[R28].31:31[R28].31:31[R28].31:31[R28].31:31[R28].31:31[R28].31:31[R28].31:31[R28].31:31[R28].31:31[R28].31:31[R28]].30:0[31:0[R28]
          >> 1 | 31:0[R28] << 0x1F]]
00052525: when ZF goto %00052523
0006ce45: goto %000526e9

000526e9:
000526ee: R5 := R21 + extend:64[31:0[R7].0]
000526f5: R1 := R0 + extend:64[31:0[R7]]
000526fb: R5 := R5 + 3
00052702: R5 := R19 + R5
00052708: #730 := ~R5
0005270d: #731 := R0 + ~R5 + 1
00052713: VF := extend:65[#731] <> extend:65[R0] + extend:65[#730] + 1
00052719: CF := pad:65[#731] <> pad:65[R0] + pad:65[#730] + 1
0005271d: ZF := #731 = 0
00052721: NF := 63:63[#731]
00052728: R0 := mem[R31 + 0x68, el]:u64
0005272f: R21 := R19 + R0
00052735: R0 := pad:64[31:0[R7] - 1]
0005273b: #732 := ~R1
00052740: #733 := R21 + ~R1 + 1
00052768: goto %00052762

00052762:
00052764: when CF <> 1 goto %00052746
00052765: goto %00052757

00052757:
00052758: VF := 0
0005275b: CF := 1
0005275e: ZF := 0
00052761: NF := 0
00052767: goto %00052763

00052746:
00052747: VF := extend:65[#733] <> extend:65[R21] + extend:65[#732] + 1
0005274d: CF := pad:65[#733] <> pad:65[R21] + pad:65[#732] + 1
00052751: ZF := #733 = 0
00052755: NF := 63:63[#733]
00052766: goto %00052763

00052763:
0005276f: #734 := 31:0[R0] - 0xF
00052795: goto %0005278f

0005278f:
00052791: when CF goto %00052774
00052792: goto %00052784

00052784:
00052785: VF := 0
00052788: CF := 0
0005278b: ZF := 0
0005278e: NF := 0
00052794: goto %00052790

00052774:
00052775: VF := extend:33[#734] <> extend:33[31:0[R0]] - 0xF
0005277a: CF := pad:33[#734] <> pad:33[31:0[R0]] + 0xFFFFFFF1
0005277e: ZF := #734 = 0
00052782: NF := 31:31[#734]
00052793: goto %00052790

00052790:
0005279c: when ~(CF & ~ZF) goto %0005279a
0006ce46: goto %000527f6

0005279a:
000527a3: R6 := R26 + 4
000527a8: R0 := 0
0006ce47: goto %000527ac

000527ac:
000527b1: R1 := 63:1[R0 >> 0x3F | R0 << 1].0
000527b9: R1 := pad:64[mem[R6 + R1]]
000527c2: mem := mem with [R2 + R0] <- 7:0[R1]
000527c8: R0 := R0 + 1
000527ce: #735 := ~31:0[R0]
000527d3: #736 := 31:0[R7] + ~31:0[R0] + 1
000527d9: VF := extend:33[#736] <> extend:33[31:0[R7]] + extend:33[#735] + 1
000527df: CF := pad:33[#736] <> pad:33[31:0[R7]] + pad:33[#735] + 1
000527e3: ZF := #736 = 0
000527e7: NF := 31:31[#736]
000527ee: when NF = VF & ~ZF goto %000527ac
0006ce48: goto %000527f2

000527f2:
000527f4: goto %00052523

000527f6:
000527fb: R5 := pad:64[0.27:0[31:0[R0] >> 4 | 31:0[R0] << 0x1C]]
00052801: R1 := R2
00052807: R6 := R21
0005280e: R5 := R2 + (0.31:0[R5].0)
0006ce49: goto %00052810

00052810:
00052816: V0 := 127:8[V0].mem[R6]
0005281c: V1 := 127:8[V1].mem[R6 + 1]
00052823: V0 := 127:16[V0].mem[R6 + 2].7:0[V0]
0005282a: V1 := 127:16[V1].mem[R6 + 3].7:0[V1]
00052831: V0 := 127:24[V0].mem[R6 + 4].15:0[V0]
00052838: V1 := 127:24[V1].mem[R6 + 5].15:0[V1]
0005283f: V0 := 127:32[V0].mem[R6 + 6].23:0[V0]
00052846: V1 := 127:32[V1].mem[R6 + 7].23:0[V1]
0005284d: V0 := 127:40[V0].mem[R6 + 8].31:0[V0]
00052854: V1 := 127:40[V1].mem[R6 + 9].31:0[V1]
0005285b: V0 := 127:48[V0].mem[R6 + 0xA].39:0[V0]
00052862: V1 := 127:48[V1].mem[R6 + 0xB].39:0[V1]
00052869: V0 := 127:56[V0].mem[R6 + 0xC].47:0[V0]
00052870: V1 := 127:56[V1].mem[R6 + 0xD].47:0[V1]
00052877: V0 := 127:64[V0].mem[R6 + 0xE].55:0[V0]
0005287e: V1 := 127:64[V1].mem[R6 + 0xF].55:0[V1]
00052885: V0 := 127:72[V0].mem[R6 + 0x10].63:0[V0]
0005288c: V1 := 127:72[V1].mem[R6 + 0x11].63:0[V1]
00052893: V0 := 127:80[V0].mem[R6 + 0x12].71:0[V0]
0005289a: V1 := 127:80[V1].mem[R6 + 0x13].71:0[V1]
000528a1: V0 := 127:88[V0].mem[R6 + 0x14].79:0[V0]
000528a8: V1 := 127:88[V1].mem[R6 + 0x15].79:0[V1]
000528af: V0 := 127:96[V0].mem[R6 + 0x16].87:0[V0]
000528b6: V1 := 127:96[V1].mem[R6 + 0x17].87:0[V1]
000528bd: V0 := 127:104[V0].mem[R6 + 0x18].95:0[V0]
000528c4: V1 := 127:104[V1].mem[R6 + 0x19].95:0[V1]
000528cb: V0 := 127:112[V0].mem[R6 + 0x1A].103:0[V0]
000528d2: V1 := 127:112[V1].mem[R6 + 0x1B].103:0[V1]
000528d9: V0 := 127:120[V0].mem[R6 + 0x1C].111:0[V0]
000528e0: V1 := 127:120[V1].mem[R6 + 0x1D].111:0[V1]
000528e6: V0 := mem[R6 + 0x1E].119:0[V0]
000528ec: V1 := mem[R6 + 0x1F].119:0[V1]
000528f0: R6 := R6 + 0x20
000528f8: mem := mem with [R1, el]:u128 <- V0
000528fc: R1 := R1 + 0x10
00052902: #737 := ~R5
00052907: #738 := R1 + ~R5 + 1
0005290d: VF := extend:65[#738] <> extend:65[R1] + extend:65[#737] + 1
00052913: CF := pad:65[#738] <> pad:65[R1] + pad:65[#737] + 1
00052917: ZF := #738 = 0
0005291b: NF := 63:63[#738]
00052920: when ZF <> 1 goto %00052810
0006ce4a: goto %00052924

00052924:
00052928: R0 := pad:64[31:4[R0].0]
0005292e: R6 := pad:64[31:0[R0] + 1]
00052935: R1 := pad:64[31:1[31:0[R0] >> 0x1F | 31:0[R0] << 1].0]
0005293b: #739 := ~31:0[R7]
00052940: #740 := 31:0[R6] + ~31:0[R7] + 1
00052946: VF := extend:33[#740] <> extend:33[31:0[R6]] + extend:33[#739] + 1
0005294c: CF := pad:33[#740] <> pad:33[31:0[R6]] + pad:33[#739] + 1
00052950: ZF := #740 = 0
00052954: NF := 31:31[#740]
0005295c: R5 := pad:64[mem[R21 + extend:64[31:0[R1]]]]
00052965: mem := mem with [R2 + pad:64[31:0[R0]]] <- 7:0[R5]
0005296b: when NF = VF goto %00052523
0006ce4b: goto %0005296f

0005296f:
00052973: R5 := pad:64[31:0[R1] + 2]
00052979: R8 := pad:64[31:0[R0] + 2]
0005297f: #741 := ~31:0[R7]
00052984: #742 := 31:0[R8] + ~31:0[R7] + 1
0005298a: VF := extend:33[#742] <> extend:33[31:0[R8]] + extend:33[#741] + 1
00052990: CF := pad:33[#742] <> pad:33[31:0[R8]] + pad:33[#741] + 1
00052994: ZF := #742 = 0
00052998: NF := 31:31[#742]
000529a0: R5 := pad:64[mem[R21 + extend:64[31:0[R5]]]]
000529a9: mem := mem with [R2 + extend:64[31:0[R6]]] <- 7:0[R5]
000529af: when NF = VF goto %00052523
0006ce4c: goto %000529b3

000529b3:
000529b7: R5 := pad:64[31:0[R1] + 4]
000529bd: R6 := pad:64[31:0[R0] + 3]
000529c3: #743 := ~31:0[R7]
000529c8: #744 := 31:0[R6] + ~31:0[R7] + 1
000529ce: VF := extend:33[#744] <> extend:33[31:0[R6]] + extend:33[#743] + 1
000529d4: CF := pad:33[#744] <> pad:33[31:0[R6]] + pad:33[#743] + 1
000529d8: ZF := #744 = 0
000529dc: NF := 31:31[#744]
000529e4: R5 := pad:64[mem[R21 + extend:64[31:0[R5]]]]
000529ed: mem := mem with [R2 + extend:64[31:0[R8]]] <- 7:0[R5]
000529f3: when NF = VF goto %00052523
0006ce4d: goto %000529f7

000529f7:
000529fb: R5 := pad:64[31:0[R1] + 6]
00052a01: R8 := pad:64[31:0[R0] + 4]
00052a07: #745 := ~31:0[R8]
00052a0c: #746 := 31:0[R7] + ~31:0[R8] + 1
00052a12: VF := extend:33[#746] <> extend:33[31:0[R7]] + extend:33[#745] + 1
00052a18: CF := pad:33[#746] <> pad:33[31:0[R7]] + pad:33[#745] + 1
00052a1c: ZF := #746 = 0
00052a20: NF := 31:31[#746]
00052a28: R5 := pad:64[mem[R21 + extend:64[31:0[R5]]]]
00052a31: mem := mem with [R2 + extend:64[31:0[R6]]] <- 7:0[R5]
00052a38: when ~(NF = VF & ~ZF) goto %00052523
0006ce4e: goto %00052a3c

00052a3c:
00052a40: R5 := pad:64[31:0[R1] + 8]
00052a46: R6 := pad:64[31:0[R0] + 5]
00052a4c: #747 := ~31:0[R7]
00052a51: #748 := 31:0[R6] + ~31:0[R7] + 1
00052a57: VF := extend:33[#748] <> extend:33[31:0[R6]] + extend:33[#747] + 1
00052a5d: CF := pad:33[#748] <> pad:33[31:0[R6]] + pad:33[#747] + 1
00052a61: ZF := #748 = 0
00052a65: NF := 31:31[#748]
00052a6d: R5 := pad:64[mem[R21 + extend:64[31:0[R5]]]]
00052a76: mem := mem with [R2 + extend:64[31:0[R8]]] <- 7:0[R5]
00052a7c: when NF = VF goto %00052523
0006ce4f: goto %00052a80

00052a80:
00052a84: R5 := pad:64[31:0[R1] + 0xA]
00052a8a: R8 := pad:64[31:0[R0] + 6]
00052a90: #749 := ~31:0[R7]
00052a95: #750 := 31:0[R8] + ~31:0[R7] + 1
00052a9b: VF := extend:33[#750] <> extend:33[31:0[R8]] + extend:33[#749] + 1
00052aa1: CF := pad:33[#750] <> pad:33[31:0[R8]] + pad:33[#749] + 1
00052aa5: ZF := #750 = 0
00052aa9: NF := 31:31[#750]
00052ab1: R5 := pad:64[mem[R21 + extend:64[31:0[R5]]]]
00052aba: mem := mem with [R2 + extend:64[31:0[R6]]] <- 7:0[R5]
00052ac0: when NF = VF goto %00052523
0006ce50: goto %00052ac4

00052ac4:
00052ac8: R5 := pad:64[31:0[R1] + 0xC]
00052ace: R6 := pad:64[31:0[R0] + 7]
00052ad4: #751 := ~31:0[R6]
00052ad9: #752 := 31:0[R7] + ~31:0[R6] + 1
00052adf: VF := extend:33[#752] <> extend:33[31:0[R7]] + extend:33[#751] + 1
00052ae5: CF := pad:33[#752] <> pad:33[31:0[R7]] + pad:33[#751] + 1
00052ae9: ZF := #752 = 0
00052aed: NF := 31:31[#752]
00052af5: R5 := pad:64[mem[R21 + extend:64[31:0[R5]]]]
00052afe: mem := mem with [R2 + extend:64[31:0[R8]]] <- 7:0[R5]
00052b05: when ~(NF = VF & ~ZF) goto %00052523
0006ce51: goto %00052b09

00052b09:
00052b0d: R5 := pad:64[31:0[R1] + 0xE]
00052b13: R8 := pad:64[31:0[R0] + 8]
00052b19: #753 := ~31:0[R8]
00052b1e: #754 := 31:0[R7] + ~31:0[R8] + 1
00052b24: VF := extend:33[#754] <> extend:33[31:0[R7]] + extend:33[#753] + 1
00052b2a: CF := pad:33[#754] <> pad:33[31:0[R7]] + pad:33[#753] + 1
00052b2e: ZF := #754 = 0
00052b32: NF := 31:31[#754]
00052b3a: R5 := pad:64[mem[R21 + extend:64[31:0[R5]]]]
00052b43: mem := mem with [R2 + extend:64[31:0[R6]]] <- 7:0[R5]
00052b4a: when ~(NF = VF & ~ZF) goto %00052523
0006ce52: goto %00052b4e

00052b4e:
00052b52: R5 := pad:64[31:0[R1] + 0x10]
00052b58: R6 := pad:64[31:0[R0] + 9]
00052b5e: #755 := ~31:0[R6]
00052b63: #756 := 31:0[R7] + ~31:0[R6] + 1
00052b69: VF := extend:33[#756] <> extend:33[31:0[R7]] + extend:33[#755] + 1
00052b6f: CF := pad:33[#756] <> pad:33[31:0[R7]] + pad:33[#755] + 1
00052b73: ZF := #756 = 0
00052b77: NF := 31:31[#756]
00052b7f: R5 := pad:64[mem[R21 + extend:64[31:0[R5]]]]
00052b88: mem := mem with [R2 + extend:64[31:0[R8]]] <- 7:0[R5]
00052b8f: when ~(NF = VF & ~ZF) goto %00052523
0006ce53: goto %00052b93

00052b93:
00052b97: R5 := pad:64[31:0[R1] + 0x12]
00052b9d: R8 := pad:64[31:0[R0] + 0xA]
00052ba3: #757 := ~31:0[R8]
00052ba8: #758 := 31:0[R7] + ~31:0[R8] + 1
00052bae: VF := extend:33[#758] <> extend:33[31:0[R7]] + extend:33[#757] + 1
00052bb4: CF := pad:33[#758] <> pad:33[31:0[R7]] + pad:33[#757] + 1
00052bb8: ZF := #758 = 0
00052bbc: NF := 31:31[#758]
00052bc4: R5 := pad:64[mem[R21 + extend:64[31:0[R5]]]]
00052bcd: mem := mem with [R2 + extend:64[31:0[R6]]] <- 7:0[R5]
00052bd4: when ~(NF = VF & ~ZF) goto %00052523
0006ce54: goto %00052bd8

00052bd8:
00052bdc: R5 := pad:64[31:0[R1] + 0x14]
00052be2: R6 := pad:64[31:0[R0] + 0xB]
00052be8: #759 := ~31:0[R6]
00052bed: #760 := 31:0[R7] + ~31:0[R6] + 1
00052bf3: VF := extend:33[#760] <> extend:33[31:0[R7]] + extend:33[#759] + 1
00052bf9: CF := pad:33[#760] <> pad:33[31:0[R7]] + pad:33[#759] + 1
00052bfd: ZF := #760 = 0
00052c01: NF := 31:31[#760]
00052c09: R5 := pad:64[mem[R21 + extend:64[31:0[R5]]]]
00052c12: mem := mem with [R2 + extend:64[31:0[R8]]] <- 7:0[R5]
00052c19: when ~(NF = VF & ~ZF) goto %00052523
0006ce55: goto %00052c1d

00052c1d:
00052c21: R5 := pad:64[31:0[R1] + 0x16]
00052c27: R8 := pad:64[31:0[R0] + 0xC]
00052c2d: #761 := ~31:0[R8]
00052c32: #762 := 31:0[R7] + ~31:0[R8] + 1
00052c38: VF := extend:33[#762] <> extend:33[31:0[R7]] + extend:33[#761] + 1
00052c3e: CF := pad:33[#762] <> pad:33[31:0[R7]] + pad:33[#761] + 1
00052c42: ZF := #762 = 0
00052c46: NF := 31:31[#762]
00052c4e: R5 := pad:64[mem[R21 + extend:64[31:0[R5]]]]
00052c57: mem := mem with [R2 + extend:64[31:0[R6]]] <- 7:0[R5]
00052c5e: when ~(NF = VF & ~ZF) goto %00052523
0006ce56: goto %00052c62

00052c62:
00052c66: R5 := pad:64[31:0[R1] + 0x18]
00052c6c: R6 := pad:64[31:0[R0] + 0xD]
00052c72: #763 := ~31:0[R6]
00052c77: #764 := 31:0[R7] + ~31:0[R6] + 1
00052c7d: VF := extend:33[#764] <> extend:33[31:0[R7]] + extend:33[#763] + 1
00052c83: CF := pad:33[#764] <> pad:33[31:0[R7]] + pad:33[#763] + 1
00052c87: ZF := #764 = 0
00052c8b: NF := 31:31[#764]
00052c93: R5 := pad:64[mem[R21 + extend:64[31:0[R5]]]]
00052c9c: mem := mem with [R2 + extend:64[31:0[R8]]] <- 7:0[R5]
00052ca3: when ~(NF = VF & ~ZF) goto %00052523
0006ce57: goto %00052ca7

00052ca7:
00052cab: R5 := pad:64[31:0[R1] + 0x1A]
00052cb1: R8 := pad:64[31:0[R0] + 0xE]
00052cb7: #765 := ~31:0[R8]
00052cbc: #766 := 31:0[R7] + ~31:0[R8] + 1
00052cc2: VF := extend:33[#766] <> extend:33[31:0[R7]] + extend:33[#765] + 1
00052cc8: CF := pad:33[#766] <> pad:33[31:0[R7]] + pad:33[#765] + 1
00052ccc: ZF := #766 = 0
00052cd0: NF := 31:31[#766]
00052cd8: R5 := pad:64[mem[R21 + extend:64[31:0[R5]]]]
00052ce1: mem := mem with [R2 + extend:64[31:0[R6]]] <- 7:0[R5]
00052ce8: when ~(NF = VF & ~ZF) goto %00052523
0006ce58: goto %00052cec

00052cec:
00052cf0: R5 := pad:64[31:0[R1] + 0x1C]
00052cf6: R0 := pad:64[31:0[R0] + 0xF]
00052cfc: #767 := ~31:0[R0]
00052d01: #768 := 31:0[R7] + ~31:0[R0] + 1
00052d07: VF := extend:33[#768] <> extend:33[31:0[R7]] + extend:33[#767] + 1
00052d0d: CF := pad:33[#768] <> pad:33[31:0[R7]] + pad:33[#767] + 1
00052d11: ZF := #768 = 0
00052d15: NF := 31:31[#768]
00052d1d: R5 := pad:64[mem[R21 + extend:64[31:0[R5]]]]
00052d26: mem := mem with [R2 + extend:64[31:0[R8]]] <- 7:0[R5]
00052d2d: when ~(NF = VF & ~ZF) goto %00052523
0006ce59: goto %00052d31

00052d31:
00052d35: R1 := pad:64[31:0[R1] + 0x1E]
00052d3d: R1 := pad:64[mem[R21 + extend:64[31:0[R1]]]]
00052d46: mem := mem with [R2 + extend:64[31:0[R0]]] <- 7:0[R1]
0006ce5a: goto %00052523

00052523:
0005252d: R1 := mem[R31 + 0x70, el]:u64
00052532: R0 := 1
0005253a: mem := mem with [R31 + 0x68, el]:u64 <- R2
0005253f: R30 := 0x69A0
00052541: call @__printf_chk with return %00052543

00052543:
00052548: R2 := mem[R31 + 0x68, el]:u64
0005254e: R0 := R2
00052553: R30 := 0x69AC
00052555: call @free with return %00052557

00052557:
0005255c: R0 := mem[R23 + 0xF78, el]:u64
00052563: R2 := pad:64[mem[R0, el]:u32]
0006ce5b: goto %00052565

00052565:
00052569: R28 := pad:64[31:0[R28] + 4]
00052570: R3 := pad:64[31:0[R24] + (0.15:0[R28])]
00052577: R22 := pad:64[31:0[R22] + (0.15:0[R28])]
0005257d: R24 := pad:64[0.15:0[R3]]
00052583: R22 := pad:64[0.15:0[R22]]
00052589: R1 := pad:64[31:0[R24] + 3]
0005258f: R0 := pad:64[31:0[R24]]
00052595: #723 := ~31:0[R25]
0005259a: #724 := 31:0[R1] + ~31:0[R25] + 1
000525a0: VF := extend:33[#724] <> extend:33[31:0[R1]] + extend:33[#723] + 1
000525a6: CF := pad:33[#724] <> pad:33[31:0[R1]] + pad:33[#723] + 1
000525aa: ZF := #724 = 0
000525ae: NF := 31:31[#724]
000525b5: when NF <> VF goto %000525b3
0006ce5c: goto %000516f0

00052e4a:
00052e4f: R0 := pad:64[mem[R20 + 0x12C, el]:u32]
00052e55: when 31:0[R0] <> 0 goto %00052484
0006ce5d: goto %00051732

00051732:
0005173c: R0 := pad:64[mem[R20 + 0x130, el]:u32]
00051741: R28 := 0
00051748: mem := mem with [R31 + 0x68, el]:u32 <- 0
0005174d: R26 := 0
00051753: #708 := 31:0[R0] - 2
00051758: VF := extend:33[#708] <> extend:33[31:0[R0]] - 2
0005175d: CF := pad:33[#708] <> pad:33[31:0[R0]] + 0xFFFFFFFE
00051761: ZF := #708 = 0
00051765: NF := 31:31[#708]
0005176a: R27 := 0
0005176f: R25 := 0
00051774: R24 := 0
0005177a: when ZF goto %00051778
0006ce5e: goto %00052295

00052295:
0005229e: #719 := 31:0[R0] - 1
000522a3: VF := extend:33[#719] <> extend:33[31:0[R0]] - 1
000522a8: CF := pad:33[#719] <> pad:33[31:0[R0]] + 0xFFFFFFFF
000522ac: ZF := #719 = 0
000522b0: NF := 31:31[#719]
000522b6: when ZF goto %000522b4
0006ce5f: goto %00051960

00051960:
00051969: R0 := pad:64[0.15:0[R27]]
00051971: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R0]
00051977: R21 := pad:64[31:0[R0] + 0x40]
0005197e: R0 := pad:64[mem[R20 + 0x134, el]:u32]
00051985: R1 :=

0005198d: mem := mem with [R31 + 0x70, el]:u64 <- R1
00051993: R21 := pad:64[0.15:0[R21]]
0005199a: when 31:0[R0] <> 0 goto %00051998
0006ce60: goto %00051a77

00051a77:
00051a7f: R21 := pad:64[31:0[R21] + 31:0[R26]]
00051a86: R0 := pad:64[mem[R20 + 0x130, el]:u32]
00051a8c: R1 := pad:64[0.15:0[R21]]
00051a94: mem := mem with [R31 + 0x80, el]:u32 <- 31:0[R1]
00051a9a: R1 := R20 + 0x64
00051aa2: mem := mem with [R31 + 0x90, el]:u64 <- R1
00051aa8: R3 := R20 + 0x32
00051aaf: when 31:0[R0] <> 0 goto %00051aad
0006ce61: goto %000523b3

000523b3:
000523b8: R0 := pad:64[mem[R20 + 0x12C, el]:u32]
000523be: when 31:0[R0] = 0 goto %000523bc
0006ce62: goto %00051aad

000523bc:
000523c5: R0 := R3
000523cd: mem := mem with [R31 + 0x90, el]:u64 <- R3
000523d2: R30 := 0x6FBC
000523d4: call @strdup with return %000523d6

000523d6:
000523d9: R30 := 0x6FC0
000523db: call @uppercase with return %000523dd

000523dd:
000523e1: R1 := R0
000523e7: R0 := R20
000523ef: mem := mem with [R31 + 0xA0, el]:u64 <- R1
000523f4: R30 := 0x6FD0
000523f6: call @strdup with return %000523f8

000523f8:
000523fb: R30 := 0x6FD4
000523fd: call @uppercase with return %000523ff

000523ff:
00052403: R1 := R0
00052409: R0 := R20 + 0x64
00052411: mem := mem with [R31 + 0xA8, el]:u64 <- R1
00052416: R30 := 0x6FE4
00052418: call @strdup with return %0005241a

0005241a:
0005241d: R30 := 0x6FE8
0005241f: call @uppercase with return %00052421

00052421:
00052425: R1 := R0
0005242c: R3 := mem[R31 + 0x90, el]:u64
00052434: mem := mem with [R31 + 0x98, el]:u64 <- R3
0005243c: mem := mem with [R31 + 0xB0, el]:u64 <- R1
00052442: R0 := R3
00052447: R30 := 0x7000
00052449: call @strlen with return %0005244b

0005244b:
0005244f: R21 := pad:64[31:0[R0]]
00052455: R0 := R20
0005245a: R30 := 0x700C
0005245c: call @strlen with return %0005245e

0005245e:
00052462: R22 := pad:64[31:0[R0]]
00052468: R0 := R20 + 0x64
0005246d: R30 := 0x7018
0005246f: call @strlen with return %00052471

00052471:
00052477: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R0]
0005247e: R3 := mem[R31 + 0x98, el]:u64
00052482: goto %00051b6b

00051aad:
00051ab6: R0 := R3
00051abe: mem := mem with [R31 + 0x98, el]:u64 <- R3
00051ac3: R30 := 0x64F8
00051ac5: call @strdup with return %00051ac7

00051ac7:
00051aca: R30 := 0x64FC
00051acc: call @uppercase with return %00051ace

00051ace:
00051ad2: R22 := R0
00051ad8: R1 := R22
00051ade: R0 := R31 + 0xA0
00051ae3: R30 := 0x650C
00051ae5: call @unicode with return %00051ae7

00051ae7:
00051aeb: R21 := pad:64[31:0[R0]]
00051af1: R0 := R22
00051af6: R30 := 0x6518
00051af8: call @free with return %00051afa

00051afa:
00051afe: R1 := R20
00051b04: R0 := R31 + 0xA8
00051b09: R30 := 0x6524
00051b0b: call @unicode with return %00051b0d

00051b0d:
00051b11: R22 := pad:64[31:0[R0]]
00051b17: R0 := R20 + 0x64
00051b1c: R30 := 0x6530
00051b1e: call @strdup with return %00051b20

00051b20:
00051b23: R30 := 0x6534
00051b25: call @uppercase with return %00051b27

00051b27:
00051b2b: R1 := R0
00051b31: R0 := R31 + 0xB0
00051b39: mem := mem with [R31 + 0x90, el]:u64 <- R1
00051b3e: R30 := 0x6544
00051b40: call @unicode with return %00051b42

00051b42:
00051b46: R2 := pad:64[31:0[R0]]
00051b4d: R1 := mem[R31 + 0x90, el]:u64
00051b55: mem := mem with [R31 + 0x90, el]:u32 <- 31:0[R2]
00051b5b: R0 := R1
00051b60: R30 := 0x6558
00051b62: call @free with return %00051b64

00051b64:
00051b69: R3 := mem[R31 + 0x98, el]:u64
0006ce63: goto %00051b6b

00051b6b:
00051b70: R23 := mem[R23 + 0xF78, el]:u64
00051b77: R0 := pad:64[mem[R23, el]:u32]
00051b7e: when 31:0[R0] <> 0 goto %00051b7c
0006ce64: goto %00051c62

00051b7c:
00051b84: R1 := 0x11000
00051b89: R0 := 1
00051b8f: R1 := R1 + 0x860
00051b97: mem := mem with [R31 + 0x98, el]:u64 <- R3
00051b9c: R30 := 0x6EFC
00051b9e: call @__printf_chk with return %00051ba0

00051ba0:
00051ba4: R2 := R20 + 0x64
00051ba9: R1 := 0x11000
00051bae: R0 := 1
00051bb4: R1 := R1 + 0x870
00051bb9: R30 := 0x6F10
00051bbb: call @__printf_chk with return %00051bbd

00051bbd:
00051bc2: R3 := mem[R31 + 0x98, el]:u64
00051bc7: R1 := 0x11000
00051bcc: R0 := 1
00051bd2: R1 := R1 + 0x888
00051bd8: R2 := R3
00051bdd: R30 := 0x6F28
00051bdf: call @__printf_chk with return %00051be1

00051be1:
00051be4: R1 := 0x11000
00051bea: R2 := R20
00051bf0: R1 := R1 + 0x8A0
00051bf5: R0 := 1
00051bfa: R30 := 0x6F3C
00051bfc: call @__printf_chk with return %00051bfe

00051bfe:
00051c03: when 31:0[R27] <> 0 goto %00051c01
0006ce65: goto %00051c56

00051c01:
00051c0b: R1 := mem[R31 + 0x70, el]:u64
00051c11: R0 := R25
00051c16: R2 := 7
00051c1b: R30 := 0x7034
00051c1d: call @printmem with return %00051c1f

00051c1f:
00051c23: R2 := R0
00051c29: R3 := pad:64[31:0[R27]]
00051c2e: R1 := 0x11000
00051c34: R1 := R1 + 0x8B8
00051c3a: R20 := R0
00051c3f: R0 := 1
00051c44: R30 := 0x7050
00051c46: call @__printf_chk with return %00051c48

00051c48:
00051c4c: R0 := R20
00051c51: R30 := 0x7058
00051c53: call @free with return %00051c55

00051c55:
00051c58: goto %00051c56

00051c56:
00051c5e: R0 := pad:64[mem[R31 + 0x68, el]:u32]
00051c64: when 31:0[R0] = 0 goto %00051c62
0006ce66: goto %00051f8e

00051f8e:
00051f92: R1 := R28
00051f98: R0 := R24
00051f9d: R2 := 7
00051fa2: R30 := 0x6F58
00051fa4: call @printmem with return %00051fa6

00051fa6:
00051fab: R3 := pad:64[mem[R31 + 0x68, el]:u32]
00051fb1: R2 := R0
00051fb6: R1 := 0x11000
00051fbc: R1 := R1 + 0x8B8
00051fc2: R20 := R0
00051fc7: R0 := 1
00051fcc: R30 := 0x6F74
00051fce: call @__printf_chk with return %00051fd0

00051fd0:
00051fd4: R0 := R20
00051fd9: R30 := 0x6F7C
00051fdb: call @free with return %00051fdd

00051fdd:
00051fdf: goto %00051c62

00051c62:
00051c6a: R0 := 0x400
00051c6f: R30 := 0x6570
00051c71: call @new with return %00051c73

00051c73:
00051c76: R3 := 0x544E
00051c7c: R20 := R0
00051c83: R8 := pad:64[mem[R31 + 0x90, el]:u32]
00051c89: R1 := pad:64[31:0[R21] + 0x40]
00051c90: R3 := 63:32[R3].0x4D4C.15:0[R3]
00051c97: R0 := pad:64[31:0[R1] + 31:0[R22]]
00051c9e: R4 := pad:64[mem[R31 + 0x68, el]:u32]
00051ca5: R3 := 63:48[R3].0x5353.31:0[R3]
00051cac: R2 := pad:64[31:0[R0] + 31:0[R8]]
00051cb2: R3 := 0x50.47:0[R3]
00051cb8: R7 := pad:64[0.15:0[R21]]
00051cbe: R6 := pad:64[0.15:0[R22]]
00051cc5: R4 := pad:64[31:0[R2] + 31:0[R4]]
00051cca: R5 := 3
00051cd2: mem := mem with [R20, el]:u64 <- R3
00051cd7: R3 := 0x40
00051cdf: mem := mem with [R20 + 8, el]:u32 <- 31:0[R5]
00051ce5: R5 := pad:64[0.15:0[R8]]
00051ced: mem := mem with [R20 + 0x10, el]:u32 <- 31:0[R2]
00051cf4: R21 :=

00051cfc: mem := mem with [R20 + 0x18, el]:u32 <- 31:0[R4]
00051d02: R2 := R21
00051d0a: mem := mem with [R20 + 0x20, el]:u32 <- 31:0[R3]
00051d11: R3 := pad:64[31:0[R7] + 31:0[R6]]
00051d19: mem := mem with [R20 + 0x28, el]:u32 <- 31:0[R1]
00051d20: R22 :=

00051d28: mem := mem with [R20 + 0x30, el]:u32 <- 31:0[R0]
00051d2f: R0 := pad:64[mem[R31 + 0x80, el]:u32]
00051d37: mem := mem with [R31 + 0x68, el]:u32 <- 31:0[R4]
00051d3e: R3 := pad:64[31:0[R0] + 31:0[R3]]
00051d45: R4 := pad:64[mem[R31 + 0x88, el]:u32]
00051d4b: R0 := pad:64[31:0[R8]]
00051d52: R8 := pad:64[mem[R19 + 0x14, el]:u32]
00051d59: R1 := mem[R31 + 0xA0, el]:u64
00051d60: R3 := pad:64[31:0[R5] + 31:0[R3]]
00051d68: mem := mem with [R20 + 0xC, el]:u16 <- 15:0[R26]
00051d6f: R19 :=

00051d77: mem := mem with [R20 + 0xE, el]:u16 <- 15:0[R26]
00051d7d: R0 := R20 + 0x40
00051d85: mem := mem with [R20 + 0x14, el]:u16 <- 15:0[R4]
00051d8c: R26 := R21 + R22
00051d94: mem := mem with [R20 + 0x16, el]:u16 <- 15:0[R4]
00051d9a: R21 := R21 + 0x40
00051da2: mem := mem with [R20 + 0x1C, el]:u16 <- 15:0[R7]
00051da9: R23 := R26 + R19
00051db1: mem := mem with [R20 + 0x1E, el]:u16 <- 15:0[R7]
00051db9: mem := mem with [R20 + 0x24, el]:u16 <- 15:0[R6]
00051dc1: mem := mem with [R20 + 0x26, el]:u16 <- 15:0[R6]
00051dc9: mem := mem with [R20 + 0x2C, el]:u16 <- 15:0[R5]
00051dd1: mem := mem with [R20 + 0x2E, el]:u16 <- 15:0[R5]
00051dd8: mem := mem with [R20 + 0x34, el]:u32 <- 0
00051de0: mem := mem with [R20 + 0x38, el]:u16 <- 15:0[R3]
00051de8: mem := mem with [R20 + 0x3C, el]:u32 <- 31:0[R8]
00051ded: R30 := 0x6648
00051def: call @memcpy with return %00051df1

00051df1:
00051df6: R1 := mem[R31 + 0xA8, el]:u64
00051dfc: R2 := R22
00051e03: R0 := R20 + R21
00051e08: R30 := 0x6658
00051e0a: call @memcpy with return %00051e0c

00051e0c:
00051e11: R1 := mem[R31 + 0xB0, el]:u64
00051e17: R0 := R26 + 0x40
00051e1d: R2 := R19
00051e24: R0 := R20 + R0
00051e29: R30 := 0x666C
00051e2b: call @memcpy with return %00051e2d

00051e2d:
00051e31: R0 := R23 + 0x40
00051e37: R2 := R28
00051e3d: R1 := R24
00051e44: R0 := R20 + R0
00051e49: R30 := 0x6680
00051e4b: call @memcpy with return %00051e4d

00051e4d:
00051e52: R2 := mem[R31 + 0x70, el]:u64
00051e58: R1 := R25
00051e5e: R0 := R23 + 0x58
00051e65: R0 := R20 + R0
00051e6a: R30 := 0x6694
00051e6c: call @memcpy with return %00051e6e

00051e6e:
00051e72: R0 := R25
00051e77: R30 := 0x669C
00051e79: call @free with return %00051e7b

00051e7b:
00051e7f: R0 := R24
00051e84: R30 := 0x66A4
00051e86: call @free with return %00051e88

00051e88:
00051e8d: R0 := mem[R31 + 0xB0, el]:u64
00051e92: R30 := 0x66AC
00051e94: call @free with return %00051e96

00051e96:
00051e9b: R0 := mem[R31 + 0xA8, el]:u64
00051ea0: R30 := 0x66B4
00051ea2: call @free with return %00051ea4

00051ea4:
00051ea9: R0 := mem[R31 + 0xA0, el]:u64
00051eae: R30 := 0x66BC
00051eb0: call @free with return %00051eb2

00051eb2:
00051eb7: R1 := mem[R31 + 0x78, el]:u64
00051ebe: R4 := pad:64[mem[R31 + 0x68, el]:u32]
00051ec5: R0 := pad:64[31:0[R4] + 31:0[R27]]
00051ecd: mem := mem with [R1, el]:u64 <- R20
0006ce67: goto %00051ecf

00051ecf:
00051ed2: R1 := 0x27000
00051ed9: R1 := mem[R1 + 0xFB8, el]:u64
00051ee0: R2 := mem[R31 + 0x1B8, el]:u64
00051ee7: R3 := mem[R1, el]:u64
00051eed: #711 := ~R3
00051ef2: #712 := R2 + ~R3 + 1
00051ef8: VF := extend:65[#712] <> extend:65[R2] + extend:65[#711] + 1
00051efe: CF := pad:65[#712] <> pad:65[R2] + pad:65[#711] + 1
00051f02: ZF := #712 = 0
00051f06: NF := 63:63[#712]
00051f0a: R2 := #712
00051f0f: R3 := 0
00051f15: when ZF <> 1 goto %00051f13
0006ce68: goto %00051f29

00051f13:
00051f1b: R30 := 0x70A0
00051f1d: call @__stack_chk_fail with return %00051f1f

00051f1f:
00051f23: R27 := pad:64[31:0[R22]]
00051f27: goto %000516f0

000516f0:
000516f8: when 31:0[R2] <> 0 goto %000516f6
0006ce69: goto %00051726

000516f6:
00051700: R2 := pad:64[mem[R31 + 0x80, el]:u32]
00051706: R4 := pad:64[31:0[R27]]
0005170c: R3 := pad:64[31:0[R22]]
00051711: R1 := 0x11000
00051716: R0 := 1
0005171c: R1 := R1 + 0x808
00051721: R30 := 0x6FAC
00051723: call @__printf_chk with return %00051725

00051725:
00051728: goto %00051726

00051726:
0005172e: R0 := pad:64[mem[R20 + 0x12C, el]:u32]
00051734: when 31:0[R0] = 0 goto %00051732
0006ce6a: goto %00052d82

00052d82:
00052d85: when 31:0[R22] = 0 goto %00052484
0006ce6b: goto %00052d89

00052484:
00052487: R0 := 0
0005248b: goto %00051ecf

00052d89:
00052d8c: R0 := 9
00052d91: R30 := 0x69F0
00052d93: call @new with return %00052d95

00052d95:
00052d99: R1 := R20 + 0xFA
00052d9f: R21 := R0
00052da7: mem := mem with [R31 + 0x68, el]:u64 <- R1
00052dac: R30 := 0x6A00
00052dae: call @random with return %00052db0

00052db0:
00052db4: R25 := R0
00052db9: R30 := 0x6A08
00052dbb: call @random with return %00052dbd

00052dbd:
00052dc1: R1 := R0
00052dc8: R25 := R1 | R25 << 0x20
00052dd0: mem := mem with [R21, el]:u64 <- R25
00052dd5: R0 := 0
00052dda: R25 := 0x8000
00052ddf: R30 := 0x6A20
00052de2: call @time with return %00052de4

00052de4:
00052de9: R25 := 63:32[R25].0xD53E.15:0[R25]
00052df0: R1 := mem[R23 + 0xF78, el]:u64
00052df5: R2 := 0x9680
00052dfc: R25 := 63:48[R25].0xB1DE.31:0[R25]
00052e03: R2 := 63:32[R2].0x98.15:0[R2]
00052e09: R25 := 0x19D.47:0[R25]
00052e10: R1 := pad:64[mem[R1, el]:u32]
00052e18: R24 := R25 + 63:0[pad:128[R0] * pad:128[R2]]
00052e1e: when 31:0[R1] <> 0 goto %00051ffb
0006ce6c: goto %00052049

00051ffb:
00051fff: R0 := R21
00052004: R2 := 7
00052009: R1 := 8
0005200e: R30 := 0x706C
00052010: call @printmem with return %00052012

00052012:
00052016: R3 := R24
0005201c: R2 := R0
00052021: R1 := 0x11000
00052027: R1 := R1 + 0x838
0005202d: R26 := R0
00052032: R0 := 1
00052037: R30 := 0x7088
00052039: call @__printf_chk with return %0005203b

0005203b:
0005203f: R0 := R26
00052044: R30 := 0x7090
00052046: call @free with return %00052048

00052048:
0005204b: goto %00052049

00052049:
00052050: R0 := pad:64[31:0[R22] + 0x21]
00052056: R25 := 0.15:0[R22]
0005205b: R28 := 0x18
00052061: R27 := pad:64[31:0[R22] + 0x30]
00052068: R0 :=

0005206d: R30 := 0x6A5C
0005206f: call @new with return %00052071

00052071:
00052075: R5 := R0
0005207a: R3 := 0x101
00052081: R0 := pad:64[mem[R31 + 0x80, el]:u16]
00052087: R2 := R25
0005208f: mem := mem with [R31 + 0x68, el]:u32 <- 31:0[R28]
00052095: R26 := pad:64[31:0[R28]]
0005209d: mem := mem with [R5, el]:u64 <- R3
000520a3: mem := mem with [R5 + 8, el]:u64 <- R24
000520aa: R1 := R19 + (0.15:0[R0])
000520b1: R3 := mem[R21, el]:u64
000520b9: mem := mem with [R5 + 0x10, el]:u64 <- R3
000520c0: mem := mem with [R5 + 0x18, el]:u32 <- 0
000520c6: R0 := R5 + 0x1C
000520ce: mem := mem with [R31 + 0x70, el]:u64 <- R5
000520d3: R30 := 0x6A94
000520d5: call @memcpy with return %000520d7

000520d7:
000520dc: R5 := mem[R31 + 0x70, el]:u64
000520e2: R0 := pad:64[31:0[R22] + 0x31]
000520e9: R2 := R5 + R25
000520f0: R0 :=

000520f7: mem := mem with [R2 + 0x1C, el]:u32 <- 0
000520fc: R30 := 0x6AAC
000520fe: call @new with return %00052100

00052100:
00052104: R25 := R0
0005210a: R1 := pad:64[31:0[R22] + 0x29]
00052111: R0 :=

00052116: R30 := 0x6ABC
00052118: call @new with return %0005211a

0005211a:
0005211e: R24 := R0
00052124: R6 := pad:64[31:0[R22] + 0x20]
0005212b: R3 := mem[R19 + 0x18, el]:u64
00052132: R6 :=

00052139: R5 := mem[R31 + 0x70, el]:u64
00052141: mem := mem with [R0, el]:u64 <- R3
00052145: R0 := R0 + 8
0005214b: R2 := R6
00052153: mem := mem with [R31 + 0x70, el]:u64 <- R6
00052159: R1 := R5
00052161: mem := mem with [R31 + 0x80, el]:u64 <- R5
00052166: R30 := 0x6AE8
00052168: call @memcpy with return %0005216a

0005216a:
0005216e: R3 := pad:64[31:0[R22] + 0x28]
00052174: R4 := R25
0005217a: R2 := R24
0005217f: R1 := 0x10
00052186: R3 :=

0005218c: R0 := R20 + 0xFA
00052191: R30 := 0x6B04
00052193: call @hmac_md5 with return %00052195

00052195:
0005219a: R6 := mem[R31 + 0x70, el]:u64
000521a0: R0 := R25 + 0x10
000521a7: R5 := mem[R31 + 0x80, el]:u64
000521ad: R2 := R6
000521b5: mem := mem with [R31 + 0x70, el]:u64 <- R5
000521bb: R1 := R5
000521c0: R30 := 0x6B20
000521c2: call @memcpy with return %000521c4

000521c4:
000521c8: R0 := R24
000521cd: R30 := 0x6B28
000521cf: call @free with return %000521d1

000521d1:
000521d4: R0 := 0x19
000521d9: R30 := 0x6B30
000521db: call @new with return %000521dd

000521dd:
000521e1: R24 := R0
000521e6: R0 := 0x11
000521eb: R30 := 0x6B3C
000521ed: call @new with return %000521ef

000521ef:
000521f3: R22 := R0
000521fa: R1 := mem[R19 + 0x18, el]:u64
000521ff: R3 := 0x10
00052207: mem := mem with [R22, el]:u64 <- R1
0005220d: R4 := R24
00052213: R2 := R22
00052219: R1 := R3
00052220: R6 := mem[R21, el]:u64
00052228: mem := mem with [R22 + 8, el]:u64 <- R6
0005222e: R0 := R20 + 0xFA
00052233: R30 := 0x6B68
00052235: call @hmac_md5 with return %00052237

00052237:
0005223c: R0 := mem[R21, el]:u64
00052244: mem := mem with [R24 + 0x10, el]:u64 <- R0
0005224a: R0 := R22
0005224f: R30 := 0x6B78
00052251: call @free with return %00052253

00052253:
00052258: R5 := mem[R31 + 0x70, el]:u64
0005225e: R0 := R5
00052263: R30 := 0x6B84
00052265: call @free with return %00052267

00052267:
0005226b: R0 := R21
00052270: R30 := 0x6B8C
00052272: call @free with return %00052274

00052274:
00052279: R0 := pad:64[mem[R20 + 0x130, el]:u32]
0005227f: #718 := 31:0[R0] - 2
00052284: VF := extend:33[#718] <> extend:33[31:0[R0]] - 2
00052289: CF := pad:33[#718] <> pad:33[31:0[R0]] + 0xFFFFFFFE
0005228d: ZF := #718 = 0
00052291: NF := 31:31[#718]
00052297: when ZF <> 1 goto %00052295
0006ce6d: goto %00051778

00051778:
00051780: R0 := 9
00051785: R30 := 0x6BA0
00051787: call @new with return %00051789

00051789:
0005178d: R21 := R0
00051792: R30 := 0x6BA8
00051795: call @random with return %00051797

00051797:
0005179b: R24 := R0
000517a0: R30 := 0x6BB0
000517a2: call @random with return %000517a4

000517a4:
000517a8: R1 := R0
000517ad: R0 := 0x19
000517b4: R24 := R1 | R24 << 0x20
000517bc: mem := mem with [R21, el]:u64 <- R24
000517c1: R28 := 0x18
000517c7: R22 := R31 + 0xB8
000517cc: R30 := 0x6BCC
000517ce: call @new with return %000517d0

000517d0:
000517d4: R24 := R0
000517db: R1 := mem[R21, el]:u64
000517e0: R0 := 0x11
000517e8: mem := mem with [R24, el]:u64 <- R1
000517ee: R26 := pad:64[31:0[R28]]
000517f4: #709 := R24 + 8
000517f9: mem := mem with [#709, el]:u64 <- 0
000517fe: mem := mem with [#709 + 8, el]:u64 <- 0
00051804: R27 := pad:64[31:0[R28]]
0005180c: mem := mem with [R31 + 0x68, el]:u32 <- 31:0[R28]
00051814: mem := mem with [R31 + 0x70, el]:u64 <- R21
00051819: R30 := 0x6BF4
0005181b: call @new with return %0005181d

0005181d:
00051821: R25 := R0
00051826: R0 := 0x11
0005182b: R30 := 0x6C00
0005182d: call @new with return %0005182f

0005182f:
00051833: R2 := R0
0005183a: R3 := mem[R31 + 0x70, el]:u64
00051840: R21 := R0
00051847: R1 := mem[R19 + 0x18, el]:u64
0005184f: mem := mem with [R25, el]:u64 <- R1
00051854: R1 := 0x10
0005185a: R0 := R25
00051861: R3 := mem[R3, el]:u64
00051869: mem := mem with [R25 + 8, el]:u64 <- R3
0005186e: R30 := 0x6C28
00051870: call @md5_buffer with return %00051872

00051872:
00051876: R0 := R25
0005187b: R30 := 0x6C30
0005187d: call @free with return %0005187f

0005187f:
00051882: R0 := 0x19
00051887: R30 := 0x6C38
00051889: call @new with return %0005188b

0005188b:
0005188f: R1 := R22
00051895: R25 := R0
0005189b: R0 := R20 + 0xC8
000518a0: R30 := 0x6C48
000518a2: call @ntlm_set_key with return %000518a4

000518a4:
000518a8: R2 := R25
000518ad: R3 := 0
000518b3: R1 := R21
000518b9: R0 := R22
000518be: R30 := 0x6C5C
000518c0: call @gl_des_ecb_crypt with return %000518c2

000518c2:
000518c6: R1 := R22
000518cc: R0 := R20 + 0xCF
000518d1: R30 := 0x6C68
000518d3: call @ntlm_set_key with return %000518d5

000518d5:
000518d9: R2 := R25 + 8
000518de: R3 := 0
000518e4: R1 := R21
000518ea: R0 := R22
000518ef: R30 := 0x6C7C
000518f1: call @gl_des_ecb_crypt with return %000518f3

000518f3:
000518f7: R1 := R22
000518fd: R0 := R20 + 0xD6
00051902: R30 := 0x6C88
00051904: call @ntlm_set_key with return %00051906

00051906:
0005190a: R2 := R25 + 0x10
00051910: R1 := R21
00051915: R3 := 0
0005191b: R0 := R22
00051920: R30 := 0x6C9C
00051922: call @gl_des_ecb_crypt with return %00051924

00051924:
00051928: R0 := R21
0005192d: R30 := 0x6CA4
0005192f: call @free with return %00051931

00051931:
00051936: R0 := mem[R31 + 0x70, el]:u64
0005193b: R30 := 0x6CAC
0005193d: call @free with return %0005193f

0005193f:
00051944: R0 := pad:64[mem[R20 + 0x130, el]:u32]
0005194a: #710 := 31:0[R0] - 1
0005194f: VF := extend:33[#710] <> extend:33[31:0[R0]] - 1
00051954: CF := pad:33[#710] <> pad:33[31:0[R0]] + 0xFFFFFFFF
00051958: ZF := #710 = 0
0005195c: NF := 31:31[#710]
00051962: when ZF <> 1 goto %00051960
0006ce6e: goto %000522b4

000522b4:
000522bd: R22 := R31 + 0xB8
000522c2: R0 := 0x19
000522c7: R30 := 0x6CC4
000522c9: call @new with return %000522cb

000522cb:
000522cf: R25 := R0
000522d5: R1 := R22
000522db: R0 := R20 + 0xC8
000522e0: R30 := 0x6CD4
000522e2: call @ntlm_set_key with return %000522e4

000522e4:
000522e7: R21 := 0x58
000522ed: R4 := R19 + 0x18
000522f3: R2 := R25
000522f8: R3 := 0
000522fe: R1 := R4
00052304: R0 := R22
0005230c: mem := mem with [R31 + 0x80, el]:u64 <- R4
00052311: R30 := 0x6CF4
00052313: call @gl_des_ecb_crypt with return %00052315

00052315:
00052319: R1 := R22
0005231f: R0 := R20 + 0xCF
00052324: R30 := 0x6D00
00052326: call @ntlm_set_key with return %00052328

00052328:
0005232d: R4 := mem[R31 + 0x80, el]:u64
00052333: R2 := R25 + 8
00052338: R0 := 0x18
0005233d: R3 := 0
00052343: R1 := R4
00052348: R4 := 0x18
0005234e: R27 := pad:64[31:0[R0]]
00052356: mem := mem with [R31 + 0x70, el]:u64 <- R0
0005235c: R0 := R22
00052364: mem := mem with [R31 + 0x88, el]:u32 <- 31:0[R4]
00052369: R30 := 0x6D2C
0005236b: call @gl_des_ecb_crypt with return %0005236d

0005236d:
00052371: R1 := R22
00052377: R0 := R20 + 0xD6
0005237c: R30 := 0x6D38
0005237e: call @ntlm_set_key with return %00052380

00052380:
00052385: R4 := mem[R31 + 0x80, el]:u64
0005238b: R0 := R22
00052391: R2 := R25 + 0x10
00052396: R3 := 0
0005239c: R1 := R4
000523a1: R30 := 0x6D50
000523a3: call @gl_des_ecb_crypt with return %000523a5

000523a5:
000523aa: R0 := pad:64[mem[R20 + 0x134, el]:u32]
000523af: when 31:0[R0] = 0 goto %00051a77
0006ce6f: goto %00051998

00051998:
000519a1: R22 := R31 + 0xB8
000519a6: R0 := 0x19
000519ab: R30 := 0x6D64
000519ad: call @new with return %000519af

000519af:
000519b3: R24 := R0
000519b9: R1 := R22
000519bf: R0 := R20 + 0x96
000519c4: R30 := 0x6D74
000519c6: call @ntlm_set_key with return %000519c8

000519c8:
000519cb: R28 := 0x18
000519d1: R4 := R19 + 0x18
000519d7: R2 := R24
000519dc: R3 := 0
000519e2: R1 := R4
000519e8: R0 := R22
000519f0: mem := mem with [R31 + 0x80, el]:u64 <- R4
000519f5: R30 := 0x6D94
000519f7: call @gl_des_ecb_crypt with return %000519f9

000519f9:
000519fc: R26 := 0x18
00051a02: R1 := R22
00051a08: R0 := R20 + 0x9D
00051a0d: R30 := 0x6DA4
00051a0f: call @ntlm_set_key with return %00051a11

00051a11:
00051a17: mem := mem with [R31 + 0x68, el]:u32 <- 31:0[R28]
00051a1e: R4 := mem[R31 + 0x80, el]:u64
00051a24: R2 := R24 + 8
00051a29: R3 := 0
00051a2f: R0 := R22
00051a35: R1 := R4
00051a3a: R30 := 0x6DC0
00051a3c: call @gl_des_ecb_crypt with return %00051a3e

00051a3e:
00051a42: R1 := R22
00051a48: R0 := R20 + 0xA4
00051a4d: R30 := 0x6DCC
00051a4f: call @ntlm_set_key with return %00051a51

00051a51:
00051a56: R4 := mem[R31 + 0x80, el]:u64
00051a5c: R0 := R22
00051a62: R2 := R24 + 0x10
00051a67: R3 := 0
00051a6d: R1 := R4
00051a72: R30 := 0x6DE4
00051a74: call @gl_des_ecb_crypt with return %00051a76

00051a76:
00051a79: goto %00051a77

00051f29:
00051f2d: #713 := R31 + 0x10
00051f32: R19 := mem[#713, el]:u64
00051f37: R20 := mem[#713 + 8, el]:u64
00051f3d: #714 := R31 + 0x20
00051f42: R21 := mem[#714, el]:u64
00051f47: R22 := mem[#714 + 8, el]:u64
00051f4d: #715 := R31 + 0x30
00051f52: R23 := mem[#715, el]:u64
00051f57: R24 := mem[#715 + 8, el]:u64
00051f5d: #716 := R31 + 0x40
00051f62: R25 := mem[#716, el]:u64
00051f67: R26 := mem[#716 + 8, el]:u64
00051f6d: #717 := R31 + 0x50
00051f72: R27 := mem[#717, el]:u64
00051f77: R28 := mem[#717 + 8, el]:u64
00051f7e: R29 := mem[R31, el]:u64
00051f83: R30 := mem[R31 + 8, el]:u64
00051f87: R31 := R31 + 0x1C0
00051f8c: call R30 with noreturn

0006ce70: sub ntlm_set_key(ntlm_set_key_result)
0006d144: ntlm_set_key_result :: out u32 = low:32[R0]

00046728:
0004672c: #60 := R31 - 0x30
00046732: mem := mem with [#60, el]:u64 <- R29
00046738: mem := mem with [#60 + 8, el]:u64 <- R30
0004673c: R31 := #60
00046742: R2 := R0
00046748: R0 := R1
0004674e: R29 := R31
00046756: mem := mem with [R31 + 0x10, el]:u64 <- R19
0004675b: R19 := 0x27000
00046761: R1 := R31 + 0x20
00046768: R19 := mem[R19 + 0xFB8, el]:u64
0004676f: R7 := pad:64[mem[R2 + 2]]
00046776: R3 := mem[R19, el]:u64
0004677e: mem := mem with [R31 + 0x28, el]:u64 <- R3
00046783: R3 := 0
0004678a: R8 := pad:64[mem[R2 + 1]]
00046791: R6 := pad:64[mem[R2 + 3]]
00046798: R5 := pad:64[mem[R2 + 4]]
0004679f: R11 := pad:64[0.29:0[31:0[R7] >> 2 | 31:0[R7] << 0x1E]]
000467a6: R3 := pad:64[mem[R2 + 6]]
000467ad: R9 := pad:64[0.30:0[31:0[R8] >> 1 | 31:0[R8] << 0x1F]]
000467b4: R4 := pad:64[mem[R2 + 5]]
000467bb: R13 := pad:64[0.28:0[31:0[R6] >> 3 | 31:0[R6] << 0x1D]]
000467c2: R10 := pad:64[mem[R2]]
000467c9: R12 := pad:64[0.27:0[31:0[R5] >> 4 | 31:0[R5] << 0x1C]]
000467d0: R8 := pad:64[31:0[R11] | 31:0[R8] << 6]
000467d7: R11 := pad:64[0.25:0[31:0[R3] >> 6 | 31:0[R3] << 0x1A]]
000467de: R2 := pad:64[0.26:0[31:0[R4] >> 5 | 31:0[R4] << 0x1B]]
000467e5: R7 := pad:64[31:0[R13] | 31:0[R7] << 5]
000467ec: R5 := pad:64[31:0[R2] | 31:0[R5] << 3]
000467f3: R6 := pad:64[31:0[R12] | 31:0[R6] << 4]
000467fa: R2 := pad:64[31:0[R9] | 31:0[R10] << 7]
00046801: R4 := pad:64[31:0[R11] | 31:0[R4] << 2]
00046808: R3 := pad:64[31:1[31:0[R3] >> 0x1F | 31:0[R3] << 1].0]
00046810: mem := mem with [R31 + 0x20] <- 7:0[R10]
00046818: mem := mem with [R31 + 0x21] <- 7:0[R2]
00046820: mem := mem with [R31 + 0x22] <- 7:0[R8]
00046828: mem := mem with [R31 + 0x23] <- 7:0[R7]
00046830: mem := mem with [R31 + 0x24] <- 7:0[R6]
00046838: mem := mem with [R31 + 0x25] <- 7:0[R5]
00046840: mem := mem with [R31 + 0x26] <- 7:0[R4]
00046848: mem := mem with [R31 + 0x27] <- 7:0[R3]
0004684d: R30 := 0x5F20
00046850: call @gl_des_setkey with return %00050c73

00050c73:
00050c78: R0 := mem[R31 + 0x28, el]:u64
00050c7f: R1 := mem[R19, el]:u64
00050c85: #668 := ~R1
00050c8a: #669 := R0 + ~R1 + 1
00050c90: VF := extend:65[#669] <> extend:65[R0] + extend:65[#668] + 1
00050c96: CF := pad:65[#669] <> pad:65[R0] + pad:65[#668] + 1
00050c9a: ZF := #669 = 0
00050c9e: NF := 63:63[#669]
00050ca2: R0 := #669
00050ca7: R1 := 0
00050cad: when ZF <> 1 goto %00050cab
0006ce71: goto %0005f54f

00050cab:
00050cb3: R30 := 0x5F44
00050cb5: call @__stack_chk_fail with return %00050cb7

00050cb7:
0006ce72: call @ntlm_hash_lm_password with noreturn

0005f54f:
0005f554: R19 := mem[R31 + 0x10, el]:u64
0005f55b: R29 := mem[R31, el]:u64
0005f560: R30 := mem[R31 + 8, el]:u64
0005f564: R31 := R31 + 0x30
0005f569: call R30 with noreturn

0006ce73: sub open(open_pathname, open_flags, open_result)
0006d145: open_pathname :: in u64 = R0
0006d146: open_flags :: in u32 = low:32[R1]
0006d147: open_result :: out u32 = low:32[R0]

000611d7:
00064947: R16 := 0x27000
0006494e: R17 := mem[R16 + 0xD28, el]:u64
00064954: R16 := R16 + 0xD28
00064959: call R17 with noreturn

0006ce74: sub openlog(openlog_result)
0006d148: openlog_result :: out u32 = low:32[R0]

000603ef:
00064b99: R16 := 0x27000
00064ba0: R17 := mem[R16 + 0xE00, el]:u64
00064ba6: R16 := R16 + 0xE00
00064bab: call R17 with noreturn

0006ce75: sub parent_add(parent_add_result)
0006d149: parent_add_result :: out u32 = low:32[R0]

00056b11:
00056b15: #1048 := R31 - 0x30
00056b1b: mem := mem with [#1048, el]:u64 <- R29
00056b21: mem := mem with [#1048 + 8, el]:u64 <- R30
00056b25: R31 := #1048
00056b2b: R29 := R31
00056b31: #1049 := R31 + 0x10
00056b37: mem := mem with [#1049, el]:u64 <- R19
00056b3d: mem := mem with [#1049 + 8, el]:u64 <- R20
00056b43: #1050 := R31 + 0x20
00056b49: mem := mem with [#1050, el]:u64 <- R21
00056b4f: mem := mem with [#1050 + 8, el]:u64 <- R22
00056b55: R22 := pad:64[31:0[R1]]
00056b5b: R21 := R0
00056b60: R30 := 0x1052C
00056b62: call @strdup with return %00056b64

00056b64:
00056b68: R20 := R0
00056b6d: R30 := 0x10534
00056b6f: call @strlen with return %00056b71

00056b71:
00056b75: R19 := R0
00056b7a: R1 := 0x15000
00056b80: R0 := R20
00056b86: R1 := R1 + 0x38
00056b8b: R30 := 0x10548
00056b8d: call @strcspn with return %00056b8f

00056b8f:
00056b93: #1051 := ~31:0[R0]
00056b98: #1052 := 31:0[R19] + ~31:0[R0] + 1
00056b9e: VF := extend:33[#1052] <> extend:33[31:0[R19]] + extend:33[#1051] +
          1
00056ba4: CF := pad:33[#1052] <> pad:33[31:0[R19]] + pad:33[#1051] + 1
00056ba8: ZF := #1052 = 0
00056bac: NF := 31:31[#1052]
00056bb2: when ZF goto %00056bb0
0006ce76: goto %0005a92b

0005a92b:
0005a930: R3 :=

0005a936: R1 := pad:64[31:0[R0] + 1]
0005a93c: #1259 := ~31:0[R1]
0005a941: #1260 := 31:0[R19] + ~31:0[R1] + 1
0005a947: VF := extend:33[#1260] <> extend:33[31:0[R19]] + extend:33[#1259] +
          1
0005a94d: CF := pad:33[#1260] <> pad:33[31:0[R19]] + pad:33[#1259] + 1
0005a951: ZF := #1260 = 0
0005a955: NF := 31:31[#1260]
0005a95d: mem := mem with [R20 + R3] <- 0
0005a964: when ~(NF = VF & ~ZF) goto %00056da2
0006ce77: goto %0005a968

0005a968:
0005a96c: R19 := pad:64[31:0[R19] - 2]
0005a972: R2 := R20 + 2
0005a979: R19 := pad:64[31:0[R19] + ~31:0[R0] + 1]
0005a980: R0 := R20 + extend:64[31:0[R1]]
0005a987: R1 := R19 + R3
0005a98e: R2 := R1 + R2
0005a993: goto %0005a991

0005a991:
0005a999: R1 := pad:64[mem[R0]]
0005a99f: #1261 := 31:0[R1] - 0x20
0005a9a4: VF := extend:33[#1261] <> extend:33[31:0[R1]] - 0x20
0005a9a9: CF := pad:33[#1261] <> pad:33[31:0[R1]] + 0xFFFFFFE0
0005a9ad: ZF := #1261 = 0
0005a9b1: NF := 31:31[#1261]
0005a9b7: #1262 := 31:0[R1] - 9
0005a9dd: goto %0005a9d7

0005a9d7:
0005a9d9: when ZF <> 1 goto %0005a9bc
0005a9da: goto %0005a9cc

0005a9cc:
0005a9cd: VF := 0
0005a9d0: CF := 0
0005a9d3: ZF := 1
0005a9d6: NF := 0
0005a9dc: goto %0005a9d8

0005a9bc:
0005a9bd: VF := extend:33[#1262] <> extend:33[31:0[R1]] - 9
0005a9c2: CF := pad:33[#1262] <> pad:33[31:0[R1]] + 0xFFFFFFF7
0005a9c6: ZF := #1262 = 0
0005a9ca: NF := 31:31[#1262]
0005a9db: goto %0005a9d8

0005a9d8:
0005a9e3: when ZF goto %0005a9e1
0006ce78: goto %0005aa12

0005aa12:
0005aa15: R2 := 0xA
0005aa1a: R1 := 0
0005aa1f: R30 := 0x105A8
0005aa21: call @strtol with return %0005aa23

0005aa23:
0005aa27: R22 := pad:64[31:0[R0]]
0006ce79: goto %00056bb0

00056bb0:
00056bb9: when 31:0[R22] = 0 goto %00056bb7
0006ce7a: goto %00056cdc

00056bb7:
00056bc0: R3 := R21
00056bc5: R2 := 0x13000
00056bcb: R2 := R2 + 0xE88
00056bd0: R1 := 1
00056bd5: R0 := 3
00056bda: R30 := 0x10630
00056bdc: call @__syslog_chk with return %00056bde

00056bde:
00056be2: R0 := R20
00056be7: R30 := 0x10638
00056be9: call @free with return %00056beb

00056beb:
00056bee: R0 := 1
00056bf3: R30 := 0x10640
00056bf6: call @myexit with return %00056cdb

00056cdb:
00056cde: goto %00056cdc

00056cdc:
00056ce2: R19 := 0x28000
00056ce8: R19 := R19 + 0x4D8
00056ced: R0 := 0x188
00056cf2: R30 := 0x105C0
00056cf4: call @new with return %00056cf6

00056cf6:
00056cfa: R1 := R20
00056d00: R21 := R0
00056d05: R2 := 0x40
00056d0a: R30 := 0x105D0
00056d0c: call @strlcpy with return %00056d0e

00056d0e:
00056d13: R1 := pad:64[mem[R19 + 0x10, el]:u32]
00056d19: R2 := R21
00056d20: R0 := mem[R19 + 8, el]:u64
00056d26: R1 := pad:64[31:0[R1] + 1]
00056d2e: mem := mem with [R21 + 0x180, el]:u32 <- 31:0[R22]
00056d35: mem := mem with [R21 + 0x184, el]:u32 <- 0
00056d3d: mem := mem with [R19 + 0x10, el]:u32 <- 31:0[R1]
00056d44: R1 :=

00056d49: R30 := 0x105F4
00056d4b: call @plist_add with return %00056d4d

00056d4d:
00056d51: R1 := R0
00056d57: R0 := R20
00056d5f: mem := mem with [R19 + 8, el]:u64 <- R1
00056d64: R30 := 0x10604
00056d66: call @free with return %00056d68

00056d68:
00056d6b: R0 := 1
00056d71: #1055 := R31 + 0x10
00056d76: R19 := mem[#1055, el]:u64
00056d7b: R20 := mem[#1055 + 8, el]:u64
00056d81: #1056 := R31 + 0x20
00056d86: R21 := mem[#1056, el]:u64
00056d8b: R22 := mem[#1056 + 8, el]:u64
00056d92: R29 := mem[R31, el]:u64
00056d97: R30 := mem[R31 + 8, el]:u64
00056d9b: R31 := R31 + 0x30
00056da0: call R30 with noreturn

0005a9e1:
0005a9ea: R0 := R0 + 1
0005a9f0: #1263 := ~R2
0005a9f5: #1264 := R0 + ~R2 + 1
0005a9fb: VF := extend:65[#1264] <> extend:65[R0] + extend:65[#1263] + 1
0005aa01: CF := pad:65[#1264] <> pad:65[R0] + pad:65[#1263] + 1
0005aa05: ZF := #1264 = 0
0005aa09: NF := 63:63[#1264]
0005aa0e: when ZF goto %00056da2
0006ce7b: goto %0005a991

00056da2:
00056da6: R0 := R20
00056dab: R30 := 0x1064C
00056dad: call @free with return %00056daf

00056daf:
00056db2: R0 := 0
00056db8: #1057 := R31 + 0x10
00056dbd: R19 := mem[#1057, el]:u64
00056dc2: R20 := mem[#1057 + 8, el]:u64
00056dc8: #1058 := R31 + 0x20
00056dcd: R21 := mem[#1058, el]:u64
00056dd2: R22 := mem[#1058 + 8, el]:u64
00056dd9: R29 := mem[R31, el]:u64
00056dde: R30 := mem[R31 + 8, el]:u64
00056de2: R31 := R31 + 0x30
00056de7: call R30 with noreturn

0006ce7c: sub perror(perror_result)
0006d14a: perror_result :: out u32 = low:32[R0]

00063a5f:
00064779: R16 := 0x27000
00064780: R17 := mem[R16 + 0xC80, el]:u64
00064786: R16 := R16 + 0xC80
0006478b: call R17 with noreturn

0006ce7d: sub plist_add(plist_add_result)
0006d14b: plist_add_result :: out u32 = low:32[R0]

0004bd14:
0004bd1b: #391 := R31 - 0x30
0004bd21: mem := mem with [#391, el]:u64 <- R29
0004bd27: mem := mem with [#391 + 8, el]:u64 <- R30
0004bd2b: R31 := #391
0004bd31: R29 := R31
0004bd37: #392 := R31 + 0x10
0004bd3d: mem := mem with [#392, el]:u64 <- R19
0004bd43: mem := mem with [#392 + 8, el]:u64 <- R20
0004bd49: R20 := R2
0004bd4f: R19 := R0
0004bd54: R0 := 0x18
0004bd5c: mem := mem with [R31 + 0x20, el]:u64 <- R21
0004bd62: R21 := R1
0004bd67: R30 := 0x48B4
0004bd69: call @malloc with return %0004bd6b

0004bd6b:
0004bd71: mem := mem with [R0, el]:u64 <- R21
0004bd77: mem := mem with [R0 + 8, el]:u64 <- R20
0004bd7e: mem := mem with [R0 + 0x10, el]:u64 <- 0
0004bd84: when R19 = 0 goto %0004bd82
0006ce7e: goto %0004c8db

0004c8db:
0004c8df: R1 := R19
0006ce7f: goto %0004c8e3

0004c8e3:
0004c8e7: R2 := R1
0004c8ee: R1 := mem[R1 + 0x10, el]:u64
0004c8f4: when R1 <> 0 goto %0004c8e3
0006ce80: goto %0004c8f8

0004c8f8:
0004c8fe: mem := mem with [R2 + 0x10, el]:u64 <- R0
0004c904: R0 := R19
0006ce81: goto %0004bd82

0004bd82:
0004bd8b: #393 := R31 + 0x10
0004bd90: R19 := mem[#393, el]:u64
0004bd95: R20 := mem[#393 + 8, el]:u64
0004bd9c: R21 := mem[R31 + 0x20, el]:u64
0004bda3: R29 := mem[R31, el]:u64
0004bda8: R30 := mem[R31 + 8, el]:u64
0004bdac: R31 := R31 + 0x30
0004bdb1: call R30 with noreturn

0006ce82: sub plist_count(plist_count_result)
0006d14c: plist_count_result :: out u32 = low:32[R0]

0004bfaf:
0004bfb3: R1 := R0
0004bfb8: R0 := 0
0004bfbe: when R1 = 0 goto %0004bfbc
0006ce83: goto %0004c5b8

0004c5b8:
0006ce84: goto %0004c5ba

0004c5ba:
0004c5bf: R1 := mem[R1 + 0x10, el]:u64
0004c5c5: R0 := pad:64[31:0[R0] + 1]
0004c5cb: when R1 <> 0 goto %0004c5ba
0006ce85: goto %0004bfbc

0004bfbc:
0004bfc4: call R30 with noreturn

0006ce86: sub plist_del(plist_del_result)
0006d14d: plist_del_result :: out u32 = low:32[R0]

0004bdb5:
0004bdb9: #394 := R31 - 0x30
0004bdbf: mem := mem with [#394, el]:u64 <- R29
0004bdc5: mem := mem with [#394 + 8, el]:u64 <- R30
0004bdc9: R31 := #394
0004bdcf: R29 := R31
0004bdd5: #395 := R31 + 0x20
0004bddb: mem := mem with [#395, el]:u64 <- R21
0004bde1: mem := mem with [#395 + 8, el]:u64 <- R22
0004bde7: R22 := R0
0004bded: when R0 = 0 goto %0004bdeb
0006ce87: goto %0004c832

0004c832:
0004c835: R21 := 0
0004c83b: #453 := R31 + 0x10
0004c841: mem := mem with [#453, el]:u64 <- R19
0004c847: mem := mem with [#453 + 8, el]:u64 <- R20
0004c84d: R19 := R0
0004c852: goto %0004c850

0004c850:
0004c858: R2 := mem[R19, el]:u64
0004c85e: R20 := R19
0004c865: R19 := mem[R19 + 0x10, el]:u64
0004c86b: #454 := ~R1
0004c870: #455 := R2 + ~R1 + 1
0004c876: VF := extend:65[#455] <> extend:65[R2] + extend:65[#454] + 1
0004c87c: CF := pad:65[#455] <> pad:65[R2] + pad:65[#454] + 1
0004c880: ZF := #455 = 0
0004c884: NF := 63:63[#455]
0004c88a: when ZF <> 1 goto %0004c888
0006ce88: goto %0004c8aa

0004c8aa:
0004c8af: R0 := mem[R20 + 8, el]:u64
0004c8b5: when R0 = 0 goto %0004c8b3
0006ce89: goto %0004c8d4

0004c8d4:
0004c8d7: R30 := 0x493C
0004c8d9: call @free with return %0004c8b3

0004c8b3:
0004c8bc: R0 := R20
0004c8c1: R30 := 0x4944
0004c8c3: call @free with return %0004c8c5

0004c8c5:
0004c8c8: when R21 = 0 goto %0004be1b
0006ce8a: goto %0004c8cc

0004be1b:
0004be1f: R22 := R19
0004be25: R0 := R22
0004be2b: #397 := R31 + 0x10
0004be30: R19 := mem[#397, el]:u64
0004be35: R20 := mem[#397 + 8, el]:u64
0004be3b: #398 := R31 + 0x20
0004be40: R21 := mem[#398, el]:u64
0004be45: R22 := mem[#398 + 8, el]:u64
0004be4c: R29 := mem[R31, el]:u64
0004be51: R30 := mem[R31 + 8, el]:u64
0004be55: R31 := R31 + 0x30
0004be5a: call R30 with noreturn

0004c8cc:
0004c8d2: mem := mem with [R21 + 0x10, el]:u64 <- R19
0006ce8b: goto %0004c895

0004c888:
0004c891: R21 := R20
0004c897: when R19 = 0 goto %0004c895
0006ce8c: goto %0004c850

0004c895:
0004c89e: #456 := R31 + 0x10
0004c8a3: R19 := mem[#456, el]:u64
0004c8a8: R20 := mem[#456 + 8, el]:u64
0006ce8d: goto %0004bdeb

0004bdeb:
0004bdf4: R0 := R22
0004bdfa: #396 := R31 + 0x20
0004bdff: R21 := mem[#396, el]:u64
0004be04: R22 := mem[#396 + 8, el]:u64
0004be0b: R29 := mem[R31, el]:u64
0004be10: R30 := mem[R31 + 8, el]:u64
0004be14: R31 := R31 + 0x30
0004be19: call R30 with noreturn

0006ce8e: sub plist_dump(plist_dump_result)
0006d14e: plist_dump_result :: out u32 = low:32[R0]

0004beb0:
0004beb4: when R0 = 0 goto %0004beb2
0006ce8f: goto %0004c796

0004beb2:
0004beba: call R30 with noreturn

0004c796:
0004c79a: #450 := R31 - 0x20
0004c7a0: mem := mem with [#450, el]:u64 <- R29
0004c7a6: mem := mem with [#450 + 8, el]:u64 <- R30
0004c7aa: R31 := #450
0004c7b0: R29 := R31
0004c7b6: #451 := R31 + 0x10
0004c7bc: mem := mem with [#451, el]:u64 <- R19
0004c7c2: mem := mem with [#451 + 8, el]:u64 <- R20
0004c7c7: R20 := 0x11000
0004c7cd: R19 := R0
0004c7d3: R20 := R20 + 0x6B8
0006ce90: goto %0004c7d7

0004c7d7:
0004c7dc: R2 := mem[R19, el]:u64
0004c7e1: R3 := mem[R19 + 8, el]:u64
0004c7e7: R1 := R20
0004c7ec: R0 := 1
0004c7f1: R30 := 0x49D8
0004c7f3: call @__printf_chk with return %0004c7f5

0004c7f5:
0004c7fa: R19 := mem[R19 + 0x10, el]:u64
0004c800: when R19 <> 0 goto %0004c7d7
0006ce91: goto %0004c804

0004c804:
0004c808: #452 := R31 + 0x10
0004c80d: R19 := mem[#452, el]:u64
0004c812: R20 := mem[#452 + 8, el]:u64
0004c819: R29 := mem[R31, el]:u64
0004c81e: R30 := mem[R31 + 8, el]:u64
0004c822: R31 := R31 + 0x20
0004c827: call R30 with noreturn

0006ce92: sub plist_free(plist_free_result)
0006d14f: plist_free_result :: out u32 = low:32[R0]

0004bfc6:
0004bfca: when R0 = 0 goto %0004bfc8
0006ce93: goto %0004c4e9

0004bfc8:
0004bfd0: R0 := 0
0004bfd5: call R30 with noreturn

0004c4e9:
0004c4ed: #436 := R31 - 0x20
0004c4f3: mem := mem with [#436, el]:u64 <- R29
0004c4f9: mem := mem with [#436 + 8, el]:u64 <- R30
0004c4fd: R31 := #436
0004c503: R29 := R31
0004c509: #437 := R31 + 0x10
0004c50f: mem := mem with [#437, el]:u64 <- R19
0004c515: mem := mem with [#437 + 8, el]:u64 <- R20
0004c51b: R19 := R0
0004c521: R0 := R19
0004c527: #438 := R19 + 8
0004c52c: R1 := mem[#438, el]:u64
0004c531: R20 := mem[#438 + 8, el]:u64
0004c537: when R1 = 0 goto %0004c535
0006ce94: goto %0004c568

0004c568:
0004c571: R0 := R1
0004c576: R30 := 0x4B68
0004c578: call @free with return %0004c57a

0004c57a:
0004c57e: R0 := R19
0004c583: R30 := 0x4B70
0004c585: call @free with return %0004c587

0004c587:
0004c58b: when R20 = 0 goto %0004c589
0006ce95: goto %0004c544

0004c544:
0004c54d: R19 := R20
0004c553: R0 := R19
0004c559: #439 := R19 + 8
0004c55e: R1 := mem[#439, el]:u64
0004c563: R20 := mem[#439 + 8, el]:u64
0004c56a: when R1 <> 0 goto %0004c568
0006ce96: goto %0004c535

0004c535:
0004c53d: R30 := 0x4B88
0004c53f: call @free with return %0004c541

0004c541:
0004c546: when R20 <> 0 goto %0004c544
0006ce97: goto %0004c589

0004c589:
0004c591: R0 := 0
0004c597: #440 := R31 + 0x10
0004c59c: R19 := mem[#440, el]:u64
0004c5a1: R20 := mem[#440 + 8, el]:u64
0004c5a8: R29 := mem[R31, el]:u64
0004c5ad: R30 := mem[R31 + 8, el]:u64
0004c5b1: R31 := R31 + 0x20
0004c5b6: call R30 with noreturn

0006ce98: sub plist_get(plist_get_result)
0006d150: plist_get_result :: out u32 = low:32[R0]

0004bebc:
0004bec0: when R0 = 0 goto %0004bebe
0006ce99: goto %0004c744

0004bebe:
0004bec6: R0 := 0
0004becb: call R30 with noreturn

0004c744:
0004c749: R2 :=

0004c74e: goto %0004c74c

0004c74c:
0004c754: R1 := mem[R0, el]:u64
0004c75a: #448 := ~R2
0004c75f: #449 := R1 + ~R2 + 1
0004c765: VF := extend:65[#449] <> extend:65[R1] + extend:65[#448] + 1
0004c76b: CF := pad:65[#449] <> pad:65[R1] + pad:65[#448] + 1
0004c76f: ZF := #449 = 0
0004c773: NF := 63:63[#449]
0004c779: when ZF <> 1 goto %0004c777
0006ce9a: goto %0004c78f

0004c78f:
0004c794: R0 := mem[R0 + 8, el]:u64
0006ce9b: goto %0004c785

0004c777:
0004c781: R0 := mem[R0 + 0x10, el]:u64
0004c787: when R0 = 0 goto %0004c785
0006ce9c: goto %0004c74c

0004c785:
0004c78d: call R30 with noreturn

0006ce9d: sub plist_in(plist_in_result)
0006d151: plist_in_result :: out u32 = low:32[R0]

0004be5c:
0004be61: when R0 <> 0 goto %0004be5f
0006ce9e: goto %0004c82e

0004be5f:
0004be69: R2 := mem[R0, el]:u64
0004be6f: #399 := ~R1
0004be74: #400 := R2 + ~R1 + 1
0004be7a: VF := extend:65[#400] <> extend:65[R2] + extend:65[#399] + 1
0004be80: CF := pad:65[#400] <> pad:65[R2] + pad:65[#399] + 1
0004be84: ZF := #400 = 0
0004be88: NF := 63:63[#400]
0004be8e: when ZF <> 1 goto %0004be8c
0006ce9f: goto %0004c829

0004c829:
0004c82c: R0 := 1
0006cea0: goto %0004be9a

0004be8c:
0004be96: R0 := mem[R0 + 0x10, el]:u64
0004be9c: when R0 = 0 goto %0004be9a
0006cea1: goto %0004be5f

0004be9a:
0004bea2: call R30 with noreturn

0004c82e:
0004c830: goto %0004bea4

0004bea4:
0004bea7: R0 := 0
0004beac: call R30 with noreturn

0006cea2: sub plist_pop(plist_pop_result)
0006d152: plist_pop_result :: out u32 = low:32[R0]

0004becd:
0004bed1: #401 := R31 - 0x50
0004bed7: mem := mem with [#401, el]:u64 <- R29
0004bedd: mem := mem with [#401 + 8, el]:u64 <- R30
0004bee1: R31 := #401
0004bee7: R29 := R31
0004beed: #402 := R31 + 0x20
0004bef3: mem := mem with [#402, el]:u64 <- R21
0004bef9: mem := mem with [#402 + 8, el]:u64 <- R22
0004beff: when R0 = 0 goto %0004befd
0006cea3: goto %0004c5cf

0004c5cf:
0004c5d3: #441 := R31 + 0x10
0004c5d9: mem := mem with [#441, el]:u64 <- R19
0004c5df: mem := mem with [#441 + 8, el]:u64 <- R20
0004c5e6: R19 := mem[R0, el]:u64
0004c5ec: #442 := R31 + 0x30
0004c5f2: mem := mem with [#442, el]:u64 <- R23
0004c5f8: mem := mem with [#442 + 8, el]:u64 <- R24
0004c5fe: R24 := R0
0004c606: mem := mem with [R31 + 0x40, el]:u64 <- R25
0004c60c: R25 := R1
0004c611: when R19 = 0 goto %0004bf84
0006cea4: goto %0004c615

0004bf84:
0004bf88: #407 := R31 + 0x10
0004bf8d: R19 := mem[#407, el]:u64
0004bf92: R20 := mem[#407 + 8, el]:u64
0004bf98: #408 := R31 + 0x30
0004bf9d: R23 := mem[#408, el]:u64
0004bfa2: R24 := mem[#408 + 8, el]:u64
0004bfa9: R25 := mem[R31 + 0x40, el]:u64
0004bfad: goto %0004befd

0004c615:
0006cea5: goto %0004c617

0004c617:
0004c61c: R20 := mem[R19, el]:u64
0004c621: R23 := mem[R19 + 8, el]:u64
0004c628: R21 := mem[R19 + 0x10, el]:u64
0004c62e: R0 := pad:64[31:0[R20]]
0004c634: R22 := pad:64[31:0[R20]]
0004c639: R30 := 0x4A64
0004c63b: call @so_closed with return %0004c63d

0004c63d:
0004c642: when 31:0[R0] <> 0 goto %0004c640
0006cea6: goto %0004c6ce

0004c640:
0004c649: R0 := pad:64[31:0[R20]]
0004c64e: R30 := 0x4AA0
0004c650: call @close with return %0004c652

0004c652:
0004c657: R2 := mem[R19 + 8, el]:u64
0004c65d: R0 := R19
0004c663: when R2 = 0 goto %0004c661
0006cea7: goto %0004c6ad

0004c661:
0004c669: R30 := 0x4ACC
0004c66b: call @free with return %0004c66d

0004c66d:
0004c672: when R21 <> 0 goto %0004c670
0006cea8: goto %0004c67f

0004c6ad:
0004c6b1: R0 := R2
0004c6b6: R30 := 0x4AB4
0004c6b8: call @free with return %0004c6ba

0004c6ba:
0004c6be: R0 := R19
0004c6c3: R30 := 0x4ABC
0004c6c5: call @free with return %0004c6c7

0004c6c7:
0004c6ca: when R21 = 0 goto %0004c67f
0006cea9: goto %0004c670

0004c67f:
0004c683: #443 := R31 + 0x10
0004c688: R19 := mem[#443, el]:u64
0004c68d: R20 := mem[#443 + 8, el]:u64
0004c694: R25 := mem[R31 + 0x40, el]:u64
0004c69b: mem := mem with [R24, el]:u64 <- 0
0004c6a1: #444 := R31 + 0x30
0004c6a6: R23 := mem[#444, el]:u64
0004c6ab: R24 := mem[#444 + 8, el]:u64
0006ceaa: goto %0004befd

0004befd:
0004bf05: R22 := 0
0004bf0b: R0 := pad:64[31:0[R22]]
0004bf11: #403 := R31 + 0x20
0004bf16: R21 := mem[#403, el]:u64
0004bf1b: R22 := mem[#403 + 8, el]:u64
0004bf22: R29 := mem[R31, el]:u64
0004bf27: R30 := mem[R31 + 8, el]:u64
0004bf2b: R31 := R31 + 0x50
0004bf30: call R30 with noreturn

0004c670:
0004c679: R19 := R21
0004c67d: goto %0004c617

0004c6ce:
0004c6d2: R0 := R19
0004c6d7: R30 := 0x4A70
0004c6d9: call @free with return %0004c6db

0004c6db:
0004c6e1: mem := mem with [R24, el]:u64 <- R21
0004c6e6: when R25 = 0 goto %0004bf32
0006ceab: goto %0004c6ea

0004bf32:
0004bf36: R0 := pad:64[31:0[R22]]
0004bf3c: #404 := R31 + 0x10
0004bf41: R19 := mem[#404, el]:u64
0004bf46: R20 := mem[#404 + 8, el]:u64
0004bf4c: #405 := R31 + 0x20
0004bf51: R21 := mem[#405, el]:u64
0004bf56: R22 := mem[#405 + 8, el]:u64
0004bf5c: #406 := R31 + 0x30
0004bf61: R23 := mem[#406, el]:u64
0004bf66: R24 := mem[#406 + 8, el]:u64
0004bf6d: R25 := mem[R31 + 0x40, el]:u64
0004bf74: R29 := mem[R31, el]:u64
0004bf79: R30 := mem[R31 + 8, el]:u64
0004bf7d: R31 := R31 + 0x50
0004bf82: call R30 with noreturn

0004c6ea:
0004c6ee: #445 := R31 + 0x10
0004c6f3: R19 := mem[#445, el]:u64
0004c6f8: R20 := mem[#445 + 8, el]:u64
0004c700: mem := mem with [R25, el]:u64 <- R23
0004c706: R0 := pad:64[31:0[R22]]
0004c70c: #446 := R31 + 0x20
0004c711: R21 := mem[#446, el]:u64
0004c716: R22 := mem[#446 + 8, el]:u64
0004c71c: #447 := R31 + 0x30
0004c721: R23 := mem[#447, el]:u64
0004c726: R24 := mem[#447 + 8, el]:u64
0004c72d: R25 := mem[R31 + 0x40, el]:u64
0004c734: R29 := mem[R31, el]:u64
0004c739: R30 := mem[R31 + 8, el]:u64
0004c73d: R31 := R31 + 0x50
0004c742: call R30 with noreturn

0006ceac: sub prepare_http_connect(prepare_http_connect_result)
0006d153: prepare_http_connect_result :: out u32 = low:32[R0]

00055d81:
00055d85: #986 := R31 - 0x50
00055d8b: mem := mem with [#986, el]:u64 <- R29
00055d91: mem := mem with [#986 + 8, el]:u64 <- R30
00055d95: R31 := #986
00055d9b: #987 := 31:0[R0] + 0
00055da0: VF := extend:33[#987] <> extend:33[31:0[R0]] + 0
00055da5: CF := pad:33[#987] <> pad:33[31:0[R0]] - 0x100000000
00055da9: ZF := #987 = 0
00055dad: NF := 31:31[#987]
00055db3: #988 := R2 + 0
00055dd9: goto %00055dd3

00055dd3:
00055dd5: when ZF <> 1 goto %00055db8
00055dd6: goto %00055dc8

00055dc8:
00055dc9: VF := 0
00055dcc: CF := 0
00055dcf: ZF := 1
00055dd2: NF := 0
00055dd8: goto %00055dd4

00055db8:
00055db9: VF := extend:65[#988] <> extend:65[R2] + 0
00055dbe: CF := pad:65[#988] <> pad:65[R2] - 0x10000000000000000
00055dc2: ZF := #988 = 0
00055dc6: NF := 63:63[#988]
00055dd7: goto %00055dd4

00055dd4:
00055ddf: R29 := R31
00055de5: #989 := R31 + 0x10
00055deb: mem := mem with [#989, el]:u64 <- R19
00055df1: mem := mem with [#989 + 8, el]:u64 <- R20
00055df6: R19 := 0
00055dfe: mem := mem with [R31 + 0x4C, el]:u32 <- 31:0[R0]
00055e04: when ZF goto %00055e02
0006cead: goto %0005cb89

0005cb89:
0005cb8d: #1354 := R31 + 0x20
0005cb93: mem := mem with [#1354, el]:u64 <- R21
0005cb99: mem := mem with [#1354 + 8, el]:u64 <- R22
0005cb9e: R19 := 0
0005cba4: R21 := R2
0005cbab: R0 := pad:64[mem[R2]]
0005cbb1: when 31:0[R0] <> 0 goto %00055e32
0006ceae: goto %0005cbb5

00055e32:
00055e36: #991 := R31 + 0x30
00055e3c: mem := mem with [#991, el]:u64 <- R23
00055e42: mem := mem with [#991 + 8, el]:u64 <- R24
00055e48: R23 := R1
00055e4d: R30 := 0xDFF4
00055e4f: call @new_rr_data with return %00055e51

00055e51:
00055e55: R20 := R0
00055e5a: R19 := 1
00055e5f: R30 := 0xE000
00055e61: call @new_rr_data with return %00055e63

00055e63:
00055e67: R22 := R0
00055e6c: R0 := 0x12000
00055e72: R0 := R0 + 0xF00
00055e7a: mem := mem with [R20, el]:u32 <- 31:0[R19]
00055e7f: R30 := 0xE014
00055e81: call @strdup with return %00055e83

00055e83:
00055e89: mem := mem with [R20 + 0x28, el]:u64 <- R0
00055e8f: R0 := R21
00055e94: R30 := 0xE020
00055e96: call @strdup with return %00055e98

00055e98:
00055e9e: mem := mem with [R20 + 0x30, el]:u64 <- R0
00055ea3: R0 := 0x12000
00055ea9: R0 := R0 + 0xFF8
00055eae: R30 := 0xE030
00055eb0: call @strdup with return %00055eb2

00055eb2:
00055eb6: R1 := R0
00055ebd: R0 := mem[R20 + 8, el]:u64
00055ec5: mem := mem with [R20 + 0x48, el]:u64 <- R1
00055ecb: R3 := pad:64[31:0[R19]]
00055ed0: R2 := 0x12000
00055ed5: R1 := 0x12000
00055edb: R2 := R2 + 0xE30
00055ee1: R1 := R1 + 0xE40
00055ee6: R30 := 0xE054
00055ee8: call @hlist_mod with return %00055eea

00055eea:
00055eed: R1 := 0x27000
00055ef5: mem := mem with [R20 + 8, el]:u64 <- R0
00055efc: R1 := mem[R1 + 0xF50, el]:u64
00055f03: R19 := mem[R1, el]:u64
00055f09: when R19 = 0 goto %00055f07
0006ceaf: goto %0005cb5a

0005cb5a:
0005cb5f: R1 := mem[R19, el]:u64
0005cb64: R2 := mem[R19 + 8, el]:u64
0005cb69: R3 := 1
0005cb6e: R30 := 0xE074
0005cb70: call @hlist_mod with return %0005cb72

0005cb72:
0005cb77: R19 := mem[R19 + 0x18, el]:u64
0005cb7f: mem := mem with [R20 + 8, el]:u64 <- R0
0005cb85: when R19 <> 0 goto %0005cb5a
0006ceb0: goto %00055f07

00055f07:
00055f0f: R24 := 0x27000
00055f16: R0 := mem[R24 + 0xF78, el]:u64
00055f1d: R0 := pad:64[mem[R0, el]:u32]
00055f24: when 31:0[R0] <> 0 goto %00055f22
0006ceb1: goto %00055f3f

00055f22:
00055f2a: R1 := 0x13000
00055f2f: R0 := 1
00055f35: R1 := R1 + 8
00055f3a: R30 := 0xE1B0
00055f3c: call @__printf_chk with return %00055f3e

00055f3e:
00055f41: goto %00055f3f

00055f3f:
00055f46: R3 := R23
00055f4c: R2 := R22
00055f52: R1 := R20
00055f58: R0 := R31 + 0x4C
00055f5d: R30 := 0xE0A4
00055f5f: call @proxy_authenticate with return %00055f61

00055f61:
00055f65: R19 := pad:64[31:0[R0]]
00055f6b: when 31:0[R0] = 0 goto %00055f69
0006ceb2: goto %0005cb15

00055f69:
00055f71: R2 := 0x13000
00055f76: R1 := 1
00055f7c: R2 := R2 + 0xF0
00055f81: R0 := 3
00055f86: R30 := 0xE19C
00055f88: call @__syslog_chk with return %00055f8a

00055f8a:
00055f8d: goto %00055f8b

0005cb15:
0005cb1a: R0 := pad:64[mem[R22 + 0x10, el]:u32]
0005cb20: #1352 := 31:0[R0] - 0x197
0005cb25: VF := extend:33[#1352] <> extend:33[31:0[R0]] - 0x197
0005cb2a: CF := pad:33[#1352] <> pad:33[31:0[R0]] + 0xFFFFFE69
0005cb2e: ZF := #1352 = 0
0005cb32: NF := 31:31[#1352]
0005cb37: when ZF goto %00055ff3
0006ceb3: goto %0005cb3b

00055ff3:
00055ff8: R0 := mem[R24 + 0xF78, el]:u64
00055fff: R0 := pad:64[mem[R0, el]:u32]
00056006: when 31:0[R0] <> 0 goto %00056004
0006ceb4: goto %0005602f

00056004:
0005600c: R1 := 0x13000
00056011: R0 := 1
00056017: R1 := R1 + 0x28
0005601c: R30 := 0xE1EC
0005601e: call @__printf_chk with return %00056020

00056020:
00056025: R0 := mem[R20 + 8, el]:u64
0005602a: R30 := 0xE1F4
0005602c: call @hlist_dump with return %0005602e

0005602e:
00056031: goto %0005602f

0005602f:
00056037: R0 := pad:64[mem[R31 + 0x4C, el]:u32]
0005603d: R1 := R20
00056042: R30 := 0xE11C
00056044: call @headers_send with return %00056046

00056046:
0005604a: R19 := pad:64[31:0[R0]]
00056050: when 31:0[R0] = 0 goto %0005604e
0006ceb5: goto %0005c966

0005604e:
00056056: R1 := 0x13000
0005605b: R0 := 1
00056061: R1 := R1 + 0x40
00056066: R30 := 0xE258
00056068: call @__printf_chk with return %0005606a

0005606a:
0005606c: goto %00055f8b

0005c966:
0005c96b: R0 := mem[R24 + 0xF78, el]:u64
0005c972: R0 := pad:64[mem[R0, el]:u32]
0005c979: when 31:0[R0] <> 0 goto %0005c977
0006ceb6: goto %0005c994

0005c977:
0005c97f: R1 := 0x13000
0005c984: R0 := 1
0005c98a: R1 := R1 + 0x60
0005c98f: R30 := 0xE244
0005c991: call @__printf_chk with return %0005c993

0005c993:
0005c996: goto %0005c994

0005c994:
0005c99b: R0 := R22
0005c9a0: R30 := 0xE138
0005c9a2: call @reset_rr_data with return %0005c9a4

0005c9a4:
0005c9a9: R0 := pad:64[mem[R31 + 0x4C, el]:u32]
0005c9af: R1 := R22
0005c9b4: R30 := 0xE144
0005c9b6: call @headers_recv with return %0005c9b8

0005c9b8:
0005c9bc: when 31:0[R0] = 0 goto %0005c9ba
0006ceb7: goto %0005c9f4

0005c9ba:
0005c9c4: R24 := mem[R24 + 0xF78, el]:u64
0005c9cb: R19 := pad:64[mem[R24, el]:u32]
0005c9d0: when 31:0[R19] = 0 goto %00055f8b
0006ceb8: goto %0005c9d4

0005c9d4:
0005c9d7: R1 := 0x13000
0005c9dc: R19 := 0
0005c9e2: R1 := R1 + 0x80
0005c9e7: R0 := 1
0005c9ec: R30 := 0xE230
0005c9ee: call @__printf_chk with return %0005c9f0

0005c9f0:
0005c9f2: goto %00055f8b

0005c9f4:
0005c9f9: R0 := mem[R24 + 0xF78, el]:u64
0005ca00: R0 := pad:64[mem[R0, el]:u32]
0005ca07: when 31:0[R0] <> 0 goto %0005ca05
0006ceb9: goto %0005caef

0005ca05:
0005ca0f: R0 := mem[R22 + 8, el]:u64
0005ca14: R30 := 0xE1BC
0005ca16: call @hlist_dump with return %0005ca18

0005ca18:
0005ca1d: R0 := pad:64[mem[R22 + 0x10, el]:u32]
0005ca23: #1349 := 31:0[R0] - 0xC8
0005ca28: VF := extend:33[#1349] <> extend:33[31:0[R0]] - 0xC8
0005ca2d: CF := pad:33[#1349] <> pad:33[31:0[R0]] + 0xFFFFFF38
0005ca31: ZF := #1349 = 0
0005ca35: NF := 31:31[#1349]
0005ca3b: when ZF <> 1 goto %0005ca39
0006ceba: goto %0005caaf

0005caef:
0005caf4: R0 := pad:64[mem[R22 + 0x10, el]:u32]
0005cafa: #1351 := 31:0[R0] - 0xC8
0005caff: VF := extend:33[#1351] <> extend:33[31:0[R0]] - 0xC8
0005cb04: CF := pad:33[#1351] <> pad:33[31:0[R0]] + 0xFFFFFF38
0005cb08: ZF := #1351 = 0
0005cb0c: NF := 31:31[#1351]
0005cb11: when ZF goto %0005cae6
0006cebb: goto %0005ca39

0005ca39:
0005ca42: #1350 := 31:0[R0] - 0x197
0005ca47: VF := extend:33[#1350] <> extend:33[31:0[R0]] - 0x197
0005ca4c: CF := pad:33[#1350] <> pad:33[31:0[R0]] + 0xFFFFFE69
0005ca50: ZF := #1350 = 0
0005ca54: NF := 31:31[#1350]
0005ca5a: when ZF <> 1 goto %0005ca58
0006cebc: goto %0005ca84

0005ca84:
0005ca88: R3 := R21
0005ca8d: R2 := 0x13000
0005ca92: R1 := 1
0005ca98: R2 := R2 + 0xA0
0005ca9d: R0 := 3
0005caa2: R19 := 0
0005caa7: R30 := 0xE184
0005caa9: call @__syslog_chk with return %0005caab

0005caab:
0005caad: goto %00055f8b

0005cb3b:
0005cb3f: #1353 := 31:0[R0] - 0xC8
0005cb44: VF := extend:33[#1353] <> extend:33[31:0[R0]] - 0xC8
0005cb49: CF := pad:33[#1353] <> pad:33[31:0[R0]] + 0xFFFFFF38
0005cb4d: ZF := #1353 = 0
0005cb51: NF := 31:31[#1353]
0005cb56: when ZF goto %0005caaf
0006cebd: goto %0005ca58

0005caaf:
0005cab4: R24 := mem[R24 + 0xF78, el]:u64
0005cabb: R0 := pad:64[mem[R24, el]:u32]
0005cac2: when 31:0[R0] <> 0 goto %0005cac0
0006cebe: goto %0005cae6

0005cac0:
0005cac8: R1 := 0x12000
0005cacd: R0 := 1
0005cad3: R1 := R1 + 0xF08
0005cad9: R19 := pad:64[31:0[R0]]
0005cade: R30 := 0xE20C
0005cae0: call @__printf_chk with return %0005cae2

0005cae2:
0005cae4: goto %00055f8b

0005cae6:
0005cae9: R19 := 1
0005caed: goto %00055f8b

0005ca58:
0005ca60: R2 := 0x13000
0005ca66: R3 := R21
0005ca6c: R2 := R2 + 0xC8
0005ca71: R1 := 1
0005ca76: R0 := 3
0005ca7b: R19 := 0
0005ca80: R30 := 0xE0DC
0005ca82: call @__syslog_chk with return %00055f8b

00055f8b:
00055f92: R0 := R20
00055f97: R30 := 0xE0E4
00055f99: call @free_rr_data with return %00055f9b

00055f9b:
00055f9f: R0 := R22
00055fa4: R30 := 0xE0EC
00055fa6: call @free_rr_data with return %00055fa8

00055fa8:
00055fac: R0 := pad:64[31:0[R19]]
00055fb2: #992 := R31 + 0x10
00055fb7: R19 := mem[#992, el]:u64
00055fbc: R20 := mem[#992 + 8, el]:u64
00055fc2: #993 := R31 + 0x20
00055fc7: R21 := mem[#993, el]:u64
00055fcc: R22 := mem[#993 + 8, el]:u64
00055fd2: #994 := R31 + 0x30
00055fd7: R23 := mem[#994, el]:u64
00055fdc: R24 := mem[#994 + 8, el]:u64
00055fe3: R29 := mem[R31, el]:u64
00055fe8: R30 := mem[R31 + 8, el]:u64
00055fec: R31 := R31 + 0x50
00055ff1: call R30 with noreturn

0005cbb5:
0005cbb9: #1355 := R31 + 0x20
0005cbbe: R21 := mem[#1355, el]:u64
0005cbc3: R22 := mem[#1355 + 8, el]:u64
0006cebf: goto %00055e02

00055e02:
00055e0b: R0 := pad:64[31:0[R19]]
00055e11: #990 := R31 + 0x10
00055e16: R19 := mem[#990, el]:u64
00055e1b: R20 := mem[#990 + 8, el]:u64
00055e22: R29 := mem[R31, el]:u64
00055e27: R30 := mem[R31 + 8, el]:u64
00055e2b: R31 := R31 + 0x50
00055e30: call R30 with noreturn

0006cec0: sub printmem(printmem_result)
0006d154: printmem_result :: out u32 = low:32[R0]

00046497:
0004649b: #47 := R31 - 0x30
000464a1: mem := mem with [#47, el]:u64 <- R29
000464a7: mem := mem with [#47 + 8, el]:u64 <- R30
000464ab: R31 := #47
000464b1: R29 := R31
000464b7: #48 := R31 + 0x10
000464bd: mem := mem with [#48, el]:u64 <- R19
000464c3: mem := mem with [#48 + 8, el]:u64 <- R20
000464ca: R20 := 63:1[R1 >> 0x3F | R1 << 1].0
000464d0: R19 := R0
000464d6: #49 := R31 + 0x20
000464dc: mem := mem with [#49, el]:u64 <- R21
000464e2: mem := mem with [#49 + 8, el]:u64 <- R22
000464e8: R21 := R1
000464ee: R22 := pad:64[31:0[R2]]
000464f3: R1 := 1
000464fa: R0 := R20 + R1
000464ff: R30 := 0x5B14
00046501: call @calloc with return %00046503

00046503:
00046507: when R21 = 0 goto %00046505
0006cec1: goto %0005faba

0005faba:
0005fabd: R6 := 7
0005fac4: R6 := pad:64[31:0[R6] + ~31:0[R22] + 1]
0005fac9: R4 := 0x28000
0005facf: R3 := R19
0005fad6: R7 := R20 + R0
0005fadc: R6 := pad:64[0.7:0[R6]]
0005fae2: R2 := R0
0005fae8: R4 := R4 + 0x10
0006cec2: goto %0005faea

0005faea:
0005faef: R1 := pad:64[mem[R3]]
0005faf3: R3 := R3 + 1
0005faf9: R2 := R2 + 2
0005fb00: R1 := pad:64[31:0[R1] ^ 31:0[R6]]
0005fb06: R5 := pad:64[0.3:0[R1]]
0005fb0d: R1 := pad:64[0.27:0[31:0[R1] >> 4 | 31:0[R1] << 0x1C]]
0005fb15: R5 := pad:64[mem[R4 + extend:64[31:0[R5]]]]
0005fb1d: R1 := pad:64[mem[R4 + extend:64[31:0[R1]]]]
0005fb25: mem := mem with [R2 - 2] <- 7:0[R1]
0005fb2d: mem := mem with [R2 - 1] <- 7:0[R5]
0005fb33: #1462 := ~R2
0005fb38: #1463 := R7 + ~R2 + 1
0005fb3e: VF := extend:65[#1463] <> extend:65[R7] + extend:65[#1462] + 1
0005fb44: CF := pad:65[#1463] <> pad:65[R7] + pad:65[#1462] + 1
0005fb48: ZF := #1463 = 0
0005fb4c: NF := 63:63[#1463]
0005fb51: when ZF <> 1 goto %0005faea
0006cec3: goto %00046505

00046505:
0004650e: #50 := R31 + 0x10
00046513: R19 := mem[#50, el]:u64
00046518: R20 := mem[#50 + 8, el]:u64
0004651e: #51 := R31 + 0x20
00046523: R21 := mem[#51, el]:u64
00046528: R22 := mem[#51 + 8, el]:u64
0004652f: R29 := mem[R31, el]:u64
00046534: R30 := mem[R31 + 8, el]:u64
00046538: R31 := R31 + 0x30
0004653d: call R30 with noreturn

0006cec4: sub proxy_authenticate(proxy_authenticate_result)
0006d155: proxy_authenticate_result :: out u32 = low:32[R0]

0005559c:
000555a0: #966 := R31 - 0x80
000555a6: mem := mem with [#966, el]:u64 <- R29
000555ac: mem := mem with [#966 + 8, el]:u64 <- R30
000555b0: R31 := #966
000555b6: R29 := R31
000555bc: #967 := R31 + 0x30
000555c2: mem := mem with [#967, el]:u64 <- R23
000555c8: mem := mem with [#967 + 8, el]:u64 <- R24
000555cd: R24 := 0x27000
000555d3: R23 := R0
000555da: R4 := mem[R24 + 0xFB8, el]:u64
000555e0: #968 := R31 + 0x10
000555e6: mem := mem with [#968, el]:u64 <- R19
000555ec: mem := mem with [#968 + 8, el]:u64 <- R20
000555f2: R20 := R1
000555f9: R0 := mem[R4, el]:u64
00055601: mem := mem with [R31 + 0x78, el]:u64 <- R0
00055606: R0 := 0
0005560c: #969 := R31 + 0x20
00055612: mem := mem with [#969, el]:u64 <- R21
00055618: mem := mem with [#969 + 8, el]:u64 <- R22
0005561d: R0 := 0x1000
00055623: R22 := R2
00055629: #970 := R31 + 0x40
0005562f: mem := mem with [#970, el]:u64 <- R25
00055635: mem := mem with [#970 + 8, el]:u64 <- R26
0005563b: R26 := R3
00055641: #971 := R31 + 0x50
00055647: mem := mem with [#971, el]:u64 <- R27
0005564d: mem := mem with [#971 + 8, el]:u64 <- R28
00055652: R30 := 0xD040
00055654: call @new with return %00055656

00055656:
00055659: R1 := 0x12000
0005565f: R2 := R1 + 0xB50
00055665: R21 := R0
0005566b: R27 := R31 + 0x70
00055671: R1 := R26
00055677: R0 := R27
0005567e: R3 := pad:64[mem[R2, el]:u32]
00055685: R2 := pad:64[mem[R2 + 4, el]:u16]
0005568d: mem := mem with [R21, el]:u32 <- 31:0[R3]
00055695: mem := mem with [R21 + 4, el]:u16 <- 15:0[R2]
0005569a: R30 := 0xD06C
0005569c: call @ntlm_request with return %0005569e

0005569e:
000556a3: when 31:0[R0] <> 0 goto %000556a1
0006cec5: goto %000556d5

000556a1:
000556ab: R1 := mem[R31 + 0x70, el]:u64
000556b2: R2 :=
          63:32[31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0].31:31[R0]].31:0[R0]
000556b7: R3 := 0xFFB
000556bd: R0 := R21 + 5
000556c2: R30 := 0xD3C4
000556c4: call @to_base64 with return %000556c6

000556c6:
000556cb: R0 := mem[R31 + 0x70, el]:u64
000556d0: R30 := 0xD3CC
000556d2: call @free with return %000556d4

000556d4:
000556d7: goto %000556d5

000556d5:
000556dc: R0 := R20
000556e1: R30 := 0xD078
000556e3: call @dup_rr_data with return %000556e5

000556e5:
000556e9: R19 := R0
000556ee: R0 := 0x12000
000556f4: R1 := R0 + 0xB58
000556fa: R2 := R21
000556ff: R3 := 1
00055706: R0 := mem[R19 + 8, el]:u64
0005570b: R30 := 0xD094
0005570d: call @hlist_mod with return %0005570f

0005570f:
00055715: mem := mem with [R19 + 8, el]:u64 <- R0
0005571b: when R20 = 0 goto %00055719
0006cec6: goto %0005df20

00055719:
00055722: R1 := R22
00055727: R0 := 0
0005572c: R30 := 0xD414
0005572e: call @http_has_body with return %00055730

00055730:
00055735: when R0 <> 0 goto %00055733
0006cec7: goto %0005df10

00055733:
0005573b: R25 := 0x27000
00055742: R0 := mem[R25 + 0xF78, el]:u64
00055749: R0 := pad:64[mem[R0, el]:u32]
00055750: when 31:0[R0] <> 0 goto %0005574e
0006cec8: goto %0005576b

0005574e:
00055756: R1 := 0x12000
0005575b: R0 := 1
00055761: R1 := R1 + 0xCA8
00055766: R30 := 0xD4E8
00055768: call @__printf_chk with return %0005576a

0005576a:
0005576d: goto %0005576b

0005576b:
00055771: R0 := 1
00055779: mem := mem with [R31 + 0x68, el]:u32 <- 31:0[R0]
0005577e: goto %0005577c

0005df10:
0005df13: R25 := 0x27000
0005df1a: mem := mem with [R31 + 0x68, el]:u32 <- 0
0005df1e: goto %0005577c

0005df20:
0005df25: R0 := pad:64[mem[R20, el]:u32]
0005df2a: when 31:0[R0] = 0 goto %0005da43
0006cec9: goto %0005df2e

0005df2e:
0005df33: R1 := mem[R20 + 0x28, el]:u64
0005df38: R0 := 0x12000
0005df3e: R0 := R0 + 0x908
0005df43: R30 := 0xD0B4
0005df45: call @strcasecmp with return %0005df47

0005df47:
0005df4b: when 31:0[R0] <> 0 goto %0005da43
0006ceca: goto %0005df4f

0005da43:
0005da47: R1 := R22
0005da4d: R0 := R20
0005da52: R30 := 0xD0F8
0005da54: call @http_has_body with return %0005da56

0005da56:
0005da5a: when R0 <> 0 goto %0005d9a1
0006cecb: goto %0005da5e

0005d9a1:
0005d9a4: R25 := 0x27000
0005d9ab: R0 := mem[R25 + 0xF78, el]:u64
0005d9b2: R0 := pad:64[mem[R0, el]:u32]
0005d9b9: when 31:0[R0] <> 0 goto %0005d9b7
0006cecc: goto %0005d9d4

0005da5e:
0005da63: R0 := pad:64[mem[R20, el]:u32]
0005da68: R25 := 0x27000
0005da6f: mem := mem with [R31 + 0x68, el]:u32 <- 0
0005da75: when 31:0[R0] <> 0 goto %0005d9f2
0006cecd: goto %0005da79

0005da79:
0006cece: goto %0005577c

0005df4f:
0005df52: R25 := 0x27000
0005df59: R0 := mem[R25 + 0xF78, el]:u64
0005df60: R0 := pad:64[mem[R0, el]:u32]
0005df66: when 31:0[R0] <> 0 goto %0005d9b7
0006cecf: goto %0005df6a

0005d9b7:
0005d9bf: R1 := 0x12000
0005d9c4: R0 := 1
0005d9ca: R1 := R1 + 0xCA8
0005d9cf: R30 := 0xD4A0
0005d9d1: call @__printf_chk with return %0005d9d3

0005d9d3:
0005d9d6: goto %0005d9d4

0005d9d4:
0005d9da: R0 := 1
0005d9e2: mem := mem with [R31 + 0x68, el]:u32 <- 31:0[R0]
0005d9e9: R0 := pad:64[mem[R20, el]:u32]
0005d9ee: when 31:0[R0] = 0 goto %0005577c
0006ced0: goto %0005d9f2

0005d9f2:
0005d9f7: R1 := mem[R20 + 0x28, el]:u64
0005d9fc: R0 := 0x12000
0005da02: R0 := R0 + 0x908
0005da07: R30 := 0xD2A8
0005da09: call @strcasecmp with return %0005da0b

0005da0b:
0005da0f: when 31:0[R0] <> 0 goto %0005577c
0006ced1: goto %0005da13

0005da13:
0005da16: goto %0005da14

0005df6a:
0005df6d: R0 := 1
0005df75: mem := mem with [R31 + 0x68, el]:u32 <- 31:0[R0]
0006ced2: goto %0005da14

0005da14:
0005da1c: R0 := mem[R19 + 0x28, el]:u64
0005da21: R30 := 0xD0D8
0005da23: call @free with return %0005da25

0005da25:
0005da28: R0 := 0x12000
0005da2e: R0 := R0 + 0x910
0005da33: R30 := 0xD0E4
0005da35: call @strdup with return %0005da37

0005da37:
0005da3d: mem := mem with [R19 + 0x28, el]:u64 <- R0
0005da41: goto %0005577c

0005577c:
00055784: R0 := mem[R19 + 8, el]:u64
00055789: R2 := 0x12000
0005578f: R2 := R2 + 0xB70
00055794: R3 := 1
00055799: R1 := 0x12000
0005579f: R1 := R1 + 0x918
000557a4: R30 := 0xD12C
000557a6: call @hlist_mod with return %000557a8

000557a8:
000557ae: mem := mem with [R19 + 8, el]:u64 <- R0
000557b3: R1 := 0x12000
000557b9: R1 := R1 + 0x938
000557be: R30 := 0xD13C
000557c0: call @hlist_del with return %000557c2

000557c2:
000557c8: mem := mem with [R19 + 8, el]:u64 <- R0
000557cf: R1 := mem[R25 + 0xF78, el]:u64
000557d6: R0 := pad:64[mem[R1, el]:u32]
000557dd: when 31:0[R0] <> 0 goto %000557db
0006ced3: goto %00055806

000557db:
000557e3: R1 := 0x12000
000557e8: R0 := 1
000557ee: R1 := R1 + 0xB78
000557f3: R30 := 0xD3A4
000557f5: call @__printf_chk with return %000557f7

000557f7:
000557fc: R0 := mem[R19 + 8, el]:u64
00055801: R30 := 0xD3AC
00055803: call @hlist_dump with return %00055805

00055805:
00055808: goto %00055806

00055806:
0005580e: R0 := pad:64[mem[R23, el]:u32]
00055814: R1 := R19
00055819: R30 := 0xD158
0005581b: call @headers_send with return %0005581d

0005581d:
00055821: R28 := pad:64[31:0[R0]]
00055827: when 31:0[R0] = 0 goto %00055825
0006ced4: goto %0005defa

0005defa:
0005deff: R0 := mem[R25 + 0xF78, el]:u64
0005df06: R0 := pad:64[mem[R0, el]:u32]
0005df0c: when 31:0[R0] <> 0 goto %0005de5e
0006ced5: goto %0005de76

0005de5e:
0005de61: R1 := 0x12000
0005de66: R0 := 1
0005de6c: R1 := R1 + 0xB98
0005de71: R30 := 0xD404
0005de73: call @__printf_chk with return %0005de75

0005de75:
0005de78: goto %0005de76

0005de76:
0005de7d: R0 := R19
0005de83: when R22 = 0 goto %0005de81
0006ced6: goto %0005dec5

0005de81:
0005de89: R30 := 0xD3D4
0005de8b: call @reset_rr_data with return %0005de8d

0005de8d:
0005de92: R0 := pad:64[mem[R23, el]:u32]
0005de98: R1 := R19
0005de9d: R30 := 0xD3E0
0005de9f: call @headers_recv with return %0005dea1

0005dea1:
0005dea5: R28 := pad:64[31:0[R0]]
0005deac: when 31:0[R0] <> 0 goto %0005deaa
0006ced7: goto %0005582c

0005dec5:
0005dec8: R30 := 0xD178
0005deca: call @free_rr_data with return %0005decc

0005decc:
0005ded0: R19 := R22
0005ded6: R0 := R22
0005dedb: R30 := 0xD184
0005dedd: call @reset_rr_data with return %0005dedf

0005dedf:
0005dee4: R0 := pad:64[mem[R23, el]:u32]
0005deea: R1 := R22
0005deef: R30 := 0xD190
0005def1: call @headers_recv with return %0005def3

0005def3:
0005def6: when 31:0[R0] = 0 goto %0005ddbf
0006ced8: goto %0005deaa

0005deaa:
0005deb4: R0 := mem[R25 + 0xF78, el]:u64
0005debb: R0 := pad:64[mem[R0, el]:u32]
0005dec1: when 31:0[R0] <> 0 goto %0005ddcd
0006ced9: goto %0005dddc

0005ddcd:
0005ddd2: R0 := mem[R19 + 8, el]:u64
0005ddd7: R30 := 0xD434
0005ddd9: call @hlist_dump with return %0005dddb

0005dddb:
0005ddde: goto %0005dddc

0005dddc:
0005dde4: R0 := pad:64[mem[R19 + 0x10, el]:u32]
0005ddea: #1381 := 31:0[R0] - 0x197
0005ddef: VF := extend:33[#1381] <> extend:33[31:0[R0]] - 0x197
0005ddf4: CF := pad:33[#1381] <> pad:33[31:0[R0]] + 0xFFFFFE69
0005ddf8: ZF := #1381 = 0
0005ddfc: NF := 31:31[#1381]
0005de01: when ZF goto %0005da7b
0006ceda: goto %0005de05

0005da7b:
0005da80: R0 := pad:64[mem[R23, el]:u32]
0005da86: R1 := R19
0005da8b: R30 := 0xD2BC
0005da8d: call @http_body_drop with return %0005da8f

0005da8f:
0005da93: R28 := pad:64[31:0[R0]]
0005da98: when 31:0[R0] = 0 goto %00055825
0006cedb: goto %0005da9c

0005da9c:
0005daa1: R0 := mem[R19 + 8, el]:u64
0005daa6: R1 := 0x12000
0005daac: R1 := R1 + 0xBC0
0005dab1: R30 := 0xD2D4
0005dab3: call @hlist_get with return %0005dab5

0005dab5:
0005dabb: mem := mem with [R31 + 0x70, el]:u64 <- R0
0005dac1: when R0 = 0 goto %0005dabf
0006cedc: goto %0005dbe8

0005dabf:
0005dac7: R2 := 0x12000
0005dacc: R1 := 1
0005dad2: R2 := R2 + 0xC30
0005dad7: R0 := 4
0005dadc: R30 := 0xD500
0005dade: call @__syslog_chk with return %0005dae0

0005dae0:
0005dae3: goto %0005dae1

0005dbe8:
0005dbeb: R30 := 0xD2E0
0005dbed: call @strlen with return %0005dbef

0005dbef:
0005dbf3: R0 := R0 + 6
0005dbf8: R30 := 0xD2E8
0005dbfa: call @new with return %0005dbfc

0005dbfc:
0005dc00: R28 := R0
0005dc07: R1 := mem[R31 + 0x70, el]:u64
0005dc0f: mem := mem with [R31 + 0x68, el]:u64 <- R0
0005dc15: R1 := R1 + 5
0005dc1a: R30 := 0xD2FC
0005dc1c: call @from_base64 with return %0005dc1e

0005dc1e:
0005dc22: R2 := pad:64[31:0[R0]]
0005dc28: #1378 := 31:0[R0] - 0x18
0005dc2d: VF := extend:33[#1378] <> extend:33[31:0[R0]] - 0x18
0005dc32: CF := pad:33[#1378] <> pad:33[31:0[R0]] + 0xFFFFFFE8
0005dc36: ZF := #1378 = 0
0005dc3a: NF := 31:31[#1378]
0005dc41: when ~(NF = VF & ~ZF) goto %0005dba5
0006cedd: goto %0005dc45

0005dba5:
0005dba8: R2 := 0x12000
0005dbae: R2 := R2 + 0xC08
0006cede: goto %0005dbb0

0005dc45:
0005dc49: R0 := R27
0005dc4f: R3 := R26
0005dc55: R1 := R28
0005dc5a: R30 := 0xD318
0005dc5c: call @ntlm_response with return %0005dc5e

0005dc5e:
0005dc62: #1379 := 31:0[R0] + 0
0005dc67: VF := extend:33[#1379] <> extend:33[31:0[R0]] + 0
0005dc6c: CF := pad:33[#1379] <> pad:33[31:0[R0]] - 0x100000000
0005dc70: ZF := #1379 = 0
0005dc74: NF := 31:31[#1379]
0005dc7b: when ~(NF = VF & ~ZF) goto %0005dbd9
0006cedf: goto %0005dc7f

0005dbd9:
0005dbdc: R2 := 0x12000
0005dbe2: R2 := R2 + 0xBD8
0005dbe6: goto %0005dbb0

0005dbb0:
0005dbb3: R1 := 1
0005dbb8: R0 := 3
0005dbbe: R28 := pad:64[31:0[R1]]
0005dbc3: R30 := 0xD51C
0005dbc5: call @__syslog_chk with return %0005dbc7

0005dbc7:
0005dbcc: R0 := mem[R31 + 0x68, el]:u64
0005dbd1: R30 := 0xD524
0005dbd3: call @free with return %0005dbd5

0005dbd5:
0005dbd7: goto %00055825

0005dc7f:
0005dc82: R1 := 0x12000
0005dc88: R1 := R1 + 0xB50
0005dc8f: R2 :=

0005dc94: R3 := 0xFFB
0005dc9a: R0 := R21 + 5
0005dca1: R4 := pad:64[mem[R1, el]:u32]
0005dca8: R1 := pad:64[mem[R1 + 4, el]:u16]
0005dcb0: mem := mem with [R21, el]:u32 <- 31:0[R4]
0005dcb8: mem := mem with [R21 + 4, el]:u16 <- 15:0[R1]
0005dcbf: R1 := mem[R31 + 0x70, el]:u64
0005dcc4: R30 := 0xD34C
0005dcc6: call @to_base64 with return %0005dcc8

0005dcc8:
0005dccd: R0 := mem[R20 + 8, el]:u64
0005dcd3: R2 := R21
0005dcd8: R3 := 1
0005dcdd: R1 := 0x12000
0005dce3: R1 := R1 + 0xB58
0005dce8: R30 := 0xD364
0005dcea: call @hlist_mod with return %0005dcec

0005dcec:
0005dcf0: R1 := R0
0005dcf7: R0 := mem[R31 + 0x70, el]:u64
0005dcff: mem := mem with [R20 + 8, el]:u64 <- R1
0005dd04: R30 := 0xD374
0005dd06: call @free with return %0005dd08

0005dd08:
0005dd0c: R0 := R28
0005dd11: R30 := 0xD37C
0005dd13: call @free with return %0005dd15

0005dd15:
0006cee0: goto %0005dae1

0005de05:
0005de0a: R0 := pad:64[mem[R31 + 0x68, el]:u32]
0005de0f: when 31:0[R0] = 0 goto %0005dae1
0006cee1: goto %0005de13

0005dae1:
0005dae9: R0 := pad:64[mem[R23, el]:u32]
0005daee: R28 := 1
0005daf3: R30 := 0xD38C
0005daf5: call @so_closed with return %0005daf7

0005daf7:
0005dafa: when 31:0[R0] = 0 goto %00055825
0006cee2: goto %0005dafe

0005dafe:
0005db01: goto %0005daff

0005de13:
0005de18: R0 := mem[R25 + 0xF78, el]:u64
0005de1f: R0 := pad:64[mem[R0, el]:u32]
0005de24: when 31:0[R0] = 0 goto %0005dd95
0006cee3: goto %0005de28

0005de28:
0005de2c: when R20 = 0 goto %0005de2a
0006cee4: goto %0005de3a

0005de3a:
0005de3f: R0 := pad:64[mem[R20, el]:u32]
0005de45: when 31:0[R0] <> 0 goto %0005dd22
0006cee5: goto %0005de2a

0005dd22:
0005dd27: R1 := mem[R20 + 0x28, el]:u64
0005dd2c: R0 := 0x12000
0005dd32: R0 := R0 + 0x908
0005dd37: R30 := 0xD4BC
0005dd39: call @strcasecmp with return %0005dd3b

0005dd3b:
0005dd3f: #1380 := 31:0[R0] + 0
0005dd44: VF := extend:33[#1380] <> extend:33[31:0[R0]] + 0
0005dd49: CF := pad:33[#1380] <> pad:33[31:0[R0]] - 0x100000000
0005dd4d: ZF := #1380 = 0
0005dd51: NF := 31:31[#1380]
0005dd56: R2 := 0x12000
0005dd5b: R0 := 0x12000
0005dd61: R2 := R2 + 0xB30
0005dd67: R0 := R0 + 0xB40
0005dd75: when ZF <> 1 goto %0005dd6d
0005dd76: goto %0005dd71

0005dd71:
0005dd72: R2 := R0
0005dd78: goto %0005dd74

0005dd6d:
0005dd6e: R2 := R2
0005dd77: goto %0005dd74

0005dd74:
0005dd7d: goto %0005dd7b

0005de2a:
0005de32: R2 := 0x12000
0005de38: R2 := R2 + 0xB30
0006cee6: goto %0005dd7b

0005dd7b:
0005dd81: R1 := 0x12000
0005dd86: R0 := 1
0005dd8c: R1 := R1 + 0xC60
0005dd91: R30 := 0xD1E4
0005dd93: call @__printf_chk with return %0005dd95

0005dd95:
0005dd98: when R22 = 0 goto %0005db63
0006cee7: goto %0005dd9c

0005db63:
0005db68: R0 := pad:64[mem[R23, el]:u32]
0005db6e: R1 := R19
0005db73: R30 := 0xD474
0005db75: call @http_body_drop with return %0005db77

0005db77:
0005db7b: R28 := pad:64[31:0[R0]]
0005db80: when 31:0[R0] = 0 goto %0005582c
0006cee8: goto %0005db84

0005db84:
0005db89: R0 := pad:64[mem[R23, el]:u32]
0005db8e: R30 := 0xD484
0005db90: call @so_closed with return %0005db92

0005db92:
0005db96: when 31:0[R0] <> 0 goto %0005daff
0006cee9: goto %0005db9a

0005db9a:
0005db9f: R28 := pad:64[mem[R31 + 0x68, el]:u32]
0005dba3: goto %0005582c

0005dd9c:
0005dd9f: R0 := 0x197
0005dda7: mem := mem with [R22 + 0x10, el]:u32 <- 31:0[R0]
0005ddad: R1 := R19
0005ddb4: R0 := pad:64[mem[R23, el]:u32]
0005ddb9: R30 := 0xD1FC
0005ddbb: call @http_body_drop with return %0005ddbd

0005ddbd:
0005ddc1: when 31:0[R0] = 0 goto %0005ddbf
0006ceea: goto %0005de49

0005ddbf:
0005ddc7: R28 := 0
0005ddcb: goto %0005583f

0005de49:
0005de4e: R0 := pad:64[mem[R23, el]:u32]
0005de53: R30 := 0xD208
0005de55: call @so_closed with return %0005de57

0005de57:
0005de5a: when 31:0[R0] = 0 goto %0005dd17
0006ceeb: goto %0005daff

0005dd17:
0005dd1c: R28 := pad:64[mem[R31 + 0x68, el]:u32]
0005dd20: goto %0005583f

0005daff:
0005db07: R25 := mem[R25 + 0xF78, el]:u64
0005db0e: R0 := pad:64[mem[R25, el]:u32]
0005db15: when 31:0[R0] <> 0 goto %0005db13
0006ceec: goto %0005db30

0005db13:
0005db1b: R1 := 0x12000
0005db20: R0 := 1
0005db26: R1 := R1 + 0xC88
0005db2b: R30 := 0xD464
0005db2d: call @__printf_chk with return %0005db2f

0005db2f:
0005db32: goto %0005db30

0005db30:
0005db38: R0 := pad:64[mem[R23, el]:u32]
0005db3d: R30 := 0xD220
0005db3f: call @close with return %0005db41

0005db41:
0005db45: R0 := R26
0005db4a: R30 := 0xD228
0005db4c: call @proxy_connect with return %0005db4e

0005db4e:
0005db54: mem := mem with [R23, el]:u32 <- 31:0[R0]
0005db5a: R0 := pad:64[~31:0[R0]]
0005db61: R28 := pad:64[0.0:0[31:0[R0] >> 0x1F | 31:0[R0] << 1]]
0006ceed: goto %00055825

00055825:
0005582e: when R22 = 0 goto %0005582c
0006ceee: goto %0005583f

0005582c:
00055835: R0 := R19
0005583a: R30 := 0xD3F0
0005583c: call @free_rr_data with return %0005583e

0005583e:
00055841: goto %0005583f

0005583f:
00055846: R0 := R21
0005584b: R30 := 0xD240
0005584d: call @free with return %0005584f

0005584f:
00055854: R24 := mem[R24 + 0xFB8, el]:u64
0005585b: R0 := mem[R31 + 0x78, el]:u64
00055862: R1 := mem[R24, el]:u64
00055868: #972 := ~R1
0005586d: #973 := R0 + ~R1 + 1
00055873: VF := extend:65[#973] <> extend:65[R0] + extend:65[#972] + 1
00055879: CF := pad:65[#973] <> pad:65[R0] + pad:65[#972] + 1
0005587d: ZF := #973 = 0
00055881: NF := 63:63[#973]
00055885: R0 := #973
0005588a: R1 := 0
00055890: when ZF <> 1 goto %0005588e
0006ceef: goto %0005d936

0005588e:
00055896: R30 := 0xD538
00055898: call @__stack_chk_fail with return %0006cef0

0006cef0:
0006cef1: call @forward_request with noreturn

0005d936:
0005d93a: R0 := pad:64[31:0[R28]]
0005d940: #1373 := R31 + 0x10
0005d945: R19 := mem[#1373, el]:u64
0005d94a: R20 := mem[#1373 + 8, el]:u64
0005d950: #1374 := R31 + 0x20
0005d955: R21 := mem[#1374, el]:u64
0005d95a: R22 := mem[#1374 + 8, el]:u64
0005d960: #1375 := R31 + 0x30
0005d965: R23 := mem[#1375, el]:u64
0005d96a: R24 := mem[#1375 + 8, el]:u64
0005d970: #1376 := R31 + 0x40
0005d975: R25 := mem[#1376, el]:u64
0005d97a: R26 := mem[#1376 + 8, el]:u64
0005d980: #1377 := R31 + 0x50
0005d985: R27 := mem[#1377, el]:u64
0005d98a: R28 := mem[#1377 + 8, el]:u64
0005d991: R29 := mem[R31, el]:u64
0005d996: R30 := mem[R31 + 8, el]:u64
0005d99a: R31 := R31 + 0x80
0005d99f: call R30 with noreturn

0006cef2: sub proxy_connect(proxy_connect_result)
0006d156: proxy_connect_result :: out u32 = low:32[R0]

00054f0b:
00054f0f: #934 := R31 - 0x70
00054f15: mem := mem with [#934, el]:u64 <- R29
00054f1b: mem := mem with [#934 + 8, el]:u64 <- R30
00054f1f: R31 := #934
00054f25: R29 := R31
00054f2b: #935 := R31 + 0x40
00054f31: mem := mem with [#935, el]:u64 <- R25
00054f37: mem := mem with [#935 + 8, el]:u64 <- R26
00054f3c: R26 := 0x28000
00054f42: R1 := R26 + 0x4A0
00054f4a: mem := mem with [R31 + 0x68, el]:u64 <- R0
00054f50: R0 := R1 + 8
00054f57: R1 := pad:64[mem[R26 + 0x4A0, el]:u32]
00054f5d: #936 := R31 + 0x10
00054f63: mem := mem with [#936, el]:u64 <- R19
00054f69: mem := mem with [#936 + 8, el]:u64 <- R20
00054f6f: #937 := R31 + 0x20
00054f75: mem := mem with [#937, el]:u64 <- R21
00054f7b: mem := mem with [#937 + 8, el]:u64 <- R22
00054f81: #938 := R31 + 0x30
00054f87: mem := mem with [#938, el]:u64 <- R23
00054f8d: mem := mem with [#938 + 8, el]:u64 <- R24
00054f92: R23 := 0x27000
00054f98: #939 := R31 + 0x50
00054f9e: mem := mem with [#939, el]:u64 <- R27
00054fa4: mem := mem with [#939 + 8, el]:u64 <- R28
00054fac: mem := mem with [R31 + 0x64, el]:u32 <- 31:0[R1]
00054fb1: R30 := 0xCD3C
00054fb4: call @pthread_mutex_lock with return %00054fb6

00054fb6:
00054fbb: R0 := pad:64[mem[R26 + 0x4A0, el]:u32]
00054fc1: when 31:0[R0] = 0 goto %00054fbf
0006cef3: goto %00055017

00054fbf:
00054fc9: R0 := mem[R23 + 0xFE0, el]:u64
00054fce: R19 := 1
00054fd4: R1 := pad:64[31:0[R19]]
00054fdc: mem := mem with [R26 + 0x4A0, el]:u32 <- 31:0[R19]
00054fe3: R0 := mem[R0, el]:u64
00054fe8: R30 := 0xCFD8
00054fea: call @plist_get with return %00054fec

00054fec:
00054ff0: R3 := R0
00054ff6: R1 := pad:64[31:0[R19]]
00054ffb: R2 := 0x12000
00055000: R0 := 6
00055006: R2 := R2 + 0xA90
0005500d: R4 := pad:64[mem[R3 + 0x180, el]:u32]
00055012: R30 := 0xCFF4
00055014: call @__syslog_chk with return %00055016

00055016:
00055019: goto %00055017

00055017:
0005501e: R20 := R26 + 0x4A0
00055023: R25 := 0x27000
00055029: R19 := R20 + 8
0005502e: R22 := 0
00055034: R0 := R19
00055039: R30 := 0xCD5C
0005503c: call @pthread_mutex_unlock with return %0005503e

0005503e:
00055043: R24 := mem[R23 + 0xFE0, el]:u64
0005504a: R25 := mem[R25 + 0xF78, el]:u64
0006cef4: goto %0005504e

0005504e:
00055052: R0 := R19
00055057: R30 := 0xCD70
00055059: call @pthread_mutex_lock with return %0005505b

0005505b:
00055060: R1 := pad:64[mem[R20, el]:u32]
00055067: R0 := mem[R24, el]:u64
0005506c: R30 := 0xCD7C
0005506e: call @plist_get with return %00055070

00055070:
00055074: R28 := R0
0005507a: R0 := R19
0005507f: R30 := 0xCD88
00055081: call @pthread_mutex_unlock with return %00055083

00055083:
00055088: R0 := pad:64[mem[R28 + 0x184, el]:u32]
0005508f: when 31:0[R0] <> 0 goto %0005508d
0006cef5: goto %0005558d

0005558d:
00055592: R0 := pad:64[mem[R25, el]:u32]
00055598: when 31:0[R0] <> 0 goto %0005542c
0006cef6: goto %0005544f

0005542c:
00055430: R3 := R28
00055435: R2 := 0x12000
0005543a: R1 := 1
00055440: R2 := R2 + 0xAA8
00055445: R0 := 6
0005544a: R30 := 0xCF78
0005544c: call @__syslog_chk with return %0005544e

0005544e:
00055451: goto %0005544f

0005544f:
00055456: R1 := R28
0005545c: R0 := R28 + 0x17C
00055461: R30 := 0xCDA4
00055463: call @so_resolv with return %00055465

00055465:
00055468: when 31:0[R0] = 0 goto %0005526f
0006cef7: goto %0005546c

0005526f:
00055273: R3 := R28
00055278: R2 := 0x12000
0005527d: R1 := 1
00055283: R2 := R2 + 0xAC0
00055288: R0 := 3
0005528d: R30 := 0xCE20
0005528f: call @__syslog_chk with return %00055291

00055291:
00055296: R21 := pad:64[mem[R28 + 0x184, el]:u32]
0005529c: when 31:0[R21] <> 0 goto %0005508d
0006cef8: goto %000550c9

0005546c:
0005546f: R0 := 1
00055477: mem := mem with [R28 + 0x184, el]:u32 <- 31:0[R0]
0006cef9: goto %0005508d

0005508d:
00055097: R0 := pad:64[mem[R28 + 0x17C, el]:u32]
0005509e: R1 := pad:64[mem[R28 + 0x180, el]:u32]
000550a3: R30 := 0xCDBC
000550a5: call @so_connect with return %000550a7

000550a7:
000550ab: R21 := pad:64[31:0[R0]]
000550b1: #940 := 31:0[R0] + 0
000550b6: VF := extend:33[#940] <> extend:33[31:0[R0]] + 0
000550bb: CF := pad:33[#940] <> pad:33[31:0[R0]] - 0x100000000
000550bf: ZF := #940 = 0
000550c3: NF := 31:31[#940]
000550cb: when ~(NF = VF & ~ZF) goto %000550c9
0006cefa: goto %00055505

000550c9:
000550d2: R0 := R19
000550d7: R30 := 0xCE30
000550d9: call @pthread_mutex_lock with return %000550db

000550db:
000550de: R5 := 0x27000
000550e5: R1 := pad:64[mem[R20, el]:u32]
000550ec: R28 := mem[R5 + 0xFA0, el]:u64
000550f3: R0 := pad:64[mem[R28, el]:u32]
000550f9: #941 := ~31:0[R0]
000550fe: #942 := 31:0[R1] + ~31:0[R0] + 1
00055104: VF := extend:33[#942] <> extend:33[31:0[R1]] + extend:33[#941] + 1
0005510a: CF := pad:33[#942] <> pad:33[31:0[R1]] + pad:33[#941] + 1
0005510e: ZF := #942 = 0
00055112: NF := 31:31[#942]
00055119: R0 := mem[R23 + 0xFE0, el]:u64
00055120: when NF <> VF goto %0005511e
0006cefb: goto %00055479

0005511e:
00055128: R0 := mem[R0, el]:u64
0005512e: R1 := pad:64[31:0[R1] + 1]
00055136: mem := mem with [R20, el]:u32 <- 31:0[R1]
0005513c: R22 := pad:64[31:0[R22] + 1]
00055141: R30 := 0xCF28
00055143: call @plist_get with return %00055145

00055145:
00055149: R27 := R0
0005514f: R0 := R19
00055154: R30 := 0xCF34
00055156: call @pthread_mutex_unlock with return %00055158

00055158:
0005515b: R0 := 3
00055161: R3 := R27
00055168: R4 := pad:64[mem[R27 + 0x180, el]:u32]
0005516d: R2 := 0x12000
00055172: R1 := 1
00055178: R2 := R2 + 0xAE0
0005517d: R30 := 0xCF50
0005517f: call @__syslog_chk with return %00055181

00055181:
00055186: R0 := pad:64[mem[R28, el]:u32]
0005518c: #943 := ~31:0[R22]
00055191: #944 := 31:0[R0] + ~31:0[R22] + 1
00055197: VF := extend:33[#944] <> extend:33[31:0[R0]] + extend:33[#943] + 1
0005519d: CF := pad:33[#944] <> pad:33[31:0[R0]] + pad:33[#943] + 1
000551a1: ZF := #944 = 0
000551a5: NF := 31:31[#944]
000551ac: when NF = VF & ~ZF goto %0005504e
0006cefc: goto %000551b0

000551b0:
000551b3: goto %000551b1

00055479:
0005547e: R0 := mem[R0, el]:u64
00055483: R1 := 1
0005548a: R22 := pad:64[31:0[R22] + 31:0[R1]]
00055492: mem := mem with [R20, el]:u32 <- 31:0[R1]
00055497: R30 := 0xCE60
00055499: call @plist_get with return %0005549b

0005549b:
0005549f: R27 := R0
000554a5: R0 := R19
000554aa: R30 := 0xCE6C
000554ac: call @pthread_mutex_unlock with return %000554ae

000554ae:
000554b1: R0 := 3
000554b7: R3 := R27
000554be: R4 := pad:64[mem[R27 + 0x180, el]:u32]
000554c3: R2 := 0x12000
000554c8: R1 := 1
000554ce: R2 := R2 + 0xAE0
000554d3: R30 := 0xCE88
000554d5: call @__syslog_chk with return %000554d7

000554d7:
000554dc: R0 := pad:64[mem[R28, el]:u32]
000554e2: #960 := ~31:0[R0]
000554e7: #961 := 31:0[R22] + ~31:0[R0] + 1
000554ed: VF := extend:33[#961] <> extend:33[31:0[R22]] + extend:33[#960] + 1
000554f3: CF := pad:33[#961] <> pad:33[31:0[R22]] + pad:33[#960] + 1
000554f7: ZF := #961 = 0
000554fb: NF := 31:31[#961]
00055501: when NF <> VF goto %0005504e
0006cefd: goto %000551b1

000551b1:
000551b7: R1 := 1
000551bc: R0 := 3
000551c1: R2 := 0x12000
000551c7: R2 := R2 + 0xB08
000551cc: R30 := 0xCEA8
000551ce: call @__syslog_chk with return %000551d0

000551d0:
000551d5: R0 := pad:64[mem[R26 + 0x4A0, el]:u32]
000551dc: R1 := pad:64[mem[R31 + 0x64, el]:u32]
000551e2: #945 := ~31:0[R0]
000551e7: #946 := 31:0[R1] + ~31:0[R0] + 1
000551ed: VF := extend:33[#946] <> extend:33[31:0[R1]] + extend:33[#945] + 1
000551f3: CF := pad:33[#946] <> pad:33[31:0[R1]] + pad:33[#945] + 1
000551f7: ZF := #946 = 0
000551fb: NF := 31:31[#946]
00055201: when ZF goto %000551ff
0006cefe: goto %000552a0

00055505:
0005550a: R0 := pad:64[mem[R26 + 0x4A0, el]:u32]
00055511: R1 := pad:64[mem[R31 + 0x64, el]:u32]
00055517: #962 := ~31:0[R1]
0005551c: #963 := 31:0[R0] + ~31:0[R1] + 1
00055522: VF := extend:33[#963] <> extend:33[31:0[R0]] + extend:33[#962] + 1
00055528: CF := pad:33[#963] <> pad:33[31:0[R0]] + pad:33[#962] + 1
0005552c: ZF := #963 = 0
00055530: NF := 31:31[#963]
00055535: when ZF <> 1 goto %000552a0
0006ceff: goto %00055539

000552a0:
000552a3: R22 := 0x27000
000552a8: R20 := 0x27000
000552af: R0 := mem[R22 + 0xF60, el]:u64
000552b4: R30 := 0xCEC8
000552b6: call @pthread_mutex_lock with return %000552b8

000552b8:
000552bd: R0 := mem[R20 + 0xFC0, el]:u64
000552c4: R19 := mem[R0, el]:u64
000552ca: when R19 = 0 goto %000552c8
0006cf00: goto %000553ff

000553ff:
0006cf01: goto %00055401

00055401:
00055406: R0 := pad:64[mem[R19, el]:u32]
0005540d: R19 := mem[R19 + 0x10, el]:u64
00055412: R30 := 0xCEE4
00055414: call @close with return %00055416

00055416:
0005541a: when R19 <> 0 goto %00055401
0006cf02: goto %0005541e

0005541e:
00055423: R20 := mem[R20 + 0xFC0, el]:u64
0005542a: R19 := mem[R20, el]:u64
0006cf03: goto %000552c8

000552c8:
000552d1: R0 := R19
000552d6: R30 := 0xCEF8
000552d8: call @plist_free with return %000552da

000552da:
000552df: R0 := mem[R22 + 0xF60, el]:u64
000552e4: R30 := 0xCF00
000552e6: call @pthread_mutex_unlock with return %000552e8

000552e8:
000552ed: R0 := mem[R31 + 0x68, el]:u64
000552f3: #952 := 31:0[R21] + 0
000552f8: VF := extend:33[#952] <> extend:33[31:0[R21]] + 0
000552fd: CF := pad:33[#952] <> pad:33[31:0[R21]] - 0x100000000
00055301: ZF := #952 = 0
00055305: NF := 31:31[#952]
0005530b: #953 := R0 + 0
00055333: goto %0005532d

0005532d:
0005532f: when NF = VF & ~ZF goto %00055312
00055330: goto %00055322

00055322:
00055323: VF := 0
00055326: CF := 0
00055329: ZF := 1
0005532c: NF := 0
00055332: goto %0005532e

00055312:
00055313: VF := extend:65[#953] <> extend:65[R0] + 0
00055318: CF := pad:65[#953] <> pad:65[R0] - 0x10000000000000000
0005531c: ZF := #953 = 0
00055320: NF := 63:63[#953]
00055331: goto %0005532e

0005532e:
00055338: when ZF goto %000551ff
0006cf04: goto %0005533c

0005533c:
0005533f: goto %0005533d

00055539:
0005553e: R0 := mem[R31 + 0x68, el]:u64
00055544: #964 := 31:0[R21] + 0
00055549: VF := extend:33[#964] <> extend:33[31:0[R21]] + 0
0005554e: CF := pad:33[#964] <> pad:33[31:0[R21]] - 0x100000000
00055552: ZF := #964 = 0
00055556: NF := 31:31[#964]
0005555c: #965 := R0 + 0
00055584: goto %0005557e

0005557e:
00055580: when NF = VF & ~ZF goto %00055563
00055581: goto %00055573

00055573:
00055574: VF := 0
00055577: CF := 0
0005557a: ZF := 1
0005557d: NF := 0
00055583: goto %0005557f

00055563:
00055564: VF := extend:65[#965] <> extend:65[R0] + 0
00055569: CF := pad:65[#965] <> pad:65[R0] - 0x10000000000000000
0005556d: ZF := #965 = 0
00055571: NF := 63:63[#965]
00055582: goto %0005557f

0005557f:
00055589: when ZF <> 1 goto %0005533d
0006cf05: goto %000551ff

0005533d:
00055343: R2 := 0x27000
00055348: R1 := 0x27000
0005534f: R2 := mem[R2 + 0xF90, el]:u64
00055356: R1 := mem[R1 + 0xF80, el]:u64
0005535d: R2 := pad:64[mem[R2, el]:u32]
00055364: R1 := mem[R1, el]:u64
0005536a: #954 := 31:0[R2] + 0
0005536f: VF := extend:33[#954] <> extend:33[31:0[R2]] + 0
00055374: CF := pad:33[#954] <> pad:33[31:0[R2]] - 0x100000000
00055378: ZF := #954 = 0
0005537c: NF := 31:31[#954]
00055388: when ZF <> 1 goto %00055381
00055389: goto %00055384

00055384:
00055385: R2 := 1
0005538b: goto %00055387

00055381:
00055382: R2 := 0
0005538a: goto %00055387

00055387:
00055390: R30 := 0xCFA0
00055392: call @copy_auth with return %00055394

00055394:
00055398: R0 := pad:64[31:0[R21]]
0005539e: #955 := R31 + 0x10
000553a3: R19 := mem[#955, el]:u64
000553a8: R20 := mem[#955 + 8, el]:u64
000553ae: #956 := R31 + 0x20
000553b3: R21 := mem[#956, el]:u64
000553b8: R22 := mem[#956 + 8, el]:u64
000553be: #957 := R31 + 0x30
000553c3: R23 := mem[#957, el]:u64
000553c8: R24 := mem[#957 + 8, el]:u64
000553ce: #958 := R31 + 0x40
000553d3: R25 := mem[#958, el]:u64
000553d8: R26 := mem[#958 + 8, el]:u64
000553de: #959 := R31 + 0x50
000553e3: R27 := mem[#959, el]:u64
000553e8: R28 := mem[#959 + 8, el]:u64
000553ef: R29 := mem[R31, el]:u64
000553f4: R30 := mem[R31 + 8, el]:u64
000553f8: R31 := R31 + 0x70
000553fd: call R30 with noreturn

000551ff:
00055208: R0 := pad:64[31:0[R21]]
0005520e: #947 := R31 + 0x10
00055213: R19 := mem[#947, el]:u64
00055218: R20 := mem[#947 + 8, el]:u64
0005521e: #948 := R31 + 0x20
00055223: R21 := mem[#948, el]:u64
00055228: R22 := mem[#948 + 8, el]:u64
0005522e: #949 := R31 + 0x30
00055233: R23 := mem[#949, el]:u64
00055238: R24 := mem[#949 + 8, el]:u64
0005523e: #950 := R31 + 0x40
00055243: R25 := mem[#950, el]:u64
00055248: R26 := mem[#950 + 8, el]:u64
0005524e: #951 := R31 + 0x50
00055253: R27 := mem[#951, el]:u64
00055258: R28 := mem[#951 + 8, el]:u64
0005525f: R29 := mem[R31, el]:u64
00055264: R30 := mem[R31 + 8, el]:u64
00055268: R31 := R31 + 0x70
0005526d: call R30 with noreturn

0006cf06: sub proxy_thread(proxy_thread_result)
0006d157: proxy_thread_result :: out u32 = low:32[R0]

00057424:
00057428: #1087 := R31 - 0x70
0005742e: mem := mem with [#1087, el]:u64 <- R29
00057434: mem := mem with [#1087 + 8, el]:u64 <- R30
00057438: R31 := #1087
0005743e: R29 := R31
00057444: #1088 := R31 + 0x20
0005744a: mem := mem with [#1088, el]:u64 <- R21
00057450: mem := mem with [#1088 + 8, el]:u64 <- R22
00057456: R21 := R0
0005745c: #1089 := R31 + 0x50
00057462: mem := mem with [#1089, el]:u64 <- R27
00057468: mem := mem with [#1089 + 8, el]:u64 <- R28
0005746d: R28 := 0x14000
00057474: R27 := pad:64[mem[R21, el]:u32]
0005747a: #1090 := R31 + 0x40
00057480: mem := mem with [#1090, el]:u64 <- R25
00057486: mem := mem with [#1090 + 8, el]:u64 <- R26
0005748b: R26 := 0x14000
00057491: R26 := R26 + 0x48
00057497: R0 := R28 + 0x28
0005749c: R25 := 0x28000
000574a2: #1091 := R31 + 0x10
000574a8: mem := mem with [#1091, el]:u64 <- R19
000574ae: mem := mem with [#1091 + 8, el]:u64 <- R20
000574b4: #1092 := R31 + 0x30
000574ba: mem := mem with [#1092, el]:u64 <- R23
000574c0: mem := mem with [#1092 + 8, el]:u64 <- R24
000574c8: mem := mem with [R31 + 0x68, el]:u64 <- R0
0006cf07: goto %000574cc

000574cc:
000574d0: R0 := R25 + 0x4D8
000574d7: R0 := pad:64[mem[R0 + 4, el]:u32]
000574de: when 31:0[R0] <> 0 goto %000574dc
0006cf08: goto %0005a133

000574dc:
000574e6: R1 := mem[R31 + 0x68, el]:u64
000574ec: R2 := pad:64[31:0[R27]]
000574f1: R0 := 1
000574f6: R30 := 0x10E88
000574f8: call @__printf_chk with return %000574fa

000574fa:
000574fe: R2 := pad:64[31:0[R27]]
00057503: R1 := 0x12000
00057509: R1 := R1 + 0xD80
0005750e: R0 := 1
00057513: R30 := 0x10E9C
00057515: call @__printf_chk with return %00057517

00057517:
0005751a: R30 := 0x10EA0
0005751c: call @new_rr_data with return %0005751e

0005751e:
00057522: R19 := R0
00057528: R1 := R19
0005752e: R0 := pad:64[31:0[R27]]
00057533: R30 := 0x10EB0
00057535: call @headers_recv with return %00057537

00057537:
0005753c: when 31:0[R0] <> 0 goto %0005753a
0006cf09: goto %0005a126

0005a133:
0005a136: R30 := 0x10D78
0005a138: call @new_rr_data with return %0005a13a

0005a13a:
0005a13e: R19 := R0
0005a144: R1 := R19
0005a14a: R0 := pad:64[31:0[R27]]
0005a14f: R30 := 0x10D88
0005a151: call @headers_recv with return %0005a153

0005a153:
0005a156: when 31:0[R0] = 0 goto %0005a126
0006cf0a: goto %0005753a

0005a126:
0005a12a: R0 := R19
0005a12f: R30 := 0x10EBC
0005a131: call @free_rr_data with return %00057636

0005753a:
00057542: R23 := 0x12000
00057547: R22 := 0x12000
0005754d: R23 := R23 + 0xE30
00057553: R22 := R22 + 0xE40
00057559: R24 := R25 + 0x4D8
0006cf0b: goto %0005755b

0005755b:
00057560: R0 := mem[R19 + 8, el]:u64
00057566: R2 := R23
0005756c: R1 := R22
00057571: R30 := 0x10DB0
00057573: call @hlist_subcmp with return %00057575

00057575:
00057579: R20 := pad:64[31:0[R0]]
00057580: R0 := mem[R19 + 0x40, el]:u64
00057585: R30 := 0x10DBC
00057587: call @noproxy_match with return %00057589

00057589:
0005758d: R2 := pad:64[31:0[R0]]
00057593: R1 := R19
00057599: R0 := R21
0005759f: when 31:0[R2] = 0 goto %0005759d
0006cf0c: goto %0005a10a

0005759d:
000575a5: R30 := 0x10E00
000575a7: call @forward_request with return %000575a9

000575a9:
000575ad: R28 := R0
000575b4: R0 := pad:64[mem[R24 + 4, el]:u32]
000575ba: when 31:0[R0] = 0 goto %000575b8
0006cf0d: goto %0005a0c6

0005a10a:
0005a10d: R30 := 0x10DD0
0005a10f: call @direct_request with return %0005a111

0005a111:
0005a115: R28 := R0
0005a11c: R0 := pad:64[mem[R24 + 4, el]:u32]
0005a122: when 31:0[R0] <> 0 goto %0005a0c6
0006cf0e: goto %000575b8

0005a0c6:
0005a0ca: R1 := R26
0005a0d0: R2 := R28
0005a0d5: R0 := 1
0005a0da: R30 := 0x10E1C
0005a0dc: call @__printf_chk with return %0005a0de

0005a0de:
0005a0e2: R1 := R28 - 1
0005a0e8: R0 := R19
0005a0ee: #1227 := R1 + 3
0005a0f3: VF := extend:65[#1227] <> extend:65[R1] + 3
0005a0f8: CF := pad:65[#1227] <> pad:65[R1] + 3
0005a0fc: ZF := #1227 = 0
0005a100: NF := 63:63[#1227]
0005a106: when ~(CF & ~ZF) goto %0005a0ae
0006cf0f: goto %000575e4

000575b8:
000575c1: R1 := R28 - 1
000575c7: R0 := R19
000575cd: #1093 := R1 + 3
000575d2: VF := extend:65[#1093] <> extend:65[R1] + 3
000575d7: CF := pad:65[#1093] <> pad:65[R1] + 3
000575db: ZF := #1093 = 0
000575df: NF := 63:63[#1093]
000575e6: when CF & ~ZF goto %000575e4
0006cf10: goto %0005a0ae

000575e4:
000575ec: R30 := 0x10E30
000575ee: call @free_rr_data with return %000575f0

000575f0:
000575f4: #1094 := 31:0[R20] + 0
000575f9: VF := extend:33[#1094] <> extend:33[31:0[R20]] + 0
000575fe: CF := pad:33[#1094] <> pad:33[31:0[R20]] - 0x100000000
00057602: ZF := #1094 = 0
00057606: NF := 31:31[#1094]
0005760c: #1095 := R28 + 1
00057632: goto %0005762c

0005762c:
0005762e: when ZF <> 1 goto %00057611
0005762f: goto %00057621

00057621:
00057622: VF := 0
00057625: CF := 0
00057628: ZF := 1
0005762b: NF := 0
00057631: goto %0005762d

00057611:
00057612: VF := extend:65[#1095] <> extend:65[R28] + 1
00057617: CF := pad:65[#1095] <> pad:65[R28] + 1
0005761b: ZF := #1095 = 0
0005761f: NF := 63:63[#1095]
00057630: goto %0005762d

0005762d:
00057638: when ZF goto %00057636
0006cf11: goto %0005a09a

00057636:
0005763f: R25 := R25 + 0x4D8
00057646: R0 := pad:64[mem[R25 + 0x20, el]:u32]
0005764d: when 31:0[R0] <> 0 goto %0005764b
0006cf12: goto %000576d4

000576d4:
000576d8: R19 := R25 + 0x28
000576de: R0 := R19
000576e3: R30 := 0x10ED4
000576e5: call @pthread_mutex_lock with return %000576e7

000576e7:
000576ea: R30 := 0x10ED8
000576ed: call @pthread_self with return %000576ef

000576ef:
000576f3: R1 := R0
000576fa: R0 := mem[R25 + 0x58, el]:u64
000576ff: R2 := 0
00057704: R30 := 0x10EE8
00057706: call @plist_add with return %00057708

00057708:
0005770c: R1 := R0
00057712: R0 := R19
0005771a: mem := mem with [R25 + 0x58, el]:u64 <- R1
0005771f: R30 := 0x10EF8
00057721: call @pthread_mutex_unlock with return %00057723

00057723:
00057725: goto %0005764b

0005a09a:
0005a09e: R0 := R25 + 0x4D8
0005a0a5: R0 := pad:64[mem[R0 + 0x20, el]:u32]
0005a0aa: when 31:0[R0] = 0 goto %000574cc
0006cf13: goto %0005764b

0005764b:
00057654: R0 := R21
00057659: R30 := 0x10E50
0005765b: call @free with return %0005765d

0005765d:
00057661: R0 := pad:64[31:0[R27]]
00057666: R30 := 0x10E58
00057668: call @close with return %0005766a

0005766a:
0005766d: R0 := 0
00057673: #1096 := R31 + 0x10
00057678: R19 := mem[#1096, el]:u64
0005767d: R20 := mem[#1096 + 8, el]:u64
00057683: #1097 := R31 + 0x20
00057688: R21 := mem[#1097, el]:u64
0005768d: R22 := mem[#1097 + 8, el]:u64
00057693: #1098 := R31 + 0x30
00057698: R23 := mem[#1098, el]:u64
0005769d: R24 := mem[#1098 + 8, el]:u64
000576a3: #1099 := R31 + 0x40
000576a8: R25 := mem[#1099, el]:u64
000576ad: R26 := mem[#1099 + 8, el]:u64
000576b3: #1100 := R31 + 0x50
000576b8: R27 := mem[#1100, el]:u64
000576bd: R28 := mem[#1100 + 8, el]:u64
000576c4: R29 := mem[R31, el]:u64
000576c9: R30 := mem[R31 + 8, el]:u64
000576cd: R31 := R31 + 0x70
000576d2: call R30 with noreturn

0005a0ae:
0005a0b1: when R28 = 0 goto %0005755b
0006cf14: goto %0005a0b5

0005a0b5:
0005a0b9: R19 := R28
0005a0be: R30 := 0x10DF8
0005a0c0: call @free_rr_data with return %0005a0c2

0005a0c2:
0005a0c4: goto %0005755b

0006cf15: sub pthread_attr_destroy(pthread_attr_destroy_result)
0006d158: pthread_attr_destroy_result :: out u32 = low:32[R0]

00061739:
00064973: R16 := 0x27000
0006497a: R17 := mem[R16 + 0xD38, el]:u64
00064980: R16 := R16 + 0xD38
00064985: call R17 with noreturn

0006cf16: sub pthread_attr_init(pthread_attr_init_result)
0006d159: pthread_attr_init_result :: out u32 = low:32[R0]

00063b28:
00064813: R16 := 0x27000
0006481a: R17 := mem[R16 + 0xCB8, el]:u64
00064820: R16 := R16 + 0xCB8
00064825: call R17 with noreturn

0006cf17: sub pthread_attr_setguardsize(pthread_attr_setguardsize_result)
0006d15a: pthread_attr_setguardsize_result :: out u32 = low:32[R0]

00063b4e:
000649f7: R16 := 0x27000
000649fe: R17 := mem[R16 + 0xD68, el]:u64
00064a04: R16 := R16 + 0xD68
00064a09: call R17 with noreturn

0006cf18: sub pthread_attr_setstacksize(pthread_attr_setstacksize_result)
0006d15b: pthread_attr_setstacksize_result :: out u32 = low:32[R0]

00063b3b:
00064a4f: R16 := 0x27000
00064a56: R17 := mem[R16 + 0xD88, el]:u64
00064a5c: R16 := R16 + 0xD88
00064a61: call R17 with noreturn

0006cf19: sub pthread_create(pthread_create_result)
0006d15c: pthread_create_result :: out u32 = low:32[R0]

000617f7:
00064b2b: R16 := 0x27000
00064b32: R17 := mem[R16 + 0xDD8, el]:u64
00064b38: R16 := R16 + 0xDD8
00064b3d: call R17 with noreturn

0006cf1a: sub pthread_join(pthread_join_result)
0006d15d: pthread_join_result :: out u32 = low:32[R0]

0006158f:
00064b6d: R16 := 0x27000
00064b74: R17 := mem[R16 + 0xDF0, el]:u64
00064b7a: R16 := R16 + 0xDF0
00064b7f: call R17 with noreturn

0006cf1b: sub pthread_mutex_lock(pthread_mutex_lock_result)
0006d15e: pthread_mutex_lock_result :: out u32 = low:32[R0]

00054fb2:
00064e85: R16 := 0x27000
00064e8c: R17 := mem[R16 + 0xF10, el]:u64
00064e92: R16 := R16 + 0xF10
00064e97: call R17 with noreturn

0006cf1c: sub pthread_mutex_unlock(pthread_mutex_unlock_result)
0006d15f: pthread_mutex_unlock_result :: out u32 = low:32[R0]

0005503a:
00064e9b: R16 := 0x27000
00064ea2: R17 := mem[R16 + 0xF18, el]:u64
00064ea8: R16 := R16 + 0xF18
00064ead: call R17 with noreturn

0006cf1d: sub pthread_self(pthread_self_result)
0006d160: pthread_self_result :: out u32 = low:32[R0]

000576eb:
00064e2d: R16 := 0x27000
00064e34: R17 := mem[R16 + 0xEF0, el]:u64
00064e3a: R16 := R16 + 0xEF0
00064e3f: call R17 with noreturn

0006cf1e: sub random(random_result)
0006d161: random_result :: out u64 = R0

00051793:
00064a39: R16 := 0x27000
00064a40: R17 := mem[R16 + 0xD80, el]:u64
00064a46: R16 := R16 + 0xD80
00064a4b: call R17 with noreturn

0006cf1f: sub read(read_fd, read_buf, read_nbytes, read_result)
0006d162: read_fd :: in u32 = low:32[R0]
0006d163: read_buf :: in out u64 = R1
0006d164: read_nbytes :: in u64 = R2
0006d165: read_result :: out u64 = R0

0004cc44:
00064d67: R16 := 0x27000
00064d6e: R17 := mem[R16 + 0xEA8, el]:u64
00064d74: R16 := R16 + 0xEA8
00064d79: call R17 with noreturn

0006cf20: sub realloc(realloc_ptr, realloc_size, realloc_result)
0006d166: realloc_ptr :: in out u64 = R0
0006d167: realloc_size :: in u64 = R1
0006d168: realloc_result :: out u64 = R0

0004cb8d:
00064a91: R16 := 0x27000
00064a98: R17 := mem[R16 + 0xDA0, el]:u64
00064a9e: R16 := R16 + 0xDA0
00064aa3: call R17 with noreturn

0006cf21: sub recv(recv_fd, recv_buf, recv_n, recv_flags, recv_result)
0006d169: recv_fd :: in u32 = low:32[R0]
0006d16a: recv_buf :: in out u64 = R1
0006d16b: recv_n :: in u64 = R2
0006d16c: recv_flags :: in u32 = low:32[R3]
0006d16d: recv_result :: out u64 = R0

0004b6b3:
00064b15: R16 := 0x27000
00064b1c: R17 := mem[R16 + 0xDD0, el]:u64
00064b22: R16 := R16 + 0xDD0
00064b27: call R17 with noreturn

0006cf22: sub register_tm_clones(register_tm_clones_result)
0006d16e: register_tm_clones_result :: out u32 = low:32[R0]

00063110:
00063113: R0 := 0x28000
00063119: R0 := R0 + 0x498
0006311e: R1 := 0x28000
00063124: R1 := R1 + 0x498
0006312b: R1 := R1 + ~R0 + 1
00063132: R2 := 0.0:0[R1 >> 0x3F | R1 << 1]
00063139: R1 := R2 + (R1 ~>> 3)
0006313f: #1577 := ~(R1 ~>> 1)
00063143: #1578 := ~(R1 ~>> 1) + 1
00063148: VF := extend:65[#1578] <> extend:65[#1577] + 1
0006314d: CF := pad:65[#1578] <> pad:65[#1577] + 1
00063151: ZF := #1578 = 0
00063155: NF := 63:63[#1578]
0006315d: R1 :=

          >> 1 | R1 << 0x3F]
00063163: when ZF goto %00063161
0006cf23: goto %00063200

00063200:
00063203: R2 := 0x27000
0006320a: R2 := mem[R2 + 0xFE8, el]:u64
0006320f: when R2 = 0 goto %00063161
0006cf24: goto %00063213

00063161:
00063169: call R30 with noreturn

00063213:
00063217: R16 := R2
0006321c: call R16 with noreturn

0006cf25: sub reset_rr_data(reset_rr_data_result)
0006d16f: reset_rr_data_result :: out u32 = low:32[R0]

0004a2f8:
0004a2fc: #280 := R31 - 0x30
0004a302: mem := mem with [#280, el]:u64 <- R29
0004a308: mem := mem with [#280 + 8, el]:u64 <- R30
0004a30c: R31 := #280
0004a312: R29 := R31
0004a318: #281 := R31 + 0x10
0004a31e: mem := mem with [#281, el]:u64 <- R19
0004a324: mem := mem with [#281 + 8, el]:u64 <- R20
0004a32a: R19 := R0
0004a330: when R0 = 0 goto %0004a32e
0006cf26: goto %0004aa25

0004aa25:
0004aa28: R0 := 0x11000
0004aa2f: mem := mem with [R19, el]:u32 <- 0
0004aa36: R20 := mem[R19 + 8, el]:u64
0004aa3d: mem := mem with [R19 + 0x20, el]:u32 <- 0
0004aa44: V0 := mem[R0 + 0x6F0, el]:u128
0004aa4c: mem := mem with [R19 + 0x10, el]:u128 <- V0
0004aa52: when R20 = 0 goto %0004aa50
0006cf27: goto %0004ab14

0004ab14:
0004ab1a: mem := mem with [R31 + 0x20, el]:u64 <- R21
0006cf28: goto %0004ab1e

0004ab1e:
0004ab22: R21 := R20
0004ab29: R20 := mem[R20 + 0x18, el]:u64
0004ab30: R0 := mem[R21, el]:u64
0004ab35: R30 := 0x53A0
0004ab37: call @free with return %0004ab39

0004ab39:
0004ab3e: R0 := mem[R21 + 8, el]:u64
0004ab43: R30 := 0x53A8
0004ab45: call @free with return %0004ab47

0004ab47:
0004ab4b: R0 := R21
0004ab50: R30 := 0x53B0
0004ab52: call @free with return %0004ab54

0004ab54:
0004ab58: when R20 <> 0 goto %0004ab1e
0006cf29: goto %0004ab5c

0004ab5c:
0004ab61: R21 := mem[R31 + 0x20, el]:u64
0006cf2a: goto %0004aa50

0004aa50:
0004aa5a: R0 := mem[R19 + 0x28, el]:u64
0004aa60: when R0 = 0 goto %0004aa5e
0006cf2b: goto %0004ab0d

0004ab0d:
0004ab10: R30 := 0x53C4
0004ab12: call @free with return %0004aa5e

0004aa5e:
0004aa68: R0 := mem[R19 + 0x30, el]:u64
0004aa6e: when R0 = 0 goto %0004aa6c
0006cf2c: goto %0004ab06

0004ab06:
0004ab09: R30 := 0x53D0
0004ab0b: call @free with return %0004aa6c

0004aa6c:
0004aa76: R0 := mem[R19 + 0x38, el]:u64
0004aa7c: when R0 = 0 goto %0004aa7a
0006cf2d: goto %0004aaff

0004aaff:
0004ab02: R30 := 0x53DC
0004ab04: call @free with return %0004aa7a

0004aa7a:
0004aa84: R0 := mem[R19 + 0x40, el]:u64
0004aa8a: when R0 = 0 goto %0004aa88
0006cf2e: goto %0004aaf8

0004aaf8:
0004aafb: R30 := 0x53E8
0004aafd: call @free with return %0004aa88

0004aa88:
0004aa92: R0 := mem[R19 + 0x48, el]:u64
0004aa98: when R0 = 0 goto %0004aa96
0006cf2f: goto %0004aaf1

0004aaf1:
0004aaf4: R30 := 0x53F4
0004aaf6: call @free with return %0004aa96

0004aa96:
0004aaa0: R0 := mem[R19 + 0x50, el]:u64
0004aaa6: when R0 = 0 goto %0004aaa4
0006cf30: goto %0004aaea

0004aaea:
0004aaed: R30 := 0x5400
0004aaef: call @free with return %0004aaa4

0004aaa4:
0004aaae: R0 := mem[R19 + 0x58, el]:u64
0004aab4: when R0 = 0 goto %0004aab2
0006cf31: goto %0004aae3

0004aae3:
0004aae6: R30 := 0x540C
0004aae8: call @free with return %0004aab2

0004aab2:
0004aaba: V0 := 0
0004aac1: mem := mem with [R19 + 8, el]:u64 <- 0
0004aac9: mem := mem with [R19 + 0x28, el]:u128 <- V0
0004aad1: mem := mem with [R19 + 0x38, el]:u128 <- V0
0004aad9: mem := mem with [R19 + 0x48, el]:u128 <- V0
0004aae1: mem := mem with [R19 + 0x58, el]:u128 <- V0
0006cf32: goto %0004a32e

0004a32e:
0004a337: R0 := R19
0004a33d: #282 := R31 + 0x10
0004a342: R19 := mem[#282, el]:u64
0004a347: R20 := mem[#282 + 8, el]:u64
0004a34e: R29 := mem[R31, el]:u64
0004a353: R30 := mem[R31 + 8, el]:u64
0004a357: R31 := R31 + 0x30
0004a35c: call R30 with noreturn

0006cf33: sub scanmem(scanmem_result)
0006d170: scanmem_result :: out u32 = low:32[R0]

00046541:
00046545: #52 := R31 - 0x30
0004654b: mem := mem with [#52, el]:u64 <- R29
00046551: mem := mem with [#52 + 8, el]:u64 <- R30
00046555: R31 := #52
0004655b: R29 := R31
00046561: #53 := R31 + 0x10
00046567: mem := mem with [#53, el]:u64 <- R19
0004656d: mem := mem with [#53 + 8, el]:u64 <- R20
00046573: R19 := R0
0004657b: mem := mem with [R31 + 0x20, el]:u64 <- R21
00046581: R21 := pad:64[31:0[R1]]
00046586: R30 := 0x5B94
00046588: call @strlen with return %0004658a

0004658a:
0004658e: when 0:0[R0] goto %0004658c
0006cf34: goto %0005f93b

0004658c:
00046594: R0 := 0
0004659a: #54 := R31 + 0x10
0004659f: R19 := mem[#54, el]:u64
000465a4: R20 := mem[#54 + 8, el]:u64
000465ab: R21 := mem[R31 + 0x20, el]:u64
000465b2: R29 := mem[R31, el]:u64
000465b7: R30 := mem[R31 + 8, el]:u64
000465bb: R31 := R31 + 0x30
000465c0: call R30 with noreturn

0005f93b:
0005f940: R20 := 0.62:0[R0 >> 1 | R0 << 0x3F]
0005f945: R1 := 1
0005f94b: R0 := pad:64[31:0[R20] + 1]
0005f952: R0 :=

0005f957: R30 := 0x5BAC
0005f959: call @calloc with return %0005f95b

0005f95b:
0005f95f: #1456 := 31:0[R20] + 0
0005f964: VF := extend:33[#1456] <> extend:33[31:0[R20]] + 0
0005f969: CF := pad:33[#1456] <> pad:33[31:0[R20]] - 0x100000000
0005f96d: ZF := #1456 = 0
0005f971: NF := 31:31[#1456]
0005f978: when ~(NF = VF & ~ZF) goto %000465c2
0006cf35: goto %0005f97c

000465c2:
000465c6: R7 := R0
000465cd: mem := mem with [R7] <- 0
000465d2: goto %000465d0

0005f97c:
0005f980: R6 := pad:64[31:0[R20] - 1]
0005f985: R5 := 0x28000
0005f98b: R5 := R5 + 0x10
0005f990: R1 := 7
0005f996: R6 := R6 + 2
0005f99c: R3 := R19
0005f9a2: R5 := R5 + 0x20
0005f9a8: R8 := R0 - 1
0005f9af: R21 := pad:64[31:0[R1] + ~31:0[R21] + 1]
0005f9b4: R2 := 1
0005f9b9: goto %0005f9b7

0005f9b7:
0005f9bf: R1 := pad:64[mem[R3]]
0005f9c5: R7 := pad:64[31:0[R2]]
0005f9cc: R4 := pad:64[mem[R3 + 1]]
0005f9d2: R3 := R3 + 2
0005f9da: R1 := pad:64[mem[R5 + (61:0[R1].0), el]:u32]
0005f9e2: R4 := pad:64[mem[R5 + (61:0[R4].0), el]:u32]
0005f9e8: #1457 := 31:0[R1] + 0
0005f9ed: VF := extend:33[#1457] <> extend:33[31:0[R1]] + 0
0005f9f2: CF := pad:33[#1457] <> pad:33[31:0[R1]] - 0x100000000
0005f9f6: ZF := #1457 = 0
0005f9fa: NF := 31:31[#1457]
0005fa00: #1458 := 31:0[R4] + 0
0005fa27: goto %0005fa21

0005fa21:
0005fa23: when NF = VF goto %0005fa06
0005fa24: goto %0005fa16

0005fa16:
0005fa17: VF := 1
0005fa1a: CF := 0
0005fa1d: ZF := 0
0005fa20: NF := 0
0005fa26: goto %0005fa22

0005fa06:
0005fa07: VF := extend:33[#1458] <> extend:33[31:0[R4]] + 0
0005fa0c: CF := pad:33[#1458] <> pad:33[31:0[R4]] - 0x100000000
0005fa10: ZF := #1458 = 0
0005fa14: NF := 31:31[#1458]
0005fa25: goto %0005fa22

0005fa22:
0005fa2e: when NF = VF goto %0005fa2c
0006cf36: goto %0005fa82

0005fa82:
0005fa85: R30 := 0x5C20
0005fa87: call @free with return %0005fa89

0005fa89:
0005fa8c: R0 := 0
0005fa92: #1461 := R31 + 0x10
0005fa97: R19 := mem[#1461, el]:u64
0005fa9c: R20 := mem[#1461 + 8, el]:u64
0005faa3: R21 := mem[R31 + 0x20, el]:u64
0005faaa: R29 := mem[R31, el]:u64
0005faaf: R30 := mem[R31 + 8, el]:u64
0005fab3: R31 := R31 + 0x30
0005fab8: call R30 with noreturn

0005fa2c:
0005fa36: R1 := pad:64[31:0[R4] + (31:0[R1] << 4)]
0005fa3d: R1 := pad:64[31:0[R1] ^ 31:0[R21]]
0005fa46: mem := mem with [R8 + R2] <- 7:0[R1]
0005fa4c: R2 := R2 + 1
0005fa52: #1459 := ~R2
0005fa57: #1460 := R6 + ~R2 + 1
0005fa5d: VF := extend:65[#1460] <> extend:65[R6] + extend:65[#1459] + 1
0005fa63: CF := pad:65[#1460] <> pad:65[R6] + pad:65[#1459] + 1
0005fa67: ZF := #1460 = 0
0005fa6b: NF := 63:63[#1460]
0005fa71: when ZF goto %0005fa6f
0006cf37: goto %0005f9b7

0005fa6f:
0005fa79: R7 := R0 + extend:64[31:0[R7]]
0005fa80: mem := mem with [R7] <- 0
0006cf38: goto %000465d0

000465d0:
000465d7: #55 := R31 + 0x10
000465dc: R19 := mem[#55, el]:u64
000465e1: R20 := mem[#55 + 8, el]:u64
000465e8: R21 := mem[R31 + 0x20, el]:u64
000465ef: R29 := mem[R31, el]:u64
000465f4: R30 := mem[R31 + 8, el]:u64
000465f8: R31 := R31 + 0x30
000465fd: call R30 with noreturn

0006cf39: sub scanner_hook(scanner_hook_result)
0006d171: scanner_hook_result :: out u32 = low:32[R0]

00058720:
00058724: R31 := R31 - 0x100
0005872a: #1163 := R31 + 0x10
00058730: mem := mem with [#1163, el]:u64 <- R29
00058736: mem := mem with [#1163 + 8, el]:u64 <- R30
0005873c: R29 := R31 + 0x10
00058743: R6 := pad:64[mem[R0, el]:u32]
00058749: #1164 := R31 + 0x20
0005874f: mem := mem with [#1164, el]:u64 <- R19
00058755: mem := mem with [#1164 + 8, el]:u64 <- R20
0005875a: R19 := 0x27000
00058761: R7 := mem[R19 + 0xFB8, el]:u64
00058767: #1165 := R31 + 0x60
0005876d: mem := mem with [#1165, el]:u64 <- R27
00058773: mem := mem with [#1165 + 8, el]:u64 <- R28
0005877a: R8 := mem[R7, el]:u64
00058782: mem := mem with [R31 + 0xF8, el]:u64 <- R8
00058787: R8 := 0
0005878f: mem := mem with [R31 + 0x78, el]:u64 <- R2
00058797: mem := mem with [R31 + 0xB0, el]:u32 <- 31:0[R3]
0005879d: when 31:0[R6] = 0 goto %0005879b
0006cf3a: goto %00059f3a

00059f3a:
00059f3f: R2 := pad:64[mem[R1 + 0x10, el]:u32]
00059f45: R20 := R1
00059f4b: #1222 := 31:0[R2] - 0xC8
00059f50: VF := extend:33[#1222] <> extend:33[31:0[R2]] - 0xC8
00059f55: CF := pad:33[#1222] <> pad:33[31:0[R2]] + 0xFFFFFF38
00059f59: ZF := #1222 = 0
00059f5d: NF := 31:31[#1222]
00059f62: when ZF goto %00059d47
0006cf3b: goto %0005879b

00059d47:
00059d4b: #1216 := R31 + 0x30
00059d51: mem := mem with [#1216, el]:u64 <- R21
00059d57: mem := mem with [#1216 + 8, el]:u64 <- R22
00059d5d: R21 := R0
00059d63: R22 := R4
00059d69: #1217 := R31 + 0x40
00059d6f: mem := mem with [#1217, el]:u64 <- R23
00059d75: mem := mem with [#1217 + 8, el]:u64 <- R24
00059d7b: R23 := R5
00059d80: R30 := 0xF7A4
00059d82: call @http_has_body with return %00059d84

00059d84:
00059d88: #1218 := R0 + 1
00059d8d: VF := extend:65[#1218] <> extend:65[R0] + 1
00059d92: CF := pad:65[#1218] <> pad:65[R0] + 1
00059d96: ZF := #1218 = 0
00059d9a: NF := 63:63[#1218]
00059da0: when ZF goto %00059d9e
0006cf3c: goto %00059dca

00059d9e:
00059da8: R0 := mem[R20 + 8, el]:u64
00059dad: R2 := 0x12000
00059db2: R1 := 0x12000
00059db8: R2 := R2 + 0x968
00059dbe: R1 := R1 + 0x938
00059dc3: R30 := 0xF7D0
00059dc5: call @hlist_subcmp with return %00059dc7

00059dc7:
00059dcc: when 31:0[R0] <> 0 goto %00059dca
0006cf3d: goto %00059df3

00059df3:
00059df8: R0 := mem[R20 + 8, el]:u64
00059dfd: R2 := 0x12000
00059e02: R1 := 0x12000
00059e08: R2 := R2 + 0x950
00059e0e: R1 := R1 + 0xE40
00059e13: R30 := 0xF7EC
00059e15: call @hlist_subcmp with return %00059e17

00059e17:
00059e1a: when 31:0[R0] = 0 goto %00059dca
0006cf3e: goto %00059e1e

00059e1e:
00059e23: R0 := mem[R21 + 8, el]:u64
00059e28: R1 := 0x13000
00059e2e: R1 := R1 + 0x6E8
00059e34: #1221 := R31 + 0x50
00059e3a: mem := mem with [#1221, el]:u64 <- R25
00059e40: mem := mem with [#1221 + 8, el]:u64 <- R26
00059e45: R30 := 0xF804
00059e47: call @hlist_get with return %00059e49

00059e49:
00059e4c: when R0 = 0 goto %00058c9a
0006cf3f: goto %00059e50

00059e50:
00059e53: R30 := 0xF80C
00059e55: call @strdup with return %00059e57

00059e57:
00059e5a: R28 := 0x13000
00059e5f: R30 := 0xF814
00059e61: call @lowercase with return %00059e63

00059e63:
00059e67: R26 := R0
00059e6c: R1 := 0x27000
00059e71: R0 := 0x27000
00059e77: R28 := R28 + 0x6F8
00059e7e: R1 := mem[R1 + 0xFF8, el]:u64
00059e85: R27 := mem[R0 + 0xF78, el]:u64
00059e8c: R25 := mem[R1, el]:u64
00059e93: when R25 <> 0 goto %00059e91
0006cf40: goto %00059f36

00059e91:
00059e9b: R0 := mem[R25 + 8, el]:u64
00059ea0: R30 := 0xF864
00059ea2: call @strdup with return %00059ea4

00059ea4:
00059ea7: R30 := 0xF868
00059ea9: call @lowercase with return %00059eab

00059eab:
00059eaf: R24 := R0
00059eb6: R1 := pad:64[mem[R27, el]:u32]
00059ebc: when 31:0[R1] = 0 goto %00059eba
0006cf41: goto %00059f14

00059f14:
00059f18: R3 := R0
00059f1e: R2 := R26
00059f24: R1 := R28
00059f29: R0 := 1
00059f2e: R30 := 0xF888
00059f30: call @__printf_chk with return %00059f32

00059f32:
00059f34: goto %00059eba

00059eba:
00059ec3: R1 := R26
00059ec9: R0 := R24
00059ece: R2 := 0
00059ed3: R30 := 0xF848
00059ed5: call @fnmatch with return %00059ed7

00059ed7:
00059edb: when 31:0[R0] = 0 goto %00059ed9
0006cf42: goto %00059ef9

00059ed9:
00059ee1: R0 := 0x27000
00059ee8: R0 := mem[R0 + 0xF78, el]:u64
00059eef: R0 := pad:64[mem[R0, el]:u32]
00059ef5: when 31:0[R0] <> 0 goto %00058c60
0006cf43: goto %00058c78

00058c60:
00058c63: R1 := 0x13000
00058c68: R0 := 1
00058c6e: R1 := R1 + 0x728
00058c73: R30 := 0x1007C
00058c75: call @__printf_chk with return %00058c77

00058c77:
00058c7a: goto %00058c78

00058c78:
00058c7f: R0 := R24
00058c84: R23 := 0
00058c89: R30 := 0xF8A8
00058c8b: call @free with return %00058c8d

00059ef9:
00059efd: R0 := R24
00059f02: R30 := 0xF854
00059f04: call @free with return %00059f06

00059f06:
00059f0b: R25 := mem[R25 + 0x10, el]:u64
00059f10: when R25 = 0 goto %00058c8d
0006cf44: goto %00059e91

00059f36:
00059f38: goto %00058c8d

00058c8d:
00058c91: R0 := R26
00058c96: R30 := 0xF8B0
00058c98: call @free with return %00058c9a

00058c9a:
00058c9d: R0 := 0x1000
00058ca2: R30 := 0xF8B8
00058ca4: call @new with return %00058ca6

00058ca6:
00058ca9: R1 := 0x27000
00058cae: R24 := 0
00058cb3: R28 := 0x13000
00058cb9: R28 := R28 + 0x748
00058cc0: R27 := mem[R1 + 0xF78, el]:u64
00058cc6: R25 := R0
00058ccb: R26 := 0xFFF
00058cd3: mem := mem with [R31 + 0x80, el]:u64 <- R21
00058cd9: R21 := pad:64[31:0[R24]]
00058cdf: R24 := R23
00058ce5: R23 := R20
00058ceb: R20 := R28
00058cf1: R28 := R27
00058cf6: goto %00058cf4

00058cf4:
00058cfc: R0 := pad:64[mem[R22, el]:u32]
00058d03: R2 := pad:64[31:0[R26] + ~31:0[R21] + 1]
00058d0a: R1 := R25 + extend:64[31:0[R21]]
00058d11: R2 :=

00058d16: R30 := 0xF910
00058d18: call @read with return %00058d1a

00058d1a:
00058d1e: R27 := R0
00058d25: R1 := pad:64[mem[R28, el]:u32]
00058d2c: when 31:0[R1] <> 0 goto %00058d2a
0006cf45: goto %00058d54

00058d2a:
00058d32: R0 := 0x1000
00058d38: R2 := pad:64[31:0[R27]]
00058d3f: R3 := pad:64[31:0[R0] + ~31:0[R21] + 1]
00058d45: R1 := R20
00058d4a: R0 := 1
00058d4f: R30 := 0xFC3C
00058d51: call @__printf_chk with return %00058d53

00058d53:
00058d56: goto %00058d54

00058d54:
00058d5b: #1181 := 31:0[R27] + 0
00058d60: VF := extend:33[#1181] <> extend:33[31:0[R27]] + 0
00058d65: CF := pad:33[#1181] <> pad:33[31:0[R27]] - 0x100000000
00058d69: ZF := #1181 = 0
00058d6d: NF := 31:31[#1181]
00058d75: when NF = VF & ~ZF goto %00058d73
0006cf46: goto %000593b5

000593b5:
000593b9: R20 := R23
000593be: R1 := 0x13000
000593c4: R23 := R24
000593ca: R0 := R25
000593d0: R24 := pad:64[31:0[R21]]
000593d6: R1 := R1 + 0x768
000593dd: R21 := mem[R31 + 0x80, el]:u64
000593e2: R30 := 0xF944
000593e4: call @strstr with return %000593e6

000593e6:
000593ea: when R0 = 0 goto %000593e8
0006cf47: goto %000593f2

000593f2:
000593f5: R1 := 0x13000
000593fb: R0 := R25
00059401: R1 := R1 + 0x790
00059406: R30 := 0xF958
00059408: call @strstr with return %0005940a

0005940a:
0005940d: when R0 = 0 goto %000593e8
0006cf48: goto %00059411

00059411:
00059414: R1 := 0x22
00059419: R30 := 0xF964
0005941b: call @strchr with return %0005941d

0005941d:
00059420: when R0 = 0 goto %000593e8
0006cf49: goto %0005932d

000593e8:
000593f0: R28 := 1
0006cf4a: goto %0005888d

00058d73:
00058d7d: R21 := pad:64[31:0[R21] + 31:0[R27]]
00058d83: #1182 := 31:0[R21] - 0xFFE
00058d88: VF := extend:33[#1182] <> extend:33[31:0[R21]] - 0xFFE
00058d8d: CF := pad:33[#1182] <> pad:33[31:0[R21]] + 0xFFFFF002
00058d91: ZF := #1182 = 0
00058d95: NF := 31:31[#1182]
00058d9d: when NF = VF & ~ZF goto %00058d9b
0006cf4b: goto %00058cf4

00058d9b:
00058da4: R20 := R23
00058da9: R1 := 0x13000
00058daf: R23 := R24
00058db5: R0 := R25
00058dbb: R24 := pad:64[31:0[R21]]
00058dc1: R1 := R1 + 0x768
00058dc8: R21 := mem[R31 + 0x80, el]:u64
00058dcd: R30 := 0x102C8
00058dcf: call @strstr with return %00058dd1

00058dd1:
00058dd5: when R0 = 0 goto %00058dd3
0006cf4c: goto %000592ff

000592ff:
00059302: R1 := 0x13000
00059308: R0 := R25
0005930e: R1 := R1 + 0x790
00059313: R30 := 0x102DC
00059315: call @strstr with return %00059317

00059317:
0005931a: when R0 = 0 goto %00058dd3
0006cf4d: goto %0005931e

0005931e:
00059321: R1 := 0x22
00059326: R30 := 0x102E8
00059328: call @strchr with return %0005932a

0005932a:
0005932f: when R0 <> 0 goto %0005932d
0006cf4e: goto %00058dd3

00058dd3:
00058ddb: R0 := 0x27000
00058de2: R0 := mem[R0 + 0xF78, el]:u64
00058de9: R0 := pad:64[mem[R0, el]:u32]
00058dee: goto %00058dec

0005932d:
00059336: R26 := R0 + 1
0005933c: R0 := R26
00059341: R30 := 0xF974
00059343: call @strlen with return %00059345

00059345:
00059348: R1 := 0
0005934f: when R0 <> 0 goto %0005934d
0006cf4f: goto %000593b1

0005934d:
00059358: R3 := pad:64[mem[R26 + R1]]
0005935e: R2 := pad:64[31:0[R1]]
00059364: #1199 := 31:0[R3] - 0x22
00059369: VF := extend:33[#1199] <> extend:33[31:0[R3]] - 0x22
0005936e: CF := pad:33[#1199] <> pad:33[31:0[R3]] + 0xFFFFFFDE
00059372: ZF := #1199 = 0
00059376: NF := 31:31[#1199]
0005937c: when ZF <> 1 goto %0005937a
0006cf50: goto %00058eb5

0005937a:
00059383: R2 := pad:64[31:0[R1] + 1]
00059389: R1 := R1 + 1
0005938f: #1200 := ~R1
00059394: #1201 := R0 + ~R1 + 1
0005939a: VF := extend:65[#1201] <> extend:65[R0] + extend:65[#1200] + 1
000593a0: CF := pad:65[#1201] <> pad:65[R0] + pad:65[#1200] + 1
000593a4: ZF := #1201 = 0
000593a8: NF := 63:63[#1201]
000593ad: when ZF goto %00058e8d
0006cf51: goto %0005934d

00058e8d:
00058e92: R0 := R26 + extend:64[31:0[R2]]
0006cf52: goto %00058e94

000593b1:
000593b3: goto %00058fce

00058fce:
00058fd2: R0 := R26
00058fd7: R2 := 0
00058fdb: goto %00058e94

00058e94:
00058e99: R0 := pad:64[mem[R0]]
00058e9f: #1186 := 31:0[R0] - 0x22
00058ea4: VF := extend:33[#1186] <> extend:33[31:0[R0]] - 0x22
00058ea9: CF := pad:33[#1186] <> pad:33[31:0[R0]] + 0xFFFFFFDE
00058ead: ZF := #1186 = 0
00058eb1: NF := 31:31[#1186]
00058eb7: when ZF goto %00058eb5
0006cf53: goto %00058fdd

00058fdd:
00058fe0: R0 := 0x27000
00058fe7: R0 := mem[R0 + 0xF78, el]:u64
00058fee: R0 := pad:64[mem[R0, el]:u32]
00058ff4: when 31:0[R0] <> 0 goto %00058c3f
0006cf54: goto %00058ff8

00058c3f:
00058c42: R1 := 0x13000
00058c47: R0 := 1
00058c4d: R1 := R1 + 0xA38
00058c53: R28 := pad:64[31:0[R0]]
00058c58: R30 := 0x10068
00058c5a: call @__printf_chk with return %00058c5c

00058c5c:
00058c5e: goto %0005888d

00058ff8:
00058ffb: R28 := 1
00059001: when 31:0[R24] <> 0 goto %00058df1
0006cf55: goto %00059005

00059005:
00059007: goto %000588ac

00058eb5:
00058ebd: R1 := 0
00058ec3: R0 := R26
00058ec8: R30 := 0xF9AC
00058eca: call @substr with return %00058ecc

00058ecc:
00058ed2: mem := mem with [R31 + 0xD8, el]:u64 <- R0
00058ed7: R1 := 0x27000
00058ede: R1 := mem[R1 + 0xF78, el]:u64
00058ee5: R0 := pad:64[mem[R1, el]:u32]
00058eec: when 31:0[R0] <> 0 goto %00058eea
0006cf56: goto %00058f0e

00058eea:
00058ef4: R2 := mem[R31 + 0xD8, el]:u64
00058ef9: R1 := 0x13000
00058efe: R0 := 1
00058f04: R1 := R1 + 0x7A8
00058f09: R30 := 0x100A8
00058f0b: call @__printf_chk with return %00058f0d

00058f0d:
00058f10: goto %00058f0e

00058f0e:
00058f14: R26 := 0x1000
00058f19: R0 := 0x1000
00058f21: mem := mem with [R31 + 0xE8, el]:u32 <- 31:0[R26]
00058f26: R30 := 0xF9D0
00058f28: call @new with return %00058f2a

00058f2a:
00058f2d: R1 := 0x27000
00058f32: R2 := 0x13000
00058f38: R2 := R2 + 0x7C8
00058f3e: #1187 := R31 + 0x98
00058f43: mem := mem with [#1187, el]:u64 <- 0
00058f49: mem := mem with [#1187 + 8, el]:u64 <- R2
00058f4f: R2 := R31 + 0xF0
00058f56: R1 := mem[R1 + 0xF78, el]:u64
00058f5e: mem := mem with [R31 + 0xB8, el]:u64 <- R1
00058f63: R1 := 0x13000
00058f69: R1 := R1 + 0x808
00058f71: mem := mem with [R31 + 0xC0, el]:u64 <- R1
00058f77: R1 := R31 + 0xE8
00058f7c: R28 := 0x1000
00058f82: #1188 := R31 + 0x88
00058f88: mem := mem with [#1188, el]:u64 <- R22
00058f8e: mem := mem with [#1188 + 8, el]:u64 <- R23
00058f94: R23 := R2
00058f9a: R22 := R1
00058fa2: mem := mem with [R31 + 0xA8, el]:u64 <- R20
00058fa9: mem := mem with [R31 + 0xB4, el]:u32 <- 0
00058faf: #1189 := R31 + 0xC8
00058fb4: mem := mem with [#1189, el]:u64 <- 0
00058fba: mem := mem with [#1189 + 8, el]:u64 <- R21
00058fc0: R21 := pad:64[31:0[R26]]
00058fc8: mem := mem with [R31 + 0xF0, el]:u64 <- R0
00058fcc: goto %00058994

00058994:
00058999: R0 := mem[R31 + 0x88, el]:u64
0005899f: R2 := R22
000589a5: R1 := R23
000589ac: R0 := pad:64[mem[R0, el]:u32]
000589b1: R30 := 0xFBB0
000589b3: call @so_recvln with return %000589b5

000589b5:
000589b9: R20 := pad:64[31:0[R0]]
000589c0: R26 := mem[R31 + 0xF0, el]:u64
000589c6: R0 := R26
000589cb: R30 := 0xFBC0
000589cd: call @strlen with return %000589cf

000589cf:
000589d3: R27 := R0
000589da: R0 := R0 + extend:64[31:0[R24]]
000589e0: #1176 := ~R28
000589e5: #1177 := R0 + ~R28 + 1
000589eb: VF := extend:65[#1177] <> extend:65[R0] + extend:65[#1176] + 1
000589f1: CF := pad:65[#1177] <> pad:65[R0] + pad:65[#1176] + 1
000589f5: ZF := #1177 = 0
000589f9: NF := 63:63[#1177]
00058a00: when NF <> VF goto %000589fe
0006cf57: goto %00059c7f

00059c7f:
00059c84: R21 := pad:64[31:1[31:0[R21] >> 0x1F | 31:0[R21] << 1].0]
00059c8a: R0 := R25
00059c91: R28 :=

00059c97: R1 := R28
00059c9c: R30 := 0xFBE4
00059c9e: call @realloc with return %00059ca0

00059ca0:
00059ca3: when R0 = 0 goto %00059c6c
0006cf58: goto %00059ca7

00059ca7:
00059cac: R26 := mem[R31 + 0xF0, el]:u64
00059cb2: R25 := R0
0006cf59: goto %000589fe

000589fe:
00058a07: R1 := R26
00058a0e: R24 := pad:64[31:0[R24] + 31:0[R27]]
00058a14: R0 := R25
00058a19: R30 := 0xFC00
00058a1b: call @strcat with return %00058a1d

00058a1d:
00058a21: when ~31:31[R20] goto %00058a1f
0006cf5a: goto %00059c6c

00059c6c:
00059c71: R20 := mem[R31 + 0xA8, el]:u64
00059c76: R28 := 1
00059c7d: R27 := mem[R31 + 0xF0, el]:u64
0006cf5b: goto %0005886e

00058a1f:
00058a29: R1 := mem[R31 + 0xA0, el]:u64
00058a30: R27 := mem[R31 + 0xF0, el]:u64
00058a36: R0 := R27
00058a3b: R30 := 0xFA34
00058a3d: call @strstr with return %00058a3f

00058a3f:
00058a43: R26 := R0
00058a48: when R0 = 0 goto %000588f2
0006cf5c: goto %00058a4c

00058a4c:
00058a4f: R30 := 0xFA40
00058a51: call @__ctype_b_loc with return %00058a53

00058a53:
00058a58: R1 := pad:64[mem[R26 + 0xB]]
00058a5f: R0 := mem[R0, el]:u64
00058a67: R0 := pad:64[mem[R0 + (62:0[R1].0), el]:u16]
00058a6c: when ~11:11[R0] goto %000588f2
0006cf5d: goto %00058a70

000588f2:
000588f6: R0 := R27
000588fb: R1 := 0x13000
00058901: R1 := R1 + 0x7D8
00058906: R30 := 0xFCEC
00058908: call @strstr with return %0005890a

0005890a:
0005890e: R26 := R0
00058914: when R0 = 0 goto %00058912
0006cf5e: goto %00059cb4

00059cb4:
00059cb7: R30 := 0xFCF8
00059cb9: call @__ctype_b_loc with return %00059cbb

00059cbb:
00059cc0: R1 := pad:64[mem[R26 + 0x11]]
00059cc7: R0 := mem[R0, el]:u64
00059ccf: R0 := pad:64[mem[R0 + (62:0[R1].0), el]:u16]
00059cd4: when ~11:11[R0] goto %00058912
0006cf5f: goto %00059cd8

00058912:
0005891a: R0 := 1
00058921: mem := mem with [R31 + 0x80, el]:u32 <- 0
00058926: goto %00058924

00059cd8:
00059cdb: R0 := 1
00059ce3: mem := mem with [R31 + 0x80, el]:u32 <- 31:0[R0]
00059ce7: goto %00058a77

00058a70:
00058a75: mem := mem with [R31 + 0x80, el]:u32 <- 0
0006cf60: goto %00058a77

00058a77:
00058a7c: R0 := mem[R31 + 0xB8, el]:u64
00058a83: R0 := pad:64[mem[R0, el]:u32]
00058a8a: when 31:0[R0] <> 0 goto %00058a88
0006cf61: goto %00058ab2

00058a88:
00058a91: R2 := R27
00058a96: R1 := 0x13000
00058a9b: R0 := 1
00058aa1: R1 := R1 + 0x7F0
00058aa6: R30 := 0xFF58
00058aa8: call @__printf_chk with return %00058aaa

00058aaa:
00058aaf: R27 := mem[R31 + 0xF0, el]:u64
00058ab4: goto %00058ab2

00058ab2:
00058aba: R1 := mem[R31 + 0xC0, el]:u64
00058ac0: R0 := R27
00058ac5: R30 := 0xFA6C
00058ac7: call @strstr with return %00058ac9

00058ac9:
00058acd: when R0 = 0 goto %00058acb
0006cf62: goto %00059adf

00058acb:
00058ad5: R0 := pad:64[mem[R31 + 0xB4, el]:u32]
00058adc: when 31:0[R0] <> 0 goto %00058ada
0006cf63: goto %00059aaf

00059aaf:
00059ab2: R0 := 0x27000
00059ab9: R22 := mem[R31 + 0x88, el]:u64
00059ac0: R0 := mem[R0 + 0xF78, el]:u64
00059ac7: R20 := mem[R31 + 0xA8, el]:u64
00059ace: R0 := pad:64[mem[R0, el]:u32]
00059ad5: R21 := mem[R31 + 0xD0, el]:u64
00059adb: when 31:0[R0] <> 0 goto %00059a30
0006cf64: goto %00058857

00059a30:
00059a33: R1 := 0x13000
00059a38: R0 := 1
00059a3e: R1 := R1 + 0x898
00059a43: R30 := 0x1021C
00059a45: call @__printf_chk with return %00059a47

00059a47:
00059a4c: R27 := mem[R31 + 0xF0, el]:u64
00059a50: goto %00058857

00059adf:
00059ae2: R2 := 0xA
00059ae7: R1 := 0
00059aed: R0 := R0 + 0x10
00059af2: R30 := 0xFA80
00059af4: call @strtol with return %00059af6

00059af6:
00059af9: R1 := 0x27000
00059aff: R2 := R0
00059b07: mem := mem with [R31 + 0x98, el]:u64 <- R2
00059b0e: R1 := mem[R1 + 0xF78, el]:u64
00059b15: R0 := pad:64[mem[R1, el]:u32]
00059b1b: when 31:0[R0] = 0 goto %00059b19
0006cf65: goto %00059c25

00059c25:
00059c29: #1212 := R2 + 0
00059c2e: VF := extend:65[#1212] <> extend:65[R2] + 0
00059c33: CF := pad:65[#1212] <> pad:65[R2] - 0x10000000000000000
00059c37: ZF := #1212 = 0
00059c3b: NF := 63:63[#1212]
00059c42: when ~(NF = VF & ~ZF) goto %00059a78
0006cf66: goto %00059c46

00059a78:
00059a7b: R1 := 0x13000
00059a80: R0 := 1
00059a86: R1 := R1 + 0x858
00059a8d: R22 := mem[R31 + 0x88, el]:u64
00059a94: R20 := mem[R31 + 0xA8, el]:u64
00059a9b: R21 := mem[R31 + 0xD0, el]:u64
00059aa0: R30 := 0x10130
00059aa2: call @__printf_chk with return %00059aa4

00059aa4:
00059aa9: R27 := mem[R31 + 0xF0, el]:u64
00059aad: goto %00058857

00059c46:
00059c4b: R3 := mem[R31 + 0x90, el]:u64
00059c50: R1 := 0x13000
00059c58: R2 :=
          63:54[63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2].63:63[R2]].53:0[R2
          >> 0xA | R2 << 0x36]
00059c5e: R1 := R1 + 0x820
00059c63: R0 := 1
00059c68: R30 := 0xFAB8
00059c6a: call @__printf_chk with return %00059b19

00059b19:
00059b23: R0 := mem[R31 + 0x90, el]:u64
00059b29: when R0 = 0 goto %00059b27
0006cf67: goto %00059ba1

00059ba1:
00059ba5: #1208 := R0 - 1
00059baa: VF := extend:65[#1208] <> extend:65[R0] - 1
00059baf: CF := pad:65[#1208] <> pad:65[R0] + 0xFFFFFFFFFFFFFFFF
00059bb3: ZF := #1208 = 0
00059bb7: NF := 63:63[#1208]
00059bbc: when ZF goto %0005896f
0006cf68: goto %00059bc0

00059bc0:
00059bc5: R1 := mem[R31 + 0x98, el]:u64
00059bcb: #1209 := R1 + 0
00059bd0: VF := extend:65[#1209] <> extend:65[R1] + 0
00059bd5: CF := pad:65[#1209] <> pad:65[R1] - 0x10000000000000000
00059bd9: ZF := #1209 = 0
00059bdd: NF := 63:63[#1209]
00059be3: R0 := R1 + 0x3FF
00059bf2: when NF <> VF goto %00059bea
00059bf3: goto %00059bee

00059bee:
00059bef: R0 := R1
00059bf5: goto %00059bf1

00059bea:
00059beb: R0 := R0
00059bf4: goto %00059bf1

00059bf1:
00059bfc: R1 := mem[R31 + 0x90, el]:u64
00059c02: #1210 := ~(R0 ~>> 0xA)
00059c07: #1211 := R1 + ~(R0 ~>> 0xA) + 1
00059c0d: VF := extend:65[#1211] <> extend:65[R1] + extend:65[#1210] + 1
00059c13: CF := pad:65[#1211] <> pad:65[R1] + pad:65[#1210] + 1
00059c17: ZF := #1211 = 0
00059c1b: NF := 63:63[#1211]
00059c21: when NF <> VF goto %0005896f
0006cf69: goto %00059b27

00059b27:
00059b2f: R0 := 0x32
00059b34: R30 := 0xFAEC
00059b36: call @new with return %00059b38

00059b38:
00059b3d: R1 := mem[R31 + 0xD0, el]:u64
00059b42: R4 := 0x13000
00059b48: R4 := R4 + 0x888
00059b4d: R3 := 0xFFFFFFFFFFFFFFFF
00059b52: R2 := 1
00059b58: R26 := R0
00059b5f: R5 := mem[R1 + 0x48, el]:u64
00059b64: R1 := 0x32
00059b69: R30 := 0xFB10
00059b6b: call @__snprintf_chk with return %00059b6d

00059b6d:
00059b71: R0 := R26
00059b76: R30 := 0xFB18
00059b78: call @strlen with return %00059b7a

00059b7a:
00059b7e: R2 := R0
00059b85: R0 := pad:64[mem[R31 + 0xB0, el]:u32]
00059b8b: R1 := R26
00059b90: R30 := 0xFB28
00059b92: call @write with return %00059b94

00059b94:
00059b98: R0 := R26
00059b9d: R30 := 0xFB30
00059b9f: call @free with return %00058ada

00058ada:
00058ae4: R0 := mem[R31 + 0x98, el]:u64
00058aea: #1178 := R0 + 0
00058aef: VF := extend:65[#1178] <> extend:65[R0] + 0
00058af4: CF := pad:65[#1178] <> pad:65[R0] - 0x10000000000000000
00058af8: ZF := #1178 = 0
00058afc: NF := 63:63[#1178]
00058b03: R0 := mem[R31 + 0x90, el]:u64
00058b0f: when ZF <> 1 goto %00058b08
00058b10: goto %00058b0b

00058b0b:
00058b0c: R26 := 1
00058b12: goto %00058b0e

00058b08:
00058b09: R26 := 0
00058b11: goto %00058b0e

00058b0e:
00058b18: #1179 := R0 + 0
00058b1d: VF := extend:65[#1179] <> extend:65[R0] + 0
00058b22: CF := pad:65[#1179] <> pad:65[R0] - 0x10000000000000000
00058b26: ZF := #1179 = 0
00058b2a: NF := 63:63[#1179]
00058b31: R0 := pad:64[mem[R31 + 0x80, el]:u32]
00058b3e: when ZF <> 1 goto %00058b37
00058b3f: goto %00058b3a

00058b3a:
00058b3b: R26 := 0
00058b41: goto %00058b3d

00058b37:
00058b38: R26 := pad:64[31:0[R26]]
00058b40: goto %00058b3d

00058b3d:
00058b47: when 31:0[R0] = 0 goto %00058b45
0006cf6a: goto %000594bb

00058b45:
00058b4d: R0 := 0x32
00058b52: R30 := 0xFF68
00058b54: call @new with return %00058b56

00058b56:
00058b5b: R3 := mem[R31 + 0xF0, el]:u64
00058b61: R27 := R0
00058b66: R2 := 0xA
00058b6b: R1 := 0
00058b71: R0 := R3 + 0xC
00058b76: R30 := 0xFF80
00058b78: call @strtol with return %00058b7a

00058b7a:
00058b7e: R5 := R0
00058b85: R6 := mem[R31 + 0x98, el]:u64
00058b8a: R4 := 0x13000
00058b90: R4 := R4 + 0x8D8
00058b95: R3 := 0xFFFFFFFFFFFFFFFF
00058b9a: R2 := 1
00058b9f: R1 := 0x32
00058ba7: mem := mem with [R31 + 0xC8, el]:u64 <- R0
00058bad: R0 := R27
00058bb2: R30 := 0xFFA8
00058bb4: call @__snprintf_chk with return %00058bb6

00058bb6:
00058bba: R0 := R27
00058bbf: R30 := 0xFFB0
00058bc1: call @strlen with return %00058bc3

00058bc3:
00058bc7: R2 := R0
00058bce: R0 := pad:64[mem[R31 + 0xB0, el]:u32]
00058bd4: R1 := R27
00058bd9: R30 := 0xFFC0
00058bdb: call @write with return %00058bdd

00058bdd:
00058be1: R0 := R27
00058be6: R30 := 0xFFC8
00058be8: call @free with return %00058bea

00058bea:
00058bef: when 31:0[R26] <> 0 goto %00058bed
0006cf6b: goto %000594aa

000594aa:
000594ad: R0 := 1
000594b5: mem := mem with [R31 + 0xB4, el]:u32 <- 31:0[R0]
000594b9: goto %00058924

000594bb:
000594bf: when 31:0[R26] = 0 goto %000594bd
0006cf6c: goto %00058bed

000594bd:
000594c7: R0 := pad:64[mem[R31 + 0x80, el]:u32]
000594cf: mem := mem with [R31 + 0xB4, el]:u32 <- 31:0[R0]
000594d6: R22 := mem[R31 + 0x88, el]:u64
000594dd: R20 := mem[R31 + 0xA8, el]:u64
000594e4: R21 := mem[R31 + 0xD0, el]:u64
000594eb: R27 := mem[R31 + 0xF0, el]:u64
000594f0: goto %000594ee

00058bed:
00058bf7: R0 := mem[R31 + 0x90, el]:u64
00058bfd: #1180 := R0 - 1
00058c02: VF := extend:65[#1180] <> extend:65[R0] - 1
00058c07: CF := pad:65[#1180] <> pad:65[R0] + 0xFFFFFFFFFFFFFFFF
00058c0b: ZF := #1180 = 0
00058c0f: NF := 63:63[#1180]
00058c15: when ZF goto %00058c13
0006cf6d: goto %00059424

00058c13:
00058c1d: R0 := pad:64[mem[R31 + 0x80, el]:u32]
00058c24: R1 := pad:64[mem[R31 + 0x90, el]:u32]
00058c2a: R0 := pad:64[31:0[R0] ^ 1]
00058c31: mem := mem with [R31 + 0x98, el]:u64 <- 0
00058c39: mem := mem with [R31 + 0xB4, el]:u32 <- 31:0[R1]
00058c3d: goto %00058924

00059424:
00059429: R1 := mem[R31 + 0xC8, el]:u64
0005942f: #1202 := R1 + 0
00059434: VF := extend:65[#1202] <> extend:65[R1] + 0
00059439: CF := pad:65[#1202] <> pad:65[R1] - 0x10000000000000000
0005943d: ZF := #1202 = 0
00059441: NF := 63:63[#1202]
00059447: R0 := R1 + 0x3FF
00059456: when NF <> VF goto %0005944e
00059457: goto %00059452

00059452:
00059453: R0 := R1
00059459: goto %00059455

0005944e:
0005944f: R0 := R0
00059458: goto %00059455

00059455:
00059460: R1 := mem[R31 + 0x90, el]:u64
00059466: #1203 := ~(R0 ~>> 0xA)
0005946b: #1204 := R1 + ~(R0 ~>> 0xA) + 1
00059471: VF := extend:65[#1204] <> extend:65[R1] + extend:65[#1203] + 1
00059477: CF := pad:65[#1204] <> pad:65[R1] + pad:65[#1203] + 1
0005947b: ZF := #1204 = 0
0005947f: NF := 63:63[#1204]
00059485: when NF <> VF goto %00058826
0006cf6e: goto %00059489

00059489:
0005948e: R0 := pad:64[mem[R31 + 0x80, el]:u32]
00059493: R1 := 1
0005949a: mem := mem with [R31 + 0x98, el]:u64 <- 0
000594a0: R0 := pad:64[31:0[R0] ^ 1]
000594a8: mem := mem with [R31 + 0xB4, el]:u32 <- 31:0[R1]
0006cf6f: goto %00058924

00058924:
0005892b: #1174 := 31:0[R20] + 0
00058930: VF := extend:33[#1174] <> extend:33[31:0[R20]] + 0
00058935: CF := pad:33[#1174] <> pad:33[31:0[R20]] - 0x100000000
00058939: ZF := #1174 = 0
0005893d: NF := 31:31[#1174]
00058943: #1175 := 31:0[R0] + 0
0005896b: goto %00058965

00058965:
00058967: when NF = VF & ~ZF goto %0005894a
00058968: goto %0005895a

0005895a:
0005895b: VF := 0
0005895e: CF := 0
00058961: ZF := 1
00058964: NF := 0
0005896a: goto %00058966

0005894a:
0005894b: VF := extend:33[#1175] <> extend:33[31:0[R0]] + 0
00058950: CF := pad:33[#1175] <> pad:33[31:0[R0]] - 0x100000000
00058954: ZF := #1175 = 0
00058958: NF := 31:31[#1175]
00058969: goto %00058966

00058966:
00058971: when ZF goto %0005896f
0006cf70: goto %00058994

0005896f:
00058979: R22 := mem[R31 + 0x88, el]:u64
00058980: R20 := mem[R31 + 0xA8, el]:u64
00058987: R21 := mem[R31 + 0xD0, el]:u64
0005898e: R27 := mem[R31 + 0xF0, el]:u64
00058992: goto %00058857

00059dca:
00059dd3: #1219 := R31 + 0x30
00059dd8: R21 := mem[#1219, el]:u64
00059ddd: R22 := mem[#1219 + 8, el]:u64
00059de3: #1220 := R31 + 0x40
00059de8: R23 := mem[#1220, el]:u64
00059ded: R24 := mem[#1220 + 8, el]:u64
00059df1: goto %0005879b

0005879b:
000587a3: R28 := 3
0006cf71: goto %000587a5

000587a5:
000587aa: R19 := mem[R19 + 0xFB8, el]:u64
000587b1: R0 := mem[R31 + 0xF8, el]:u64
000587b8: R1 := mem[R19, el]:u64
000587be: #1166 := ~R1
000587c3: #1167 := R0 + ~R1 + 1
000587c9: VF := extend:65[#1167] <> extend:65[R0] + extend:65[#1166] + 1
000587cf: CF := pad:65[#1167] <> pad:65[R0] + pad:65[#1166] + 1
000587d3: ZF := #1167 = 0
000587d7: NF := 63:63[#1167]
000587db: R0 := #1167
000587e0: R1 := 0
000587e6: when ZF <> 1 goto %000587e4
0006cf72: goto %00059d06

000587e4:
000587ed: #1168 := R31 + 0x30
000587f3: mem := mem with [#1168, el]:u64 <- R21
000587f9: mem := mem with [#1168 + 8, el]:u64 <- R22
000587ff: #1169 := R31 + 0x40
00058805: mem := mem with [#1169, el]:u64 <- R23
0005880b: mem := mem with [#1169 + 8, el]:u64 <- R24
00058811: #1170 := R31 + 0x50
00058817: mem := mem with [#1170, el]:u64 <- R25
0005881d: mem := mem with [#1170 + 8, el]:u64 <- R26
00058822: R30 := 0x100DC
00058824: call @__stack_chk_fail with return %00058826

00058826:
00058829: R0 := 1
00058830: mem := mem with [R31 + 0x98, el]:u64 <- 0
00058838: mem := mem with [R31 + 0xB4, el]:u32 <- 31:0[R0]
0005883f: R22 := mem[R31 + 0x88, el]:u64
00058846: R20 := mem[R31 + 0xA8, el]:u64
0005884d: R21 := mem[R31 + 0xD0, el]:u64
00058854: R27 := mem[R31 + 0xF0, el]:u64
00058859: goto %00058857

00058857:
0005885f: R0 := pad:64[mem[R31 + 0x80, el]:u32]
00058865: when 31:0[R0] = 0 goto %00058863
0006cf73: goto %000594ee

00058863:
0005886b: R28 := 1
00058870: goto %0005886e

000594ee:
000594f5: R0 := R27
000594fa: R1 := 0x13000
00059500: R1 := R1 + 0x8F8
00059505: R30 := 0xFD5C
00059507: call @strstr with return %00059509

00059509:
0005950d: R23 := R0 + 3
00059512: R1 := 0x22
00059518: R0 := R23
0005951d: R30 := 0xFD6C
0005951f: call @strchr with return %00059521

00059521:
00059526: R2 := R0 + ~R23 + 1
0005952b: R28 := 1
00059531: #1205 := R2 + 0
00059536: VF := extend:65[#1205] <> extend:65[R2] + 0
0005953b: CF := pad:65[#1205] <> pad:65[R2] - 0x10000000000000000
0005953f: ZF := #1205 = 0
00059543: NF := 63:63[#1205]
0005954a: when ~(NF = VF & ~ZF) goto %0005886e
0006cf74: goto %0005954e

0005954e:
00059551: R1 := 0
00059557: R0 := R23
0005955c: R30 := 0xFD88
0005955e: call @substr with return %00059560

00059560:
00059564: R26 := R0
00059569: R30 := 0xFD90
0005956b: call @urlencode with return %0005956d

0005956d:
00059571: R23 := R0
00059577: R0 := R26
0005957c: R30 := 0xFD9C
0005957e: call @free with return %00059580

00059580:
00059585: R0 := mem[R21 + 0x30, el]:u64
0005958a: R30 := 0xFDA4
0005958c: call @urlencode with return %0005958e

0005958e:
00059592: R26 := R0
00059597: R0 := 0x1000
0005959f: mem := mem with [R31 + 0x80, el]:u64 <- R26
000595a4: R30 := 0xFDB4
000595a6: call @new with return %000595a8

000595a8:
000595ac: R27 := R0
000595b3: R5 := mem[R31 + 0xD8, el]:u64
000595bb: mem := mem with [R31, el]:u64 <- R5
000595c1: mem := mem with [R31 + 8, el]:u64 <- R26
000595c7: R6 := R23
000595cd: R7 := R5
000595d3: R2 := pad:64[31:0[R28]]
000595d8: R4 := 0x13000
000595dd: R3 := 0xFFFFFFFFFFFFFFFF
000595e3: R4 := R4 + 0x900
000595e8: R1 := 0xFFF
000595ed: R30 := 0xFDE0
000595ef: call @__snprintf_chk with return %000595f1

000595f1:
000595f4: R0 := 0x27000
000595fb: R0 := mem[R0 + 0xF78, el]:u64
00059602: R0 := pad:64[mem[R0, el]:u32]
00059609: when 31:0[R0] <> 0 goto %00059607
0006cf75: goto %0005962c

00059607:
00059611: R2 := mem[R21 + 0x30, el]:u64
00059617: R0 := pad:64[31:0[R28]]
0005961c: R1 := 0x13000
00059622: R1 := R1 + 0x928
00059627: R30 := 0x10110
00059629: call @__printf_chk with return %0005962b

0005962b:
0005962e: goto %0005962c

0005962c:
00059632: R0 := 0x32
00059637: R30 := 0xFDF8
00059639: call @new with return %0005963b

0005963b:
0005963f: R28 := R0
00059645: R0 := R27
0005964a: R30 := 0xFE04
0005964c: call @strlen with return %0005964e

0005964e:
00059652: R5 := pad:64[31:0[R0]]
00059657: R4 := 0x13000
0005965d: R4 := R4 + 0x958
00059662: R3 := 0xFFFFFFFFFFFFFFFF
00059667: R2 := 1
0005966c: R1 := 0x32
00059672: R0 := R28
00059677: R30 := 0xFE24
00059679: call @__snprintf_chk with return %0005967b

0005967b:
0005967e: R30 := 0xFE28
00059680: call @new_rr_data with return %00059682

00059682:
00059686: R23 := R0
0005968c: R0 := R21
00059691: R30 := 0xFE34
00059693: call @dup_rr_data with return %00059695

00059695:
00059699: R26 := R0
000596a0: R0 := mem[R0 + 0x28, el]:u64
000596a5: R30 := 0xFE40
000596a7: call @free with return %000596a9

000596a9:
000596ac: R0 := 0x13000
000596b2: R0 := R0 + 0x960
000596b7: R30 := 0xFE4C
000596b9: call @strdup with return %000596bb

000596bb:
000596c0: R2 := mem[R21 + 0x30, el]:u64
000596c8: mem := mem with [R26 + 0x28, el]:u64 <- R0
000596cf: R0 := mem[R26 + 8, el]:u64
000596d4: R3 := 1
000596d9: R1 := 0x13000
000596df: R1 := R1 + 0x968
000596e4: R30 := 0xFE68
000596e6: call @hlist_mod with return %000596e8

000596e8:
000596ed: R0 := mem[R26 + 8, el]:u64
000596f2: R3 := 1
000596f7: R2 := 0x13000
000596fc: R1 := 0x12000
00059702: R2 := R2 + 0x970
00059708: R1 := R1 + 0x928
0005970d: R30 := 0xFE84
0005970f: call @hlist_mod with return %00059711

00059711:
00059716: R0 := mem[R26 + 8, el]:u64
0005971c: R2 := R28
00059721: R1 := 0x12000
00059727: R1 := R1 + 0x918
0005972c: R3 := 1
00059731: R30 := 0xFE9C
00059733: call @hlist_mod with return %00059735

00059735:
00059739: R0 := R28
0005973e: R30 := 0xFEA4
00059740: call @free with return %00059742

00059742:
00059747: R21 := mem[R31 + 0x78, el]:u64
0005974d: R0 := R21
00059752: R30 := 0xFEB0
00059754: call @proxy_connect with return %00059756

00059756:
0005975a: R4 := pad:64[31:0[R0]]
00059760: R3 := R21
00059766: R2 := R23
0005976c: R1 := R26
00059772: R0 := R31 + 0xEC
0005977a: mem := mem with [R31 + 0xEC, el]:u32 <- 31:0[R4]
0005977f: R30 := 0xFECC
00059781: call @proxy_authenticate with return %00059783

00059783:
00059787: when 31:0[R0] = 0 goto %00059785
0006cf76: goto %00059a52

00059a52:
00059a57: R0 := pad:64[mem[R23 + 0x10, el]:u32]
00059a5d: #1207 := 31:0[R0] - 0x197
00059a62: VF := extend:33[#1207] <> extend:33[31:0[R0]] - 0x197
00059a67: CF := pad:33[#1207] <> pad:33[31:0[R0]] + 0xFFFFFE69
00059a6b: ZF := #1207 = 0
00059a6f: NF := 31:31[#1207]
00059a74: when ZF goto %000599fb
0006cf77: goto %00059785

000599fb:
000599fe: R0 := 0x27000
00059a05: R0 := mem[R0 + 0xF78, el]:u64
00059a0c: R0 := pad:64[mem[R0, el]:u32]
00059a11: when 31:0[R0] = 0 goto %000597d5
0006cf78: goto %00059a15

00059a15:
00059a18: R1 := 0x13000
00059a1d: R0 := 1
00059a23: R1 := R1 + 0x998
00059a28: R30 := 0x10208
00059a2a: call @__printf_chk with return %00059a2c

00059a2c:
00059a2e: goto %000597d5

00059785:
0005978d: R0 := 0x27000
00059794: R0 := mem[R0 + 0xF78, el]:u64
0005979b: R0 := pad:64[mem[R0, el]:u32]
000597a2: when 31:0[R0] <> 0 goto %000597a0
0006cf79: goto %000597bd

000597a0:
000597a8: R1 := 0x13000
000597ad: R0 := 1
000597b3: R1 := R1 + 0x9D0
000597b8: R30 := 0x101E4
000597ba: call @__printf_chk with return %000597bc

000597bc:
000597bf: goto %000597bd

000597bd:
000597c5: R0 := pad:64[mem[R31 + 0xEC, el]:u32]
000597ca: R30 := 0xFEF4
000597cc: call @close with return %000597ce

000597ce:
000597d3: mem := mem with [R31 + 0xEC, el]:u32 <- 0
0006cf7a: goto %000597d5

000597d5:
000597d9: R0 := R23
000597de: R30 := 0xFF00
000597e0: call @reset_rr_data with return %000597e2

000597e2:
000597e7: R0 := pad:64[mem[R31 + 0xEC, el]:u32]
000597ee: when 31:0[R0] <> 0 goto %000597ec
0006cf7b: goto %00059800

000597ec:
000597f5: R1 := R26
000597fa: R30 := 0x10154
000597fc: call @headers_send with return %000597fe

000597fe:
00059802: when 31:0[R0] = 0 goto %00059800
0006cf7c: goto %00059881

00059881:
00059885: R0 := R27
0005988a: R30 := 0x10160
0005988c: call @strlen with return %0005988e

0005988e:
00059892: R2 := R0
00059899: R0 := pad:64[mem[R31 + 0xEC, el]:u32]
0005989f: R1 := R27
000598a4: R30 := 0x10170
000598a6: call @write with return %000598a8

000598a8:
000598ab: when R0 = 0 goto %00059800
0006cf7d: goto %000598af

000598af:
000598b4: R0 := pad:64[mem[R31 + 0xEC, el]:u32]
000598ba: R1 := R23
000598bf: R30 := 0x10180
000598c1: call @headers_recv with return %000598c3

000598c3:
000598c6: when 31:0[R0] = 0 goto %00059800
0006cf7e: goto %000598ca

000598ca:
000598cd: R0 := 0x27000
000598d4: R0 := mem[R0 + 0xF78, el]:u64
000598db: R0 := pad:64[mem[R0, el]:u32]
000598e2: when 31:0[R0] <> 0 goto %000598e0
0006cf7f: goto %000598f4

000598e0:
000598ea: R0 := mem[R23 + 8, el]:u64
000598ef: R30 := 0x10288
000598f1: call @hlist_dump with return %000598f3

000598f3:
000598f6: goto %000598f4

000598f4:
000598fc: R0 := mem[R31 + 0x98, el]:u64
00059903: R1 := mem[R31 + 0xC8, el]:u64
0005990a: R0 := R0 | R1
00059911: when R0 <> 0 goto %0005990f
0006cf80: goto %000599ab

0005990f:
00059917: R0 := 0x14
0005991c: R30 := 0x10234
0005991e: call @new with return %00059920

00059920:
00059925: R1 := mem[R31 + 0x98, el]:u64
0005992b: R21 := R0
00059932: R2 := mem[R31 + 0xC8, el]:u64
00059938: #1206 := R1 + 0
0005993d: VF := extend:65[#1206] <> extend:65[R1] + 0
00059942: CF := pad:65[#1206] <> pad:65[R1] - 0x10000000000000000
00059946: ZF := #1206 = 0
0005994a: NF := 63:63[#1206]
0005994f: R3 := 0xFFFFFFFFFFFFFFFF
00059954: R4 := 0x13000
00059962: when ZF <> 1 goto %0005995a
00059963: goto %0005995e

0005995e:
0005995f: R5 := R2
00059965: goto %00059961

0005995a:
0005995b: R5 := R1
00059964: goto %00059961

00059961:
0005996b: R4 := R4 + 0xA08
00059970: R2 := 1
00059975: R1 := 0x14
0005997a: R30 := 0x10260
0005997c: call @__snprintf_chk with return %0005997e

0005997e:
00059983: R0 := mem[R23 + 8, el]:u64
00059989: R2 := R21
0005998e: R1 := 0x12000
00059993: R3 := 1
00059999: R1 := R1 + 0x918
0005999e: R30 := 0x10278
000599a0: call @hlist_mod with return %000599a2

000599a2:
000599a8: mem := mem with [R23 + 8, el]:u64 <- R0
000599ad: goto %000599ab

000599ab:
000599b3: R0 := pad:64[mem[R31 + 0xB4, el]:u32]
000599b9: R1 := R23
000599c1: mem := mem with [R23 + 0x14, el]:u32 <- 31:0[R0]
000599c7: R0 := R20
000599cc: R24 := 0
000599d1: R28 := 3
000599d6: R30 := 0x101C0
000599d8: call @copy_rr_data with return %000599da

000599da:
000599df: R0 := pad:64[mem[R22, el]:u32]
000599e4: R30 := 0x101C8
000599e6: call @close with return %000599e8

000599e8:
000599ed: R0 := pad:64[mem[R31 + 0xEC, el]:u32]
000599f5: mem := mem with [R22, el]:u32 <- 31:0[R0]
000599f9: goto %0005983e

00059800:
00059808: R0 := 0x27000
0005980d: R28 := 1
00059814: R0 := mem[R0 + 0xF78, el]:u64
0005981b: R0 := pad:64[mem[R0, el]:u32]
00059822: when 31:0[R0] <> 0 goto %00059820
0006cf81: goto %0005983e

00059820:
00059829: R0 := pad:64[31:0[R28]]
0005982e: R1 := 0x13000
00059834: R1 := R1 + 0xA10
00059839: R30 := 0x10148
0005983b: call @__printf_chk with return %0005983d

0005983d:
00059840: goto %0005983e

0005983e:
00059845: R0 := R26
0005984a: R30 := 0xFF24
0005984c: call @free with return %0005984e

0005984e:
00059852: R0 := R23
00059857: R30 := 0xFF2C
00059859: call @free with return %0005985b

0005985b:
0005985f: R0 := R27
00059864: R30 := 0xFF34
00059866: call @free with return %00059868

00059868:
0005986d: R0 := mem[R31 + 0x80, el]:u64
00059872: R30 := 0xFF3C
00059874: call @free with return %00059876

00059876:
0005987b: R27 := mem[R31 + 0xF0, el]:u64
0005987f: goto %0005886e

0005886e:
00058875: R0 := R27
0005887a: R30 := 0xFC18
0005887c: call @free with return %0005887e

0005887e:
00058883: R0 := mem[R31 + 0xD8, el]:u64
00058888: R30 := 0xFC20
0005888a: call @free with return %0005888c

0005888c:
0005888f: goto %0005888d

0005888d:
00058893: R0 := 0x27000
0005889a: R0 := mem[R0 + 0xF78, el]:u64
000588a1: R0 := pad:64[mem[R0, el]:u32]
000588a7: when 31:0[R24] = 0 goto %000588a5
0006cf82: goto %00058dec

00058dec:
00058df3: when 31:0[R0] = 0 goto %00058df1
0006cf83: goto %0005906d

0005906d:
00059071: R2 := pad:64[31:0[R24]]
00059076: R1 := 0x13000
0005907b: R0 := 1
00059081: R1 := R1 + 0xA58
00059086: R30 := 0xFC6C
00059088: call @__printf_chk with return %0005908a

0005908a:
0005908f: R0 := mem[R20 + 8, el]:u64
00059094: R30 := 0xFC74
00059096: call @hlist_dump with return %00058df1

00058df1:
00058dfb: R0 := pad:64[mem[R31 + 0xB0, el]:u32]
00058e01: R1 := R20
00058e06: R30 := 0xFC80
00058e08: call @headers_send with return %00058e0a

00058e0a:
00058e0e: when 31:0[R0] = 0 goto %00058e0c
0006cf84: goto %00059019

00058e0c:
00058e14: R0 := 0x27000
00058e1b: R0 := mem[R0 + 0xF78, el]:u64
00058e22: R0 := pad:64[mem[R0, el]:u32]
00058e29: when 31:0[R0] <> 0 goto %00058e27
0006cf85: goto %00058e44

00058e27:
00058e2f: R1 := 0x13000
00058e34: R0 := 1
00058e3a: R1 := R1 + 0xA88
00058e3f: R30 := 0x10090
00058e41: call @__printf_chk with return %00058e43

00058e43:
00058e46: goto %00058e44

00058e44:
00058e4b: R0 := R25
00058e50: R28 := 0x8000
00058e55: R30 := 0xFFF4
00058e57: call @free with return %00058e59

00058e59:
00058e5d: #1183 := R31 + 0x30
00058e62: R21 := mem[#1183, el]:u64
00058e67: R22 := mem[#1183 + 8, el]:u64
00058e6d: #1184 := R31 + 0x40
00058e72: R23 := mem[#1184, el]:u64
00058e77: R24 := mem[#1184 + 8, el]:u64
00058e7d: #1185 := R31 + 0x50
00058e82: R25 := mem[#1185, el]:u64
00058e87: R26 := mem[#1185 + 8, el]:u64
00058e8b: goto %000587a5

00059019:
0005901e: R0 := pad:64[mem[R31 + 0xB0, el]:u32]
00059025: R2 :=

0005902b: R1 := R25
00059030: R30 := 0xFC94
00059032: call @write with return %00059034

00059034:
00059038: #1190 := 31:0[R0] + 0
0005903d: VF := extend:33[#1190] <> extend:33[31:0[R0]] + 0
00059042: CF := pad:33[#1190] <> pad:33[31:0[R0]] - 0x100000000
00059046: ZF := #1190 = 0
0005904a: NF := 31:31[#1190]
0005904f: R0 := 0x27000
00059056: R0 := mem[R0 + 0xF78, el]:u64
0005905d: when ~(NF = VF & ~ZF) goto %00059009
0006cf86: goto %00059061

00059009:
0005900e: R0 := pad:64[mem[R0, el]:u32]
00059013: R28 := 0x8000
00059017: goto %000588a5

00059061:
00059066: R0 := pad:64[mem[R0, el]:u32]
0005906b: R28 := 2
0006cf87: goto %000588a5

000588a5:
000588ae: when 31:0[R0] = 0 goto %000588ac
0006cf88: goto %00059ce9

00059ce9:
00059cec: R1 := 0x13000
00059cf2: R2 := pad:64[31:0[R28]]
00059cf8: R1 := R1 + 0xAB0
00059cfd: R0 := 1
00059d02: R30 := 0xFCC4
00059d04: call @__printf_chk with return %000588ac

000588ac:
000588b5: R0 := R25
000588ba: R30 := 0xFCCC
000588bc: call @free with return %000588be

000588be:
000588c2: #1171 := R31 + 0x30
000588c7: R21 := mem[#1171, el]:u64
000588cc: R22 := mem[#1171 + 8, el]:u64
000588d2: #1172 := R31 + 0x40
000588d7: R23 := mem[#1172, el]:u64
000588dc: R24 := mem[#1172 + 8, el]:u64
000588e2: #1173 := R31 + 0x50
000588e7: R25 := mem[#1173, el]:u64
000588ec: R26 := mem[#1173 + 8, el]:u64
000588f0: goto %000587a5

00059d06:
00059d0a: R0 := pad:64[31:0[R28]]
00059d10: #1213 := R31 + 0x10
00059d15: R29 := mem[#1213, el]:u64
00059d1a: R30 := mem[#1213 + 8, el]:u64
00059d20: #1214 := R31 + 0x20
00059d25: R19 := mem[#1214, el]:u64
00059d2a: R20 := mem[#1214 + 8, el]:u64
00059d30: #1215 := R31 + 0x60
00059d35: R27 := mem[#1215, el]:u64
00059d3a: R28 := mem[#1215 + 8, el]:u64
00059d40: R31 := R31 + 0x100
00059d45: call R30 with noreturn

0006cf89: sub select(select_result)
0006d172: select_result :: out u32 = low:32[R0]

000544aa:
00064da9: R16 := 0x27000
00064db0: R17 := mem[R16 + 0xEC0, el]:u64
00064db6: R16 := R16 + 0xEC0
00064dbb: call R17 with noreturn

0006cf8a: sub setgid(setgid_arg1, setgid_result)
0006d173: setgid_arg1 :: in u32 = low:32[R0]
0006d174: setgid_result :: out u32 = low:32[R0]

00061134:
00064baf: R16 := 0x27000
00064bb6: R17 := mem[R16 + 0xE08, el]:u64
00064bbc: R16 := R16 + 0xE08
00064bc1: call R17 with noreturn

0006cf8b: sub setsid(setsid_result)
0006d175: setsid_result :: out u32 = low:32[R0]

00063a77:
00064dbf: R16 := 0x27000
00064dc6: R17 := mem[R16 + 0xEC8, el]:u64
00064dcc: R16 := R16 + 0xEC8
00064dd1: call R17 with noreturn

0006cf8c: sub setsockopt(setsockopt_fd, setsockopt_level, setsockopt_optnmae, setsockopt_optval, setsockopt_len, setsockopt_result)
0006d176: setsockopt_fd :: in u32 = low:32[R0]
0006d177: setsockopt_level :: in u32 = low:32[R1]
0006d178: setsockopt_optnmae :: in u32 = low:32[R2]
0006d179: setsockopt_optval :: in out u64 = R3
0006d17a: setsockopt_len :: in u64 = R4
0006d17b: setsockopt_result :: out u32 = low:32[R0]

0004cf7d:
00064931: R16 := 0x27000
00064938: R17 := mem[R16 + 0xD20, el]:u64
0006493e: R16 := R16 + 0xD20
00064943: call R17 with noreturn

0006cf8d: sub setuid(setuid_arg1, setuid_result)
0006d17c: setuid_arg1 :: in u32 = low:32[R0]
0006d17d: setuid_result :: out u32 = low:32[R0]

00061142:
0006470b: R16 := 0x27000
00064712: R17 := mem[R16 + 0xC58, el]:u64
00064718: R16 := R16 + 0xC58
0006471d: call R17 with noreturn

0006cf8e: sub sighandler(sighandler_result)
0006d17e: sighandler_result :: out u32 = low:32[R0]

00056a43:
00056a47: #1046 := R31 - 0x20
00056a4d: mem := mem with [#1046, el]:u64 <- R29
00056a53: mem := mem with [#1046 + 8, el]:u64 <- R30
00056a57: R31 := #1046
00056a5d: R3 := pad:64[31:0[R0]]
00056a63: R29 := R31
00056a6b: mem := mem with [R31 + 0x10, el]:u64 <- R19
00056a70: R19 := 0x28000
00056a77: R0 := pad:64[mem[R19 + 0x4D8, el]:u32]
00056a7e: when 31:0[R0] <> 0 goto %00056a7c
0006cf8f: goto %0005aa29

00056a7c:
00056a84: R2 := 0x13000
00056a89: R1 := 1
00056a8f: R2 := R2 + 0xE60
00056a94: R0 := 6
00056a99: R30 := 0x10508
00056a9b: call @__syslog_chk with return %00056a9d

00056a9d:
00056aa0: goto %00056a9e

0005aa29:
0005aa2c: R2 := 0x13000
0005aa31: R1 := 1
0005aa37: R2 := R2 + 0xE30
0005aa3c: R0 := 6
0005aa41: R30 := 0x104C8
0005aa43: call @__syslog_chk with return %00056a9e

00056a9e:
00056aa5: R1 := R19 + 0x4D8
00056aac: R0 := pad:64[mem[R19 + 0x4D8, el]:u32]
00056ab2: R2 := pad:64[31:0[R0] + 2]
00056ab9: R1 := pad:64[mem[R1 + 4, el]:u32]
00056ac0: R1 := pad:64[31:0[R0] | 31:0[R1]]
00056ac6: #1047 := 31:0[R1] + 0
00056acb: VF := extend:33[#1047] <> extend:33[31:0[R1]] + 0
00056ad0: CF := pad:33[#1047] <> pad:33[31:0[R1]] - 0x100000000
00056ad4: ZF := #1047 = 0
00056ad8: NF := 31:31[#1047]
00056ae6: when ZF <> 1 goto %00056ade
00056ae7: goto %00056ae2

00056ae2:
00056ae3: R0 := pad:64[31:0[R0] + 1]
00056ae9: goto %00056ae5

00056ade:
00056adf: R0 := pad:64[31:0[R2]]
00056ae8: goto %00056ae5

00056ae5:
00056af1: mem := mem with [R19 + 0x4D8, el]:u32 <- 31:0[R0]
00056af8: R19 := mem[R31 + 0x10, el]:u64
00056aff: R29 := mem[R31, el]:u64
00056b04: R30 := mem[R31 + 8, el]:u64
00056b08: R31 := R31 + 0x20
00056b0d: call R30 with noreturn

0006cf90: sub signal(signal_result)
0006d17f: signal_result :: out u32 = low:32[R0]

000612c2:
00064881: R16 := 0x27000
00064888: R17 := mem[R16 + 0xCE0, el]:u64
0006488e: R16 := R16 + 0xCE0
00064893: call R17 with noreturn

0006cf91: sub so_closed(so_closed_result)
0006d180: so_closed_result :: out u32 = low:32[R0]

0004b7c7:
0004b7cb: #362 := R31 - 0x30
0004b7d1: mem := mem with [#362, el]:u64 <- R29
0004b7d7: mem := mem with [#362 + 8, el]:u64 <- R30
0004b7db: R31 := #362
0004b7e1: #363 := 31:0[R0] + 1
0004b7e6: VF := extend:33[#363] <> extend:33[31:0[R0]] + 1
0004b7eb: CF := pad:33[#363] <> pad:33[31:0[R0]] + 1
0004b7ef: ZF := #363 = 0
0004b7f3: NF := 31:31[#363]
0004b7f9: R29 := R31
0004b7ff: #364 := R31 + 0x10
0004b805: mem := mem with [#364, el]:u64 <- R19
0004b80b: mem := mem with [#364 + 8, el]:u64 <- R20
0004b810: R19 := 0x27000
0004b817: R1 := mem[R19 + 0xFB8, el]:u64
0004b81e: R2 := mem[R1, el]:u64
0004b826: mem := mem with [R31 + 0x28, el]:u64 <- R2
0004b82b: R2 := 0
0004b831: when ZF goto %0004b82f
0006cf92: goto %0004ce36

0004ce36:
0004ce3a: R1 := R31 + 0x27
0004ce3f: R3 := 0x42
0004ce44: R2 := 1
0004ce49: R30 := 0xABE0
0004ce4b: call @recv with return %0004ce4d

0004ce4d:
0004ce51: when 31:0[R0] <> 0 goto %0004cdb4
0006cf93: goto %0004b82f

0004cdb4:
0004cdb8: #482 := 31:0[R0] + 1
0004cdbd: VF := extend:33[#482] <> extend:33[31:0[R0]] + 1
0004cdc2: CF := pad:33[#482] <> pad:33[31:0[R0]] + 1
0004cdc6: ZF := #482 = 0
0004cdca: NF := 31:31[#482]
0004cdcf: R20 := 0
0004cdd4: when ZF <> 1 goto %0004b839
0006cf94: goto %0004cdd8

0004cdd8:
0004cddb: R30 := 0xAC20
0004cdde: call @__errno_location with return %0004cde0

0004cde0:
0004cde5: R0 := pad:64[mem[R0, el]:u32]
0004cdeb: #483 := 31:0[R0] - 2
0004cdf0: VF := extend:33[#483] <> extend:33[31:0[R0]] - 2
0004cdf5: CF := pad:33[#483] <> pad:33[31:0[R0]] + 0xFFFFFFFE
0004cdf9: ZF := #483 = 0
0004cdfd: NF := 31:31[#483]
0004ce03: #484 := 31:0[R0] - 0xB
0004ce29: goto %0004ce23

0004ce23:
0004ce25: when ZF <> 1 goto %0004ce08
0004ce26: goto %0004ce18

0004ce18:
0004ce19: VF := 0
0004ce1c: CF := 0
0004ce1f: ZF := 1
0004ce22: NF := 0
0004ce28: goto %0004ce24

0004ce08:
0004ce09: VF := extend:33[#484] <> extend:33[31:0[R0]] - 0xB
0004ce0e: CF := pad:33[#484] <> pad:33[31:0[R0]] + 0xFFFFFFF5
0004ce12: ZF := #484 = 0
0004ce16: NF := 31:31[#484]
0004ce27: goto %0004ce24

0004ce24:
0004ce2e: when ZF goto %0004b839
0006cf95: goto %0004ce32

0004ce32:
0004ce34: goto %0004b82f

0004b82f:
0004b837: R20 := 1
0006cf96: goto %0004b839

0004b839:
0004b83e: R19 := mem[R19 + 0xFB8, el]:u64
0004b845: R0 := mem[R31 + 0x28, el]:u64
0004b84c: R1 := mem[R19, el]:u64
0004b852: #365 := ~R1
0004b857: #366 := R0 + ~R1 + 1
0004b85d: VF := extend:65[#366] <> extend:65[R0] + extend:65[#365] + 1
0004b863: CF := pad:65[#366] <> pad:65[R0] + pad:65[#365] + 1
0004b867: ZF := #366 = 0
0004b86b: NF := 63:63[#366]
0004b86f: R0 := #366
0004b874: R1 := 0
0004b87a: when ZF <> 1 goto %0004b878
0006cf97: goto %0004cd89

0004b878:
0004b880: R30 := 0xAC38
0004b882: call @__stack_chk_fail with return %0006cf98

0006cf98:
0006cf99: call @so_recvln with noreturn

0004cd89:
0004cd8d: R0 := pad:64[31:0[R20]]
0004cd93: #481 := R31 + 0x10
0004cd98: R19 := mem[#481, el]:u64
0004cd9d: R20 := mem[#481 + 8, el]:u64
0004cda4: R29 := mem[R31, el]:u64
0004cda9: R30 := mem[R31 + 8, el]:u64
0004cdad: R31 := R31 + 0x30
0004cdb2: call R30 with noreturn

0006cf9a: sub so_connect(so_connect_result)
0006d181: so_connect_result :: out u32 = low:32[R0]

0004b44a:
0004b44e: #345 := R31 - 0x60
0004b454: mem := mem with [#345, el]:u64 <- R29
0004b45a: mem := mem with [#345 + 8, el]:u64 <- R30
0004b45e: R31 := #345
0004b463: R2 := 0
0004b469: R29 := R31
0004b46f: #346 := R31 + 0x20
0004b475: mem := mem with [#346, el]:u64 <- R21
0004b47b: mem := mem with [#346 + 8, el]:u64 <- R22
0004b480: R22 := 0x27000
0004b486: R21 := pad:64[31:0[R0]]
0004b48d: R0 := mem[R22 + 0xFB8, el]:u64
0004b493: #347 := R31 + 0x10
0004b499: mem := mem with [#347, el]:u64 <- R19
0004b49f: mem := mem with [#347 + 8, el]:u64 <- R20
0004b4a5: R20 := pad:64[31:0[R1]]
0004b4ac: R3 := mem[R0, el]:u64
0004b4b4: mem := mem with [R31 + 0x58, el]:u64 <- R3
0004b4b9: R3 := 0
0004b4be: R1 := 1
0004b4c3: R0 := 2
0004b4c8: R30 := 0xA81C
0004b4cb: call @socket with return %0004b4cd

0004b4cd:
0004b4d1: when 31:31[R0] goto %0004b4cf
0006cf9b: goto %0004d169

0004b4cf:
0004b4d7: R0 := 0x27000
0004b4dc: R19 := 0xFFFFFFFF
0004b4e3: R0 := mem[R0 + 0xF78, el]:u64
0004b4ea: R0 := pad:64[mem[R0, el]:u32]
0004b4f0: when 31:0[R0] = 0 goto %0004b4ee
0006cf9c: goto %0004d025

0004d025:
0004d028: R30 := 0xA8C8
0004d02a: call @__errno_location with return %0004d02c

0004d02c:
0004d031: R0 := pad:64[mem[R0, el]:u32]
0004d036: R30 := 0xA8D0
0004d038: call @strerror with return %0004d03a

0004d03a:
0004d03e: R2 := R0
0004d043: R1 := 0x12000
0004d048: R0 := 1
0004d04e: R1 := R1 + 0x428
0004d053: R30 := 0xA8E4
0004d055: call @__printf_chk with return %0004d057

0004d057:
0004d059: goto %0004b4ee

0004d169:
0004d16c: R3 := 2
0004d175: R20 := pad:64[23:16[R20].31:24[R20].7:0[R20].15:8[R20]]
0004d17b: R19 := pad:64[31:0[R0]]
0004d180: R2 := 0
0004d185: R1 := 3
0004d18d: mem := mem with [R31 + 0x30, el]:u64 <- R23
0004d193: R23 := R31 + 0x48
0004d19b: mem := mem with [R31 + 0x48, el]:u16 <- 15:0[R3]
0004d1a3: mem := mem with [R31 + 0x4A, el]:u16 <- 15:0[R20]
0004d1ab: mem := mem with [R31 + 0x4C, el]:u32 <- 31:0[R21]
0004d1b2: mem := mem with [R31 + 0x50, el]:u64 <- 0
0004d1b7: R30 := 0xA850
0004d1ba: call @fcntl with return %0004d1bc

0004d1bc:
0004d1c0: R20 := pad:64[31:0[R0]]
0004d1c5: when 31:31[R0] goto %0004d05b
0006cf9d: goto %0004d1c9

0004d05b:
0004d05e: R0 := 0x27000
0004d065: R0 := mem[R0 + 0xF78, el]:u64
0004d06c: R0 := pad:64[mem[R0, el]:u32]
0004d073: when 31:0[R0] <> 0 goto %0004d071
0006cf9e: goto %0004d0a9

0004d071:
0004d079: R30 := 0xA978
0004d07b: call @__errno_location with return %0004d07d

0004d07d:
0004d082: R0 := pad:64[mem[R0, el]:u32]
0004d087: R30 := 0xA980
0004d089: call @strerror with return %0004d08b

0004d08b:
0004d08f: R2 := R0
0004d094: R1 := 0x12000
0004d099: R0 := 1
0004d09f: R1 := R1 + 0x440
0004d0a4: R30 := 0xA994
0004d0a6: call @__printf_chk with return %0004d0a8

0004d0a8:
0004d0ab: goto %0004d0a9

0004d1c9:
0004d1cd: R1 := R23
0004d1d3: R0 := pad:64[31:0[R19]]
0004d1d8: R2 := 0x10
0004d1dd: R30 := 0xA868
0004d1e0: call @connect with return %0004d1e2

0004d1e2:
0004d1e5: when 31:31[R0] goto %0004d0c9
0006cf9f: goto %0004d1e9

0004d0c9:
0004d0cc: R0 := 0x27000
0004d0d3: R0 := mem[R0 + 0xF78, el]:u64
0004d0da: R0 := pad:64[mem[R0, el]:u32]
0004d0df: when 31:0[R0] = 0 goto %0004d0a9
0006cfa0: goto %0004d0e3

0004d0e3:
0004d0e6: R30 := 0xA920
0004d0e8: call @__errno_location with return %0004d0ea

0004d0ea:
0004d0ef: R0 := pad:64[mem[R0, el]:u32]
0004d0f4: R30 := 0xA928
0004d0f6: call @strerror with return %0004d0f8

0004d0f8:
0004d0fc: R2 := R0
0004d101: R1 := 0x12000
0004d106: R0 := 1
0004d10c: R1 := R1 + 0x460
0004d111: R30 := 0xA93C
0004d113: call @__printf_chk with return %0004d115

0004d115:
0004d117: goto %0004d0a9

0004d1e9:
0004d1ee: R2 := pad:64[31:12[R20].0.10:0[R20]]
0004d1f4: R0 := pad:64[31:0[R19]]
0004d1f9: R1 := 4
0004d1fe: R30 := 0xA87C
0004d200: call @fcntl with return %0004d202

0004d202:
0004d205: when 31:31[R0] goto %0004d119
0006cfa1: goto %0004d209

0004d119:
0004d11c: R0 := 0x27000
0004d123: R0 := mem[R0 + 0xF78, el]:u64
0004d12a: R0 := pad:64[mem[R0, el]:u32]
0004d12f: when 31:0[R0] = 0 goto %0004d0a9
0006cfa2: goto %0004d133

0004d133:
0004d136: R30 := 0xA954
0004d138: call @__errno_location with return %0004d13a

0004d13a:
0004d13f: R0 := pad:64[mem[R0, el]:u32]
0004d144: R30 := 0xA95C
0004d146: call @strerror with return %0004d148

0004d148:
0004d14c: R2 := R0
0004d151: R1 := 0x12000
0004d156: R0 := 1
0004d15c: R1 := R1 + 0x470
0004d161: R30 := 0xA970
0004d163: call @__printf_chk with return %0004d165

0004d165:
0004d167: goto %0004d0a9

0004d0a9:
0004d0b0: R0 := pad:64[31:0[R19]]
0004d0b5: R19 := 0xFFFFFFFF
0004d0ba: R30 := 0xA904
0004d0bc: call @close with return %0004d0be

0004d0be:
0004d0c3: R23 := mem[R31 + 0x30, el]:u64
0004d0c7: goto %0004b4ee

0004d209:
0004d20e: R23 := mem[R31 + 0x30, el]:u64
0006cfa3: goto %0004b4ee

0004b4ee:
0004b4f8: R0 := mem[R22 + 0xFB8, el]:u64
0004b4ff: R1 := mem[R31 + 0x58, el]:u64
0004b506: R2 := mem[R0, el]:u64
0004b50c: #348 := ~R2
0004b511: #349 := R1 + ~R2 + 1
0004b517: VF := extend:65[#349] <> extend:65[R1] + extend:65[#348] + 1
0004b51d: CF := pad:65[#349] <> pad:65[R1] + pad:65[#348] + 1
0004b521: ZF := #349 = 0
0004b525: NF := 63:63[#349]
0004b529: R1 := #349
0004b52e: R2 := 0
0004b534: when ZF <> 1 goto %0004b532
0006cfa4: goto %0004cfea

0004b532:
0004b53d: mem := mem with [R31 + 0x30, el]:u64 <- R23
0004b542: R30 := 0xA9A0
0004b544: call @__stack_chk_fail with return %0006cfa5

0006cfa5:
0006cfa6: call @so_listen with noreturn

0004cfea:
0004cfee: R0 := pad:64[31:0[R19]]
0004cff4: #487 := R31 + 0x10
0004cff9: R19 := mem[#487, el]:u64
0004cffe: R20 := mem[#487 + 8, el]:u64
0004d004: #488 := R31 + 0x20
0004d009: R21 := mem[#488, el]:u64
0004d00e: R22 := mem[#488 + 8, el]:u64
0004d015: R29 := mem[R31, el]:u64
0004d01a: R30 := mem[R31 + 8, el]:u64
0004d01e: R31 := R31 + 0x60
0004d023: call R30 with noreturn

0006cfa7: sub so_dataready(so_dataready_result)
0006d182: so_dataready_result :: out u32 = low:32[R0]

0004b6fd:
0004b701: #358 := R31 - 0x30
0004b707: mem := mem with [#358, el]:u64 <- R29
0004b70d: mem := mem with [#358 + 8, el]:u64 <- R30
0004b711: R31 := #358
0004b716: R2 := 1
0004b71b: R3 := 0x42
0004b721: R29 := R31
0004b729: mem := mem with [R31 + 0x10, el]:u64 <- R19
0004b72e: R19 := 0x27000
0004b734: R1 := R31 + 0x27
0004b73b: R19 := mem[R19 + 0xFB8, el]:u64
0004b742: R4 := mem[R19, el]:u64
0004b74a: mem := mem with [R31 + 0x28, el]:u64 <- R4
0004b74f: R4 := 0
0004b754: R30 := 0xAB78
0004b756: call @recv with return %0004b758

0004b758:
0004b75c: #359 := 31:0[R0] + 0
0004b761: VF := extend:33[#359] <> extend:33[31:0[R0]] + 0
0004b766: CF := pad:33[#359] <> pad:33[31:0[R0]] - 0x100000000
0004b76a: ZF := #359 = 0
0004b76e: NF := 31:31[#359]
0004b77c: when ~(NF = VF & ~ZF) goto %0004b775
0004b77d: goto %0004b778

0004b778:
0004b779: R0 := 1
0004b77f: goto %0004b77b

0004b775:
0004b776: R0 := 0
0004b77e: goto %0004b77b

0004b77b:
0004b786: R1 := mem[R31 + 0x28, el]:u64
0004b78d: R2 := mem[R19, el]:u64
0004b793: #360 := ~R2
0004b798: #361 := R1 + ~R2 + 1
0004b79e: VF := extend:65[#361] <> extend:65[R1] + extend:65[#360] + 1
0004b7a4: CF := pad:65[#361] <> pad:65[R1] + pad:65[#360] + 1
0004b7a8: ZF := #361 = 0
0004b7ac: NF := 63:63[#361]
0004b7b0: R1 := #361
0004b7b5: R2 := 0
0004b7bb: when ZF <> 1 goto %0004b7b9
0006cfa8: goto %0004ce55

0004b7b9:
0004b7c1: R30 := 0xABA4
0004b7c3: call @__stack_chk_fail with return %0004b7c5

0004b7c5:
0006cfa9: call @so_closed with noreturn

0004ce55:
0004ce5a: R19 := mem[R31 + 0x10, el]:u64
0004ce61: R29 := mem[R31, el]:u64
0004ce66: R30 := mem[R31 + 8, el]:u64
0004ce6a: R31 := R31 + 0x30
0004ce6f: call R30 with noreturn

0006cfaa: sub so_listen(so_listen_result)
0006d183: so_listen_result :: out u32 = low:32[R0]

0004b546:
0004b54a: #350 := R31 - 0x60
0004b550: mem := mem with [#350, el]:u64 <- R29
0004b556: mem := mem with [#350 + 8, el]:u64 <- R30
0004b55a: R31 := #350
0004b55f: R2 := 0
0004b565: R29 := R31
0004b56b: #351 := R31 + 0x10
0004b571: mem := mem with [#351, el]:u64 <- R19
0004b577: mem := mem with [#351 + 8, el]:u64 <- R20
0004b57c: R20 := 0x27000
0004b583: R3 := mem[R20 + 0xFB8, el]:u64
0004b58b: mem := mem with [R31 + 0x30, el]:u64 <- R23
0004b591: R23 := pad:64[31:0[R0]]
0004b597: #352 := R31 + 0x20
0004b59d: mem := mem with [#352, el]:u64 <- R21
0004b5a3: mem := mem with [#352 + 8, el]:u64 <- R22
0004b5aa: R0 := mem[R3, el]:u64
0004b5b2: mem := mem with [R31 + 0x58, el]:u64 <- R0
0004b5b7: R0 := 0
0004b5bd: R21 := pad:64[31:0[R1]]
0004b5c2: R0 := 2
0004b5c7: R1 := 1
0004b5cc: R30 := 0xA9E0
0004b5ce: call @socket with return %0004b5d0

0004b5d0:
0004b5d4: R19 := pad:64[31:0[R0]]
0004b5da: when 31:31[R0] goto %0004b5d8
0006cfab: goto %0004cf56

0004b5d8:
0004b5e0: R0 := 0x27000
0004b5e7: R0 := mem[R0 + 0xF78, el]:u64
0004b5ee: R0 := pad:64[mem[R0, el]:u32]
0004b5f4: when 31:0[R0] = 0 goto %0004b5f2
0006cfac: goto %0004cf24

0004cf24:
0004cf27: R30 := 0xAA84
0004cf29: call @__errno_location with return %0004cf2b

0004cf2b:
0004cf30: R0 := pad:64[mem[R0, el]:u32]
0004cf35: R30 := 0xAA8C
0004cf37: call @strerror with return %0004cf39

0004cf39:
0004cf3d: R2 := R0
0004cf42: R1 := 0x12000
0004cf47: R0 := 1
0004cf4d: R1 := R1 + 0x490
0004cf52: R30 := 0xAAA0
0004cf54: call @__printf_chk with return %0004b5f2

0004cf56:
0004cf5a: R3 := R31 + 0x44
0004cf5f: R4 := 4
0004cf64: R22 := 1
0004cf69: R2 := 2
0004cf6f: R1 := pad:64[31:0[R22]]
0004cf77: mem := mem with [R31 + 0x44, el]:u32 <- 31:0[R22]
0004cf7c: R30 := 0xAA04
0004cf7f: call @setsockopt with return %0004cf81

0004cf81:
0004cf87: mem := mem with [R31 + 0x4C, el]:u32 <- 31:0[R21]
0004cf90: R3 := pad:64[23:16[R23].31:24[R23].7:0[R23].15:8[R23]]
0004cf95: R4 := 2
0004cf9b: R1 := R31 + 0x48
0004cfa1: R0 := pad:64[31:0[R19]]
0004cfa6: R2 := 0x10
0004cfae: mem := mem with [R31 + 0x48, el]:u16 <- 15:0[R4]
0004cfb6: mem := mem with [R31 + 0x4A, el]:u16 <- 15:0[R3]
0004cfbd: mem := mem with [R31 + 0x50, el]:u64 <- 0
0004cfc2: R30 := 0xAA2C
0004cfc5: call @bind with return %0004cfc7

0004cfc7:
0004cfcb: when 31:0[R0] <> 0 goto %0004cecf
0006cfad: goto %0004cfcf

0004cecf:
0004ced2: R30 := 0xAAB4
0004ced4: call @__errno_location with return %0004ced6

0004ced6:
0004cedb: R0 := pad:64[mem[R0, el]:u32]
0004cee0: R30 := 0xAABC
0004cee3: call @strerror with return %0004cee5

0004cee5:
0004cee9: R4 := R0
0004ceef: R3 := pad:64[31:0[R23]]
0004cef5: R1 := pad:64[31:0[R22]]
0004cefa: R2 := 0x12000
0004cf00: R2 := R2 + 0x4B0
0004cf05: R0 := 3
0004cf0a: R30 := 0xAAD8
0004cf0c: call @__syslog_chk with return %0004cf0e

0004cf0e:
0004cf12: R0 := pad:64[31:0[R19]]
0004cf17: R19 := 0xFFFFFFFF
0004cf1c: R30 := 0xAAE4
0004cf1e: call @close with return %0004cf20

0004cf20:
0004cf22: goto %0004b60b

0004cfcf:
0004cfd3: R0 := pad:64[31:0[R19]]
0004cfd8: R1 := 5
0004cfdd: R30 := 0xAA3C
0004cfe0: call @listen with return %0004cfe2

0004cfe2:
0004cfe6: when 31:0[R0] <> 0 goto %0004b5f2
0006cfae: goto %0004b60b

0004b5f2:
0004b5fb: R0 := pad:64[31:0[R19]]
0004b600: R19 := 0xFFFFFFFF
0004b605: R30 := 0xAAAC
0004b608: call @close with return %0004b60a

0004b60a:
0004b60d: goto %0004b60b

0004b60b:
0004b613: R20 := mem[R20 + 0xFB8, el]:u64
0004b61a: R0 := mem[R31 + 0x58, el]:u64
0004b621: R1 := mem[R20, el]:u64
0004b627: #353 := ~R1
0004b62c: #354 := R0 + ~R1 + 1
0004b632: VF := extend:65[#354] <> extend:65[R0] + extend:65[#353] + 1
0004b638: CF := pad:65[#354] <> pad:65[R0] + pad:65[#353] + 1
0004b63c: ZF := #354 = 0
0004b640: NF := 63:63[#354]
0004b644: R0 := #354
0004b649: R1 := 0
0004b64f: when ZF <> 1 goto %0004b64d
0006cfaf: goto %0004ce8d

0004b64d:
0004b655: R30 := 0xAAEC
0004b657: call @__stack_chk_fail with return %0004b659

0004b659:
0006cfb0: call @so_recvtest with noreturn

0004ce8d:
0004ce91: R0 := pad:64[31:0[R19]]
0004ce97: #485 := R31 + 0x10
0004ce9c: R19 := mem[#485, el]:u64
0004cea1: R20 := mem[#485 + 8, el]:u64
0004cea7: #486 := R31 + 0x20
0004ceac: R21 := mem[#486, el]:u64
0004ceb1: R22 := mem[#486 + 8, el]:u64
0004ceb8: R23 := mem[R31 + 0x30, el]:u64
0004cebf: R29 := mem[R31, el]:u64
0004cec4: R30 := mem[R31 + 8, el]:u64
0004cec8: R31 := R31 + 0x60
0004cecd: call R30 with noreturn

0006cfb1: sub so_recvln(so_recvln_result)
0006d184: so_recvln_result :: out u32 = low:32[R0]

0004b884:
0004b888: #367 := R31 - 0x70
0004b88e: mem := mem with [#367, el]:u64 <- R29
0004b894: mem := mem with [#367 + 8, el]:u64 <- R30
0004b898: R31 := #367
0004b89e: R29 := R31
0004b8a4: #368 := R31 + 0x40
0004b8aa: mem := mem with [#368, el]:u64 <- R25
0004b8b0: mem := mem with [#368 + 8, el]:u64 <- R26
0004b8b5: R25 := 0x27000
0004b8bc: R3 := mem[R25 + 0xFB8, el]:u64
0004b8c2: #369 := R31 + 0x10
0004b8c8: mem := mem with [#369, el]:u64 <- R19
0004b8ce: mem := mem with [#369 + 8, el]:u64 <- R20
0004b8d4: R20 := R2
0004b8db: R4 := mem[R3, el]:u64
0004b8e3: mem := mem with [R31 + 0x68, el]:u64 <- R4
0004b8e8: R4 := 0
0004b8ef: R2 := pad:64[mem[R2, el]:u32]
0004b8f5: #370 := R31 + 0x20
0004b8fb: mem := mem with [#370, el]:u64 <- R21
0004b901: mem := mem with [#370 + 8, el]:u64 <- R22
0004b907: R21 := R1
0004b90d: #371 := 31:0[R2] - 1
0004b912: VF := extend:33[#371] <> extend:33[31:0[R2]] - 1
0004b917: CF := pad:33[#371] <> pad:33[31:0[R2]] + 0xFFFFFFFF
0004b91b: ZF := #371 = 0
0004b91f: NF := 31:31[#371]
0004b925: #372 := R31 + 0x50
0004b92b: mem := mem with [#372, el]:u64 <- R27
0004b931: mem := mem with [#372 + 8, el]:u64 <- R28
0004b938: mem := mem with [R31 + 0x67] <- 0
0004b940: when ~(NF = VF & ~ZF) goto %0004b93e
0006cfb2: goto %0004cd4b

0004b93e:
0004b946: R27 := 0
0004b94b: R19 := 1
0004b950: goto %0004b94e

0004cd4b:
0004cd4f: #480 := R31 + 0x30
0004cd55: mem := mem with [#480, el]:u64 <- R23
0004cd5b: mem := mem with [#480 + 8, el]:u64 <- R24
0004cd60: R24 := 0x27000
0004cd65: R26 := 0x12000
0004cd6c: R24 := mem[R24 + 0xF78, el]:u64
0004cd72: R22 := pad:64[31:0[R0]]
0004cd78: R26 := R26 + 0x4D0
0004cd7e: R23 := R31 + 0x67
0004cd83: R27 := 1
0004cd87: goto %0004cc2f

0004cc2f:
0004cc33: R1 := R23
0004cc39: R0 := pad:64[31:0[R22]]
0004cc3e: R2 := 1
0004cc43: R30 := 0xACCC
0004cc46: call @read with return %0004cc48

0004cc48:
0004cc4c: R1 := R27 - 1
0004cc52: #473 := 31:0[R0] + 0
0004cc57: VF := extend:33[#473] <> extend:33[31:0[R0]] + 0
0004cc5c: CF := pad:33[#473] <> pad:33[31:0[R0]] - 0x100000000
0004cc60: ZF := #473 = 0
0004cc64: NF := 31:31[#473]
0004cc6a: R19 := pad:64[31:0[R0]]
0004cc72: when ~(NF = VF & ~ZF) goto %0004cc70
0006cfb3: goto %0004cc8f

0004cc70:
0004cc79: R27 := R1
0004cc7f: #474 := R31 + 0x30
0004cc84: R23 := mem[#474, el]:u64
0004cc89: R24 := mem[#474 + 8, el]:u64
0004cc8d: goto %0004b94e

0004cc8f:
0004cc94: R2 := mem[R21, el]:u64
0004cc9a: R28 := pad:64[31:0[R27]]
0004cca1: R0 := pad:64[mem[R31 + 0x67]]
0004ccaa: mem := mem with [R2 + R1] <- 7:0[R0]
0004ccb0: #475 := 31:0[R0] - 0xA
0004ccb5: VF := extend:33[#475] <> extend:33[31:0[R0]] - 0xA
0004ccba: CF := pad:33[#475] <> pad:33[31:0[R0]] + 0xFFFFFFF6
0004ccbe: ZF := #475 = 0
0004ccc2: NF := 31:31[#475]
0004ccc9: R3 := pad:64[mem[R20, el]:u32]
0004cccf: R0 := pad:64[31:0[R3] - 1]
0004ccd5: #476 := ~31:0[R27]
0004ccda: #477 := 31:0[R0] + ~31:0[R27] + 1
0004cd02: goto %0004ccfc

0004ccfc:
0004ccfe: when ZF <> 1 goto %0004cce0
0004ccff: goto %0004ccf1

0004ccf1:
0004ccf2: VF := 0
0004ccf5: CF := 0
0004ccf8: ZF := 0
0004ccfb: NF := 0
0004cd01: goto %0004ccfd

0004cce0:
0004cce1: VF := extend:33[#477] <> extend:33[31:0[R0]] + extend:33[#476] + 1
0004cce7: CF := pad:33[#477] <> pad:33[31:0[R0]] + pad:33[#476] + 1
0004cceb: ZF := #477 = 0
0004ccef: NF := 31:31[#477]
0004cd00: goto %0004ccfd

0004ccfd:
0004cd09: when ZF <> 1 goto %0004cd07
0006cfb4: goto %0004cd33

0004cd33:
0004cd38: R0 := pad:64[mem[R24, el]:u32]
0004cd3f: R3 := pad:64[31:1[31:0[R3] >> 0x1F | 31:0[R3] << 1].0]
0004cd45: when 31:0[R0] <> 0 goto %0004cb49
0006cfb5: goto %0004cb70

0004cb49:
0004cb4d: R2 := pad:64[31:0[R22]]
0004cb53: R1 := R26
0004cb58: R0 := 1
0004cb5d: R30 := 0xAD88
0004cb5f: call @__printf_chk with return %0004cb61

0004cb61:
0004cb66: R3 := pad:64[mem[R20, el]:u32]
0004cb6d: R3 := pad:64[31:1[31:0[R3] >> 0x1F | 31:0[R3] << 1].0]
0004cb72: goto %0004cb70

0004cb70:
0004cb78: R0 := mem[R21, el]:u64
0004cb80: mem := mem with [R20, el]:u32 <- 31:0[R3]
0004cb87: R1 :=

0004cb8c: R30 := 0xAD1C
0004cb8f: call @realloc with return %0004cb91

0004cb91:
0004cb95: when R0 = 0 goto %0004cb93
0006cfb6: goto %0004cbb1

0004cb93:
0004cb9b: R19 := 0xFFFFFFFF
0004cba1: #468 := R31 + 0x30
0004cba6: R23 := mem[#468, el]:u64
0004cbab: R24 := mem[#468 + 8, el]:u64
0004cbaf: goto %0004b960

0004cbb1:
0004cbb6: R1 := pad:64[mem[R20, el]:u32]
0004cbbe: mem := mem with [R21, el]:u64 <- R0
0004cbc4: R0 := pad:64[31:0[R1] - 1]
0004cbca: #469 := ~31:0[R0]
0004cbcf: #470 := 31:0[R28] + ~31:0[R0] + 1
0004cbd5: VF := extend:33[#470] <> extend:33[31:0[R28]] + extend:33[#469] + 1
0004cbdb: CF := pad:33[#470] <> pad:33[31:0[R28]] + pad:33[#469] + 1
0004cbdf: ZF := #470 = 0
0004cbe3: NF := 31:31[#470]
0004cbea: when NF <> VF goto %0004cbe8
0006cfb7: goto %0004cd49

0004cd49:
0006cfb8: goto %0004cc14

0004cd07:
0004cd10: #478 := ~31:0[R0]
0004cd15: #479 := 31:0[R28] + ~31:0[R0] + 1
0004cd1b: VF := extend:33[#479] <> extend:33[31:0[R28]] + extend:33[#478] + 1
0004cd21: CF := pad:33[#479] <> pad:33[31:0[R28]] + pad:33[#478] + 1
0004cd25: ZF := #479 = 0
0004cd29: NF := 31:31[#479]
0004cd2f: when NF = VF goto %0004cc14
0006cfb9: goto %0004cbe8

0004cbe8:
0004cbf2: R0 := pad:64[mem[R31 + 0x67]]
0004cbf8: R1 := R27 + 1
0004cbfe: #471 := 31:0[R0] - 0xA
0004cc03: VF := extend:33[#471] <> extend:33[31:0[R0]] - 0xA
0004cc08: CF := pad:33[#471] <> pad:33[31:0[R0]] + 0xFFFFFFF6
0004cc0c: ZF := #471 = 0
0004cc10: NF := 31:31[#471]
0004cc16: when ZF goto %0004cc14
0006cfba: goto %0004cc29

0004cc14:
0004cc1d: #472 := R31 + 0x30
0004cc22: R23 := mem[#472, el]:u64
0004cc27: R24 := mem[#472 + 8, el]:u64
0006cfbb: goto %0004b94e

0004b94e:
0004b956: R0 := mem[R21, el]:u64
0004b95e: mem := mem with [R0 + R27] <- 0
0006cfbc: goto %0004b960

0004b960:
0004b965: R25 := mem[R25 + 0xFB8, el]:u64
0004b96c: R0 := mem[R31 + 0x68, el]:u64
0004b973: R1 := mem[R25, el]:u64
0004b979: #373 := ~R1
0004b97e: #374 := R0 + ~R1 + 1
0004b984: VF := extend:65[#374] <> extend:65[R0] + extend:65[#373] + 1
0004b98a: CF := pad:65[#374] <> pad:65[R0] + pad:65[#373] + 1
0004b98e: ZF := #374 = 0
0004b992: NF := 63:63[#374]
0004b996: R0 := #374
0004b99b: R1 := 0
0004b9a1: when ZF <> 1 goto %0004b99f
0006cfbd: goto %0004caee

0004b99f:
0004b9a8: #375 := R31 + 0x30
0004b9ae: mem := mem with [#375, el]:u64 <- R23
0004b9b4: mem := mem with [#375 + 8, el]:u64 <- R24
0004b9b9: R30 := 0xADC0
0004b9bb: call @__stack_chk_fail with return %0006cfbe

0006cfbe:
0006cfbf: call @acl_add with noreturn

0004caee:
0004caf2: R0 := pad:64[31:0[R19]]
0004caf8: #464 := R31 + 0x10
0004cafd: R19 := mem[#464, el]:u64
0004cb02: R20 := mem[#464 + 8, el]:u64
0004cb08: #465 := R31 + 0x20
0004cb0d: R21 := mem[#465, el]:u64
0004cb12: R22 := mem[#465 + 8, el]:u64
0004cb18: #466 := R31 + 0x40
0004cb1d: R25 := mem[#466, el]:u64
0004cb22: R26 := mem[#466 + 8, el]:u64
0004cb28: #467 := R31 + 0x50
0004cb2d: R27 := mem[#467, el]:u64
0004cb32: R28 := mem[#467 + 8, el]:u64
0004cb39: R29 := mem[R31, el]:u64
0004cb3e: R30 := mem[R31 + 8, el]:u64
0004cb42: R31 := R31 + 0x70
0004cb47: call R30 with noreturn

0004cc29:
0004cc2d: R27 := R1
0006cfc0: goto %0004cc2f

0006cfc1: sub so_recvtest(so_recvtest_result)
0006d185: so_recvtest_result :: out u32 = low:32[R0]

0004b65b:
0004b65f: #355 := R31 - 0x30
0004b665: mem := mem with [#355, el]:u64 <- R29
0004b66b: mem := mem with [#355 + 8, el]:u64 <- R30
0004b66f: R31 := #355
0004b674: R2 := 1
0004b679: R3 := 0x42
0004b67f: R29 := R31
0004b687: mem := mem with [R31 + 0x10, el]:u64 <- R19
0004b68c: R19 := 0x27000
0004b692: R1 := R31 + 0x27
0004b699: R19 := mem[R19 + 0xFB8, el]:u64
0004b6a0: R4 := mem[R19, el]:u64
0004b6a8: mem := mem with [R31 + 0x28, el]:u64 <- R4
0004b6ad: R4 := 0
0004b6b2: R30 := 0xAB20
0004b6b5: call @recv with return %0004b6b7

0004b6b7:
0004b6bc: R1 := mem[R31 + 0x28, el]:u64
0004b6c3: R2 := mem[R19, el]:u64
0004b6c9: #356 := ~R2
0004b6ce: #357 := R1 + ~R2 + 1
0004b6d4: VF := extend:65[#357] <> extend:65[R1] + extend:65[#356] + 1
0004b6da: CF := pad:65[#357] <> pad:65[R1] + pad:65[#356] + 1
0004b6de: ZF := #357 = 0
0004b6e2: NF := 63:63[#357]
0004b6e6: R1 := #357
0004b6eb: R2 := 0
0004b6f1: when ZF <> 1 goto %0004b6ef
0006cfc2: goto %0004ce71

0004b6ef:
0004b6f7: R30 := 0xAB44
0004b6f9: call @__stack_chk_fail with return %0004b6fb

0004b6fb:
0006cfc3: call @so_dataready with noreturn

0004ce71:
0004ce76: R19 := mem[R31 + 0x10, el]:u64
0004ce7d: R29 := mem[R31, el]:u64
0004ce82: R30 := mem[R31 + 8, el]:u64
0004ce86: R31 := R31 + 0x30
0004ce8b: call R30 with noreturn

0006cfc4: sub so_resolv(so_resolv_result)
0006d186: so_resolv_result :: out u32 = low:32[R0]

0004b2c5:
0004b2c9: #337 := R31 - 0x80
0004b2cf: mem := mem with [#337, el]:u64 <- R29
0004b2d5: mem := mem with [#337 + 8, el]:u64 <- R30
0004b2d9: R31 := #337
0004b2de: R2 := 0x12000
0004b2e4: R29 := R31
0004b2ea: #338 := R31 + 0x20
0004b2f0: mem := mem with [#338, el]:u64 <- R21
0004b2f6: mem := mem with [#338 + 8, el]:u64 <- R22
0004b2fb: R22 := 0x27000
0004b301: R21 := R1
0004b308: R1 := mem[R22 + 0xFB8, el]:u64
0004b30e: #339 := R31 + 0x48
0004b313: mem := mem with [#339, el]:u64 <- 0
0004b318: mem := mem with [#339 + 8, el]:u64 <- 0
0004b31f: V0 := pad:128[mem[R2 + 0x4F0, el]:u64]
0004b326: R2 := mem[R1, el]:u64
0004b32e: mem := mem with [R31 + 0x78, el]:u64 <- R2
0004b333: R2 := 0
0004b339: R3 := R31 + 0x40
0004b33f: R2 := R31 + 0x48
0004b344: R1 := 0
0004b34a: #340 := R31 + 0x10
0004b350: mem := mem with [#340, el]:u64 <- R19
0004b356: mem := mem with [#340 + 8, el]:u64 <- R20
0004b35c: R19 := R0
0004b362: R0 := R21
0004b36a: mem := mem with [R31 + 0x4C, el]:u64 <- 63:0[V0]
0004b370: #341 := R31 + 0x58
0004b375: mem := mem with [#341, el]:u64 <- 0
0004b37a: mem := mem with [#341 + 8, el]:u64 <- 0
0004b380: #342 := R31 + 0x68
0004b385: mem := mem with [#342, el]:u64 <- 0
0004b38a: mem := mem with [#342 + 8, el]:u64 <- 0
0004b38f: R30 := 0xA658
0004b392: call @getaddrinfo with return %0004b394

0004b394:
0004b399: when 31:0[R0] <> 0 goto %0004b397
0006cfc5: goto %0004d3f0

0004b397:
0004b39f: R1 := 0x27000
0004b3a6: R1 := mem[R1 + 0xF78, el]:u64
0004b3ad: R1 := pad:64[mem[R1, el]:u32]
0004b3b4: when 31:0[R1] <> 0 goto %0004b3b2
0006cfc6: goto %0004b3f4

0004b3b2:
0004b3bb: R20 := pad:64[31:0[R0]]
0004b3c0: R30 := 0xA7AC
0004b3c3: call @gai_strerror with return %0004b3c5

0004b3c5:
0004b3c9: R4 := pad:64[31:0[R20]]
0004b3cf: R3 := R0
0004b3d5: R2 := R21
0004b3da: R1 := 0x12000
0004b3df: R0 := 1
0004b3e5: R1 := R1 + 0x3D8
0004b3ea: R30 := 0xA7C8
0004b3ec: call @__printf_chk with return %0004b3ee

0004b3ee:
0004b3f1: R1 := 0
0004b3f6: goto %0004b3f4

0004d3f0:
0004d3f3: R20 := 0x27000
0004d3fa: R0 := mem[R20 + 0xF78, el]:u64
0004d401: R0 := pad:64[mem[R0, el]:u32]
0004d407: when 31:0[R0] <> 0 goto %0004d36a
0006cfc7: goto %0004d388

0004d36a:
0004d36e: R2 := R21
0004d373: R1 := 0x12000
0004d378: R0 := 1
0004d37e: R1 := R1 + 0x3F8
0004d383: R30 := 0xA74C
0004d385: call @__printf_chk with return %0004d387

0004d387:
0004d38a: goto %0004d388

0004d388:
0004d390: R21 := mem[R31 + 0x40, el]:u64
0004d395: when R21 = 0 goto %0004d278
0006cfc8: goto %0004d399

0004d399:
0004d39e: R0 := mem[R21 + 0x18, el]:u64
0004d3a6: mem := mem with [R31 + 0x30, el]:u64 <- R23
0004d3ab: when R0 = 0 goto %0004d252
0006cfc9: goto %0004d3af

0004d3af:
0004d3b4: R23 := mem[R20 + 0xF78, el]:u64
0004d3bb: R1 := pad:64[mem[R0 + 4, el]:u32]
0004d3c3: mem := mem with [R19, el]:u32 <- 31:0[R1]
0004d3ca: R2 := pad:64[mem[R23, el]:u32]
0004d3d0: when 31:0[R2] <> 0 goto %0004d291
0006cfca: goto %0004d3d4

0004d291:
0004d296: R0 := pad:64[mem[R0 + 4, el]:u32]
0004d29b: R30 := 0xA70C
0004d29d: call @inet_ntoa with return %0004d29f

0004d29f:
0004d2a3: R2 := R0
0004d2a8: R1 := 0x12000
0004d2ad: R0 := 1
0004d2b3: R1 := R1 + 0x408
0004d2b8: R30 := 0xA720
0004d2ba: call @__printf_chk with return %0004d2bc

0004d2bc:
0004d2c1: R19 := mem[R21 + 0x28, el]:u64
0004d2c7: when R19 = 0 goto %0004d2c5
0006cfcb: goto %0004d2d8

0004d2d8:
0004d2dd: R0 := mem[R19 + 0x18, el]:u64
0004d2e2: when R0 = 0 goto %0004d24b
0006cfcc: goto %0004d2e6

0004d2e6:
0004d2eb: R2 := pad:64[mem[R23, el]:u32]
0004d2f0: goto %0004d2ee

0004d3d4:
0004d3d9: R19 := mem[R21 + 0x28, el]:u64
0004d3de: when R19 = 0 goto %0004d270
0006cfcd: goto %0004d3e2

0004d270:
0004d275: R23 := mem[R31 + 0x30, el]:u64
0004d27a: goto %0004d278

0004d3e2:
0004d3e7: R0 := mem[R19 + 0x18, el]:u64
0004d3ec: when R0 = 0 goto %0004d252
0006cfce: goto %0004d2ee

0004d2ee:
0004d2f4: R1 := 0x12000
0004d2fa: R21 := R1 + 0x418
0004d301: R20 := mem[R20 + 0xF78, el]:u64
0004d308: when 31:0[R2] <> 0 goto %0004d306
0006cfcf: goto %0004d357

0004d357:
0004d361: R19 := mem[R19 + 0x28, el]:u64
0004d366: when R19 = 0 goto %0004d2c5
0006cfd0: goto %0004d33b

0004d33b:
0004d345: R0 := mem[R19 + 0x18, el]:u64
0004d34a: when R0 = 0 goto %0004d24b
0006cfd1: goto %0004d34e

0004d24b:
0004d250: R21 := mem[R31 + 0x40, el]:u64
0006cfd2: goto %0004d252

0004d252:
0004d256: R0 := R21
0004d25b: R30 := 0xA798
0004d25e: call @freeaddrinfo with return %0004d260

0004d260:
0004d263: R1 := 0
0004d26a: R23 := mem[R31 + 0x30, el]:u64
0004d26e: goto %0004b3f4

0004d34e:
0004d353: R2 := pad:64[mem[R20, el]:u32]
0004d359: when 31:0[R2] = 0 goto %0004d357
0006cfd3: goto %0004d306

0004d306:
0004d310: R0 := pad:64[mem[R0 + 4, el]:u32]
0004d315: R30 := 0xA6D4
0004d317: call @inet_ntoa with return %0004d319

0004d319:
0004d31d: R2 := R0
0004d323: R1 := R21
0004d328: R0 := 1
0004d32d: R30 := 0xA6E4
0004d32f: call @__printf_chk with return %0004d331

0004d331:
0004d336: R19 := mem[R19 + 0x28, el]:u64
0004d33d: when R19 <> 0 goto %0004d33b
0006cfd4: goto %0004d2c5

0004d2c5:
0004d2cf: R23 := mem[R31 + 0x30, el]:u64
0004d2d6: R21 := mem[R31 + 0x40, el]:u64
0006cfd5: goto %0004d278

0004d278:
0004d27f: R0 := R21
0004d284: R30 := 0xA6FC
0004d286: call @freeaddrinfo with return %0004d288

0004d288:
0004d28b: R1 := 1
0004d28f: goto %0004b3f4

0004b3f4:
0004b3fc: R22 := mem[R22 + 0xFB8, el]:u64
0004b403: R0 := mem[R31 + 0x78, el]:u64
0004b40a: R2 := mem[R22, el]:u64
0004b410: #343 := ~R2
0004b415: #344 := R0 + ~R2 + 1
0004b41b: VF := extend:65[#344] <> extend:65[R0] + extend:65[#343] + 1
0004b421: CF := pad:65[#344] <> pad:65[R0] + pad:65[#343] + 1
0004b425: ZF := #344 = 0
0004b429: NF := 63:63[#344]
0004b42d: R0 := #344
0004b432: R2 := 0
0004b438: when ZF <> 1 goto %0004b436
0006cfd6: goto %0004d210

0004b436:
0004b441: mem := mem with [R31 + 0x30, el]:u64 <- R23
0004b446: R30 := 0xA7E0
0004b448: call @__stack_chk_fail with return %0006cfd7

0006cfd7:
0006cfd8: call @so_connect with noreturn

0004d210:
0004d214: R0 := pad:64[31:0[R1]]
0004d21a: #489 := R31 + 0x10
0004d21f: R19 := mem[#489, el]:u64
0004d224: R20 := mem[#489 + 8, el]:u64
0004d22a: #490 := R31 + 0x20
0004d22f: R21 := mem[#490, el]:u64
0004d234: R22 := mem[#490 + 8, el]:u64
0004d23b: R29 := mem[R31, el]:u64
0004d240: R30 := mem[R31 + 8, el]:u64
0004d244: R31 := R31 + 0x80
0004d249: call R30 with noreturn

0006cfd9: sub socket(socket_domain, socket_type, socket_protocol, socket_result)
0006d187: socket_domain :: in u32 = low:32[R0]
0006d188: socket_type :: in u32 = low:32[R1]
0006d189: socket_protocol :: in u32 = low:32[R2]
0006d18a: socket_result :: out u32 = low:32[R0]

0004b4c9:
00064d25: R16 := 0x27000
00064d2c: R17 := mem[R16 + 0xE90, el]:u64
00064d32: R16 := R16 + 0xE90
00064d37: call R17 with noreturn

0006cfda: sub socks5_thread(socks5_thread_result)
0006d18b: socks5_thread_result :: out u32 = low:32[R0]

00057848:
0005784c: #1104 := R31 - 0x80
00057852: mem := mem with [#1104, el]:u64 <- R29
00057858: mem := mem with [#1104 + 8, el]:u64 <- R30
0005785c: R31 := #1104
00057862: R29 := R31
00057868: #1105 := R31 + 0x40
0005786e: mem := mem with [#1105, el]:u64 <- R25
00057874: mem := mem with [#1105 + 8, el]:u64 <- R26
00057879: R26 := 0x28000
0005787f: R1 := R26 + 0x4D8
00057885: #1106 := R31 + 0x10
0005788b: mem := mem with [#1106, el]:u64 <- R19
00057891: mem := mem with [#1106 + 8, el]:u64 <- R20
00057896: R20 := 0x27000
0005789c: R19 := R0
000578a3: R0 := mem[R1 + 0x60, el]:u64
000578a9: #1107 := R31 + 0x20
000578af: mem := mem with [#1107, el]:u64 <- R21
000578b5: mem := mem with [#1107 + 8, el]:u64 <- R22
000578bc: R1 := mem[R20 + 0xFB8, el]:u64
000578c2: #1108 := R31 + 0x30
000578c8: mem := mem with [#1108, el]:u64 <- R23
000578ce: mem := mem with [#1108 + 8, el]:u64 <- R24
000578d5: R2 := mem[R1, el]:u64
000578dd: mem := mem with [R31 + 0x78, el]:u64 <- R2
000578e2: R2 := 0
000578e8: #1109 := R31 + 0x50
000578ee: mem := mem with [#1109, el]:u64 <- R27
000578f4: mem := mem with [#1109 + 8, el]:u64 <- R28
000578f9: R30 := 0x10FEC
000578fb: call @hlist_count with return %000578fd

000578fd:
00057902: R23 := pad:64[mem[R19, el]:u32]
00057909: R1 := mem[R19 + 0x10, el]:u64
0005790f: R24 := pad:64[31:0[R0]]
00057915: R0 := R19
0005791d: mem := mem with [R31 + 0x68, el]:u64 <- R1
00057922: R30 := 0x11004
00057924: call @free with return %00057926

00057926:
00057929: R0 := 0xA
0005792e: R30 := 0x1100C
00057930: call @new with return %00057932

00057932:
00057936: R19 := R0
0005793b: R0 := 0x32
00057940: R30 := 0x11018
00057942: call @new with return %00057944

00057944:
00057948: R21 := R0
0005794d: R0 := 0x32
00057952: R30 := 0x11024
00057954: call @new with return %00057956

00057956:
0005795a: R1 := R19
00057960: R22 := R0
00057965: R2 := 2
0005796b: R0 := pad:64[31:0[R23]]
00057970: R30 := 0x11038
00057972: call @read with return %00057974

00057974:
00057978: #1110 := 31:0[R0] - 2
0005797d: VF := extend:33[#1110] <> extend:33[31:0[R0]] - 2
00057982: CF := pad:33[#1110] <> pad:33[31:0[R0]] + 0xFFFFFFFE
00057986: ZF := #1110 = 0
0005798a: NF := 31:31[#1110]
00057990: when ZF <> 1 goto %0005798e
0006cfdb: goto %0005857e

0005798e:
00057996: R27 := 0xFFFFFFFF
0005799b: R25 := 0
000579a0: goto %0005799e

0005857e:
00058583: R0 := pad:64[mem[R19]]
00058588: R27 := 0xFFFFFFFF
0005858d: R25 := 0
00058593: #1155 := 31:0[R0] - 5
00058598: VF := extend:33[#1155] <> extend:33[31:0[R0]] - 5
0005859d: CF := pad:33[#1155] <> pad:33[31:0[R0]] + 0xFFFFFFFB
000585a1: ZF := #1155 = 0
000585a5: NF := 31:31[#1155]
000585aa: when ZF goto %00058434
0006cfdc: goto %0005799e

00058434:
00058439: R0 := pad:64[mem[R19 + 1]]
00058441: mem := mem with [R31 + 0x74, el]:u32 <- 31:0[R0]
00058447: R0 := pad:64[31:0[R0] + 1]
0005844e: R0 :=

00058453: R30 := 0x110F4
00058455: call @new with return %00058457

00058457:
0005845c: R2 := extend:64[mem[R31 + 0x74, el]:u32]
00058462: R28 := R0
00058468: R1 := R28
0005846e: R0 := pad:64[31:0[R23]]
00058473: R30 := 0x11108
00058475: call @read with return %00058477

00058477:
0005847c: R2 := pad:64[mem[R31 + 0x74, el]:u32]
00058482: #1150 := ~31:0[R0]
00058487: #1151 := 31:0[R2] + ~31:0[R0] + 1
0005848d: VF := extend:33[#1151] <> extend:33[31:0[R2]] + extend:33[#1150] +
          1
00058493: CF := pad:33[#1151] <> pad:33[31:0[R2]] + pad:33[#1150] + 1
00058497: ZF := #1151 = 0
0005849b: NF := 31:31[#1151]
000584a0: when ZF <> 1 goto %00057b3a
0006cfdd: goto %000584a4

000584a4:
000584a8: #1152 := 31:0[R2] + 0
000584ad: VF := extend:33[#1152] <> extend:33[31:0[R2]] + 0
000584b2: CF := pad:33[#1152] <> pad:33[31:0[R2]] - 0x100000000
000584b6: ZF := #1152 = 0
000584ba: NF := 31:31[#1152]
000584c0: when 31:0[R24] <> 0 goto %00057b48
0006cfde: goto %000584c4

00057b48:
00057b4b: R0 := 0
00057b53: when NF = VF & ~ZF goto %00057b51
0006cfdf: goto %000581e0

000581e0:
000581e2: goto %00057ba6

000584c4:
000584c9: when ~(NF = VF & ~ZF) goto %00057ba6
0006cfe0: goto %000584cd

000584cd:
000584d1: R3 := pad:64[31:0[R2] - 1]
000584d7: R0 := R28
000584dd: R3 := R3 + 1
000584e4: R3 := R3 + R28
000584e9: goto %000584e7

000584e7:
000584ef: R1 := pad:64[mem[R0]]
000584f6: when 31:0[R1] <> 0 goto %000584f4
0006cfe1: goto %00058525

00058525:
00058528: R0 := 5
00058530: mem := mem with [R19, el]:u16 <- 15:0[R0]
00058536: R1 := R19
0005853c: R0 := pad:64[31:0[R23]]
00058541: R2 := 2
00058546: R30 := 0x11160
00058548: call @write with return %00057d6c

000584f4:
000584fd: R0 := R0 + 1
00058503: #1153 := ~R3
00058508: #1154 := R0 + ~R3 + 1
0005850e: VF := extend:65[#1154] <> extend:65[R0] + extend:65[#1153] + 1
00058514: CF := pad:65[#1154] <> pad:65[R0] + pad:65[#1153] + 1
00058518: ZF := #1154 = 0
0005851c: NF := 63:63[#1154]
00058521: when ZF goto %00057c80
0006cfe2: goto %000584e7

00057c80:
00057c83: R0 := 0
00057c87: goto %00057b51

00057b51:
00057b5c: R1 := pad:64[mem[R28 + R0]]
00057b62: #1113 := 31:0[R1] - 2
00057b67: VF := extend:33[#1113] <> extend:33[31:0[R1]] - 2
00057b6c: CF := pad:33[#1113] <> pad:33[31:0[R1]] + 0xFFFFFFFE
00057b70: ZF := #1113 = 0
00057b74: NF := 31:31[#1113]
00057b7a: when ZF <> 1 goto %00057b78
0006cfe3: goto %0005815f

0005815f:
00058162: R0 := 0x205
0005816a: mem := mem with [R19, el]:u16 <- 15:0[R0]
00058170: R1 := R19
00058175: R2 := 2
0005817b: R0 := pad:64[31:0[R23]]
00058180: R30 := 0x11288
00058182: call @write with return %00058184

00058184:
00058188: R1 := R19
0005818e: R0 := pad:64[31:0[R23]]
00058193: R2 := 2
00058198: R30 := 0x11298
0005819a: call @read with return %0005819c

0005819c:
000581a0: #1133 := 31:0[R0] - 2
000581a5: VF := extend:33[#1133] <> extend:33[31:0[R0]] - 2
000581aa: CF := pad:33[#1133] <> pad:33[31:0[R0]] + 0xFFFFFFFE
000581ae: ZF := #1133 = 0
000581b2: NF := 31:31[#1133]
000581b7: when ZF goto %00057bde
0006cfe4: goto %000581bb

00057bde:
00057be3: R0 := pad:64[mem[R19 + 1]]
00057beb: mem := mem with [R31 + 0x74, el]:u32 <- 31:0[R0]
00057bf1: R0 := pad:64[31:0[R0] + 1]
00057bf8: R0 :=

00057bfd: R30 := 0x11304
00057bff: call @new with return %00057c01

00057c01:
00057c06: R2 := pad:64[mem[R31 + 0x74, el]:u32]
00057c0c: R24 := R0
00057c12: R1 := R24
00057c18: R0 := pad:64[31:0[R23]]
00057c1e: R2 := pad:64[31:0[R2] + 1]
00057c25: R2 :=

00057c2a: R30 := 0x11320
00057c2c: call @read with return %00057c2e

00057c2e:
00057c33: R1 := pad:64[mem[R31 + 0x74, el]:u32]
00057c39: R2 := pad:64[31:0[R1] + 1]
00057c3f: #1116 := ~31:0[R0]
00057c44: #1117 := 31:0[R2] + ~31:0[R0] + 1
00057c4a: VF := extend:33[#1117] <> extend:33[31:0[R2]] + extend:33[#1116] +
          1
00057c50: CF := pad:33[#1117] <> pad:33[31:0[R2]] + pad:33[#1116] + 1
00057c54: ZF := #1117 = 0
00057c58: NF := 31:31[#1117]
00057c5e: when ZF <> 1 goto %00057c5c
0006cfe5: goto %000580d9

000580d9:
000580df: R2 := pad:64[mem[R24 + extend:64[31:0[R1]]]]
000580e7: mem := mem with [R24 + extend:64[31:0[R1]]] <- 0
000580ed: R0 := pad:64[31:0[R2] + 1]
000580f5: mem := mem with [R31 + 0x74, el]:u32 <- 31:0[R2]
000580fc: R0 :=

00058101: R30 := 0x11348
00058103: call @new with return %00058105

00058105:
0005810a: R2 := extend:64[mem[R31 + 0x74, el]:u32]
00058110: R25 := R0
00058116: R1 := R25
0005811c: R0 := pad:64[31:0[R23]]
00058121: R30 := 0x1135C
00058123: call @read with return %00058125

00058125:
0005812a: R1 := pad:64[mem[R31 + 0x74, el]:u32]
00058130: #1131 := ~31:0[R0]
00058135: #1132 := 31:0[R1] + ~31:0[R0] + 1
0005813b: VF := extend:33[#1132] <> extend:33[31:0[R1]] + extend:33[#1131] +
          1
00058141: CF := pad:33[#1132] <> pad:33[31:0[R1]] + pad:33[#1131] + 1
00058145: ZF := #1132 = 0
00058149: NF := 31:31[#1132]
0005814e: when ZF goto %00057cda
0006cfe6: goto %00058152

00057cda:
00057cde: R27 := R26 + 0x4D8
00057ce6: mem := mem with [R25 + extend:64[31:0[R1]]] <- 0
00057cec: R1 := R24
00057cf3: R0 := mem[R27 + 0x60, el]:u64
00057cf8: R30 := 0x113C4
00057cfa: call @hlist_get with return %00057cfc

00057cfc:
00057d00: R26 := R0
00057d07: R0 := mem[R27 + 0x60, el]:u64
00057d0c: R30 := 0x113D0
00057d0e: call @hlist_count with return %00057d10

00057d10:
00057d13: R3 := 0
00057d19: when 31:0[R0] = 0 goto %00057d17
0006cfe7: goto %0005808c

0005808c:
0005808f: R3 := 0xFF
00058094: when R26 = 0 goto %00057d17
0006cfe8: goto %00058098

00058098:
0005809c: R0 := R26
000580a2: R1 := R25
000580a7: R30 := 0x113EC
000580aa: call @strcmp with return %000580ac

000580ac:
000580b0: #1130 := 31:0[R0] + 0
000580b5: VF := extend:33[#1130] <> extend:33[31:0[R0]] + 0
000580ba: CF := pad:33[#1130] <> pad:33[31:0[R0]] - 0x100000000
000580be: ZF := #1130 = 0
000580c2: NF := 31:31[#1130]
000580ce: when ZF goto %000580c7
000580cf: goto %000580ca

000580ca:
000580cb: R3 := 0xFFFFFFFF
000580d1: goto %000580cd

000580c7:
000580c8: R3 := 0
000580d0: goto %000580cd

000580cd:
000580d7: R3 := pad:64[0.7:0[R3]]
0006cfe9: goto %00057d17

00057d17:
00057d20: R1 := R19
00057d25: R0 := 1
00057d2d: mem := mem with [R19] <- 7:0[R0]
00057d32: R2 := 2
00057d3a: mem := mem with [R19 + 1] <- 7:0[R3]
00057d40: R0 := pad:64[31:0[R23]]
00057d45: R30 := 0x11414
00057d47: call @write with return %00057d49

00057d49:
00057d4d: R0 := R25
00057d52: R30 := 0x1141C
00057d54: call @free with return %00057d56

00057d56:
00057d5a: R0 := R24
00057d5f: R30 := 0x11424
00057d61: call @free with return %00057d63

00057d63:
00057d68: R0 := pad:64[mem[R19 + 1]]
00057d6e: when 31:0[R0] = 0 goto %00057d6c
0006cfea: goto %00058088

00058088:
0005808a: goto %00057c6f

00057d6c:
00057d75: R1 := R19
00057d7b: R0 := pad:64[31:0[R23]]
00057d80: R2 := 4
00057d85: R30 := 0x11170
00057d87: call @read with return %00057d89

00057d89:
00057d8d: R1 := R0
00057d93: #1118 := 31:0[R0] - 4
00057d98: VF := extend:33[#1118] <> extend:33[31:0[R0]] - 4
00057d9d: CF := pad:33[#1118] <> pad:33[31:0[R0]] + 0xFFFFFFFC
00057da1: ZF := #1118 = 0
00057da5: NF := 31:31[#1118]
00057daa: when ZF <> 1 goto %00057b3a
0006cfeb: goto %00057dae

00057dae:
00057db3: R0 := pad:64[mem[R19 + 1]]
00057db9: #1119 := 31:0[R0] - 1
00057dbe: VF := extend:33[#1119] <> extend:33[31:0[R0]] - 1
00057dc3: CF := pad:33[#1119] <> pad:33[31:0[R0]] + 0xFFFFFFFF
00057dc7: ZF := #1119 = 0
00057dcb: NF := 31:31[#1119]
00057dd0: when ZF <> 1 goto %00057c89
0006cfec: goto %00057dd4

00057dd4:
00057dd9: R25 := pad:64[mem[R19 + 3]]
00057de0: R0 := pad:64[31:2[R25].0.0:0[R25]]
00057de6: #1120 := 31:0[R0] - 1
00057deb: VF := extend:33[#1120] <> extend:33[31:0[R0]] - 1
00057df0: CF := pad:33[#1120] <> pad:33[31:0[R0]] + 0xFFFFFFFF
00057df4: ZF := #1120 = 0
00057df8: NF := 31:31[#1120]
00057dfd: when ZF <> 1 goto %00057c89
0006cfed: goto %00057e01

00057c89:
00057c8d: R3 := R19
00057c92: R4 := 0x205
00057c98: R4 := pad:64[0x100.15:0[R4]]
00057c9e: R1 := R19
00057ca4: R0 := pad:64[31:0[R23]]
00057ca9: R2 := 0xA
00057cb1: mem := mem with [R3, el]:u32 <- 31:0[R4]
00057cb5: R3 := R3 + 4
00057cba: R27 := 0xFFFFFFFF
00057cc1: mem := mem with [R19 + 4, el]:u32 <- 0
00057cc6: R25 := 0
00057ccd: mem := mem with [R3 + 4, el]:u16 <- 0
00057cd2: R30 := 0x113AC
00057cd4: call @write with return %00057cd6

00057cd6:
00057cd8: goto %00057b1d

00057e01:
00057e05: #1121 := 31:0[R25] - 1
00057e0a: VF := extend:33[#1121] <> extend:33[31:0[R25]] - 1
00057e0f: CF := pad:33[#1121] <> pad:33[31:0[R25]] + 0xFFFFFFFF
00057e13: ZF := #1121 = 0
00057e17: NF := 31:31[#1121]
00057e1d: when ZF goto %00057e1b
0006cfee: goto %00057f73

00057e1b:
00057e23: R0 := 0xF
00057e2b: mem := mem with [R31 + 0x74, el]:u32 <- 31:0[R1]
00057e30: R30 := 0x1143C
00057e32: call @new with return %00057e34

00057e34:
00057e38: R1 := R0
00057e3f: R2 := extend:64[mem[R31 + 0x74, el]:u32]
00057e45: R24 := R0
00057e4b: R0 := pad:64[31:0[R23]]
00057e50: R30 := 0x11450
00057e52: call @read with return %00057e54

00057e54:
00057e59: R1 := pad:64[mem[R31 + 0x74, el]:u32]
00057e5f: #1122 := ~31:0[R0]
00057e64: #1123 := 31:0[R1] + ~31:0[R0] + 1
00057e6a: VF := extend:33[#1123] <> extend:33[31:0[R1]] + extend:33[#1122] +
          1
00057e70: CF := pad:33[#1123] <> pad:33[31:0[R1]] + pad:33[#1122] + 1
00057e74: ZF := #1123 = 0
00057e78: NF := 31:31[#1123]
00057e7e: when ZF <> 1 goto %00057e7c
0006cfef: goto %00057e8b

00057e8b:
00057e91: mem := mem with [R24 + extend:64[31:0[R1]]] <- 0
00057e96: R3 := 0x14000
00057e9c: R3 := R3 + 0x78
00057ea2: R1 := pad:64[31:0[R25]]
00057ea9: R7 := pad:64[mem[R24 + 3]]
00057eae: R2 := 0xFFFFFFFFFFFFFFFF
00057eb5: R6 := pad:64[mem[R24 + 2]]
00057ebb: R0 := R21
00057ec2: R5 := pad:64[mem[R24 + 1]]
00057ec9: R4 := pad:64[mem[R24]]
00057ece: R30 := 0x11488
00057ed0: call @__sprintf_chk with return %00057ed2

00057ed2:
00057ed6: R1 := R31 + 0x72
00057edc: R0 := pad:64[31:0[R23]]
00057ee1: R2 := 2
00057ee6: R30 := 0x11498
00057ee8: call @read with return %00057eea

00057eea:
00057eee: #1124 := 31:0[R0] - 2
00057ef3: VF := extend:33[#1124] <> extend:33[31:0[R0]] - 2
00057ef8: CF := pad:33[#1124] <> pad:33[31:0[R0]] + 0xFFFFFFFE
00057efc: ZF := #1124 = 0
00057f00: NF := 31:31[#1124]
00057f06: when ZF goto %00057f04
0006cff0: goto %00057f58

00057f58:
00057f5b: R27 := 0xFFFFFFFF
00057f60: R25 := 0
00057f65: goto %00057f63

00057f73:
00057f77: #1125 := 31:0[R25] - 3
00057f7c: VF := extend:33[#1125] <> extend:33[31:0[R25]] - 3
00057f81: CF := pad:33[#1125] <> pad:33[31:0[R25]] + 0xFFFFFFFD
00057f85: ZF := #1125 = 0
00057f89: NF := 31:31[#1125]
00057f8e: when ZF <> 1 goto %00057b3a
0006cff1: goto %00057f92

00057f92:
00057f96: R1 := R31 + 0x74
00057f9c: R0 := pad:64[31:0[R23]]
00057fa1: R2 := 1
00057fa6: R30 := 0x111B8
00057fa8: call @read with return %00057faa

00057faa:
00057fae: #1126 := 31:0[R0] - 1
00057fb3: VF := extend:33[#1126] <> extend:33[31:0[R0]] - 1
00057fb8: CF := pad:33[#1126] <> pad:33[31:0[R0]] + 0xFFFFFFFF
00057fbc: ZF := #1126 = 0
00057fc0: NF := 31:31[#1126]
00057fc5: when ZF <> 1 goto %00057b3a
0006cff2: goto %00057fc9

00057b3a:
00057b3d: R27 := 0xFFFFFFFF
00057b42: R25 := 0
00057b46: goto %00057b1d

00057fc9:
00057fce: R0 := pad:64[mem[R31 + 0x74, el]:u32]
00057fd4: R0 := pad:64[31:0[R0] + 0xB]
00057fdb: R0 :=

00057fe0: R30 := 0x111D0
00057fe2: call @new with return %00057fe4

00057fe4:
00057fe9: R2 := extend:64[mem[R31 + 0x74, el]:u32]
00057fef: R24 := R0
00057ff5: R1 := R24
00057ffb: R0 := pad:64[31:0[R23]]
00058000: R30 := 0x111E4
00058002: call @read with return %00058004

00058004:
00058009: R1 := pad:64[mem[R31 + 0x74, el]:u32]
0005800f: #1127 := ~31:0[R0]
00058014: #1128 := 31:0[R1] + ~31:0[R0] + 1
0005801a: VF := extend:33[#1128] <> extend:33[31:0[R1]] + extend:33[#1127] +
          1
00058020: CF := pad:33[#1128] <> pad:33[31:0[R1]] + pad:33[#1127] + 1
00058024: ZF := #1128 = 0
00058028: NF := 31:31[#1128]
0005802d: when ZF <> 1 goto %00057e7c
0006cff3: goto %00058031

00058031:
00058037: mem := mem with [R24 + extend:64[31:0[R1]]] <- 0
0005803c: R2 := 0x32
00058042: R1 := R24
00058048: R0 := R21
0005804d: R30 := 0x11204
0005804f: call @strlcpy with return %00058051

00058051:
00058055: R1 := R31 + 0x72
0005805b: R0 := pad:64[31:0[R23]]
00058060: R2 := 2
00058065: R30 := 0x11214
00058067: call @read with return %00058069

00058069:
0005806d: #1129 := 31:0[R0] - 2
00058072: VF := extend:33[#1129] <> extend:33[31:0[R0]] - 2
00058077: CF := pad:33[#1129] <> pad:33[31:0[R0]] + 0xFFFFFFFE
0005807b: ZF := #1129 = 0
0005807f: NF := 31:31[#1129]
00058084: when ZF goto %00057f04
0006cff4: goto %00057e7c

00057f04:
00057f0d: R0 := R21
00057f12: R30 := 0x114B4
00057f14: call @noproxy_match with return %00057f16

00057f16:
00057f19: when 31:0[R0] = 0 goto %00057a2e
0006cff5: goto %00057f1d

00057f1d:
00057f22: R1 := pad:64[mem[R31 + 0x72, el]:u16]
00057f28: R0 := R21
00057f2d: R25 := 0
00057f36: R1 := pad:64[23:16[R1].31:24[R1].7:0[R1].15:8[R1]]
00057f3c: R1 := pad:64[0.15:0[R1]]
00057f41: R30 := 0x114D0
00057f43: call @host_connect with return %00057f45

00057f45:
00057f49: R27 := pad:64[31:0[R0]]
00057f4f: R0 := pad:64[~31:0[R0]]
00057f56: R0 := pad:64[0.0:0[31:0[R0] >> 0x1F | 31:0[R0] << 1]]
0006cff6: goto %00057ad0

00057e7c:
00057e84: R27 := 0xFFFFFFFF
00057e89: R25 := 0
0006cff7: goto %00057b18

00058152:
00058156: R0 := R25
0005815b: R30 := 0x11370
0005815d: call @free with return %00057c5c

00057c5c:
00057c65: R0 := R24
00057c6a: R30 := 0x11378
00057c6c: call @free with return %00057c6e

00057c6e:
00057c71: goto %00057c6f

000581bb:
000581be: R0 := 0xFFFFFF01
000581c6: mem := mem with [R19, el]:u16 <- 15:0[R0]
000581cc: R1 := R19
000581d2: R0 := pad:64[31:0[R23]]
000581d7: R2 := 2
000581dc: R30 := 0x112B8
000581de: call @write with return %00057c6f

00057c6f:
00057c75: R27 := 0xFFFFFFFF
00057c7a: R25 := 0
00057c7e: goto %00057b29

00057b78:
00057b81: R0 := R0 + 1
00057b87: #1114 := ~31:0[R0]
00057b8c: #1115 := 31:0[R2] + ~31:0[R0] + 1
00057b92: VF := extend:33[#1115] <> extend:33[31:0[R2]] + extend:33[#1114] +
          1
00057b98: CF := pad:33[#1115] <> pad:33[31:0[R2]] + pad:33[#1114] + 1
00057b9c: ZF := #1115 = 0
00057ba0: NF := 31:31[#1115]
00057ba8: when ~(NF = VF & ~ZF) goto %00057ba6
0006cff8: goto %00057b51

00057ba6:
00057bae: R0 := 0xFFFFFF05
00057bb6: mem := mem with [R19, el]:u16 <- 15:0[R0]
00057bbc: R1 := R19
00057bc2: R0 := pad:64[31:0[R23]]
00057bc7: R2 := 2
00057bcc: R27 := 0xFFFFFFFF
00057bd1: R25 := 0
00057bd6: R30 := 0x112EC
00057bd8: call @write with return %00057bda

00057bda:
00057bdc: goto %00057b1d

0005799e:
000579a5: when R21 = 0 goto %000579a3
0006cff9: goto %00058571

00058571:
00058575: R0 := R21
0005857a: R30 := 0x11060
0005857c: call @free with return %000579a3

000579a3:
000579ac: when R22 = 0 goto %000579aa
0006cffa: goto %00058564

00058564:
00058568: R0 := R22
0005856d: R30 := 0x1106C
0005856f: call @free with return %000579aa

000579aa:
000579b3: when R19 = 0 goto %000579b1
0006cffb: goto %00058557

00058557:
0005855b: R0 := R19
00058560: R30 := 0x11078
00058562: call @free with return %000579b1

000579b1:
000579ba: when R25 = 0 goto %000579b8
0006cffc: goto %0005854a

0005854a:
0005854e: R0 := R25
00058553: R30 := 0x11084
00058555: call @free with return %000579b8

000579b8:
000579c2: when 31:0[R27] <> 0 goto %000579c0
0006cffd: goto %000579d3

000579c0:
000579c9: R0 := pad:64[31:0[R27]]
000579ce: R30 := 0x110DC
000579d0: call @close with return %000579d2

000579d2:
000579d5: goto %000579d3

000579d3:
000579da: R0 := pad:64[31:0[R23]]
000579df: R30 := 0x11090
000579e1: call @close with return %000579e3

000579e3:
000579e8: R20 := mem[R20 + 0xFB8, el]:u64
000579ef: R0 := mem[R31 + 0x78, el]:u64
000579f6: R1 := mem[R20, el]:u64
000579fc: #1111 := ~R1
00057a01: #1112 := R0 + ~R1 + 1
00057a07: VF := extend:65[#1112] <> extend:65[R0] + extend:65[#1111] + 1
00057a0d: CF := pad:65[#1112] <> pad:65[R0] + pad:65[#1111] + 1
00057a11: ZF := #1112 = 0
00057a15: NF := 63:63[#1112]
00057a19: R0 := #1112
00057a1e: R1 := 0
00057a24: when ZF <> 1 goto %00057a22
0006cffe: goto %000583ca

00057a22:
00057a2a: R30 := 0x11540
00057a2c: call @__stack_chk_fail with return %00057a2e

00057a2e:
00057a33: R4 := pad:64[mem[R31 + 0x72, el]:u16]
00057a38: R3 := 0x13000
00057a3e: R3 := R3 + 0x958
00057a43: R2 := 0xFFFFFFFFFFFFFFFF
00057a4c: R4 := pad:64[23:16[R4].31:24[R4].7:0[R4].15:8[R4]]
00057a51: R1 := 1
00057a57: R4 := pad:64[0.15:0[R4]]
00057a5d: R0 := R22
00057a62: R30 := 0x11564
00057a64: call @__sprintf_chk with return %00057a66

00057a66:
00057a69: R2 := 0x32
00057a6f: R0 := R21
00057a74: R1 := 0x12000
00057a7a: R1 := R1 + 0x728
00057a7f: R30 := 0x11578
00057a81: call @strlcat with return %00057a83

00057a83:
00057a87: R1 := R22
00057a8c: R2 := 0x32
00057a92: R0 := R21
00057a97: R30 := 0x11588
00057a99: call @strlcat with return %00057a9b

00057a9b:
00057a9e: R30 := 0x1158C
00057aa0: call @new_auth with return %00057aa2

00057aa2:
00057aa6: R25 := R0
00057aab: R30 := 0x11594
00057aad: call @proxy_connect with return %00057aaf

00057aaf:
00057ab3: R27 := pad:64[31:0[R0]]
00057ab9: when ~31:31[R0] goto %00057ab7
0006cfff: goto %000583c4

00057ab7:
00057ac0: R2 := R21
00057ac6: R1 := R25
00057acb: R30 := 0x115D0
00057acd: call @prepare_http_connect with return %00057acf

00057acf:
00057ad2: goto %00057ad0

00057ad0:
00057ad7: R3 := R19 + 4
00057add: when 31:0[R0] = 0 goto %00057adb
0006d000: goto %000581e4

000581e4:
000581e7: R0 := 5
000581ed: R1 := R19
000581f3: R0 := pad:64[0x100.15:0[R0]]
000581fb: mem := mem with [R19, el]:u32 <- 31:0[R0]
00058200: mem := mem with [R19 + 4, el]:u32 <- 0
00058207: mem := mem with [R3 + 4, el]:u16 <- 0
0005820c: R2 := 0xA
00058212: R0 := pad:64[31:0[R23]]
00058217: R30 := 0x11504
00058219: call @write with return %0005821b

0005821b:
00058220: R0 := mem[R31 + 0x68, el]:u64
00058227: R0 := 0.31:0[R0 >> 0x20 | R0 << 0x20]
0005822c: R30 := 0x11510
0005822e: call @inet_ntoa with return %00058230

00058230:
00058234: R4 := R21
0005823a: R3 := R0
0005823f: R2 := 0x14000
00058245: R2 := R2 + 0x68
0005824a: R1 := 1
0005824f: R0 := 7
00058254: R30 := 0x1152C
00058256: call @__syslog_chk with return %00058258

00058258:
0005825c: R1 := pad:64[31:0[R27]]
00058262: R0 := pad:64[31:0[R23]]
00058267: R30 := 0x11538
00058269: call @tunnel with return %0005826b

0005826b:
0005826d: goto %00057b18

000583c4:
000583c8: R3 := R19 + 4
0006d001: goto %00057adb

00057adb:
00057ae3: R0 := 0x105
00057ae9: R1 := R19
00057aef: R0 := pad:64[0x100.15:0[R0]]
00057af7: mem := mem with [R19, el]:u32 <- 31:0[R0]
00057afc: mem := mem with [R19 + 4, el]:u32 <- 0
00057b03: mem := mem with [R3 + 4, el]:u16 <- 0
00057b09: R0 := pad:64[31:0[R23]]
00057b0e: R2 := 0xA
00057b13: R30 := 0x115C0
00057b15: call @write with return %00057b17

00057b17:
00057b1a: goto %00057b18

00057b18:
00057b1f: when R24 = 0 goto %00057b1d
0006d002: goto %00057f63

00057f63:
00057f6a: R0 := R24
00057f6f: R30 := 0x11230
00057f71: call @free with return %00057b1d

00057b1d:
00057b25: when R28 = 0 goto %0005799e
0006d003: goto %00057b29

00057b29:
00057b2d: R0 := R28
00057b32: R30 := 0x1123C
00057b34: call @free with return %00057b36

00057b36:
00057b38: goto %0005799e

000583ca:
000583cd: R0 := 0
000583d3: #1145 := R31 + 0x10
000583d8: R19 := mem[#1145, el]:u64
000583dd: R20 := mem[#1145 + 8, el]:u64
000583e3: #1146 := R31 + 0x20
000583e8: R21 := mem[#1146, el]:u64
000583ed: R22 := mem[#1146 + 8, el]:u64
000583f3: #1147 := R31 + 0x30
000583f8: R23 := mem[#1147, el]:u64
000583fd: R24 := mem[#1147 + 8, el]:u64
00058403: #1148 := R31 + 0x40
00058408: R25 := mem[#1148, el]:u64
0005840d: R26 := mem[#1148 + 8, el]:u64
00058413: #1149 := R31 + 0x50
00058418: R27 := mem[#1149, el]:u64
0005841d: R28 := mem[#1149 + 8, el]:u64
00058424: R29 := mem[R31, el]:u64
00058429: R30 := mem[R31 + 8, el]:u64
0005842d: R31 := R31 + 0x80
00058432: call R30 with noreturn

0006d004: sub srandom(srandom_arg1)
0006d18c: srandom_arg1 :: in u32 = low:32[R0]

0006132e:
00064deb: R16 := 0x27000
00064df2: R17 := mem[R16 + 0xED8, el]:u64
00064df8: R16 := R16 + 0xED8
00064dfd: call R17 with noreturn

0006d005: sub strcasecmp(strcasecmp_s1, strcasecmp_s2, strcasecmp_result)
0006d18d: strcasecmp_s1 :: in u64 = R0
0006d18e: strcasecmp_s2 :: in u64 = R1
0006d18f: strcasecmp_result :: out u32 = low:32[R0]

00049f7b:
00064a7b: R16 := 0x27000
00064a82: R17 := mem[R16 + 0xD98, el]:u64
00064a88: R16 := R16 + 0xD98
00064a8d: call R17 with noreturn

0006d006: sub strcat(strcat_dst, strcat_src, strcat_result)
0006d190: strcat_dst :: in out u64 = R0
0006d191: strcat_src :: in u64 = R1
0006d192: strcat_result :: out u64 = R0

00051101:
0006499f: R16 := 0x27000
000649a6: R17 := mem[R16 + 0xD48, el]:u64
000649ac: R16 := R16 + 0xD48
000649b1: call R17 with noreturn

0006d007: sub strchr(strchr_s, strchr_c, strchr_result)
0006d193: strchr_s :: in u64 = R0
0006d194: strchr_c :: in u32 = low:32[R1]
0006d195: strchr_result :: out u64 = R0

00053580:
00064ccd: R16 := 0x27000
00064cd4: R17 := mem[R16 + 0xE70, el]:u64
00064cda: R16 := R16 + 0xE70
00064cdf: call R17 with noreturn

0006d008: sub strcmp(strcmp_s1, strcmp_s2, strcmp_result)
0006d196: strcmp_s1 :: in u64 = R0
0006d197: strcmp_s2 :: in u64 = R1
0006d198: strcmp_result :: out u32 = low:32[R0]

000580a8:
00064c07: R16 := 0x27000
00064c0e: R17 := mem[R16 + 0xE28, el]:u64
00064c14: R16 := R16 + 0xE28
00064c19: call R17 with noreturn

0006d009: sub strcpy(strcpy_dst, strcpy_src, strcpy_result)
0006d199: strcpy_dst :: in out u64 = R0
0006d19a: strcpy_src :: in u64 = R1
0006d19b: strcpy_result :: out u64 = R0

0005a61b:
00064d3b: R16 := 0x27000
00064d42: R17 := mem[R16 + 0xE98, el]:u64
00064d48: R16 := R16 + 0xE98
00064d4d: call R17 with noreturn

0006d00a: sub strcspn(strcspn_s, strcspn_reject, strcspn_result)
0006d19c: strcspn_s :: in u64 = R0
0006d19d: strcspn_reject :: in u64 = R1
0006d19e: strcspn_result :: out u64 = R0

0004caa5:
00064e59: R16 := 0x27000
00064e60: R17 := mem[R16 + 0xF00, el]:u64
00064e66: R16 := R16 + 0xF00
00064e6b: call R17 with noreturn

0006d00b: sub strdup(strdup_s, strdup_result)
0006d19f: strdup_s :: in u64 = R0
0006d1a0: strdup_result :: out u64 = R0

00049e14:
00064abd: R16 := 0x27000
00064ac4: R17 := mem[R16 + 0xDB0, el]:u64
00064aca: R16 := R16 + 0xDB0
00064acf: call R17 with noreturn

0006d00c: sub strerror(strerror_result)
0006d1a1: strerror_result :: out u32 = low:32[R0]

0004cee1:
00064ad3: R16 := 0x27000
00064ada: R17 := mem[R16 + 0xDB8, el]:u64
00064ae0: R16 := R16 + 0xDB8
00064ae5: call R17 with noreturn

0006d00d: sub strlcat(strlcat_result)
0006d1a2: strlcat_result :: out u32 = low:32[R0]

00045f1e:
00045f22: #13 := R31 - 0x20
00045f28: mem := mem with [#13, el]:u64 <- R29
00045f2e: mem := mem with [#13 + 8, el]:u64 <- R30
00045f32: R31 := #13
00045f38: R29 := R31
00045f40: mem := mem with [R31 + 0x10, el]:u64 <- R19
00045f46: R19 := R0
00045f4c: R0 := R1
00045f52: when R2 = 0 goto %00045f50
0006d00e: goto %0005fc78

00045f50:
00045f58: R19 := 0
0006d00f: goto %00045f5a

0005fc78:
0005fc7d: R6 := R19 + R2
0005fc83: R3 := R19
0005fc88: goto %0005fc86

0005fc86:
0005fc8e: R4 := pad:64[mem[R3]]
0005fc95: when 31:0[R4] <> 0 goto %0005fc93
0006d010: goto %0005fcbf

0005fc93:
0005fc9c: R3 := R3 + 1
0005fca2: #1471 := ~R6
0005fca7: #1472 := R3 + ~R6 + 1
0005fcad: VF := extend:65[#1472] <> extend:65[R3] + extend:65[#1471] + 1
0005fcb3: CF := pad:65[#1472] <> pad:65[R3] + pad:65[#1471] + 1
0005fcb7: ZF := #1472 = 0
0005fcbb: NF := 63:63[#1472]
0005fcc1: when ZF goto %0005fcbf
0006d011: goto %0005fc86

0005fcbf:
0005fcc9: R19 := R3 + ~R19 + 1
0005fccf: #1473 := ~R19
0005fcd4: #1474 := R2 + ~R19 + 1
0005fcda: VF := extend:65[#1474] <> extend:65[R2] + extend:65[#1473] + 1
0005fce0: CF := pad:65[#1474] <> pad:65[R2] + pad:65[#1473] + 1
0005fce4: ZF := #1474 = 0
0005fce8: NF := 63:63[#1474]
0005fcec: R2 := #1474
0005fcf1: when ZF goto %00045f5a
0006d012: goto %0005fcf5

00045f5a:
00045f5d: R30 := 0x5868
00045f60: call @strlen with return %00045f62

00045f62:
00045f67: R19 := R19 + R0
00045f6d: R0 := R19
00045f74: R19 := mem[R31 + 0x10, el]:u64
00045f7b: R29 := mem[R31, el]:u64
00045f80: R30 := mem[R31 + 8, el]:u64
00045f84: R31 := R31 + 0x20
00045f89: call R30 with noreturn

0005fcf5:
0005fcfa: R6 := pad:64[mem[R0]]
0005fd00: R5 := R0
0005fd06: R4 := R3
0005fd0d: when 31:0[R6] <> 0 goto %0005fd0b
0006d013: goto %0005fdb7

0005fd0b:
0005fd14: R4 := R3
0005fd1a: #1475 := R2 - 1
0005fd1f: VF := extend:65[#1475] <> extend:65[R2] - 1
0005fd24: CF := pad:65[#1475] <> pad:65[R2] + 0xFFFFFFFFFFFFFFFF
0005fd28: ZF := #1475 = 0
0005fd2c: NF := 63:63[#1475]
0005fd32: when ZF <> 1 goto %0005fd30
0006d014: goto %0005fd9a

0005fd9a:
0005fd9e: #1477 := R5 + 1
0005fda3: R1 := pad:64[mem[#1477]]
0005fda7: R5 := #1477
0005fdad: when 31:0[R1] <> 0 goto %0005fd9a
0006d015: goto %0005fdb1

0005fdb1:
0005fdb5: R4 := R3
0006d016: goto %0005fd5e

0005fd30:
0005fd3b: mem := mem with [R4] <- 7:0[R6]
0005fd3f: R4 := R4 + 1
0005fd45: R2 := R2 - 1
0005fd4b: #1476 := R5 + 1
0005fd50: R6 := pad:64[mem[#1476]]
0005fd54: R5 := #1476
0005fd5a: R3 := R4
0005fd60: when 31:0[R6] = 0 goto %0005fd5e
0006d017: goto %0005fd0b

0005fd5e:
0005fd68: R5 := R5 + ~R0 + 1
0005fd6f: R19 := R19 + R5
0006d018: goto %0005fd71

0005fdb7:
0005fdb9: goto %0005fd71

0005fd71:
0005fd76: mem := mem with [R4] <- 0
0005fd7c: R0 := R19
0005fd83: R19 := mem[R31 + 0x10, el]:u64
0005fd8a: R29 := mem[R31, el]:u64
0005fd8f: R30 := mem[R31 + 8, el]:u64
0005fd93: R31 := R31 + 0x20
0005fd98: call R30 with noreturn

0006d019: sub strlcpy(strlcpy_result)
0006d1a3: strlcpy_result :: out u32 = low:32[R0]

00045edf:
00045ee6: R3 := R0
00045eec: when R2 = 0 goto %00045eea
0006d01a: goto %0005fdbb

00045eea:
00045ef3: R2 := R1
0006d01b: goto %00045ef7

0005fdbb:
0005fdbf: R5 := R2 - 1
0005fdc5: R2 := R1
0005fdcc: R5 := R0 + R5
0005fdd1: goto %0005fdcf

0005fdcf:
0005fdd6: R0 := R2
0005fddc: #1478 := ~R5
0005fde1: #1479 := R3 + ~R5 + 1
0005fde7: VF := extend:65[#1479] <> extend:65[R3] + extend:65[#1478] + 1
0005fded: CF := pad:65[#1479] <> pad:65[R3] + pad:65[#1478] + 1
0005fdf1: ZF := #1479 = 0
0005fdf5: NF := 63:63[#1479]
0005fdfb: R2 := R2 + 1
0005fe01: when ZF <> 1 goto %0005fdff
0006d01c: goto %0005fe30

0005fe30:
0005fe34: R2 := R0
0005fe3b: mem := mem with [R3] <- 0
0005fe42: R3 := pad:64[mem[R2]]
0005fe46: R2 := R2 + 1
0005fe4c: when 31:0[R3] <> 0 goto %00045ef7
0006d01d: goto %0005fe19

00045ef7:
00045efc: R3 := pad:64[mem[R2]]
00045f00: R2 := R2 + 1
00045f06: when 31:0[R3] <> 0 goto %00045ef7
0006d01e: goto %00045f0a

00045f0a:
00045f0f: R0 := R2 + ~R1 + 1
00045f15: R0 := R0 - 1
00045f1a: call R30 with noreturn

0005fdff:
0005fe09: R4 := pad:64[mem[R2 - 1]]
0005fe11: mem := mem with [R3] <- 7:0[R4]
0005fe15: R3 := R3 + 1
0005fe1b: when 31:0[R4] = 0 goto %0005fe19
0006d01f: goto %0005fdcf

0005fe19:
0005fe23: R0 := R2 + ~R1 + 1
0005fe29: R0 := R0 - 1
0005fe2e: call R30 with noreturn

0006d020: sub strlen(strlen_s, strlen_result)
0006d1a4: strlen_s :: in u64 = R0
0006d1a5: strlen_result :: out u64 = R0

00045f5e:
00064737: R16 := 0x27000
0006473e: R17 := mem[R16 + 0xC68, el]:u64
00064744: R16 := R16 + 0xC68
00064749: call R17 with noreturn

0006d021: sub strncasecmp(strncasecmp_s1, strncasecmp_s2, strncasecmp_n, strncasecmp_result)
0006d1a6: strncasecmp_s1 :: in u64 = R0
0006d1a7: strncasecmp_s2 :: in u64 = R1
0006d1a8: strncasecmp_n :: in u64 = R2
0006d1a9: strncasecmp_result :: out u32 = low:32[R0]

00053cd7:
00064ca1: R16 := 0x27000
00064ca8: R17 := mem[R16 + 0xE60, el]:u64
00064cae: R16 := R16 + 0xE60
00064cb3: call R17 with noreturn

0006d022: sub strncpy(strncpy_dst, strncpy_src, strncpy_n, strncpy_result)
0006d1aa: strncpy_dst :: in out u64 = R0
0006d1ab: strncpy_src :: in u64 = R1
0006d1ac: strncpy_n :: in u64 = R2
0006d1ad: strncpy_result :: out u64 = R0

00050dd1:
00064e17: R16 := 0x27000
00064e1e: R17 := mem[R16 + 0xEE8, el]:u64
00064e24: R16 := R16 + 0xEE8
00064e29: call R17 with noreturn

0006d023: sub strstr(strstr_haystack, strstr_needle, strstr_result)
0006d1ae: strstr_haystack :: in u64 = R0
0006d1af: strstr_needle :: in u64 = R1
0006d1b0: strstr_result :: out u64 = R0

0004ae85:
00064dd5: R16 := 0x27000
00064ddc: R17 := mem[R16 + 0xED0, el]:u64
00064de2: R16 := R16 + 0xED0
00064de7: call R17 with noreturn

0006d024: sub strtok_r(strtok_r_str, strtok_r_delim, strtok_r_saveptr, strtok_r_result)
0006d1b1: strtok_r_str :: in out u64 = R0
0006d1b2: strtok_r_delim :: in u64 = R1
0006d1b3: strtok_r_saveptr :: in out u64 = R2
0006d1b4: strtok_r_result :: out u64 = R0

00057257:
000648d9: R16 := 0x27000
000648e0: R17 := mem[R16 + 0xD00, el]:u64
000648e6: R16 := R16 + 0xD00
000648eb: call R17 with noreturn

0006d025: sub strtol(strtol_nptr, strtol_endptr, strtol_base, strtol_result)
0006d1b5: strtol_nptr :: in u64 = R0
0006d1b6: strtol_endptr :: in out u64 = R1
0006d1b7: strtol_base :: in u32 = low:32[R2]
0006d1b8: strtol_result :: out u64 = R0

0004c98b:
00064c33: R16 := 0x27000
00064c3a: R17 := mem[R16 + 0xE38, el]:u64
00064c40: R16 := R16 + 0xE38
00064c45: call R17 with noreturn

0006d026: sub strtoll(strtoll_nptr, strtoll_endptr, strtoll_base, strtoll_result)
0006d1b9: strtoll_nptr :: in u64 = R0
0006d1ba: strtoll_endptr :: in out u64 = R1
0006d1bb: strtoll_base :: in u32 = low:32[R2]
0006d1bc: strtoll_result :: out u64 = R0

00054686:
000647a5: R16 := 0x27000
000647ac: R17 := mem[R16 + 0xC90, el]:u64
000647b2: R16 := R16 + 0xC90
000647b7: call R17 with noreturn

0006d027: sub strtoul(strtoul_nptr, strtoul_endptr, strtoul_base, strtoul_result)
0006d1bd: strtoul_nptr :: in u64 = R0
0006d1be: strtoul_endptr :: in out u64 = R1
0006d1bf: strtoul_base :: in u32 = low:32[R2]
0006d1c0: strtoul_result :: out u64 = R0

0006196a:
00064721: R16 := 0x27000
00064728: R17 := mem[R16 + 0xC60, el]:u64
0006472e: R16 := R16 + 0xC60
00064733: call R17 with noreturn

0006d028: sub substr(substr_result)
0006d1c1: substr_result :: out u32 = low:32[R0]

0004a149:
0004a14d: #270 := R31 - 0x30
0004a153: mem := mem with [#270, el]:u64 <- R29
0004a159: mem := mem with [#270 + 8, el]:u64 <- R30
0004a15d: R31 := #270
0004a163: R29 := R31
0004a169: #271 := R31 + 0x10
0004a16f: mem := mem with [#271, el]:u64 <- R19
0004a175: mem := mem with [#271 + 8, el]:u64 <- R20
0004a17b: R19 := pad:64[31:0[R2]]
0004a181: R20 := R0
0004a187: #272 := R31 + 0x20
0004a18d: mem := mem with [#272, el]:u64 <- R21
0004a193: mem := mem with [#272 + 8, el]:u64 <- R22
0004a19a: R22 :=

0004a19f: R30 := 0x5288
0004a1a1: call @strlen with return %0004a1a3

0004a1a3:
0004a1a7: #273 := 31:0[R19] + 0
0004a1ac: VF := extend:33[#273] <> extend:33[31:0[R19]] + 0
0004a1b1: CF := pad:33[#273] <> pad:33[31:0[R19]] - 0x100000000
0004a1b5: ZF := #273 = 0
0004a1b9: NF := 31:31[#273]
0004a1c0: R1 := R0 + ~R22 + 1
0004a1ce: when ZF <> 1 goto %0004a1c6
0004a1cf: goto %0004a1ca

0004a1ca:
0004a1cb: R19 := pad:64[31:0[R0]]
0004a1d1: goto %0004a1cd

0004a1c6:
0004a1c7: R19 := pad:64[31:0[R19]]
0004a1d0: goto %0004a1cd

0004a1cd:
0004a1d8: R0 := pad:64[31:0[R0] + ~31:0[R22] + 1]
0004a1de: #274 := ~extend:64[31:0[R19]]
0004a1e3: #275 := R1 + ~extend:64[31:0[R19]] + 1
0004a1e9: VF := extend:65[#275] <> extend:65[R1] + extend:65[#274] + 1
0004a1ef: CF := pad:65[#275] <> pad:65[R1] + pad:65[#274] + 1
0004a1f3: ZF := #275 = 0
0004a1f7: NF := 63:63[#275]
0004a206: when ~(CF & ~ZF) goto %0004a1fe
0004a207: goto %0004a202

0004a202:
0004a203: R19 := pad:64[31:0[R19]]
0004a209: goto %0004a205

0004a1fe:
0004a1ff: R19 := pad:64[31:0[R0]]
0004a208: goto %0004a205

0004a205:
0004a20f: #276 := 31:0[R19] + 0
0004a214: VF := extend:33[#276] <> extend:33[31:0[R19]] + 0
0004a219: CF := pad:33[#276] <> pad:33[31:0[R19]] - 0x100000000
0004a21d: ZF := #276 = 0
0004a221: NF := 31:31[#276]
0004a229: when ~(NF = VF & ~ZF) goto %0004a227
0006d029: goto %0004ab63

0004a227:
0004a230: #277 := R31 + 0x10
0004a235: R19 := mem[#277, el]:u64
0004a23a: R20 := mem[#277 + 8, el]:u64
0004a23f: R1 := 1
0004a245: #278 := R31 + 0x20
0004a24a: R21 := mem[#278, el]:u64
0004a24f: R22 := mem[#278 + 8, el]:u64
0004a255: R0 := R1
0004a25c: R29 := mem[R31, el]:u64
0004a261: R30 := mem[R31 + 8, el]:u64
0004a265: R31 := R31 + 0x30
0004a269: call @calloc with noreturn

0004ab63:
0004ab67: R0 := pad:64[31:0[R19] + 1]
0004ab6c: R1 := 1
0004ab73: R19 :=

0004ab7a: R0 :=

0004ab7f: R30 := 0x52BC
0004ab81: call @calloc with return %0004ab83

0004ab83:
0004ab88: R1 := R20 + R22
0004ab8e: R2 := R0
0006d02a: goto %0004ab90

0004ab90:
0004ab95: R3 := pad:64[mem[R1]]
0004ab99: R1 := R1 + 1
0004aba1: mem := mem with [R2] <- 7:0[R3]
0004aba5: R2 := R2 + 1
0004abac: R4 := R19 + ~R2 + 1
0004abb2: when 31:0[R3] = 0 goto %0004abb0
0006d02b: goto %0004abea

0004abea:
0004abef: #308 := R0 + R4
0004abf5: VF := extend:65[#308] <> extend:65[R0] + extend:65[R4]
0004abfb: CF := pad:65[#308] <> pad:65[R0] + pad:65[R4]
0004abff: ZF := #308 = 0
0004ac03: NF := 63:63[#308]
0004ac08: when ZF <> 1 goto %0004ab90
0006d02c: goto %0004ac0c

0004ac0c:
0004ac11: mem := mem with [R2] <- 0
0006d02d: goto %0004ac13

0004ac13:
0004ac18: R2 := pad:64[mem[R1]]
0004ac1c: R1 := R1 + 1
0004ac22: when 31:0[R2] <> 0 goto %0004ac13
0006d02e: goto %0004abb0

0004abb0:
0004abb9: #306 := R31 + 0x10
0004abbe: R19 := mem[#306, el]:u64
0004abc3: R20 := mem[#306 + 8, el]:u64
0004abc9: #307 := R31 + 0x20
0004abce: R21 := mem[#307, el]:u64
0004abd3: R22 := mem[#307 + 8, el]:u64
0004abda: R29 := mem[R31, el]:u64
0004abdf: R30 := mem[R31 + 8, el]:u64
0004abe3: R31 := R31 + 0x30
0004abe8: call R30 with noreturn

0006d02f: sub tcgetattr(tcgetattr_result)
0006d1c2: tcgetattr_result :: out u32 = low:32[R0]

000609fd:
0006486b: R16 := 0x27000
00064872: R17 := mem[R16 + 0xCD8, el]:u64
00064878: R16 := R16 + 0xCD8
0006487d: call R17 with noreturn

0006d030: sub tcsetattr(tcsetattr_result)
0006d1c3: tcsetattr_result :: out u32 = low:32[R0]

00060ab4:
00064d7d: R16 := 0x27000
00064d84: R17 := mem[R16 + 0xEB0, el]:u64
00064d8a: R16 := R16 + 0xEB0
00064d8f: call R17 with noreturn

0006d031: sub time(time_result)
0006d1c4: time_result :: out u32 = low:32[R0]

00052de0:
00064905: R16 := 0x27000
0006490c: R17 := mem[R16 + 0xD10, el]:u64
00064912: R16 := R16 + 0xD10
00064917: call R17 with noreturn

0006d032: sub to_base64(to_base64_result)
0006d1c5: to_base64_result :: out u32 = low:32[R0]

00046601:
00046605: #56 := R2 - 2
0004660a: VF := extend:65[#56] <> extend:65[R2] - 2
0004660f: CF := pad:65[#56] <> pad:65[R2] + 0xFFFFFFFFFFFFFFFE
00046613: ZF := #56 = 0
00046617: NF := 63:63[#56]
0004661d: #57 := R3 - 0xA
00046644: goto %0004663e

0004663e:
00046640: when CF & ~ZF goto %00046623
00046641: goto %00046633

00046633:
00046634: VF := 0
00046637: CF := 0
0004663a: ZF := 0
0004663d: NF := 0
00046643: goto %0004663f

00046623:
00046624: VF := extend:65[#57] <> extend:65[R3] - 0xA
00046629: CF := pad:65[#57] <> pad:65[R3] + 0xFFFFFFFFFFFFFFF6
0004662d: ZF := #57 = 0
00046631: NF := 63:63[#57]
00046642: goto %0004663f

0004663f:
0004664b: when ~(CF & ~ZF) goto %00046649
0006d033: goto %0005f832

0005f832:
0005f835: R4 := 0x28000
0005f83b: R4 := R4 + 0x10
0005f841: R4 := R4 + 0x220
0006d034: goto %0005f843

0005f843:
0005f848: R5 := pad:64[mem[R1]]
0005f84e: R0 := R0 + 4
0005f854: R2 := R2 - 3
0005f85a: R3 := R3 - 4
0005f860: #1454 := R2 - 2
0005f865: VF := extend:65[#1454] <> extend:65[R2] - 2
0005f86a: CF := pad:65[#1454] <> pad:65[R2] + 0xFFFFFFFFFFFFFFFE
0005f86e: ZF := #1454 = 0
0005f872: NF := 63:63[#1454]
0005f878: R1 := R1 + 3
0005f87f: R5 := pad:64[0.29:0[31:0[R5] >> 2 | 31:0[R5] << 0x1E]]
0005f885: #1455 := R3 - 0xA
0005f8ac: goto %0005f8a6

0005f8a6:
0005f8a8: when CF & ~ZF goto %0005f88b
0005f8a9: goto %0005f89b

0005f89b:
0005f89c: VF := 0
0005f89f: CF := 0
0005f8a2: ZF := 0
0005f8a5: NF := 0
0005f8ab: goto %0005f8a7

0005f88b:
0005f88c: VF := extend:65[#1455] <> extend:65[R3] - 0xA
0005f891: CF := pad:65[#1455] <> pad:65[R3] + 0xFFFFFFFFFFFFFFF6
0005f895: ZF := #1455 = 0
0005f899: NF := 63:63[#1455]
0005f8aa: goto %0005f8a7

0005f8a7:
0005f8b4: R5 := pad:64[mem[R4 + extend:64[31:0[R5]]]]
0005f8bc: mem := mem with [R0 - 4] <- 7:0[R5]
0005f8c3: R6 := pad:64[mem[R1 - 3]]
0005f8ca: R5 := pad:64[mem[R1 - 2]]
0005f8d1: R6 := pad:64[0.5:4[31:0[R6] >> 0x1C | 31:0[R6] << 4].0]
0005f8d8: R5 := pad:64[31:0[R6] | 31:0[R5] >> 4]
0005f8e0: R5 := pad:64[mem[R4 + extend:64[31:0[R5]]]]
0005f8e8: mem := mem with [R0 - 3] <- 7:0[R5]
0005f8ef: R6 := pad:64[mem[R1 - 2]]
0005f8f6: R5 := pad:64[mem[R1 - 1]]
0005f8fd: R6 := pad:64[0.5:2[31:0[R6] >> 0x1E | 31:0[R6] << 2].0]
0005f904: R5 := pad:64[31:0[R6] | 31:0[R5] >> 6]
0005f90c: R5 := pad:64[mem[R4 + extend:64[31:0[R5]]]]
0005f914: mem := mem with [R0 - 2] <- 7:0[R5]
0005f91b: R5 := pad:64[mem[R1 - 1]]
0005f921: R5 := pad:64[0.5:0[R5]]
0005f929: R5 := pad:64[mem[R4 + extend:64[31:0[R5]]]]
0005f931: mem := mem with [R0 - 1] <- 7:0[R5]
0005f937: when CF & ~ZF goto %0005f843
0006d035: goto %00046649

00046649:
00046652: #58 := R2 + 0
00046657: VF := extend:65[#58] <> extend:65[R2] + 0
0004665c: CF := pad:65[#58] <> pad:65[R2] - 0x10000000000000000
00046660: ZF := #58 = 0
00046664: NF := 63:63[#58]
0004666a: #59 := R3 - 4
00046690: goto %0004668a

0004668a:
0004668c: when ZF <> 1 goto %0004666f
0004668d: goto %0004667f

0004667f:
00046680: VF := 0
00046683: CF := 0
00046686: ZF := 0
00046689: NF := 0
0004668f: goto %0004668b

0004666f:
00046670: VF := extend:65[#59] <> extend:65[R3] - 4
00046675: CF := pad:65[#59] <> pad:65[R3] + 0xFFFFFFFFFFFFFFFC
00046679: ZF := #59 = 0
0004667d: NF := 63:63[#59]
0004668e: goto %0004668b

0004668b:
00046697: when ~(CF & ~ZF) goto %00046695
0006d036: goto %0005f7a1

0005f7a1:
0005f7a6: R4 := pad:64[mem[R1]]
0005f7ab: R3 := 0x28000
0005f7b1: R3 := R3 + 0x10
0005f7b7: #1453 := R2 - 1
0005f7bc: VF := extend:65[#1453] <> extend:65[R2] - 1
0005f7c1: CF := pad:65[#1453] <> pad:65[R2] + 0xFFFFFFFFFFFFFFFF
0005f7c5: ZF := #1453 = 0
0005f7c9: NF := 63:63[#1453]
0005f7cf: R2 := R3 + 0x220
0005f7d6: R3 := pad:64[0.29:0[31:0[R4] >> 2 | 31:0[R4] << 0x1E]]
0005f7de: R3 := pad:64[mem[R2 + extend:64[31:0[R3]]]]
0005f7e6: mem := mem with [R0] <- 7:0[R3]
0005f7ed: R3 := pad:64[mem[R1]]
0005f7f4: R3 := pad:64[0.5:4[31:0[R3] >> 0x1C | 31:0[R3] << 4].0]
0005f7fa: when ~(CF & ~ZF) goto %000466a6
0006d037: goto %0005f7fe

000466a6:
000466ac: R1 := pad:64[mem[R2 + extend:64[31:0[R3]]]]
000466b1: R2 := 0x3D
000466b9: mem := mem with [R0 + 1] <- 7:0[R1]
000466be: goto %000466bc

0005f7fe:
0005f803: R4 := pad:64[mem[R1 + 1]]
0005f80a: R3 := pad:64[31:0[R3] | 31:0[R4] >> 4]
0005f812: R3 := pad:64[mem[R2 + extend:64[31:0[R3]]]]
0005f81a: mem := mem with [R0 + 1] <- 7:0[R3]
0005f821: R1 := pad:64[mem[R1 + 1]]
0005f828: R1 := pad:64[0.5:2[31:0[R1] >> 0x1E | 31:0[R1] << 2].0]
0005f830: R2 := pad:64[mem[R2 + extend:64[31:0[R1]]]]
0006d038: goto %000466bc

000466bc:
000466c2: R1 := 0x3D
000466c8: R0 := R0 + 4
000466d0: mem := mem with [R0 - 2] <- 7:0[R2]
000466d8: mem := mem with [R0 - 1] <- 7:0[R1]
0006d039: goto %00046695

00046695:
0004669f: mem := mem with [R0] <- 0
000466a4: call R30 with noreturn

0006d03a: sub trimr(trimr_result)
0006d1c6: trimr_result :: out u32 = low:32[R0]

0004a690:
0004a694: #295 := R31 - 0x20
0004a69a: mem := mem with [#295, el]:u64 <- R29
0004a6a0: mem := mem with [#295 + 8, el]:u64 <- R30
0004a6a4: R31 := #295
0004a6aa: R29 := R31
0004a6b0: #296 := R31 + 0x10
0004a6b6: mem := mem with [#296, el]:u64 <- R19
0004a6bc: mem := mem with [#296 + 8, el]:u64 <- R20
0004a6c2: R20 := R0
0004a6c7: R30 := 0x56E4
0004a6c9: call @strlen with return %0004a6cb

0004a6cb:
0004a6cf: #297 := 31:0[R0] - 1
0004a6d4: VF := extend:33[#297] <> extend:33[31:0[R0]] - 1
0004a6d9: CF := pad:33[#297] <> pad:33[31:0[R0]] + 0xFFFFFFFF
0004a6dd: ZF := #297 = 0
0004a6e1: NF := 31:31[#297]
0004a6e5: R19 := pad:64[#297]
0004a6eb: when NF goto %0004a6e9
0006d03b: goto %0004a772

0004a6e9:
0004a6f3: R1 :=

0004a6f8: goto %0004a6f6

0004a772:
0004a775: R30 := 0x56F0
0004a777: call @__ctype_b_loc with return %0004a779

0004a779:
0004a77e: R1 :=

0004a785: R0 := mem[R0, el]:u64
0004a78a: goto %0004a788

0004a788:
0004a791: R2 := pad:64[mem[R20 + R1]]
0004a797: R3 := pad:64[31:0[R1] - 1]
0004a79f: R2 := pad:64[mem[R0 + (62:0[R2].0), el]:u16]
0004a7a5: when 13:13[R2] goto %0004a7a3
0006d03c: goto %0004a6f6

0004a6f6:
0004a6fe: R1 := R20 + R1
0004a704: R0 := R20
0004a70b: mem := mem with [R1 + 1] <- 0
0004a711: #298 := R31 + 0x10
0004a716: R19 := mem[#298, el]:u64
0004a71b: R20 := mem[#298 + 8, el]:u64
0004a722: R29 := mem[R31, el]:u64
0004a727: R30 := mem[R31 + 8, el]:u64
0004a72b: R31 := R31 + 0x20
0004a730: call R30 with noreturn

0004a7a3:
0004a7ac: R1 := R1 - 1
0004a7b1: when 31:31[R1] goto %0004a732
0006d03d: goto %0004a788

0004a732:
0004a737: R1 :=

0004a73d: R0 := R20
0004a744: R1 := R20 + R1
0004a74b: mem := mem with [R1 + 1] <- 0
0004a751: #299 := R31 + 0x10
0004a756: R19 := mem[#299, el]:u64
0004a75b: R20 := mem[#299 + 8, el]:u64
0004a762: R29 := mem[R31, el]:u64
0004a767: R30 := mem[R31 + 8, el]:u64
0004a76b: R31 := R31 + 0x20
0004a770: call R30 with noreturn

0006d03e: sub tunnel(tunnel_result)
0006d1c7: tunnel_result :: out u32 = low:32[R0]

00054251:
00054255: #870 := R31 - 0x100
0005425b: mem := mem with [#870, el]:u64 <- R29
00054261: mem := mem with [#870 + 8, el]:u64 <- R30
00054265: R31 := #870
0005426b: R29 := R31
00054271: #871 := R31 + 0x50
00054277: mem := mem with [#871, el]:u64 <- R27
0005427d: mem := mem with [#871 + 8, el]:u64 <- R28
00054282: R27 := 0x27000
00054289: R2 := mem[R27 + 0xFB8, el]:u64
0005428f: #872 := R31 + 0x40
00054295: mem := mem with [#872, el]:u64 <- R25
0005429b: mem := mem with [#872 + 8, el]:u64 <- R26
000542a1: R25 := pad:64[31:0[R1]]
000542a8: R1 := mem[R2, el]:u64
000542b0: mem := mem with [R31 + 0xF8, el]:u64 <- R1
000542b5: R1 := 0
000542bb: R26 := pad:64[31:0[R0]]
000542c0: R0 := 0x1000
000542c6: #873 := R31 + 0x10
000542cc: mem := mem with [#873, el]:u64 <- R19
000542d2: mem := mem with [#873 + 8, el]:u64 <- R20
000542d8: #874 := R31 + 0x20
000542de: mem := mem with [#874, el]:u64 <- R21
000542e4: mem := mem with [#874 + 8, el]:u64 <- R22
000542ea: #875 := R31 + 0x30
000542f0: mem := mem with [#875, el]:u64 <- R23
000542f6: mem := mem with [#875 + 8, el]:u64 <- R24
000542fb: R30 := 0xC430
000542fd: call @new with return %000542ff

000542ff:
00054302: R1 := 0x27000
00054308: R22 := R0
0005430f: R1 := mem[R1 + 0xF78, el]:u64
00054316: R0 := pad:64[mem[R1, el]:u32]
0005431d: when 31:0[R0] <> 0 goto %0005431b
0006d03f: goto %00054344

0005431b:
00054324: R3 := pad:64[31:0[R25]]
0005432a: R2 := pad:64[31:0[R26]]
0005432f: R1 := 0x12000
00054334: R0 := 1
0005433a: R1 := R1 + 0x8E0
0005433f: R30 := 0xC5C8
00054341: call @__printf_chk with return %00054343

00054343:
00054346: goto %00054344

00054344:
0005434b: #876 := ~31:0[R26]
0005434f: #877 := ~31:0[R26] + 1
00054354: VF := extend:33[#877] <> extend:33[#876] + 1
00054359: CF := pad:33[#877] <> pad:33[#876] + 1
0005435d: ZF := #877 = 0
00054361: NF := 31:31[#877]
00054365: R20 := pad:64[#877]
0005436b: R0 := pad:64[0.5:0[R26]]
00054371: R20 := pad:64[0.5:0[R20]]
00054377: R1 := pad:64[0.5:0[R25]]
00054385: when NF goto %0005437d
00054386: goto %00054381

00054381:
00054382: R20 := pad:64[~31:0[R20] + 1]
00054388: goto %00054384

0005437d:
0005437e: R20 := pad:64[31:0[R0]]
00054387: goto %00054384

00054384:
0005438e: #878 := ~31:0[R25]
00054392: #879 := ~31:0[R25] + 1
00054397: VF := extend:33[#879] <> extend:33[#878] + 1
0005439c: CF := pad:33[#879] <> pad:33[#878] + 1
000543a0: ZF := #879 = 0
000543a4: NF := 31:31[#879]
000543a8: R0 := pad:64[#879]
000543ae: R0 := pad:64[0.5:0[R0]]
000543b3: R23 := 1
000543c1: when NF goto %000543b9
000543c2: goto %000543bd

000543bd:
000543be: R0 := pad:64[~31:0[R0] + 1]
000543c4: goto %000543c0

000543b9:
000543ba: R0 := pad:64[31:0[R1]]
000543c3: goto %000543c0

000543c0:
000543cb: R21 :=

000543d0: V0 := 0
000543d7: R24 :=

000543dd: R19 := R31 + 0x70
000543e4: R20 := R23 << pad:7[5:0[R20]]
000543eb: R23 := R23 << pad:7[5:0[R0]]
0006d040: goto %000543ed

000543ed:
000543f1: R0 := R21
000543f7: #880 := R31 + 0x70
000543fd: mem := mem with [#880, el]:u128 <- V0
00054403: mem := mem with [#880 + 0x10, el]:u128 <- V0
00054409: #881 := R31 + 0x90
0005440f: mem := mem with [#881, el]:u128 <- V0
00054415: mem := mem with [#881 + 0x10, el]:u128 <- V0
0005441b: #882 := R31 + 0xB0
00054421: mem := mem with [#882, el]:u128 <- V0
00054427: mem := mem with [#882 + 0x10, el]:u128 <- V0
0005442d: #883 := R31 + 0xD0
00054433: mem := mem with [#883, el]:u128 <- V0
00054439: mem := mem with [#883 + 0x10, el]:u128 <- V0
0005443e: R30 := 0xC498
00054441: call @__fdelt_chk with return %00054443

00054443:
00054447: R1 := R0
0005444d: R0 := R24
00054455: R2 := mem[R19 + (60:0[R1].0), el]:u64
0005445c: R2 := R2 | R20
00054465: mem := mem with [R19 + (60:0[R1].0), el]:u64 <- R2
0005446a: R30 := 0xC4B0
0005446c: call @__fdelt_chk with return %0005446e

0005446e:
00054472: R5 := R0
00054478: R1 := R19
0005447d: R4 := 0
00054482: R3 := 0
00054487: R2 := 0
0005448f: R6 := mem[R19 + (60:0[R5].0), el]:u64
00054494: R0 := 0x400
0005449b: R6 := R6 | R23
000544a4: mem := mem with [R19 + (60:0[R5].0), el]:u64 <- R6
000544a9: R30 := 0xC4D8
000544ac: call @select with return %000544ae

000544ae:
000544b2: #884 := 31:0[R0] + 0
000544b7: VF := extend:33[#884] <> extend:33[31:0[R0]] + 0
000544bc: CF := pad:33[#884] <> pad:33[31:0[R0]] - 0x100000000
000544c0: ZF := #884 = 0
000544c4: NF := 31:31[#884]
000544c9: V0 := 0
000544d1: when ~(NF = VF & ~ZF) goto %000544cf
0006d041: goto %0005e571

000544cf:
000544d7: when ZF goto %000543ed
0006d042: goto %000544db

000544db:
000544df: R0 := R22
000544e4: R30 := 0xC53C
000544e6: call @free with return %000544e8

000544e8:
000544eb: R0 := 0
000544f0: goto %000544ee

0005e571:
0005e575: R0 := R21
0005e57a: R30 := 0xC4EC
0005e57c: call @__fdelt_chk with return %0005e57e

0005e57e:
0005e584: R0 := mem[R19 + (60:0[R0].0), el]:u64
0005e58b: #1394 := R20 & R0
0005e58e: VF := 0
0005e591: CF := 0
0005e595: ZF := #1394 = 0
0005e599: NF := 63:63[#1394]
0005e59e: when ZF <> 1 goto %0005e4c6
0006d043: goto %0005e5a2

0005e4c6:
0005e4ca: R1 := R22
0005e4d0: R0 := pad:64[31:0[R26]]
0005e4d5: R2 := 0x1000
0005e4db: R28 := pad:64[31:0[R25]]
0005e4e0: R30 := 0xC558
0005e4e2: call @read with return %0005e4e4

0005e4e4:
0005e4e8: #1392 := 31:0[R0] + 0
0005e4ed: VF := extend:33[#1392] <> extend:33[31:0[R0]] + 0
0005e4f2: CF := pad:33[#1392] <> pad:33[31:0[R0]] - 0x100000000
0005e4f6: ZF := #1392 = 0
0005e4fa: NF := 31:31[#1392]
0005e500: R1 := pad:64[31:0[R0]]
0005e508: when NF = VF & ~ZF goto %0005e506
0006d044: goto %0005e52e

0005e5a2:
0005e5a6: R1 := R22
0005e5ac: R0 := pad:64[31:0[R25]]
0005e5b1: R2 := 0x1000
0005e5b7: R28 := pad:64[31:0[R26]]
0005e5bc: R30 := 0xC50C
0005e5be: call @read with return %0005e5c0

0005e5c0:
0005e5c4: #1395 := 31:0[R0] + 0
0005e5c9: VF := extend:33[#1395] <> extend:33[31:0[R0]] + 0
0005e5ce: CF := pad:33[#1395] <> pad:33[31:0[R0]] - 0x100000000
0005e5d2: ZF := #1395 = 0
0005e5d6: NF := 31:31[#1395]
0005e5dc: R1 := pad:64[31:0[R0]]
0005e5e3: when ~(NF = VF & ~ZF) goto %0005e52e
0006d045: goto %0005e506

0005e52e:
0005e532: R0 := R22
0005e53a: mem := mem with [R31 + 0x6C, el]:u32 <- 31:0[R1]
0005e53f: R30 := 0xC570
0005e541: call @free with return %0005e543

0005e543:
0005e548: R1 := pad:64[mem[R31 + 0x6C, el]:u32]
0005e54e: #1393 := 31:0[R1] + 0
0005e553: VF := extend:33[#1393] <> extend:33[31:0[R1]] + 0
0005e558: CF := pad:33[#1393] <> pad:33[31:0[R1]] - 0x100000000
0005e55c: ZF := #1393 = 0
0005e560: NF := 31:31[#1393]
0005e56c: when ZF <> 1 goto %0005e565
0005e56d: goto %0005e568

0005e568:
0005e569: R0 := 1
0005e56f: goto %0005e56b

0005e565:
0005e566: R0 := 0
0005e56e: goto %0005e56b

0005e56b:
0006d046: goto %000544ee

000544ee:
000544f6: R27 := mem[R27 + 0xFB8, el]:u64
000544fd: R1 := mem[R31 + 0xF8, el]:u64
00054504: R2 := mem[R27, el]:u64
0005450a: #885 := ~R2
0005450f: #886 := R1 + ~R2 + 1
00054515: VF := extend:65[#886] <> extend:65[R1] + extend:65[#885] + 1
0005451b: CF := pad:65[#886] <> pad:65[R1] + pad:65[#885] + 1
0005451f: ZF := #886 = 0
00054523: NF := 63:63[#886]
00054527: R1 := #886
0005452c: R2 := 0
00054532: when ZF <> 1 goto %00054530
0006d047: goto %0005e461

00054530:
00054538: R30 := 0xC5D0
0005453a: call @__stack_chk_fail with return %0006d048

0006d048:
0006d049: call @http_has_body with noreturn

0005e461:
0005e465: #1387 := R31 + 0x10
0005e46a: R19 := mem[#1387, el]:u64
0005e46f: R20 := mem[#1387 + 8, el]:u64
0005e475: #1388 := R31 + 0x20
0005e47a: R21 := mem[#1388, el]:u64
0005e47f: R22 := mem[#1388 + 8, el]:u64
0005e485: #1389 := R31 + 0x30
0005e48a: R23 := mem[#1389, el]:u64
0005e48f: R24 := mem[#1389 + 8, el]:u64
0005e495: #1390 := R31 + 0x40
0005e49a: R25 := mem[#1390, el]:u64
0005e49f: R26 := mem[#1390 + 8, el]:u64
0005e4a5: #1391 := R31 + 0x50
0005e4aa: R27 := mem[#1391, el]:u64
0005e4af: R28 := mem[#1391 + 8, el]:u64
0005e4b6: R29 := mem[R31, el]:u64
0005e4bb: R30 := mem[R31 + 8, el]:u64
0005e4bf: R31 := R31 + 0x100
0005e4c4: call R30 with noreturn

0005e506:
0005e510: R2 :=

0005e516: R1 := R22
0005e51c: R0 := pad:64[31:0[R28]]
0005e521: R30 := 0xC528
0005e523: call @write with return %0005e525

0005e525:
0005e528: V0 := 0
0005e52c: goto %000543ed

0006d04a: sub tunnel_add(tunnel_add_result)
0006d1c8: tunnel_add_result :: out u32 = low:32[R0]

00057048:
0005704c: #1068 := R31 - 0x80
00057052: mem := mem with [#1068, el]:u64 <- R29
00057058: mem := mem with [#1068 + 8, el]:u64 <- R30
0005705c: R31 := #1068
00057062: R29 := R31
00057068: #1069 := R31 + 0x10
0005706e: mem := mem with [#1069, el]:u64 <- R19
00057074: mem := mem with [#1069 + 8, el]:u64 <- R20
00057079: R19 := 0x27000
0005707f: R20 := pad:64[31:0[R2]]
00057086: R3 := mem[R19 + 0xFB8, el]:u64
0005708c: #1070 := R31 + 0x20
00057092: mem := mem with [#1070, el]:u64 <- R21
00057098: mem := mem with [#1070 + 8, el]:u64 <- R22
0005709e: R21 := R0
000570a4: R0 := R1
000570ab: R1 := mem[R3, el]:u64
000570b3: mem := mem with [R31 + 0x78, el]:u64 <- R1
000570b8: R1 := 0
000570bd: R30 := 0x1084C
000570bf: call @strdup with return %000570c1

000570c1:
000570c5: R22 := R0
000570ca: R30 := 0x10854
000570cc: call @strlen with return %000570ce

000570ce:
000570d2: #1071 := 31:0[R0] + 0
000570d7: VF := extend:33[#1071] <> extend:33[31:0[R0]] + 0
000570dc: CF := pad:33[#1071] <> pad:33[31:0[R0]] - 0x100000000
000570e0: ZF := #1071 = 0
000570e4: NF := 31:31[#1071]
000570ec: when ~(NF = VF & ~ZF) goto %000570ea
0006d04b: goto %0005a80d

000570ea:
000570f3: #1072 := 31:0[R20] + 0
000570f8: VF := extend:33[#1072] <> extend:33[31:0[R20]] + 0
000570fd: CF := pad:33[#1072] <> pad:33[31:0[R20]] - 0x100000000
00057101: ZF := #1072 = 0
00057105: NF := 31:31[#1072]
0005710a: R0 := 0x7F
00057110: R0 := pad:64[0x100.15:0[R0]]
0005711d: when ZF goto %00057116
0005711e: goto %00057119

00057119:
0005711a: R0 := 0
00057120: goto %0005711c

00057116:
00057117: R0 := pad:64[31:0[R0]]
0005711f: goto %0005711c

0005711c:
00057128: mem := mem with [R31 + 0x50, el]:u32 <- 31:0[R0]
0005712d: goto %0005712b

0005a80d:
0005a810: R1 := 1
0005a816: R5 := R0
0005a81c: R6 := R22 - 1
0005a822: R4 := pad:64[31:0[R1]]
0005a828: R7 := R31 + 0x58
0006d04c: goto %0005a3e8

0005a3e8:
0005a3f3: R3 := pad:64[mem[R6 + R1]]
0005a3f9: #1241 := 31:0[R3] - 0x3A
0005a3fe: VF := extend:33[#1241] <> extend:33[31:0[R3]] - 0x3A
0005a403: CF := pad:33[#1241] <> pad:33[31:0[R3]] + 0xFFFFFFC6
0005a407: ZF := #1241 = 0
0005a40b: NF := 31:31[#1241]
0005a410: when ZF goto %0005a34e
0006d04d: goto %0005a414

0005a34e:
0005a352: R2 := pad:64[31:0[R4] + 1]
0005a359: R0 := R22 + R1
0005a35f: #1237 := 31:0[R2] - 3
0005a364: VF := extend:33[#1237] <> extend:33[31:0[R2]] - 3
0005a369: CF := pad:33[#1237] <> pad:33[31:0[R2]] + 0xFFFFFFFD
0005a36d: ZF := #1237 = 0
0005a371: NF := 31:31[#1237]
0005a37a: mem := mem with [R7 + extend:64[31:0[R4].0], el]:u64 <- R0
0005a388: when NF = VF & ~ZF goto %0005a381
0005a389: goto %0005a384

0005a384:
0005a385: R3 := 1
0005a38b: goto %0005a387

0005a381:
0005a382: R3 := 0
0005a38a: goto %0005a387

0005a387:
0005a391: #1238 := ~31:0[R1]
0005a396: #1239 := 31:0[R5] + ~31:0[R1] + 1
0005a39c: VF := extend:33[#1239] <> extend:33[31:0[R5]] + extend:33[#1238] +
          1
0005a3a2: CF := pad:33[#1239] <> pad:33[31:0[R5]] + pad:33[#1238] + 1
0005a3a6: ZF := #1239 = 0
0005a3aa: NF := 31:31[#1239]
0005a3b2: mem := mem with [R6 + R1] <- 0
0005a3c0: when ~(NF = VF & ~ZF) goto %0005a3b9
0005a3c1: goto %0005a3bc

0005a3bc:
0005a3bd: R0 := 1
0005a3c3: goto %0005a3bf

0005a3b9:
0005a3ba: R0 := 0
0005a3c2: goto %0005a3bf

0005a3bf:
0005a3c9: R4 := pad:64[31:0[R2]]
0005a3d0: #1240 := 31:0[R3] & 31:0[R0]
0005a3d3: VF := 0
0005a3d6: CF := 0
0005a3da: ZF := #1240 = 0
0005a3de: NF := 31:31[#1240]
0005a3e4: R1 := R1 + 1
0005a3ea: when ZF <> 1 goto %0005a3e8
0006d04e: goto %0005a7ee

0005a7ee:
0005a7f2: #1254 := 31:0[R4] - 4
0005a7f7: VF := extend:33[#1254] <> extend:33[31:0[R4]] - 4
0005a7fc: CF := pad:33[#1254] <> pad:33[31:0[R4]] + 0xFFFFFFFC
0005a800: ZF := #1254 = 0
0005a804: NF := 31:31[#1254]
0005a809: when ZF <> 1 goto %0005a794
0006d04f: goto %0005a4a9

0005a414:
0005a418: #1242 := 31:0[R4] - 3
0005a41d: VF := extend:33[#1242] <> extend:33[31:0[R4]] - 3
0005a422: CF := pad:33[#1242] <> pad:33[31:0[R4]] + 0xFFFFFFFD
0005a426: ZF := #1242 = 0
0005a42a: NF := 31:31[#1242]
0005a438: when NF = VF & ~ZF goto %0005a431
0005a439: goto %0005a434

0005a434:
0005a435: R3 := 1
0005a43b: goto %0005a437

0005a431:
0005a432: R3 := 0
0005a43a: goto %0005a437

0005a437:
0005a441: #1243 := ~31:0[R1]
0005a446: #1244 := 31:0[R5] + ~31:0[R1] + 1
0005a44c: VF := extend:33[#1244] <> extend:33[31:0[R5]] + extend:33[#1243] +
          1
0005a452: CF := pad:33[#1244] <> pad:33[31:0[R5]] + pad:33[#1243] + 1
0005a456: ZF := #1244 = 0
0005a45a: NF := 31:31[#1244]
0005a468: when ~(NF = VF & ~ZF) goto %0005a461
0005a469: goto %0005a464

0005a464:
0005a465: R2 := 1
0005a46b: goto %0005a467

0005a461:
0005a462: R2 := 0
0005a46a: goto %0005a467

0005a467:
0005a471: R1 := R1 + 1
0005a478: #1245 := 31:0[R3] & 31:0[R2]
0005a47b: VF := 0
0005a47e: CF := 0
0005a482: ZF := #1245 = 0
0005a486: NF := 31:31[#1245]
0005a48b: when ZF <> 1 goto %0005a3e8
0006d050: goto %0005a48f

0005a48f:
0005a493: #1246 := 31:0[R4] - 4
0005a498: VF := extend:33[#1246] <> extend:33[31:0[R4]] - 4
0005a49d: CF := pad:33[#1246] <> pad:33[31:0[R4]] + 0xFFFFFFFC
0005a4a1: ZF := #1246 = 0
0005a4a5: NF := 31:31[#1246]
0005a4ab: when ZF goto %0005a4a9
0006d051: goto %0005a794

0005a4a9:
0005a4b2: R1 := R22
0005a4b8: R0 := R31 + 0x50
0005a4be: #1247 := R31 + 0x30
0005a4c4: mem := mem with [#1247, el]:u64 <- R23
0005a4ca: mem := mem with [#1247 + 8, el]:u64 <- R24
0005a4d2: mem := mem with [R31 + 0x40, el]:u64 <- R25
0005a4d7: R30 := 0x1094C
0005a4d9: call @so_resolv with return %0005a4db

0005a4db:
0005a4df: when 31:0[R0] = 0 goto %0005a4dd
0006d052: goto %0005a511

0005a4dd:
0005a4e6: R3 := R22
0005a4eb: R2 := 0x13000
0005a4f1: R2 := R2 + 0xF10
0005a4f6: R1 := 1
0005a4fb: R0 := 3
0005a500: R30 := 0x10A80
0005a502: call @__syslog_chk with return %0005a504

0005a504:
0005a507: R0 := 1
0005a50c: R30 := 0x10A88
0005a50e: call @myexit with return %0005a510

0005a510:
0005a513: goto %0005a511

0005a511:
0005a519: R20 := mem[R31 + 0x60, el]:u64
0005a51e: R2 := 0xA
0005a523: R1 := 0
0005a528: R25 := 3
0005a52e: R0 := R20
0005a533: R24 := 2
0005a538: R30 := 0x1096C
0005a53a: call @strtol with return %0005a53c

0005a53c:
0005a540: R23 := R0
0005a546: when 31:0[R0] = 0 goto %0005a544
0006d053: goto %0005a578

0005a794:
0005a798: #1252 := 31:0[R20] + 0
0005a79d: VF := extend:33[#1252] <> extend:33[31:0[R20]] + 0
0005a7a2: CF := pad:33[#1252] <> pad:33[31:0[R20]] - 0x100000000
0005a7a6: ZF := #1252 = 0
0005a7aa: NF := 31:31[#1252]
0005a7af: R0 := 0x7F
0005a7b5: R0 := pad:64[0x100.15:0[R0]]
0005a7c2: when ZF <> 1 goto %0005a7ba
0005a7c3: goto %0005a7be

0005a7be:
0005a7bf: R0 := pad:64[31:0[R0]]
0005a7c5: goto %0005a7c1

0005a7ba:
0005a7bb: R0 := 0
0005a7c4: goto %0005a7c1

0005a7c1:
0005a7cd: mem := mem with [R31 + 0x50, el]:u32 <- 31:0[R0]
0005a7d3: #1253 := 31:0[R4] - 3
0005a7d8: VF := extend:33[#1253] <> extend:33[31:0[R4]] - 3
0005a7dd: CF := pad:33[#1253] <> pad:33[31:0[R4]] + 0xFFFFFFFD
0005a7e1: ZF := #1253 = 0
0005a7e5: NF := 31:31[#1253]
0005a7ea: when ZF goto %0005a6be
0006d054: goto %0005712b

0005a6be:
0005a6c2: R20 := R22
0005a6c7: R2 := 0xA
0005a6cd: R0 := R20
0005a6d2: R1 := 0
0005a6d8: #1250 := R31 + 0x30
0005a6de: mem := mem with [#1250, el]:u64 <- R23
0005a6e4: mem := mem with [#1250 + 8, el]:u64 <- R24
0005a6e9: R24 := 1
0005a6f1: mem := mem with [R31 + 0x40, el]:u64 <- R25
0005a6f6: R30 := 0x10AC0
0005a6f8: call @strtol with return %0005a6fa

0005a6fa:
0005a6fd: R25 := 2
0005a703: R23 := R0
0005a709: when 31:0[R0] <> 0 goto %0005a578
0006d055: goto %0005a544

0005a544:
0005a54d: R3 := R20
0005a552: R2 := 0x13000
0005a558: R2 := R2 + 0xF38
0005a55d: R1 := 1
0005a562: R0 := 3
0005a567: R30 := 0x10AE4
0005a569: call @__syslog_chk with return %0005a56b

0005a56b:
0005a56e: R0 := 1
0005a573: R30 := 0x10AEC
0005a575: call @myexit with return %0005a577

0005a577:
0005a57a: goto %0005a578

0005a578:
0005a57f: R0 := R31 + 0x58
0005a587: R24 := mem[R0 + extend:64[31:0[R24].0], el]:u64
0005a58f: R25 := mem[R0 + extend:64[31:0[R25].0], el]:u64
0005a596: R0 := pad:64[mem[R24]]
0005a59c: when 31:0[R0] = 0 goto %0005a59a
0006d056: goto %0005a786

0005a786:
0005a78b: R0 := pad:64[mem[R25]]
0005a790: when 31:0[R0] = 0 goto %0005a59a
0006d057: goto %0005a5d4

0005a59a:
0005a5a3: R4 := R25
0005a5a9: R3 := R24
0005a5ae: R2 := 0x13000
0005a5b4: R2 := R2 + 0xF58
0005a5b9: R1 := 1
0005a5be: R0 := 3
0005a5c3: R30 := 0x10A5C
0005a5c5: call @__syslog_chk with return %0005a5c7

0005a5c7:
0005a5ca: R0 := 1
0005a5cf: R30 := 0x10A64
0005a5d1: call @myexit with return %0005a5d3

0005a5d3:
0005a5d6: goto %0005a5d4

0005a5d4:
0005a5db: R0 := R24
0005a5e0: R30 := 0x10998
0005a5e2: call @strlen with return %0005a5e4

0005a5e4:
0005a5e8: R20 := R0
0005a5ee: R0 := R25
0005a5f3: R30 := 0x109A4
0005a5f5: call @strlen with return %0005a5f7

0005a5f7:
0005a5fc: R0 := R20 + R0
0005a602: R0 := R0 + 3
0005a607: R30 := 0x109B0
0005a609: call @new with return %0005a60b

0005a60b:
0005a60f: R1 := R24
0005a615: R20 := R0
0005a61a: R30 := 0x109BC
0005a61d: call @strcpy with return %0005a61f

0005a61f:
0005a623: R0 := R20
0005a628: R30 := 0x109C4
0005a62a: call @strlen with return %0005a62c

0005a62c:
0005a630: R2 := R0
0005a635: R3 := 0x3A
0005a63b: R0 := R0 + 1
0005a641: R1 := R25
0005a648: R0 := R20 + R0
0005a651: mem := mem with [R20 + R2] <- 7:0[R3]
0005a656: R30 := 0x109E0
0005a658: call @strcpy with return %0005a65a

0005a65a:
0005a65f: R1 := pad:64[mem[R31 + 0x50, el]:u32]
0005a665: R0 := pad:64[31:0[R23]]
0005a66a: R30 := 0x109EC
0005a66c: call @so_listen with return %0005a66e

0005a66e:
0005a673: R1 :=

0005a679: #1248 := 31:0[R1] + 0
0005a67e: VF := extend:33[#1248] <> extend:33[31:0[R1]] + 0
0005a683: CF := pad:33[#1248] <> pad:33[31:0[R1]] - 0x100000000
0005a687: ZF := #1248 = 0
0005a68b: NF := 31:31[#1248]
0005a693: when ~(NF = VF & ~ZF) goto %0005a691
0006d058: goto %0005a70d

0005a691:
0005a69a: R0 := R20
0005a69f: R30 := 0x10A94
0005a6a1: call @free with return %0005a6a3

0005a6a3:
0005a6a7: #1249 := R31 + 0x30
0005a6ac: R23 := mem[#1249, el]:u64
0005a6b1: R24 := mem[#1249 + 8, el]:u64
0005a6b8: R25 := mem[R31 + 0x40, el]:u64
0005a6bc: goto %00057151

0005a70d:
0005a712: R0 := mem[R21, el]:u64
0005a718: R2 := R20
0005a71d: R30 := 0x10A04
0005a71f: call @plist_add with return %0005a721

0005a721:
0005a725: R1 := R0
0005a72c: R0 := pad:64[mem[R31 + 0x50, el]:u32]
0005a734: mem := mem with [R21, el]:u64 <- R1
0005a739: R30 := 0x10A14
0005a73b: call @inet_ntoa with return %0005a73d

0005a73d:
0005a741: R3 := R0
0005a747: R4 := pad:64[31:0[R23]]
0005a74d: R5 := R20
0005a752: R2 := 0x13000
0005a757: R1 := 1
0005a75d: R2 := R2 + 0xF78
0005a762: R0 := 6
0005a767: R30 := 0x10A34
0005a769: call @__syslog_chk with return %0005a76b

0005a76b:
0005a76f: #1251 := R31 + 0x30
0005a774: R23 := mem[#1251, el]:u64
0005a779: R24 := mem[#1251 + 8, el]:u64
0005a780: R25 := mem[R31 + 0x40, el]:u64
0005a784: goto %00057151

0005712b:
00057131: R1 := 0x13000
00057137: R1 := R1 + 0xF98
0005713c: R0 := 1
00057141: R30 := 0x108CC
00057143: call @__printf_chk with return %00057145

00057145:
00057148: R0 := 1
0005714d: R30 := 0x108D4
0005714f: call @myexit with return %00057151

00057151:
00057156: R19 := mem[R19 + 0xFB8, el]:u64
0005715d: R0 := mem[R31 + 0x78, el]:u64
00057164: R1 := mem[R19, el]:u64
0005716a: #1073 := ~R1
0005716f: #1074 := R0 + ~R1 + 1
00057175: VF := extend:65[#1074] <> extend:65[R0] + extend:65[#1073] + 1
0005717b: CF := pad:65[#1074] <> pad:65[R0] + pad:65[#1073] + 1
0005717f: ZF := #1074 = 0
00057183: NF := 63:63[#1074]
00057187: R0 := #1074
0005718c: R1 := 0
00057192: when ZF <> 1 goto %00057190
0006d059: goto %0005a314

00057190:
00057199: #1075 := R31 + 0x30
0005719f: mem := mem with [#1075, el]:u64 <- R23
000571a5: mem := mem with [#1075 + 8, el]:u64 <- R24
000571ad: mem := mem with [R31 + 0x40, el]:u64 <- R25
000571b2: R30 := 0x10B14
000571b4: call @__stack_chk_fail with return %000571b6

000571b6:
0006d05a: call @noproxy_add with noreturn

0005a314:
0005a318: R0 := R22
0005a31e: #1235 := R31 + 0x10
0005a323: R19 := mem[#1235, el]:u64
0005a328: R20 := mem[#1235 + 8, el]:u64
0005a32e: #1236 := R31 + 0x20
0005a333: R21 := mem[#1236, el]:u64
0005a338: R22 := mem[#1236 + 8, el]:u64
0005a33f: R29 := mem[R31, el]:u64
0005a344: R30 := mem[R31 + 8, el]:u64
0005a348: R31 := R31 + 0x80
0005a34c: call @free with noreturn

0006d05b: sub tunnel_thread(tunnel_thread_result)
0006d1c9: tunnel_thread_result :: out u32 = low:32[R0]

00057729:
0005772d: #1101 := R31 - 0x20
00057733: mem := mem with [#1101, el]:u64 <- R29
00057739: mem := mem with [#1101 + 8, el]:u64 <- R30
0005773d: R31 := #1101
00057743: R29 := R31
00057749: #1102 := R31 + 0x10
0005774f: mem := mem with [#1102, el]:u64 <- R19
00057755: mem := mem with [#1102 + 8, el]:u64 <- R20
0005775b: R19 := R0
00057762: R0 := mem[R0 + 8, el]:u64
00057767: R30 := 0x10F18
00057769: call @strdup with return %0005776b

0005776b:
0005776f: R20 := R0
00057774: R1 := 0x3A
00057779: R30 := 0x10F24
0005777b: call @strchr with return %0005777d

0005777d:
00057781: when R0 = 0 goto %0005777f
0006d05c: goto %0005a093

0005a093:
0005a098: mem := mem with [R0] <- 0
0006d05d: goto %0005777f

0005777f:
00057788: R0 := R20
0005778d: R30 := 0x10F34
0005778f: call @noproxy_match with return %00057791

00057791:
00057795: when 31:0[R0] = 0 goto %00057793
0006d05e: goto %000585ae

00057793:
0005779c: R0 := R19
000577a1: R30 := 0x10FA0
000577a3: call @forward_tunnel with return %000577a5

000577a5:
000577a8: goto %000577a6

000585ae:
000585b2: R0 := R19
000585b7: R30 := 0x10F40
000585ba: call @direct_tunnel with return %000577a6

000577a6:
000577ad: R0 := R20
000577b2: R30 := 0x10F48
000577b4: call @free with return %000577b6

000577b6:
000577ba: R0 := R19
000577bf: R19 := 0x28000
000577c5: R19 := R19 + 0x4D8
000577ca: R30 := 0x10F58
000577cc: call @free with return %000577ce

000577ce:
000577d2: R20 := R19 + 0x28
000577d8: R0 := R20
000577dd: R30 := 0x10F64
000577df: call @pthread_mutex_lock with return %000577e1

000577e1:
000577e4: R30 := 0x10F68
000577e6: call @pthread_self with return %000577e8

000577e8:
000577ec: R1 := R0
000577f3: R0 := mem[R19 + 0x58, el]:u64
000577f8: R2 := 0
000577fd: R30 := 0x10F78
000577ff: call @plist_add with return %00057801

00057801:
00057805: R1 := R0
0005780b: R0 := R20
00057813: mem := mem with [R19 + 0x58, el]:u64 <- R1
00057818: R30 := 0x10F88
0005781a: call @pthread_mutex_unlock with return %0005781c

0005781c:
0005781f: R0 := 0
00057825: #1103 := R31 + 0x10
0005782a: R19 := mem[#1103, el]:u64
0005782f: R20 := mem[#1103 + 8, el]:u64
00057836: R29 := mem[R31, el]:u64
0005783b: R30 := mem[R31 + 8, el]:u64
0005783f: R31 := R31 + 0x20
00057844: call R30 with noreturn

0006d05f: sub umask(umask_result)
0006d1ca: umask_result :: out u32 = low:32[R0]

000611be:
00064e43: R16 := 0x27000
00064e4a: R17 := mem[R16 + 0xEF8, el]:u64
00064e50: R16 := R16 + 0xEF8
00064e55: call R17 with noreturn

0006d060: sub unicode(unicode_result)
0006d1cb: unicode_result :: out u32 = low:32[R0]

0004612b:
0004612f: #24 := R31 - 0x40
00046135: mem := mem with [#24, el]:u64 <- R29
0004613b: mem := mem with [#24 + 8, el]:u64 <- R30
0004613f: R31 := #24
00046145: R29 := R31
0004614b: #25 := R31 + 0x20
00046151: mem := mem with [#25, el]:u64 <- R21
00046157: mem := mem with [#25 + 8, el]:u64 <- R22
0004615f: mem := mem with [R31 + 0x30, el]:u64 <- R23
00046165: R23 := R0
0004616b: when R1 = 0 goto %00046169
0006d061: goto %0005fb55

00046169:
00046173: mem := mem with [R0, el]:u64 <- 0
00046178: R21 := 0
0004617e: R0 := pad:64[31:0[R21]]
00046184: #26 := R31 + 0x20
00046189: R21 := mem[#26, el]:u64
0004618e: R22 := mem[#26 + 8, el]:u64
00046195: R23 := mem[R31 + 0x30, el]:u64
0004619c: R29 := mem[R31, el]:u64
000461a1: R30 := mem[R31 + 8, el]:u64
000461a5: R31 := R31 + 0x40
000461aa: call R30 with noreturn

0005fb55:
0005fb59: R0 := R1
0005fb5e: R21 := 0x40
0005fb64: #1464 := R31 + 0x10
0005fb6a: mem := mem with [#1464, el]:u64 <- R19
0005fb70: mem := mem with [#1464 + 8, el]:u64 <- R20
0005fb76: R19 := R1
0005fb7b: R30 := 0x5954
0005fb7d: call @strlen with return %0005fb7f

0005fb7f:
0005fb83: #1465 := ~R21
0005fb88: #1466 := R0 + ~R21 + 1
0005fb8e: VF := extend:65[#1466] <> extend:65[R0] + extend:65[#1465] + 1
0005fb94: CF := pad:65[#1466] <> pad:65[R0] + pad:65[#1465] + 1
0005fb98: ZF := #1466 = 0
0005fb9c: NF := 63:63[#1466]
0005fba1: R1 := 1
0005fbb0: when ~(CF & ~ZF) goto %0005fba8
0005fbb1: goto %0005fbac

0005fbac:
0005fbad: R21 := R21
0005fbb3: goto %0005fbaf

0005fba8:
0005fba9: R21 := R0
0005fbb2: goto %0005fbaf

0005fbaf:
0005fbb9: R22 := R0
0005fbbf: R20 := pad:64[31:0[R21]]
0005fbc6: R21 := pad:64[31:1[31:0[R21] >> 0x1F | 31:0[R21] << 1].0]
0005fbcd: R0 :=
          63:32[31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21].31:31[R21]].31:0[R21]
0005fbd2: R30 := 0x5974
0005fbd4: call @calloc with return %0005fbd6

0005fbd6:
0005fbda: R1 := R0
0005fbe0: when R22 = 0 goto %0005fbde
0006d062: goto %0005fc2d

0005fc2d:
0005fc30: R2 := 0
0006d063: goto %0005fc32

0005fc32:
0005fc37: R3 := 63:1[R2 >> 0x3F | R2 << 1].0
0005fc3f: R4 := pad:64[mem[R19 + R2]]
0005fc45: R2 := R2 + 1
0005fc4b: #1469 := ~31:0[R2]
0005fc50: #1470 := 31:0[R20] + ~31:0[R2] + 1
0005fc56: VF := extend:33[#1470] <> extend:33[31:0[R20]] + extend:33[#1469] +
          1
0005fc5c: CF := pad:33[#1470] <> pad:33[31:0[R20]] + pad:33[#1469] + 1
0005fc60: ZF := #1470 = 0
0005fc64: NF := 31:31[#1470]
0005fc6d: mem := mem with [R1 + R3] <- 7:0[R4]
0005fc74: when NF = VF & ~ZF goto %0005fc32
0006d064: goto %0005fbde

0005fbde:
0005fbe7: #1467 := R31 + 0x10
0005fbec: R19 := mem[#1467, el]:u64
0005fbf1: R20 := mem[#1467 + 8, el]:u64
0005fbf9: mem := mem with [R23, el]:u64 <- R1
0005fbff: R0 := pad:64[31:0[R21]]
0005fc05: #1468 := R31 + 0x20
0005fc0a: R21 := mem[#1468, el]:u64
0005fc0f: R22 := mem[#1468 + 8, el]:u64
0005fc16: R23 := mem[R31 + 0x30, el]:u64
0005fc1d: R29 := mem[R31, el]:u64
0005fc22: R30 := mem[R31 + 8, el]:u64
0005fc26: R31 := R31 + 0x40
0005fc2b: call R30 with noreturn

0006d065: sub unlink(unlink_name, unlink_result)
0006d1cc: unlink_name :: in u64 = R0
0006d1cd: unlink_result :: out u32 = low:32[R0]

00060864:
00064eb1: R16 := 0x27000
00064eb8: R17 := mem[R16 + 0xF20, el]:u64
00064ebe: R16 := R16 + 0xF20
00064ec3: call R17 with noreturn

0006d066: sub uppercase(uppercase_result)
0006d1ce: uppercase_result :: out u32 = low:32[R0]

00046061:
00046065: #19 := R31 - 0x20
0004606b: mem := mem with [#19, el]:u64 <- R29
00046071: mem := mem with [#19 + 8, el]:u64 <- R30
00046075: R31 := #19
0004607b: R29 := R31
00046081: #20 := R31 + 0x10
00046087: mem := mem with [#20, el]:u64 <- R19
0004608d: mem := mem with [#20 + 8, el]:u64 <- R20
00046093: R20 := R0
00046098: R19 := 0
0004609d: goto %0004609b

0004609b:
000460a2: R0 := R20
000460a7: R30 := 0x5910
000460a9: call @strlen with return %000460ab

000460ab:
000460af: #21 := ~R19
000460b4: #22 := R0 + ~R19 + 1
000460ba: VF := extend:65[#22] <> extend:65[R0] + extend:65[#21] + 1
000460c0: CF := pad:65[#22] <> pad:65[R0] + pad:65[#21] + 1
000460c4: ZF := #22 = 0
000460c8: NF := 63:63[#22]
000460cf: when CF & ~ZF goto %000460cd
0006d067: goto %00046100

00046100:
00046104: R0 := R20
0004610a: #23 := R31 + 0x10
0004610f: R19 := mem[#23, el]:u64
00046114: R20 := mem[#23 + 8, el]:u64
0004611b: R29 := mem[R31, el]:u64
00046120: R30 := mem[R31 + 8, el]:u64
00046124: R31 := R31 + 0x20
00046129: call R30 with noreturn

000460cd:
000460d5: R30 := 0x58F4
000460d8: call @__ctype_toupper_loc with return %000460da

000460da:
000460e0: R1 := pad:64[mem[R20 + R19]]
000460e7: R0 := mem[R0, el]:u64
000460ef: R0 := pad:64[mem[R0 + (61:0[R1].0), el]:u32]
000460f8: mem := mem with [R20 + R19] <- 7:0[R0]
000460fe: R19 := R19 + 1
0006d068: goto %0004609b

0006d069: sub urlencode(urlencode_result)
0006d1cf: urlencode_result :: out u32 = low:32[R0]

000461ac:
000461b0: #27 := R31 - 0x60
000461b6: mem := mem with [#27, el]:u64 <- R29
000461bc: mem := mem with [#27 + 8, el]:u64 <- R30
000461c0: R31 := #27
000461c6: R29 := R31
000461cc: #28 := R31 + 0x10
000461d2: mem := mem with [#28, el]:u64 <- R19
000461d8: mem := mem with [#28 + 8, el]:u64 <- R20
000461dd: R20 := 0
000461e3: #29 := R31 + 0x20
000461e9: mem := mem with [#29, el]:u64 <- R21
000461ef: mem := mem with [#29 + 8, el]:u64 <- R22
000461f4: R21 := 0
000461fb: R22 :=

00046201: #30 := R31 + 0x30
00046207: mem := mem with [#30, el]:u64 <- R23
0004620d: mem := mem with [#30 + 8, el]:u64 <- R24
00046213: R23 := R0
00046219: #31 := R31 + 0x40
0004621f: mem := mem with [#31, el]:u64 <- R25
00046225: mem := mem with [#31 + 8, el]:u64 <- R26
0004622a: R26 := 0x11000
0004622f: R25 := 0x7E
00046235: #32 := R31 + 0x50
0004623b: mem := mem with [#32, el]:u64 <- R27
00046241: mem := mem with [#32 + 8, el]:u64 <- R28
00046246: R30 := 0x5A08
00046248: call @strlen with return %0004624a

0004624a:
0004624d: R1 := 1
00046254: R0 := R0 + (R0 << 1)
0004625a: R26 := R26 + 0x6E8
00046261: R0 := R0 + R1
00046266: R30 := 0x5A1C
00046268: call @calloc with return %0004626a

0004626a:
0004626e: R24 := R0
00046274: R0 := R23
00046279: R30 := 0x5A28
0004627b: call @strlen with return %0004627d

0004627d:
00046281: #33 := ~R20
00046286: #34 := R0 + ~R20 + 1
0004628c: VF := extend:65[#34] <> extend:65[R0] + extend:65[#33] + 1
00046292: CF := pad:65[#34] <> pad:65[R0] + pad:65[#33] + 1
00046296: ZF := #34 = 0
0004629a: NF := 63:63[#34]
000462a1: when ~(CF & ~ZF) goto %0004629f
0006d06a: goto %00046379

00046379:
00046381: R30 := 0x5A34
00046384: call @__ctype_b_loc with return %00046386

00046386:
0004638c: R28 := pad:64[mem[R23 + R20]]
00046393: R1 := mem[R0, el]:u64
0004639a: R27 := R24 + R22
000463a1: R0 := 0.8:1[R28 >> 0x3F | R28 << 1].0
000463a7: R19 := R28
000463af: R0 := pad:64[mem[R1 + R0, el]:u16]
000463b5: when 11:11[R0] goto %000463b3
0006d06b: goto %000463cd

000463cd:
000463d0: R30 := 0x5A54
000463d2: call @__ctype_tolower_loc with return %000463d4

000463d4:
000463d9: R0 := mem[R0, el]:u64
000463df: R1 := pad:64[31:0[R28] - 0x2D]
000463e5: R1 := pad:64[0.7:0[R1]]
000463ed: R0 := pad:64[mem[R0 + (61:0[R28].0), el]:u32]
000463f3: R0 := pad:64[31:0[R0] - 0x61]
000463f9: #42 := 31:0[R0] - 0x19
000463fe: VF := extend:33[#42] <> extend:33[31:0[R0]] - 0x19
00046403: CF := pad:33[#42] <> pad:33[31:0[R0]] + 0xFFFFFFE7
00046407: ZF := #42 = 0
0004640b: NF := 31:31[#42]
00046411: when ~(CF & ~ZF) goto %000463b3
0006d06c: goto %00046415

00046415:
00046419: #43 := 31:0[R28] - 0x5F
0004641e: VF := extend:33[#43] <> extend:33[31:0[R28]] - 0x5F
00046423: CF := pad:33[#43] <> pad:33[31:0[R28]] + 0xFFFFFFA1
00046427: ZF := #43 = 0
0004642b: NF := 31:31[#43]
00046431: #44 := 31:0[R1] - 1
00046457: goto %00046451

00046451:
00046453: when ZF <> 1 goto %00046436
00046454: goto %00046446

00046446:
00046447: VF := 0
0004644a: CF := 0
0004644d: ZF := 0
00046450: NF := 0
00046456: goto %00046452

00046436:
00046437: VF := extend:33[#44] <> extend:33[31:0[R1]] - 1
0004643c: CF := pad:33[#44] <> pad:33[31:0[R1]] + 0xFFFFFFFF
00046440: ZF := #44 = 0
00046444: NF := 31:31[#44]
00046455: goto %00046452

00046452:
0004645d: #45 := ~31:0[R25]
00046462: #46 := 31:0[R28] + ~31:0[R25] + 1
0004648b: goto %00046485

00046485:
00046487: when CF & ~ZF goto %00046469
00046488: goto %0004647a

0004647a:
0004647b: VF := 0
0004647e: CF := 0
00046481: ZF := 1
00046484: NF := 0
0004648a: goto %00046486

00046469:
0004646a: VF := extend:33[#46] <> extend:33[31:0[R28]] + extend:33[#45] + 1
00046470: CF := pad:33[#46] <> pad:33[31:0[R28]] + pad:33[#45] + 1
00046474: ZF := #46 = 0
00046478: NF := 31:31[#46]
00046489: goto %00046486

00046486:
00046491: when ZF <> 1 goto %0004630f
0006d06d: goto %000463b3

0004630f:
00046313: R4 := pad:64[31:0[R28]]
00046319: R0 := R27
0004631f: R3 := R26
00046324: R2 := 0xFFFFFFFFFFFFFFFF
00046329: R1 := 1
0004632f: R21 := pad:64[31:0[R21] + 3]
00046335: R20 := R20 + 1
0004633a: R30 := 0x5AE0
0004633d: call @__sprintf_chk with return %0004633f

0004633f:
00046342: goto %00046340

000463b3:
000463bc: R21 := pad:64[31:0[R21] + 1]
000463c2: R20 := R20 + 1
000463cb: mem := mem with [R24 + R22] <- 7:0[R19]
0006d06e: goto %00046340

00046340:
00046347: R0 := R23
0004634e: R22 :=

00046353: R30 := 0x5A98
00046355: call @strlen with return %00046357

00046357:
0004635b: #40 := ~R20
00046360: #41 := R0 + ~R20 + 1
00046366: VF := extend:65[#41] <> extend:65[R0] + extend:65[#40] + 1
0004636c: CF := pad:65[#41] <> pad:65[R0] + pad:65[#40] + 1
00046370: ZF := #41 = 0
00046374: NF := 63:63[#41]
0004637b: when CF & ~ZF goto %00046379
0006d06f: goto %0004629f

0004629f:
000462a8: R0 := R24
000462ae: #35 := R31 + 0x10
000462b3: R19 := mem[#35, el]:u64
000462b8: R20 := mem[#35 + 8, el]:u64
000462be: #36 := R31 + 0x20
000462c3: R21 := mem[#36, el]:u64
000462c8: R22 := mem[#36 + 8, el]:u64
000462ce: #37 := R31 + 0x30
000462d3: R23 := mem[#37, el]:u64
000462d8: R24 := mem[#37 + 8, el]:u64
000462de: #38 := R31 + 0x40
000462e3: R25 := mem[#38, el]:u64
000462e8: R26 := mem[#38 + 8, el]:u64
000462ee: #39 := R31 + 0x50
000462f3: R27 := mem[#39, el]:u64
000462f8: R28 := mem[#39 + 8, el]:u64
000462ff: R29 := mem[R31, el]:u64
00046304: R30 := mem[R31 + 8, el]:u64
00046308: R31 := R31 + 0x60
0004630d: call R30 with noreturn

0006d070: sub write(write_arg1, write_arg2, write_arg3, write_result)
0006d1d0: write_arg1 :: in u32 = low:32[R0]
0006d1d1: write_arg2 :: in out u64 = R1
0006d1d2: write_arg3 :: in u64 = R2
0006d1d3: write_result :: out u64 = R0

00053f44:
00064b57: R16 := 0x27000
00064b5e: R17 := mem[R16 + 0xDE8, el]:u64
00064b64: R16 := R16 + 0xDE8
00064b69: call R17 with noreturn

0006d071: sub www_authenticate(www_authenticate_result)
0006d1d4: www_authenticate_result :: out u32 = low:32[R0]

000564fe:
00056502: #1027 := R31 - 0x80
00056508: mem := mem with [#1027, el]:u64 <- R29
0005650e: mem := mem with [#1027 + 8, el]:u64 <- R30
00056512: R31 := #1027
00056518: R29 := R31
0005651e: #1028 := R31 + 0x20
00056524: mem := mem with [#1028, el]:u64 <- R21
0005652a: mem := mem with [#1028 + 8, el]:u64 <- R22
0005652f: R22 := 0x27000
00056535: R21 := pad:64[31:0[R0]]
0005653c: R4 := mem[R22 + 0xFB8, el]:u64
00056542: #1029 := R31 + 0x10
00056548: mem := mem with [#1029, el]:u64 <- R19
0005654e: mem := mem with [#1029 + 8, el]:u64 <- R20
00056555: R0 := mem[R4, el]:u64
0005655d: mem := mem with [R31 + 0x78, el]:u64 <- R0
00056562: R0 := 0
00056568: #1030 := R31 + 0x30
0005656e: mem := mem with [#1030, el]:u64 <- R23
00056574: mem := mem with [#1030 + 8, el]:u64 <- R24
00056579: R0 := 0x1000
0005657f: R24 := R1
00056585: R23 := R2
0005658b: #1031 := R31 + 0x40
00056591: mem := mem with [#1031, el]:u64 <- R25
00056597: mem := mem with [#1031 + 8, el]:u64 <- R26
0005659d: R25 := R3
000565a3: #1032 := R31 + 0x50
000565a9: mem := mem with [#1032, el]:u64 <- R27
000565af: mem := mem with [#1032 + 8, el]:u64 <- R28
000565b4: R30 := 0xE998
000565b6: call @new with return %000565b8

000565b8:
000565bb: R1 := 0x12000
000565c1: R2 := R1 + 0xB50
000565c7: R20 := R0
000565cd: R27 := R31 + 0x70
000565d3: R1 := R25
000565d9: R0 := R27
000565e0: R3 := pad:64[mem[R2, el]:u32]
000565e7: R2 := pad:64[mem[R2 + 4, el]:u16]
000565ef: mem := mem with [R20, el]:u32 <- 31:0[R3]
000565f7: mem := mem with [R20 + 4, el]:u16 <- 15:0[R2]
000565fc: R30 := 0xE9C4
000565fe: call @ntlm_request with return %00056600

00056600:
00056605: when 31:0[R0] <> 0 goto %00056603
0006d072: goto %00056637

00056603:
0005660d: R1 := mem[R31 + 0x70, el]:u64
00056614: R2 :=

00056619: R3 := 0xFFB
0005661f: R0 := R20 + 5
00056624: R30 := 0xEB30
00056626: call @to_base64 with return %00056628

00056628:
0005662d: R0 := mem[R31 + 0x70, el]:u64
00056632: R30 := 0xEB38
00056634: call @free with return %00056636

00056636:
00056639: goto %00056637

00056637:
0005663e: R0 := R24
00056643: R30 := 0xE9D0
00056645: call @dup_rr_data with return %00056647

00056647:
0005664b: R19 := R0
00056650: R3 := 1
00056657: R0 := mem[R0 + 8, el]:u64
0005665c: R2 := 0x12000
00056661: R1 := 0x12000
00056667: R2 := R2 + 0xE30
0005666d: R1 := R1 + 0x958
00056672: R28 := 0x13000
00056677: R30 := 0xE9F4
00056679: call @hlist_mod with return %0005667b

0005667b:
00056681: mem := mem with [R19 + 8, el]:u64 <- R0
00056687: R1 := R28 + 0x410
0005668d: R2 := R20
00056692: R3 := 1
00056697: R30 := 0xEA08
00056699: call @hlist_mod with return %0005669b

0005669b:
000566a1: mem := mem with [R19 + 8, el]:u64 <- R0
000566a6: R2 := 0x12000
000566ac: R2 := R2 + 0xB70
000566b1: R3 := 1
000566b6: R1 := 0x12000
000566bc: R1 := R1 + 0x918
000566c1: R30 := 0xEA24
000566c3: call @hlist_mod with return %000566c5

000566c5:
000566cb: mem := mem with [R19 + 8, el]:u64 <- R0
000566d0: R1 := 0x12000
000566d6: R1 := R1 + 0x938
000566db: R30 := 0xEA34
000566dd: call @hlist_del with return %000566df

000566df:
000566e5: mem := mem with [R19 + 8, el]:u64 <- R0
000566eb: R1 := R23
000566f1: R0 := pad:64[31:0[R21]]
000566f6: R30 := 0xEA44
000566f8: call @http_body_drop with return %000566fa

000566fa:
000566fe: when 31:0[R0] = 0 goto %000566fc
0006d073: goto %0005bfeb

0005bfeb:
0005bfee: R26 := 0x27000
0005bff5: R0 := mem[R26 + 0xF78, el]:u64
0005bffc: R0 := pad:64[mem[R0, el]:u32]
0005c002: when 31:0[R0] <> 0 goto %0005bc02
0006d074: goto %0005c006

0005bc02:
0005bc05: R1 := 0x13000
0005bc0a: R0 := 1
0005bc10: R1 := R1 + 0x420
0005bc15: R30 := 0xEB00
0005bc17: call @__printf_chk with return %0005bc19

0005bc19:
0005bc1e: R0 := mem[R19 + 8, el]:u64
0005bc23: R30 := 0xEB08
0005bc25: call @hlist_dump with return %0005bc27

0005bc27:
0005bc2b: R1 := R19
0005bc31: R0 := pad:64[31:0[R21]]
0005bc36: R30 := 0xEB14
0005bc38: call @headers_send with return %0005bc3a

0005bc3a:
0005bc3f: when 31:0[R0] <> 0 goto %0005bc3d
0006d075: goto %0005bfe7

0005bfe7:
0005bfe9: goto %000566fc

0005c006:
0005c00a: R1 := R19
0005c010: R0 := pad:64[31:0[R21]]
0005c015: R30 := 0xEA64
0005c017: call @headers_send with return %0005c019

0005c019:
0005c01c: when 31:0[R0] = 0 goto %000566fc
0006d076: goto %0005bc3d

0005bc3d:
0005bc47: R0 := mem[R26 + 0xF78, el]:u64
0005bc4e: R0 := pad:64[mem[R0, el]:u32]
0005bc55: when 31:0[R0] <> 0 goto %0005bc53
0006d077: goto %0005bc70

0005bc53:
0005bc5b: R1 := 0x13000
0005bc60: R0 := 1
0005bc66: R1 := R1 + 0x440
0005bc6b: R30 := 0xEC84
0005bc6d: call @__printf_chk with return %0005bc6f

0005bc6f:
0005bc72: goto %0005bc70

0005bc70:
0005bc77: R0 := R19
0005bc7c: R30 := 0xEA7C
0005bc7e: call @reset_rr_data with return %0005bc80

0005bc80:
0005bc84: R1 := R19
0005bc8a: R0 := pad:64[31:0[R21]]
0005bc8f: R30 := 0xEA88
0005bc91: call @headers_recv with return %0005bc93

0005bc93:
0005bc96: when 31:0[R0] = 0 goto %000566fc
0006d078: goto %0005bc9a

0005bc9a:
0005bc9f: R0 := mem[R26 + 0xF78, el]:u64
0005bca6: R0 := pad:64[mem[R0, el]:u32]
0005bcad: when 31:0[R0] <> 0 goto %0005bcab
0006d079: goto %0005bcbf

0005bcab:
0005bcb5: R0 := mem[R19 + 8, el]:u64
0005bcba: R30 := 0xEC70
0005bcbc: call @hlist_dump with return %0005bcbe

0005bcbe:
0005bcc1: goto %0005bcbf

0005bcbf:
0005bcc7: R0 := pad:64[mem[R19 + 0x10, el]:u32]
0005bccd: #1320 := 31:0[R0] - 0x191
0005bcd2: VF := extend:33[#1320] <> extend:33[31:0[R0]] - 0x191
0005bcd7: CF := pad:33[#1320] <> pad:33[31:0[R0]] + 0xFFFFFE6F
0005bcdb: ZF := #1320 = 0
0005bcdf: NF := 31:31[#1320]
0005bce5: when ZF goto %0005bce3
0006d07a: goto %000566fc

0005bce3:
0005bcec: R1 := R19
0005bcf2: R0 := pad:64[31:0[R21]]
0005bcf7: R30 := 0xEB48
0005bcf9: call @http_body_drop with return %0005bcfb

0005bcfb:
0005bcfe: when 31:0[R0] = 0 goto %000566fc
0006d07b: goto %0005bd02

0005bd02:
0005bd07: R0 := mem[R19 + 8, el]:u64
0005bd0c: R1 := 0x13000
0005bd12: R1 := R1 + 0x460
0005bd17: R30 := 0xEB5C
0005bd19: call @hlist_get with return %0005bd1b

0005bd1b:
0005bd21: mem := mem with [R31 + 0x70, el]:u64 <- R0
0005bd27: when R0 = 0 goto %0005bd25
0006d07c: goto %0005be88

0005be88:
0005be8b: R30 := 0xEB68
0005be8d: call @strlen with return %0005be8f

0005be8f:
0005be93: #1321 := R0 - 0xE
0005be98: VF := extend:65[#1321] <> extend:65[R0] - 0xE
0005be9d: CF := pad:65[#1321] <> pad:65[R0] + 0xFFFFFFFFFFFFFFF2
0005bea1: ZF := #1321 = 0
0005bea5: NF := 63:63[#1321]
0005beab: when ~(CF & ~ZF) goto %0005bd25
0006d07d: goto %0005beaf

0005bd25:
0005bd2d: R0 := 4
0005bd32: R2 := 0x13000
0005bd37: R1 := 1
0005bd3d: R2 := R2 + 0x4C8
0005bd42: R30 := 0xEC9C
0005bd44: call @__syslog_chk with return %0005bd46

0005bd46:
0005bd49: R21 := 0
0005bd4e: R0 := 0x13000
0005bd54: R0 := R0 + 0x4F0
0005bd5c: mem := mem with [R23 + 0x60, el]:u64 <- R0
0005bd60: goto %00056706

0005beaf:
0005beb3: R0 := R0 + 6
0005beb8: R30 := 0xEB78
0005beba: call @new with return %0005bebc

0005bebc:
0005bec1: R1 := mem[R31 + 0x70, el]:u64
0005bec9: mem := mem with [R31 + 0x68, el]:u64 <- R0
0005becf: R1 := R1 + 5
0005bed4: R30 := 0xEB88
0005bed6: call @from_base64 with return %0005bed8

0005bed8:
0005bedc: R2 := pad:64[31:0[R0]]
0005bee2: #1322 := 31:0[R0] - 0x18
0005bee7: VF := extend:33[#1322] <> extend:33[31:0[R0]] - 0x18
0005beec: CF := pad:33[#1322] <> pad:33[31:0[R0]] + 0xFFFFFFE8
0005bef0: ZF := #1322 = 0
0005bef4: NF := 31:31[#1322]
0005befb: when ~(NF = VF & ~ZF) goto %0005bd62
0006d07e: goto %0005beff

0005bd62:
0005bd65: R2 := 0x13000
0005bd6b: R2 := R2 + 0x4A0
0006d07f: goto %0005bd6d

0005beff:
0005bf03: R3 := R25
0005bf09: R0 := R27
0005bf10: R25 := mem[R31 + 0x68, el]:u64
0005bf16: R1 := R25
0005bf1b: R30 := 0xEBA8
0005bf1d: call @ntlm_response with return %0005bf1f

0005bf1f:
0005bf23: #1323 := 31:0[R0] + 0
0005bf28: VF := extend:33[#1323] <> extend:33[31:0[R0]] + 0
0005bf2d: CF := pad:33[#1323] <> pad:33[31:0[R0]] - 0x100000000
0005bf31: ZF := #1323 = 0
0005bf35: NF := 31:31[#1323]
0005bf3c: when ~(NF = VF & ~ZF) goto %0005bda8
0006d080: goto %0005bf40

0005bda8:
0005bdab: R2 := 0x12000
0005bdb1: R2 := R2 + 0xBD8
0005bdb5: goto %0005bd6d

0005bd6d:
0005bd70: R1 := 1
0005bd75: R0 := 3
0005bd7a: R30 := 0xECC4
0005bd7c: call @__syslog_chk with return %0005bd7e

0005bd7e:
0005bd81: R21 := 0
0005bd86: R0 := 0x13000
0005bd8c: R0 := R0 + 0x478
0005bd94: mem := mem with [R23 + 0x60, el]:u64 <- R0
0005bd9b: R0 := mem[R31 + 0x68, el]:u64
0005bda0: R30 := 0xECDC
0005bda2: call @free with return %0005bda4

0005bda4:
0005bda6: goto %00056706

0005bf40:
0005bf43: R1 := 0x12000
0005bf49: R1 := R1 + 0xB50
0005bf50: R2 :=

0005bf55: R3 := 0xFFB
0005bf5b: R0 := R20 + 5
0005bf62: R4 := pad:64[mem[R1, el]:u32]
0005bf69: R1 := pad:64[mem[R1 + 4, el]:u16]
0005bf71: mem := mem with [R20, el]:u32 <- 31:0[R4]
0005bf79: mem := mem with [R20 + 4, el]:u16 <- 15:0[R1]
0005bf80: R1 := mem[R31 + 0x70, el]:u64
0005bf85: R30 := 0xEBDC
0005bf87: call @to_base64 with return %0005bf89

0005bf89:
0005bf8e: R0 := mem[R24 + 8, el]:u64
0005bf94: R2 := R20
0005bf99: R3 := 1
0005bf9f: R1 := R28 + 0x410
0005bfa4: R30 := 0xEBF0
0005bfa6: call @hlist_mod with return %0005bfa8

0005bfa8:
0005bfac: R1 := R0
0005bfb3: R0 := mem[R31 + 0x70, el]:u64
0005bfbb: mem := mem with [R24 + 8, el]:u64 <- R1
0005bfc0: R30 := 0xEC00
0005bfc2: call @free with return %0005bfc4

0005bfc4:
0005bfc8: R0 := R25
0005bfcd: R30 := 0xEC08
0005bfcf: call @free with return %0005bfd1

0005bfd1:
0005bfd6: R0 := mem[R26 + 0xF78, el]:u64
0005bfdd: R0 := pad:64[mem[R0, el]:u32]
0005bfe3: when 31:0[R0] <> 0 goto %0005bdb7
0006d081: goto %0005bdcf

0005bdb7:
0005bdba: R1 := 0x13000
0005bdbf: R0 := 1
0005bdc5: R1 := R1 + 0x518
0005bdca: R30 := 0xECFC
0005bdcc: call @__printf_chk with return %0005bdce

0005bdce:
0005bdd1: goto %0005bdcf

0005bdcf:
0005bdd6: R1 := R24
0005bddc: R0 := pad:64[31:0[R21]]
0005bde1: R30 := 0xEC20
0005bde3: call @headers_send with return %0005bde5

0005bde5:
0005bde8: when 31:0[R0] = 0 goto %000566fc
0006d082: goto %0005bdec

0005bdec:
0005bdf1: R0 := mem[R26 + 0xF78, el]:u64
0005bdf8: R0 := pad:64[mem[R0, el]:u32]
0005bdff: when 31:0[R0] <> 0 goto %0005bdfd
0006d083: goto %0005be1a

0005bdfd:
0005be05: R1 := 0x13000
0005be0a: R0 := 1
0005be10: R1 := R1 + 0x530
0005be15: R30 := 0xED10
0005be17: call @__printf_chk with return %0005be19

0005be19:
0005be1c: goto %0005be1a

0005be1a:
0005be21: R0 := R19
0005be26: R30 := 0xEC38
0005be28: call @reset_rr_data with return %0005be2a

0005be2a:
0005be2e: R1 := R19
0005be34: R0 := pad:64[31:0[R21]]
0005be39: R30 := 0xEC44
0005be3b: call @headers_recv with return %0005be3d

0005be3d:
0005be40: when 31:0[R0] = 0 goto %000566fc
0006d084: goto %0005be44

0005be44:
0005be49: R26 := mem[R26 + 0xF78, el]:u64
0005be50: R0 := pad:64[mem[R26, el]:u32]
0005be57: when 31:0[R0] <> 0 goto %0005be55
0006d085: goto %0005be69

0005be55:
0005be5f: R0 := mem[R19 + 8, el]:u64
0005be64: R30 := 0xED1C
0005be66: call @hlist_dump with return %0005be68

0005be68:
0005be6b: goto %0005be69

0005be69:
0005be70: R0 := R23
0005be76: R1 := R19
0005be7b: R21 := 1
0005be80: R30 := 0xEC64
0005be82: call @copy_rr_data with return %0005be84

0005be84:
0005be86: goto %00056706

000566fc:
00056704: R21 := 0
0006d086: goto %00056706

00056706:
0005670a: R0 := R19
0005670f: R30 := 0xEAB0
00056711: call @free_rr_data with return %00056713

00056713:
00056717: R0 := R20
0005671c: R30 := 0xEAB8
0005671e: call @free with return %00056720

00056720:
00056725: R22 := mem[R22 + 0xFB8, el]:u64
0005672c: R0 := mem[R31 + 0x78, el]:u64
00056733: R1 := mem[R22, el]:u64
00056739: #1033 := ~R1
0005673e: #1034 := R0 + ~R1 + 1
00056744: VF := extend:65[#1034] <> extend:65[R0] + extend:65[#1033] + 1
0005674a: CF := pad:65[#1034] <> pad:65[R0] + pad:65[#1033] + 1
0005674e: ZF := #1034 = 0
00056752: NF := 63:63[#1034]
00056756: R0 := #1034
0005675b: R1 := 0
00056761: when ZF <> 1 goto %0005675f
0006d087: goto %0005bb97

0005675f:
00056767: R30 := 0xED24
00056769: call @__stack_chk_fail with return %0005676b

0005676b:
0006d088: call @direct_request with noreturn

0005bb97:
0005bb9b: R0 := pad:64[31:0[R21]]
0005bba1: #1315 := R31 + 0x10
0005bba6: R19 := mem[#1315, el]:u64
0005bbab: R20 := mem[#1315 + 8, el]:u64
0005bbb1: #1316 := R31 + 0x20
0005bbb6: R21 := mem[#1316, el]:u64
0005bbbb: R22 := mem[#1316 + 8, el]:u64
0005bbc1: #1317 := R31 + 0x30
0005bbc6: R23 := mem[#1317, el]:u64
0005bbcb: R24 := mem[#1317 + 8, el]:u64
0005bbd1: #1318 := R31 + 0x40
0005bbd6: R25 := mem[#1318, el]:u64
0005bbdb: R26 := mem[#1318 + 8, el]:u64
0005bbe1: #1319 := R31 + 0x50
0005bbe6: R27 := mem[#1319, el]:u64
0005bbeb: R28 := mem[#1319 + 8, el]:u64
0005bbf2: R29 := mem[R31, el]:u64
0005bbf7: R30 := mem[R31 + 8, el]:u64
0005bbfb: R31 := R31 + 0x80
0005bc00: call R30 with noreturn
