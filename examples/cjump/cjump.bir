00000874: program
00000857: sub __cxa_finalize(__cxa_finalize_result)
00000875: __cxa_finalize_result :: out u32 = low:32[R0]

000005bd:
0000069e: R16 := 0x10000
000006a5: R17 := mem[R16 + 0xFA0, el]:u64
000006ab: R16 := R16 + 0xFA0
000006b0: call R17 with noreturn

00000858: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
00000876: __do_global_dtors_aux_result :: out u32 = low:32[R0]

00000352:
00000356: #5 := R31 - 0x20
0000035c: mem := mem with [#5, el]:u64 <- R29
00000362: mem := mem with [#5 + 8, el]:u64 <- R30
00000366: R31 := #5
0000036c: R29 := R31
00000374: mem := mem with [R31 + 0x10, el]:u64 <- R19
00000379: R19 := 0x11000
00000380: R0 := pad:64[mem[R19 + 0x10]]
00000387: when 31:0[R0] <> 0 goto %00000385
00000859: goto %00000586

00000586:
00000589: R0 := 0x10000
00000590: R0 := mem[R0 + 0xFD8, el]:u64
00000596: when R0 = 0 goto %00000594
0000085a: goto %000005ad

000005ad:
000005b0: R0 := 0x11000
000005b7: R0 := mem[R0 + 8, el]:u64
000005bc: R30 := 0x700
000005bf: call @__cxa_finalize with return %00000594

00000594:
0000059c: R30 := 0x704
0000059e: call @deregister_tm_clones with return %000005a0

000005a0:
000005a3: R0 := 1
000005ab: mem := mem with [R19 + 0x10] <- 7:0[R0]
0000085b: goto %00000385

00000385:
0000038f: R19 := mem[R31 + 0x10, el]:u64
00000396: R29 := mem[R31, el]:u64
0000039b: R30 := mem[R31 + 8, el]:u64
0000039f: R31 := R31 + 0x20
000003a4: call R30 with noreturn

0000085c: sub __libc_csu_fini(__libc_csu_fini_result)
00000877: __libc_csu_fini_result :: out u32 = low:32[R0]

0000050a:
0000050d: call R30 with noreturn

0000085d: sub __libc_csu_init(__libc_csu_init_result)
00000878: __libc_csu_init_result :: out u32 = low:32[R0]

00000417:
0000041b: #7 := R31 - 0x40
00000421: mem := mem with [#7, el]:u64 <- R29
00000427: mem := mem with [#7 + 8, el]:u64 <- R30
0000042b: R31 := #7
00000431: R29 := R31
00000437: #8 := R31 + 0x10
0000043d: mem := mem with [#8, el]:u64 <- R19
00000443: mem := mem with [#8 + 8, el]:u64 <- R20
00000448: R20 := 0x10000
0000044e: R20 := R20 + 0xD90
00000454: #9 := R31 + 0x20
0000045a: mem := mem with [#9, el]:u64 <- R21
00000460: mem := mem with [#9 + 8, el]:u64 <- R22
00000465: R21 := 0x10000
0000046b: R21 := R21 + 0xD88
00000472: R20 := R20 + ~R21 + 1
00000478: R22 := pad:64[31:0[R0]]
0000047e: #10 := R31 + 0x30
00000484: mem := mem with [#10, el]:u64 <- R23
0000048a: mem := mem with [#10 + 8, el]:u64 <- R24
00000490: R23 := R1
00000496: R24 := R2
0000049b: R30 := 0x7A8
0000049e: call @_init with return %000004a0

000004a0:
000004a4: #11 := ~(R20 ~>> 3)
000004a8: #12 := ~(R20 ~>> 3) + 1
000004ad: VF := extend:65[#12] <> extend:65[#11] + 1
000004b2: CF := pad:65[#12] <> pad:65[#11] + 1
000004b6: ZF := #12 = 0
000004ba: NF := 63:63[#12]
000004c0: when ZF goto %000004be
0000085e: goto %0000050f

0000050f:
00000515: R20 :=

          >> 3 | R20 << 0x3D]
0000051a: R19 := 0
0000085f: goto %0000051c

0000051c:
00000522: R3 := mem[R21 + (60:0[R19].0), el]:u64
00000528: R2 := R24
0000052e: R19 := R19 + 1
00000534: R1 := R23
0000053a: R0 := pad:64[31:0[R22]]
0000053f: R30 := 0x7D0
00000542: call R3 with return %00000544

00000544:
00000548: #16 := ~R19
0000054d: #17 := R20 + ~R19 + 1
00000553: VF := extend:65[#17] <> extend:65[R20] + extend:65[#16] + 1
00000559: CF := pad:65[#17] <> pad:65[R20] + pad:65[#16] + 1
0000055d: ZF := #17 = 0
00000561: NF := 63:63[#17]
00000566: when ZF <> 1 goto %0000051c
00000860: goto %000004be

000004be:
000004c7: #13 := R31 + 0x10
000004cc: R19 := mem[#13, el]:u64
000004d1: R20 := mem[#13 + 8, el]:u64
000004d7: #14 := R31 + 0x20
000004dc: R21 := mem[#14, el]:u64
000004e1: R22 := mem[#14 + 8, el]:u64
000004e7: #15 := R31 + 0x30
000004ec: R23 := mem[#15, el]:u64
000004f1: R24 := mem[#15 + 8, el]:u64
000004f8: R29 := mem[R31, el]:u64
000004fd: R30 := mem[R31 + 8, el]:u64
00000501: R31 := R31 + 0x40
00000506: call R30 with noreturn

00000861: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
00000879: __libc_start_main_main :: in u64 = R0
0000087a: __libc_start_main_arg2 :: in u32 = low:32[R1]
0000087b: __libc_start_main_arg3 :: in out u64 = R2
0000087c: __libc_start_main_auxv :: in out u64 = R3
0000087d: __libc_start_main_result :: out u32 = low:32[R0]

00000290:
000006b4: R16 := 0x10000
000006bb: R17 := mem[R16 + 0xFA8, el]:u64
000006c1: R16 := R16 + 0xFA8
000006c6: call R17 with noreturn

00000862: sub _fini(_fini_result)
0000087e: _fini_result :: out u32 = low:32[R0]

0000002e:
00000032: #0 := R31 - 0x10
00000038: mem := mem with [#0, el]:u64 <- R29
0000003e: mem := mem with [#0 + 8, el]:u64 <- R30
00000042: R31 := #0
00000048: R29 := R31
0000004f: R29 := mem[R31, el]:u64
00000054: R30 := mem[R31 + 8, el]:u64
00000058: R31 := R31 + 0x10
0000005d: call R30 with noreturn

00000863: sub _init(_init_result)
0000087f: _init_result :: out u32 = low:32[R0]

0000049c:
0000078c: #19 := R31 - 0x10
00000792: mem := mem with [#19, el]:u64 <- R29
00000798: mem := mem with [#19 + 8, el]:u64 <- R30
0000079c: R31 := #19
000007a2: R29 := R31
000007a7: R30 := 0x5A4
000007a9: call @call_weak_fn with return %000007ab

000007ab:
000007b0: R29 := mem[R31, el]:u64
000007b5: R30 := mem[R31 + 8, el]:u64
000007b9: R31 := R31 + 0x10
000007be: call R30 with noreturn

00000864: sub _start(_start_result)
00000880: _start_result :: out u32 = low:32[R0]

00000245:
00000248: R29 := 0
0000024d: R30 := 0
00000253: R5 := R0
0000025a: R1 := mem[R31, el]:u64
00000260: R2 := R31 + 8
00000266: R6 := R31
0000026b: R0 := 0x10000
00000272: R0 := mem[R0 + 0xFF0, el]:u64
00000277: R3 := 0x10000
0000027e: R3 := mem[R3 + 0xFE8, el]:u64
00000283: R4 := 0x10000
0000028a: R4 := mem[R4 + 0xFC8, el]:u64
0000028f: R30 := 0x644
00000292: call @__libc_start_main with return %00000294

00000294:
00000297: R30 := 0x648
0000029a: call @abort with return %00000865

00000865:
00000866: call @call_weak_fn with noreturn

00000867: sub abort()


00000298:
000006e0: R16 := 0x10000
000006e7: R17 := mem[R16 + 0xFB8, el]:u64
000006ed: R16 := R16 + 0xFB8
000006f2: call R17 with noreturn

00000868: sub call_weak_fn(call_weak_fn_result)
00000881: call_weak_fn_result :: out u32 = low:32[R0]

0000029c:
0000029f: R0 := 0x10000
000002a6: R0 := mem[R0 + 0xFE0, el]:u64
000002ac: when R0 = 0 goto %000002aa
00000869: goto %000005fd

000002aa:
000002b2: call R30 with noreturn

000005fd:
00000600: goto @__gmon_start__

000005fe:
000006ca: R16 := 0x10000
000006d1: R17 := mem[R16 + 0xFB0, el]:u64
000006d7: R16 := R16 + 0xFB0
000006dc: call R17 with noreturn

0000086a: sub deregister_tm_clones(deregister_tm_clones_result)
00000882: deregister_tm_clones_result :: out u32 = low:32[R0]

000002b6:
000002b9: R0 := 0x11000
000002bf: R0 := R0 + 0x10
000002c4: R1 := 0x11000
000002ca: R1 := R1 + 0x10
000002d0: #1 := ~R0
000002d5: #2 := R1 + ~R0 + 1
000002db: VF := extend:65[#2] <> extend:65[R1] + extend:65[#1] + 1
000002e1: CF := pad:65[#2] <> pad:65[R1] + pad:65[#1] + 1
000002e5: ZF := #2 = 0
000002e9: NF := 63:63[#2]
000002ef: when ZF goto %000002ed
0000086b: goto %000005df

000005df:
000005e2: R1 := 0x10000
000005e9: R1 := mem[R1 + 0xFD0, el]:u64
000005ee: when R1 = 0 goto %000002ed
0000086c: goto %000005f2

000002ed:
000002f5: call R30 with noreturn

000005f2:
000005f6: R16 := R1
000005fb: call R16 with noreturn

0000086d: sub frame_dummy(frame_dummy_result)
00000883: frame_dummy_result :: out u32 = low:32[R0]

000003a6:
000003a8: call @register_tm_clones with noreturn

0000086e: sub main(main_argc, main_argv, main_result)
00000884: main_argc :: in u32 = low:32[R0]
00000885: main_argv :: in out u64 = R1
00000886: main_result :: out u32 = low:32[R0]

000003aa:
000003ad: R0 := 0x11000
000003b3: R0 := R0 + 0x14
000003b8: R1 := 1
000003c0: mem := mem with [R0, el]:u32 <- 31:0[R1]
000003c5: R0 := 0x11000
000003cb: R0 := R0 + 0x14
000003d2: R0 := pad:64[mem[R0, el]:u32]
000003d8: #6 := 31:0[R0] + 0
000003dd: VF := extend:33[#6] <> extend:33[31:0[R0]] + 0
000003e2: CF := pad:33[#6] <> pad:33[31:0[R0]] - 0x100000000
000003e6: ZF := #6 = 0
000003ea: NF := 31:31[#6]
000003f0: when ZF goto %000003ee
0000086f: goto %0000056a

000003ee:
000003f6: R0 := 0x11000
000003fc: R0 := R0 + 0x18
00000401: R1 := 2
00000409: mem := mem with [R0, el]:u32 <- 31:0[R1]
00000870: goto %0000040b

0000056a:
0000056d: R0 := 0x11000
00000573: R0 := R0 + 0x18
00000578: R1 := 3
00000580: mem := mem with [R0, el]:u32 <- 31:0[R1]
00000584: goto %0000040b

0000040b:
0000040e: R0 := 0
00000413: call R30 with noreturn

00000871: sub register_tm_clones(register_tm_clones_result)
00000887: register_tm_clones_result :: out u32 = low:32[R0]

000002f7:
000002fa: R0 := 0x11000
00000300: R0 := R0 + 0x10
00000305: R1 := 0x11000
0000030b: R1 := R1 + 0x10
00000312: R1 := R1 + ~R0 + 1
00000319: R2 := 0.0:0[R1 >> 0x3F | R1 << 1]
00000320: R1 := R2 + (R1 ~>> 3)
00000326: #3 := ~(R1 ~>> 1)
0000032a: #4 := ~(R1 ~>> 1) + 1
0000032f: VF := extend:65[#4] <> extend:65[#3] + 1
00000334: CF := pad:65[#4] <> pad:65[#3] + 1
00000338: ZF := #4 = 0
0000033c: NF := 63:63[#4]
00000344: R1 :=

          >> 1 | R1 << 0x3F]
0000034a: when ZF goto %00000348
00000872: goto %000005c1

000005c1:
000005c4: R2 := 0x10000
000005cb: R2 := mem[R2 + 0xFF8, el]:u64
000005d0: when R2 = 0 goto %00000348
00000873: goto %000005d4

00000348:
00000350: call R30 with noreturn

000005d4:
000005d8: R16 := R2
000005dd: call R16 with noreturn
