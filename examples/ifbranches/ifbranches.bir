00000869: program
0000084c: sub __cxa_finalize(__cxa_finalize_result)
0000086a: __cxa_finalize_result :: out u32 = low:32[R0]

000005b6:
00000697: R16 := 0x10000
0000069e: R17 := mem[R16 + 0xFA0, el]:u64
000006a4: R16 := R16 + 0xFA0
000006a9: call R17 with noreturn

0000084d: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
0000086b: __do_global_dtors_aux_result :: out u32 = low:32[R0]

0000034a:
0000034e: #5 := R31 - 0x20
00000354: mem := mem with [#5, el]:u64 <- R29
0000035a: mem := mem with [#5 + 8, el]:u64 <- R30
0000035e: R31 := #5
00000364: R29 := R31
0000036c: mem := mem with [R31 + 0x10, el]:u64 <- R19
00000371: R19 := 0x11000
00000378: R0 := pad:64[mem[R19 + 0x10]]
0000037f: when 31:0[R0] <> 0 goto %0000037d
0000084e: goto %0000057f

0000057f:
00000582: R0 := 0x10000
00000589: R0 := mem[R0 + 0xFD8, el]:u64
0000058f: when R0 = 0 goto %0000058d
0000084f: goto %000005a6

000005a6:
000005a9: R0 := 0x11000
000005b0: R0 := mem[R0 + 8, el]:u64
000005b5: R30 := 0x700
000005b8: call @__cxa_finalize with return %0000058d

0000058d:
00000595: R30 := 0x704
00000597: call @deregister_tm_clones with return %00000599

00000599:
0000059c: R0 := 1
000005a4: mem := mem with [R19 + 0x10] <- 7:0[R0]
00000850: goto %0000037d

0000037d:
00000387: R19 := mem[R31 + 0x10, el]:u64
0000038e: R29 := mem[R31, el]:u64
00000393: R30 := mem[R31 + 8, el]:u64
00000397: R31 := R31 + 0x20
0000039c: call R30 with noreturn

00000851: sub __libc_csu_fini(__libc_csu_fini_result)
0000086c: __libc_csu_fini_result :: out u32 = low:32[R0]

0000050e:
00000511: call R30 with noreturn

00000852: sub __libc_csu_init(__libc_csu_init_result)
0000086d: __libc_csu_init_result :: out u32 = low:32[R0]

0000041b:
0000041f: #7 := R31 - 0x40
00000425: mem := mem with [#7, el]:u64 <- R29
0000042b: mem := mem with [#7 + 8, el]:u64 <- R30
0000042f: R31 := #7
00000435: R29 := R31
0000043b: #8 := R31 + 0x10
00000441: mem := mem with [#8, el]:u64 <- R19
00000447: mem := mem with [#8 + 8, el]:u64 <- R20
0000044c: R20 := 0x10000
00000452: R20 := R20 + 0xD90
00000458: #9 := R31 + 0x20
0000045e: mem := mem with [#9, el]:u64 <- R21
00000464: mem := mem with [#9 + 8, el]:u64 <- R22
00000469: R21 := 0x10000
0000046f: R21 := R21 + 0xD88
00000476: R20 := R20 + ~R21 + 1
0000047c: R22 := pad:64[31:0[R0]]
00000482: #10 := R31 + 0x30
00000488: mem := mem with [#10, el]:u64 <- R23
0000048e: mem := mem with [#10 + 8, el]:u64 <- R24
00000494: R23 := R1
0000049a: R24 := R2
0000049f: R30 := 0x7A0
000004a2: call @_init with return %000004a4

000004a4:
000004a8: #11 := ~(R20 ~>> 3)
000004ac: #12 := ~(R20 ~>> 3) + 1
000004b1: VF := extend:65[#12] <> extend:65[#11] + 1
000004b6: CF := pad:65[#12] <> pad:65[#11] + 1
000004ba: ZF := #12 = 0
000004be: NF := 63:63[#12]
000004c4: when ZF goto %000004c2
00000853: goto %00000513

00000513:
00000519: R20 :=

          >> 3 | R20 << 0x3D]
0000051e: R19 := 0
00000854: goto %00000520

00000520:
00000526: R3 := mem[R21 + (60:0[R19].0), el]:u64
0000052c: R2 := R24
00000532: R19 := R19 + 1
00000538: R1 := R23
0000053e: R0 := pad:64[31:0[R22]]
00000543: R30 := 0x7C8
00000546: call R3 with return %00000548

00000548:
0000054c: #16 := ~R19
00000551: #17 := R20 + ~R19 + 1
00000557: VF := extend:65[#17] <> extend:65[R20] + extend:65[#16] + 1
0000055d: CF := pad:65[#17] <> pad:65[R20] + pad:65[#16] + 1
00000561: ZF := #17 = 0
00000565: NF := 63:63[#17]
0000056a: when ZF <> 1 goto %00000520
00000855: goto %000004c2

000004c2:
000004cb: #13 := R31 + 0x10
000004d0: R19 := mem[#13, el]:u64
000004d5: R20 := mem[#13 + 8, el]:u64
000004db: #14 := R31 + 0x20
000004e0: R21 := mem[#14, el]:u64
000004e5: R22 := mem[#14 + 8, el]:u64
000004eb: #15 := R31 + 0x30
000004f0: R23 := mem[#15, el]:u64
000004f5: R24 := mem[#15 + 8, el]:u64
000004fc: R29 := mem[R31, el]:u64
00000501: R30 := mem[R31 + 8, el]:u64
00000505: R31 := R31 + 0x40
0000050a: call R30 with noreturn

00000856: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
0000086e: __libc_start_main_main :: in u64 = R0
0000086f: __libc_start_main_arg2 :: in u32 = low:32[R1]
00000870: __libc_start_main_arg3 :: in out u64 = R2
00000871: __libc_start_main_auxv :: in out u64 = R3
00000872: __libc_start_main_result :: out u32 = low:32[R0]

00000288:
000006ad: R16 := 0x10000
000006b4: R17 := mem[R16 + 0xFA8, el]:u64
000006ba: R16 := R16 + 0xFA8
000006bf: call R17 with noreturn

00000857: sub _fini(_fini_result)
00000873: _fini_result :: out u32 = low:32[R0]

0000002e:
00000032: #0 := R31 - 0x10
00000038: mem := mem with [#0, el]:u64 <- R29
0000003e: mem := mem with [#0 + 8, el]:u64 <- R30
00000042: R31 := #0
00000048: R29 := R31
0000004f: R29 := mem[R31, el]:u64
00000054: R30 := mem[R31 + 8, el]:u64
00000058: R31 := R31 + 0x10
0000005d: call R30 with noreturn

00000858: sub _init(_init_result)
00000874: _init_result :: out u32 = low:32[R0]

000004a0:
00000783: #19 := R31 - 0x10
00000789: mem := mem with [#19, el]:u64 <- R29
0000078f: mem := mem with [#19 + 8, el]:u64 <- R30
00000793: R31 := #19
00000799: R29 := R31
0000079e: R30 := 0x5A4
000007a0: call @call_weak_fn with return %000007a2

000007a2:
000007a7: R29 := mem[R31, el]:u64
000007ac: R30 := mem[R31 + 8, el]:u64
000007b0: R31 := R31 + 0x10
000007b5: call R30 with noreturn

00000859: sub _start(_start_result)
00000875: _start_result :: out u32 = low:32[R0]

0000023d:
00000240: R29 := 0
00000245: R30 := 0
0000024b: R5 := R0
00000252: R1 := mem[R31, el]:u64
00000258: R2 := R31 + 8
0000025e: R6 := R31
00000263: R0 := 0x10000
0000026a: R0 := mem[R0 + 0xFF0, el]:u64
0000026f: R3 := 0x10000
00000276: R3 := mem[R3 + 0xFE8, el]:u64
0000027b: R4 := 0x10000
00000282: R4 := mem[R4 + 0xFC8, el]:u64
00000287: R30 := 0x644
0000028a: call @__libc_start_main with return %0000028c

0000028c:
0000028f: R30 := 0x648
00000292: call @abort with return %0000085a

0000085a:
0000085b: call @call_weak_fn with noreturn

0000085c: sub abort()


00000290:
000006d9: R16 := 0x10000
000006e0: R17 := mem[R16 + 0xFB8, el]:u64
000006e6: R16 := R16 + 0xFB8
000006eb: call R17 with noreturn

0000085d: sub call_weak_fn(call_weak_fn_result)
00000876: call_weak_fn_result :: out u32 = low:32[R0]

00000294:
00000297: R0 := 0x10000
0000029e: R0 := mem[R0 + 0xFE0, el]:u64
000002a4: when R0 = 0 goto %000002a2
0000085e: goto %000005f6

000002a2:
000002aa: call R30 with noreturn

000005f6:
000005f9: goto @__gmon_start__

000005f7:
000006c3: R16 := 0x10000
000006ca: R17 := mem[R16 + 0xFB0, el]:u64
000006d0: R16 := R16 + 0xFB0
000006d5: call R17 with noreturn

0000085f: sub deregister_tm_clones(deregister_tm_clones_result)
00000877: deregister_tm_clones_result :: out u32 = low:32[R0]

000002ae:
000002b1: R0 := 0x11000
000002b7: R0 := R0 + 0x10
000002bc: R1 := 0x11000
000002c2: R1 := R1 + 0x10
000002c8: #1 := ~R0
000002cd: #2 := R1 + ~R0 + 1
000002d3: VF := extend:65[#2] <> extend:65[R1] + extend:65[#1] + 1
000002d9: CF := pad:65[#2] <> pad:65[R1] + pad:65[#1] + 1
000002dd: ZF := #2 = 0
000002e1: NF := 63:63[#2]
000002e7: when ZF goto %000002e5
00000860: goto %000005d8

000005d8:
000005db: R1 := 0x10000
000005e2: R1 := mem[R1 + 0xFD0, el]:u64
000005e7: when R1 = 0 goto %000002e5
00000861: goto %000005eb

000002e5:
000002ed: call R30 with noreturn

000005eb:
000005ef: R16 := R1
000005f4: call R16 with noreturn

00000862: sub frame_dummy(frame_dummy_result)
00000878: frame_dummy_result :: out u32 = low:32[R0]

0000039e:
000003a0: call @register_tm_clones with noreturn

00000863: sub main(main_argc, main_argv, main_result)
00000879: main_argc :: in u32 = low:32[R0]
0000087a: main_argv :: in out u64 = R1
0000087b: main_result :: out u32 = low:32[R0]

000003a2:
000003a6: R31 := R31 - 0x20
000003ae: mem := mem with [R31 + 0xC, el]:u32 <- 31:0[R0]
000003b6: mem := mem with [R31, el]:u64 <- R1
000003bd: mem := mem with [R31 + 0x18, el]:u32 <- 0
000003c4: R0 := pad:64[mem[R31 + 0xC, el]:u32]
000003ca: #6 := 31:0[R0] + 0
000003cf: VF := extend:33[#6] <> extend:33[31:0[R0]] + 0
000003d4: CF := pad:33[#6] <> pad:33[31:0[R0]] - 0x100000000
000003d8: ZF := #6 = 0
000003dc: NF := 31:31[#6]
000003e2: when ZF <> 1 goto %000003e0
00000864: goto %0000056e

000003e0:
000003e8: R0 := 2
000003f0: mem := mem with [R31 + 0x18, el]:u32 <- 31:0[R0]
00000865: goto %000003f2

0000056e:
00000571: R0 := 1
00000579: mem := mem with [R31 + 0x18, el]:u32 <- 31:0[R0]
0000057d: goto %000003f2

000003f2:
000003f7: R0 := pad:64[mem[R31 + 0x18, el]:u32]
000003fd: R0 := pad:64[31:0[R0] + 1]
00000405: mem := mem with [R31 + 0x1C, el]:u32 <- 31:0[R0]
0000040c: R0 := pad:64[mem[R31 + 0x1C, el]:u32]
00000412: R31 := R31 + 0x20
00000417: call R30 with noreturn

00000866: sub register_tm_clones(register_tm_clones_result)
0000087c: register_tm_clones_result :: out u32 = low:32[R0]

000002ef:
000002f2: R0 := 0x11000
000002f8: R0 := R0 + 0x10
000002fd: R1 := 0x11000
00000303: R1 := R1 + 0x10
0000030a: R1 := R1 + ~R0 + 1
00000311: R2 := 0.0:0[R1 >> 0x3F | R1 << 1]
00000318: R1 := R2 + (R1 ~>> 3)
0000031e: #3 := ~(R1 ~>> 1)
00000322: #4 := ~(R1 ~>> 1) + 1
00000327: VF := extend:65[#4] <> extend:65[#3] + 1
0000032c: CF := pad:65[#4] <> pad:65[#3] + 1
00000330: ZF := #4 = 0
00000334: NF := 63:63[#4]
0000033c: R1 :=

          >> 1 | R1 << 0x3F]
00000342: when ZF goto %00000340
00000867: goto %000005ba

000005ba:
000005bd: R2 := 0x10000
000005c4: R2 := mem[R2 + 0xFF8, el]:u64
000005c9: when R2 = 0 goto %00000340
00000868: goto %000005cd

00000340:
00000348: call R30 with noreturn

000005cd:
000005d1: R16 := R2
000005d6: call R16 with noreturn
