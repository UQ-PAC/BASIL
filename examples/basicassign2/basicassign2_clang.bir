0000082a: program
0000080f: sub __cxa_finalize(__cxa_finalize_result)
0000082b: __cxa_finalize_result :: out u32 = low:32[R0]

00000581:
00000662: R16 := 0x11000
00000669: R17 := mem[R16, el]:u64
0000066f: R16 := R16
00000674: call R17 with noreturn

00000810: sub __do_global_dtors_aux(__do_global_dtors_aux_result)
0000082c: __do_global_dtors_aux_result :: out u32 = low:32[R0]

0000033c:
00000340: #5 := R31 - 0x20
00000346: mem := mem with [#5, el]:u64 <- R29
0000034c: mem := mem with [#5 + 8, el]:u64 <- R30
00000350: R31 := #5
00000356: R29 := R31
0000035e: mem := mem with [R31 + 0x10, el]:u64 <- R19
00000363: R19 := 0x11000
0000036a: R0 := pad:64[mem[R19 + 0x30]]
00000371: when 31:0[R0] <> 0 goto %0000036f
00000811: goto %0000054a

0000054a:
0000054d: R0 := 0x10000
00000554: R0 := mem[R0 + 0xFC0, el]:u64
0000055a: when R0 = 0 goto %00000558
00000812: goto %00000571

00000571:
00000574: R0 := 0x11000
0000057b: R0 := mem[R0 + 0x28, el]:u64
00000580: R30 := 0x700
00000583: call @__cxa_finalize with return %00000558

00000558:
00000560: R30 := 0x704
00000562: call @deregister_tm_clones with return %00000564

00000564:
00000567: R0 := 1
0000056f: mem := mem with [R19 + 0x30] <- 7:0[R0]
00000813: goto %0000036f

0000036f:
00000379: R19 := mem[R31 + 0x10, el]:u64
00000380: R29 := mem[R31, el]:u64
00000385: R30 := mem[R31 + 8, el]:u64
00000389: R31 := R31 + 0x20
0000038e: call R30 with noreturn

00000814: sub __libc_csu_fini(__libc_csu_fini_result)
0000082d: __libc_csu_fini_result :: out u32 = low:32[R0]

000004ea:
000004ed: call R30 with noreturn

00000815: sub __libc_csu_init(__libc_csu_init_result)
0000082e: __libc_csu_init_result :: out u32 = low:32[R0]

000003f7:
000003fb: #6 := R31 - 0x40
00000401: mem := mem with [#6, el]:u64 <- R29
00000407: mem := mem with [#6 + 8, el]:u64 <- R30
0000040b: R31 := #6
00000411: R29 := R31
00000417: #7 := R31 + 0x10
0000041d: mem := mem with [#7, el]:u64 <- R19
00000423: mem := mem with [#7 + 8, el]:u64 <- R20
00000428: R20 := 0x10000
0000042e: R20 := R20 + 0xDC0
00000434: #8 := R31 + 0x20
0000043a: mem := mem with [#8, el]:u64 <- R21
00000440: mem := mem with [#8 + 8, el]:u64 <- R22
00000445: R21 := 0x10000
0000044b: R21 := R21 + 0xDB8
00000452: R20 := R20 + ~R21 + 1
00000458: R22 := pad:64[31:0[R0]]
0000045e: #9 := R31 + 0x30
00000464: mem := mem with [#9, el]:u64 <- R23
0000046a: mem := mem with [#9 + 8, el]:u64 <- R24
00000470: R23 := R1
00000476: R24 := R2
0000047b: R30 := 0x790
0000047e: call @_init with return %00000480

00000480:
00000484: #10 := ~(R20 ~>> 3)
00000488: #11 := ~(R20 ~>> 3) + 1
0000048d: VF := extend:65[#11] <> extend:65[#10] + 1
00000492: CF := pad:65[#11] <> pad:65[#10] + 1
00000496: ZF := #11 = 0
0000049a: NF := 63:63[#11]
000004a0: when ZF goto %0000049e
00000816: goto %000004ef

000004ef:
000004f5: R20 :=

          >> 3 | R20 << 0x3D]
000004fa: R19 := 0
00000817: goto %000004fc

000004fc:
00000502: R3 := mem[R21 + (60:0[R19].0), el]:u64
00000508: R2 := R24
0000050e: R19 := R19 + 1
00000514: R1 := R23
0000051a: R0 := pad:64[31:0[R22]]
0000051f: R30 := 0x7B8
00000522: call R3 with return %00000524

00000524:
00000528: #15 := ~R19
0000052d: #16 := R20 + ~R19 + 1
00000533: VF := extend:65[#16] <> extend:65[R20] + extend:65[#15] + 1
00000539: CF := pad:65[#16] <> pad:65[R20] + pad:65[#15] + 1
0000053d: ZF := #16 = 0
00000541: NF := 63:63[#16]
00000546: when ZF <> 1 goto %000004fc
00000818: goto %0000049e

0000049e:
000004a7: #12 := R31 + 0x10
000004ac: R19 := mem[#12, el]:u64
000004b1: R20 := mem[#12 + 8, el]:u64
000004b7: #13 := R31 + 0x20
000004bc: R21 := mem[#13, el]:u64
000004c1: R22 := mem[#13 + 8, el]:u64
000004c7: #14 := R31 + 0x30
000004cc: R23 := mem[#14, el]:u64
000004d1: R24 := mem[#14 + 8, el]:u64
000004d8: R29 := mem[R31, el]:u64
000004dd: R30 := mem[R31 + 8, el]:u64
000004e1: R31 := R31 + 0x40
000004e6: call R30 with noreturn

00000819: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
0000082f: __libc_start_main_main :: in u64 = R0
00000830: __libc_start_main_arg2 :: in u32 = low:32[R1]
00000831: __libc_start_main_arg3 :: in out u64 = R2
00000832: __libc_start_main_auxv :: in out u64 = R3
00000833: __libc_start_main_result :: out u32 = low:32[R0]

0000027a:
00000678: R16 := 0x11000
0000067f: R17 := mem[R16 + 8, el]:u64
00000685: R16 := R16 + 8
0000068a: call R17 with noreturn

0000081a: sub _fini(_fini_result)
00000834: _fini_result :: out u32 = low:32[R0]

00000030:
00000034: #0 := R31 - 0x10
0000003a: mem := mem with [#0, el]:u64 <- R29
00000040: mem := mem with [#0 + 8, el]:u64 <- R30
00000044: R31 := #0
0000004a: R29 := R31
00000051: R29 := mem[R31, el]:u64
00000056: R30 := mem[R31 + 8, el]:u64
0000005a: R31 := R31 + 0x10
0000005f: call R30 with noreturn

0000081b: sub _init(_init_result)
00000835: _init_result :: out u32 = low:32[R0]

0000047c:
0000074a: #18 := R31 - 0x10
00000750: mem := mem with [#18, el]:u64 <- R29
00000756: mem := mem with [#18 + 8, el]:u64 <- R30
0000075a: R31 := #18
00000760: R29 := R31
00000765: R30 := 0x5A4
00000767: call @call_weak_fn with return %00000769

00000769:
0000076e: R29 := mem[R31, el]:u64
00000773: R30 := mem[R31 + 8, el]:u64
00000777: R31 := R31 + 0x10
0000077c: call R30 with noreturn

0000081c: sub _start(_start_result)
00000836: _start_result :: out u32 = low:32[R0]

0000022f:
00000232: R29 := 0
00000237: R30 := 0
0000023d: R5 := R0
00000244: R1 := mem[R31, el]:u64
0000024a: R2 := R31 + 8
00000250: R6 := R31
00000255: R0 := 0x10000
0000025c: R0 := mem[R0 + 0xFD8, el]:u64
00000261: R3 := 0x10000
00000268: R3 := mem[R3 + 0xFD0, el]:u64
0000026d: R4 := 0x10000
00000274: R4 := mem[R4 + 0xFB0, el]:u64
00000279: R30 := 0x644
0000027c: call @__libc_start_main with return %0000027e

0000027e:
00000281: R30 := 0x648
00000284: call @abort with return %0000081d

0000081d:
0000081e: call @call_weak_fn with noreturn

0000081f: sub abort()


00000282:
000006a4: R16 := 0x11000
000006ab: R17 := mem[R16 + 0x18, el]:u64
000006b1: R16 := R16 + 0x18
000006b6: call R17 with noreturn

00000820: sub call_weak_fn(call_weak_fn_result)
00000837: call_weak_fn_result :: out u32 = low:32[R0]

00000286:
00000289: R0 := 0x10000
00000290: R0 := mem[R0 + 0xFC8, el]:u64
00000296: when R0 = 0 goto %00000294
00000821: goto %000005c1

00000294:
0000029c: call R30 with noreturn

000005c1:
000005c4: goto @__gmon_start__

000005c2:
0000068e: R16 := 0x11000
00000695: R17 := mem[R16 + 0x10, el]:u64
0000069b: R16 := R16 + 0x10
000006a0: call R17 with noreturn

00000822: sub deregister_tm_clones(deregister_tm_clones_result)
00000838: deregister_tm_clones_result :: out u32 = low:32[R0]

000002a0:
000002a3: R0 := 0x11000
000002a9: R0 := R0 + 0x30
000002ae: R1 := 0x11000
000002b4: R1 := R1 + 0x30
000002ba: #1 := ~R0
000002bf: #2 := R1 + ~R0 + 1
000002c5: VF := extend:65[#2] <> extend:65[R1] + extend:65[#1] + 1
000002cb: CF := pad:65[#2] <> pad:65[R1] + pad:65[#1] + 1
000002cf: ZF := #2 = 0
000002d3: NF := 63:63[#2]
000002d9: when ZF goto %000002d7
00000823: goto %000005a3

000005a3:
000005a6: R1 := 0x10000
000005ad: R1 := mem[R1 + 0xFB8, el]:u64
000005b2: when R1 = 0 goto %000002d7
00000824: goto %000005b6

000002d7:
000002df: call R30 with noreturn

000005b6:
000005ba: R16 := R1
000005bf: call R16 with noreturn

00000825: sub frame_dummy(frame_dummy_result)
00000839: frame_dummy_result :: out u32 = low:32[R0]

00000390:
00000392: call @register_tm_clones with noreturn

00000826: sub main(main_argc, main_argv, main_result)
0000083a: main_argc :: in u32 = low:32[R0]
0000083b: main_argv :: in out u64 = R1
0000083c: main_result :: out u32 = low:32[R0]

00000394:
00000398: R31 := R31 - 0x10
0000039d: R8 := 0x11000
000003a4: R9 := mem[R8 + 0x38, el]:u64
000003ac: mem := mem with [R31 + 8, el]:u64 <- R9
000003b3: mem := mem with [R31 + 8, el]:u64 <- 0
000003ba: R10 := mem[R31 + 8, el]:u64
000003bf: R9 := 0x11000
000003c7: mem := mem with [R9 + 0x40, el]:u64 <- R10
000003ce: R8 := mem[R8 + 0x38, el]:u64
000003d6: mem := mem with [R31 + 8, el]:u64 <- R8
000003dd: R8 := mem[R31 + 8, el]:u64
000003e5: mem := mem with [R9 + 0x40, el]:u64 <- R8
000003ea: R0 := 0
000003f0: R31 := R31 + 0x10
000003f5: call R30 with noreturn

00000827: sub register_tm_clones(register_tm_clones_result)
0000083d: register_tm_clones_result :: out u32 = low:32[R0]

000002e1:
000002e4: R0 := 0x11000
000002ea: R0 := R0 + 0x30
000002ef: R1 := 0x11000
000002f5: R1 := R1 + 0x30
000002fc: R1 := R1 + ~R0 + 1
00000303: R2 := 0.0:0[R1 >> 0x3F | R1 << 1]
0000030a: R1 := R2 + (R1 ~>> 3)
00000310: #3 := ~(R1 ~>> 1)
00000314: #4 := ~(R1 ~>> 1) + 1
00000319: VF := extend:65[#4] <> extend:65[#3] + 1
0000031e: CF := pad:65[#4] <> pad:65[#3] + 1
00000322: ZF := #4 = 0
00000326: NF := 63:63[#4]
0000032e: R1 :=

          >> 1 | R1 << 0x3F]
00000334: when ZF goto %00000332
00000828: goto %00000585

00000585:
00000588: R2 := 0x10000
0000058f: R2 := mem[R2 + 0xFE0, el]:u64
00000594: when R2 = 0 goto %00000332
00000829: goto %00000598

00000332:
0000033a: call R30 with noreturn

00000598:
0000059c: R16 := R2
000005a1: call R16 with noreturn
