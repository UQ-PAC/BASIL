
package build.basilmill

import mill._
import mill.api.BuildCtx

import os.Path
import scalalib._
import scala.util.{Try}


trait ProfileModule extends ScalaModule with DownloadModule {

  def name = s"async-profiler-${version}-$zipSuffix"
  def url = s"https://github.com/async-profiler/async-profiler/releases/download/v${version}/$name"
  def version = "4.0"
  def toUnpack = s"async-profiler-${version}-${folderSuffix}/lib/libasyncProfiler.${libExt}"

  def arch = {
    System.getProperty("os.arch") match {
      case "amd64" => "x64"
      case "aarch64" => "arm64"
      case o => o
    }
  }

  def zipSuffix = suffix.mkString(".")
  def folderSuffix = suffix.head

  def local = Task.Input {
    Try(os.isFile(BuildCtx.workspaceRoot / toUnpack))
      .map(Function.const(toUnpack))
      .toEither
      .left.map(_.toString)
  }

  val platform = Platform.detectExn()
  val hostOS = platform.os
  val libExt = platform.os.libExtension

  def suffix = hostOS match {
    case Platform.Linux => Seq(s"linux-${arch}", "tar.gz")
    case Platform.Mac => Seq("macos", "zip")
    case osName => throw new Exception(s"Profiling is only supported on linux, mac. Not : $osName")
  }

  override def unzip = hostOS match {
    case Platform.Linux => Some(TarGZ(toUnpack))
    case Platform.Mac => Some(Zip(toUnpack))
    case _ => ???
  }

}
