const registers: [int] int;
const memory: [int] int;
var SP: int, FP: int, LR: int;
SP = 0;
FP = ?;
LR = ?;

procedure main()
    modifies mem
    modifies registers
    @param argc: from registers[0]
    @param argv: from registers[1]
    @result: to registers[0]
{
    label000001b9: skip;
    label000001be: registers[0] := 0x11000;
    label000001c5: registers[0] := (registers[0]) + (0x34);
    label000001cc: mem[registers[0]] := 0;
    label000001d3: goto label000001d1;
    label000001d1: skip;
    label000001d9: registers[0] := 0x11000;
    label000001e0: registers[0] := (registers[0]) + (0x34);
    label000001e7: skip;
    label000001ed: #33 := (0xFFFFFFFFFFFFFFFC) + (registers[0]);
    label000001f1: NF := #33[1:0];
    label000001f5: VF := (registers[0][1:0]) & (~ (#33[1:0]));
    label000001f9: ZF := (#33) == (0);
    label000001fd: CF := (registers[0][1:0]) | (~ (((#33[1:0]) | (registers[0][1:0])) & (~ (#33[1:0]))));
    label0000020c: #35 := () <> (0);
    label00000206: if (#35) {goto label00000204};
    label000004da: goto label0000023e;
    label0000023e: skip;
    label00000243: registers[0] := 0;
    label00000249: ;
    label00000204: skip;
    label00000212: registers[0] := 0x11000;
    label00000219: registers[0] := (registers[0]) + (0x34);
    label00000220: skip;
    label00000227: registers[1] := (registers[0]) + (1);
    label0000022e: registers[0] := 0x11000;
    label00000235: registers[0] := (registers[0]) + (0x34);
    label0000023c: mem[registers[0]] := registers[1];
    label000004db: goto label000001d1;
procedure sub_598()
    modifies mem
    modifies registers
    @result: to registers[0]
{
    label000002b2: skip;
    label00000499: mem[(SP) - (0x10)] := FP;
    label0000049e: mem[(SP) - (8)] := LR;
    label000004a3: SP := (SP) - (0x10);
    label000004aa: FP := SP;
    label000004b0: LR := 0x5A4;
    label000004b4: call call_weak_fn(); goto label000004b6;
    label000004b6: skip;
    label000004bb: skip;
    label000004c0: skip;
    label000004c5: SP := (SP) + (0x10);
}

procedure sub_610()
    modifies mem
    modifies registers
    @result: to registers[0]
{
    label0000003a: skip;
    label0000003f: FP := 0;
    label00000046: LR := 0;
    label0000004d: registers[5] := registers[0];
    label00000054: skip;
    label0000005b: registers[2] := (SP) + (8);
    label00000062: registers[6] := SP;
    label00000069: registers[0] := 0x10000;
    label00000070: skip;
    label00000077: registers[3] := 0x10000;
    label0000007e: skip;
    label00000085: registers[4] := 0x10000;
    label0000008c: skip;
    label00000092: LR := 0x644;
    label00000097: call __libc_start_main(); goto label00000099;
    label00000099: skip;
    label0000009d: LR := 0x648;
    label000000a2: call abort(); goto label000004de;
    label000004de: skip;
}

procedure sub_660()
    modifies mem
    modifies registers
    @result: to registers[0]
{
    label000000c7: skip;
    label000000cc: registers[0] := 0x11000;
    label000000d3: registers[0] := (registers[0]) + (0x30);
    label000000da: registers[1] := 0x11000;
    label000000e1: registers[1] := (registers[1]) + (0x30);
    label000000e7: #10 := (1) + (~ ((registers[0]) + (registers[1])));
    label000000eb: NF := #10[1:0];
    label000000ef: VF := ((registers[1][1:0]) & (~ (registers[0])[1:0])) & (~ ((#10[1:0]) | (~ ((registers[1][1:0]) & (~ ((~ (registers[0])[1:0]) & (#10[1:0])))))));
    label000000f3: ZF := (#10) == (0);
    label000000f7: CF := (((registers[1][1:0]) & (~ (registers[0])[1:0])) | (~ (registers[0])[1:0])) & (~ (((#10[1:0]) | (registers[1][1:0])) & (~ (#10[1:0]))));
    label00000106: #12 := ZF;
    label00000100: if (#12) {goto label000000fe};
    label000004e1: goto label000003ce;
    label000003ce: skip;
    label000003d3: registers[1] := 0x10000;
    label000003da: skip;
    label000003e6: #86 := (registers[1]) == (0);
    label000003e0: if (#86) {goto label000000fe};
    label000004e2: goto label000003e8;
    label000000fe: skip;
    label0000010b: ;
    label000003e8: skip;
}

