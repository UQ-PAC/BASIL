000004e4: program
000004d1: sub __cxa_finalize(__cxa_finalize_result)
000004e5: __cxa_finalize_result :: out u32 = X0

000003ab:
0000042f: X16 := 0x11000
00000436: X17 := mem[X16, el]:u64
0000043d: X16 := X16
00000443: call X17 with noreturn

000004d2: sub __libc_csu_fini(__libc_csu_fini_result)
000004e6: __libc_csu_fini_result :: out u32 = X0

000002dc:
000002e0: call LR with noreturn

000004d3: sub __libc_csu_init(__libc_csu_init_result)
000004e7: __libc_csu_init_result :: out u32 = X0

0000022a:
0000022f: mem := mem with [SP - 0x40, el]:u64 <- FP
00000234: mem := mem with [SP - 0x38, el]:u64 <- LR
00000239: SP := SP - 0x40
00000240: FP := SP
00000249: X20 := 0x10000
00000250: X20 := X20 + 0xDC0
00000259: X21 := 0x10000
00000260: X21 := X21 + 0xDB8
00000267: X20 := X20 - X21
0000026e: X22 := X0
00000277: X23 := X1
0000027e: X24 := X2
00000285: X20 := X20 >> 3
0000028b: LR := 0x79C
00000290: call @sub_598 with return %00000292

00000292:
0000029d: #58 := X20 = 0
00000297: when #58 goto %00000295
000004d4: goto %000002e3

000002e3:
000002e8: X19 := 0
000004d5: goto %000002ec

000002ec:
000002f1: X3 := mem[X21 + (X19 << 3), el]:u64
000002f8: X2 := X24
000002ff: X19 := X19 + 1
00000306: X1 := X23
0000030d: X0 := X22
00000313: LR := 0x7C0
00000317: call X3 with return %0000031a

0000031a:
0000031e: #78 := 1 + ~X19 + X20
00000322: NF := extract:63:63[#78]
00000326: VF := extract:63:63[X20] & extract:63:63[~X19] &
          ~extract:63:63[#78] | ~extract:63:63[X20] & ~extract:63:63[~X19] &
          extract:63:63[#78]
0000032a: ZF := #78 = 0
0000032e: CF := extract:63:63[X20] & extract:63:63[~X19] |
          extract:63:63[~X19] & ~extract:63:63[#78] | extract:63:63[X20] &
          ~extract:63:63[#78]
0000033c: #80 := ~ZF <> 0
00000336: when #80 goto %000002ec
000004d6: goto %00000295

00000295:
000002a3: X19 := mem[SP + 0x10, el]:u64
000002a8: X20 := mem[SP + 0x18, el]:u64
000002af: X21 := mem[SP + 0x20, el]:u64
000002b4: X22 := mem[SP + 0x28, el]:u64
000002bb: X23 := mem[SP + 0x30, el]:u64
000002c0: X24 := mem[SP + 0x38, el]:u64
000002c7: FP := mem[SP, el]:u64
000002cc: LR := mem[SP + 8, el]:u64
000002d1: SP := SP + 0x40
000002d7: call LR with noreturn

000004d7: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
000004e8: __libc_start_main_main :: in u64 = X0
000004e9: __libc_start_main_arg2 :: in u32 = X1
000004ea: __libc_start_main_arg3 :: in out u64 = X2
000004eb: __libc_start_main_auxv :: in out u64 = X3
000004ec: __libc_start_main_result :: out u32 = X0

00000095:
0000044a: X16 := 0x11000
00000451: X17 := mem[X16 + 8, el]:u64
00000458: X16 := X16 + 8
0000045e: call X17 with noreturn

000004d8: sub abort()


000000a0:
00000480: X16 := 0x11000
00000487: X17 := mem[X16 + 0x18, el]:u64
0000048e: X16 := X16 + 0x18
00000494: call X17 with noreturn

000004d9: sub call_weak_fn(call_weak_fn_result)
000004ed: call_weak_fn_result :: out u32 = X0

000000a4:
000000a9: X0 := 0x10000
000000b0: X0 := mem[X0 + 0xFC8, el]:u64
000000bd: #6 := X0 = 0
000000b7: when #6 goto %000000b5
000004da: goto %000003f1

000000b5:
000000c2: call LR with noreturn

000003f1:
000003f6: goto @__gmon_start__

000003f4:
00000465: X16 := 0x11000
0000046c: X17 := mem[X16 + 0x10, el]:u64
00000473: X16 := X16 + 0x10
00000479: call X17 with noreturn

000004db: sub main(main_argc, main_argv, main_result)
000004ee: main_argc :: in u32 = X0
000004ef: main_argv :: in out u64 = X1
000004f0: main_result :: out u32 = X0

000001b9:
000001be: mem := mem with [SP - 0x20, el]:u64 <- FP
000001c3: mem := mem with [SP - 0x18, el]:u64 <- LR
000001c8: SP := SP - 0x20
000001cf: FP := SP
000001d6: X0 := 1
000001dd: mem := mem with [SP + 0x1C, el]:u32 <- low:32[X0]
000001e4: X0 := 2
000001eb: mem := mem with [SP + 0x18, el]:u32 <- low:32[X0]
000001f2: X0 := pad:64[mem[SP + 0x1C, el]:u32]
000001f8: LR := 0x734
000001fd: call @plus_one with return %0000033e

0000033e:
00000343: mem := mem with [SP + 0x1C, el]:u32 <- low:32[X0]
0000034a: X0 := 0
00000351: FP := mem[SP, el]:u64
00000356: LR := mem[SP + 8, el]:u64
0000035b: SP := SP + 0x20
00000361: call LR with noreturn

000004dc: sub plus_one(plus_one_result)
000004f1: plus_one_result :: out u32 = X0

000001fb:
00000203: SP := SP - 0x10
0000020a: mem := mem with [SP + 0xC, el]:u32 <- low:32[X0]
00000211: X0 := pad:64[mem[SP + 0xC, el]:u32]
00000218: X0 := X0 + 1
0000021f: SP := SP + 0x10
00000225: call LR with noreturn

000004dd: sub sub_598(sub_598_result)
000004f2: sub_598_result :: out u32 = X0

0000028e:
0000049b: mem := mem with [SP - 0x10, el]:u64 <- FP
000004a0: mem := mem with [SP - 8, el]:u64 <- LR
000004a5: SP := SP - 0x10
000004ac: FP := SP
000004b2: LR := 0x5A4
000004b6: call @call_weak_fn with return %000004b8

000004b8:
000004bd: FP := mem[SP, el]:u64
000004c2: LR := mem[SP + 8, el]:u64
000004c7: SP := SP + 0x10
000004cd: call LR with noreturn

000004de: sub sub_610(sub_610_result)
000004f3: sub_610_result :: out u32 = X0

0000003a:
0000003f: FP := 0
00000046: LR := 0
0000004d: X5 := X0
00000054: X1 := mem[SP, el]:u64
0000005b: X2 := SP + 8
00000062: X6 := SP
00000069: X0 := 0x10000
00000070: X0 := mem[X0 + 0xFD8, el]:u64
00000077: X3 := 0x10000
0000007e: X3 := mem[X3 + 0xFD0, el]:u64
00000085: X4 := 0x10000
0000008c: X4 := mem[X4 + 0xFB0, el]:u64
00000092: LR := 0x644
00000097: call @__libc_start_main with return %00000099

00000099:
0000009d: LR := 0x648
000000a2: call @abort with return %000004df

000004df:
000004e0: call @call_weak_fn with noreturn

000004e1: sub sub_660(sub_660_result)
000004f4: sub_660_result :: out u32 = X0

000000c7:
000000cc: X0 := 0x11000
000000d3: X0 := X0 + 0x30
000000da: X1 := 0x11000
000000e1: X1 := X1 + 0x30
000000e7: #10 := 1 + ~X0 + X1
000000eb: NF := extract:63:63[#10]
000000ef: VF := extract:63:63[X1] & extract:63:63[~X0] & ~extract:63:63[#10]
          | ~extract:63:63[X1] & ~extract:63:63[~X0] & extract:63:63[#10]
000000f3: ZF := #10 = 0
000000f7: CF := extract:63:63[X1] & extract:63:63[~X0] | extract:63:63[~X0] &
          ~extract:63:63[#10] | extract:63:63[X1] & ~extract:63:63[#10]
00000106: #12 := ZF
00000100: when #12 goto %000000fe
000004e2: goto %000003d0

000003d0:
000003d5: X1 := 0x10000
000003dc: X1 := mem[X1 + 0xFB8, el]:u64
000003e8: #89 := X1 = 0
000003e2: when #89 goto %000000fe
000004e3: goto %000003ea

000000fe:
0000010b: call LR with noreturn

000003ea:
000003ee: call X1 with noreturn
