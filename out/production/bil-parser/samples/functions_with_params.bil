00000513: program
00000500: sub __cxa_finalize(__cxa_finalize_result)
00000514: __cxa_finalize_result :: out u32 = X0

000003da:
0000045e: X16 := 0x11000
00000465: X17 := mem[X16, el]:u64
0000046c: X16 := X16
00000472: call X17 with noreturn

00000501: sub __libc_csu_fini(__libc_csu_fini_result)
00000515: __libc_csu_fini_result :: out u32 = X0

000002f6:
000002fa: call LR with noreturn

00000502: sub __libc_csu_init(__libc_csu_init_result)
00000516: __libc_csu_init_result :: out u32 = X0

00000244:
00000249: mem := mem with [SP - 0x40, el]:u64 <- FP
0000024e: mem := mem with [SP - 0x38, el]:u64 <- LR
00000253: SP := SP - 0x40
0000025a: FP := SP
00000263: X20 := 0x10000
0000026a: X20 := X20 + 0xDC0
00000273: X21 := 0x10000
0000027a: X21 := X21 + 0xDB8
00000281: X20 := X20 - X21
00000288: X22 := X0
00000291: X23 := X1
00000298: X24 := X2
0000029f: X20 := X20 >> 3
000002a5: LR := 0x7B4
000002aa: call @sub_598 with return %000002ac

000002ac:
000002b7: #58 := X20 = 0
000002b1: when #58 goto %000002af
00000503: goto %000002fd

000002fd:
00000302: X19 := 0
00000504: goto %00000306

00000306:
0000030b: X3 := mem[X21 + (X19 << 3), el]:u64
00000312: X2 := X24
00000319: X19 := X19 + 1
00000320: X1 := X23
00000327: X0 := X22
0000032d: LR := 0x7D8
00000331: call X3 with return %00000334

00000334:
00000338: #78 := 1 + ~X19 + X20
0000033c: NF := extract:63:63[#78]
00000340: VF := extract:63:63[X20] & extract:63:63[~X19] &
          ~extract:63:63[#78] | ~extract:63:63[X20] & ~extract:63:63[~X19] &
          extract:63:63[#78]
00000344: ZF := #78 = 0
00000348: CF := extract:63:63[X20] & extract:63:63[~X19] |
          extract:63:63[~X19] & ~extract:63:63[#78] | extract:63:63[X20] &
          ~extract:63:63[#78]
00000356: #80 := ~ZF <> 0
00000350: when #80 goto %00000306
00000505: goto %000002af

000002af:
000002bd: X19 := mem[SP + 0x10, el]:u64
000002c2: X20 := mem[SP + 0x18, el]:u64
000002c9: X21 := mem[SP + 0x20, el]:u64
000002ce: X22 := mem[SP + 0x28, el]:u64
000002d5: X23 := mem[SP + 0x30, el]:u64
000002da: X24 := mem[SP + 0x38, el]:u64
000002e1: FP := mem[SP, el]:u64
000002e6: LR := mem[SP + 8, el]:u64
000002eb: SP := SP + 0x40
000002f1: call LR with noreturn

00000506: sub __libc_start_main(__libc_start_main_main, __libc_start_main_arg2, __libc_start_main_arg3, __libc_start_main_auxv, __libc_start_main_result)
00000517: __libc_start_main_main :: in u64 = X0
00000518: __libc_start_main_arg2 :: in u32 = X1
00000519: __libc_start_main_arg3 :: in out u64 = X2
0000051a: __libc_start_main_auxv :: in out u64 = X3
0000051b: __libc_start_main_result :: out u32 = X0

00000095:
00000479: X16 := 0x11000
00000480: X17 := mem[X16 + 8, el]:u64
00000487: X16 := X16 + 8
0000048d: call X17 with noreturn

00000507: sub abort()


000000a0:
000004af: X16 := 0x11000
000004b6: X17 := mem[X16 + 0x18, el]:u64
000004bd: X16 := X16 + 0x18
000004c3: call X17 with noreturn

00000508: sub call_weak_fn(call_weak_fn_result)
0000051c: call_weak_fn_result :: out u32 = X0

000000a4:
000000a9: X0 := 0x10000
000000b0: X0 := mem[X0 + 0xFC8, el]:u64
000000bd: #6 := X0 = 0
000000b7: when #6 goto %000000b5
00000509: goto %00000420

000000b5:
000000c2: call LR with noreturn

00000420:
00000425: goto @__gmon_start__

00000423:
00000494: X16 := 0x11000
0000049b: X17 := mem[X16 + 0x10, el]:u64
000004a2: X16 := X16 + 0x10
000004a8: call X17 with noreturn

0000050a: sub main(main_argc, main_argv, main_result)
0000051d: main_argc :: in u32 = X0
0000051e: main_argv :: in out u64 = X1
0000051f: main_result :: out u32 = X0

000001b9:
000001be: mem := mem with [SP - 0x10, el]:u64 <- FP
000001c3: mem := mem with [SP - 8, el]:u64 <- LR
000001c8: SP := SP - 0x10
000001cf: FP := SP
000001d6: X0 := 0x11000
000001dd: X0 := X0 + 0x34
000001e4: X1 := 1
000001eb: mem := mem with [X0, el]:u32 <- low:32[X1]
000001f2: X0 := 0x11000
000001f9: X0 := X0 + 0x34
00000200: X0 := pad:64[mem[X0, el]:u32]
00000206: LR := 0x73C
0000020b: call @plus_one with return %00000358

00000358:
0000035d: X1 := X0
00000364: X0 := 0x11000
0000036b: X0 := X0 + 0x38
00000372: mem := mem with [X0, el]:u32 <- low:32[X1]
00000379: X0 := 0
00000380: FP := mem[SP, el]:u64
00000385: LR := mem[SP + 8, el]:u64
0000038a: SP := SP + 0x10
00000390: call LR with noreturn

0000050b: sub plus_one(plus_one_result)
00000520: plus_one_result :: out u32 = X0

00000209:
00000211: SP := SP - 0x20
00000218: mem := mem with [SP + 0xC, el]:u32 <- low:32[X0]
0000021f: X0 := pad:64[mem[SP + 0xC, el]:u32]
00000226: X0 := X0 + 1
0000022d: mem := mem with [SP + 0x1C, el]:u32 <- low:32[X0]
00000234: X0 := pad:64[mem[SP + 0x1C, el]:u32]
0000023b: SP := SP + 0x20
00000241: call LR with noreturn

0000050c: sub sub_598(sub_598_result)
00000521: sub_598_result :: out u32 = X0

000002a8:
000004ca: mem := mem with [SP - 0x10, el]:u64 <- FP
000004cf: mem := mem with [SP - 8, el]:u64 <- LR
000004d4: SP := SP - 0x10
000004db: FP := SP
000004e1: LR := 0x5A4
000004e5: call @call_weak_fn with return %000004e7

000004e7:
000004ec: FP := mem[SP, el]:u64
000004f1: LR := mem[SP + 8, el]:u64
000004f6: SP := SP + 0x10
000004fc: call LR with noreturn

0000050d: sub sub_610(sub_610_result)
00000522: sub_610_result :: out u32 = X0

0000003a:
0000003f: FP := 0
00000046: LR := 0
0000004d: X5 := X0
00000054: X1 := mem[SP, el]:u64
0000005b: X2 := SP + 8
00000062: X6 := SP
00000069: X0 := 0x10000
00000070: X0 := mem[X0 + 0xFD8, el]:u64
00000077: X3 := 0x10000
0000007e: X3 := mem[X3 + 0xFD0, el]:u64
00000085: X4 := 0x10000
0000008c: X4 := mem[X4 + 0xFB0, el]:u64
00000092: LR := 0x644
00000097: call @__libc_start_main with return %00000099

00000099:
0000009d: LR := 0x648
000000a2: call @abort with return %0000050e

0000050e:
0000050f: call @call_weak_fn with noreturn

00000510: sub sub_660(sub_660_result)
00000523: sub_660_result :: out u32 = X0

000000c7:
000000cc: X0 := 0x11000
000000d3: X0 := X0 + 0x30
000000da: X1 := 0x11000
000000e1: X1 := X1 + 0x30
000000e7: #10 := 1 + ~X0 + X1
000000eb: NF := extract:63:63[#10]
000000ef: VF := extract:63:63[X1] & extract:63:63[~X0] & ~extract:63:63[#10]
          | ~extract:63:63[X1] & ~extract:63:63[~X0] & extract:63:63[#10]
000000f3: ZF := #10 = 0
000000f7: CF := extract:63:63[X1] & extract:63:63[~X0] | extract:63:63[~X0] &
          ~extract:63:63[#10] | extract:63:63[X1] & ~extract:63:63[#10]
00000106: #12 := ZF
00000100: when #12 goto %000000fe
00000511: goto %000003ff

000003ff:
00000404: X1 := 0x10000
0000040b: X1 := mem[X1 + 0xFB8, el]:u64
00000417: #95 := X1 = 0
00000411: when #95 goto %000000fe
00000512: goto %00000419

000000fe:
0000010b: call LR with noreturn

00000419:
0000041d: call X1 with noreturn
